/*
 * PI_Controller.c
 *
 *  Created on: 30 Jun 2022
 *      Author: lukas
 */
#include "PI_Controller.h"
#include "Globals.h"

//#### set
// crretn best on motor 10 iq 50Hz wbw
PI_param Iq_param = {.P = 0.28, .I = 232.0, .MaxLimit =  100, .MinLimit = -100, .Output = 0.0, .Deviation_old = 0.0, .Deviation_old2 = 0.0};
PI_param Id_param = {.P = 0.28, .I = 232.0, .MaxLimit =  100, .MinLimit = -100, .Output = 0.0, .Deviation_old = 0.0, .Deviation_old2 = 0.0};


PI_param omega_param = {.P = 0.2, .I = 0.08, .MaxLimit =  2, .MinLimit = -2, .Output = 0.0, .Deviation_old = 0.0, .Deviation_old2 = 0.0};
void omega_param_selctor(uint8_t Motor_num){
	 switch(Motor_num)
	     {
	         case 6:
	        	  omega_param.P = 0.2859;
	        	  omega_param.I = 0.1289; // M6 wbw 3Hz
	        	break;
	         case 10:
	        	 PI_param omega_param = {.P = 0.3949, .I = 0.1619, .MaxLimit =  2, .MinLimit = -2, .Output = 0.0, .Deviation_old = 0.0, .Deviation_old2 = 0.0}; //M10 3Hz wbw
	        	 break;
	         default:
	        	 PI_param omega_param = {.P = 0.2, .I = 0.08, .MaxLimit =  2, .MinLimit = -2, .Output = 0.0, .Deviation_old = 0.0, .Deviation_old2 = 0.0};// less agresive vaules
	           break;
	    }
}


float T_cyc = 1.0 /5000.0; //Tcyc sample correspond to control update rate to PI controler for I

// PID Controller
float PI_Controller(float SetPoint,float ActValue,PI_param *param){

	float Deviation = SetPoint - ActValue;
	float temp1, temp2;

	 temp1 = param->P*Deviation;
	 temp2 = temp1 + param->I * T_cyc * Deviation + param->Output_z;

	 if (temp2 >= param->MaxLimit){
		 temp2 = param->MaxLimit;
	 }
	 else if (temp2 < param->MinLimit){
		 temp2 = param->MinLimit;
	 }

	 param->Output_z = temp2 - temp1;

	 param->Output = temp2;

	return param->Output;

}

