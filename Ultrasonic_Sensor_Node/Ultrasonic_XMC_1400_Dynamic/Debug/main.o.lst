   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,6
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "main.c"
  14              	 .text
  15              	.Ltext0:
  16              	 .cfi_sections .debug_frame
  17              	 .section .text.XMC_GPIO_GetInput,"ax",%progbits
  18              	 .align 2
  19              	 .code 16
  20              	 .thumb_func
  22              	XMC_GPIO_GetInput:
  23              	.LFB125:
  24              	 .file 1 "C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc/xmc_gpio.h"
   1:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** /**
   2:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * @file xmc_gpio.h
   3:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * @date 2015-06-20
   4:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   5:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * @cond
   6:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *****************************************************************************
   7:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   9:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * All rights reserved.
  11:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  12:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  14:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * Permission is hereby granted, free of charge, to any person or organization
  15:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * obtaining a copy of the software and accompanying documentation covered by
  16:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * do so, all subject to the following:
  20:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  21:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * The copyright notices in the Software and this entire statement, including
  22:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * the above license grant, this restriction and the following disclaimer,
  23:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * must be included in all copies of the Software, in whole or in part, and
  24:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * all derivative works of the Software, unless such copies or derivative
  25:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * works are solely in the form of machine-executable object code generated by
  26:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * a source language processor.
  27:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  28:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * DEALINGS IN THE SOFTWARE.
  35:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  36:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * To improve the quality of the software, users are encouraged to share
  37:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * at XMCSupport@infineon.com.
  39:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *****************************************************************************
  40:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  41:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * Change History
  42:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * --------------
  43:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  44:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-02-20:
  45:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Initial draft<br>
  46:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Documentation improved <br>
  47:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  48:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-06-20:
  49:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  50:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  51:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * @endcond
  52:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  53:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  54:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
  55:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** #ifndef XMC_GPIO_H
  56:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_H
  57:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
  58:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  59:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * HEADER FILES
  60:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  61:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
  62:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc_common.h"
  63:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
  64:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  65:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup XMClib XMC Peripheral Library
  66:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * @{
  67:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  68:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
  69:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  70:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup GPIO
  71:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * @brief General Purpose Input Output (GPIO) driver for the XMC microcontroller family.
  72:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  73:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * GPIO driver provide a generic and very flexible software interface for all standard digital I/O 
  74:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * Each port slice has individual interfaces for the operation as General Purpose I/O and it furthe
  75:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * connectivity to the on-chip periphery and the control for the pad characteristics.
  76:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  77:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * The driver is divided into Input and Output mode.
  78:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  79:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * Input mode features:
  80:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Configuration structure XMC_GPIO_CONFIG_t and initialization function XMC_GPIO_Init()
  81:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of weak pull-up or pull-down device. Configuration structure XMC_GPIO_MO
  82:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
  83:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of input hysteresis. XMC_GPIO_SetInputHysteresis()
  84:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  85:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  86:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  87:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * Output mode features:
  88:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of push pull/open drain and Alternate output. Configuration structure XM
  89:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
  90:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of pad driver strength. Configuration structure XMC_GPIO_OUTPUT_STRENGTH
  91:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  92:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  93:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of initial output level. Configuration structure XMC_GPIO_OUTPUT_LEVEL_t
  94:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  95:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *@{
  96:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  97:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
  98:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  99:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * MACROS
 100:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 101:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
 102:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Pos PORT0_IOCR0_PC0_Pos
 103:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Msk PORT0_IOCR0_PC0_Msk
 104:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
 105:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Size 				(8U)
 106:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
 107:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
 108:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_OUTPUT_LEVEL(level) ((level == XMC_GPIO_OUTPUT_LEVEL_LOW) || \
 109:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****                                             (level == XMC_GPIO_OUTPUT_LEVEL_HIGH))
 110:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
 111:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_HWCTRL(hwctrl) ((hwctrl == XMC_GPIO_HWCTRL_DISABLED) || \
 112:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL1) || \
 113:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL2))
 114:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
 115:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 116:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * ENUMS
 117:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 118:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
 119:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
 120:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 121:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines output level of a pin. Use type \a XMC_GPIO_OUTPUT_LEVEL_t for this enum.
 122:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 123:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_OUTPUT_LEVEL
 124:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** {
 125:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_LOW  = 0x10000U, /**<  Reset bit */
 126:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_HIGH = 0x1U, 	/**< Set bit  */
 127:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_OUTPUT_LEVEL_t;
 128:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
 129:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 130:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines direct hardware control characteristics of the pin . Use type \a XMC_GPIO_HWCTRL_t for t
 131:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 132:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_HWCTRL
 133:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** {
 134:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_DISABLED     = 0x0U, /**<  Software control only */
 135:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL1  = 0x1U, /**<  HWI0/HWO0 control path can override the software confi
 136:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL2  = 0x2U  /**<  HWI1/HWO1 control path can override the software confi
 137:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_HWCTRL_t;
 138:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
 139:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 140:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * DEVICE FAMILY EXTENSIONS
 141:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 142:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
 143:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** #if UC_FAMILY == XMC1
 144:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc1_gpio.h"
 145:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** #elif UC_FAMILY == XMC4
 146:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc4_gpio.h"
 147:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** #else
 148:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** #error "xmc_gpio.h: family device not supported"
 149:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 150:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
 151:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 152:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * API PROTOTYPES
 153:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 154:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
 155:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** #ifdef __cplusplus
 156:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** extern "C" {
 157:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 158:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
 159:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
 160:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 161:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	  Constant pointer pointing to GPIO port, to access port registers like Pn_OUT,Pn_O
 162:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	  Port pin number.
 163:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  config GPIO configuration data structure. Refer data structure @ref XMC_GPIO_CONFIG_t fo
 164:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 165:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 166:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 167:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 168:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
 169:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,hysteresis, push pull
 170:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for a selected \a po
 171:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * \a config provides selected I/O settings. It configures hardware registers Pn_IOCR,Pn_OUT, Pn_OM
 172:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 173:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
 174:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,push pull /open drain
 175:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for selected \a port
 176:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * It configures hardware registers Pn_IOCR,Pn_OUT,Pn_OMR,Pn_PDISC and Pn_PDR.\n
 177:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 178:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 179:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 180:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 181:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 182:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 183:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * This API is called in definition of DAVE_init by code generation and therefore should not be exp
 184:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * for the normal operation. Use other APIs only after DAVE_init is called successfully (returns DA
 185:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 186:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 187:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 188:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
 189:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
 190:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_Init(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_CONFIG_t *const c
 191:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
 192:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 193:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 194:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	Constant pointer pointing to GPIO port, to access hardware register Pn_IOCR.
 195:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 196:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  mode input / output functionality selection. Refer @ref XMC_GPIO_MODE_t for valid values
 197:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 198:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 199:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 200:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 201:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets digital input and output driver functionality and characteristics of a GPIO port pin. It co
 202:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * registers Pn_IOCR. \a mode is initially configured during initialization in XMC_GPIO_Init(). Cal
 203:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * the port direction functionality as needed later in the program.
 204:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 205:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 206:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 207:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 208:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 209:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
 210:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_SetMode(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_MODE_t mode);
 211:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
 212:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
 213:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 214:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 215:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	 Constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 216:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	 Port pin number.
 217:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  level output level selection. Refer @ref XMC_GPIO_OUTPUT_LEVEL_t for valid values.
 218:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 219:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 220:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 221:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 222:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * Set port pin output level to high or low.It configures hardware registers Pn_OMR.\a level is ini
 223:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * configured during initialization in XMC_GPIO_Init(). Call this API to alter output level as need
 224:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 225:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 226:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 227:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 228:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 229:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 230:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 231:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 232:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
 233:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
 234:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLevel(XMC_GPIO_PORT_t *const port, const uint8_t pin, const 
 235:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** {
 236:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 237:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid output level", XMC_GPIO_CHECK_OUTPUT_LEVEL(level));
 238:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
 239:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)level << pin;
 240:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** }
 241:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
 242:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
 243:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 244:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 245:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 246:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 247:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 248:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 249:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 250:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *  Sets port pin output to high. It configures hardware registers Pn_OMR.
 251:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 252:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *  \par<b>Related APIs:</b><BR>
 253:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputLow()
 254:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 255:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 256:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().\n
 257:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 258:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 259:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 260:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
 261:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputHigh(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 262:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** {
 263:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputHigh: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 264:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
 265:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)0x1U << pin;
 266:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** }
 267:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
 268:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 269:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 270:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 271:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	port pin number.
 272:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 273:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return  None
 274:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 275:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Description:</b><br>
 276:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets port pin output to low. It configures hardware registers Pn_OMR.\n
 277:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 278:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>>
 279:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh()
 280:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 281:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Note:</b><br>
 282:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 283:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 284:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 285:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 286:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
 287:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLow(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 288:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** {
 289:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLow: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 290:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
 291:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10000U << pin;
 292:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** }
 293:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
 294:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 295:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 296:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 297:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param pin  port pin number.
 298:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 299:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 300:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 301:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 302:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * Configures port pin output to Toggle. It configures hardware registers Pn_OMR.
 303:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 304:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 305:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 306:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 307:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 308:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode(). Regis
 309:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * and does not contain any flip-flop. A read action delivers the value of 0.
 310:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 311:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 312:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
 313:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_ToggleOutput(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 314:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** {
 315:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_ToggleOutput: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 316:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
 317:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10001U << pin;
 318:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** }
 319:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
 320:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 321:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 322:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param port constant pointer pointing to GPIO port, to access hardware register Pn_IN.
 323:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param pin  Port pin number.
 324:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 325:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return uint32_t pin logic level status.
 326:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 327:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Description:</b><br>
 328:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * Reads the Pn_IN register and returns the current logical value at the GPIO pin.
 329:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 330:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 331:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * None
 332:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 333:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 334:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to input mode using XMC_GPIO_SetMode().
 335:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 336:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 337:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
 338:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE uint32_t XMC_GPIO_GetInput(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 339:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** {
  25              	 .loc 1 339 0
  26              	 .cfi_startproc
  27 0000 80B5     	 push {r7,lr}
  28              	.LCFI0:
  29              	 .cfi_def_cfa_offset 8
  30              	 .cfi_offset 7,-8
  31              	 .cfi_offset 14,-4
  32 0002 82B0     	 sub sp,sp,#8
  33              	.LCFI1:
  34              	 .cfi_def_cfa_offset 16
  35 0004 00AF     	 add r7,sp,#0
  36              	.LCFI2:
  37              	 .cfi_def_cfa_register 7
  38 0006 7860     	 str r0,[r7,#4]
  39 0008 0A1C     	 mov r2,r1
  40 000a FB1C     	 add r3,r7,#3
  41 000c 1A70     	 strb r2,[r3]
 340:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_GetInput: Invalid port", XMC_GPIO_CHECK_PORT(port));
 341:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
 342:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****   return (((port->IN) >> pin) & 0x1U);
  42              	 .loc 1 342 0
  43 000e 7B68     	 ldr r3,[r7,#4]
  44 0010 5A6A     	 ldr r2,[r3,#36]
  45 0012 FB1C     	 add r3,r7,#3
  46 0014 1B78     	 ldrb r3,[r3]
  47 0016 DA40     	 lsr r2,r2,r3
  48 0018 131C     	 mov r3,r2
  49 001a 0122     	 mov r2,#1
  50 001c 1340     	 and r3,r2
 343:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** }
  51              	 .loc 1 343 0
  52 001e 181C     	 mov r0,r3
  53 0020 BD46     	 mov sp,r7
  54 0022 02B0     	 add sp,sp,#8
  55              	 
  56 0024 80BD     	 pop {r7,pc}
  57              	 .cfi_endproc
  58              	.LFE125:
  60 0026 C046     	 .section .text.PIN_INTERRUPT_GetPinValue,"ax",%progbits
  61              	 .align 2
  62              	 .code 16
  63              	 .thumb_func
  65              	PIN_INTERRUPT_GetPinValue:
  66              	.LFB136:
  67              	 .file 2 "C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT/pin_interrupt.h"
   1:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
   2:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @file pin_interrupt.h
   3:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @date 2021-01-08
   4:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
   5:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * NOTE:
   6:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
   8:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @cond
   9:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
  10:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * PIN_INTERRUPT v4.0.4 - The PIN_INTERRUPT APP invokes user interrupt handler in a response to ris
  11:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                        edge event signal on a pin.
  12:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
  13:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * Copyright (c) 2016-2020, Infineon Technologies AG
  14:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * All rights reserved.                        
  15:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                                             
  16:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  17:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * following conditions are met:   
  18:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                                                                              
  19:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  20:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   disclaimer.                        
  21:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * 
  22:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  23:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   disclaimer in the documentation and/or other materials provided with the distribution.     
  24:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                         
  25:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  26:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   products derived from this software without specific prior written permission. 
  27:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                                             
  28:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  29:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  30:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  31:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  32:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  33:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  34:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.    
  35:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                                                                              
  36:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  37:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * with Infineon Technologies AG (dave@infineon.com).         
  38:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
  39:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
  40:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * Change History
  41:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * --------------
  42:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * 2015-12-03:
  43:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     - Initial version for DAVEv4. <BR>
  44:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * 
  45:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * 2021-01-08:
  46:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     - Modified check for minimum XMCLib version
  47:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
  48:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @endcond 
  49:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
  50:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
  51:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  52:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #ifndef PIN_INTERRUPT_H
  53:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #define PIN_INTERRUPT_H
  54:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  55:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**************************************************************************************************
  56:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * HEADER FILES                                                                                    
  57:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
  58:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #if (UC_SERIES == XMC14)
  59:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #include "xmc_scu.h"
  60:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #endif
  61:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #include "xmc_gpio.h"
  62:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #include "xmc_eru.h"
  63:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  64:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #include "DAVE_Common.h"
  65:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #include "pin_interrupt_conf.h"
  66:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  67:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**************************************************************************************************
  68:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * MACROS                                                                                          
  69:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
  70:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #define PIN_INTERRUPT_XMC_LIB_MAJOR_VERSION 2
  71:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #define PIN_INTERRUPT_XMC_LIB_MINOR_VERSION 1
  72:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #define PIN_INTERRUPT_XMC_LIB_PATCH_VERSION 6
  73:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  74:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #if !((XMC_LIB_MAJOR_VERSION > PIN_INTERRUPT_XMC_LIB_MAJOR_VERSION) ||\
  75:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****       ((XMC_LIB_MAJOR_VERSION == PIN_INTERRUPT_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION > P
  76:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****       ((XMC_LIB_MAJOR_VERSION == PIN_INTERRUPT_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION == 
  77:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #error "PIN_INTERRUPT requires XMC Peripheral Library v2.1.6 or higher"
  78:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #endif
  79:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  80:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
  81:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @ingroup App_publicparam
  82:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @{
  83:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
  84:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
  85:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  @brief Initialization data structure for PIN_INTERRUPT APP
  86:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
  87:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  88:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
  89:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @}
  90:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
  91:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  92:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  /*************************************************************************************************
  93:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * ENUMS
  94:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
  95:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
  96:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @ingroup PIN_INTERRUPT_enumerations
  97:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @{
  98:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
  99:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /*
 100:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief enumeration for PIN_INTERRUPT APP
 101:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 102:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** typedef enum PIN_INTERRUPT_STATUS
 103:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
 104:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_STATUS_SUCCESS = 0U,        /**<APP initialization is success */
 105:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_STATUS_FAILURE = 1U         /**<APP initialization is failure */
 106:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** } PIN_INTERRUPT_STATUS_t;
 107:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 108:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 109:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 110:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * Defines trigger edge for the event generation by ETLx (Event Trigger Logic, x = [0 to 3]) unit, 
 111:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * from ERSx(Event request source, x = [0 to 3]) unit.
 112:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 113:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** typedef enum PIN_INTERRUPT_EDGE
 114:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
 115:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_EDGE_NONE = 0U, /**< no event enabled */
 116:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_EDGE_RISING = 1U,   /**< detection of rising edge generates the event */
 117:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_EDGE_FALLING = 2U,  /**< detection of falling edge generates the event */
 118:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_EDGE_BOTH = 3U      /**< detection of either edges generates the event */
 119:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** } PIN_INTERRUPT_EDGE_t;
 120:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 121:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @}
 122:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 123:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 124:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**************************************************************************************************
 125:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * DATA STRUCTURES
 126:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** ***************************************************************************************************
 127:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 128:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @ingroup PIN_INTERRUPT_datastructures
 129:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @{
 130:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 131:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 132:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 133:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief Configuration structure for PIN_INTERRUPT APP
 134:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 135:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** typedef struct PIN_INTERRUPT
 136:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
 137:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_ERU_t *eru;  /**< Mapped ERU module */
 138:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_GPIO_PORT_t *port;  /**< Mapped port number */
 139:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_GPIO_CONFIG_t gpio_config;   /**< Initializes the input pin characteristics */
 140:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_ERU_ETL_CONFIG_t etl_config;  /**< reference to ERUx_ETLy (x = [0..1], y = [0..4])
 141:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****                                                       module configuration */
 142:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #if (UC_SERIES == XMC14)
 143:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_SCU_IRQCTRL_t irqctrl;  /**< selects the interrupt source for a NVIC interrupt node*/
 144:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #endif
 145:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   IRQn_Type IRQn;       /**< Mapped NVIC Node */
 146:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   uint8_t irq_priority; 	  /**< Node Interrupt Priority */
 147:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #if (UC_FAMILY == XMC4)
 148:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   uint8_t irq_subpriority;  /**< Node Interrupt SubPriority only valid for XMC4x */
 149:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #endif
 150:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   uint8_t etl; /*< ETLx channel (x = [0..3])*/
 151:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   uint8_t ogu; /*< OGUy channel (y = [0..3])*/
 152:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   uint8_t pin; /*< Mapped pin number */
 153:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   bool enable_at_init;  /**< Interrupt enable for Node at initialization*/
 154:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** } PIN_INTERRUPT_t;
 155:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 156:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @}
 157:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 158:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 159:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #ifdef __cplusplus
 160:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** extern "C" {
 161:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #endif
 162:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**************************************************************************************************
 163:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * API Prototypes
 164:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
 165:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 166:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @ingroup PIN_INTERRUPT_apidoc
 167:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @{
 168:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 169:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 170:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief Get PIN_INTERRUPT APP version
 171:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @return DAVE_APP_VERSION_t APP version information (major, minor and patch number)
 172:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 173:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * \par<b>Description: </b><br>
 174:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * The function can be used to check application software compatibility with a
 175:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * specific version of the APP.
 176:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 177:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * \par<b>Example Usage:</b><br>
 178:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 179:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @code
 180:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * #include "DAVE.h"
 181:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 182:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * int main(void) 
 183:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * {
 184:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   DAVE_STATUS_t init_status;
 185:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   DAVE_APP_VERSION_t version;
 186:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 187:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   // Initialize PIN_INTERRUPT APP:
 188:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   // PIN_INTERRUPT_Init() is called from within DAVE_Init().
 189:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   init_status = DAVE_Init();
 190:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 191:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   if (DAVE_STATUS_SUCCESS == init_status)
 192:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   {
 193:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     version = PIN_INTERRUPT_GetAppVersion();
 194:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     if (version.major != 4U) {
 195:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *       // Probably, not the right version.
 196:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     }
 197:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   }
 198:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 199:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   // More code here
 200:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   while(1)
 201:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   {
 202:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   }
 203:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   return (1);
 204:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * }
 205:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @endcode<BR>
 206:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 207:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** DAVE_APP_VERSION_t PIN_INTERRUPT_GetAppVersion(void);
 208:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 209:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 210:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief Initializes a PIN_INTERRUPT APP instance
 211:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @param handle Pointer pointing to APP data structure. Refer @ref PIN_INTERRUPT_t for details.
 212:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @return
 213:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *            PIN_INTERRUPT_STATUS_SUCCESS             : if initialization is successful\n
 214:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *            PIN_INTERRUPT_STATUS_FAILURE             : if initialization is failed
 215:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 216:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * \par<b>Description:</b><br>
 217:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * PIN_INTERRUPT_Init API is called during initialization of DAVE APPS. This API Initializes input 
 218:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * ERU and OGU hardware module initialization, Configures NVIC node and its priority in order to ge
 219:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 220:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * \par<b>Example Usage:</b><br>
 221:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 222:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @code
 223:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * #include "DAVE.h"
 224:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 225:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * int main(void)
 226:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * {
 227:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   DAVE_STATUS_t status;
 228:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 229:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   status = DAVE_Init();  //  PIN_INTERRUPT_Init API is called during initialization of DAVE APPS
 230:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   if (DAVE_STATUS_SUCCESS == status)
 231:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   {
 232:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     // user code
 233:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 234:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     while(1)
 235:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     {
 236:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 237:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     }
 238:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   }
 239:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   return (1);
 240:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * }
 241:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 242:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @endcode<BR>
 243:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 244:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** PIN_INTERRUPT_STATUS_t PIN_INTERRUPT_Init(const PIN_INTERRUPT_t *const handle);
 245:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 246:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 247:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief Enables the IRQ.
 248:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @param handle Pointer pointing to APP data structure. Refer @ref PIN_INTERRUPT_t for details.
 249:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @return None
 250:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * <BR><P ALIGN="LEFT"><B>Example:</B>
 251:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 252:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @code
 253:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  #include "DAVE.h"
 254:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 255:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  int main(void)
 256:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  {
 257:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    DAVE_STATUS_t status;
 258:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 259:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    status = DAVE_Init();  //  PIN_INTERRUPT_Init API is called during initialization of DAVE APP
 260:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    if (DAVE_STATUS_SUCCESS == status)
 261:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    {
 262:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *      // user code
 263:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 264:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *      PIN_INTERRUPT_Enable(&PIN_INTERRUPT_0);
 265:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *      while(1)
 266:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *      {}
 267:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    }
 268:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 269:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    return (1);
 270:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  }
 271:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @endcode<BR> </p>
 272:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 273:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** __STATIC_INLINE void PIN_INTERRUPT_Enable(const PIN_INTERRUPT_t *const handle)
 274:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
 275:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_ASSERT("PIN_INTERRUPT_Enable: Handler null pointer", handle != NULL);
 276:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   NVIC_EnableIRQ(handle->IRQn);
 277:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** }
 278:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 279:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 280:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief Disables the IRQ.
 281:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @param handle Pointer pointing to APP data structure. Refer @ref PIN_INTERRUPT_t for details.
 282:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @return None
 283:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * <BR><P ALIGN="LEFT"><B>Example:</B>
 284:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 285:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @code
 286:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  #include "DAVE.h"
 287:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 288:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  int main(void)
 289:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  {
 290:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 291:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    DAVE_STATUS_t status;
 292:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 293:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    status = DAVE_Init();  //  PIN_INTERRUPT_Init API is called during initialization of DAVE APP
 294:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    if(DAVE_STATUS_SUCCESS == status)
 295:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    {
 296:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *      // user code
 297:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 298:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *      PIN_INTERRUPT_Disable(&PIN_INTERRUPT_0);
 299:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *      while(1)
 300:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *      {}
 301:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    }
 302:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 303:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    return (1);
 304:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 305:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  }
 306:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @endcode<BR> </p>
 307:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 308:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** __STATIC_INLINE void PIN_INTERRUPT_Disable(const PIN_INTERRUPT_t *const handle)
 309:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
 310:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_ASSERT("PIN_INTERRUPT_Disable: Handler null pointer", handle != NULL);
 311:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   NVIC_DisableIRQ(handle->IRQn);
 312:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** }
 313:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 314:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 315:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * @brief Read input level of port pin.
 316:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * @param handle Pointer pointing to APP data structure. Refer @ref PIN_INTERRUPT_t for details.
 317:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * @return uint32_t input logic level. Range:0-1
 318:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *
 319:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * \par<b>Description:</b><br>
 320:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * This function reads the Pn_IN register and returns the current logical value at the GPIO pin.
 321:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *
 322:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *
 323:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * Example Usage:
 324:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * @code
 325:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * #include "DAVE.h"//Declarations from DAVE Code Generation (includes SFR declaration)
 326:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *
 327:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * int main(void)
 328:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * {
 329:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   DAVE_STATUS_t status;
 330:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   uint32_t pin_status;
 331:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   status = DAVE_Init();   // (DAVE_STATUS_t)PIN_INTERRUPT_Init(&PIN_INTERRUPT_0) is called within
 332:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   
 333:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   if (status == DAVE_STATUS_SUCCESS)
 334:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   {
 335:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 336:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   }
 337:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   else
 338:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   {
 339:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 340:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     while(1U)
 341:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     {
 342:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     }
 343:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   }
 344:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 345:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   while(1U)
 346:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   {
 347:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     pin_status = PIN_INTERRUPT_GetPinValue(&PIN_INTERRUPT_0);
 348:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     if (pin_status == 1)
 349:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     {
 350:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *       // Add application code here
 351:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     }
 352:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     else
 353:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     {
 354:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *       // Add application code here
 355:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     }
 356:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   }
 357:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   return (1);
 358:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * }
 359:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *  @endcode
 360:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** */
 361:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** __STATIC_INLINE uint32_t PIN_INTERRUPT_GetPinValue(const PIN_INTERRUPT_t *const handle)
 362:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
  68              	 .loc 2 362 0
  69              	 .cfi_startproc
  70 0000 80B5     	 push {r7,lr}
  71              	.LCFI3:
  72              	 .cfi_def_cfa_offset 8
  73              	 .cfi_offset 7,-8
  74              	 .cfi_offset 14,-4
  75 0002 82B0     	 sub sp,sp,#8
  76              	.LCFI4:
  77              	 .cfi_def_cfa_offset 16
  78 0004 00AF     	 add r7,sp,#0
  79              	.LCFI5:
  80              	 .cfi_def_cfa_register 7
  81 0006 7860     	 str r0,[r7,#4]
 363:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_ASSERT("PIN_INTERRUPT_GetPinValue: Handler null pointer", handle != NULL);
 364:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   return (XMC_GPIO_GetInput(handle->port, handle->pin));
  82              	 .loc 2 364 0
  83 0008 7B68     	 ldr r3,[r7,#4]
  84 000a 5A68     	 ldr r2,[r3,#4]
  85 000c 7B68     	 ldr r3,[r7,#4]
  86 000e 9B7F     	 ldrb r3,[r3,#30]
  87 0010 101C     	 mov r0,r2
  88 0012 191C     	 mov r1,r3
  89 0014 FFF7FEFF 	 bl XMC_GPIO_GetInput
  90 0018 031C     	 mov r3,r0
 365:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** }
  91              	 .loc 2 365 0
  92 001a 181C     	 mov r0,r3
  93 001c BD46     	 mov sp,r7
  94 001e 02B0     	 add sp,sp,#8
  95              	 
  96 0020 80BD     	 pop {r7,pc}
  97              	 .cfi_endproc
  98              	.LFE136:
 100              	 .global CAN_OK
 101 0022 C046     	 .section .bss.CAN_OK,"aw",%nobits
 104              	CAN_OK:
 105 0000 00       	 .space 1
 106              	 .comm init_status,1,1
 107              	 .global RESET_IN_10us_AFTER_SUCSSES
 108              	 .section .data.RESET_IN_10us_AFTER_SUCSSES,"aw",%progbits
 109              	 .align 1
 112              	RESET_IN_10us_AFTER_SUCSSES:
 113 0000 0A00     	 .short 10
 114              	 .global RESET_IN_10us_AFTER_ECHO_LOW_FAIL
 115              	 .section .data.RESET_IN_10us_AFTER_ECHO_LOW_FAIL,"aw",%progbits
 116              	 .align 1
 119              	RESET_IN_10us_AFTER_ECHO_LOW_FAIL:
 120 0000 F401     	 .short 500
 121              	 .global MIN_RESET
 122              	 .section .data.MIN_RESET,"aw",%progbits
 123              	 .align 1
 126              	MIN_RESET:
 127 0000 6400     	 .short 100
 128              	 .global echo_state
 129              	 .section .bss.echo_state,"aw",%nobits
 132              	echo_state:
 133 0000 00       	 .space 1
 134              	 .global wait_echo
 135              	 .section .bss.wait_echo,"aw",%nobits
 138              	wait_echo:
 139 0000 00       	 .space 1
 140              	 .global echo_count_control
 141              	 .section .bss.echo_count_control,"aw",%nobits
 144              	echo_count_control:
 145 0000 00       	 .space 1
 146              	 .global reset_done
 147              	 .section .data.reset_done,"aw",%progbits
 150              	reset_done:
 151 0000 01       	 .byte 1
 152              	 .global t_10us_count
 153              	 .section .bss.t_10us_count,"aw",%nobits
 154              	 .align 2
 157              	t_10us_count:
 158 0000 00000000 	 .space 4
 159              	 .global reset_at
 160              	 .section .data.reset_at,"aw",%progbits
 161              	 .align 2
 164              	reset_at:
 165 0000 C4090000 	 .word 2500
 166              	 .global echo_t_10us
 167              	 .section .bss.echo_t_10us,"aw",%nobits
 168              	 .align 2
 171              	echo_t_10us:
 172 0000 00000000 	 .space 4
 173              	 .global echo_time
 174              	 .section .bss.echo_time,"aw",%nobits
 175              	 .align 2
 178              	echo_time:
 179 0000 00000000 	 .space 4
 180              	 .global distance_C
 181              	 .section .bss.distance_C,"aw",%nobits
 182              	 .align 1
 185              	distance_C:
 186 0000 0000     	 .space 2
 187              	 .global distance_L
 188              	 .section .bss.distance_L,"aw",%nobits
 189              	 .align 1
 192              	distance_L:
 193 0000 0000     	 .space 2
 194              	 .global distance_R
 195              	 .section .bss.distance_R,"aw",%nobits
 196              	 .align 1
 199              	distance_R:
 200 0000 0000     	 .space 2
 201              	 .global restet_count
 202              	 .section .bss.restet_count,"aw",%nobits
 203              	 .align 2
 206              	restet_count:
 207 0000 00000000 	 .space 4
 208              	 .global sample_count
 209              	 .section .bss.sample_count,"aw",%nobits
 210              	 .align 2
 213              	sample_count:
 214 0000 00000000 	 .space 4
 215              	 .global sample_rate_Hz
 216              	 .section .bss.sample_rate_Hz,"aw",%nobits
 217              	 .align 2
 220              	sample_rate_Hz:
 221 0000 00000000 	 .space 4
 222              	 .global failed_count
 223              	 .section .bss.failed_count,"aw",%nobits
 224              	 .align 2
 227              	failed_count:
 228 0000 00000000 	 .space 4
 229              	 .global echo_not_low_count
 230              	 .section .bss.echo_not_low_count,"aw",%nobits
 231              	 .align 2
 234              	echo_not_low_count:
 235 0000 00000000 	 .space 4
 236              	 .global echo_not_low_count_1
 237              	 .section .bss.echo_not_low_count_1,"aw",%nobits
 238              	 .align 2
 241              	echo_not_low_count_1:
 242 0000 00000000 	 .space 4
 243              	 .global limit_fail_num
 244              	 .section .bss.limit_fail_num,"aw",%nobits
 245              	 .align 2
 248              	limit_fail_num:
 249 0000 00000000 	 .space 4
 250              	 .global limit_fail_count
 251              	 .section .bss.limit_fail_count,"aw",%nobits
 252              	 .align 2
 255              	limit_fail_count:
 256 0000 00000000 	 .space 4
 257              	 .global Now_Sensor
 258              	 .section .data.Now_Sensor,"aw",%progbits
 261              	Now_Sensor:
 262 0000 01       	 .byte 1
 263              	 .section .text.main,"ax",%progbits
 264              	 .align 2
 265              	 .global main
 266              	 .code 16
 267              	 .thumb_func
 269              	main:
 270              	.LFB202:
 271              	 .file 3 "../main.c"
   1:../main.c     **** /*
   2:../main.c     ****  * main.c
   3:../main.c     ****  *
   4:../main.c     ****  *  Created on: 2022 Jul 01 21:38:44
   5:../main.c     ****  *  Author: lukas
   6:../main.c     ****  */
   7:../main.c     **** #include "DAVE.h"                 //Declarations from DAVE Code Generation (includes SFR declaratio
   8:../main.c     **** 
   9:../main.c     **** uint8_t CAN_OK = 0;
  10:../main.c     **** CAN_NODE_STATUS_t init_status;
  11:../main.c     **** 
  12:../main.c     **** 
  13:../main.c     **** uint16_t RESET_IN_10us_AFTER_SUCSSES = 10;
  14:../main.c     **** uint16_t RESET_IN_10us_AFTER_ECHO_LOW_FAIL = 500;
  15:../main.c     **** #define MAX_RESET 2500 // 40Hz
  16:../main.c     **** uint16_t MIN_RESET = 100; // 250Hz
  17:../main.c     **** 
  18:../main.c     **** #define NUM_SENSORS  0b100
  19:../main.c     **** #define ECHO_TIME_MIN 10 // limit 1.7cm
  20:../main.c     **** #define ECHO_TIME_MAX 2400 // limit 408cm
  21:../main.c     **** #define ECHO_TIME_10us_TO_DISTANCE_cm 0.17
  22:../main.c     **** 
  23:../main.c     **** volatile uint8_t echo_state = 0;
  24:../main.c     **** volatile uint8_t wait_echo = 0;
  25:../main.c     **** volatile uint8_t echo_count_control = 0;
  26:../main.c     **** volatile uint8_t reset_done = 1;
  27:../main.c     **** 
  28:../main.c     **** volatile uint32_t t_10us_count = 0;
  29:../main.c     **** volatile uint32_t reset_at = MAX_RESET;
  30:../main.c     **** volatile uint32_t echo_t_10us = 0;
  31:../main.c     **** volatile uint32_t echo_time = 0;
  32:../main.c     **** 
  33:../main.c     **** volatile uint16_t distance_C = 0; //in cm
  34:../main.c     **** volatile uint16_t distance_L = 0; //in cm
  35:../main.c     **** volatile uint16_t distance_R = 0; //in cm
  36:../main.c     **** 
  37:../main.c     **** 
  38:../main.c     **** //diagnostics
  39:../main.c     **** volatile uint32_t restet_count = 0;
  40:../main.c     **** volatile uint32_t sample_count = 0;
  41:../main.c     **** volatile uint32_t sample_rate_Hz = 0;
  42:../main.c     **** volatile uint32_t failed_count = 0;
  43:../main.c     **** volatile uint32_t echo_not_low_count = 0;
  44:../main.c     **** volatile uint32_t echo_not_low_count_1 = 0;
  45:../main.c     **** volatile uint32_t limit_fail_num = 0;
  46:../main.c     **** volatile uint32_t limit_fail_count = 0;
  47:../main.c     **** 
  48:../main.c     **** 
  49:../main.c     **** 
  50:../main.c     **** enum SENSORS{
  51:../main.c     **** 	CENTER = 0b001,
  52:../main.c     **** 	LEFT = 0b010,
  53:../main.c     **** 	RIGHT = 0b100};
  54:../main.c     **** volatile enum SENSORS Now_Sensor = CENTER;
  55:../main.c     **** 
  56:../main.c     **** void reset();
  57:../main.c     **** void CAN_send_values();
  58:../main.c     **** bool within_MAX_MIN_check_int(int x, int MAX, int MIN);
  59:../main.c     **** uint16_t saturation_to_MIN_MAX(uint16_t value, uint16_t MAX, uint16_t MIN);
  60:../main.c     **** 
  61:../main.c     **** int main(void)
  62:../main.c     **** {
 272              	 .loc 3 62 0
 273              	 .cfi_startproc
 274 0000 90B5     	 push {r4,r7,lr}
 275              	.LCFI6:
 276              	 .cfi_def_cfa_offset 12
 277              	 .cfi_offset 4,-12
 278              	 .cfi_offset 7,-8
 279              	 .cfi_offset 14,-4
 280 0002 83B0     	 sub sp,sp,#12
 281              	.LCFI7:
 282              	 .cfi_def_cfa_offset 24
 283 0004 00AF     	 add r7,sp,#0
 284              	.LCFI8:
 285              	 .cfi_def_cfa_register 7
  63:../main.c     ****   DAVE_STATUS_t status;
  64:../main.c     **** 
  65:../main.c     ****   status = DAVE_Init();           /* Initialization of DAVE APPs  */
 286              	 .loc 3 65 0
 287 0006 FC1D     	 add r4,r7,#7
 288 0008 FFF7FEFF 	 bl DAVE_Init
 289 000c 031C     	 mov r3,r0
 290 000e 2370     	 strb r3,[r4]
  66:../main.c     **** 
  67:../main.c     ****   if (status != DAVE_STATUS_SUCCESS)
 291              	 .loc 3 67 0
 292 0010 FB1D     	 add r3,r7,#7
 293 0012 1B78     	 ldrb r3,[r3]
 294 0014 002B     	 cmp r3,#0
 295 0016 00D0     	 beq .L6
 296              	.L7:
  68:../main.c     ****   {
  69:../main.c     ****     /* Placeholder for error handler code. The while loop below can be replaced with an user error 
  70:../main.c     ****     XMC_DEBUG("DAVE APPs initialization failed\n");
  71:../main.c     **** 
  72:../main.c     ****     while(1U)
  73:../main.c     ****     {
  74:../main.c     **** 
  75:../main.c     ****     }
 297              	 .loc 3 75 0 discriminator 1
 298 0018 FEE7     	 b .L7
 299              	.L6:
  76:../main.c     ****   }
  77:../main.c     ****   //Initialization of CAN
  78:../main.c     ****   	//CAN_NODE_STATUS_t init_status;
  79:../main.c     ****   	init_status = CAN_NODE_Init(&CAN_NODE_0);
 300              	 .loc 3 79 0
 301 001a 084B     	 ldr r3,.L9
 302 001c 181C     	 mov r0,r3
 303 001e FFF7FEFF 	 bl CAN_NODE_Init
 304 0022 031C     	 mov r3,r0
 305 0024 1A1C     	 mov r2,r3
 306 0026 064B     	 ldr r3,.L9+4
 307 0028 1A70     	 strb r2,[r3]
  80:../main.c     **** 
  81:../main.c     ****   	if (init_status != CAN_NODE_STATUS_SUCCESS) {
 308              	 .loc 3 81 0
 309 002a 054B     	 ldr r3,.L9+4
 310 002c 1B78     	 ldrb r3,[r3]
 311 002e 002B     	 cmp r3,#0
 312 0030 02D1     	 bne .L8
  82:../main.c     ****   		XMC_DEBUG("CAN initialization failed\n");
  83:../main.c     ****   	}
  84:../main.c     ****   	else{
  85:../main.c     ****   		CAN_OK = 1;
 313              	 .loc 3 85 0
 314 0032 044B     	 ldr r3,.L9+8
 315 0034 0122     	 mov r2,#1
 316 0036 1A70     	 strb r2,[r3]
 317              	.L8:
  86:../main.c     ****   	}
  87:../main.c     **** 
  88:../main.c     ****   /* Placeholder for user application code. The while loop below can be replaced with user applicat
  89:../main.c     ****   while(1U)
  90:../main.c     ****   {
  91:../main.c     **** 
  92:../main.c     **** 
  93:../main.c     ****   }
 318              	 .loc 3 93 0 discriminator 3
 319 0038 FEE7     	 b .L8
 320              	.L10:
 321 003a C046     	 .align 2
 322              	.L9:
 323 003c 00000000 	 .word CAN_NODE_0
 324 0040 00000000 	 .word init_status
 325 0044 00000000 	 .word CAN_OK
 326              	 .cfi_endproc
 327              	.LFE202:
 329              	 .section .text.IRQ7_Handler,"ax",%progbits
 330              	 .align 2
 331              	 .global IRQ7_Handler
 332              	 .code 16
 333              	 .thumb_func
 335              	IRQ7_Handler:
 336              	.LFB203:
  94:../main.c     **** }
  95:../main.c     **** 
  96:../main.c     **** 
  97:../main.c     **** void ISR_10us_TIMER(){
 337              	 .loc 3 97 0
 338              	 .cfi_startproc
 339 0000 80B5     	 push {r7,lr}
 340              	.LCFI9:
 341              	 .cfi_def_cfa_offset 8
 342              	 .cfi_offset 7,-8
 343              	 .cfi_offset 14,-4
 344 0002 00AF     	 add r7,sp,#0
 345              	.LCFI10:
 346              	 .cfi_def_cfa_register 7
  98:../main.c     **** 	if(reset_done == 1){ // make sure its finished
 347              	 .loc 3 98 0
 348 0004 414B     	 ldr r3,.L23
 349 0006 1B78     	 ldrb r3,[r3]
 350 0008 DBB2     	 uxtb r3,r3
 351 000a 012B     	 cmp r3,#1
 352 000c 00D0     	 beq .LCB146
 353 000e 7BE0     	 b .L11
 354              	.LCB146:
  99:../main.c     **** 		t_10us_count ++;
 355              	 .loc 3 99 0
 356 0010 3F4B     	 ldr r3,.L23+4
 357 0012 1B68     	 ldr r3,[r3]
 358 0014 5A1C     	 add r2,r3,#1
 359 0016 3E4B     	 ldr r3,.L23+4
 360 0018 1A60     	 str r2,[r3]
 100:../main.c     **** 		if (echo_count_control == 1) echo_t_10us ++;
 361              	 .loc 3 100 0
 362 001a 3E4B     	 ldr r3,.L23+8
 363 001c 1B78     	 ldrb r3,[r3]
 364 001e DBB2     	 uxtb r3,r3
 365 0020 012B     	 cmp r3,#1
 366 0022 04D1     	 bne .L13
 367              	 .loc 3 100 0 is_stmt 0 discriminator 1
 368 0024 3C4B     	 ldr r3,.L23+12
 369 0026 1B68     	 ldr r3,[r3]
 370 0028 5A1C     	 add r2,r3,#1
 371 002a 3B4B     	 ldr r3,.L23+12
 372 002c 1A60     	 str r2,[r3]
 373              	.L13:
 101:../main.c     **** 
 102:../main.c     **** 		if(t_10us_count == 1)BUS_IO_Write(&BUS_IO_0,Now_Sensor);  // set trigger high
 374              	 .loc 3 102 0 is_stmt 1
 375 002e 384B     	 ldr r3,.L23+4
 376 0030 1B68     	 ldr r3,[r3]
 377 0032 012B     	 cmp r3,#1
 378 0034 09D1     	 bne .L14
 379              	 .loc 3 102 0 is_stmt 0 discriminator 1
 380 0036 394B     	 ldr r3,.L23+16
 381 0038 1B78     	 ldrb r3,[r3]
 382 003a DBB2     	 uxtb r3,r3
 383 003c 9BB2     	 uxth r3,r3
 384 003e 384A     	 ldr r2,.L23+20
 385 0040 101C     	 mov r0,r2
 386 0042 191C     	 mov r1,r3
 387 0044 FFF7FEFF 	 bl BUS_IO_Write
 388 0048 5EE0     	 b .L11
 389              	.L14:
 103:../main.c     **** 		else if (t_10us_count == 11) BUS_IO_Write(&BUS_IO_0,0b000); // set tigger low
 390              	 .loc 3 103 0 is_stmt 1
 391 004a 314B     	 ldr r3,.L23+4
 392 004c 1B68     	 ldr r3,[r3]
 393 004e 0B2B     	 cmp r3,#11
 394 0050 05D1     	 bne .L15
 395              	 .loc 3 103 0 is_stmt 0 discriminator 1
 396 0052 334B     	 ldr r3,.L23+20
 397 0054 181C     	 mov r0,r3
 398 0056 0021     	 mov r1,#0
 399 0058 FFF7FEFF 	 bl BUS_IO_Write
 400 005c 54E0     	 b .L11
 401              	.L15:
 104:../main.c     **** 
 105:../main.c     **** 		else if (t_10us_count == 20) {
 402              	 .loc 3 105 0 is_stmt 1
 403 005e 2C4B     	 ldr r3,.L23+4
 404 0060 1B68     	 ldr r3,[r3]
 405 0062 142B     	 cmp r3,#20
 406 0064 48D1     	 bne .L16
 106:../main.c     **** 				switch(Now_Sensor){
 407              	 .loc 3 106 0
 408 0066 2D4B     	 ldr r3,.L23+16
 409 0068 1B78     	 ldrb r3,[r3]
 410 006a DBB2     	 uxtb r3,r3
 411 006c 022B     	 cmp r3,#2
 412 006e 0CD0     	 beq .L18
 413 0070 042B     	 cmp r3,#4
 414 0072 13D0     	 beq .L19
 415 0074 012B     	 cmp r3,#1
 416 0076 1AD1     	 bne .L17
 107:../main.c     **** 					case CENTER:
 108:../main.c     **** 						echo_state = PIN_INTERRUPT_GetPinValue(&ECHO_C);
 417              	 .loc 3 108 0
 418 0078 2A4B     	 ldr r3,.L23+24
 419 007a 181C     	 mov r0,r3
 420 007c FFF7FEFF 	 bl PIN_INTERRUPT_GetPinValue
 421 0080 031C     	 mov r3,r0
 422 0082 DAB2     	 uxtb r2,r3
 423 0084 284B     	 ldr r3,.L23+28
 424 0086 1A70     	 strb r2,[r3]
 109:../main.c     **** 						break;
 425              	 .loc 3 109 0
 426 0088 11E0     	 b .L17
 427              	.L18:
 110:../main.c     **** 					case LEFT:
 111:../main.c     **** 						echo_state = PIN_INTERRUPT_GetPinValue(&ECHO_L);
 428              	 .loc 3 111 0
 429 008a 284B     	 ldr r3,.L23+32
 430 008c 181C     	 mov r0,r3
 431 008e FFF7FEFF 	 bl PIN_INTERRUPT_GetPinValue
 432 0092 031C     	 mov r3,r0
 433 0094 DAB2     	 uxtb r2,r3
 434 0096 244B     	 ldr r3,.L23+28
 435 0098 1A70     	 strb r2,[r3]
 112:../main.c     **** 						break;
 436              	 .loc 3 112 0
 437 009a 08E0     	 b .L17
 438              	.L19:
 113:../main.c     **** 					case RIGHT:
 114:../main.c     **** 						echo_state = PIN_INTERRUPT_GetPinValue(&ECHO_R);
 439              	 .loc 3 114 0
 440 009c 244B     	 ldr r3,.L23+36
 441 009e 181C     	 mov r0,r3
 442 00a0 FFF7FEFF 	 bl PIN_INTERRUPT_GetPinValue
 443 00a4 031C     	 mov r3,r0
 444 00a6 DAB2     	 uxtb r2,r3
 445 00a8 1F4B     	 ldr r3,.L23+28
 446 00aa 1A70     	 strb r2,[r3]
 115:../main.c     **** 						break;
 447              	 .loc 3 115 0
 448 00ac C046     	 mov r8,r8
 449              	.L17:
 116:../main.c     **** 				}
 117:../main.c     **** 				if(echo_state != 0) {
 450              	 .loc 3 117 0
 451 00ae 1E4B     	 ldr r3,.L23+28
 452 00b0 1B78     	 ldrb r3,[r3]
 453 00b2 DBB2     	 uxtb r3,r3
 454 00b4 002B     	 cmp r3,#0
 455 00b6 1BD0     	 beq .L21
 118:../main.c     **** 					echo_not_low_count ++ ;
 456              	 .loc 3 118 0
 457 00b8 1E4B     	 ldr r3,.L23+40
 458 00ba 1B68     	 ldr r3,[r3]
 459 00bc 5A1C     	 add r2,r3,#1
 460 00be 1D4B     	 ldr r3,.L23+40
 461 00c0 1A60     	 str r2,[r3]
 119:../main.c     **** 					reset_at = t_10us_count + RESET_IN_10us_AFTER_ECHO_LOW_FAIL; // reset(); // check if echo low
 462              	 .loc 3 119 0
 463 00c2 1D4B     	 ldr r3,.L23+44
 464 00c4 1B88     	 ldrh r3,[r3]
 465 00c6 1A1C     	 mov r2,r3
 466 00c8 114B     	 ldr r3,.L23+4
 467 00ca 1B68     	 ldr r3,[r3]
 468 00cc D218     	 add r2,r2,r3
 469 00ce 1B4B     	 ldr r3,.L23+48
 470 00d0 1A60     	 str r2,[r3]
 120:../main.c     **** 					reset_at = saturation_to_MIN_MAX(reset_at,MAX_RESET,MIN_RESET);
 471              	 .loc 3 120 0
 472 00d2 1A4B     	 ldr r3,.L23+48
 473 00d4 1B68     	 ldr r3,[r3]
 474 00d6 9AB2     	 uxth r2,r3
 475 00d8 194B     	 ldr r3,.L23+52
 476 00da 1B88     	 ldrh r3,[r3]
 477 00dc 1949     	 ldr r1,.L23+56
 478 00de 101C     	 mov r0,r2
 479 00e0 1A1C     	 mov r2,r3
 480 00e2 FFF7FEFF 	 bl saturation_to_MIN_MAX
 481 00e6 031C     	 mov r3,r0
 482 00e8 1A1C     	 mov r2,r3
 483 00ea 144B     	 ldr r3,.L23+48
 484 00ec 1A60     	 str r2,[r3]
 485 00ee 0BE0     	 b .L11
 486              	.L21:
 121:../main.c     **** 				}
 122:../main.c     **** 				else wait_echo = 1;
 487              	 .loc 3 122 0
 488 00f0 154B     	 ldr r3,.L23+60
 489 00f2 0122     	 mov r2,#1
 490 00f4 1A70     	 strb r2,[r3]
 491 00f6 07E0     	 b .L11
 492              	.L16:
 123:../main.c     **** 			}
 124:../main.c     **** 
 125:../main.c     **** 		else if (t_10us_count > reset_at) reset();//no ech in expüecte time error start again // 25000us
 493              	 .loc 3 125 0
 494 00f8 054B     	 ldr r3,.L23+4
 495 00fa 1A68     	 ldr r2,[r3]
 496 00fc 0F4B     	 ldr r3,.L23+48
 497 00fe 1B68     	 ldr r3,[r3]
 498 0100 9A42     	 cmp r2,r3
 499 0102 01D9     	 bls .L11
 500              	 .loc 3 125 0 is_stmt 0 discriminator 1
 501 0104 FFF7FEFF 	 bl reset
 502              	.L11:
 126:../main.c     **** 	}
 127:../main.c     **** }
 503              	 .loc 3 127 0 is_stmt 1
 504 0108 BD46     	 mov sp,r7
 505              	 
 506 010a 80BD     	 pop {r7,pc}
 507              	.L24:
 508              	 .align 2
 509              	.L23:
 510 010c 00000000 	 .word reset_done
 511 0110 00000000 	 .word t_10us_count
 512 0114 00000000 	 .word echo_count_control
 513 0118 00000000 	 .word echo_t_10us
 514 011c 00000000 	 .word Now_Sensor
 515 0120 00000000 	 .word BUS_IO_0
 516 0124 00000000 	 .word ECHO_C
 517 0128 00000000 	 .word echo_state
 518 012c 00000000 	 .word ECHO_L
 519 0130 00000000 	 .word ECHO_R
 520 0134 00000000 	 .word echo_not_low_count
 521 0138 00000000 	 .word RESET_IN_10us_AFTER_ECHO_LOW_FAIL
 522 013c 00000000 	 .word reset_at
 523 0140 00000000 	 .word MIN_RESET
 524 0144 C4090000 	 .word 2500
 525 0148 00000000 	 .word wait_echo
 526              	 .cfi_endproc
 527              	.LFE203:
 529              	 .section .text.reset,"ax",%progbits
 530              	 .align 2
 531              	 .global reset
 532              	 .code 16
 533              	 .thumb_func
 535              	reset:
 536              	.LFB204:
 128:../main.c     **** 
 129:../main.c     **** void reset(){
 537              	 .loc 3 129 0
 538              	 .cfi_startproc
 539 0000 80B5     	 push {r7,lr}
 540              	.LCFI11:
 541              	 .cfi_def_cfa_offset 8
 542              	 .cfi_offset 7,-8
 543              	 .cfi_offset 14,-4
 544 0002 00AF     	 add r7,sp,#0
 545              	.LCFI12:
 546              	 .cfi_def_cfa_register 7
 130:../main.c     **** 	reset_done = 0;
 547              	 .loc 3 130 0
 548 0004 164B     	 ldr r3,.L27
 549 0006 0022     	 mov r2,#0
 550 0008 1A70     	 strb r2,[r3]
 131:../main.c     **** 
 132:../main.c     **** 	// set values values back
 133:../main.c     **** 	t_10us_count = 0;
 551              	 .loc 3 133 0
 552 000a 164B     	 ldr r3,.L27+4
 553 000c 0022     	 mov r2,#0
 554 000e 1A60     	 str r2,[r3]
 134:../main.c     **** 	wait_echo = 0;
 555              	 .loc 3 134 0
 556 0010 154B     	 ldr r3,.L27+8
 557 0012 0022     	 mov r2,#0
 558 0014 1A70     	 strb r2,[r3]
 135:../main.c     **** 	echo_count_control = 0;
 559              	 .loc 3 135 0
 560 0016 154B     	 ldr r3,.L27+12
 561 0018 0022     	 mov r2,#0
 562 001a 1A70     	 strb r2,[r3]
 136:../main.c     **** 	echo_t_10us = 0;
 563              	 .loc 3 136 0
 564 001c 144B     	 ldr r3,.L27+16
 565 001e 0022     	 mov r2,#0
 566 0020 1A60     	 str r2,[r3]
 137:../main.c     **** 	reset_at = MAX_RESET;
 567              	 .loc 3 137 0
 568 0022 144B     	 ldr r3,.L27+20
 569 0024 144A     	 ldr r2,.L27+24
 570 0026 1A60     	 str r2,[r3]
 138:../main.c     **** 	//distance = 0;
 139:../main.c     **** 
 140:../main.c     **** 	//switch to next sensor
 141:../main.c     **** 	Now_Sensor = Now_Sensor << 1;
 571              	 .loc 3 141 0
 572 0028 144B     	 ldr r3,.L27+28
 573 002a 1B78     	 ldrb r3,[r3]
 574 002c DBB2     	 uxtb r3,r3
 575 002e DB18     	 add r3,r3,r3
 576 0030 DAB2     	 uxtb r2,r3
 577 0032 124B     	 ldr r3,.L27+28
 578 0034 1A70     	 strb r2,[r3]
 142:../main.c     **** 	if(Now_Sensor > NUM_SENSORS){
 579              	 .loc 3 142 0
 580 0036 114B     	 ldr r3,.L27+28
 581 0038 1B78     	 ldrb r3,[r3]
 582 003a DBB2     	 uxtb r3,r3
 583 003c 042B     	 cmp r3,#4
 584 003e 04D9     	 bls .L26
 143:../main.c     **** 		Now_Sensor = CENTER;
 585              	 .loc 3 143 0
 586 0040 0E4B     	 ldr r3,.L27+28
 587 0042 0122     	 mov r2,#1
 588 0044 1A70     	 strb r2,[r3]
 144:../main.c     **** 		CAN_send_values(); //send results
 589              	 .loc 3 144 0
 590 0046 FFF7FEFF 	 bl CAN_send_values
 591              	.L26:
 145:../main.c     **** 	}
 146:../main.c     **** 	// sampelr rater counter
 147:../main.c     **** 	restet_count++;
 592              	 .loc 3 147 0
 593 004a 0D4B     	 ldr r3,.L27+32
 594 004c 1B68     	 ldr r3,[r3]
 595 004e 5A1C     	 add r2,r3,#1
 596 0050 0B4B     	 ldr r3,.L27+32
 597 0052 1A60     	 str r2,[r3]
 148:../main.c     **** 
 149:../main.c     **** 	reset_done = 1;
 598              	 .loc 3 149 0
 599 0054 024B     	 ldr r3,.L27
 600 0056 0122     	 mov r2,#1
 601 0058 1A70     	 strb r2,[r3]
 150:../main.c     **** }
 602              	 .loc 3 150 0
 603 005a BD46     	 mov sp,r7
 604              	 
 605 005c 80BD     	 pop {r7,pc}
 606              	.L28:
 607 005e C046     	 .align 2
 608              	.L27:
 609 0060 00000000 	 .word reset_done
 610 0064 00000000 	 .word t_10us_count
 611 0068 00000000 	 .word wait_echo
 612 006c 00000000 	 .word echo_count_control
 613 0070 00000000 	 .word echo_t_10us
 614 0074 00000000 	 .word reset_at
 615 0078 C4090000 	 .word 2500
 616 007c 00000000 	 .word Now_Sensor
 617 0080 00000000 	 .word restet_count
 618              	 .cfi_endproc
 619              	.LFE204:
 621              	 .global __aeabi_ui2d
 622              	 .global __aeabi_dmul
 623              	 .global __aeabi_d2uiz
 624              	 .section .text.IRQ5_Handler,"ax",%progbits
 625              	 .align 2
 626              	 .global IRQ5_Handler
 627              	 .code 16
 628              	 .thumb_func
 630              	IRQ5_Handler:
 631              	.LFB205:
 151:../main.c     **** 
 152:../main.c     **** void ISR_ECHO_C(void){
 632              	 .loc 3 152 0
 633              	 .cfi_startproc
 634 0000 98B5     	 push {r3,r4,r7,lr}
 635              	.LCFI13:
 636              	 .cfi_def_cfa_offset 16
 637              	 .cfi_offset 3,-16
 638              	 .cfi_offset 4,-12
 639              	 .cfi_offset 7,-8
 640              	 .cfi_offset 14,-4
 641 0002 00AF     	 add r7,sp,#0
 642              	.LCFI14:
 643              	 .cfi_def_cfa_register 7
 153:../main.c     **** 	echo_state = PIN_INTERRUPT_GetPinValue(&ECHO_C);
 644              	 .loc 3 153 0
 645 0004 344B     	 ldr r3,.L34
 646 0006 181C     	 mov r0,r3
 647 0008 FFF7FEFF 	 bl PIN_INTERRUPT_GetPinValue
 648 000c 031C     	 mov r3,r0
 649 000e DAB2     	 uxtb r2,r3
 650 0010 324B     	 ldr r3,.L34+4
 651 0012 1A70     	 strb r2,[r3]
 154:../main.c     **** 	if(wait_echo == 1 && echo_state == 1) echo_count_control = 1;
 652              	 .loc 3 154 0
 653 0014 324B     	 ldr r3,.L34+8
 654 0016 1B78     	 ldrb r3,[r3]
 655 0018 DBB2     	 uxtb r3,r3
 656 001a 012B     	 cmp r3,#1
 657 001c 08D1     	 bne .L30
 658              	 .loc 3 154 0 is_stmt 0 discriminator 1
 659 001e 2F4B     	 ldr r3,.L34+4
 660 0020 1B78     	 ldrb r3,[r3]
 661 0022 DBB2     	 uxtb r3,r3
 662 0024 012B     	 cmp r3,#1
 663 0026 03D1     	 bne .L30
 664              	 .loc 3 154 0 discriminator 2
 665 0028 2E4B     	 ldr r3,.L34+12
 666 002a 0122     	 mov r2,#1
 667 002c 1A70     	 strb r2,[r3]
 668 002e 51E0     	 b .L29
 669              	.L30:
 155:../main.c     **** 	else if(echo_state == 0 && echo_count_control == 1){
 670              	 .loc 3 155 0 is_stmt 1
 671 0030 2A4B     	 ldr r3,.L34+4
 672 0032 1B78     	 ldrb r3,[r3]
 673 0034 DBB2     	 uxtb r3,r3
 674 0036 002B     	 cmp r3,#0
 675 0038 4CD1     	 bne .L29
 676              	 .loc 3 155 0 is_stmt 0 discriminator 1
 677 003a 2A4B     	 ldr r3,.L34+12
 678 003c 1B78     	 ldrb r3,[r3]
 679 003e DBB2     	 uxtb r3,r3
 680 0040 012B     	 cmp r3,#1
 681 0042 47D1     	 bne .L29
 156:../main.c     **** 		echo_time = echo_t_10us;
 682              	 .loc 3 156 0 is_stmt 1
 683 0044 284B     	 ldr r3,.L34+16
 684 0046 1A68     	 ldr r2,[r3]
 685 0048 284B     	 ldr r3,.L34+20
 686 004a 1A60     	 str r2,[r3]
 157:../main.c     **** 		if(within_MAX_MIN_check_int(echo_time, ECHO_TIME_MAX, ECHO_TIME_MIN)){
 687              	 .loc 3 157 0
 688 004c 274B     	 ldr r3,.L34+20
 689 004e 1B68     	 ldr r3,[r3]
 690 0050 1A1C     	 mov r2,r3
 691 0052 9623     	 mov r3,#150
 692 0054 1B01     	 lsl r3,r3,#4
 693 0056 101C     	 mov r0,r2
 694 0058 191C     	 mov r1,r3
 695 005a 0A22     	 mov r2,#10
 696 005c FFF7FEFF 	 bl within_MAX_MIN_check_int
 697 0060 031E     	 sub r3,r0,#0
 698 0062 1CD0     	 beq .L32
 158:../main.c     **** 			distance_C = echo_time * ECHO_TIME_10us_TO_DISTANCE_cm;
 699              	 .loc 3 158 0
 700 0064 214B     	 ldr r3,.L34+20
 701 0066 1B68     	 ldr r3,[r3]
 702 0068 181C     	 mov r0,r3
 703 006a FFF7FEFF 	 bl __aeabi_ui2d
 704 006e 031C     	 mov r3,r0
 705 0070 0C1C     	 mov r4,r1
 706 0072 181C     	 mov r0,r3
 707 0074 211C     	 mov r1,r4
 708 0076 1E4A     	 ldr r2,.L34+24
 709 0078 1E4B     	 ldr r3,.L34+28
 710 007a FFF7FEFF 	 bl __aeabi_dmul
 711 007e 031C     	 mov r3,r0
 712 0080 0C1C     	 mov r4,r1
 713 0082 181C     	 mov r0,r3
 714 0084 211C     	 mov r1,r4
 715 0086 FFF7FEFF 	 bl __aeabi_d2uiz
 716 008a 031C     	 mov r3,r0
 717 008c 9AB2     	 uxth r2,r3
 718 008e 1A4B     	 ldr r3,.L34+32
 719 0090 1A80     	 strh r2,[r3]
 159:../main.c     **** 			sample_count++; // sampelr rater counter
 720              	 .loc 3 159 0
 721 0092 1A4B     	 ldr r3,.L34+36
 722 0094 1B68     	 ldr r3,[r3]
 723 0096 5A1C     	 add r2,r3,#1
 724 0098 184B     	 ldr r3,.L34+36
 725 009a 1A60     	 str r2,[r3]
 726 009c 04E0     	 b .L33
 727              	.L32:
 160:../main.c     **** 		}
 161:../main.c     **** 		else limit_fail_count ++;
 728              	 .loc 3 161 0
 729 009e 184B     	 ldr r3,.L34+40
 730 00a0 1B68     	 ldr r3,[r3]
 731 00a2 5A1C     	 add r2,r3,#1
 732 00a4 164B     	 ldr r3,.L34+40
 733 00a6 1A60     	 str r2,[r3]
 734              	.L33:
 162:../main.c     **** 		 reset_at = t_10us_count + RESET_IN_10us_AFTER_SUCSSES;
 735              	 .loc 3 162 0
 736 00a8 164B     	 ldr r3,.L34+44
 737 00aa 1B88     	 ldrh r3,[r3]
 738 00ac 1A1C     	 mov r2,r3
 739 00ae 164B     	 ldr r3,.L34+48
 740 00b0 1B68     	 ldr r3,[r3]
 741 00b2 D218     	 add r2,r2,r3
 742 00b4 154B     	 ldr r3,.L34+52
 743 00b6 1A60     	 str r2,[r3]
 163:../main.c     **** 		 reset_at = saturation_to_MIN_MAX(reset_at,MAX_RESET,MIN_RESET);
 744              	 .loc 3 163 0
 745 00b8 144B     	 ldr r3,.L34+52
 746 00ba 1B68     	 ldr r3,[r3]
 747 00bc 9AB2     	 uxth r2,r3
 748 00be 144B     	 ldr r3,.L34+56
 749 00c0 1B88     	 ldrh r3,[r3]
 750 00c2 1449     	 ldr r1,.L34+60
 751 00c4 101C     	 mov r0,r2
 752 00c6 1A1C     	 mov r2,r3
 753 00c8 FFF7FEFF 	 bl saturation_to_MIN_MAX
 754 00cc 031C     	 mov r3,r0
 755 00ce 1A1C     	 mov r2,r3
 756 00d0 0E4B     	 ldr r3,.L34+52
 757 00d2 1A60     	 str r2,[r3]
 758              	.L29:
 164:../main.c     **** 	}
 165:../main.c     **** }
 759              	 .loc 3 165 0
 760 00d4 BD46     	 mov sp,r7
 761              	 
 762 00d6 98BD     	 pop {r3,r4,r7,pc}
 763              	.L35:
 764              	 .align 2
 765              	.L34:
 766 00d8 00000000 	 .word ECHO_C
 767 00dc 00000000 	 .word echo_state
 768 00e0 00000000 	 .word wait_echo
 769 00e4 00000000 	 .word echo_count_control
 770 00e8 00000000 	 .word echo_t_10us
 771 00ec 00000000 	 .word echo_time
 772 00f0 C3F5285C 	 .word 1546188227
 773 00f4 8FC2C53F 	 .word 1069925007
 774 00f8 00000000 	 .word distance_C
 775 00fc 00000000 	 .word sample_count
 776 0100 00000000 	 .word limit_fail_count
 777 0104 00000000 	 .word RESET_IN_10us_AFTER_SUCSSES
 778 0108 00000000 	 .word t_10us_count
 779 010c 00000000 	 .word reset_at
 780 0110 00000000 	 .word MIN_RESET
 781 0114 C4090000 	 .word 2500
 782              	 .cfi_endproc
 783              	.LFE205:
 785              	 .section .text.IRQ3_Handler,"ax",%progbits
 786              	 .align 2
 787              	 .global IRQ3_Handler
 788              	 .code 16
 789              	 .thumb_func
 791              	IRQ3_Handler:
 792              	.LFB206:
 166:../main.c     **** 
 167:../main.c     **** void ISR_ECHO_L(void){
 793              	 .loc 3 167 0
 794              	 .cfi_startproc
 795 0000 98B5     	 push {r3,r4,r7,lr}
 796              	.LCFI15:
 797              	 .cfi_def_cfa_offset 16
 798              	 .cfi_offset 3,-16
 799              	 .cfi_offset 4,-12
 800              	 .cfi_offset 7,-8
 801              	 .cfi_offset 14,-4
 802 0002 00AF     	 add r7,sp,#0
 803              	.LCFI16:
 804              	 .cfi_def_cfa_register 7
 168:../main.c     **** 	echo_state = PIN_INTERRUPT_GetPinValue(&ECHO_L);
 805              	 .loc 3 168 0
 806 0004 344B     	 ldr r3,.L41
 807 0006 181C     	 mov r0,r3
 808 0008 FFF7FEFF 	 bl PIN_INTERRUPT_GetPinValue
 809 000c 031C     	 mov r3,r0
 810 000e DAB2     	 uxtb r2,r3
 811 0010 324B     	 ldr r3,.L41+4
 812 0012 1A70     	 strb r2,[r3]
 169:../main.c     **** 	if(wait_echo == 1 && echo_state == 1) echo_count_control = 1;
 813              	 .loc 3 169 0
 814 0014 324B     	 ldr r3,.L41+8
 815 0016 1B78     	 ldrb r3,[r3]
 816 0018 DBB2     	 uxtb r3,r3
 817 001a 012B     	 cmp r3,#1
 818 001c 08D1     	 bne .L37
 819              	 .loc 3 169 0 is_stmt 0 discriminator 1
 820 001e 2F4B     	 ldr r3,.L41+4
 821 0020 1B78     	 ldrb r3,[r3]
 822 0022 DBB2     	 uxtb r3,r3
 823 0024 012B     	 cmp r3,#1
 824 0026 03D1     	 bne .L37
 825              	 .loc 3 169 0 discriminator 2
 826 0028 2E4B     	 ldr r3,.L41+12
 827 002a 0122     	 mov r2,#1
 828 002c 1A70     	 strb r2,[r3]
 829 002e 51E0     	 b .L36
 830              	.L37:
 170:../main.c     **** 	else if(echo_state == 0 && echo_count_control == 1){
 831              	 .loc 3 170 0 is_stmt 1
 832 0030 2A4B     	 ldr r3,.L41+4
 833 0032 1B78     	 ldrb r3,[r3]
 834 0034 DBB2     	 uxtb r3,r3
 835 0036 002B     	 cmp r3,#0
 836 0038 4CD1     	 bne .L36
 837              	 .loc 3 170 0 is_stmt 0 discriminator 1
 838 003a 2A4B     	 ldr r3,.L41+12
 839 003c 1B78     	 ldrb r3,[r3]
 840 003e DBB2     	 uxtb r3,r3
 841 0040 012B     	 cmp r3,#1
 842 0042 47D1     	 bne .L36
 171:../main.c     **** 		echo_time = echo_t_10us;
 843              	 .loc 3 171 0 is_stmt 1
 844 0044 284B     	 ldr r3,.L41+16
 845 0046 1A68     	 ldr r2,[r3]
 846 0048 284B     	 ldr r3,.L41+20
 847 004a 1A60     	 str r2,[r3]
 172:../main.c     **** 		if(within_MAX_MIN_check_int(echo_time, ECHO_TIME_MAX, ECHO_TIME_MIN)){
 848              	 .loc 3 172 0
 849 004c 274B     	 ldr r3,.L41+20
 850 004e 1B68     	 ldr r3,[r3]
 851 0050 1A1C     	 mov r2,r3
 852 0052 9623     	 mov r3,#150
 853 0054 1B01     	 lsl r3,r3,#4
 854 0056 101C     	 mov r0,r2
 855 0058 191C     	 mov r1,r3
 856 005a 0A22     	 mov r2,#10
 857 005c FFF7FEFF 	 bl within_MAX_MIN_check_int
 858 0060 031E     	 sub r3,r0,#0
 859 0062 1CD0     	 beq .L39
 173:../main.c     **** 			distance_L = echo_time * ECHO_TIME_10us_TO_DISTANCE_cm;
 860              	 .loc 3 173 0
 861 0064 214B     	 ldr r3,.L41+20
 862 0066 1B68     	 ldr r3,[r3]
 863 0068 181C     	 mov r0,r3
 864 006a FFF7FEFF 	 bl __aeabi_ui2d
 865 006e 031C     	 mov r3,r0
 866 0070 0C1C     	 mov r4,r1
 867 0072 181C     	 mov r0,r3
 868 0074 211C     	 mov r1,r4
 869 0076 1E4A     	 ldr r2,.L41+24
 870 0078 1E4B     	 ldr r3,.L41+28
 871 007a FFF7FEFF 	 bl __aeabi_dmul
 872 007e 031C     	 mov r3,r0
 873 0080 0C1C     	 mov r4,r1
 874 0082 181C     	 mov r0,r3
 875 0084 211C     	 mov r1,r4
 876 0086 FFF7FEFF 	 bl __aeabi_d2uiz
 877 008a 031C     	 mov r3,r0
 878 008c 9AB2     	 uxth r2,r3
 879 008e 1A4B     	 ldr r3,.L41+32
 880 0090 1A80     	 strh r2,[r3]
 174:../main.c     **** 			sample_count++; // sampelr rater counter
 881              	 .loc 3 174 0
 882 0092 1A4B     	 ldr r3,.L41+36
 883 0094 1B68     	 ldr r3,[r3]
 884 0096 5A1C     	 add r2,r3,#1
 885 0098 184B     	 ldr r3,.L41+36
 886 009a 1A60     	 str r2,[r3]
 887 009c 04E0     	 b .L40
 888              	.L39:
 175:../main.c     **** 		}
 176:../main.c     **** 		else limit_fail_count ++;
 889              	 .loc 3 176 0
 890 009e 184B     	 ldr r3,.L41+40
 891 00a0 1B68     	 ldr r3,[r3]
 892 00a2 5A1C     	 add r2,r3,#1
 893 00a4 164B     	 ldr r3,.L41+40
 894 00a6 1A60     	 str r2,[r3]
 895              	.L40:
 177:../main.c     **** 		 reset_at = t_10us_count + RESET_IN_10us_AFTER_SUCSSES;
 896              	 .loc 3 177 0
 897 00a8 164B     	 ldr r3,.L41+44
 898 00aa 1B88     	 ldrh r3,[r3]
 899 00ac 1A1C     	 mov r2,r3
 900 00ae 164B     	 ldr r3,.L41+48
 901 00b0 1B68     	 ldr r3,[r3]
 902 00b2 D218     	 add r2,r2,r3
 903 00b4 154B     	 ldr r3,.L41+52
 904 00b6 1A60     	 str r2,[r3]
 178:../main.c     **** 		 reset_at = saturation_to_MIN_MAX(reset_at,MAX_RESET,MIN_RESET);
 905              	 .loc 3 178 0
 906 00b8 144B     	 ldr r3,.L41+52
 907 00ba 1B68     	 ldr r3,[r3]
 908 00bc 9AB2     	 uxth r2,r3
 909 00be 144B     	 ldr r3,.L41+56
 910 00c0 1B88     	 ldrh r3,[r3]
 911 00c2 1449     	 ldr r1,.L41+60
 912 00c4 101C     	 mov r0,r2
 913 00c6 1A1C     	 mov r2,r3
 914 00c8 FFF7FEFF 	 bl saturation_to_MIN_MAX
 915 00cc 031C     	 mov r3,r0
 916 00ce 1A1C     	 mov r2,r3
 917 00d0 0E4B     	 ldr r3,.L41+52
 918 00d2 1A60     	 str r2,[r3]
 919              	.L36:
 179:../main.c     **** 	}
 180:../main.c     **** }
 920              	 .loc 3 180 0
 921 00d4 BD46     	 mov sp,r7
 922              	 
 923 00d6 98BD     	 pop {r3,r4,r7,pc}
 924              	.L42:
 925              	 .align 2
 926              	.L41:
 927 00d8 00000000 	 .word ECHO_L
 928 00dc 00000000 	 .word echo_state
 929 00e0 00000000 	 .word wait_echo
 930 00e4 00000000 	 .word echo_count_control
 931 00e8 00000000 	 .word echo_t_10us
 932 00ec 00000000 	 .word echo_time
 933 00f0 C3F5285C 	 .word 1546188227
 934 00f4 8FC2C53F 	 .word 1069925007
 935 00f8 00000000 	 .word distance_L
 936 00fc 00000000 	 .word sample_count
 937 0100 00000000 	 .word limit_fail_count
 938 0104 00000000 	 .word RESET_IN_10us_AFTER_SUCSSES
 939 0108 00000000 	 .word t_10us_count
 940 010c 00000000 	 .word reset_at
 941 0110 00000000 	 .word MIN_RESET
 942 0114 C4090000 	 .word 2500
 943              	 .cfi_endproc
 944              	.LFE206:
 946              	 .section .text.IRQ6_Handler,"ax",%progbits
 947              	 .align 2
 948              	 .global IRQ6_Handler
 949              	 .code 16
 950              	 .thumb_func
 952              	IRQ6_Handler:
 953              	.LFB207:
 181:../main.c     **** 
 182:../main.c     **** void ISR_ECHO_R(void){
 954              	 .loc 3 182 0
 955              	 .cfi_startproc
 956 0000 98B5     	 push {r3,r4,r7,lr}
 957              	.LCFI17:
 958              	 .cfi_def_cfa_offset 16
 959              	 .cfi_offset 3,-16
 960              	 .cfi_offset 4,-12
 961              	 .cfi_offset 7,-8
 962              	 .cfi_offset 14,-4
 963 0002 00AF     	 add r7,sp,#0
 964              	.LCFI18:
 965              	 .cfi_def_cfa_register 7
 183:../main.c     **** 	echo_state = PIN_INTERRUPT_GetPinValue(&ECHO_R);
 966              	 .loc 3 183 0
 967 0004 344B     	 ldr r3,.L48
 968 0006 181C     	 mov r0,r3
 969 0008 FFF7FEFF 	 bl PIN_INTERRUPT_GetPinValue
 970 000c 031C     	 mov r3,r0
 971 000e DAB2     	 uxtb r2,r3
 972 0010 324B     	 ldr r3,.L48+4
 973 0012 1A70     	 strb r2,[r3]
 184:../main.c     **** 	if(wait_echo == 1 && echo_state == 1) echo_count_control = 1;
 974              	 .loc 3 184 0
 975 0014 324B     	 ldr r3,.L48+8
 976 0016 1B78     	 ldrb r3,[r3]
 977 0018 DBB2     	 uxtb r3,r3
 978 001a 012B     	 cmp r3,#1
 979 001c 08D1     	 bne .L44
 980              	 .loc 3 184 0 is_stmt 0 discriminator 1
 981 001e 2F4B     	 ldr r3,.L48+4
 982 0020 1B78     	 ldrb r3,[r3]
 983 0022 DBB2     	 uxtb r3,r3
 984 0024 012B     	 cmp r3,#1
 985 0026 03D1     	 bne .L44
 986              	 .loc 3 184 0 discriminator 2
 987 0028 2E4B     	 ldr r3,.L48+12
 988 002a 0122     	 mov r2,#1
 989 002c 1A70     	 strb r2,[r3]
 990 002e 51E0     	 b .L43
 991              	.L44:
 185:../main.c     **** 	else if(echo_state == 0 && echo_count_control == 1){
 992              	 .loc 3 185 0 is_stmt 1
 993 0030 2A4B     	 ldr r3,.L48+4
 994 0032 1B78     	 ldrb r3,[r3]
 995 0034 DBB2     	 uxtb r3,r3
 996 0036 002B     	 cmp r3,#0
 997 0038 4CD1     	 bne .L43
 998              	 .loc 3 185 0 is_stmt 0 discriminator 1
 999 003a 2A4B     	 ldr r3,.L48+12
 1000 003c 1B78     	 ldrb r3,[r3]
 1001 003e DBB2     	 uxtb r3,r3
 1002 0040 012B     	 cmp r3,#1
 1003 0042 47D1     	 bne .L43
 186:../main.c     **** 		echo_time = echo_t_10us;
 1004              	 .loc 3 186 0 is_stmt 1
 1005 0044 284B     	 ldr r3,.L48+16
 1006 0046 1A68     	 ldr r2,[r3]
 1007 0048 284B     	 ldr r3,.L48+20
 1008 004a 1A60     	 str r2,[r3]
 187:../main.c     **** 		if(within_MAX_MIN_check_int(echo_time, ECHO_TIME_MAX, ECHO_TIME_MIN)){
 1009              	 .loc 3 187 0
 1010 004c 274B     	 ldr r3,.L48+20
 1011 004e 1B68     	 ldr r3,[r3]
 1012 0050 1A1C     	 mov r2,r3
 1013 0052 9623     	 mov r3,#150
 1014 0054 1B01     	 lsl r3,r3,#4
 1015 0056 101C     	 mov r0,r2
 1016 0058 191C     	 mov r1,r3
 1017 005a 0A22     	 mov r2,#10
 1018 005c FFF7FEFF 	 bl within_MAX_MIN_check_int
 1019 0060 031E     	 sub r3,r0,#0
 1020 0062 1CD0     	 beq .L46
 188:../main.c     **** 			distance_R = echo_time * ECHO_TIME_10us_TO_DISTANCE_cm;
 1021              	 .loc 3 188 0
 1022 0064 214B     	 ldr r3,.L48+20
 1023 0066 1B68     	 ldr r3,[r3]
 1024 0068 181C     	 mov r0,r3
 1025 006a FFF7FEFF 	 bl __aeabi_ui2d
 1026 006e 031C     	 mov r3,r0
 1027 0070 0C1C     	 mov r4,r1
 1028 0072 181C     	 mov r0,r3
 1029 0074 211C     	 mov r1,r4
 1030 0076 1E4A     	 ldr r2,.L48+24
 1031 0078 1E4B     	 ldr r3,.L48+28
 1032 007a FFF7FEFF 	 bl __aeabi_dmul
 1033 007e 031C     	 mov r3,r0
 1034 0080 0C1C     	 mov r4,r1
 1035 0082 181C     	 mov r0,r3
 1036 0084 211C     	 mov r1,r4
 1037 0086 FFF7FEFF 	 bl __aeabi_d2uiz
 1038 008a 031C     	 mov r3,r0
 1039 008c 9AB2     	 uxth r2,r3
 1040 008e 1A4B     	 ldr r3,.L48+32
 1041 0090 1A80     	 strh r2,[r3]
 189:../main.c     **** 			sample_count++; // sampelr rater counter
 1042              	 .loc 3 189 0
 1043 0092 1A4B     	 ldr r3,.L48+36
 1044 0094 1B68     	 ldr r3,[r3]
 1045 0096 5A1C     	 add r2,r3,#1
 1046 0098 184B     	 ldr r3,.L48+36
 1047 009a 1A60     	 str r2,[r3]
 1048 009c 04E0     	 b .L47
 1049              	.L46:
 190:../main.c     **** 		}
 191:../main.c     **** 		else limit_fail_count ++;
 1050              	 .loc 3 191 0
 1051 009e 184B     	 ldr r3,.L48+40
 1052 00a0 1B68     	 ldr r3,[r3]
 1053 00a2 5A1C     	 add r2,r3,#1
 1054 00a4 164B     	 ldr r3,.L48+40
 1055 00a6 1A60     	 str r2,[r3]
 1056              	.L47:
 192:../main.c     **** 		 reset_at = t_10us_count + RESET_IN_10us_AFTER_SUCSSES;
 1057              	 .loc 3 192 0
 1058 00a8 164B     	 ldr r3,.L48+44
 1059 00aa 1B88     	 ldrh r3,[r3]
 1060 00ac 1A1C     	 mov r2,r3
 1061 00ae 164B     	 ldr r3,.L48+48
 1062 00b0 1B68     	 ldr r3,[r3]
 1063 00b2 D218     	 add r2,r2,r3
 1064 00b4 154B     	 ldr r3,.L48+52
 1065 00b6 1A60     	 str r2,[r3]
 193:../main.c     **** 		 reset_at = saturation_to_MIN_MAX(reset_at,MAX_RESET,MIN_RESET);
 1066              	 .loc 3 193 0
 1067 00b8 144B     	 ldr r3,.L48+52
 1068 00ba 1B68     	 ldr r3,[r3]
 1069 00bc 9AB2     	 uxth r2,r3
 1070 00be 144B     	 ldr r3,.L48+56
 1071 00c0 1B88     	 ldrh r3,[r3]
 1072 00c2 1449     	 ldr r1,.L48+60
 1073 00c4 101C     	 mov r0,r2
 1074 00c6 1A1C     	 mov r2,r3
 1075 00c8 FFF7FEFF 	 bl saturation_to_MIN_MAX
 1076 00cc 031C     	 mov r3,r0
 1077 00ce 1A1C     	 mov r2,r3
 1078 00d0 0E4B     	 ldr r3,.L48+52
 1079 00d2 1A60     	 str r2,[r3]
 1080              	.L43:
 194:../main.c     **** 	}
 195:../main.c     **** }
 1081              	 .loc 3 195 0
 1082 00d4 BD46     	 mov sp,r7
 1083              	 
 1084 00d6 98BD     	 pop {r3,r4,r7,pc}
 1085              	.L49:
 1086              	 .align 2
 1087              	.L48:
 1088 00d8 00000000 	 .word ECHO_R
 1089 00dc 00000000 	 .word echo_state
 1090 00e0 00000000 	 .word wait_echo
 1091 00e4 00000000 	 .word echo_count_control
 1092 00e8 00000000 	 .word echo_t_10us
 1093 00ec 00000000 	 .word echo_time
 1094 00f0 C3F5285C 	 .word 1546188227
 1095 00f4 8FC2C53F 	 .word 1069925007
 1096 00f8 00000000 	 .word distance_R
 1097 00fc 00000000 	 .word sample_count
 1098 0100 00000000 	 .word limit_fail_count
 1099 0104 00000000 	 .word RESET_IN_10us_AFTER_SUCSSES
 1100 0108 00000000 	 .word t_10us_count
 1101 010c 00000000 	 .word reset_at
 1102 0110 00000000 	 .word MIN_RESET
 1103 0114 C4090000 	 .word 2500
 1104              	 .cfi_endproc
 1105              	.LFE207:
 1107              	 .section .text.IRQ0_Handler,"ax",%progbits
 1108              	 .align 2
 1109              	 .global IRQ0_Handler
 1110              	 .code 16
 1111              	 .thumb_func
 1113              	IRQ0_Handler:
 1114              	.LFB208:
 196:../main.c     **** 
 197:../main.c     **** 
 198:../main.c     **** void ISR_1s_TIMER(){ //for diagnostics
 1115              	 .loc 3 198 0
 1116              	 .cfi_startproc
 1117 0000 80B5     	 push {r7,lr}
 1118              	.LCFI19:
 1119              	 .cfi_def_cfa_offset 8
 1120              	 .cfi_offset 7,-8
 1121              	 .cfi_offset 14,-4
 1122 0002 00AF     	 add r7,sp,#0
 1123              	.LCFI20:
 1124              	 .cfi_def_cfa_register 7
 199:../main.c     **** 	sample_rate_Hz = sample_count;
 1125              	 .loc 3 199 0
 1126 0004 154B     	 ldr r3,.L53
 1127 0006 1A68     	 ldr r2,[r3]
 1128 0008 154B     	 ldr r3,.L53+4
 1129 000a 1A60     	 str r2,[r3]
 200:../main.c     **** 	if(restet_count > sample_count) failed_count = restet_count - sample_count;
 1130              	 .loc 3 200 0
 1131 000c 154B     	 ldr r3,.L53+8
 1132 000e 1A68     	 ldr r2,[r3]
 1133 0010 124B     	 ldr r3,.L53
 1134 0012 1B68     	 ldr r3,[r3]
 1135 0014 9A42     	 cmp r2,r3
 1136 0016 07D9     	 bls .L51
 1137              	 .loc 3 200 0 is_stmt 0 discriminator 1
 1138 0018 124B     	 ldr r3,.L53+8
 1139 001a 1A68     	 ldr r2,[r3]
 1140 001c 0F4B     	 ldr r3,.L53
 1141 001e 1B68     	 ldr r3,[r3]
 1142 0020 D21A     	 sub r2,r2,r3
 1143 0022 114B     	 ldr r3,.L53+12
 1144 0024 1A60     	 str r2,[r3]
 1145 0026 02E0     	 b .L52
 1146              	.L51:
 201:../main.c     **** 	else failed_count = 0;
 1147              	 .loc 3 201 0 is_stmt 1
 1148 0028 0F4B     	 ldr r3,.L53+12
 1149 002a 0022     	 mov r2,#0
 1150 002c 1A60     	 str r2,[r3]
 1151              	.L52:
 202:../main.c     **** 	echo_not_low_count_1 = echo_not_low_count;
 1152              	 .loc 3 202 0
 1153 002e 0F4B     	 ldr r3,.L53+16
 1154 0030 1A68     	 ldr r2,[r3]
 1155 0032 0F4B     	 ldr r3,.L53+20
 1156 0034 1A60     	 str r2,[r3]
 203:../main.c     **** 	limit_fail_num = limit_fail_count;
 1157              	 .loc 3 203 0
 1158 0036 0F4B     	 ldr r3,.L53+24
 1159 0038 1A68     	 ldr r2,[r3]
 1160 003a 0F4B     	 ldr r3,.L53+28
 1161 003c 1A60     	 str r2,[r3]
 204:../main.c     **** 	sample_count = 0;
 1162              	 .loc 3 204 0
 1163 003e 074B     	 ldr r3,.L53
 1164 0040 0022     	 mov r2,#0
 1165 0042 1A60     	 str r2,[r3]
 205:../main.c     **** 	restet_count = 0;
 1166              	 .loc 3 205 0
 1167 0044 074B     	 ldr r3,.L53+8
 1168 0046 0022     	 mov r2,#0
 1169 0048 1A60     	 str r2,[r3]
 206:../main.c     **** 	limit_fail_count = 0;
 1170              	 .loc 3 206 0
 1171 004a 0A4B     	 ldr r3,.L53+24
 1172 004c 0022     	 mov r2,#0
 1173 004e 1A60     	 str r2,[r3]
 207:../main.c     **** 	echo_not_low_count = 0;
 1174              	 .loc 3 207 0
 1175 0050 064B     	 ldr r3,.L53+16
 1176 0052 0022     	 mov r2,#0
 1177 0054 1A60     	 str r2,[r3]
 208:../main.c     **** }
 1178              	 .loc 3 208 0
 1179 0056 BD46     	 mov sp,r7
 1180              	 
 1181 0058 80BD     	 pop {r7,pc}
 1182              	.L54:
 1183 005a C046     	 .align 2
 1184              	.L53:
 1185 005c 00000000 	 .word sample_count
 1186 0060 00000000 	 .word sample_rate_Hz
 1187 0064 00000000 	 .word restet_count
 1188 0068 00000000 	 .word failed_count
 1189 006c 00000000 	 .word echo_not_low_count
 1190 0070 00000000 	 .word echo_not_low_count_1
 1191 0074 00000000 	 .word limit_fail_count
 1192 0078 00000000 	 .word limit_fail_num
 1193              	 .cfi_endproc
 1194              	.LFE208:
 1196              	 .section .text.within_MAX_MIN_check_int,"ax",%progbits
 1197              	 .align 2
 1198              	 .global within_MAX_MIN_check_int
 1199              	 .code 16
 1200              	 .thumb_func
 1202              	within_MAX_MIN_check_int:
 1203              	.LFB209:
 209:../main.c     **** 
 210:../main.c     **** 
 211:../main.c     **** bool within_MAX_MIN_check_int(int x, int MAX, int MIN){
 1204              	 .loc 3 211 0
 1205              	 .cfi_startproc
 1206 0000 80B5     	 push {r7,lr}
 1207              	.LCFI21:
 1208              	 .cfi_def_cfa_offset 8
 1209              	 .cfi_offset 7,-8
 1210              	 .cfi_offset 14,-4
 1211 0002 84B0     	 sub sp,sp,#16
 1212              	.LCFI22:
 1213              	 .cfi_def_cfa_offset 24
 1214 0004 00AF     	 add r7,sp,#0
 1215              	.LCFI23:
 1216              	 .cfi_def_cfa_register 7
 1217 0006 F860     	 str r0,[r7,#12]
 1218 0008 B960     	 str r1,[r7,#8]
 1219 000a 7A60     	 str r2,[r7,#4]
 212:../main.c     **** 	if((x - MIN) * (x - MAX) <= 0) return 1;
 1220              	 .loc 3 212 0
 1221 000c FA68     	 ldr r2,[r7,#12]
 1222 000e 7B68     	 ldr r3,[r7,#4]
 1223 0010 D31A     	 sub r3,r2,r3
 1224 0012 F968     	 ldr r1,[r7,#12]
 1225 0014 BA68     	 ldr r2,[r7,#8]
 1226 0016 8A1A     	 sub r2,r1,r2
 1227 0018 5343     	 mul r3,r2
 1228 001a 002B     	 cmp r3,#0
 1229 001c 01DC     	 bgt .L56
 1230              	 .loc 3 212 0 is_stmt 0 discriminator 1
 1231 001e 0123     	 mov r3,#1
 1232 0020 00E0     	 b .L57
 1233              	.L56:
 213:../main.c     **** 	else return 0;
 1234              	 .loc 3 213 0 is_stmt 1
 1235 0022 0023     	 mov r3,#0
 1236              	.L57:
 214:../main.c     **** }
 1237              	 .loc 3 214 0
 1238 0024 181C     	 mov r0,r3
 1239 0026 BD46     	 mov sp,r7
 1240 0028 04B0     	 add sp,sp,#16
 1241              	 
 1242 002a 80BD     	 pop {r7,pc}
 1243              	 .cfi_endproc
 1244              	.LFE209:
 1246              	 .section .text.saturation_to_MIN_MAX,"ax",%progbits
 1247              	 .align 2
 1248              	 .global saturation_to_MIN_MAX
 1249              	 .code 16
 1250              	 .thumb_func
 1252              	saturation_to_MIN_MAX:
 1253              	.LFB210:
 215:../main.c     **** 
 216:../main.c     **** uint16_t saturation_to_MIN_MAX(uint16_t value, uint16_t MAX, uint16_t MIN){
 1254              	 .loc 3 216 0
 1255              	 .cfi_startproc
 1256 0000 90B5     	 push {r4,r7,lr}
 1257              	.LCFI24:
 1258              	 .cfi_def_cfa_offset 12
 1259              	 .cfi_offset 4,-12
 1260              	 .cfi_offset 7,-8
 1261              	 .cfi_offset 14,-4
 1262 0002 83B0     	 sub sp,sp,#12
 1263              	.LCFI25:
 1264              	 .cfi_def_cfa_offset 24
 1265 0004 00AF     	 add r7,sp,#0
 1266              	.LCFI26:
 1267              	 .cfi_def_cfa_register 7
 1268 0006 041C     	 mov r4,r0
 1269 0008 081C     	 mov r0,r1
 1270 000a 111C     	 mov r1,r2
 1271 000c BB1D     	 add r3,r7,#6
 1272 000e 221C     	 add r2,r4,#0
 1273 0010 1A80     	 strh r2,[r3]
 1274 0012 3B1D     	 add r3,r7,#4
 1275 0014 021C     	 add r2,r0,#0
 1276 0016 1A80     	 strh r2,[r3]
 1277 0018 BB1C     	 add r3,r7,#2
 1278 001a 0A1C     	 add r2,r1,#0
 1279 001c 1A80     	 strh r2,[r3]
 217:../main.c     **** 	if(value < MIN) return  MIN;
 1280              	 .loc 3 217 0
 1281 001e BA1D     	 add r2,r7,#6
 1282 0020 BB1C     	 add r3,r7,#2
 1283 0022 1288     	 ldrh r2,[r2]
 1284 0024 1B88     	 ldrh r3,[r3]
 1285 0026 9A42     	 cmp r2,r3
 1286 0028 02D2     	 bcs .L59
 1287              	 .loc 3 217 0 is_stmt 0 discriminator 1
 1288 002a BB1C     	 add r3,r7,#2
 1289 002c 1B88     	 ldrh r3,[r3]
 1290 002e 0AE0     	 b .L60
 1291              	.L59:
 218:../main.c     **** 	else if(value > MAX) return MAX;
 1292              	 .loc 3 218 0 is_stmt 1
 1293 0030 BA1D     	 add r2,r7,#6
 1294 0032 3B1D     	 add r3,r7,#4
 1295 0034 1288     	 ldrh r2,[r2]
 1296 0036 1B88     	 ldrh r3,[r3]
 1297 0038 9A42     	 cmp r2,r3
 1298 003a 02D9     	 bls .L61
 1299              	 .loc 3 218 0 is_stmt 0 discriminator 1
 1300 003c 3B1D     	 add r3,r7,#4
 1301 003e 1B88     	 ldrh r3,[r3]
 1302 0040 01E0     	 b .L60
 1303              	.L61:
 219:../main.c     **** 	else return value;
 1304              	 .loc 3 219 0 is_stmt 1
 1305 0042 BB1D     	 add r3,r7,#6
 1306 0044 1B88     	 ldrh r3,[r3]
 1307              	.L60:
 220:../main.c     **** }
 1308              	 .loc 3 220 0
 1309 0046 181C     	 mov r0,r3
 1310 0048 BD46     	 mov sp,r7
 1311 004a 03B0     	 add sp,sp,#12
 1312              	 
 1313 004c 90BD     	 pop {r4,r7,pc}
 1314              	 .cfi_endproc
 1315              	.LFE210:
 1317 004e C046     	 .section .text.CAN_send_values,"ax",%progbits
 1318              	 .align 2
 1319              	 .global CAN_send_values
 1320              	 .code 16
 1321              	 .thumb_func
 1323              	CAN_send_values:
 1324              	.LFB211:
 221:../main.c     **** 
 222:../main.c     **** void CAN_send_values(){
 1325              	 .loc 3 222 0
 1326              	 .cfi_startproc
 1327 0000 80B5     	 push {r7,lr}
 1328              	.LCFI27:
 1329              	 .cfi_def_cfa_offset 8
 1330              	 .cfi_offset 7,-8
 1331              	 .cfi_offset 14,-4
 1332 0002 82B0     	 sub sp,sp,#8
 1333              	.LCFI28:
 1334              	 .cfi_def_cfa_offset 16
 1335 0004 00AF     	 add r7,sp,#0
 1336              	.LCFI29:
 1337              	 .cfi_def_cfa_register 7
 223:../main.c     **** 	uint16_t RX_Data[4] ={CAN_OK, distance_C, distance_L, distance_R}; // in int16_t mm/s converter ba
 1338              	 .loc 3 223 0
 1339 0006 134B     	 ldr r3,.L63
 1340 0008 1B78     	 ldrb r3,[r3]
 1341 000a 9AB2     	 uxth r2,r3
 1342 000c 3B1C     	 mov r3,r7
 1343 000e 1A80     	 strh r2,[r3]
 1344 0010 114B     	 ldr r3,.L63+4
 1345 0012 1B88     	 ldrh r3,[r3]
 1346 0014 9AB2     	 uxth r2,r3
 1347 0016 3B1C     	 mov r3,r7
 1348 0018 5A80     	 strh r2,[r3,#2]
 1349 001a 104B     	 ldr r3,.L63+8
 1350 001c 1B88     	 ldrh r3,[r3]
 1351 001e 9AB2     	 uxth r2,r3
 1352 0020 3B1C     	 mov r3,r7
 1353 0022 9A80     	 strh r2,[r3,#4]
 1354 0024 0E4B     	 ldr r3,.L63+12
 1355 0026 1B88     	 ldrh r3,[r3]
 1356 0028 9AB2     	 uxth r2,r3
 1357 002a 3B1C     	 mov r3,r7
 1358 002c DA80     	 strh r2,[r3,#6]
 224:../main.c     **** 
 225:../main.c     **** 	CAN_NODE_MO_UpdateData((void*) CAN_NODE_0.lmobj_ptr[0], (uint8_t*)RX_Data);
 1359              	 .loc 3 225 0
 1360 002e 0D4B     	 ldr r3,.L63+16
 1361 0030 DA68     	 ldr r2,[r3,#12]
 1362 0032 3B1C     	 mov r3,r7
 1363 0034 101C     	 mov r0,r2
 1364 0036 191C     	 mov r1,r3
 1365 0038 FFF7FEFF 	 bl CAN_NODE_MO_UpdateData
 226:../main.c     **** 	CAN_NODE_MO_Transmit((void*) CAN_NODE_0.lmobj_ptr[0]); //Transmit the data of message object1
 1366              	 .loc 3 226 0
 1367 003c 094B     	 ldr r3,.L63+16
 1368 003e DB68     	 ldr r3,[r3,#12]
 1369 0040 181C     	 mov r0,r3
 1370 0042 FFF7FEFF 	 bl CAN_NODE_MO_Transmit
 227:../main.c     **** 
 228:../main.c     **** 	// reset
 229:../main.c     **** 	distance_C = 0;
 1371              	 .loc 3 229 0
 1372 0046 044B     	 ldr r3,.L63+4
 1373 0048 0022     	 mov r2,#0
 1374 004a 1A80     	 strh r2,[r3]
 230:../main.c     **** 	//distance_L = 0;
 231:../main.c     **** 	//distance_R = 0;
 232:../main.c     **** }
 1375              	 .loc 3 232 0
 1376 004c BD46     	 mov sp,r7
 1377 004e 02B0     	 add sp,sp,#8
 1378              	 
 1379 0050 80BD     	 pop {r7,pc}
 1380              	.L64:
 1381 0052 C046     	 .align 2
 1382              	.L63:
 1383 0054 00000000 	 .word CAN_OK
 1384 0058 00000000 	 .word distance_C
 1385 005c 00000000 	 .word distance_L
 1386 0060 00000000 	 .word distance_R
 1387 0064 00000000 	 .word CAN_NODE_0
 1388              	 .cfi_endproc
 1389              	.LFE211:
 1391              	 .text
 1392              	.Letext0:
 1393              	 .file 4 "c:\\dave\\dave-ide-4.4.2-64bit\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1394              	 .file 5 "c:\\dave\\dave-ide-4.4.2-64bit\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1395              	 .file 6 "C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/CMSIS/Infineon/XMC1400_series/Include/XMC1400.h"
 1396              	 .file 7 "C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc/xmc1_scu.h"
 1397              	 .file 8 "C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc/xmc1_gpio.h"
 1398              	 .file 9 "C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc/xmc_eru.h"
 1399              	 .file 10 "C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/BUS_IO/bus_io.h"
 1400              	 .file 11 "C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc/xmc_can.h"
 1401              	 .file 12 "C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/GLOBAL_CAN/global_can.h"
 1402              	 .file 13 "C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/CAN_NODE/can_node.h"
 1403              	 .file 14 "C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/DAVE.h"
 1404              	 .file 15 "C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/CMSIS/Include/cmsis_gcc.h"
 1405              	 .file 16 "C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/CMSIS/Infineon/XMC1400_series/Include/system_XMC1400.h"
 1406              	 .file 17 "C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT/pin_interrupt_extern.h"
 1407              	 .file 18 "C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/BUS_IO/bus_io_extern.h"
 1408              	 .file 19 "C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/CAN_NODE/can_node_extern.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
    {standard input}:18     .text.XMC_GPIO_GetInput:00000000 $t
    {standard input}:22     .text.XMC_GPIO_GetInput:00000000 XMC_GPIO_GetInput
    {standard input}:61     .text.PIN_INTERRUPT_GetPinValue:00000000 $t
    {standard input}:65     .text.PIN_INTERRUPT_GetPinValue:00000000 PIN_INTERRUPT_GetPinValue
    {standard input}:104    .bss.CAN_OK:00000000 CAN_OK
    {standard input}:105    .bss.CAN_OK:00000000 $d
                            *COM*:00000001 init_status
    {standard input}:112    .data.RESET_IN_10us_AFTER_SUCSSES:00000000 RESET_IN_10us_AFTER_SUCSSES
    {standard input}:109    .data.RESET_IN_10us_AFTER_SUCSSES:00000000 $d
    {standard input}:119    .data.RESET_IN_10us_AFTER_ECHO_LOW_FAIL:00000000 RESET_IN_10us_AFTER_ECHO_LOW_FAIL
    {standard input}:116    .data.RESET_IN_10us_AFTER_ECHO_LOW_FAIL:00000000 $d
    {standard input}:126    .data.MIN_RESET:00000000 MIN_RESET
    {standard input}:123    .data.MIN_RESET:00000000 $d
    {standard input}:132    .bss.echo_state:00000000 echo_state
    {standard input}:133    .bss.echo_state:00000000 $d
    {standard input}:138    .bss.wait_echo:00000000 wait_echo
    {standard input}:139    .bss.wait_echo:00000000 $d
    {standard input}:144    .bss.echo_count_control:00000000 echo_count_control
    {standard input}:145    .bss.echo_count_control:00000000 $d
    {standard input}:150    .data.reset_done:00000000 reset_done
    {standard input}:157    .bss.t_10us_count:00000000 t_10us_count
    {standard input}:154    .bss.t_10us_count:00000000 $d
    {standard input}:164    .data.reset_at:00000000 reset_at
    {standard input}:161    .data.reset_at:00000000 $d
    {standard input}:171    .bss.echo_t_10us:00000000 echo_t_10us
    {standard input}:168    .bss.echo_t_10us:00000000 $d
    {standard input}:178    .bss.echo_time:00000000 echo_time
    {standard input}:175    .bss.echo_time:00000000 $d
    {standard input}:185    .bss.distance_C:00000000 distance_C
    {standard input}:182    .bss.distance_C:00000000 $d
    {standard input}:192    .bss.distance_L:00000000 distance_L
    {standard input}:189    .bss.distance_L:00000000 $d
    {standard input}:199    .bss.distance_R:00000000 distance_R
    {standard input}:196    .bss.distance_R:00000000 $d
    {standard input}:206    .bss.restet_count:00000000 restet_count
    {standard input}:203    .bss.restet_count:00000000 $d
    {standard input}:213    .bss.sample_count:00000000 sample_count
    {standard input}:210    .bss.sample_count:00000000 $d
    {standard input}:220    .bss.sample_rate_Hz:00000000 sample_rate_Hz
    {standard input}:217    .bss.sample_rate_Hz:00000000 $d
    {standard input}:227    .bss.failed_count:00000000 failed_count
    {standard input}:224    .bss.failed_count:00000000 $d
    {standard input}:234    .bss.echo_not_low_count:00000000 echo_not_low_count
    {standard input}:231    .bss.echo_not_low_count:00000000 $d
    {standard input}:241    .bss.echo_not_low_count_1:00000000 echo_not_low_count_1
    {standard input}:238    .bss.echo_not_low_count_1:00000000 $d
    {standard input}:248    .bss.limit_fail_num:00000000 limit_fail_num
    {standard input}:245    .bss.limit_fail_num:00000000 $d
    {standard input}:255    .bss.limit_fail_count:00000000 limit_fail_count
    {standard input}:252    .bss.limit_fail_count:00000000 $d
    {standard input}:261    .data.Now_Sensor:00000000 Now_Sensor
    {standard input}:264    .text.main:00000000 $t
    {standard input}:269    .text.main:00000000 main
    {standard input}:323    .text.main:0000003c $d
    {standard input}:330    .text.IRQ7_Handler:00000000 $t
    {standard input}:335    .text.IRQ7_Handler:00000000 IRQ7_Handler
    {standard input}:1252   .text.saturation_to_MIN_MAX:00000000 saturation_to_MIN_MAX
    {standard input}:535    .text.reset:00000000 reset
    {standard input}:510    .text.IRQ7_Handler:0000010c $d
    {standard input}:530    .text.reset:00000000 $t
    {standard input}:1323   .text.CAN_send_values:00000000 CAN_send_values
    {standard input}:609    .text.reset:00000060 $d
    {standard input}:625    .text.IRQ5_Handler:00000000 $t
    {standard input}:630    .text.IRQ5_Handler:00000000 IRQ5_Handler
    {standard input}:1202   .text.within_MAX_MIN_check_int:00000000 within_MAX_MIN_check_int
    {standard input}:766    .text.IRQ5_Handler:000000d8 $d
    {standard input}:786    .text.IRQ3_Handler:00000000 $t
    {standard input}:791    .text.IRQ3_Handler:00000000 IRQ3_Handler
    {standard input}:927    .text.IRQ3_Handler:000000d8 $d
    {standard input}:947    .text.IRQ6_Handler:00000000 $t
    {standard input}:952    .text.IRQ6_Handler:00000000 IRQ6_Handler
    {standard input}:1088   .text.IRQ6_Handler:000000d8 $d
    {standard input}:1108   .text.IRQ0_Handler:00000000 $t
    {standard input}:1113   .text.IRQ0_Handler:00000000 IRQ0_Handler
    {standard input}:1185   .text.IRQ0_Handler:0000005c $d
    {standard input}:1197   .text.within_MAX_MIN_check_int:00000000 $t
    {standard input}:1247   .text.saturation_to_MIN_MAX:00000000 $t
    {standard input}:1318   .text.CAN_send_values:00000000 $t
    {standard input}:1383   .text.CAN_send_values:00000054 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
DAVE_Init
CAN_NODE_Init
CAN_NODE_0
BUS_IO_Write
BUS_IO_0
ECHO_C
ECHO_L
ECHO_R
__aeabi_ui2d
__aeabi_dmul
__aeabi_d2uiz
CAN_NODE_MO_UpdateData
CAN_NODE_MO_Transmit
