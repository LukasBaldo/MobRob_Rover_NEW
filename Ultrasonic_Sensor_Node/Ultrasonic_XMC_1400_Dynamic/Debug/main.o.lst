   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,6
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "main.c"
  14              	 .text
  15              	.Ltext0:
  16              	 .cfi_sections .debug_frame
  17              	 .section .text.XMC_GPIO_GetInput,"ax",%progbits
  18              	 .align 2
  19              	 .code 16
  20              	 .thumb_func
  22              	XMC_GPIO_GetInput:
  23              	.LFB125:
  24              	 .file 1 "C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc/xmc_gpio.h"
   1:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** /**
   2:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * @file xmc_gpio.h
   3:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * @date 2015-06-20
   4:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   5:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * @cond
   6:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *****************************************************************************
   7:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   9:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * All rights reserved.
  11:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  12:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  14:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * Permission is hereby granted, free of charge, to any person or organization
  15:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * obtaining a copy of the software and accompanying documentation covered by
  16:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * do so, all subject to the following:
  20:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  21:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * The copyright notices in the Software and this entire statement, including
  22:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * the above license grant, this restriction and the following disclaimer,
  23:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * must be included in all copies of the Software, in whole or in part, and
  24:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * all derivative works of the Software, unless such copies or derivative
  25:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * works are solely in the form of machine-executable object code generated by
  26:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * a source language processor.
  27:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  28:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * DEALINGS IN THE SOFTWARE.
  35:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  36:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * To improve the quality of the software, users are encouraged to share
  37:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * at XMCSupport@infineon.com.
  39:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *****************************************************************************
  40:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  41:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * Change History
  42:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * --------------
  43:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  44:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-02-20:
  45:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Initial draft<br>
  46:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Documentation improved <br>
  47:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  48:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-06-20:
  49:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  50:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  51:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * @endcond
  52:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  53:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  54:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
  55:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** #ifndef XMC_GPIO_H
  56:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_H
  57:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
  58:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  59:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * HEADER FILES
  60:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  61:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
  62:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc_common.h"
  63:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
  64:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  65:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup XMClib XMC Peripheral Library
  66:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * @{
  67:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  68:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
  69:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  70:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup GPIO
  71:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * @brief General Purpose Input Output (GPIO) driver for the XMC microcontroller family.
  72:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  73:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * GPIO driver provide a generic and very flexible software interface for all standard digital I/O 
  74:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * Each port slice has individual interfaces for the operation as General Purpose I/O and it furthe
  75:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * connectivity to the on-chip periphery and the control for the pad characteristics.
  76:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  77:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * The driver is divided into Input and Output mode.
  78:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  79:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * Input mode features:
  80:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Configuration structure XMC_GPIO_CONFIG_t and initialization function XMC_GPIO_Init()
  81:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of weak pull-up or pull-down device. Configuration structure XMC_GPIO_MO
  82:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
  83:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of input hysteresis. XMC_GPIO_SetInputHysteresis()
  84:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  85:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  86:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  87:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * Output mode features:
  88:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of push pull/open drain and Alternate output. Configuration structure XM
  89:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
  90:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of pad driver strength. Configuration structure XMC_GPIO_OUTPUT_STRENGTH
  91:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  92:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  93:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of initial output level. Configuration structure XMC_GPIO_OUTPUT_LEVEL_t
  94:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  95:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *@{
  96:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  97:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
  98:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  99:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * MACROS
 100:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 101:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
 102:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Pos PORT0_IOCR0_PC0_Pos
 103:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Msk PORT0_IOCR0_PC0_Msk
 104:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
 105:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Size 				(8U)
 106:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
 107:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
 108:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_OUTPUT_LEVEL(level) ((level == XMC_GPIO_OUTPUT_LEVEL_LOW) || \
 109:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****                                             (level == XMC_GPIO_OUTPUT_LEVEL_HIGH))
 110:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
 111:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_HWCTRL(hwctrl) ((hwctrl == XMC_GPIO_HWCTRL_DISABLED) || \
 112:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL1) || \
 113:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL2))
 114:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
 115:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 116:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * ENUMS
 117:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 118:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
 119:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
 120:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 121:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines output level of a pin. Use type \a XMC_GPIO_OUTPUT_LEVEL_t for this enum.
 122:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 123:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_OUTPUT_LEVEL
 124:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** {
 125:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_LOW  = 0x10000U, /**<  Reset bit */
 126:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_HIGH = 0x1U, 	/**< Set bit  */
 127:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_OUTPUT_LEVEL_t;
 128:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
 129:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 130:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines direct hardware control characteristics of the pin . Use type \a XMC_GPIO_HWCTRL_t for t
 131:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 132:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_HWCTRL
 133:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** {
 134:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_DISABLED     = 0x0U, /**<  Software control only */
 135:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL1  = 0x1U, /**<  HWI0/HWO0 control path can override the software confi
 136:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL2  = 0x2U  /**<  HWI1/HWO1 control path can override the software confi
 137:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_HWCTRL_t;
 138:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
 139:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 140:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * DEVICE FAMILY EXTENSIONS
 141:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 142:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
 143:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** #if UC_FAMILY == XMC1
 144:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc1_gpio.h"
 145:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** #elif UC_FAMILY == XMC4
 146:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc4_gpio.h"
 147:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** #else
 148:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** #error "xmc_gpio.h: family device not supported"
 149:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 150:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
 151:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 152:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * API PROTOTYPES
 153:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 154:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
 155:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** #ifdef __cplusplus
 156:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** extern "C" {
 157:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 158:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
 159:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
 160:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 161:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	  Constant pointer pointing to GPIO port, to access port registers like Pn_OUT,Pn_O
 162:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	  Port pin number.
 163:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  config GPIO configuration data structure. Refer data structure @ref XMC_GPIO_CONFIG_t fo
 164:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 165:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 166:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 167:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 168:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
 169:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,hysteresis, push pull
 170:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for a selected \a po
 171:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * \a config provides selected I/O settings. It configures hardware registers Pn_IOCR,Pn_OUT, Pn_OM
 172:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 173:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
 174:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,push pull /open drain
 175:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for selected \a port
 176:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * It configures hardware registers Pn_IOCR,Pn_OUT,Pn_OMR,Pn_PDISC and Pn_PDR.\n
 177:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 178:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 179:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 180:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 181:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 182:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 183:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * This API is called in definition of DAVE_init by code generation and therefore should not be exp
 184:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * for the normal operation. Use other APIs only after DAVE_init is called successfully (returns DA
 185:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 186:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 187:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 188:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
 189:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
 190:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_Init(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_CONFIG_t *const c
 191:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
 192:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 193:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 194:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	Constant pointer pointing to GPIO port, to access hardware register Pn_IOCR.
 195:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 196:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  mode input / output functionality selection. Refer @ref XMC_GPIO_MODE_t for valid values
 197:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 198:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 199:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 200:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 201:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets digital input and output driver functionality and characteristics of a GPIO port pin. It co
 202:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * registers Pn_IOCR. \a mode is initially configured during initialization in XMC_GPIO_Init(). Cal
 203:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * the port direction functionality as needed later in the program.
 204:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 205:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 206:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 207:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 208:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 209:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
 210:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_SetMode(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_MODE_t mode);
 211:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
 212:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
 213:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 214:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 215:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	 Constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 216:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	 Port pin number.
 217:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  level output level selection. Refer @ref XMC_GPIO_OUTPUT_LEVEL_t for valid values.
 218:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 219:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 220:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 221:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 222:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * Set port pin output level to high or low.It configures hardware registers Pn_OMR.\a level is ini
 223:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * configured during initialization in XMC_GPIO_Init(). Call this API to alter output level as need
 224:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 225:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 226:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 227:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 228:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 229:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 230:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 231:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 232:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
 233:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
 234:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLevel(XMC_GPIO_PORT_t *const port, const uint8_t pin, const 
 235:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** {
 236:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 237:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid output level", XMC_GPIO_CHECK_OUTPUT_LEVEL(level));
 238:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
 239:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)level << pin;
 240:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** }
 241:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
 242:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
 243:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 244:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 245:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 246:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 247:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 248:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 249:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 250:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *  Sets port pin output to high. It configures hardware registers Pn_OMR.
 251:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 252:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *  \par<b>Related APIs:</b><BR>
 253:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputLow()
 254:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 255:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 256:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().\n
 257:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 258:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 259:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 260:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
 261:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputHigh(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 262:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** {
 263:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputHigh: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 264:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
 265:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)0x1U << pin;
 266:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** }
 267:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
 268:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 269:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 270:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 271:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	port pin number.
 272:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 273:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return  None
 274:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 275:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Description:</b><br>
 276:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets port pin output to low. It configures hardware registers Pn_OMR.\n
 277:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 278:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>>
 279:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh()
 280:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 281:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Note:</b><br>
 282:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 283:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 284:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 285:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 286:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
 287:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLow(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 288:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** {
 289:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLow: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 290:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
 291:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10000U << pin;
 292:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** }
 293:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
 294:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 295:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 296:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 297:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param pin  port pin number.
 298:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 299:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 300:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 301:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 302:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * Configures port pin output to Toggle. It configures hardware registers Pn_OMR.
 303:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 304:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 305:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 306:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 307:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 308:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode(). Regis
 309:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * and does not contain any flip-flop. A read action delivers the value of 0.
 310:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 311:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 312:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
 313:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_ToggleOutput(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 314:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** {
 315:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_ToggleOutput: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 316:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
 317:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10001U << pin;
 318:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** }
 319:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
 320:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 321:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 322:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param port constant pointer pointing to GPIO port, to access hardware register Pn_IN.
 323:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param pin  Port pin number.
 324:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 325:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return uint32_t pin logic level status.
 326:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 327:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Description:</b><br>
 328:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * Reads the Pn_IN register and returns the current logical value at the GPIO pin.
 329:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 330:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 331:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * None
 332:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 333:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 334:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to input mode using XMC_GPIO_SetMode().
 335:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 336:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 337:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
 338:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE uint32_t XMC_GPIO_GetInput(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 339:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** {
  25              	 .loc 1 339 0
  26              	 .cfi_startproc
  27 0000 80B5     	 push {r7,lr}
  28              	.LCFI0:
  29              	 .cfi_def_cfa_offset 8
  30              	 .cfi_offset 7,-8
  31              	 .cfi_offset 14,-4
  32 0002 82B0     	 sub sp,sp,#8
  33              	.LCFI1:
  34              	 .cfi_def_cfa_offset 16
  35 0004 00AF     	 add r7,sp,#0
  36              	.LCFI2:
  37              	 .cfi_def_cfa_register 7
  38 0006 7860     	 str r0,[r7,#4]
  39 0008 0A1C     	 mov r2,r1
  40 000a FB1C     	 add r3,r7,#3
  41 000c 1A70     	 strb r2,[r3]
 340:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_GetInput: Invalid port", XMC_GPIO_CHECK_PORT(port));
 341:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** 
 342:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h ****   return (((port->IN) >> pin) & 0x1U);
  42              	 .loc 1 342 0
  43 000e 7B68     	 ldr r3,[r7,#4]
  44 0010 5A6A     	 ldr r2,[r3,#36]
  45 0012 FB1C     	 add r3,r7,#3
  46 0014 1B78     	 ldrb r3,[r3]
  47 0016 DA40     	 lsr r2,r2,r3
  48 0018 131C     	 mov r3,r2
  49 001a 0122     	 mov r2,#1
  50 001c 1340     	 and r3,r2
 343:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc\xmc_gpio.h **** }
  51              	 .loc 1 343 0
  52 001e 181C     	 mov r0,r3
  53 0020 BD46     	 mov sp,r7
  54 0022 02B0     	 add sp,sp,#8
  55              	 
  56 0024 80BD     	 pop {r7,pc}
  57              	 .cfi_endproc
  58              	.LFE125:
  60 0026 C046     	 .section .text.PIN_INTERRUPT_GetPinValue,"ax",%progbits
  61              	 .align 2
  62              	 .code 16
  63              	 .thumb_func
  65              	PIN_INTERRUPT_GetPinValue:
  66              	.LFB136:
  67              	 .file 2 "C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT/pin_interrupt.h"
   1:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
   2:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @file pin_interrupt.h
   3:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @date 2021-01-08
   4:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
   5:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * NOTE:
   6:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
   8:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @cond
   9:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
  10:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * PIN_INTERRUPT v4.0.4 - The PIN_INTERRUPT APP invokes user interrupt handler in a response to ris
  11:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                        edge event signal on a pin.
  12:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
  13:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * Copyright (c) 2016-2020, Infineon Technologies AG
  14:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * All rights reserved.                        
  15:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                                             
  16:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  17:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * following conditions are met:   
  18:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                                                                              
  19:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  20:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   disclaimer.                        
  21:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * 
  22:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  23:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   disclaimer in the documentation and/or other materials provided with the distribution.     
  24:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                         
  25:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  26:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   products derived from this software without specific prior written permission. 
  27:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                                             
  28:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  29:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  30:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  31:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  32:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  33:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  34:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.    
  35:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                                                                              
  36:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  37:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * with Infineon Technologies AG (dave@infineon.com).         
  38:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
  39:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
  40:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * Change History
  41:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * --------------
  42:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * 2015-12-03:
  43:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     - Initial version for DAVEv4. <BR>
  44:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * 
  45:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * 2021-01-08:
  46:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     - Modified check for minimum XMCLib version
  47:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
  48:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @endcond 
  49:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
  50:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
  51:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  52:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #ifndef PIN_INTERRUPT_H
  53:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #define PIN_INTERRUPT_H
  54:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  55:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**************************************************************************************************
  56:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * HEADER FILES                                                                                    
  57:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
  58:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #if (UC_SERIES == XMC14)
  59:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #include "xmc_scu.h"
  60:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #endif
  61:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #include "xmc_gpio.h"
  62:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #include "xmc_eru.h"
  63:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  64:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #include "DAVE_Common.h"
  65:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #include "pin_interrupt_conf.h"
  66:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  67:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**************************************************************************************************
  68:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * MACROS                                                                                          
  69:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
  70:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #define PIN_INTERRUPT_XMC_LIB_MAJOR_VERSION 2
  71:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #define PIN_INTERRUPT_XMC_LIB_MINOR_VERSION 1
  72:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #define PIN_INTERRUPT_XMC_LIB_PATCH_VERSION 6
  73:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  74:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #if !((XMC_LIB_MAJOR_VERSION > PIN_INTERRUPT_XMC_LIB_MAJOR_VERSION) ||\
  75:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****       ((XMC_LIB_MAJOR_VERSION == PIN_INTERRUPT_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION > P
  76:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****       ((XMC_LIB_MAJOR_VERSION == PIN_INTERRUPT_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION == 
  77:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #error "PIN_INTERRUPT requires XMC Peripheral Library v2.1.6 or higher"
  78:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #endif
  79:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  80:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
  81:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @ingroup App_publicparam
  82:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @{
  83:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
  84:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
  85:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  @brief Initialization data structure for PIN_INTERRUPT APP
  86:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
  87:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  88:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
  89:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @}
  90:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
  91:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  92:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  /*************************************************************************************************
  93:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * ENUMS
  94:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
  95:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
  96:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @ingroup PIN_INTERRUPT_enumerations
  97:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @{
  98:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
  99:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /*
 100:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief enumeration for PIN_INTERRUPT APP
 101:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 102:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** typedef enum PIN_INTERRUPT_STATUS
 103:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
 104:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_STATUS_SUCCESS = 0U,        /**<APP initialization is success */
 105:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_STATUS_FAILURE = 1U         /**<APP initialization is failure */
 106:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** } PIN_INTERRUPT_STATUS_t;
 107:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 108:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 109:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 110:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * Defines trigger edge for the event generation by ETLx (Event Trigger Logic, x = [0 to 3]) unit, 
 111:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * from ERSx(Event request source, x = [0 to 3]) unit.
 112:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 113:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** typedef enum PIN_INTERRUPT_EDGE
 114:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
 115:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_EDGE_NONE = 0U, /**< no event enabled */
 116:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_EDGE_RISING = 1U,   /**< detection of rising edge generates the event */
 117:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_EDGE_FALLING = 2U,  /**< detection of falling edge generates the event */
 118:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_EDGE_BOTH = 3U      /**< detection of either edges generates the event */
 119:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** } PIN_INTERRUPT_EDGE_t;
 120:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 121:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @}
 122:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 123:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 124:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**************************************************************************************************
 125:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * DATA STRUCTURES
 126:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** ***************************************************************************************************
 127:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 128:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @ingroup PIN_INTERRUPT_datastructures
 129:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @{
 130:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 131:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 132:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 133:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief Configuration structure for PIN_INTERRUPT APP
 134:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 135:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** typedef struct PIN_INTERRUPT
 136:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
 137:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_ERU_t *eru;  /**< Mapped ERU module */
 138:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_GPIO_PORT_t *port;  /**< Mapped port number */
 139:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_GPIO_CONFIG_t gpio_config;   /**< Initializes the input pin characteristics */
 140:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_ERU_ETL_CONFIG_t etl_config;  /**< reference to ERUx_ETLy (x = [0..1], y = [0..4])
 141:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****                                                       module configuration */
 142:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #if (UC_SERIES == XMC14)
 143:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_SCU_IRQCTRL_t irqctrl;  /**< selects the interrupt source for a NVIC interrupt node*/
 144:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #endif
 145:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   IRQn_Type IRQn;       /**< Mapped NVIC Node */
 146:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   uint8_t irq_priority; 	  /**< Node Interrupt Priority */
 147:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #if (UC_FAMILY == XMC4)
 148:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   uint8_t irq_subpriority;  /**< Node Interrupt SubPriority only valid for XMC4x */
 149:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #endif
 150:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   uint8_t etl; /*< ETLx channel (x = [0..3])*/
 151:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   uint8_t ogu; /*< OGUy channel (y = [0..3])*/
 152:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   uint8_t pin; /*< Mapped pin number */
 153:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   bool enable_at_init;  /**< Interrupt enable for Node at initialization*/
 154:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** } PIN_INTERRUPT_t;
 155:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 156:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @}
 157:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 158:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 159:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #ifdef __cplusplus
 160:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** extern "C" {
 161:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #endif
 162:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**************************************************************************************************
 163:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * API Prototypes
 164:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
 165:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 166:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @ingroup PIN_INTERRUPT_apidoc
 167:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @{
 168:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 169:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 170:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief Get PIN_INTERRUPT APP version
 171:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @return DAVE_APP_VERSION_t APP version information (major, minor and patch number)
 172:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 173:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * \par<b>Description: </b><br>
 174:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * The function can be used to check application software compatibility with a
 175:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * specific version of the APP.
 176:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 177:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * \par<b>Example Usage:</b><br>
 178:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 179:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @code
 180:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * #include "DAVE.h"
 181:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 182:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * int main(void) 
 183:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * {
 184:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   DAVE_STATUS_t init_status;
 185:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   DAVE_APP_VERSION_t version;
 186:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 187:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   // Initialize PIN_INTERRUPT APP:
 188:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   // PIN_INTERRUPT_Init() is called from within DAVE_Init().
 189:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   init_status = DAVE_Init();
 190:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 191:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   if (DAVE_STATUS_SUCCESS == init_status)
 192:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   {
 193:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     version = PIN_INTERRUPT_GetAppVersion();
 194:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     if (version.major != 4U) {
 195:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *       // Probably, not the right version.
 196:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     }
 197:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   }
 198:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 199:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   // More code here
 200:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   while(1)
 201:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   {
 202:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   }
 203:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   return (1);
 204:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * }
 205:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @endcode<BR>
 206:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 207:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** DAVE_APP_VERSION_t PIN_INTERRUPT_GetAppVersion(void);
 208:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 209:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 210:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief Initializes a PIN_INTERRUPT APP instance
 211:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @param handle Pointer pointing to APP data structure. Refer @ref PIN_INTERRUPT_t for details.
 212:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @return
 213:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *            PIN_INTERRUPT_STATUS_SUCCESS             : if initialization is successful\n
 214:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *            PIN_INTERRUPT_STATUS_FAILURE             : if initialization is failed
 215:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 216:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * \par<b>Description:</b><br>
 217:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * PIN_INTERRUPT_Init API is called during initialization of DAVE APPS. This API Initializes input 
 218:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * ERU and OGU hardware module initialization, Configures NVIC node and its priority in order to ge
 219:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 220:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * \par<b>Example Usage:</b><br>
 221:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 222:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @code
 223:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * #include "DAVE.h"
 224:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 225:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * int main(void)
 226:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * {
 227:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   DAVE_STATUS_t status;
 228:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 229:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   status = DAVE_Init();  //  PIN_INTERRUPT_Init API is called during initialization of DAVE APPS
 230:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   if (DAVE_STATUS_SUCCESS == status)
 231:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   {
 232:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     // user code
 233:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 234:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     while(1)
 235:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     {
 236:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 237:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     }
 238:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   }
 239:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   return (1);
 240:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * }
 241:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 242:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @endcode<BR>
 243:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 244:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** PIN_INTERRUPT_STATUS_t PIN_INTERRUPT_Init(const PIN_INTERRUPT_t *const handle);
 245:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 246:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 247:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief Enables the IRQ.
 248:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @param handle Pointer pointing to APP data structure. Refer @ref PIN_INTERRUPT_t for details.
 249:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @return None
 250:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * <BR><P ALIGN="LEFT"><B>Example:</B>
 251:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 252:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @code
 253:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  #include "DAVE.h"
 254:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 255:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  int main(void)
 256:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  {
 257:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    DAVE_STATUS_t status;
 258:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 259:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    status = DAVE_Init();  //  PIN_INTERRUPT_Init API is called during initialization of DAVE APP
 260:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    if (DAVE_STATUS_SUCCESS == status)
 261:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    {
 262:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *      // user code
 263:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 264:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *      PIN_INTERRUPT_Enable(&PIN_INTERRUPT_0);
 265:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *      while(1)
 266:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *      {}
 267:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    }
 268:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 269:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    return (1);
 270:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  }
 271:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @endcode<BR> </p>
 272:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 273:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** __STATIC_INLINE void PIN_INTERRUPT_Enable(const PIN_INTERRUPT_t *const handle)
 274:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
 275:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_ASSERT("PIN_INTERRUPT_Enable: Handler null pointer", handle != NULL);
 276:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   NVIC_EnableIRQ(handle->IRQn);
 277:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** }
 278:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 279:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 280:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief Disables the IRQ.
 281:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @param handle Pointer pointing to APP data structure. Refer @ref PIN_INTERRUPT_t for details.
 282:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @return None
 283:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * <BR><P ALIGN="LEFT"><B>Example:</B>
 284:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 285:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @code
 286:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  #include "DAVE.h"
 287:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 288:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  int main(void)
 289:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  {
 290:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 291:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    DAVE_STATUS_t status;
 292:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 293:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    status = DAVE_Init();  //  PIN_INTERRUPT_Init API is called during initialization of DAVE APP
 294:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    if(DAVE_STATUS_SUCCESS == status)
 295:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    {
 296:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *      // user code
 297:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 298:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *      PIN_INTERRUPT_Disable(&PIN_INTERRUPT_0);
 299:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *      while(1)
 300:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *      {}
 301:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    }
 302:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 303:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    return (1);
 304:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 305:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  }
 306:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @endcode<BR> </p>
 307:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 308:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** __STATIC_INLINE void PIN_INTERRUPT_Disable(const PIN_INTERRUPT_t *const handle)
 309:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
 310:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_ASSERT("PIN_INTERRUPT_Disable: Handler null pointer", handle != NULL);
 311:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   NVIC_DisableIRQ(handle->IRQn);
 312:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** }
 313:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 314:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 315:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * @brief Read input level of port pin.
 316:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * @param handle Pointer pointing to APP data structure. Refer @ref PIN_INTERRUPT_t for details.
 317:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * @return uint32_t input logic level. Range:0-1
 318:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *
 319:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * \par<b>Description:</b><br>
 320:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * This function reads the Pn_IN register and returns the current logical value at the GPIO pin.
 321:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *
 322:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *
 323:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * Example Usage:
 324:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * @code
 325:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * #include "DAVE.h"//Declarations from DAVE Code Generation (includes SFR declaration)
 326:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *
 327:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * int main(void)
 328:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * {
 329:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   DAVE_STATUS_t status;
 330:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   uint32_t pin_status;
 331:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   status = DAVE_Init();   // (DAVE_STATUS_t)PIN_INTERRUPT_Init(&PIN_INTERRUPT_0) is called within
 332:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   
 333:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   if (status == DAVE_STATUS_SUCCESS)
 334:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   {
 335:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 336:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   }
 337:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   else
 338:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   {
 339:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 340:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     while(1U)
 341:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     {
 342:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     }
 343:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   }
 344:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 345:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   while(1U)
 346:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   {
 347:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     pin_status = PIN_INTERRUPT_GetPinValue(&PIN_INTERRUPT_0);
 348:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     if (pin_status == 1)
 349:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     {
 350:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *       // Add application code here
 351:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     }
 352:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     else
 353:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     {
 354:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *       // Add application code here
 355:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     }
 356:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   }
 357:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   return (1);
 358:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * }
 359:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *  @endcode
 360:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** */
 361:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** __STATIC_INLINE uint32_t PIN_INTERRUPT_GetPinValue(const PIN_INTERRUPT_t *const handle)
 362:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
  68              	 .loc 2 362 0
  69              	 .cfi_startproc
  70 0000 80B5     	 push {r7,lr}
  71              	.LCFI3:
  72              	 .cfi_def_cfa_offset 8
  73              	 .cfi_offset 7,-8
  74              	 .cfi_offset 14,-4
  75 0002 82B0     	 sub sp,sp,#8
  76              	.LCFI4:
  77              	 .cfi_def_cfa_offset 16
  78 0004 00AF     	 add r7,sp,#0
  79              	.LCFI5:
  80              	 .cfi_def_cfa_register 7
  81 0006 7860     	 str r0,[r7,#4]
 363:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_ASSERT("PIN_INTERRUPT_GetPinValue: Handler null pointer", handle != NULL);
 364:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   return (XMC_GPIO_GetInput(handle->port, handle->pin));
  82              	 .loc 2 364 0
  83 0008 7B68     	 ldr r3,[r7,#4]
  84 000a 5A68     	 ldr r2,[r3,#4]
  85 000c 7B68     	 ldr r3,[r7,#4]
  86 000e 9B7F     	 ldrb r3,[r3,#30]
  87 0010 101C     	 mov r0,r2
  88 0012 191C     	 mov r1,r3
  89 0014 FFF7FEFF 	 bl XMC_GPIO_GetInput
  90 0018 031C     	 mov r3,r0
 365:C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** }
  91              	 .loc 2 365 0
  92 001a 181C     	 mov r0,r3
  93 001c BD46     	 mov sp,r7
  94 001e 02B0     	 add sp,sp,#8
  95              	 
  96 0020 80BD     	 pop {r7,pc}
  97              	 .cfi_endproc
  98              	.LFE136:
 100              	 .global CAN_OK
 101 0022 C046     	 .section .bss.CAN_OK,"aw",%nobits
 104              	CAN_OK:
 105 0000 00       	 .space 1
 106              	 .comm init_status,1,1
 107              	 .global RESET_IN_10us_AFTER_SUCSSES
 108              	 .section .data.RESET_IN_10us_AFTER_SUCSSES,"aw",%progbits
 109              	 .align 1
 112              	RESET_IN_10us_AFTER_SUCSSES:
 113 0000 0A00     	 .short 10
 114              	 .global RESET_IN_10us_AFTER_ECHO_LOW_FAIL
 115              	 .section .data.RESET_IN_10us_AFTER_ECHO_LOW_FAIL,"aw",%progbits
 116              	 .align 1
 119              	RESET_IN_10us_AFTER_ECHO_LOW_FAIL:
 120 0000 F401     	 .short 500
 121              	 .global MIN_RESET
 122              	 .section .data.MIN_RESET,"aw",%progbits
 123              	 .align 1
 126              	MIN_RESET:
 127 0000 6400     	 .short 100
 128              	 .global echo_state
 129              	 .section .bss.echo_state,"aw",%nobits
 132              	echo_state:
 133 0000 00       	 .space 1
 134              	 .global wait_echo
 135              	 .section .bss.wait_echo,"aw",%nobits
 138              	wait_echo:
 139 0000 00       	 .space 1
 140              	 .global echo_count_control
 141              	 .section .bss.echo_count_control,"aw",%nobits
 144              	echo_count_control:
 145 0000 00       	 .space 1
 146              	 .global reset_done
 147              	 .section .data.reset_done,"aw",%progbits
 150              	reset_done:
 151 0000 01       	 .byte 1
 152              	 .global t_10us_count
 153              	 .section .bss.t_10us_count,"aw",%nobits
 154              	 .align 2
 157              	t_10us_count:
 158 0000 00000000 	 .space 4
 159              	 .global reset_at
 160              	 .section .data.reset_at,"aw",%progbits
 161              	 .align 2
 164              	reset_at:
 165 0000 C4090000 	 .word 2500
 166              	 .global echo_t_10us
 167              	 .section .bss.echo_t_10us,"aw",%nobits
 168              	 .align 2
 171              	echo_t_10us:
 172 0000 00000000 	 .space 4
 173              	 .global echo_time
 174              	 .section .bss.echo_time,"aw",%nobits
 175              	 .align 2
 178              	echo_time:
 179 0000 00000000 	 .space 4
 180              	 .global distance_C
 181              	 .section .bss.distance_C,"aw",%nobits
 182              	 .align 1
 185              	distance_C:
 186 0000 0000     	 .space 2
 187              	 .global distance_L
 188              	 .section .bss.distance_L,"aw",%nobits
 189              	 .align 1
 192              	distance_L:
 193 0000 0000     	 .space 2
 194              	 .global distance_R
 195              	 .section .bss.distance_R,"aw",%nobits
 196              	 .align 1
 199              	distance_R:
 200 0000 0000     	 .space 2
 201              	 .global avg_distance_C
 202              	 .section .bss.avg_distance_C,"aw",%nobits
 203              	 .align 2
 206              	avg_distance_C:
 207 0000 00000000 	 .space 4
 208              	 .global avg_distance_L
 209              	 .section .bss.avg_distance_L,"aw",%nobits
 210              	 .align 2
 213              	avg_distance_L:
 214 0000 00000000 	 .space 4
 215              	 .global avg_distance_R
 216              	 .section .bss.avg_distance_R,"aw",%nobits
 217              	 .align 2
 220              	avg_distance_R:
 221 0000 00000000 	 .space 4
 222              	 .global restet_count
 223              	 .section .bss.restet_count,"aw",%nobits
 224              	 .align 2
 227              	restet_count:
 228 0000 00000000 	 .space 4
 229              	 .global sample_count
 230              	 .section .bss.sample_count,"aw",%nobits
 231              	 .align 2
 234              	sample_count:
 235 0000 00000000 	 .space 4
 236              	 .global sample_rate_Hz
 237              	 .section .bss.sample_rate_Hz,"aw",%nobits
 238              	 .align 2
 241              	sample_rate_Hz:
 242 0000 00000000 	 .space 4
 243              	 .global failed_count
 244              	 .section .bss.failed_count,"aw",%nobits
 245              	 .align 2
 248              	failed_count:
 249 0000 00000000 	 .space 4
 250              	 .global echo_not_low_count
 251              	 .section .bss.echo_not_low_count,"aw",%nobits
 252              	 .align 2
 255              	echo_not_low_count:
 256 0000 00000000 	 .space 4
 257              	 .global echo_not_low_count_1
 258              	 .section .bss.echo_not_low_count_1,"aw",%nobits
 259              	 .align 2
 262              	echo_not_low_count_1:
 263 0000 00000000 	 .space 4
 264              	 .global limit_fail_num
 265              	 .section .bss.limit_fail_num,"aw",%nobits
 266              	 .align 2
 269              	limit_fail_num:
 270 0000 00000000 	 .space 4
 271              	 .global limit_fail_count
 272              	 .section .bss.limit_fail_count,"aw",%nobits
 273              	 .align 2
 276              	limit_fail_count:
 277 0000 00000000 	 .space 4
 278              	 .global Now_Sensor
 279              	 .section .data.Now_Sensor,"aw",%progbits
 282              	Now_Sensor:
 283 0000 01       	 .byte 1
 284              	 .section .text.main,"ax",%progbits
 285              	 .align 2
 286              	 .global main
 287              	 .code 16
 288              	 .thumb_func
 290              	main:
 291              	.LFB202:
 292              	 .file 3 "../main.c"
   1:../main.c     **** /*
   2:../main.c     ****  * main.c
   3:../main.c     ****  *
   4:../main.c     ****  *  Created on: 2022 Jul 01 21:38:44
   5:../main.c     ****  *  Author: lukas
   6:../main.c     ****  */
   7:../main.c     **** #include "DAVE.h"                 //Declarations from DAVE Code Generation (includes SFR declaratio
   8:../main.c     **** 
   9:../main.c     **** uint8_t CAN_OK = 0;
  10:../main.c     **** CAN_NODE_STATUS_t init_status;
  11:../main.c     **** 
  12:../main.c     **** 
  13:../main.c     **** uint16_t RESET_IN_10us_AFTER_SUCSSES = 10;
  14:../main.c     **** uint16_t RESET_IN_10us_AFTER_ECHO_LOW_FAIL = 500;
  15:../main.c     **** #define MAX_RESET 2500 // 40Hz
  16:../main.c     **** uint16_t MIN_RESET = 100; // 250Hz
  17:../main.c     **** 
  18:../main.c     **** #define NUM_SENSORS  0b100
  19:../main.c     **** #define ECHO_TIME_MIN 10 // limit 1.7cm
  20:../main.c     **** #define ECHO_TIME_MAX 2400 // limit 408cm
  21:../main.c     **** #define ECHO_TIME_10us_TO_DISTANCE_cm 0.17
  22:../main.c     **** 
  23:../main.c     **** volatile uint8_t echo_state = 0;
  24:../main.c     **** volatile uint8_t wait_echo = 0;
  25:../main.c     **** volatile uint8_t echo_count_control = 0;
  26:../main.c     **** volatile uint8_t reset_done = 1;
  27:../main.c     **** 
  28:../main.c     **** volatile uint32_t t_10us_count = 0;
  29:../main.c     **** volatile uint32_t reset_at = MAX_RESET;
  30:../main.c     **** volatile uint32_t echo_t_10us = 0;
  31:../main.c     **** volatile uint32_t echo_time = 0;
  32:../main.c     **** 
  33:../main.c     **** volatile uint16_t distance_C = 0; //in cm
  34:../main.c     **** volatile uint16_t distance_L = 0; //in cm
  35:../main.c     **** volatile uint16_t distance_R = 0; //in cm
  36:../main.c     **** 
  37:../main.c     **** 
  38:../main.c     **** float avg_distance_C = 0; //in cm
  39:../main.c     **** float avg_distance_L = 0; //in cm
  40:../main.c     **** float avg_distance_R = 0; //in cm
  41:../main.c     **** #define ALPHA_DISTANCE 0.8
  42:../main.c     **** 
  43:../main.c     **** //diagnostics
  44:../main.c     **** volatile uint32_t restet_count = 0;
  45:../main.c     **** volatile uint32_t sample_count = 0;
  46:../main.c     **** volatile uint32_t sample_rate_Hz = 0;
  47:../main.c     **** volatile uint32_t failed_count = 0;
  48:../main.c     **** volatile uint32_t echo_not_low_count = 0;
  49:../main.c     **** volatile uint32_t echo_not_low_count_1 = 0;
  50:../main.c     **** volatile uint32_t limit_fail_num = 0;
  51:../main.c     **** volatile uint32_t limit_fail_count = 0;
  52:../main.c     **** 
  53:../main.c     **** 
  54:../main.c     **** 
  55:../main.c     **** enum SENSORS{
  56:../main.c     **** 	CENTER = 0b001,
  57:../main.c     **** 	LEFT = 0b010,
  58:../main.c     **** 	RIGHT = 0b100};
  59:../main.c     **** volatile enum SENSORS Now_Sensor = CENTER;
  60:../main.c     **** 
  61:../main.c     **** void reset();
  62:../main.c     **** void CAN_send_values();
  63:../main.c     **** void avg_distances();
  64:../main.c     **** float Exp_moving_average(float new_value, float value, float ALPHA);
  65:../main.c     **** bool within_MAX_MIN_check_int(int x, int MAX, int MIN);
  66:../main.c     **** uint16_t saturation_to_MIN_MAX(uint16_t value, uint16_t MAX, uint16_t MIN);
  67:../main.c     **** 
  68:../main.c     **** int main(void)
  69:../main.c     **** {
 293              	 .loc 3 69 0
 294              	 .cfi_startproc
 295 0000 90B5     	 push {r4,r7,lr}
 296              	.LCFI6:
 297              	 .cfi_def_cfa_offset 12
 298              	 .cfi_offset 4,-12
 299              	 .cfi_offset 7,-8
 300              	 .cfi_offset 14,-4
 301 0002 83B0     	 sub sp,sp,#12
 302              	.LCFI7:
 303              	 .cfi_def_cfa_offset 24
 304 0004 00AF     	 add r7,sp,#0
 305              	.LCFI8:
 306              	 .cfi_def_cfa_register 7
  70:../main.c     ****   DAVE_STATUS_t status;
  71:../main.c     **** 
  72:../main.c     ****   status = DAVE_Init();           /* Initialization of DAVE APPs  */
 307              	 .loc 3 72 0
 308 0006 FC1D     	 add r4,r7,#7
 309 0008 FFF7FEFF 	 bl DAVE_Init
 310 000c 031C     	 mov r3,r0
 311 000e 2370     	 strb r3,[r4]
  73:../main.c     **** 
  74:../main.c     ****   if (status != DAVE_STATUS_SUCCESS)
 312              	 .loc 3 74 0
 313 0010 FB1D     	 add r3,r7,#7
 314 0012 1B78     	 ldrb r3,[r3]
 315 0014 002B     	 cmp r3,#0
 316 0016 00D0     	 beq .L6
 317              	.L7:
  75:../main.c     ****   {
  76:../main.c     ****     /* Placeholder for error handler code. The while loop below can be replaced with an user error 
  77:../main.c     ****     XMC_DEBUG("DAVE APPs initialization failed\n");
  78:../main.c     **** 
  79:../main.c     ****     while(1U)
  80:../main.c     ****     {
  81:../main.c     **** 
  82:../main.c     ****     }
 318              	 .loc 3 82 0 discriminator 1
 319 0018 FEE7     	 b .L7
 320              	.L6:
  83:../main.c     ****   }
  84:../main.c     ****   //Initialization of CAN
  85:../main.c     ****   	//CAN_NODE_STATUS_t init_status;
  86:../main.c     ****   	init_status = CAN_NODE_Init(&CAN_NODE_0);
 321              	 .loc 3 86 0
 322 001a 084B     	 ldr r3,.L9
 323 001c 181C     	 mov r0,r3
 324 001e FFF7FEFF 	 bl CAN_NODE_Init
 325 0022 031C     	 mov r3,r0
 326 0024 1A1C     	 mov r2,r3
 327 0026 064B     	 ldr r3,.L9+4
 328 0028 1A70     	 strb r2,[r3]
  87:../main.c     **** 
  88:../main.c     ****   	if (init_status != CAN_NODE_STATUS_SUCCESS) {
 329              	 .loc 3 88 0
 330 002a 054B     	 ldr r3,.L9+4
 331 002c 1B78     	 ldrb r3,[r3]
 332 002e 002B     	 cmp r3,#0
 333 0030 02D1     	 bne .L8
  89:../main.c     ****   		XMC_DEBUG("CAN initialization failed\n");
  90:../main.c     ****   	}
  91:../main.c     ****   	else{
  92:../main.c     ****   		CAN_OK = 1;
 334              	 .loc 3 92 0
 335 0032 044B     	 ldr r3,.L9+8
 336 0034 0122     	 mov r2,#1
 337 0036 1A70     	 strb r2,[r3]
 338              	.L8:
  93:../main.c     ****   	}
  94:../main.c     **** 
  95:../main.c     ****   /* Placeholder for user application code. The while loop below can be replaced with user applicat
  96:../main.c     ****   while(1U)
  97:../main.c     ****   {
  98:../main.c     **** 
  99:../main.c     **** 
 100:../main.c     ****   }
 339              	 .loc 3 100 0 discriminator 3
 340 0038 FEE7     	 b .L8
 341              	.L10:
 342 003a C046     	 .align 2
 343              	.L9:
 344 003c 00000000 	 .word CAN_NODE_0
 345 0040 00000000 	 .word init_status
 346 0044 00000000 	 .word CAN_OK
 347              	 .cfi_endproc
 348              	.LFE202:
 350              	 .section .text.IRQ7_Handler,"ax",%progbits
 351              	 .align 2
 352              	 .global IRQ7_Handler
 353              	 .code 16
 354              	 .thumb_func
 356              	IRQ7_Handler:
 357              	.LFB203:
 101:../main.c     **** }
 102:../main.c     **** 
 103:../main.c     **** 
 104:../main.c     **** void ISR_10us_TIMER(){
 358              	 .loc 3 104 0
 359              	 .cfi_startproc
 360 0000 80B5     	 push {r7,lr}
 361              	.LCFI9:
 362              	 .cfi_def_cfa_offset 8
 363              	 .cfi_offset 7,-8
 364              	 .cfi_offset 14,-4
 365 0002 00AF     	 add r7,sp,#0
 366              	.LCFI10:
 367              	 .cfi_def_cfa_register 7
 105:../main.c     **** 	if(reset_done == 1){ // make sure its finished
 368              	 .loc 3 105 0
 369 0004 414B     	 ldr r3,.L23
 370 0006 1B78     	 ldrb r3,[r3]
 371 0008 DBB2     	 uxtb r3,r3
 372 000a 012B     	 cmp r3,#1
 373 000c 00D0     	 beq .LCB146
 374 000e 7BE0     	 b .L11
 375              	.LCB146:
 106:../main.c     **** 		t_10us_count ++;
 376              	 .loc 3 106 0
 377 0010 3F4B     	 ldr r3,.L23+4
 378 0012 1B68     	 ldr r3,[r3]
 379 0014 5A1C     	 add r2,r3,#1
 380 0016 3E4B     	 ldr r3,.L23+4
 381 0018 1A60     	 str r2,[r3]
 107:../main.c     **** 		if (echo_count_control == 1) echo_t_10us ++;
 382              	 .loc 3 107 0
 383 001a 3E4B     	 ldr r3,.L23+8
 384 001c 1B78     	 ldrb r3,[r3]
 385 001e DBB2     	 uxtb r3,r3
 386 0020 012B     	 cmp r3,#1
 387 0022 04D1     	 bne .L13
 388              	 .loc 3 107 0 is_stmt 0 discriminator 1
 389 0024 3C4B     	 ldr r3,.L23+12
 390 0026 1B68     	 ldr r3,[r3]
 391 0028 5A1C     	 add r2,r3,#1
 392 002a 3B4B     	 ldr r3,.L23+12
 393 002c 1A60     	 str r2,[r3]
 394              	.L13:
 108:../main.c     **** 
 109:../main.c     **** 		if(t_10us_count == 1)BUS_IO_Write(&BUS_IO_0,Now_Sensor);  // set trigger high
 395              	 .loc 3 109 0 is_stmt 1
 396 002e 384B     	 ldr r3,.L23+4
 397 0030 1B68     	 ldr r3,[r3]
 398 0032 012B     	 cmp r3,#1
 399 0034 09D1     	 bne .L14
 400              	 .loc 3 109 0 is_stmt 0 discriminator 1
 401 0036 394B     	 ldr r3,.L23+16
 402 0038 1B78     	 ldrb r3,[r3]
 403 003a DBB2     	 uxtb r3,r3
 404 003c 9BB2     	 uxth r3,r3
 405 003e 384A     	 ldr r2,.L23+20
 406 0040 101C     	 mov r0,r2
 407 0042 191C     	 mov r1,r3
 408 0044 FFF7FEFF 	 bl BUS_IO_Write
 409 0048 5EE0     	 b .L11
 410              	.L14:
 110:../main.c     **** 		else if (t_10us_count == 11) BUS_IO_Write(&BUS_IO_0,0b000); // set tigger low
 411              	 .loc 3 110 0 is_stmt 1
 412 004a 314B     	 ldr r3,.L23+4
 413 004c 1B68     	 ldr r3,[r3]
 414 004e 0B2B     	 cmp r3,#11
 415 0050 05D1     	 bne .L15
 416              	 .loc 3 110 0 is_stmt 0 discriminator 1
 417 0052 334B     	 ldr r3,.L23+20
 418 0054 181C     	 mov r0,r3
 419 0056 0021     	 mov r1,#0
 420 0058 FFF7FEFF 	 bl BUS_IO_Write
 421 005c 54E0     	 b .L11
 422              	.L15:
 111:../main.c     **** 
 112:../main.c     **** 		else if (t_10us_count == 20) {
 423              	 .loc 3 112 0 is_stmt 1
 424 005e 2C4B     	 ldr r3,.L23+4
 425 0060 1B68     	 ldr r3,[r3]
 426 0062 142B     	 cmp r3,#20
 427 0064 48D1     	 bne .L16
 113:../main.c     **** 				switch(Now_Sensor){
 428              	 .loc 3 113 0
 429 0066 2D4B     	 ldr r3,.L23+16
 430 0068 1B78     	 ldrb r3,[r3]
 431 006a DBB2     	 uxtb r3,r3
 432 006c 022B     	 cmp r3,#2
 433 006e 0CD0     	 beq .L18
 434 0070 042B     	 cmp r3,#4
 435 0072 13D0     	 beq .L19
 436 0074 012B     	 cmp r3,#1
 437 0076 1AD1     	 bne .L17
 114:../main.c     **** 					case CENTER:
 115:../main.c     **** 						echo_state = PIN_INTERRUPT_GetPinValue(&ECHO_C);
 438              	 .loc 3 115 0
 439 0078 2A4B     	 ldr r3,.L23+24
 440 007a 181C     	 mov r0,r3
 441 007c FFF7FEFF 	 bl PIN_INTERRUPT_GetPinValue
 442 0080 031C     	 mov r3,r0
 443 0082 DAB2     	 uxtb r2,r3
 444 0084 284B     	 ldr r3,.L23+28
 445 0086 1A70     	 strb r2,[r3]
 116:../main.c     **** 						break;
 446              	 .loc 3 116 0
 447 0088 11E0     	 b .L17
 448              	.L18:
 117:../main.c     **** 					case LEFT:
 118:../main.c     **** 						echo_state = PIN_INTERRUPT_GetPinValue(&ECHO_L);
 449              	 .loc 3 118 0
 450 008a 284B     	 ldr r3,.L23+32
 451 008c 181C     	 mov r0,r3
 452 008e FFF7FEFF 	 bl PIN_INTERRUPT_GetPinValue
 453 0092 031C     	 mov r3,r0
 454 0094 DAB2     	 uxtb r2,r3
 455 0096 244B     	 ldr r3,.L23+28
 456 0098 1A70     	 strb r2,[r3]
 119:../main.c     **** 						break;
 457              	 .loc 3 119 0
 458 009a 08E0     	 b .L17
 459              	.L19:
 120:../main.c     **** 					case RIGHT:
 121:../main.c     **** 						echo_state = PIN_INTERRUPT_GetPinValue(&ECHO_R);
 460              	 .loc 3 121 0
 461 009c 244B     	 ldr r3,.L23+36
 462 009e 181C     	 mov r0,r3
 463 00a0 FFF7FEFF 	 bl PIN_INTERRUPT_GetPinValue
 464 00a4 031C     	 mov r3,r0
 465 00a6 DAB2     	 uxtb r2,r3
 466 00a8 1F4B     	 ldr r3,.L23+28
 467 00aa 1A70     	 strb r2,[r3]
 122:../main.c     **** 						break;
 468              	 .loc 3 122 0
 469 00ac C046     	 mov r8,r8
 470              	.L17:
 123:../main.c     **** 				}
 124:../main.c     **** 				if(echo_state != 0) {
 471              	 .loc 3 124 0
 472 00ae 1E4B     	 ldr r3,.L23+28
 473 00b0 1B78     	 ldrb r3,[r3]
 474 00b2 DBB2     	 uxtb r3,r3
 475 00b4 002B     	 cmp r3,#0
 476 00b6 1BD0     	 beq .L21
 125:../main.c     **** 					echo_not_low_count ++ ;
 477              	 .loc 3 125 0
 478 00b8 1E4B     	 ldr r3,.L23+40
 479 00ba 1B68     	 ldr r3,[r3]
 480 00bc 5A1C     	 add r2,r3,#1
 481 00be 1D4B     	 ldr r3,.L23+40
 482 00c0 1A60     	 str r2,[r3]
 126:../main.c     **** 					reset_at = t_10us_count + RESET_IN_10us_AFTER_ECHO_LOW_FAIL; // reset(); // check if echo low
 483              	 .loc 3 126 0
 484 00c2 1D4B     	 ldr r3,.L23+44
 485 00c4 1B88     	 ldrh r3,[r3]
 486 00c6 1A1C     	 mov r2,r3
 487 00c8 114B     	 ldr r3,.L23+4
 488 00ca 1B68     	 ldr r3,[r3]
 489 00cc D218     	 add r2,r2,r3
 490 00ce 1B4B     	 ldr r3,.L23+48
 491 00d0 1A60     	 str r2,[r3]
 127:../main.c     **** 					reset_at = saturation_to_MIN_MAX(reset_at,MAX_RESET,MIN_RESET);
 492              	 .loc 3 127 0
 493 00d2 1A4B     	 ldr r3,.L23+48
 494 00d4 1B68     	 ldr r3,[r3]
 495 00d6 9AB2     	 uxth r2,r3
 496 00d8 194B     	 ldr r3,.L23+52
 497 00da 1B88     	 ldrh r3,[r3]
 498 00dc 1949     	 ldr r1,.L23+56
 499 00de 101C     	 mov r0,r2
 500 00e0 1A1C     	 mov r2,r3
 501 00e2 FFF7FEFF 	 bl saturation_to_MIN_MAX
 502 00e6 031C     	 mov r3,r0
 503 00e8 1A1C     	 mov r2,r3
 504 00ea 144B     	 ldr r3,.L23+48
 505 00ec 1A60     	 str r2,[r3]
 506 00ee 0BE0     	 b .L11
 507              	.L21:
 128:../main.c     **** 				}
 129:../main.c     **** 				else wait_echo = 1;
 508              	 .loc 3 129 0
 509 00f0 154B     	 ldr r3,.L23+60
 510 00f2 0122     	 mov r2,#1
 511 00f4 1A70     	 strb r2,[r3]
 512 00f6 07E0     	 b .L11
 513              	.L16:
 130:../main.c     **** 			}
 131:../main.c     **** 
 132:../main.c     **** 		else if (t_10us_count > reset_at) reset();//no ech in expüecte time error start again // 25000us
 514              	 .loc 3 132 0
 515 00f8 054B     	 ldr r3,.L23+4
 516 00fa 1A68     	 ldr r2,[r3]
 517 00fc 0F4B     	 ldr r3,.L23+48
 518 00fe 1B68     	 ldr r3,[r3]
 519 0100 9A42     	 cmp r2,r3
 520 0102 01D9     	 bls .L11
 521              	 .loc 3 132 0 is_stmt 0 discriminator 1
 522 0104 FFF7FEFF 	 bl reset
 523              	.L11:
 133:../main.c     **** 	}
 134:../main.c     **** }
 524              	 .loc 3 134 0 is_stmt 1
 525 0108 BD46     	 mov sp,r7
 526              	 
 527 010a 80BD     	 pop {r7,pc}
 528              	.L24:
 529              	 .align 2
 530              	.L23:
 531 010c 00000000 	 .word reset_done
 532 0110 00000000 	 .word t_10us_count
 533 0114 00000000 	 .word echo_count_control
 534 0118 00000000 	 .word echo_t_10us
 535 011c 00000000 	 .word Now_Sensor
 536 0120 00000000 	 .word BUS_IO_0
 537 0124 00000000 	 .word ECHO_C
 538 0128 00000000 	 .word echo_state
 539 012c 00000000 	 .word ECHO_L
 540 0130 00000000 	 .word ECHO_R
 541 0134 00000000 	 .word echo_not_low_count
 542 0138 00000000 	 .word RESET_IN_10us_AFTER_ECHO_LOW_FAIL
 543 013c 00000000 	 .word reset_at
 544 0140 00000000 	 .word MIN_RESET
 545 0144 C4090000 	 .word 2500
 546 0148 00000000 	 .word wait_echo
 547              	 .cfi_endproc
 548              	.LFE203:
 550              	 .section .text.reset,"ax",%progbits
 551              	 .align 2
 552              	 .global reset
 553              	 .code 16
 554              	 .thumb_func
 556              	reset:
 557              	.LFB204:
 135:../main.c     **** 
 136:../main.c     **** void reset(){
 558              	 .loc 3 136 0
 559              	 .cfi_startproc
 560 0000 80B5     	 push {r7,lr}
 561              	.LCFI11:
 562              	 .cfi_def_cfa_offset 8
 563              	 .cfi_offset 7,-8
 564              	 .cfi_offset 14,-4
 565 0002 00AF     	 add r7,sp,#0
 566              	.LCFI12:
 567              	 .cfi_def_cfa_register 7
 137:../main.c     **** 	reset_done = 0;
 568              	 .loc 3 137 0
 569 0004 174B     	 ldr r3,.L27
 570 0006 0022     	 mov r2,#0
 571 0008 1A70     	 strb r2,[r3]
 138:../main.c     **** 
 139:../main.c     **** 	// set values values back
 140:../main.c     **** 	t_10us_count = 0;
 572              	 .loc 3 140 0
 573 000a 174B     	 ldr r3,.L27+4
 574 000c 0022     	 mov r2,#0
 575 000e 1A60     	 str r2,[r3]
 141:../main.c     **** 	wait_echo = 0;
 576              	 .loc 3 141 0
 577 0010 164B     	 ldr r3,.L27+8
 578 0012 0022     	 mov r2,#0
 579 0014 1A70     	 strb r2,[r3]
 142:../main.c     **** 	echo_count_control = 0;
 580              	 .loc 3 142 0
 581 0016 164B     	 ldr r3,.L27+12
 582 0018 0022     	 mov r2,#0
 583 001a 1A70     	 strb r2,[r3]
 143:../main.c     **** 	echo_t_10us = 0;
 584              	 .loc 3 143 0
 585 001c 154B     	 ldr r3,.L27+16
 586 001e 0022     	 mov r2,#0
 587 0020 1A60     	 str r2,[r3]
 144:../main.c     **** 	reset_at = MAX_RESET;
 588              	 .loc 3 144 0
 589 0022 154B     	 ldr r3,.L27+20
 590 0024 154A     	 ldr r2,.L27+24
 591 0026 1A60     	 str r2,[r3]
 145:../main.c     **** 
 146:../main.c     **** 	//switch to next sensor
 147:../main.c     **** 	Now_Sensor = Now_Sensor << 1;
 592              	 .loc 3 147 0
 593 0028 154B     	 ldr r3,.L27+28
 594 002a 1B78     	 ldrb r3,[r3]
 595 002c DBB2     	 uxtb r3,r3
 596 002e DB18     	 add r3,r3,r3
 597 0030 DAB2     	 uxtb r2,r3
 598 0032 134B     	 ldr r3,.L27+28
 599 0034 1A70     	 strb r2,[r3]
 148:../main.c     **** 	if(Now_Sensor > NUM_SENSORS){
 600              	 .loc 3 148 0
 601 0036 124B     	 ldr r3,.L27+28
 602 0038 1B78     	 ldrb r3,[r3]
 603 003a DBB2     	 uxtb r3,r3
 604 003c 042B     	 cmp r3,#4
 605 003e 06D9     	 bls .L26
 149:../main.c     **** 		Now_Sensor = CENTER;
 606              	 .loc 3 149 0
 607 0040 0F4B     	 ldr r3,.L27+28
 608 0042 0122     	 mov r2,#1
 609 0044 1A70     	 strb r2,[r3]
 150:../main.c     **** 		avg_distances();
 610              	 .loc 3 150 0
 611 0046 FFF7FEFF 	 bl avg_distances
 151:../main.c     **** 		CAN_send_values(); //send results
 612              	 .loc 3 151 0
 613 004a FFF7FEFF 	 bl CAN_send_values
 614              	.L26:
 152:../main.c     **** 	}
 153:../main.c     **** 	// sampelr rater counter
 154:../main.c     **** 	restet_count++;
 615              	 .loc 3 154 0
 616 004e 0D4B     	 ldr r3,.L27+32
 617 0050 1B68     	 ldr r3,[r3]
 618 0052 5A1C     	 add r2,r3,#1
 619 0054 0B4B     	 ldr r3,.L27+32
 620 0056 1A60     	 str r2,[r3]
 155:../main.c     **** 
 156:../main.c     **** 	reset_done = 1;
 621              	 .loc 3 156 0
 622 0058 024B     	 ldr r3,.L27
 623 005a 0122     	 mov r2,#1
 624 005c 1A70     	 strb r2,[r3]
 157:../main.c     **** }
 625              	 .loc 3 157 0
 626 005e BD46     	 mov sp,r7
 627              	 
 628 0060 80BD     	 pop {r7,pc}
 629              	.L28:
 630 0062 C046     	 .align 2
 631              	.L27:
 632 0064 00000000 	 .word reset_done
 633 0068 00000000 	 .word t_10us_count
 634 006c 00000000 	 .word wait_echo
 635 0070 00000000 	 .word echo_count_control
 636 0074 00000000 	 .word echo_t_10us
 637 0078 00000000 	 .word reset_at
 638 007c C4090000 	 .word 2500
 639 0080 00000000 	 .word Now_Sensor
 640 0084 00000000 	 .word restet_count
 641              	 .cfi_endproc
 642              	.LFE204:
 644              	 .global __aeabi_ui2d
 645              	 .global __aeabi_dmul
 646              	 .global __aeabi_d2uiz
 647              	 .section .text.IRQ5_Handler,"ax",%progbits
 648              	 .align 2
 649              	 .global IRQ5_Handler
 650              	 .code 16
 651              	 .thumb_func
 653              	IRQ5_Handler:
 654              	.LFB205:
 158:../main.c     **** 
 159:../main.c     **** void ISR_ECHO_C(void){
 655              	 .loc 3 159 0
 656              	 .cfi_startproc
 657 0000 98B5     	 push {r3,r4,r7,lr}
 658              	.LCFI13:
 659              	 .cfi_def_cfa_offset 16
 660              	 .cfi_offset 3,-16
 661              	 .cfi_offset 4,-12
 662              	 .cfi_offset 7,-8
 663              	 .cfi_offset 14,-4
 664 0002 00AF     	 add r7,sp,#0
 665              	.LCFI14:
 666              	 .cfi_def_cfa_register 7
 160:../main.c     **** 	echo_state = PIN_INTERRUPT_GetPinValue(&ECHO_C);
 667              	 .loc 3 160 0
 668 0004 344B     	 ldr r3,.L34
 669 0006 181C     	 mov r0,r3
 670 0008 FFF7FEFF 	 bl PIN_INTERRUPT_GetPinValue
 671 000c 031C     	 mov r3,r0
 672 000e DAB2     	 uxtb r2,r3
 673 0010 324B     	 ldr r3,.L34+4
 674 0012 1A70     	 strb r2,[r3]
 161:../main.c     **** 	if(wait_echo == 1 && echo_state == 1) echo_count_control = 1;
 675              	 .loc 3 161 0
 676 0014 324B     	 ldr r3,.L34+8
 677 0016 1B78     	 ldrb r3,[r3]
 678 0018 DBB2     	 uxtb r3,r3
 679 001a 012B     	 cmp r3,#1
 680 001c 08D1     	 bne .L30
 681              	 .loc 3 161 0 is_stmt 0 discriminator 1
 682 001e 2F4B     	 ldr r3,.L34+4
 683 0020 1B78     	 ldrb r3,[r3]
 684 0022 DBB2     	 uxtb r3,r3
 685 0024 012B     	 cmp r3,#1
 686 0026 03D1     	 bne .L30
 687              	 .loc 3 161 0 discriminator 2
 688 0028 2E4B     	 ldr r3,.L34+12
 689 002a 0122     	 mov r2,#1
 690 002c 1A70     	 strb r2,[r3]
 691 002e 51E0     	 b .L29
 692              	.L30:
 162:../main.c     **** 	else if(echo_state == 0 && echo_count_control == 1){
 693              	 .loc 3 162 0 is_stmt 1
 694 0030 2A4B     	 ldr r3,.L34+4
 695 0032 1B78     	 ldrb r3,[r3]
 696 0034 DBB2     	 uxtb r3,r3
 697 0036 002B     	 cmp r3,#0
 698 0038 4CD1     	 bne .L29
 699              	 .loc 3 162 0 is_stmt 0 discriminator 1
 700 003a 2A4B     	 ldr r3,.L34+12
 701 003c 1B78     	 ldrb r3,[r3]
 702 003e DBB2     	 uxtb r3,r3
 703 0040 012B     	 cmp r3,#1
 704 0042 47D1     	 bne .L29
 163:../main.c     **** 		echo_time = echo_t_10us;
 705              	 .loc 3 163 0 is_stmt 1
 706 0044 284B     	 ldr r3,.L34+16
 707 0046 1A68     	 ldr r2,[r3]
 708 0048 284B     	 ldr r3,.L34+20
 709 004a 1A60     	 str r2,[r3]
 164:../main.c     **** 		if(within_MAX_MIN_check_int(echo_time, ECHO_TIME_MAX, ECHO_TIME_MIN)){
 710              	 .loc 3 164 0
 711 004c 274B     	 ldr r3,.L34+20
 712 004e 1B68     	 ldr r3,[r3]
 713 0050 1A1C     	 mov r2,r3
 714 0052 9623     	 mov r3,#150
 715 0054 1B01     	 lsl r3,r3,#4
 716 0056 101C     	 mov r0,r2
 717 0058 191C     	 mov r1,r3
 718 005a 0A22     	 mov r2,#10
 719 005c FFF7FEFF 	 bl within_MAX_MIN_check_int
 720 0060 031E     	 sub r3,r0,#0
 721 0062 1CD0     	 beq .L32
 165:../main.c     **** 			distance_C = echo_time * ECHO_TIME_10us_TO_DISTANCE_cm;
 722              	 .loc 3 165 0
 723 0064 214B     	 ldr r3,.L34+20
 724 0066 1B68     	 ldr r3,[r3]
 725 0068 181C     	 mov r0,r3
 726 006a FFF7FEFF 	 bl __aeabi_ui2d
 727 006e 031C     	 mov r3,r0
 728 0070 0C1C     	 mov r4,r1
 729 0072 181C     	 mov r0,r3
 730 0074 211C     	 mov r1,r4
 731 0076 1E4A     	 ldr r2,.L34+24
 732 0078 1E4B     	 ldr r3,.L34+28
 733 007a FFF7FEFF 	 bl __aeabi_dmul
 734 007e 031C     	 mov r3,r0
 735 0080 0C1C     	 mov r4,r1
 736 0082 181C     	 mov r0,r3
 737 0084 211C     	 mov r1,r4
 738 0086 FFF7FEFF 	 bl __aeabi_d2uiz
 739 008a 031C     	 mov r3,r0
 740 008c 9AB2     	 uxth r2,r3
 741 008e 1A4B     	 ldr r3,.L34+32
 742 0090 1A80     	 strh r2,[r3]
 166:../main.c     **** 			sample_count++; // sampelr rater counter
 743              	 .loc 3 166 0
 744 0092 1A4B     	 ldr r3,.L34+36
 745 0094 1B68     	 ldr r3,[r3]
 746 0096 5A1C     	 add r2,r3,#1
 747 0098 184B     	 ldr r3,.L34+36
 748 009a 1A60     	 str r2,[r3]
 749 009c 04E0     	 b .L33
 750              	.L32:
 167:../main.c     **** 		}
 168:../main.c     **** 		else limit_fail_count ++;
 751              	 .loc 3 168 0
 752 009e 184B     	 ldr r3,.L34+40
 753 00a0 1B68     	 ldr r3,[r3]
 754 00a2 5A1C     	 add r2,r3,#1
 755 00a4 164B     	 ldr r3,.L34+40
 756 00a6 1A60     	 str r2,[r3]
 757              	.L33:
 169:../main.c     **** 		 reset_at = t_10us_count + RESET_IN_10us_AFTER_SUCSSES;
 758              	 .loc 3 169 0
 759 00a8 164B     	 ldr r3,.L34+44
 760 00aa 1B88     	 ldrh r3,[r3]
 761 00ac 1A1C     	 mov r2,r3
 762 00ae 164B     	 ldr r3,.L34+48
 763 00b0 1B68     	 ldr r3,[r3]
 764 00b2 D218     	 add r2,r2,r3
 765 00b4 154B     	 ldr r3,.L34+52
 766 00b6 1A60     	 str r2,[r3]
 170:../main.c     **** 		 reset_at = saturation_to_MIN_MAX(reset_at,MAX_RESET,MIN_RESET);
 767              	 .loc 3 170 0
 768 00b8 144B     	 ldr r3,.L34+52
 769 00ba 1B68     	 ldr r3,[r3]
 770 00bc 9AB2     	 uxth r2,r3
 771 00be 144B     	 ldr r3,.L34+56
 772 00c0 1B88     	 ldrh r3,[r3]
 773 00c2 1449     	 ldr r1,.L34+60
 774 00c4 101C     	 mov r0,r2
 775 00c6 1A1C     	 mov r2,r3
 776 00c8 FFF7FEFF 	 bl saturation_to_MIN_MAX
 777 00cc 031C     	 mov r3,r0
 778 00ce 1A1C     	 mov r2,r3
 779 00d0 0E4B     	 ldr r3,.L34+52
 780 00d2 1A60     	 str r2,[r3]
 781              	.L29:
 171:../main.c     **** 	}
 172:../main.c     **** }
 782              	 .loc 3 172 0
 783 00d4 BD46     	 mov sp,r7
 784              	 
 785 00d6 98BD     	 pop {r3,r4,r7,pc}
 786              	.L35:
 787              	 .align 2
 788              	.L34:
 789 00d8 00000000 	 .word ECHO_C
 790 00dc 00000000 	 .word echo_state
 791 00e0 00000000 	 .word wait_echo
 792 00e4 00000000 	 .word echo_count_control
 793 00e8 00000000 	 .word echo_t_10us
 794 00ec 00000000 	 .word echo_time
 795 00f0 C3F5285C 	 .word 1546188227
 796 00f4 8FC2C53F 	 .word 1069925007
 797 00f8 00000000 	 .word distance_C
 798 00fc 00000000 	 .word sample_count
 799 0100 00000000 	 .word limit_fail_count
 800 0104 00000000 	 .word RESET_IN_10us_AFTER_SUCSSES
 801 0108 00000000 	 .word t_10us_count
 802 010c 00000000 	 .word reset_at
 803 0110 00000000 	 .word MIN_RESET
 804 0114 C4090000 	 .word 2500
 805              	 .cfi_endproc
 806              	.LFE205:
 808              	 .section .text.IRQ3_Handler,"ax",%progbits
 809              	 .align 2
 810              	 .global IRQ3_Handler
 811              	 .code 16
 812              	 .thumb_func
 814              	IRQ3_Handler:
 815              	.LFB206:
 173:../main.c     **** 
 174:../main.c     **** void ISR_ECHO_L(void){
 816              	 .loc 3 174 0
 817              	 .cfi_startproc
 818 0000 98B5     	 push {r3,r4,r7,lr}
 819              	.LCFI15:
 820              	 .cfi_def_cfa_offset 16
 821              	 .cfi_offset 3,-16
 822              	 .cfi_offset 4,-12
 823              	 .cfi_offset 7,-8
 824              	 .cfi_offset 14,-4
 825 0002 00AF     	 add r7,sp,#0
 826              	.LCFI16:
 827              	 .cfi_def_cfa_register 7
 175:../main.c     **** 	echo_state = PIN_INTERRUPT_GetPinValue(&ECHO_L);
 828              	 .loc 3 175 0
 829 0004 344B     	 ldr r3,.L41
 830 0006 181C     	 mov r0,r3
 831 0008 FFF7FEFF 	 bl PIN_INTERRUPT_GetPinValue
 832 000c 031C     	 mov r3,r0
 833 000e DAB2     	 uxtb r2,r3
 834 0010 324B     	 ldr r3,.L41+4
 835 0012 1A70     	 strb r2,[r3]
 176:../main.c     **** 	if(wait_echo == 1 && echo_state == 1) echo_count_control = 1;
 836              	 .loc 3 176 0
 837 0014 324B     	 ldr r3,.L41+8
 838 0016 1B78     	 ldrb r3,[r3]
 839 0018 DBB2     	 uxtb r3,r3
 840 001a 012B     	 cmp r3,#1
 841 001c 08D1     	 bne .L37
 842              	 .loc 3 176 0 is_stmt 0 discriminator 1
 843 001e 2F4B     	 ldr r3,.L41+4
 844 0020 1B78     	 ldrb r3,[r3]
 845 0022 DBB2     	 uxtb r3,r3
 846 0024 012B     	 cmp r3,#1
 847 0026 03D1     	 bne .L37
 848              	 .loc 3 176 0 discriminator 2
 849 0028 2E4B     	 ldr r3,.L41+12
 850 002a 0122     	 mov r2,#1
 851 002c 1A70     	 strb r2,[r3]
 852 002e 51E0     	 b .L36
 853              	.L37:
 177:../main.c     **** 	else if(echo_state == 0 && echo_count_control == 1){
 854              	 .loc 3 177 0 is_stmt 1
 855 0030 2A4B     	 ldr r3,.L41+4
 856 0032 1B78     	 ldrb r3,[r3]
 857 0034 DBB2     	 uxtb r3,r3
 858 0036 002B     	 cmp r3,#0
 859 0038 4CD1     	 bne .L36
 860              	 .loc 3 177 0 is_stmt 0 discriminator 1
 861 003a 2A4B     	 ldr r3,.L41+12
 862 003c 1B78     	 ldrb r3,[r3]
 863 003e DBB2     	 uxtb r3,r3
 864 0040 012B     	 cmp r3,#1
 865 0042 47D1     	 bne .L36
 178:../main.c     **** 		echo_time = echo_t_10us;
 866              	 .loc 3 178 0 is_stmt 1
 867 0044 284B     	 ldr r3,.L41+16
 868 0046 1A68     	 ldr r2,[r3]
 869 0048 284B     	 ldr r3,.L41+20
 870 004a 1A60     	 str r2,[r3]
 179:../main.c     **** 		if(within_MAX_MIN_check_int(echo_time, ECHO_TIME_MAX, ECHO_TIME_MIN)){
 871              	 .loc 3 179 0
 872 004c 274B     	 ldr r3,.L41+20
 873 004e 1B68     	 ldr r3,[r3]
 874 0050 1A1C     	 mov r2,r3
 875 0052 9623     	 mov r3,#150
 876 0054 1B01     	 lsl r3,r3,#4
 877 0056 101C     	 mov r0,r2
 878 0058 191C     	 mov r1,r3
 879 005a 0A22     	 mov r2,#10
 880 005c FFF7FEFF 	 bl within_MAX_MIN_check_int
 881 0060 031E     	 sub r3,r0,#0
 882 0062 1CD0     	 beq .L39
 180:../main.c     **** 			distance_L = echo_time * ECHO_TIME_10us_TO_DISTANCE_cm;
 883              	 .loc 3 180 0
 884 0064 214B     	 ldr r3,.L41+20
 885 0066 1B68     	 ldr r3,[r3]
 886 0068 181C     	 mov r0,r3
 887 006a FFF7FEFF 	 bl __aeabi_ui2d
 888 006e 031C     	 mov r3,r0
 889 0070 0C1C     	 mov r4,r1
 890 0072 181C     	 mov r0,r3
 891 0074 211C     	 mov r1,r4
 892 0076 1E4A     	 ldr r2,.L41+24
 893 0078 1E4B     	 ldr r3,.L41+28
 894 007a FFF7FEFF 	 bl __aeabi_dmul
 895 007e 031C     	 mov r3,r0
 896 0080 0C1C     	 mov r4,r1
 897 0082 181C     	 mov r0,r3
 898 0084 211C     	 mov r1,r4
 899 0086 FFF7FEFF 	 bl __aeabi_d2uiz
 900 008a 031C     	 mov r3,r0
 901 008c 9AB2     	 uxth r2,r3
 902 008e 1A4B     	 ldr r3,.L41+32
 903 0090 1A80     	 strh r2,[r3]
 181:../main.c     **** 			sample_count++; // sampelr rater counter
 904              	 .loc 3 181 0
 905 0092 1A4B     	 ldr r3,.L41+36
 906 0094 1B68     	 ldr r3,[r3]
 907 0096 5A1C     	 add r2,r3,#1
 908 0098 184B     	 ldr r3,.L41+36
 909 009a 1A60     	 str r2,[r3]
 910 009c 04E0     	 b .L40
 911              	.L39:
 182:../main.c     **** 		}
 183:../main.c     **** 		else limit_fail_count ++;
 912              	 .loc 3 183 0
 913 009e 184B     	 ldr r3,.L41+40
 914 00a0 1B68     	 ldr r3,[r3]
 915 00a2 5A1C     	 add r2,r3,#1
 916 00a4 164B     	 ldr r3,.L41+40
 917 00a6 1A60     	 str r2,[r3]
 918              	.L40:
 184:../main.c     **** 		 reset_at = t_10us_count + RESET_IN_10us_AFTER_SUCSSES;
 919              	 .loc 3 184 0
 920 00a8 164B     	 ldr r3,.L41+44
 921 00aa 1B88     	 ldrh r3,[r3]
 922 00ac 1A1C     	 mov r2,r3
 923 00ae 164B     	 ldr r3,.L41+48
 924 00b0 1B68     	 ldr r3,[r3]
 925 00b2 D218     	 add r2,r2,r3
 926 00b4 154B     	 ldr r3,.L41+52
 927 00b6 1A60     	 str r2,[r3]
 185:../main.c     **** 		 reset_at = saturation_to_MIN_MAX(reset_at,MAX_RESET,MIN_RESET);
 928              	 .loc 3 185 0
 929 00b8 144B     	 ldr r3,.L41+52
 930 00ba 1B68     	 ldr r3,[r3]
 931 00bc 9AB2     	 uxth r2,r3
 932 00be 144B     	 ldr r3,.L41+56
 933 00c0 1B88     	 ldrh r3,[r3]
 934 00c2 1449     	 ldr r1,.L41+60
 935 00c4 101C     	 mov r0,r2
 936 00c6 1A1C     	 mov r2,r3
 937 00c8 FFF7FEFF 	 bl saturation_to_MIN_MAX
 938 00cc 031C     	 mov r3,r0
 939 00ce 1A1C     	 mov r2,r3
 940 00d0 0E4B     	 ldr r3,.L41+52
 941 00d2 1A60     	 str r2,[r3]
 942              	.L36:
 186:../main.c     **** 	}
 187:../main.c     **** }
 943              	 .loc 3 187 0
 944 00d4 BD46     	 mov sp,r7
 945              	 
 946 00d6 98BD     	 pop {r3,r4,r7,pc}
 947              	.L42:
 948              	 .align 2
 949              	.L41:
 950 00d8 00000000 	 .word ECHO_L
 951 00dc 00000000 	 .word echo_state
 952 00e0 00000000 	 .word wait_echo
 953 00e4 00000000 	 .word echo_count_control
 954 00e8 00000000 	 .word echo_t_10us
 955 00ec 00000000 	 .word echo_time
 956 00f0 C3F5285C 	 .word 1546188227
 957 00f4 8FC2C53F 	 .word 1069925007
 958 00f8 00000000 	 .word distance_L
 959 00fc 00000000 	 .word sample_count
 960 0100 00000000 	 .word limit_fail_count
 961 0104 00000000 	 .word RESET_IN_10us_AFTER_SUCSSES
 962 0108 00000000 	 .word t_10us_count
 963 010c 00000000 	 .word reset_at
 964 0110 00000000 	 .word MIN_RESET
 965 0114 C4090000 	 .word 2500
 966              	 .cfi_endproc
 967              	.LFE206:
 969              	 .section .text.IRQ6_Handler,"ax",%progbits
 970              	 .align 2
 971              	 .global IRQ6_Handler
 972              	 .code 16
 973              	 .thumb_func
 975              	IRQ6_Handler:
 976              	.LFB207:
 188:../main.c     **** 
 189:../main.c     **** void ISR_ECHO_R(void){
 977              	 .loc 3 189 0
 978              	 .cfi_startproc
 979 0000 98B5     	 push {r3,r4,r7,lr}
 980              	.LCFI17:
 981              	 .cfi_def_cfa_offset 16
 982              	 .cfi_offset 3,-16
 983              	 .cfi_offset 4,-12
 984              	 .cfi_offset 7,-8
 985              	 .cfi_offset 14,-4
 986 0002 00AF     	 add r7,sp,#0
 987              	.LCFI18:
 988              	 .cfi_def_cfa_register 7
 190:../main.c     **** 	echo_state = PIN_INTERRUPT_GetPinValue(&ECHO_R);
 989              	 .loc 3 190 0
 990 0004 344B     	 ldr r3,.L48
 991 0006 181C     	 mov r0,r3
 992 0008 FFF7FEFF 	 bl PIN_INTERRUPT_GetPinValue
 993 000c 031C     	 mov r3,r0
 994 000e DAB2     	 uxtb r2,r3
 995 0010 324B     	 ldr r3,.L48+4
 996 0012 1A70     	 strb r2,[r3]
 191:../main.c     **** 	if(wait_echo == 1 && echo_state == 1) echo_count_control = 1;
 997              	 .loc 3 191 0
 998 0014 324B     	 ldr r3,.L48+8
 999 0016 1B78     	 ldrb r3,[r3]
 1000 0018 DBB2     	 uxtb r3,r3
 1001 001a 012B     	 cmp r3,#1
 1002 001c 08D1     	 bne .L44
 1003              	 .loc 3 191 0 is_stmt 0 discriminator 1
 1004 001e 2F4B     	 ldr r3,.L48+4
 1005 0020 1B78     	 ldrb r3,[r3]
 1006 0022 DBB2     	 uxtb r3,r3
 1007 0024 012B     	 cmp r3,#1
 1008 0026 03D1     	 bne .L44
 1009              	 .loc 3 191 0 discriminator 2
 1010 0028 2E4B     	 ldr r3,.L48+12
 1011 002a 0122     	 mov r2,#1
 1012 002c 1A70     	 strb r2,[r3]
 1013 002e 51E0     	 b .L43
 1014              	.L44:
 192:../main.c     **** 	else if(echo_state == 0 && echo_count_control == 1){
 1015              	 .loc 3 192 0 is_stmt 1
 1016 0030 2A4B     	 ldr r3,.L48+4
 1017 0032 1B78     	 ldrb r3,[r3]
 1018 0034 DBB2     	 uxtb r3,r3
 1019 0036 002B     	 cmp r3,#0
 1020 0038 4CD1     	 bne .L43
 1021              	 .loc 3 192 0 is_stmt 0 discriminator 1
 1022 003a 2A4B     	 ldr r3,.L48+12
 1023 003c 1B78     	 ldrb r3,[r3]
 1024 003e DBB2     	 uxtb r3,r3
 1025 0040 012B     	 cmp r3,#1
 1026 0042 47D1     	 bne .L43
 193:../main.c     **** 		echo_time = echo_t_10us;
 1027              	 .loc 3 193 0 is_stmt 1
 1028 0044 284B     	 ldr r3,.L48+16
 1029 0046 1A68     	 ldr r2,[r3]
 1030 0048 284B     	 ldr r3,.L48+20
 1031 004a 1A60     	 str r2,[r3]
 194:../main.c     **** 		if(within_MAX_MIN_check_int(echo_time, ECHO_TIME_MAX, ECHO_TIME_MIN)){
 1032              	 .loc 3 194 0
 1033 004c 274B     	 ldr r3,.L48+20
 1034 004e 1B68     	 ldr r3,[r3]
 1035 0050 1A1C     	 mov r2,r3
 1036 0052 9623     	 mov r3,#150
 1037 0054 1B01     	 lsl r3,r3,#4
 1038 0056 101C     	 mov r0,r2
 1039 0058 191C     	 mov r1,r3
 1040 005a 0A22     	 mov r2,#10
 1041 005c FFF7FEFF 	 bl within_MAX_MIN_check_int
 1042 0060 031E     	 sub r3,r0,#0
 1043 0062 1CD0     	 beq .L46
 195:../main.c     **** 			distance_R = echo_time * ECHO_TIME_10us_TO_DISTANCE_cm;
 1044              	 .loc 3 195 0
 1045 0064 214B     	 ldr r3,.L48+20
 1046 0066 1B68     	 ldr r3,[r3]
 1047 0068 181C     	 mov r0,r3
 1048 006a FFF7FEFF 	 bl __aeabi_ui2d
 1049 006e 031C     	 mov r3,r0
 1050 0070 0C1C     	 mov r4,r1
 1051 0072 181C     	 mov r0,r3
 1052 0074 211C     	 mov r1,r4
 1053 0076 1E4A     	 ldr r2,.L48+24
 1054 0078 1E4B     	 ldr r3,.L48+28
 1055 007a FFF7FEFF 	 bl __aeabi_dmul
 1056 007e 031C     	 mov r3,r0
 1057 0080 0C1C     	 mov r4,r1
 1058 0082 181C     	 mov r0,r3
 1059 0084 211C     	 mov r1,r4
 1060 0086 FFF7FEFF 	 bl __aeabi_d2uiz
 1061 008a 031C     	 mov r3,r0
 1062 008c 9AB2     	 uxth r2,r3
 1063 008e 1A4B     	 ldr r3,.L48+32
 1064 0090 1A80     	 strh r2,[r3]
 196:../main.c     **** 			sample_count++; // sampelr rater counter
 1065              	 .loc 3 196 0
 1066 0092 1A4B     	 ldr r3,.L48+36
 1067 0094 1B68     	 ldr r3,[r3]
 1068 0096 5A1C     	 add r2,r3,#1
 1069 0098 184B     	 ldr r3,.L48+36
 1070 009a 1A60     	 str r2,[r3]
 1071 009c 04E0     	 b .L47
 1072              	.L46:
 197:../main.c     **** 		}
 198:../main.c     **** 		else limit_fail_count ++;
 1073              	 .loc 3 198 0
 1074 009e 184B     	 ldr r3,.L48+40
 1075 00a0 1B68     	 ldr r3,[r3]
 1076 00a2 5A1C     	 add r2,r3,#1
 1077 00a4 164B     	 ldr r3,.L48+40
 1078 00a6 1A60     	 str r2,[r3]
 1079              	.L47:
 199:../main.c     **** 		 reset_at = t_10us_count + RESET_IN_10us_AFTER_SUCSSES;
 1080              	 .loc 3 199 0
 1081 00a8 164B     	 ldr r3,.L48+44
 1082 00aa 1B88     	 ldrh r3,[r3]
 1083 00ac 1A1C     	 mov r2,r3
 1084 00ae 164B     	 ldr r3,.L48+48
 1085 00b0 1B68     	 ldr r3,[r3]
 1086 00b2 D218     	 add r2,r2,r3
 1087 00b4 154B     	 ldr r3,.L48+52
 1088 00b6 1A60     	 str r2,[r3]
 200:../main.c     **** 		 reset_at = saturation_to_MIN_MAX(reset_at,MAX_RESET,MIN_RESET);
 1089              	 .loc 3 200 0
 1090 00b8 144B     	 ldr r3,.L48+52
 1091 00ba 1B68     	 ldr r3,[r3]
 1092 00bc 9AB2     	 uxth r2,r3
 1093 00be 144B     	 ldr r3,.L48+56
 1094 00c0 1B88     	 ldrh r3,[r3]
 1095 00c2 1449     	 ldr r1,.L48+60
 1096 00c4 101C     	 mov r0,r2
 1097 00c6 1A1C     	 mov r2,r3
 1098 00c8 FFF7FEFF 	 bl saturation_to_MIN_MAX
 1099 00cc 031C     	 mov r3,r0
 1100 00ce 1A1C     	 mov r2,r3
 1101 00d0 0E4B     	 ldr r3,.L48+52
 1102 00d2 1A60     	 str r2,[r3]
 1103              	.L43:
 201:../main.c     **** 	}
 202:../main.c     **** }
 1104              	 .loc 3 202 0
 1105 00d4 BD46     	 mov sp,r7
 1106              	 
 1107 00d6 98BD     	 pop {r3,r4,r7,pc}
 1108              	.L49:
 1109              	 .align 2
 1110              	.L48:
 1111 00d8 00000000 	 .word ECHO_R
 1112 00dc 00000000 	 .word echo_state
 1113 00e0 00000000 	 .word wait_echo
 1114 00e4 00000000 	 .word echo_count_control
 1115 00e8 00000000 	 .word echo_t_10us
 1116 00ec 00000000 	 .word echo_time
 1117 00f0 C3F5285C 	 .word 1546188227
 1118 00f4 8FC2C53F 	 .word 1069925007
 1119 00f8 00000000 	 .word distance_R
 1120 00fc 00000000 	 .word sample_count
 1121 0100 00000000 	 .word limit_fail_count
 1122 0104 00000000 	 .word RESET_IN_10us_AFTER_SUCSSES
 1123 0108 00000000 	 .word t_10us_count
 1124 010c 00000000 	 .word reset_at
 1125 0110 00000000 	 .word MIN_RESET
 1126 0114 C4090000 	 .word 2500
 1127              	 .cfi_endproc
 1128              	.LFE207:
 1130              	 .section .text.IRQ0_Handler,"ax",%progbits
 1131              	 .align 2
 1132              	 .global IRQ0_Handler
 1133              	 .code 16
 1134              	 .thumb_func
 1136              	IRQ0_Handler:
 1137              	.LFB208:
 203:../main.c     **** 
 204:../main.c     **** 
 205:../main.c     **** void ISR_1s_TIMER(){ //for diagnostics
 1138              	 .loc 3 205 0
 1139              	 .cfi_startproc
 1140 0000 80B5     	 push {r7,lr}
 1141              	.LCFI19:
 1142              	 .cfi_def_cfa_offset 8
 1143              	 .cfi_offset 7,-8
 1144              	 .cfi_offset 14,-4
 1145 0002 00AF     	 add r7,sp,#0
 1146              	.LCFI20:
 1147              	 .cfi_def_cfa_register 7
 206:../main.c     **** 	sample_rate_Hz = sample_count;
 1148              	 .loc 3 206 0
 1149 0004 154B     	 ldr r3,.L53
 1150 0006 1A68     	 ldr r2,[r3]
 1151 0008 154B     	 ldr r3,.L53+4
 1152 000a 1A60     	 str r2,[r3]
 207:../main.c     **** 	if(restet_count > sample_count) failed_count = restet_count - sample_count;
 1153              	 .loc 3 207 0
 1154 000c 154B     	 ldr r3,.L53+8
 1155 000e 1A68     	 ldr r2,[r3]
 1156 0010 124B     	 ldr r3,.L53
 1157 0012 1B68     	 ldr r3,[r3]
 1158 0014 9A42     	 cmp r2,r3
 1159 0016 07D9     	 bls .L51
 1160              	 .loc 3 207 0 is_stmt 0 discriminator 1
 1161 0018 124B     	 ldr r3,.L53+8
 1162 001a 1A68     	 ldr r2,[r3]
 1163 001c 0F4B     	 ldr r3,.L53
 1164 001e 1B68     	 ldr r3,[r3]
 1165 0020 D21A     	 sub r2,r2,r3
 1166 0022 114B     	 ldr r3,.L53+12
 1167 0024 1A60     	 str r2,[r3]
 1168 0026 02E0     	 b .L52
 1169              	.L51:
 208:../main.c     **** 	else failed_count = 0;
 1170              	 .loc 3 208 0 is_stmt 1
 1171 0028 0F4B     	 ldr r3,.L53+12
 1172 002a 0022     	 mov r2,#0
 1173 002c 1A60     	 str r2,[r3]
 1174              	.L52:
 209:../main.c     **** 	echo_not_low_count_1 = echo_not_low_count;
 1175              	 .loc 3 209 0
 1176 002e 0F4B     	 ldr r3,.L53+16
 1177 0030 1A68     	 ldr r2,[r3]
 1178 0032 0F4B     	 ldr r3,.L53+20
 1179 0034 1A60     	 str r2,[r3]
 210:../main.c     **** 	limit_fail_num = limit_fail_count;
 1180              	 .loc 3 210 0
 1181 0036 0F4B     	 ldr r3,.L53+24
 1182 0038 1A68     	 ldr r2,[r3]
 1183 003a 0F4B     	 ldr r3,.L53+28
 1184 003c 1A60     	 str r2,[r3]
 211:../main.c     **** 	sample_count = 0;
 1185              	 .loc 3 211 0
 1186 003e 074B     	 ldr r3,.L53
 1187 0040 0022     	 mov r2,#0
 1188 0042 1A60     	 str r2,[r3]
 212:../main.c     **** 	restet_count = 0;
 1189              	 .loc 3 212 0
 1190 0044 074B     	 ldr r3,.L53+8
 1191 0046 0022     	 mov r2,#0
 1192 0048 1A60     	 str r2,[r3]
 213:../main.c     **** 	limit_fail_count = 0;
 1193              	 .loc 3 213 0
 1194 004a 0A4B     	 ldr r3,.L53+24
 1195 004c 0022     	 mov r2,#0
 1196 004e 1A60     	 str r2,[r3]
 214:../main.c     **** 	echo_not_low_count = 0;
 1197              	 .loc 3 214 0
 1198 0050 064B     	 ldr r3,.L53+16
 1199 0052 0022     	 mov r2,#0
 1200 0054 1A60     	 str r2,[r3]
 215:../main.c     **** }
 1201              	 .loc 3 215 0
 1202 0056 BD46     	 mov sp,r7
 1203              	 
 1204 0058 80BD     	 pop {r7,pc}
 1205              	.L54:
 1206 005a C046     	 .align 2
 1207              	.L53:
 1208 005c 00000000 	 .word sample_count
 1209 0060 00000000 	 .word sample_rate_Hz
 1210 0064 00000000 	 .word restet_count
 1211 0068 00000000 	 .word failed_count
 1212 006c 00000000 	 .word echo_not_low_count
 1213 0070 00000000 	 .word echo_not_low_count_1
 1214 0074 00000000 	 .word limit_fail_count
 1215 0078 00000000 	 .word limit_fail_num
 1216              	 .cfi_endproc
 1217              	.LFE208:
 1219              	 .section .text.within_MAX_MIN_check_int,"ax",%progbits
 1220              	 .align 2
 1221              	 .global within_MAX_MIN_check_int
 1222              	 .code 16
 1223              	 .thumb_func
 1225              	within_MAX_MIN_check_int:
 1226              	.LFB209:
 216:../main.c     **** 
 217:../main.c     **** 
 218:../main.c     **** bool within_MAX_MIN_check_int(int x, int MAX, int MIN){
 1227              	 .loc 3 218 0
 1228              	 .cfi_startproc
 1229 0000 80B5     	 push {r7,lr}
 1230              	.LCFI21:
 1231              	 .cfi_def_cfa_offset 8
 1232              	 .cfi_offset 7,-8
 1233              	 .cfi_offset 14,-4
 1234 0002 84B0     	 sub sp,sp,#16
 1235              	.LCFI22:
 1236              	 .cfi_def_cfa_offset 24
 1237 0004 00AF     	 add r7,sp,#0
 1238              	.LCFI23:
 1239              	 .cfi_def_cfa_register 7
 1240 0006 F860     	 str r0,[r7,#12]
 1241 0008 B960     	 str r1,[r7,#8]
 1242 000a 7A60     	 str r2,[r7,#4]
 219:../main.c     **** 	if((x - MIN) * (x - MAX) <= 0) return 1;
 1243              	 .loc 3 219 0
 1244 000c FA68     	 ldr r2,[r7,#12]
 1245 000e 7B68     	 ldr r3,[r7,#4]
 1246 0010 D31A     	 sub r3,r2,r3
 1247 0012 F968     	 ldr r1,[r7,#12]
 1248 0014 BA68     	 ldr r2,[r7,#8]
 1249 0016 8A1A     	 sub r2,r1,r2
 1250 0018 5343     	 mul r3,r2
 1251 001a 002B     	 cmp r3,#0
 1252 001c 01DC     	 bgt .L56
 1253              	 .loc 3 219 0 is_stmt 0 discriminator 1
 1254 001e 0123     	 mov r3,#1
 1255 0020 00E0     	 b .L57
 1256              	.L56:
 220:../main.c     **** 	else return 0;
 1257              	 .loc 3 220 0 is_stmt 1
 1258 0022 0023     	 mov r3,#0
 1259              	.L57:
 221:../main.c     **** }
 1260              	 .loc 3 221 0
 1261 0024 181C     	 mov r0,r3
 1262 0026 BD46     	 mov sp,r7
 1263 0028 04B0     	 add sp,sp,#16
 1264              	 
 1265 002a 80BD     	 pop {r7,pc}
 1266              	 .cfi_endproc
 1267              	.LFE209:
 1269              	 .section .text.saturation_to_MIN_MAX,"ax",%progbits
 1270              	 .align 2
 1271              	 .global saturation_to_MIN_MAX
 1272              	 .code 16
 1273              	 .thumb_func
 1275              	saturation_to_MIN_MAX:
 1276              	.LFB210:
 222:../main.c     **** 
 223:../main.c     **** uint16_t saturation_to_MIN_MAX(uint16_t value, uint16_t MAX, uint16_t MIN){
 1277              	 .loc 3 223 0
 1278              	 .cfi_startproc
 1279 0000 90B5     	 push {r4,r7,lr}
 1280              	.LCFI24:
 1281              	 .cfi_def_cfa_offset 12
 1282              	 .cfi_offset 4,-12
 1283              	 .cfi_offset 7,-8
 1284              	 .cfi_offset 14,-4
 1285 0002 83B0     	 sub sp,sp,#12
 1286              	.LCFI25:
 1287              	 .cfi_def_cfa_offset 24
 1288 0004 00AF     	 add r7,sp,#0
 1289              	.LCFI26:
 1290              	 .cfi_def_cfa_register 7
 1291 0006 041C     	 mov r4,r0
 1292 0008 081C     	 mov r0,r1
 1293 000a 111C     	 mov r1,r2
 1294 000c BB1D     	 add r3,r7,#6
 1295 000e 221C     	 add r2,r4,#0
 1296 0010 1A80     	 strh r2,[r3]
 1297 0012 3B1D     	 add r3,r7,#4
 1298 0014 021C     	 add r2,r0,#0
 1299 0016 1A80     	 strh r2,[r3]
 1300 0018 BB1C     	 add r3,r7,#2
 1301 001a 0A1C     	 add r2,r1,#0
 1302 001c 1A80     	 strh r2,[r3]
 224:../main.c     **** 	if(value < MIN) return  MIN;
 1303              	 .loc 3 224 0
 1304 001e BA1D     	 add r2,r7,#6
 1305 0020 BB1C     	 add r3,r7,#2
 1306 0022 1288     	 ldrh r2,[r2]
 1307 0024 1B88     	 ldrh r3,[r3]
 1308 0026 9A42     	 cmp r2,r3
 1309 0028 02D2     	 bcs .L59
 1310              	 .loc 3 224 0 is_stmt 0 discriminator 1
 1311 002a BB1C     	 add r3,r7,#2
 1312 002c 1B88     	 ldrh r3,[r3]
 1313 002e 0AE0     	 b .L60
 1314              	.L59:
 225:../main.c     **** 	else if(value > MAX) return MAX;
 1315              	 .loc 3 225 0 is_stmt 1
 1316 0030 BA1D     	 add r2,r7,#6
 1317 0032 3B1D     	 add r3,r7,#4
 1318 0034 1288     	 ldrh r2,[r2]
 1319 0036 1B88     	 ldrh r3,[r3]
 1320 0038 9A42     	 cmp r2,r3
 1321 003a 02D9     	 bls .L61
 1322              	 .loc 3 225 0 is_stmt 0 discriminator 1
 1323 003c 3B1D     	 add r3,r7,#4
 1324 003e 1B88     	 ldrh r3,[r3]
 1325 0040 01E0     	 b .L60
 1326              	.L61:
 226:../main.c     **** 	else return value;
 1327              	 .loc 3 226 0 is_stmt 1
 1328 0042 BB1D     	 add r3,r7,#6
 1329 0044 1B88     	 ldrh r3,[r3]
 1330              	.L60:
 227:../main.c     **** }
 1331              	 .loc 3 227 0
 1332 0046 181C     	 mov r0,r3
 1333 0048 BD46     	 mov sp,r7
 1334 004a 03B0     	 add sp,sp,#12
 1335              	 
 1336 004c 90BD     	 pop {r4,r7,pc}
 1337              	 .cfi_endproc
 1338              	.LFE210:
 1340 004e C046     	 .section .text.CAN_send_values,"ax",%progbits
 1341              	 .align 2
 1342              	 .global CAN_send_values
 1343              	 .code 16
 1344              	 .thumb_func
 1346              	CAN_send_values:
 1347              	.LFB211:
 228:../main.c     **** 
 229:../main.c     **** void CAN_send_values(){
 1348              	 .loc 3 229 0
 1349              	 .cfi_startproc
 1350 0000 80B5     	 push {r7,lr}
 1351              	.LCFI27:
 1352              	 .cfi_def_cfa_offset 8
 1353              	 .cfi_offset 7,-8
 1354              	 .cfi_offset 14,-4
 1355 0002 82B0     	 sub sp,sp,#8
 1356              	.LCFI28:
 1357              	 .cfi_def_cfa_offset 16
 1358 0004 00AF     	 add r7,sp,#0
 1359              	.LCFI29:
 1360              	 .cfi_def_cfa_register 7
 230:../main.c     **** 	uint16_t RX_Data[4] ={CAN_OK, distance_C, distance_L, distance_R}; // in int16_t mm/s converter ba
 1361              	 .loc 3 230 0
 1362 0006 164B     	 ldr r3,.L63
 1363 0008 1B78     	 ldrb r3,[r3]
 1364 000a 9AB2     	 uxth r2,r3
 1365 000c 3B1C     	 mov r3,r7
 1366 000e 1A80     	 strh r2,[r3]
 1367 0010 144B     	 ldr r3,.L63+4
 1368 0012 1B88     	 ldrh r3,[r3]
 1369 0014 9AB2     	 uxth r2,r3
 1370 0016 3B1C     	 mov r3,r7
 1371 0018 5A80     	 strh r2,[r3,#2]
 1372 001a 134B     	 ldr r3,.L63+8
 1373 001c 1B88     	 ldrh r3,[r3]
 1374 001e 9AB2     	 uxth r2,r3
 1375 0020 3B1C     	 mov r3,r7
 1376 0022 9A80     	 strh r2,[r3,#4]
 1377 0024 114B     	 ldr r3,.L63+12
 1378 0026 1B88     	 ldrh r3,[r3]
 1379 0028 9AB2     	 uxth r2,r3
 1380 002a 3B1C     	 mov r3,r7
 1381 002c DA80     	 strh r2,[r3,#6]
 231:../main.c     **** 
 232:../main.c     **** 	CAN_NODE_MO_UpdateData((void*) CAN_NODE_0.lmobj_ptr[0], (uint8_t*)RX_Data);
 1382              	 .loc 3 232 0
 1383 002e 104B     	 ldr r3,.L63+16
 1384 0030 DA68     	 ldr r2,[r3,#12]
 1385 0032 3B1C     	 mov r3,r7
 1386 0034 101C     	 mov r0,r2
 1387 0036 191C     	 mov r1,r3
 1388 0038 FFF7FEFF 	 bl CAN_NODE_MO_UpdateData
 233:../main.c     **** 	CAN_NODE_MO_Transmit((void*) CAN_NODE_0.lmobj_ptr[0]); //Transmit the data of message object1
 1389              	 .loc 3 233 0
 1390 003c 0C4B     	 ldr r3,.L63+16
 1391 003e DB68     	 ldr r3,[r3,#12]
 1392 0040 181C     	 mov r0,r3
 1393 0042 FFF7FEFF 	 bl CAN_NODE_MO_Transmit
 234:../main.c     **** 
 235:../main.c     **** 	// reset
 236:../main.c     **** 	distance_C = 0;
 1394              	 .loc 3 236 0
 1395 0046 074B     	 ldr r3,.L63+4
 1396 0048 0022     	 mov r2,#0
 1397 004a 1A80     	 strh r2,[r3]
 237:../main.c     **** 	distance_L = 0;
 1398              	 .loc 3 237 0
 1399 004c 064B     	 ldr r3,.L63+8
 1400 004e 0022     	 mov r2,#0
 1401 0050 1A80     	 strh r2,[r3]
 238:../main.c     **** 	distance_R = 0;
 1402              	 .loc 3 238 0
 1403 0052 064B     	 ldr r3,.L63+12
 1404 0054 0022     	 mov r2,#0
 1405 0056 1A80     	 strh r2,[r3]
 239:../main.c     **** }
 1406              	 .loc 3 239 0
 1407 0058 BD46     	 mov sp,r7
 1408 005a 02B0     	 add sp,sp,#8
 1409              	 
 1410 005c 80BD     	 pop {r7,pc}
 1411              	.L64:
 1412 005e C046     	 .align 2
 1413              	.L63:
 1414 0060 00000000 	 .word CAN_OK
 1415 0064 00000000 	 .word distance_C
 1416 0068 00000000 	 .word distance_L
 1417 006c 00000000 	 .word distance_R
 1418 0070 00000000 	 .word CAN_NODE_0
 1419              	 .cfi_endproc
 1420              	.LFE211:
 1422              	 .global __aeabi_ui2f
 1423              	 .section .text.avg_distances,"ax",%progbits
 1424              	 .align 2
 1425              	 .global avg_distances
 1426              	 .code 16
 1427              	 .thumb_func
 1429              	avg_distances:
 1430              	.LFB212:
 240:../main.c     **** 
 241:../main.c     **** void avg_distances(){
 1431              	 .loc 3 241 0
 1432              	 .cfi_startproc
 1433 0000 80B5     	 push {r7,lr}
 1434              	.LCFI30:
 1435              	 .cfi_def_cfa_offset 8
 1436              	 .cfi_offset 7,-8
 1437              	 .cfi_offset 14,-4
 1438 0002 00AF     	 add r7,sp,#0
 1439              	.LCFI31:
 1440              	 .cfi_def_cfa_register 7
 242:../main.c     **** 	if(distance_C != 0) avg_distance_C = Exp_moving_average((float)distance_C,avg_distance_C,ALPHA_DIS
 1441              	 .loc 3 242 0
 1442 0004 214B     	 ldr r3,.L69
 1443 0006 1B88     	 ldrh r3,[r3]
 1444 0008 9BB2     	 uxth r3,r3
 1445 000a 002B     	 cmp r3,#0
 1446 000c 10D0     	 beq .L66
 1447              	 .loc 3 242 0 is_stmt 0 discriminator 1
 1448 000e 1F4B     	 ldr r3,.L69
 1449 0010 1B88     	 ldrh r3,[r3]
 1450 0012 9BB2     	 uxth r3,r3
 1451 0014 181C     	 mov r0,r3
 1452 0016 FFF7FEFF 	 bl __aeabi_ui2f
 1453 001a 011C     	 add r1,r0,#0
 1454 001c 1C4B     	 ldr r3,.L69+4
 1455 001e 1B68     	 ldr r3,[r3]
 1456 0020 1C4A     	 ldr r2,.L69+8
 1457 0022 081C     	 add r0,r1,#0
 1458 0024 191C     	 add r1,r3,#0
 1459 0026 FFF7FEFF 	 bl Exp_moving_average
 1460 002a 021C     	 add r2,r0,#0
 1461 002c 184B     	 ldr r3,.L69+4
 1462 002e 1A60     	 str r2,[r3]
 1463              	.L66:
 243:../main.c     **** 	if(distance_L != 0) avg_distance_L = Exp_moving_average((float)distance_L,avg_distance_L,ALPHA_DIS
 1464              	 .loc 3 243 0 is_stmt 1
 1465 0030 194B     	 ldr r3,.L69+12
 1466 0032 1B88     	 ldrh r3,[r3]
 1467 0034 9BB2     	 uxth r3,r3
 1468 0036 002B     	 cmp r3,#0
 1469 0038 10D0     	 beq .L67
 1470              	 .loc 3 243 0 is_stmt 0 discriminator 1
 1471 003a 174B     	 ldr r3,.L69+12
 1472 003c 1B88     	 ldrh r3,[r3]
 1473 003e 9BB2     	 uxth r3,r3
 1474 0040 181C     	 mov r0,r3
 1475 0042 FFF7FEFF 	 bl __aeabi_ui2f
 1476 0046 011C     	 add r1,r0,#0
 1477 0048 144B     	 ldr r3,.L69+16
 1478 004a 1B68     	 ldr r3,[r3]
 1479 004c 114A     	 ldr r2,.L69+8
 1480 004e 081C     	 add r0,r1,#0
 1481 0050 191C     	 add r1,r3,#0
 1482 0052 FFF7FEFF 	 bl Exp_moving_average
 1483 0056 021C     	 add r2,r0,#0
 1484 0058 104B     	 ldr r3,.L69+16
 1485 005a 1A60     	 str r2,[r3]
 1486              	.L67:
 244:../main.c     **** 	if(distance_R != 0) avg_distance_R = Exp_moving_average((float)distance_R,avg_distance_R,ALPHA_DIS
 1487              	 .loc 3 244 0 is_stmt 1
 1488 005c 104B     	 ldr r3,.L69+20
 1489 005e 1B88     	 ldrh r3,[r3]
 1490 0060 9BB2     	 uxth r3,r3
 1491 0062 002B     	 cmp r3,#0
 1492 0064 10D0     	 beq .L65
 1493              	 .loc 3 244 0 is_stmt 0 discriminator 1
 1494 0066 0E4B     	 ldr r3,.L69+20
 1495 0068 1B88     	 ldrh r3,[r3]
 1496 006a 9BB2     	 uxth r3,r3
 1497 006c 181C     	 mov r0,r3
 1498 006e FFF7FEFF 	 bl __aeabi_ui2f
 1499 0072 011C     	 add r1,r0,#0
 1500 0074 0B4B     	 ldr r3,.L69+24
 1501 0076 1B68     	 ldr r3,[r3]
 1502 0078 064A     	 ldr r2,.L69+8
 1503 007a 081C     	 add r0,r1,#0
 1504 007c 191C     	 add r1,r3,#0
 1505 007e FFF7FEFF 	 bl Exp_moving_average
 1506 0082 021C     	 add r2,r0,#0
 1507 0084 074B     	 ldr r3,.L69+24
 1508 0086 1A60     	 str r2,[r3]
 1509              	.L65:
 245:../main.c     **** }
 1510              	 .loc 3 245 0 is_stmt 1
 1511 0088 BD46     	 mov sp,r7
 1512              	 
 1513 008a 80BD     	 pop {r7,pc}
 1514              	.L70:
 1515              	 .align 2
 1516              	.L69:
 1517 008c 00000000 	 .word distance_C
 1518 0090 00000000 	 .word avg_distance_C
 1519 0094 CDCC4C3F 	 .word 1061997773
 1520 0098 00000000 	 .word distance_L
 1521 009c 00000000 	 .word avg_distance_L
 1522 00a0 00000000 	 .word distance_R
 1523 00a4 00000000 	 .word avg_distance_R
 1524              	 .cfi_endproc
 1525              	.LFE212:
 1527              	 .global __aeabi_fmul
 1528              	 .global __aeabi_fsub
 1529              	 .global __aeabi_fadd
 1530              	 .section .text.Exp_moving_average,"ax",%progbits
 1531              	 .align 2
 1532              	 .global Exp_moving_average
 1533              	 .code 16
 1534              	 .thumb_func
 1536              	Exp_moving_average:
 1537              	.LFB213:
 246:../main.c     **** 
 247:../main.c     **** 
 248:../main.c     **** float Exp_moving_average(float new_value, float value, float ALPHA){
 1538              	 .loc 3 248 0
 1539              	 .cfi_startproc
 1540 0000 90B5     	 push {r4,r7,lr}
 1541              	.LCFI32:
 1542              	 .cfi_def_cfa_offset 12
 1543              	 .cfi_offset 4,-12
 1544              	 .cfi_offset 7,-8
 1545              	 .cfi_offset 14,-4
 1546 0002 85B0     	 sub sp,sp,#20
 1547              	.LCFI33:
 1548              	 .cfi_def_cfa_offset 32
 1549 0004 00AF     	 add r7,sp,#0
 1550              	.LCFI34:
 1551              	 .cfi_def_cfa_register 7
 1552 0006 F860     	 str r0,[r7,#12]
 1553 0008 B960     	 str r1,[r7,#8]
 1554 000a 7A60     	 str r2,[r7,#4]
 249:../main.c     **** 	return ((new_value * ALPHA) + ((1 - ALPHA) * value));
 1555              	 .loc 3 249 0
 1556 000c F868     	 ldr r0,[r7,#12]
 1557 000e 7968     	 ldr r1,[r7,#4]
 1558 0010 FFF7FEFF 	 bl __aeabi_fmul
 1559 0014 031C     	 add r3,r0,#0
 1560 0016 1C1C     	 add r4,r3,#0
 1561 0018 FE20     	 mov r0,#254
 1562 001a 8005     	 lsl r0,r0,#22
 1563 001c 7968     	 ldr r1,[r7,#4]
 1564 001e FFF7FEFF 	 bl __aeabi_fsub
 1565 0022 031C     	 add r3,r0,#0
 1566 0024 181C     	 add r0,r3,#0
 1567 0026 B968     	 ldr r1,[r7,#8]
 1568 0028 FFF7FEFF 	 bl __aeabi_fmul
 1569 002c 031C     	 add r3,r0,#0
 1570 002e 201C     	 add r0,r4,#0
 1571 0030 191C     	 add r1,r3,#0
 1572 0032 FFF7FEFF 	 bl __aeabi_fadd
 1573 0036 031C     	 add r3,r0,#0
 250:../main.c     **** }
 1574              	 .loc 3 250 0
 1575 0038 181C     	 add r0,r3,#0
 1576 003a BD46     	 mov sp,r7
 1577 003c 05B0     	 add sp,sp,#20
 1578              	 
 1579 003e 90BD     	 pop {r4,r7,pc}
 1580              	 .cfi_endproc
 1581              	.LFE213:
 1583              	 .text
 1584              	.Letext0:
 1585              	 .file 4 "c:\\dave\\dave-ide-4.4.2-64bit\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1586              	 .file 5 "c:\\dave\\dave-ide-4.4.2-64bit\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1587              	 .file 6 "C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/CMSIS/Infineon/XMC1400_series/Include/XMC1400.h"
 1588              	 .file 7 "C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc/xmc1_scu.h"
 1589              	 .file 8 "C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc/xmc1_gpio.h"
 1590              	 .file 9 "C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc/xmc_eru.h"
 1591              	 .file 10 "C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/BUS_IO/bus_io.h"
 1592              	 .file 11 "C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/XMCLib/inc/xmc_can.h"
 1593              	 .file 12 "C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/GLOBAL_CAN/global_can.h"
 1594              	 .file 13 "C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/CAN_NODE/can_node.h"
 1595              	 .file 14 "C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/DAVE.h"
 1596              	 .file 15 "C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/CMSIS/Include/cmsis_gcc.h"
 1597              	 .file 16 "C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Libraries/CMSIS/Infineon/XMC1400_series/Include/system_XMC1400.h"
 1598              	 .file 17 "C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/PIN_INTERRUPT/pin_interrupt_extern.h"
 1599              	 .file 18 "C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/BUS_IO/bus_io_extern.h"
 1600              	 .file 19 "C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC_1400_Dynamic/Dave/Generated/CAN_NODE/can_node_extern.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
    {standard input}:18     .text.XMC_GPIO_GetInput:00000000 $t
    {standard input}:22     .text.XMC_GPIO_GetInput:00000000 XMC_GPIO_GetInput
    {standard input}:61     .text.PIN_INTERRUPT_GetPinValue:00000000 $t
    {standard input}:65     .text.PIN_INTERRUPT_GetPinValue:00000000 PIN_INTERRUPT_GetPinValue
    {standard input}:104    .bss.CAN_OK:00000000 CAN_OK
    {standard input}:105    .bss.CAN_OK:00000000 $d
                            *COM*:00000001 init_status
    {standard input}:112    .data.RESET_IN_10us_AFTER_SUCSSES:00000000 RESET_IN_10us_AFTER_SUCSSES
    {standard input}:109    .data.RESET_IN_10us_AFTER_SUCSSES:00000000 $d
    {standard input}:119    .data.RESET_IN_10us_AFTER_ECHO_LOW_FAIL:00000000 RESET_IN_10us_AFTER_ECHO_LOW_FAIL
    {standard input}:116    .data.RESET_IN_10us_AFTER_ECHO_LOW_FAIL:00000000 $d
    {standard input}:126    .data.MIN_RESET:00000000 MIN_RESET
    {standard input}:123    .data.MIN_RESET:00000000 $d
    {standard input}:132    .bss.echo_state:00000000 echo_state
    {standard input}:133    .bss.echo_state:00000000 $d
    {standard input}:138    .bss.wait_echo:00000000 wait_echo
    {standard input}:139    .bss.wait_echo:00000000 $d
    {standard input}:144    .bss.echo_count_control:00000000 echo_count_control
    {standard input}:145    .bss.echo_count_control:00000000 $d
    {standard input}:150    .data.reset_done:00000000 reset_done
    {standard input}:157    .bss.t_10us_count:00000000 t_10us_count
    {standard input}:154    .bss.t_10us_count:00000000 $d
    {standard input}:164    .data.reset_at:00000000 reset_at
    {standard input}:161    .data.reset_at:00000000 $d
    {standard input}:171    .bss.echo_t_10us:00000000 echo_t_10us
    {standard input}:168    .bss.echo_t_10us:00000000 $d
    {standard input}:178    .bss.echo_time:00000000 echo_time
    {standard input}:175    .bss.echo_time:00000000 $d
    {standard input}:185    .bss.distance_C:00000000 distance_C
    {standard input}:182    .bss.distance_C:00000000 $d
    {standard input}:192    .bss.distance_L:00000000 distance_L
    {standard input}:189    .bss.distance_L:00000000 $d
    {standard input}:199    .bss.distance_R:00000000 distance_R
    {standard input}:196    .bss.distance_R:00000000 $d
    {standard input}:206    .bss.avg_distance_C:00000000 avg_distance_C
    {standard input}:203    .bss.avg_distance_C:00000000 $d
    {standard input}:213    .bss.avg_distance_L:00000000 avg_distance_L
    {standard input}:210    .bss.avg_distance_L:00000000 $d
    {standard input}:220    .bss.avg_distance_R:00000000 avg_distance_R
    {standard input}:217    .bss.avg_distance_R:00000000 $d
    {standard input}:227    .bss.restet_count:00000000 restet_count
    {standard input}:224    .bss.restet_count:00000000 $d
    {standard input}:234    .bss.sample_count:00000000 sample_count
    {standard input}:231    .bss.sample_count:00000000 $d
    {standard input}:241    .bss.sample_rate_Hz:00000000 sample_rate_Hz
    {standard input}:238    .bss.sample_rate_Hz:00000000 $d
    {standard input}:248    .bss.failed_count:00000000 failed_count
    {standard input}:245    .bss.failed_count:00000000 $d
    {standard input}:255    .bss.echo_not_low_count:00000000 echo_not_low_count
    {standard input}:252    .bss.echo_not_low_count:00000000 $d
    {standard input}:262    .bss.echo_not_low_count_1:00000000 echo_not_low_count_1
    {standard input}:259    .bss.echo_not_low_count_1:00000000 $d
    {standard input}:269    .bss.limit_fail_num:00000000 limit_fail_num
    {standard input}:266    .bss.limit_fail_num:00000000 $d
    {standard input}:276    .bss.limit_fail_count:00000000 limit_fail_count
    {standard input}:273    .bss.limit_fail_count:00000000 $d
    {standard input}:282    .data.Now_Sensor:00000000 Now_Sensor
    {standard input}:285    .text.main:00000000 $t
    {standard input}:290    .text.main:00000000 main
    {standard input}:344    .text.main:0000003c $d
    {standard input}:351    .text.IRQ7_Handler:00000000 $t
    {standard input}:356    .text.IRQ7_Handler:00000000 IRQ7_Handler
    {standard input}:1275   .text.saturation_to_MIN_MAX:00000000 saturation_to_MIN_MAX
    {standard input}:556    .text.reset:00000000 reset
    {standard input}:531    .text.IRQ7_Handler:0000010c $d
    {standard input}:551    .text.reset:00000000 $t
    {standard input}:1429   .text.avg_distances:00000000 avg_distances
    {standard input}:1346   .text.CAN_send_values:00000000 CAN_send_values
    {standard input}:632    .text.reset:00000064 $d
    {standard input}:648    .text.IRQ5_Handler:00000000 $t
    {standard input}:653    .text.IRQ5_Handler:00000000 IRQ5_Handler
    {standard input}:1225   .text.within_MAX_MIN_check_int:00000000 within_MAX_MIN_check_int
    {standard input}:789    .text.IRQ5_Handler:000000d8 $d
    {standard input}:809    .text.IRQ3_Handler:00000000 $t
    {standard input}:814    .text.IRQ3_Handler:00000000 IRQ3_Handler
    {standard input}:950    .text.IRQ3_Handler:000000d8 $d
    {standard input}:970    .text.IRQ6_Handler:00000000 $t
    {standard input}:975    .text.IRQ6_Handler:00000000 IRQ6_Handler
    {standard input}:1111   .text.IRQ6_Handler:000000d8 $d
    {standard input}:1131   .text.IRQ0_Handler:00000000 $t
    {standard input}:1136   .text.IRQ0_Handler:00000000 IRQ0_Handler
    {standard input}:1208   .text.IRQ0_Handler:0000005c $d
    {standard input}:1220   .text.within_MAX_MIN_check_int:00000000 $t
    {standard input}:1270   .text.saturation_to_MIN_MAX:00000000 $t
    {standard input}:1341   .text.CAN_send_values:00000000 $t
    {standard input}:1414   .text.CAN_send_values:00000060 $d
    {standard input}:1424   .text.avg_distances:00000000 $t
    {standard input}:1536   .text.Exp_moving_average:00000000 Exp_moving_average
    {standard input}:1517   .text.avg_distances:0000008c $d
    {standard input}:1531   .text.Exp_moving_average:00000000 $t
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
DAVE_Init
CAN_NODE_Init
CAN_NODE_0
BUS_IO_Write
BUS_IO_0
ECHO_C
ECHO_L
ECHO_R
__aeabi_ui2d
__aeabi_dmul
__aeabi_d2uiz
CAN_NODE_MO_UpdateData
CAN_NODE_MO_Transmit
__aeabi_ui2f
__aeabi_fmul
__aeabi_fsub
__aeabi_fadd
