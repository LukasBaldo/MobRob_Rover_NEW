/*
 * main.c
 *
 *  Created on: 2022 Jul 01 21:38:44
 *  Author: lukas
 */




#include "DAVE.h"                 //Declarations from DAVE Code Generation (includes SFR declaration)

/**

 * @brief main() - Application entry point
 *
 * <b>Details of function</b><br>
 * This routine is the application entry point. It is invoked by the device startup code. It is responsible for
 * invoking the APP initialization dispatcher routine - DAVE_Init() and hosting the place-holder for user application
 * code.
 */

volatile uint8_t echo_state = 0;
volatile uint8_t wait_echo = 0;

volatile uint32_t t_10us_count = 0;
volatile uint32_t echo_t_10us = 0;
volatile uint32_t echo_time = 0;

#define NUM_SENSORS  3
#define ECHO_TIME_MIN 20
#define ECHO_TIME_MAX 2355
#define ECHO_TIME_10us_TO_DISTANCE_cm 0.17

enum SENSORS{
	CENTER = 0b001,
	LEFT = 0b010,
	RIGHT = 0b100};
volatile enum SENSORS Now_Sensor = CENTER;

void reset();

int main(void)
{
  DAVE_STATUS_t status;

  status = DAVE_Init();           /* Initialization of DAVE APPs  */

  if (status != DAVE_STATUS_SUCCESS)
  {
    /* Placeholder for error handler code. The while loop below can be replaced with an user error handler. */
    XMC_DEBUG("DAVE APPs initialization failed\n");

    while(1U)
    {

    }
  }

  /* Placeholder for user application code. The while loop below can be replaced with user application code. */
  while(1U)
  {


  }
}


void ISR_10us_TIMER(){
	t_10us_count ++;
	if (echo_state == 1) echo_t_10us ++;

	if(t_10us_count == 1)BUS_IO_Write(&BUS_IO_0,Now_Sensor);

	else if (t_10us_count == 11) BUS_IO_Write(&BUS_IO_0,Now_Sensor);
	else if (t_10us_count == 15) {
		if(PIN_INTERRUPT_GetPinValue(&ECHO_0) != 0) reset(); // check if echo low
		else wait_echo = 1;
	}


	else if (t_10us_count > 2500) reset();//no ech in expÃ¼ecte time error start again

}

void reset(){
	t_10us_count = 0;
	wait_echo = 0;
	Now_Sensor ++;
	if(Now_Sensor > NUM_SENSORS) Now_Sensor = CENTER;
}

void ISR_ECHO_0(void){
	echo_state = PIN_INTERRUPT_GetPinValue(&ECHO_0);

	if(echo_state == 0 && wait_echo == 1){
		echo_time = echo_t_10us;

	}

}
