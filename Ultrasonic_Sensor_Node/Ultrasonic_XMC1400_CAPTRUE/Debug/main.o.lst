   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,6
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "main.c"
  14              	 .text
  15              	.Ltext0:
  16              	 .cfi_sections .debug_frame
  17              	 .global CAN_OK
  18              	 .section .bss.CAN_OK,"aw",%nobits
  21              	CAN_OK:
  22 0000 00       	 .space 1
  23              	 .comm init_status,1,1
  24              	 .global Sensor
  25              	 .section .bss.Sensor,"aw",%nobits
  28              	Sensor:
  29 0000 00       	 .space 1
  30              	 .global t_100us_count
  31              	 .section .bss.t_100us_count,"aw",%nobits
  32              	 .align 1
  35              	t_100us_count:
  36 0000 0000     	 .space 2
  37              	 .global captured_time
  38              	 .section .bss.captured_time,"aw",%nobits
  39              	 .align 2
  42              	captured_time:
  43 0000 00000000 	 .space 4
  44              	 .global flag_C
  45              	 .section .bss.flag_C,"aw",%nobits
  48              	flag_C:
  49 0000 00       	 .space 1
  50              	 .global flag_L
  51              	 .section .bss.flag_L,"aw",%nobits
  54              	flag_L:
  55 0000 00       	 .space 1
  56              	 .global flag_R
  57              	 .section .bss.flag_R,"aw",%nobits
  60              	flag_R:
  61 0000 00       	 .space 1
  62              	 .global distance_C
  63              	 .section .bss.distance_C,"aw",%nobits
  64              	 .align 1
  67              	distance_C:
  68 0000 0000     	 .space 2
  69              	 .global echo_time_C
  70              	 .section .bss.echo_time_C,"aw",%nobits
  71              	 .align 2
  74              	echo_time_C:
  75 0000 00000000 	 .space 4
  76              	 .global distance_L
  77              	 .section .bss.distance_L,"aw",%nobits
  78              	 .align 1
  81              	distance_L:
  82 0000 0000     	 .space 2
  83              	 .global echo_time_L
  84              	 .section .bss.echo_time_L,"aw",%nobits
  85              	 .align 2
  88              	echo_time_L:
  89 0000 00000000 	 .space 4
  90              	 .global distance_R
  91              	 .section .bss.distance_R,"aw",%nobits
  92              	 .align 1
  95              	distance_R:
  96 0000 0000     	 .space 2
  97              	 .global echo_time_R
  98              	 .section .bss.echo_time_R,"aw",%nobits
  99              	 .align 2
 102              	echo_time_R:
 103 0000 00000000 	 .space 4
 104              	 .section .text.main,"ax",%progbits
 105              	 .align 2
 106              	 .global main
 107              	 .code 16
 108              	 .thumb_func
 110              	main:
 111              	.LFB195:
 112              	 .file 1 "../main.c"
   1:../main.c     **** /*
   2:../main.c     ****  * main.c
   3:../main.c     ****  *
   4:../main.c     ****  *  Created on: 2022 May 31 16:22:54
   5:../main.c     ****  *  Author: lukas
   6:../main.c     ****  */
   7:../main.c     **** #include "DAVE.h"                 //Declarations from DAVE Code Generation (includes SFR declaratio
   8:../main.c     **** 
   9:../main.c     **** #define ECHO_TIME_ns_TO_DISTANCE_cm 0.000017
  10:../main.c     **** #define ECHO_TIME_MIN 200000
  11:../main.c     **** #define ECHO_TIME_MAX 20000000
  12:../main.c     **** 
  13:../main.c     **** uint8_t CAN_OK = 0;
  14:../main.c     **** CAN_NODE_STATUS_t init_status;
  15:../main.c     **** 
  16:../main.c     **** enum SENSORS{
  17:../main.c     **** 	CENTER = 0,
  18:../main.c     **** 	LEFT = 1,
  19:../main.c     **** 	RIGHT = 2};
  20:../main.c     **** volatile enum SENSORS Sensor = CENTER;
  21:../main.c     **** 
  22:../main.c     **** volatile uint16_t t_100us_count = 0;
  23:../main.c     **** 
  24:../main.c     **** uint32_t captured_time = 0;
  25:../main.c     **** 
  26:../main.c     **** uint8_t flag_C = 0;
  27:../main.c     **** uint8_t flag_L = 0;
  28:../main.c     **** uint8_t flag_R = 0;
  29:../main.c     **** 
  30:../main.c     **** uint16_t distance_C = 0;
  31:../main.c     **** uint32_t echo_time_C = 0;
  32:../main.c     **** 
  33:../main.c     **** uint16_t distance_L = 0;
  34:../main.c     **** uint32_t echo_time_L = 0;
  35:../main.c     **** 
  36:../main.c     **** uint16_t distance_R = 0;
  37:../main.c     **** uint32_t echo_time_R = 0;
  38:../main.c     **** 
  39:../main.c     **** void Capture_read();
  40:../main.c     **** void CAN_send_vaules(uint16_t distance_C_CAN, uint16_t distance_L_CAN, uint16_t distance_R_CAN );
  41:../main.c     **** bool within_MAX_MIN_check_int(int x, int MAX, int MIN);
  42:../main.c     **** 
  43:../main.c     **** int main(void)
  44:../main.c     **** {
 113              	 .loc 1 44 0
 114              	 .cfi_startproc
 115 0000 90B5     	 push {r4,r7,lr}
 116              	.LCFI0:
 117              	 .cfi_def_cfa_offset 12
 118              	 .cfi_offset 4,-12
 119              	 .cfi_offset 7,-8
 120              	 .cfi_offset 14,-4
 121 0002 83B0     	 sub sp,sp,#12
 122              	.LCFI1:
 123              	 .cfi_def_cfa_offset 24
 124 0004 00AF     	 add r7,sp,#0
 125              	.LCFI2:
 126              	 .cfi_def_cfa_register 7
  45:../main.c     ****   DAVE_STATUS_t status;
  46:../main.c     **** 
  47:../main.c     ****   status = DAVE_Init();           /* Initialization of DAVE APPs  */
 127              	 .loc 1 47 0
 128 0006 FC1D     	 add r4,r7,#7
 129 0008 FFF7FEFF 	 bl DAVE_Init
 130 000c 031C     	 mov r3,r0
 131 000e 2370     	 strb r3,[r4]
  48:../main.c     **** 
  49:../main.c     ****   if (status != DAVE_STATUS_SUCCESS)
 132              	 .loc 1 49 0
 133 0010 FB1D     	 add r3,r7,#7
 134 0012 1B78     	 ldrb r3,[r3]
 135 0014 002B     	 cmp r3,#0
 136 0016 00D0     	 beq .L2
 137              	.L3:
  50:../main.c     ****   {
  51:../main.c     ****     /* Placeholder for error handler code. The while loop below can be replaced with an user error 
  52:../main.c     ****     XMC_DEBUG("DAVE APPs initialization failed\n");
  53:../main.c     **** 
  54:../main.c     ****     while(1U)
  55:../main.c     ****     {
  56:../main.c     **** 
  57:../main.c     ****     }
 138              	 .loc 1 57 0 discriminator 1
 139 0018 FEE7     	 b .L3
 140              	.L2:
  58:../main.c     ****   }
  59:../main.c     **** 
  60:../main.c     ****   //Initialization of CAN
  61:../main.c     ****  	//CAN_NODE_STATUS_t init_status;
  62:../main.c     ****  	init_status = CAN_NODE_Init(&CAN_NODE_0);
 141              	 .loc 1 62 0
 142 001a 084B     	 ldr r3,.L5
 143 001c 181C     	 mov r0,r3
 144 001e FFF7FEFF 	 bl CAN_NODE_Init
 145 0022 031C     	 mov r3,r0
 146 0024 1A1C     	 mov r2,r3
 147 0026 064B     	 ldr r3,.L5+4
 148 0028 1A70     	 strb r2,[r3]
  63:../main.c     **** 
  64:../main.c     ****  	if (init_status != CAN_NODE_STATUS_SUCCESS) {
 149              	 .loc 1 64 0
 150 002a 054B     	 ldr r3,.L5+4
 151 002c 1B78     	 ldrb r3,[r3]
 152 002e 002B     	 cmp r3,#0
 153 0030 02D1     	 bne .L4
  65:../main.c     ****  		XMC_DEBUG("CAN initialization failed\n");
  66:../main.c     ****  	}
  67:../main.c     ****  	else{
  68:../main.c     ****  		CAN_OK = 1;
 154              	 .loc 1 68 0
 155 0032 044B     	 ldr r3,.L5+8
 156 0034 0122     	 mov r2,#1
 157 0036 1A70     	 strb r2,[r3]
 158              	.L4:
  69:../main.c     ****  	}
  70:../main.c     **** 
  71:../main.c     ****   /* Placeholder for user application code. The while loop below can be replaced with user applicat
  72:../main.c     ****   while(1U)
  73:../main.c     ****   {
  74:../main.c     **** 
  75:../main.c     ****   }
 159              	 .loc 1 75 0 discriminator 3
 160 0038 FEE7     	 b .L4
 161              	.L6:
 162 003a C046     	 .align 2
 163              	.L5:
 164 003c 00000000 	 .word CAN_NODE_0
 165 0040 00000000 	 .word init_status
 166 0044 00000000 	 .word CAN_OK
 167              	 .cfi_endproc
 168              	.LFE195:
 170              	 .section .text.IRQ21_Handler,"ax",%progbits
 171              	 .align 2
 172              	 .global IRQ21_Handler
 173              	 .code 16
 174              	 .thumb_func
 176              	IRQ21_Handler:
 177              	.LFB196:
  76:../main.c     **** }
  77:../main.c     **** 
  78:../main.c     **** void TIMER_100us_ISR(){
 178              	 .loc 1 78 0
 179              	 .cfi_startproc
 180 0000 80B5     	 push {r7,lr}
 181              	.LCFI3:
 182              	 .cfi_def_cfa_offset 8
 183              	 .cfi_offset 7,-8
 184              	 .cfi_offset 14,-4
 185 0002 00AF     	 add r7,sp,#0
 186              	.LCFI4:
 187              	 .cfi_def_cfa_register 7
  79:../main.c     **** 	t_100us_count ++;
 188              	 .loc 1 79 0
 189 0004 324B     	 ldr r3,.L16
 190 0006 1B88     	 ldrh r3,[r3]
 191 0008 9BB2     	 uxth r3,r3
 192 000a 0133     	 add r3,r3,#1
 193 000c 9AB2     	 uxth r2,r3
 194 000e 304B     	 ldr r3,.L16
 195 0010 1A80     	 strh r2,[r3]
  80:../main.c     **** 
  81:../main.c     **** 	if(t_100us_count == 1){
 196              	 .loc 1 81 0
 197 0012 2F4B     	 ldr r3,.L16
 198 0014 1B88     	 ldrh r3,[r3]
 199 0016 9BB2     	 uxth r3,r3
 200 0018 012B     	 cmp r3,#1
 201 001a 28D1     	 bne .L8
  82:../main.c     **** 		switch(Sensor)
 202              	 .loc 1 82 0
 203 001c 2D4B     	 ldr r3,.L16+4
 204 001e 1B78     	 ldrb r3,[r3]
 205 0020 DBB2     	 uxtb r3,r3
 206 0022 012B     	 cmp r3,#1
 207 0024 0ED0     	 beq .L10
 208 0026 022B     	 cmp r3,#2
 209 0028 16D0     	 beq .L11
 210 002a 002B     	 cmp r3,#0
 211 002c 00D0     	 beq .L12
  83:../main.c     **** 		{
  84:../main.c     **** 			case CENTER:
  85:../main.c     **** 				CAPTURE_Start(&CAPTURE_C);
  86:../main.c     **** 				BUS_IO_Write(&BUS_IO_TRIGGER,0b001);
  87:../main.c     **** 				break;
  88:../main.c     **** 			case LEFT:
  89:../main.c     **** 				CAPTURE_Start(&CAPTURE_L);
  90:../main.c     **** 				BUS_IO_Write(&BUS_IO_TRIGGER,0b010);
  91:../main.c     **** 				break;
  92:../main.c     **** 			case RIGHT:
  93:../main.c     **** 				CAPTURE_Start(&CAPTURE_R);
  94:../main.c     **** 				BUS_IO_Write(&BUS_IO_TRIGGER,0b100);
  95:../main.c     **** 				break;
  96:../main.c     **** 			default:
  97:../main.c     **** 				break;
 212              	 .loc 1 97 0
 213 002e 1DE0     	 b .L13
 214              	.L12:
  85:../main.c     **** 				BUS_IO_Write(&BUS_IO_TRIGGER,0b001);
 215              	 .loc 1 85 0
 216 0030 294B     	 ldr r3,.L16+8
 217 0032 181C     	 mov r0,r3
 218 0034 FFF7FEFF 	 bl CAPTURE_Start
  86:../main.c     **** 				break;
 219              	 .loc 1 86 0
 220 0038 284B     	 ldr r3,.L16+12
 221 003a 181C     	 mov r0,r3
 222 003c 0121     	 mov r1,#1
 223 003e FFF7FEFF 	 bl BUS_IO_Write
  87:../main.c     **** 			case LEFT:
 224              	 .loc 1 87 0
 225 0042 13E0     	 b .L13
 226              	.L10:
  89:../main.c     **** 				BUS_IO_Write(&BUS_IO_TRIGGER,0b010);
 227              	 .loc 1 89 0
 228 0044 264B     	 ldr r3,.L16+16
 229 0046 181C     	 mov r0,r3
 230 0048 FFF7FEFF 	 bl CAPTURE_Start
  90:../main.c     **** 				break;
 231              	 .loc 1 90 0
 232 004c 234B     	 ldr r3,.L16+12
 233 004e 181C     	 mov r0,r3
 234 0050 0221     	 mov r1,#2
 235 0052 FFF7FEFF 	 bl BUS_IO_Write
  91:../main.c     **** 			case RIGHT:
 236              	 .loc 1 91 0
 237 0056 09E0     	 b .L13
 238              	.L11:
  93:../main.c     **** 				BUS_IO_Write(&BUS_IO_TRIGGER,0b100);
 239              	 .loc 1 93 0
 240 0058 224B     	 ldr r3,.L16+20
 241 005a 181C     	 mov r0,r3
 242 005c FFF7FEFF 	 bl CAPTURE_Start
  94:../main.c     **** 				break;
 243              	 .loc 1 94 0
 244 0060 1E4B     	 ldr r3,.L16+12
 245 0062 181C     	 mov r0,r3
 246 0064 0421     	 mov r1,#4
 247 0066 FFF7FEFF 	 bl BUS_IO_Write
  95:../main.c     **** 			default:
 248              	 .loc 1 95 0
 249 006a C046     	 mov r8,r8
 250              	.L13:
 251 006c 2EE0     	 b .L7
 252              	.L8:
  98:../main.c     **** 		}
  99:../main.c     **** 	}
 100:../main.c     **** 	else if (t_100us_count == 2) {
 253              	 .loc 1 100 0
 254 006e 184B     	 ldr r3,.L16
 255 0070 1B88     	 ldrh r3,[r3]
 256 0072 9BB2     	 uxth r3,r3
 257 0074 022B     	 cmp r3,#2
 258 0076 05D1     	 bne .L15
 101:../main.c     **** 		 BUS_IO_Write(&BUS_IO_TRIGGER,0b000);
 259              	 .loc 1 101 0
 260 0078 184B     	 ldr r3,.L16+12
 261 007a 181C     	 mov r0,r3
 262 007c 0021     	 mov r1,#0
 263 007e FFF7FEFF 	 bl BUS_IO_Write
 264 0082 23E0     	 b .L7
 265              	.L15:
 102:../main.c     **** 	}
 103:../main.c     **** 	else if (t_100us_count == 250) { // runnig at 35 Hz no probelm with long distasnce anymore
 266              	 .loc 1 103 0
 267 0084 124B     	 ldr r3,.L16
 268 0086 1B88     	 ldrh r3,[r3]
 269 0088 9BB2     	 uxth r3,r3
 270 008a FA2B     	 cmp r3,#250
 271 008c 1ED1     	 bne .L7
 104:../main.c     **** 		Capture_read();
 272              	 .loc 1 104 0
 273 008e FFF7FEFF 	 bl Capture_read
 105:../main.c     **** 		t_100us_count = 0;
 274              	 .loc 1 105 0
 275 0092 0F4B     	 ldr r3,.L16
 276 0094 0022     	 mov r2,#0
 277 0096 1A80     	 strh r2,[r3]
 106:../main.c     **** 
 107:../main.c     **** 		Sensor++;
 278              	 .loc 1 107 0
 279 0098 0E4B     	 ldr r3,.L16+4
 280 009a 1B78     	 ldrb r3,[r3]
 281 009c DBB2     	 uxtb r3,r3
 282 009e 0133     	 add r3,r3,#1
 283 00a0 DAB2     	 uxtb r2,r3
 284 00a2 0C4B     	 ldr r3,.L16+4
 285 00a4 1A70     	 strb r2,[r3]
 108:../main.c     **** 		if(Sensor > 2){
 286              	 .loc 1 108 0
 287 00a6 0B4B     	 ldr r3,.L16+4
 288 00a8 1B78     	 ldrb r3,[r3]
 289 00aa DBB2     	 uxtb r3,r3
 290 00ac 022B     	 cmp r3,#2
 291 00ae 0DD9     	 bls .L7
 109:../main.c     **** 			Sensor = 0;
 292              	 .loc 1 109 0
 293 00b0 084B     	 ldr r3,.L16+4
 294 00b2 0022     	 mov r2,#0
 295 00b4 1A70     	 strb r2,[r3]
 110:../main.c     **** 			CAN_send_vaules(distance_C, distance_L, distance_R );
 296              	 .loc 1 110 0
 297 00b6 0C4B     	 ldr r3,.L16+24
 298 00b8 1988     	 ldrh r1,[r3]
 299 00ba 0C4B     	 ldr r3,.L16+28
 300 00bc 1A88     	 ldrh r2,[r3]
 301 00be 0C4B     	 ldr r3,.L16+32
 302 00c0 1B88     	 ldrh r3,[r3]
 303 00c2 081C     	 mov r0,r1
 304 00c4 111C     	 mov r1,r2
 305 00c6 1A1C     	 mov r2,r3
 306 00c8 FFF7FEFF 	 bl CAN_send_vaules
 307              	.L7:
 111:../main.c     **** 		}
 112:../main.c     **** 	}
 113:../main.c     **** }
 308              	 .loc 1 113 0
 309 00cc BD46     	 mov sp,r7
 310              	 
 311 00ce 80BD     	 pop {r7,pc}
 312              	.L17:
 313              	 .align 2
 314              	.L16:
 315 00d0 00000000 	 .word t_100us_count
 316 00d4 00000000 	 .word Sensor
 317 00d8 00000000 	 .word CAPTURE_C
 318 00dc 00000000 	 .word BUS_IO_TRIGGER
 319 00e0 00000000 	 .word CAPTURE_L
 320 00e4 00000000 	 .word CAPTURE_R
 321 00e8 00000000 	 .word distance_C
 322 00ec 00000000 	 .word distance_L
 323 00f0 00000000 	 .word distance_R
 324              	 .cfi_endproc
 325              	.LFE196:
 327              	 .global __aeabi_ui2d
 328              	 .global __aeabi_dmul
 329              	 .global __aeabi_d2uiz
 330              	 .section .text.Capture_read,"ax",%progbits
 331              	 .align 2
 332              	 .global Capture_read
 333              	 .code 16
 334              	 .thumb_func
 336              	Capture_read:
 337              	.LFB197:
 114:../main.c     **** 
 115:../main.c     **** void Capture_read(){
 338              	 .loc 1 115 0
 339              	 .cfi_startproc
 340 0000 98B5     	 push {r3,r4,r7,lr}
 341              	.LCFI5:
 342              	 .cfi_def_cfa_offset 16
 343              	 .cfi_offset 3,-16
 344              	 .cfi_offset 4,-12
 345              	 .cfi_offset 7,-8
 346              	 .cfi_offset 14,-4
 347 0002 00AF     	 add r7,sp,#0
 348              	.LCFI6:
 349              	 .cfi_def_cfa_register 7
 116:../main.c     **** 	switch(Sensor)
 350              	 .loc 1 116 0
 351 0004 654B     	 ldr r3,.L36
 352 0006 1B78     	 ldrb r3,[r3]
 353 0008 DBB2     	 uxtb r3,r3
 354 000a 012B     	 cmp r3,#1
 355 000c 43D0     	 beq .L20
 356 000e 022B     	 cmp r3,#2
 357 0010 00D1     	 bne .LCB219
 358 0012 7EE0     	 b .L21
 359              	.LCB219:
 360 0014 002B     	 cmp r3,#0
 361 0016 00D0     	 beq .L22
 117:../main.c     **** 	{
 118:../main.c     **** 		case CENTER:
 119:../main.c     **** 			if(CAPTURE_GetCapturedTimeInNanoSec(&CAPTURE_C, &captured_time) == CAPTURE_STATUS_SUCCESS){
 120:../main.c     **** 				echo_time_C = captured_time;
 121:../main.c     **** 				flag_C = 0;
 122:../main.c     **** 
 123:../main.c     **** 				if(within_MAX_MIN_check_int(echo_time_C, ECHO_TIME_MAX, ECHO_TIME_MIN))	distance_C = echo_time_
 124:../main.c     **** 				else distance_C = 0;
 125:../main.c     **** 			}
 126:../main.c     **** 			else{
 127:../main.c     **** 				flag_C = 1;
 128:../main.c     **** 				distance_C = 0;
 129:../main.c     **** 			}
 130:../main.c     **** 			break;
 131:../main.c     **** 			CAPTURE_Stop(&CAPTURE_C);
 132:../main.c     **** 		case LEFT:
 133:../main.c     **** 			if(CAPTURE_GetCapturedTimeInNanoSec(&CAPTURE_L, &captured_time) == CAPTURE_STATUS_SUCCESS){
 134:../main.c     **** 					echo_time_L = captured_time;
 135:../main.c     **** 					flag_L = 0;
 136:../main.c     **** 
 137:../main.c     **** 					if(within_MAX_MIN_check_int(echo_time_L, ECHO_TIME_MAX, ECHO_TIME_MIN))	distance_L = echo_time
 138:../main.c     **** 					else distance_L = 0;
 139:../main.c     **** 				}
 140:../main.c     **** 				else{
 141:../main.c     **** 					flag_L = 1;
 142:../main.c     **** 					distance_L = 0;
 143:../main.c     **** 				}
 144:../main.c     **** 			break;
 145:../main.c     **** 			CAPTURE_Stop(&CAPTURE_L);
 146:../main.c     **** 		case RIGHT:
 147:../main.c     **** 			if(CAPTURE_GetCapturedTimeInNanoSec(&CAPTURE_R, &captured_time) == CAPTURE_STATUS_SUCCESS){
 148:../main.c     **** 					echo_time_R = captured_time;
 149:../main.c     **** 					flag_R = 0;
 150:../main.c     **** 
 151:../main.c     **** 					if(within_MAX_MIN_check_int(echo_time_R, ECHO_TIME_MAX, ECHO_TIME_MIN))	distance_R = echo_time
 152:../main.c     **** 					else distance_R = 0;
 153:../main.c     **** 				}
 154:../main.c     **** 				else{
 155:../main.c     **** 					flag_R = 1;
 156:../main.c     **** 					distance_R = 0;
 157:../main.c     **** 				}
 158:../main.c     **** 			CAPTURE_Stop(&CAPTURE_R);
 159:../main.c     **** 			break;
 160:../main.c     **** 		default:
 161:../main.c     **** 			break;
 362              	 .loc 1 161 0
 363 0018 BDE0     	 b .L18
 364              	.L22:
 119:../main.c     **** 				echo_time_C = captured_time;
 365              	 .loc 1 119 0
 366 001a 614A     	 ldr r2,.L36+4
 367 001c 614B     	 ldr r3,.L36+8
 368 001e 101C     	 mov r0,r2
 369 0020 191C     	 mov r1,r3
 370 0022 FFF7FEFF 	 bl CAPTURE_GetCapturedTimeInNanoSec
 371 0026 031E     	 sub r3,r0,#0
 372 0028 2ED1     	 bne .L23
 120:../main.c     **** 				flag_C = 0;
 373              	 .loc 1 120 0
 374 002a 5E4B     	 ldr r3,.L36+8
 375 002c 1A68     	 ldr r2,[r3]
 376 002e 5E4B     	 ldr r3,.L36+12
 377 0030 1A60     	 str r2,[r3]
 121:../main.c     **** 
 378              	 .loc 1 121 0
 379 0032 5E4B     	 ldr r3,.L36+16
 380 0034 0022     	 mov r2,#0
 381 0036 1A70     	 strb r2,[r3]
 123:../main.c     **** 				else distance_C = 0;
 382              	 .loc 1 123 0
 383 0038 5B4B     	 ldr r3,.L36+12
 384 003a 1B68     	 ldr r3,[r3]
 385 003c 191C     	 mov r1,r3
 386 003e 5C4A     	 ldr r2,.L36+20
 387 0040 5C4B     	 ldr r3,.L36+24
 388 0042 081C     	 mov r0,r1
 389 0044 111C     	 mov r1,r2
 390 0046 1A1C     	 mov r2,r3
 391 0048 FFF7FEFF 	 bl within_MAX_MIN_check_int
 392 004c 031E     	 sub r3,r0,#0
 393 004e 17D0     	 beq .L24
 123:../main.c     **** 				else distance_C = 0;
 394              	 .loc 1 123 0 is_stmt 0 discriminator 1
 395 0050 554B     	 ldr r3,.L36+12
 396 0052 1B68     	 ldr r3,[r3]
 397 0054 181C     	 mov r0,r3
 398 0056 FFF7FEFF 	 bl __aeabi_ui2d
 399 005a 031C     	 mov r3,r0
 400 005c 0C1C     	 mov r4,r1
 401 005e 181C     	 mov r0,r3
 402 0060 211C     	 mov r1,r4
 403 0062 554A     	 ldr r2,.L36+28
 404 0064 554B     	 ldr r3,.L36+32
 405 0066 FFF7FEFF 	 bl __aeabi_dmul
 406 006a 031C     	 mov r3,r0
 407 006c 0C1C     	 mov r4,r1
 408 006e 181C     	 mov r0,r3
 409 0070 211C     	 mov r1,r4
 410 0072 FFF7FEFF 	 bl __aeabi_d2uiz
 411 0076 031C     	 mov r3,r0
 412 0078 9AB2     	 uxth r2,r3
 413 007a 514B     	 ldr r3,.L36+36
 414 007c 1A80     	 strh r2,[r3]
 130:../main.c     **** 			CAPTURE_Stop(&CAPTURE_C);
 415              	 .loc 1 130 0 is_stmt 1 discriminator 1
 416 007e 8AE0     	 b .L18
 417              	.L24:
 124:../main.c     **** 			}
 418              	 .loc 1 124 0
 419 0080 4F4B     	 ldr r3,.L36+36
 420 0082 0022     	 mov r2,#0
 421 0084 1A80     	 strh r2,[r3]
 130:../main.c     **** 			CAPTURE_Stop(&CAPTURE_C);
 422              	 .loc 1 130 0
 423 0086 86E0     	 b .L18
 424              	.L23:
 127:../main.c     **** 				distance_C = 0;
 425              	 .loc 1 127 0
 426 0088 484B     	 ldr r3,.L36+16
 427 008a 0122     	 mov r2,#1
 428 008c 1A70     	 strb r2,[r3]
 128:../main.c     **** 			}
 429              	 .loc 1 128 0
 430 008e 4C4B     	 ldr r3,.L36+36
 431 0090 0022     	 mov r2,#0
 432 0092 1A80     	 strh r2,[r3]
 130:../main.c     **** 			CAPTURE_Stop(&CAPTURE_C);
 433              	 .loc 1 130 0
 434 0094 7FE0     	 b .L18
 435              	.L20:
 133:../main.c     **** 					echo_time_L = captured_time;
 436              	 .loc 1 133 0
 437 0096 4B4A     	 ldr r2,.L36+40
 438 0098 424B     	 ldr r3,.L36+8
 439 009a 101C     	 mov r0,r2
 440 009c 191C     	 mov r1,r3
 441 009e FFF7FEFF 	 bl CAPTURE_GetCapturedTimeInNanoSec
 442 00a2 031E     	 sub r3,r0,#0
 443 00a4 2ED1     	 bne .L28
 134:../main.c     **** 					flag_L = 0;
 444              	 .loc 1 134 0
 445 00a6 3F4B     	 ldr r3,.L36+8
 446 00a8 1A68     	 ldr r2,[r3]
 447 00aa 474B     	 ldr r3,.L36+44
 448 00ac 1A60     	 str r2,[r3]
 135:../main.c     **** 
 449              	 .loc 1 135 0
 450 00ae 474B     	 ldr r3,.L36+48
 451 00b0 0022     	 mov r2,#0
 452 00b2 1A70     	 strb r2,[r3]
 137:../main.c     **** 					else distance_L = 0;
 453              	 .loc 1 137 0
 454 00b4 444B     	 ldr r3,.L36+44
 455 00b6 1B68     	 ldr r3,[r3]
 456 00b8 191C     	 mov r1,r3
 457 00ba 3D4A     	 ldr r2,.L36+20
 458 00bc 3D4B     	 ldr r3,.L36+24
 459 00be 081C     	 mov r0,r1
 460 00c0 111C     	 mov r1,r2
 461 00c2 1A1C     	 mov r2,r3
 462 00c4 FFF7FEFF 	 bl within_MAX_MIN_check_int
 463 00c8 031E     	 sub r3,r0,#0
 464 00ca 17D0     	 beq .L29
 137:../main.c     **** 					else distance_L = 0;
 465              	 .loc 1 137 0 is_stmt 0 discriminator 1
 466 00cc 3E4B     	 ldr r3,.L36+44
 467 00ce 1B68     	 ldr r3,[r3]
 468 00d0 181C     	 mov r0,r3
 469 00d2 FFF7FEFF 	 bl __aeabi_ui2d
 470 00d6 031C     	 mov r3,r0
 471 00d8 0C1C     	 mov r4,r1
 472 00da 181C     	 mov r0,r3
 473 00dc 211C     	 mov r1,r4
 474 00de 364A     	 ldr r2,.L36+28
 475 00e0 364B     	 ldr r3,.L36+32
 476 00e2 FFF7FEFF 	 bl __aeabi_dmul
 477 00e6 031C     	 mov r3,r0
 478 00e8 0C1C     	 mov r4,r1
 479 00ea 181C     	 mov r0,r3
 480 00ec 211C     	 mov r1,r4
 481 00ee FFF7FEFF 	 bl __aeabi_d2uiz
 482 00f2 031C     	 mov r3,r0
 483 00f4 9AB2     	 uxth r2,r3
 484 00f6 364B     	 ldr r3,.L36+52
 485 00f8 1A80     	 strh r2,[r3]
 144:../main.c     **** 			CAPTURE_Stop(&CAPTURE_L);
 486              	 .loc 1 144 0 is_stmt 1 discriminator 1
 487 00fa 4CE0     	 b .L18
 488              	.L29:
 138:../main.c     **** 				}
 489              	 .loc 1 138 0
 490 00fc 344B     	 ldr r3,.L36+52
 491 00fe 0022     	 mov r2,#0
 492 0100 1A80     	 strh r2,[r3]
 144:../main.c     **** 			CAPTURE_Stop(&CAPTURE_L);
 493              	 .loc 1 144 0
 494 0102 48E0     	 b .L18
 495              	.L28:
 141:../main.c     **** 					distance_L = 0;
 496              	 .loc 1 141 0
 497 0104 314B     	 ldr r3,.L36+48
 498 0106 0122     	 mov r2,#1
 499 0108 1A70     	 strb r2,[r3]
 142:../main.c     **** 				}
 500              	 .loc 1 142 0
 501 010a 314B     	 ldr r3,.L36+52
 502 010c 0022     	 mov r2,#0
 503 010e 1A80     	 strh r2,[r3]
 144:../main.c     **** 			CAPTURE_Stop(&CAPTURE_L);
 504              	 .loc 1 144 0
 505 0110 41E0     	 b .L18
 506              	.L21:
 147:../main.c     **** 					echo_time_R = captured_time;
 507              	 .loc 1 147 0
 508 0112 304A     	 ldr r2,.L36+56
 509 0114 234B     	 ldr r3,.L36+8
 510 0116 101C     	 mov r0,r2
 511 0118 191C     	 mov r1,r3
 512 011a FFF7FEFF 	 bl CAPTURE_GetCapturedTimeInNanoSec
 513 011e 031E     	 sub r3,r0,#0
 514 0120 2ED1     	 bne .L32
 148:../main.c     **** 					flag_R = 0;
 515              	 .loc 1 148 0
 516 0122 204B     	 ldr r3,.L36+8
 517 0124 1A68     	 ldr r2,[r3]
 518 0126 2C4B     	 ldr r3,.L36+60
 519 0128 1A60     	 str r2,[r3]
 149:../main.c     **** 
 520              	 .loc 1 149 0
 521 012a 2C4B     	 ldr r3,.L36+64
 522 012c 0022     	 mov r2,#0
 523 012e 1A70     	 strb r2,[r3]
 151:../main.c     **** 					else distance_R = 0;
 524              	 .loc 1 151 0
 525 0130 294B     	 ldr r3,.L36+60
 526 0132 1B68     	 ldr r3,[r3]
 527 0134 191C     	 mov r1,r3
 528 0136 1E4A     	 ldr r2,.L36+20
 529 0138 1E4B     	 ldr r3,.L36+24
 530 013a 081C     	 mov r0,r1
 531 013c 111C     	 mov r1,r2
 532 013e 1A1C     	 mov r2,r3
 533 0140 FFF7FEFF 	 bl within_MAX_MIN_check_int
 534 0144 031E     	 sub r3,r0,#0
 535 0146 17D0     	 beq .L33
 151:../main.c     **** 					else distance_R = 0;
 536              	 .loc 1 151 0 is_stmt 0 discriminator 1
 537 0148 234B     	 ldr r3,.L36+60
 538 014a 1B68     	 ldr r3,[r3]
 539 014c 181C     	 mov r0,r3
 540 014e FFF7FEFF 	 bl __aeabi_ui2d
 541 0152 031C     	 mov r3,r0
 542 0154 0C1C     	 mov r4,r1
 543 0156 181C     	 mov r0,r3
 544 0158 211C     	 mov r1,r4
 545 015a 174A     	 ldr r2,.L36+28
 546 015c 174B     	 ldr r3,.L36+32
 547 015e FFF7FEFF 	 bl __aeabi_dmul
 548 0162 031C     	 mov r3,r0
 549 0164 0C1C     	 mov r4,r1
 550 0166 181C     	 mov r0,r3
 551 0168 211C     	 mov r1,r4
 552 016a FFF7FEFF 	 bl __aeabi_d2uiz
 553 016e 031C     	 mov r3,r0
 554 0170 9AB2     	 uxth r2,r3
 555 0172 1B4B     	 ldr r3,.L36+68
 556 0174 1A80     	 strh r2,[r3]
 557 0176 09E0     	 b .L35
 558              	.L33:
 152:../main.c     **** 				}
 559              	 .loc 1 152 0 is_stmt 1
 560 0178 194B     	 ldr r3,.L36+68
 561 017a 0022     	 mov r2,#0
 562 017c 1A80     	 strh r2,[r3]
 563 017e 05E0     	 b .L35
 564              	.L32:
 155:../main.c     **** 					distance_R = 0;
 565              	 .loc 1 155 0
 566 0180 164B     	 ldr r3,.L36+64
 567 0182 0122     	 mov r2,#1
 568 0184 1A70     	 strb r2,[r3]
 156:../main.c     **** 				}
 569              	 .loc 1 156 0
 570 0186 164B     	 ldr r3,.L36+68
 571 0188 0022     	 mov r2,#0
 572 018a 1A80     	 strh r2,[r3]
 573              	.L35:
 158:../main.c     **** 			break;
 574              	 .loc 1 158 0
 575 018c 114B     	 ldr r3,.L36+56
 576 018e 181C     	 mov r0,r3
 577 0190 FFF7FEFF 	 bl CAPTURE_Stop
 159:../main.c     **** 		default:
 578              	 .loc 1 159 0
 579 0194 C046     	 mov r8,r8
 580              	.L18:
 162:../main.c     **** 	}
 163:../main.c     **** }
 581              	 .loc 1 163 0
 582 0196 BD46     	 mov sp,r7
 583              	 
 584 0198 98BD     	 pop {r3,r4,r7,pc}
 585              	.L37:
 586 019a C046     	 .align 2
 587              	.L36:
 588 019c 00000000 	 .word Sensor
 589 01a0 00000000 	 .word CAPTURE_C
 590 01a4 00000000 	 .word captured_time
 591 01a8 00000000 	 .word echo_time_C
 592 01ac 00000000 	 .word flag_C
 593 01b0 002D3101 	 .word 20000000
 594 01b4 400D0300 	 .word 200000
 595 01b8 664CC11A 	 .word 448875622
 596 01bc 67D3F13E 	 .word 1056035687
 597 01c0 00000000 	 .word distance_C
 598 01c4 00000000 	 .word CAPTURE_L
 599 01c8 00000000 	 .word echo_time_L
 600 01cc 00000000 	 .word flag_L
 601 01d0 00000000 	 .word distance_L
 602 01d4 00000000 	 .word CAPTURE_R
 603 01d8 00000000 	 .word echo_time_R
 604 01dc 00000000 	 .word flag_R
 605 01e0 00000000 	 .word distance_R
 606              	 .cfi_endproc
 607              	.LFE197:
 609              	 .section .text.within_MAX_MIN_check_int,"ax",%progbits
 610              	 .align 2
 611              	 .global within_MAX_MIN_check_int
 612              	 .code 16
 613              	 .thumb_func
 615              	within_MAX_MIN_check_int:
 616              	.LFB198:
 164:../main.c     **** 
 165:../main.c     **** bool within_MAX_MIN_check_int(int x, int MAX, int MIN)
 166:../main.c     **** {
 617              	 .loc 1 166 0
 618              	 .cfi_startproc
 619 0000 80B5     	 push {r7,lr}
 620              	.LCFI7:
 621              	 .cfi_def_cfa_offset 8
 622              	 .cfi_offset 7,-8
 623              	 .cfi_offset 14,-4
 624 0002 84B0     	 sub sp,sp,#16
 625              	.LCFI8:
 626              	 .cfi_def_cfa_offset 24
 627 0004 00AF     	 add r7,sp,#0
 628              	.LCFI9:
 629              	 .cfi_def_cfa_register 7
 630 0006 F860     	 str r0,[r7,#12]
 631 0008 B960     	 str r1,[r7,#8]
 632 000a 7A60     	 str r2,[r7,#4]
 167:../main.c     **** 	if((x - MIN) * (x - MAX) <= 0) return 1;
 633              	 .loc 1 167 0
 634 000c FA68     	 ldr r2,[r7,#12]
 635 000e 7B68     	 ldr r3,[r7,#4]
 636 0010 D31A     	 sub r3,r2,r3
 637 0012 F968     	 ldr r1,[r7,#12]
 638 0014 BA68     	 ldr r2,[r7,#8]
 639 0016 8A1A     	 sub r2,r1,r2
 640 0018 5343     	 mul r3,r2
 641 001a 002B     	 cmp r3,#0
 642 001c 01DC     	 bgt .L39
 643              	 .loc 1 167 0 is_stmt 0 discriminator 1
 644 001e 0123     	 mov r3,#1
 645 0020 00E0     	 b .L40
 646              	.L39:
 168:../main.c     **** 	else return 0;
 647              	 .loc 1 168 0 is_stmt 1
 648 0022 0023     	 mov r3,#0
 649              	.L40:
 169:../main.c     **** }
 650              	 .loc 1 169 0
 651 0024 181C     	 mov r0,r3
 652 0026 BD46     	 mov sp,r7
 653 0028 04B0     	 add sp,sp,#16
 654              	 
 655 002a 80BD     	 pop {r7,pc}
 656              	 .cfi_endproc
 657              	.LFE198:
 659              	 .section .text.CAN_send_vaules,"ax",%progbits
 660              	 .align 2
 661              	 .global CAN_send_vaules
 662              	 .code 16
 663              	 .thumb_func
 665              	CAN_send_vaules:
 666              	.LFB199:
 170:../main.c     **** 
 171:../main.c     **** void CAN_send_vaules(uint16_t distance_C_CAN, uint16_t distance_L_CAN, uint16_t distance_R_CAN ){
 667              	 .loc 1 171 0
 668              	 .cfi_startproc
 669 0000 90B5     	 push {r4,r7,lr}
 670              	.LCFI10:
 671              	 .cfi_def_cfa_offset 12
 672              	 .cfi_offset 4,-12
 673              	 .cfi_offset 7,-8
 674              	 .cfi_offset 14,-4
 675 0002 85B0     	 sub sp,sp,#20
 676              	.LCFI11:
 677              	 .cfi_def_cfa_offset 32
 678 0004 00AF     	 add r7,sp,#0
 679              	.LCFI12:
 680              	 .cfi_def_cfa_register 7
 681 0006 041C     	 mov r4,r0
 682 0008 081C     	 mov r0,r1
 683 000a 111C     	 mov r1,r2
 684 000c BB1D     	 add r3,r7,#6
 685 000e 221C     	 add r2,r4,#0
 686 0010 1A80     	 strh r2,[r3]
 687 0012 3B1D     	 add r3,r7,#4
 688 0014 021C     	 add r2,r0,#0
 689 0016 1A80     	 strh r2,[r3]
 690 0018 BB1C     	 add r3,r7,#2
 691 001a 0A1C     	 add r2,r1,#0
 692 001c 1A80     	 strh r2,[r3]
 172:../main.c     **** 
 173:../main.c     **** 	uint16_t RX_Data[4] ={CAN_OK, distance_C_CAN, distance_L_CAN, distance_R_CAN}; // in int16_t mm/s 
 693              	 .loc 1 173 0
 694 001e 124B     	 ldr r3,.L42
 695 0020 1B78     	 ldrb r3,[r3]
 696 0022 9AB2     	 uxth r2,r3
 697 0024 0823     	 mov r3,#8
 698 0026 FB18     	 add r3,r7,r3
 699 0028 1A80     	 strh r2,[r3]
 700 002a 0823     	 mov r3,#8
 701 002c FB18     	 add r3,r7,r3
 702 002e BA1D     	 add r2,r7,#6
 703 0030 1288     	 ldrh r2,[r2]
 704 0032 5A80     	 strh r2,[r3,#2]
 705 0034 0823     	 mov r3,#8
 706 0036 FB18     	 add r3,r7,r3
 707 0038 3A1D     	 add r2,r7,#4
 708 003a 1288     	 ldrh r2,[r2]
 709 003c 9A80     	 strh r2,[r3,#4]
 710 003e 0823     	 mov r3,#8
 711 0040 FB18     	 add r3,r7,r3
 712 0042 BA1C     	 add r2,r7,#2
 713 0044 1288     	 ldrh r2,[r2]
 714 0046 DA80     	 strh r2,[r3,#6]
 174:../main.c     **** 
 175:../main.c     **** 	CAN_NODE_MO_UpdateData((void*) CAN_NODE_0.lmobj_ptr[0], (uint8_t*)RX_Data);
 715              	 .loc 1 175 0
 716 0048 084B     	 ldr r3,.L42+4
 717 004a DA68     	 ldr r2,[r3,#12]
 718 004c 0823     	 mov r3,#8
 719 004e FB18     	 add r3,r7,r3
 720 0050 101C     	 mov r0,r2
 721 0052 191C     	 mov r1,r3
 722 0054 FFF7FEFF 	 bl CAN_NODE_MO_UpdateData
 176:../main.c     **** 	CAN_NODE_MO_Transmit((void*) CAN_NODE_0.lmobj_ptr[0]); //Transmit the data of message object1
 723              	 .loc 1 176 0
 724 0058 044B     	 ldr r3,.L42+4
 725 005a DB68     	 ldr r3,[r3,#12]
 726 005c 181C     	 mov r0,r3
 727 005e FFF7FEFF 	 bl CAN_NODE_MO_Transmit
 177:../main.c     **** }
 728              	 .loc 1 177 0
 729 0062 BD46     	 mov sp,r7
 730 0064 05B0     	 add sp,sp,#20
 731              	 
 732 0066 90BD     	 pop {r4,r7,pc}
 733              	.L43:
 734              	 .align 2
 735              	.L42:
 736 0068 00000000 	 .word CAN_OK
 737 006c 00000000 	 .word CAN_NODE_0
 738              	 .cfi_endproc
 739              	.LFE199:
 741              	 .text
 742              	.Letext0:
 743              	 .file 2 "c:\\dave\\dave-ide-4.4.2-64bit\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 744              	 .file 3 "c:\\dave\\dave-ide-4.4.2-64bit\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 745              	 .file 4 "C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC1400_CAPTRUE/Libraries/CMSIS/Infineon/XMC1400_series/Include/XMC1400.h"
 746              	 .file 5 "C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC1400_CAPTRUE/Libraries/XMCLib/inc/xmc1_scu.h"
 747              	 .file 6 "C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC1400_CAPTRUE/Libraries/XMCLib/inc/xmc_ccu4.h"
 748              	 .file 7 "C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC1400_CAPTRUE/Dave/Generated/GLOBAL_CCU4/global_ccu4.h"
 749              	 .file 8 "C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC1400_CAPTRUE/Libraries/XMCLib/inc/xmc_gpio.h"
 750              	 .file 9 "C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC1400_CAPTRUE/Libraries/XMCLib/inc/xmc1_gpio.h"
 751              	 .file 10 "C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC1400_CAPTRUE/Dave/Generated/CAPTURE/capture.h"
 752              	 .file 11 "C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC1400_CAPTRUE/Dave/Generated/BUS_IO/bus_io.h"
 753              	 .file 12 "C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC1400_CAPTRUE/Libraries/XMCLib/inc/xmc_can.h"
 754              	 .file 13 "C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC1400_CAPTRUE/Dave/Generated/GLOBAL_CAN/global_can.h"
 755              	 .file 14 "C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC1400_CAPTRUE/Dave/Generated/CAN_NODE/can_node.h"
 756              	 .file 15 "C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC1400_CAPTRUE/Dave/Generated/DAVE.h"
 757              	 .file 16 "C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC1400_CAPTRUE/Libraries/CMSIS/Include/cmsis_gcc.h"
 758              	 .file 17 "C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC1400_CAPTRUE/Libraries/CMSIS/Infineon/XMC1400_series/Include/system_XMC1400.h"
 759              	 .file 18 "C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC1400_CAPTRUE/Dave/Generated/CAPTURE/capture_extern.h"
 760              	 .file 19 "C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC1400_CAPTRUE/Dave/Generated/BUS_IO/bus_io_extern.h"
 761              	 .file 20 "C:/GitHub/MobRob_Rover_NEW/Ultrasonic_Sensor_Node/Ultrasonic_XMC1400_CAPTRUE/Dave/Generated/CAN_NODE/can_node_extern.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
    {standard input}:21     .bss.CAN_OK:00000000 CAN_OK
    {standard input}:22     .bss.CAN_OK:00000000 $d
                            *COM*:00000001 init_status
    {standard input}:28     .bss.Sensor:00000000 Sensor
    {standard input}:29     .bss.Sensor:00000000 $d
    {standard input}:35     .bss.t_100us_count:00000000 t_100us_count
    {standard input}:32     .bss.t_100us_count:00000000 $d
    {standard input}:42     .bss.captured_time:00000000 captured_time
    {standard input}:39     .bss.captured_time:00000000 $d
    {standard input}:48     .bss.flag_C:00000000 flag_C
    {standard input}:49     .bss.flag_C:00000000 $d
    {standard input}:54     .bss.flag_L:00000000 flag_L
    {standard input}:55     .bss.flag_L:00000000 $d
    {standard input}:60     .bss.flag_R:00000000 flag_R
    {standard input}:61     .bss.flag_R:00000000 $d
    {standard input}:67     .bss.distance_C:00000000 distance_C
    {standard input}:64     .bss.distance_C:00000000 $d
    {standard input}:74     .bss.echo_time_C:00000000 echo_time_C
    {standard input}:71     .bss.echo_time_C:00000000 $d
    {standard input}:81     .bss.distance_L:00000000 distance_L
    {standard input}:78     .bss.distance_L:00000000 $d
    {standard input}:88     .bss.echo_time_L:00000000 echo_time_L
    {standard input}:85     .bss.echo_time_L:00000000 $d
    {standard input}:95     .bss.distance_R:00000000 distance_R
    {standard input}:92     .bss.distance_R:00000000 $d
    {standard input}:102    .bss.echo_time_R:00000000 echo_time_R
    {standard input}:99     .bss.echo_time_R:00000000 $d
    {standard input}:105    .text.main:00000000 $t
    {standard input}:110    .text.main:00000000 main
    {standard input}:164    .text.main:0000003c $d
    {standard input}:171    .text.IRQ21_Handler:00000000 $t
    {standard input}:176    .text.IRQ21_Handler:00000000 IRQ21_Handler
    {standard input}:336    .text.Capture_read:00000000 Capture_read
    {standard input}:665    .text.CAN_send_vaules:00000000 CAN_send_vaules
    {standard input}:315    .text.IRQ21_Handler:000000d0 $d
    {standard input}:331    .text.Capture_read:00000000 $t
    {standard input}:615    .text.within_MAX_MIN_check_int:00000000 within_MAX_MIN_check_int
    {standard input}:588    .text.Capture_read:0000019c $d
    {standard input}:610    .text.within_MAX_MIN_check_int:00000000 $t
    {standard input}:660    .text.CAN_send_vaules:00000000 $t
    {standard input}:736    .text.CAN_send_vaules:00000068 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
DAVE_Init
CAN_NODE_Init
CAN_NODE_0
CAPTURE_Start
BUS_IO_Write
CAPTURE_C
BUS_IO_TRIGGER
CAPTURE_L
CAPTURE_R
__aeabi_ui2d
__aeabi_dmul
__aeabi_d2uiz
CAPTURE_GetCapturedTimeInNanoSec
CAPTURE_Stop
CAN_NODE_MO_UpdateData
CAN_NODE_MO_Transmit
