   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,6
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "Driving_dynamics.c"
  14              	 .text
  15              	.Ltext0:
  16              	 .cfi_sections .debug_frame
  17              	 .comm RC_controll,1,1
  18              	 .section .text.XMC_GPIO_SetOutputHigh,"ax",%progbits
  19              	 .align 2
  20              	 .code 16
  21              	 .thumb_func
  23              	XMC_GPIO_SetOutputHigh:
  24              	.LFB122:
  25              	 .file 1 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc/xmc_gpio.h"
   1:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
   2:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @file xmc_gpio.h
   3:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @date 2015-06-20
   4:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   5:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @cond
   6:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *****************************************************************************
   7:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   9:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * All rights reserved.
  11:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  12:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  14:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Permission is hereby granted, free of charge, to any person or organization
  15:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * obtaining a copy of the software and accompanying documentation covered by
  16:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * do so, all subject to the following:
  20:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  21:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * The copyright notices in the Software and this entire statement, including
  22:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * the above license grant, this restriction and the following disclaimer,
  23:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * must be included in all copies of the Software, in whole or in part, and
  24:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * all derivative works of the Software, unless such copies or derivative
  25:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * works are solely in the form of machine-executable object code generated by
  26:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * a source language processor.
  27:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  28:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * DEALINGS IN THE SOFTWARE.
  35:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  36:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * To improve the quality of the software, users are encouraged to share
  37:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * at XMCSupport@infineon.com.
  39:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *****************************************************************************
  40:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  41:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Change History
  42:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * --------------
  43:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  44:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-02-20:
  45:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Initial draft<br>
  46:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Documentation improved <br>
  47:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  48:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-06-20:
  49:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  50:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  51:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @endcond
  52:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  53:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  54:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
  55:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #ifndef XMC_GPIO_H
  56:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_H
  57:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
  58:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  59:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * HEADER FILES
  60:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  61:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
  62:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc_common.h"
  63:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
  64:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  65:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup XMClib XMC Peripheral Library
  66:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @{
  67:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  68:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
  69:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  70:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup GPIO
  71:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @brief General Purpose Input Output (GPIO) driver for the XMC microcontroller family.
  72:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  73:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * GPIO driver provide a generic and very flexible software interface for all standard digital I/O 
  74:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Each port slice has individual interfaces for the operation as General Purpose I/O and it furthe
  75:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * connectivity to the on-chip periphery and the control for the pad characteristics.
  76:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  77:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * The driver is divided into Input and Output mode.
  78:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  79:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Input mode features:
  80:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Configuration structure XMC_GPIO_CONFIG_t and initialization function XMC_GPIO_Init()
  81:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of weak pull-up or pull-down device. Configuration structure XMC_GPIO_MO
  82:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
  83:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of input hysteresis. XMC_GPIO_SetInputHysteresis()
  84:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  85:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  86:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  87:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Output mode features:
  88:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of push pull/open drain and Alternate output. Configuration structure XM
  89:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
  90:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of pad driver strength. Configuration structure XMC_GPIO_OUTPUT_STRENGTH
  91:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  92:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  93:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of initial output level. Configuration structure XMC_GPIO_OUTPUT_LEVEL_t
  94:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  95:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *@{
  96:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  97:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
  98:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  99:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * MACROS
 100:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 101:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 102:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Pos PORT0_IOCR0_PC0_Pos
 103:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Msk PORT0_IOCR0_PC0_Msk
 104:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 105:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Size 				(8U)
 106:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 107:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 108:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_OUTPUT_LEVEL(level) ((level == XMC_GPIO_OUTPUT_LEVEL_LOW) || \
 109:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****                                             (level == XMC_GPIO_OUTPUT_LEVEL_HIGH))
 110:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 111:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_HWCTRL(hwctrl) ((hwctrl == XMC_GPIO_HWCTRL_DISABLED) || \
 112:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL1) || \
 113:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL2))
 114:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 115:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 116:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * ENUMS
 117:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 118:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 119:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 120:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 121:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines output level of a pin. Use type \a XMC_GPIO_OUTPUT_LEVEL_t for this enum.
 122:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 123:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_OUTPUT_LEVEL
 124:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** {
 125:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_LOW  = 0x10000U, /**<  Reset bit */
 126:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_HIGH = 0x1U, 	/**< Set bit  */
 127:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_OUTPUT_LEVEL_t;
 128:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 129:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 130:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines direct hardware control characteristics of the pin . Use type \a XMC_GPIO_HWCTRL_t for t
 131:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 132:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_HWCTRL
 133:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** {
 134:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_DISABLED     = 0x0U, /**<  Software control only */
 135:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL1  = 0x1U, /**<  HWI0/HWO0 control path can override the software confi
 136:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL2  = 0x2U  /**<  HWI1/HWO1 control path can override the software confi
 137:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_HWCTRL_t;
 138:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 139:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 140:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * DEVICE FAMILY EXTENSIONS
 141:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 142:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 143:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #if UC_FAMILY == XMC1
 144:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc1_gpio.h"
 145:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #elif UC_FAMILY == XMC4
 146:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc4_gpio.h"
 147:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #else
 148:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #error "xmc_gpio.h: family device not supported"
 149:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 150:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 151:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 152:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * API PROTOTYPES
 153:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 154:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 155:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #ifdef __cplusplus
 156:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** extern "C" {
 157:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 158:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 159:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 160:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 161:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	  Constant pointer pointing to GPIO port, to access port registers like Pn_OUT,Pn_O
 162:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	  Port pin number.
 163:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  config GPIO configuration data structure. Refer data structure @ref XMC_GPIO_CONFIG_t fo
 164:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 165:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 166:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 167:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 168:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
 169:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,hysteresis, push pull
 170:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for a selected \a po
 171:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \a config provides selected I/O settings. It configures hardware registers Pn_IOCR,Pn_OUT, Pn_OM
 172:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 173:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
 174:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,push pull /open drain
 175:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for selected \a port
 176:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * It configures hardware registers Pn_IOCR,Pn_OUT,Pn_OMR,Pn_PDISC and Pn_PDR.\n
 177:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 178:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 179:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 180:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 181:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 182:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 183:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * This API is called in definition of DAVE_init by code generation and therefore should not be exp
 184:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * for the normal operation. Use other APIs only after DAVE_init is called successfully (returns DA
 185:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 186:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 187:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 188:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 189:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 190:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_Init(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_CONFIG_t *const c
 191:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 192:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 193:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 194:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	Constant pointer pointing to GPIO port, to access hardware register Pn_IOCR.
 195:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 196:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  mode input / output functionality selection. Refer @ref XMC_GPIO_MODE_t for valid values
 197:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 198:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 199:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 200:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 201:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets digital input and output driver functionality and characteristics of a GPIO port pin. It co
 202:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * registers Pn_IOCR. \a mode is initially configured during initialization in XMC_GPIO_Init(). Cal
 203:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * the port direction functionality as needed later in the program.
 204:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 205:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 206:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 207:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 208:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 209:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 210:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_SetMode(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_MODE_t mode);
 211:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 212:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 213:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 214:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 215:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	 Constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 216:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	 Port pin number.
 217:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  level output level selection. Refer @ref XMC_GPIO_OUTPUT_LEVEL_t for valid values.
 218:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 219:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 220:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 221:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 222:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Set port pin output level to high or low.It configures hardware registers Pn_OMR.\a level is ini
 223:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * configured during initialization in XMC_GPIO_Init(). Call this API to alter output level as need
 224:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 225:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 226:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 227:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 228:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 229:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 230:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 231:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 232:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 233:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 234:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLevel(XMC_GPIO_PORT_t *const port, const uint8_t pin, const 
 235:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** {
 236:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 237:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid output level", XMC_GPIO_CHECK_OUTPUT_LEVEL(level));
 238:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 239:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)level << pin;
 240:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** }
 241:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 242:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 243:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 244:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 245:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 246:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 247:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 248:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 249:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 250:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *  Sets port pin output to high. It configures hardware registers Pn_OMR.
 251:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 252:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *  \par<b>Related APIs:</b><BR>
 253:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputLow()
 254:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 255:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 256:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().\n
 257:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 258:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 259:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 260:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 261:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputHigh(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 262:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** {
  26              	 .loc 1 262 0
  27              	 .cfi_startproc
  28 0000 80B5     	 push {r7,lr}
  29              	.LCFI0:
  30              	 .cfi_def_cfa_offset 8
  31              	 .cfi_offset 7,-8
  32              	 .cfi_offset 14,-4
  33 0002 82B0     	 sub sp,sp,#8
  34              	.LCFI1:
  35              	 .cfi_def_cfa_offset 16
  36 0004 00AF     	 add r7,sp,#0
  37              	.LCFI2:
  38              	 .cfi_def_cfa_register 7
  39 0006 7860     	 str r0,[r7,#4]
  40 0008 0A1C     	 mov r2,r1
  41 000a FB1C     	 add r3,r7,#3
  42 000c 1A70     	 strb r2,[r3]
 263:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputHigh: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 264:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 265:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)0x1U << pin;
  43              	 .loc 1 265 0
  44 000e FB1C     	 add r3,r7,#3
  45 0010 1B78     	 ldrb r3,[r3]
  46 0012 0122     	 mov r2,#1
  47 0014 9A40     	 lsl r2,r2,r3
  48 0016 7B68     	 ldr r3,[r7,#4]
  49 0018 5A60     	 str r2,[r3,#4]
 266:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** }
  50              	 .loc 1 266 0
  51 001a BD46     	 mov sp,r7
  52 001c 02B0     	 add sp,sp,#8
  53              	 
  54 001e 80BD     	 pop {r7,pc}
  55              	 .cfi_endproc
  56              	.LFE122:
  58              	 .section .text.XMC_GPIO_SetOutputLow,"ax",%progbits
  59              	 .align 2
  60              	 .code 16
  61              	 .thumb_func
  63              	XMC_GPIO_SetOutputLow:
  64              	.LFB123:
 267:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 268:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 269:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 270:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 271:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	port pin number.
 272:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 273:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return  None
 274:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 275:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Description:</b><br>
 276:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets port pin output to low. It configures hardware registers Pn_OMR.\n
 277:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 278:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>>
 279:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh()
 280:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 281:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Note:</b><br>
 282:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 283:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 284:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 285:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 286:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 287:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLow(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 288:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** {
  65              	 .loc 1 288 0
  66              	 .cfi_startproc
  67 0000 80B5     	 push {r7,lr}
  68              	.LCFI3:
  69              	 .cfi_def_cfa_offset 8
  70              	 .cfi_offset 7,-8
  71              	 .cfi_offset 14,-4
  72 0002 82B0     	 sub sp,sp,#8
  73              	.LCFI4:
  74              	 .cfi_def_cfa_offset 16
  75 0004 00AF     	 add r7,sp,#0
  76              	.LCFI5:
  77              	 .cfi_def_cfa_register 7
  78 0006 7860     	 str r0,[r7,#4]
  79 0008 0A1C     	 mov r2,r1
  80 000a FB1C     	 add r3,r7,#3
  81 000c 1A70     	 strb r2,[r3]
 289:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLow: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 290:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 291:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10000U << pin;
  82              	 .loc 1 291 0
  83 000e FB1C     	 add r3,r7,#3
  84 0010 1B78     	 ldrb r3,[r3]
  85 0012 8022     	 mov r2,#128
  86 0014 5202     	 lsl r2,r2,#9
  87 0016 9A40     	 lsl r2,r2,r3
  88 0018 7B68     	 ldr r3,[r7,#4]
  89 001a 5A60     	 str r2,[r3,#4]
 292:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** }
  90              	 .loc 1 292 0
  91 001c BD46     	 mov sp,r7
  92 001e 02B0     	 add sp,sp,#8
  93              	 
  94 0020 80BD     	 pop {r7,pc}
  95              	 .cfi_endproc
  96              	.LFE123:
  98 0022 C046     	 .section .text.DIGITAL_IO_SetOutputHigh,"ax",%progbits
  99              	 .align 2
 100              	 .code 16
 101              	 .thumb_func
 103              	DIGITAL_IO_SetOutputHigh:
 104              	.LFB195:
 105              	 .file 2 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO/digital_io.h"
   1:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /*
   2:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   3:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @file digital_io.h
   4:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @date 2021-01-08
   5:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   6:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * NOTE:
   7:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   8:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   9:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @cond
  10:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  11:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DIGITAL_IO v4.0.18 - The DIGITAL_IO APP is used to configure a port pin as digital Input/Output.
  12:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  13:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  14:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * All rights reserved.
  15:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  16:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  17:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * following conditions are met:
  18:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  19:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  20:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   disclaimer.
  21:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  22:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  23:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  24:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  25:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  26:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   products derived from this software without specific prior written permission.
  27:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  28:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  29:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  30:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  31:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  32:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  33:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  34:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  36:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  37:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * with Infineon Technologies AG (dave@infineon.com).
  38:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  39:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  40:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Change History
  41:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * --------------
  42:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  43:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-02-16
  44:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Initial version
  45:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  46:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-04-22
  47:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - XMC_ASSERT is added in static inline functions.<br>
  48:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  49:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-06-20
  50:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Version check added for XMCLib dependency.<br>
  51:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  52:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-12-22
  53:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Added hardware controlled IO feature.
  54:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2016-07-08:
  55:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Fixed incorrect case for an included header.<br>
  56:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2021-01-08:
  57:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Modified check for minimum XMCLib version
  58:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  59:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @endcond
  60:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  61:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  */
  62:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  63:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
  64:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * HEADER FILES
  65:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  66:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  67:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #ifndef DIGITAL_IO_H
  68:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #define DIGITAL_IO_H
  69:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  70:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #include "xmc_gpio.h"
  71:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #include "DAVE_Common.h"
  72:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #include "digital_io_conf.h"
  73:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  74:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
  75:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * MACROS
  76:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  77:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #define DIGITAL_IO_XMC_LIB_MAJOR_VERSION 2
  78:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #define DIGITAL_IO_XMC_LIB_MINOR_VERSION 0
  79:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #define DIGITAL_IO_XMC_LIB_PATCH_VERSION 0
  80:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  81:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #if !((XMC_LIB_MAJOR_VERSION > DIGITAL_IO_XMC_LIB_MAJOR_VERSION) ||\
  82:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****       ((XMC_LIB_MAJOR_VERSION == DIGITAL_IO_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION > DIGI
  83:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****       ((XMC_LIB_MAJOR_VERSION == DIGITAL_IO_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION == DIG
  84:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #error "DIGITAL_IO requires XMC Peripheral Library v2.0.0 or higher"
  85:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #endif
  86:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  87:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  /*************************************************************************************************
  88:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * ENUMS
  89:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  90:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  91:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
  92:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_enumerations
  93:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
  94:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
  95:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  96:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
  97:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Initialization status of DIGITAL_IO APP.
  98:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
  99:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** typedef enum DIGITAL_IO_STATUS
 100:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 101:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   DIGITAL_IO_STATUS_OK = 0U,/**< 0=Status OK */
 102:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   DIGITAL_IO_STATUS_FAILURE = 1U/**< 1=Status Failed */
 103:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** } DIGITAL_IO_STATUS_t;
 104:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 105:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 106:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @}
 107:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 108:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 109:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
 110:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DATA STRUCTURES
 111:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
 112:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 113:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_datastructures
 114:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
 115:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 116:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 117:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 118:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Initialization data structure of DIGITAL_IO APP
 119:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 120:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** typedef struct DIGITAL_IO
 121:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 122:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_PORT_t *const gpio_port;             /**< port number */
 123:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   const XMC_GPIO_CONFIG_t gpio_config;          /**< mode, initial output level and pad driver stre
 124:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   const uint8_t gpio_pin;                       /**< pin number */
 125:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   const XMC_GPIO_HWCTRL_t hwctrl;               /**< Hardware port control */
 126:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** } DIGITAL_IO_t;
 127:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 128:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 129:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 130:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @}
 131:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 132:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 133:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 134:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
 135:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * API Prototypes
 136:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
 137:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 138:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 139:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #ifdef __cplusplus
 140:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** extern "C" {
 141:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #endif
 142:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 143:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 144:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_apidoc
 145:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
 146:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 147:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 148:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 149:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 150:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 151:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Get DIGITAL_IO APP version
 152:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return DAVE_APP_VERSION_t APP version information (major, minor and patch number)
 153:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 154:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description: </b><br>
 155:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * The function can be used to check application software compatibility with a
 156:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * specific version of the APP.
 157:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 158:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 159:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 160:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 161:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include "DAVE.h"
 162:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 163:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 164:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 165:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t init_status;
 166:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_APP_VERSION_t version;
 167:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 168:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   // Initialize DIGITAL_IO APP:
 169:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   // DIGITAL_IO_Init() is called from within DAVE_Init().
 170:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   init_status = DAVE_Init();
 171:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(init_status == DAVE_STATUS_SUCCESS)
 172:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 173:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     version = DIGITAL_IO_GetAppVersion();
 174:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     if (version.major != 4U) {
 175:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // Probably, not the right version.
 176:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 177:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 178:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 179:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // More code here
 180:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1) {
 181:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 182:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 183:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     return (1);
 184:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  }
 185:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @endcode<BR>
 186:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 187:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 188:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** DAVE_APP_VERSION_t DIGITAL_IO_GetAppVersion(void);
 189:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 190:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 191:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 192:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to initialize the port pin as per UI settings.
 193:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 194:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return DIGITAL_IO_STATUS_t DIGITAL_IO APP status. Refer @ref DIGITAL_IO_STATUS_t structure for d
 195:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 196:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 197:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function initializes GPIO port registers IOCR,PDISC,OMR,PDR/PHCR to configure pin direction,
 198:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * and pad driver strength/hysteresis.
 199:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 200:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 201:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * None
 202:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 203:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 204:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 205:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include "DAVE.h" //Declarations from DAVE Code Generation (includes SFR declaration)
 206:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 207:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 208:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 209:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 210:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 211:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 212:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 213:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 214:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 215:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 216:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 217:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 218:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1U)
 219:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 220:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 221:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 222:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 223:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 224:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 225:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 226:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return 1U;
 227:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  }
 228:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 229:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 230:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 231:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** DIGITAL_IO_STATUS_t DIGITAL_IO_Init(const DIGITAL_IO_t *const handler);
 232:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 233:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 234:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 235:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to set port pin high.
 236:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 237:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return None
 238:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 239:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 240:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to make port pin to high level
 241:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 242:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 243:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  DIGITAL_IO_SetOutputLow()
 244:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 245:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 246:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 247:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include "DAVE.h" //Declarations from DAVE Code Generation (includes SFR declaration)
 248:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 249:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 250:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 251:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 252:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 253:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 254:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 255:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 256:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 257:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 258:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 259:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 260:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1U)
 261:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 262:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 263:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 264:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 265:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DIGITAL_IO_SetOutputHigh(&DIGITAL_IO_0);
 266:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 267:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 268:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // Add application code here
 269:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 270:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 271:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 272:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 273:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 274:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 275:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 276:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_SetOutputHigh(const DIGITAL_IO_t *const handler)
 277:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 106              	 .loc 2 277 0
 107              	 .cfi_startproc
 108 0000 80B5     	 push {r7,lr}
 109              	.LCFI6:
 110              	 .cfi_def_cfa_offset 8
 111              	 .cfi_offset 7,-8
 112              	 .cfi_offset 14,-4
 113 0002 82B0     	 sub sp,sp,#8
 114              	.LCFI7:
 115              	 .cfi_def_cfa_offset 16
 116 0004 00AF     	 add r7,sp,#0
 117              	.LCFI8:
 118              	 .cfi_def_cfa_register 7
 119 0006 7860     	 str r0,[r7,#4]
 278:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_SetOutputHigh: handler null pointer", handler != NULL);
 279:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_SetOutputHigh(handler->gpio_port, handler->gpio_pin);
 120              	 .loc 2 279 0
 121 0008 7B68     	 ldr r3,[r7,#4]
 122 000a 1A68     	 ldr r2,[r3]
 123 000c 7B68     	 ldr r3,[r7,#4]
 124 000e 1B7B     	 ldrb r3,[r3,#12]
 125 0010 101C     	 mov r0,r2
 126 0012 191C     	 mov r1,r3
 127 0014 FFF7FEFF 	 bl XMC_GPIO_SetOutputHigh
 280:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 128              	 .loc 2 280 0
 129 0018 BD46     	 mov sp,r7
 130 001a 02B0     	 add sp,sp,#8
 131              	 
 132 001c 80BD     	 pop {r7,pc}
 133              	 .cfi_endproc
 134              	.LFE195:
 136 001e C046     	 .section .text.DIGITAL_IO_SetOutputLow,"ax",%progbits
 137              	 .align 2
 138              	 .code 16
 139              	 .thumb_func
 141              	DIGITAL_IO_SetOutputLow:
 142              	.LFB196:
 281:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 282:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 283:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to reset port pin.
 284:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 285:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return None
 286:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 287:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 288:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to make port pin to low level.
 289:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 290:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 291:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * DIGITAL_IO_SetOutputHigh()
 292:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 293:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 294:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 295:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  #include "DAVE.h" //Declarations from DAVE Code Generation (includes SFR declaration)
 296:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 297:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  int main(void)
 298:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  {
 299:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    DAVE_STATUS_t status;
 300:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_I
 301:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    if(status == DAVE_STATUS_SUCCESS)
 302:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 303:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG("DAVE Apps initialization success\n");
 304:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 305:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    else
 306:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 307:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 308:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *      while(1U)
 309:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *      {
 310:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *      }
 311:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 312:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    //Placeholder for user application code. The while loop below can be replaced with user applic
 313:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    DIGITAL_IO_SetOutputLow(&DIGITAL_IO_0);
 314:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    while(1U)
 315:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 316:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *      // Add application code here
 317:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 318:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 319:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 320:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 321:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 322:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 323:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 324:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_SetOutputLow(const DIGITAL_IO_t *const handler)
 325:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 143              	 .loc 2 325 0
 144              	 .cfi_startproc
 145 0000 80B5     	 push {r7,lr}
 146              	.LCFI9:
 147              	 .cfi_def_cfa_offset 8
 148              	 .cfi_offset 7,-8
 149              	 .cfi_offset 14,-4
 150 0002 82B0     	 sub sp,sp,#8
 151              	.LCFI10:
 152              	 .cfi_def_cfa_offset 16
 153 0004 00AF     	 add r7,sp,#0
 154              	.LCFI11:
 155              	 .cfi_def_cfa_register 7
 156 0006 7860     	 str r0,[r7,#4]
 326:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_SetOutputLow: handler null pointer", handler != NULL);
 327:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_SetOutputLow(handler->gpio_port,handler->gpio_pin);
 157              	 .loc 2 327 0
 158 0008 7B68     	 ldr r3,[r7,#4]
 159 000a 1A68     	 ldr r2,[r3]
 160 000c 7B68     	 ldr r3,[r7,#4]
 161 000e 1B7B     	 ldrb r3,[r3,#12]
 162 0010 101C     	 mov r0,r2
 163 0012 191C     	 mov r1,r3
 164 0014 FFF7FEFF 	 bl XMC_GPIO_SetOutputLow
 328:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 165              	 .loc 2 328 0
 166 0018 BD46     	 mov sp,r7
 167 001a 02B0     	 add sp,sp,#8
 168              	 
 169 001c 80BD     	 pop {r7,pc}
 170              	 .cfi_endproc
 171              	.LFE196:
 173              	 .global R_Turn
 174 001e C046     	 .section .bss.R_Turn,"aw",%nobits
 175              	 .align 2
 178              	R_Turn:
 179 0000 00000000 	 .space 4
 180              	 .global Speed_ratio
 181              	 .section .bss.Speed_ratio,"aw",%nobits
 182              	 .align 2
 185              	Speed_ratio:
 186 0000 00000000 	 .space 4
 187              	 .global speed_fl
 188              	 .section .bss.speed_fl,"aw",%nobits
 189              	 .align 2
 192              	speed_fl:
 193 0000 00000000 	 .space 4
 194              	 .global speed_fr
 195              	 .section .bss.speed_fr,"aw",%nobits
 196              	 .align 2
 199              	speed_fr:
 200 0000 00000000 	 .space 4
 201              	 .global speed_rl
 202              	 .section .bss.speed_rl,"aw",%nobits
 203              	 .align 2
 206              	speed_rl:
 207 0000 00000000 	 .space 4
 208              	 .global speed_rr
 209              	 .section .bss.speed_rr,"aw",%nobits
 210              	 .align 2
 213              	speed_rr:
 214 0000 00000000 	 .space 4
 215              	 .global angle_fl
 216              	 .section .bss.angle_fl,"aw",%nobits
 217              	 .align 2
 220              	angle_fl:
 221 0000 00000000 	 .space 4
 222              	 .global angle_fr
 223              	 .section .bss.angle_fr,"aw",%nobits
 224              	 .align 2
 227              	angle_fr:
 228 0000 00000000 	 .space 4
 229              	 .global angle_rl
 230              	 .section .bss.angle_rl,"aw",%nobits
 231              	 .align 2
 234              	angle_rl:
 235 0000 00000000 	 .space 4
 236              	 .global angle_rr
 237              	 .section .bss.angle_rr,"aw",%nobits
 238              	 .align 2
 241              	angle_rr:
 242 0000 00000000 	 .space 4
 243              	 .global trajctory_x
 244              	 .section .bss.trajctory_x,"aw",%nobits
 245              	 .align 2
 248              	trajctory_x:
 249 0000 00000000 	 .space 4
 250              	 .global trajctory_y
 251              	 .section .bss.trajctory_y,"aw",%nobits
 252              	 .align 2
 255              	trajctory_y:
 256 0000 00000000 	 .space 4
 257              	 .global avg_Speeds
 258              	 .section .bss.avg_Speeds,"aw",%nobits
 259              	 .align 2
 262              	avg_Speeds:
 263 0000 00000000 	 .space 4
 264              	 .global NP_setting_cycel_skipper
 265              	 .section .bss.NP_setting_cycel_skipper,"aw",%nobits
 268              	NP_setting_cycel_skipper:
 269 0000 00       	 .space 1
 270              	 .global __aeabi_fcmpgt
 271              	 .global __aeabi_fcmplt
 272              	 .global __aeabi_f2d
 273              	 .global __aeabi_dcmplt
 274              	 .global __aeabi_dcmpgt
 275              	 .global __aeabi_ddiv
 276              	 .global __aeabi_d2f
 277              	 .global __aeabi_dadd
 278              	 .global __aeabi_dmul
 279              	 .global __aeabi_dsub
 280              	 .global __aeabi_fdiv
 281              	 .global __aeabi_fmul
 282              	 .section .text.Steering_Function,"ax",%progbits
 283              	 .align 2
 284              	 .global Steering_Function
 285              	 .code 16
 286              	 .thumb_func
 288              	Steering_Function:
 289              	.LFB224:
 290              	 .file 3 "../Driving_dynamics.c"
   1:../Driving_dynamics.c **** /*
   2:../Driving_dynamics.c ****  * Driving_dynamics.c
   3:../Driving_dynamics.c ****  *
   4:../Driving_dynamics.c ****  *  Created on: 1 Jul 2022
   5:../Driving_dynamics.c ****  *      Author: lukas
   6:../Driving_dynamics.c ****  */
   7:../Driving_dynamics.c **** #include "Driving_dynamics.h"
   8:../Driving_dynamics.c **** 
   9:../Driving_dynamics.c **** 
  10:../Driving_dynamics.c **** 
  11:../Driving_dynamics.c **** #define ROTATION_ANGLE -53.96
  12:../Driving_dynamics.c **** #define ROTATION_ANGLE_OFFSET -20
  13:../Driving_dynamics.c **** #define ROTATION_SPEED  0.4
  14:../Driving_dynamics.c **** 
  15:../Driving_dynamics.c **** float R_Turn = 0;
  16:../Driving_dynamics.c **** float Speed_ratio = 0;
  17:../Driving_dynamics.c **** 
  18:../Driving_dynamics.c **** float speed_fl = 0, speed_fr = 0, speed_rl = 0, speed_rr = 0; // in m/s
  19:../Driving_dynamics.c **** float angle_fl = 0, angle_fr = 0, angle_rl = 0, angle_rr = 0; // in deg  0 straing ahead stering le
  20:../Driving_dynamics.c **** 
  21:../Driving_dynamics.c **** float trajctory_x = 0, trajctory_y = 0;
  22:../Driving_dynamics.c **** float avg_Speeds =0 ;
  23:../Driving_dynamics.c **** 
  24:../Driving_dynamics.c **** uint8_t NP_setting_cycel_skipper = 0;
  25:../Driving_dynamics.c **** 
  26:../Driving_dynamics.c **** 
  27:../Driving_dynamics.c **** void Steering_Function(float Steering_direction_cal, float Driving_speed_cal, uint8_t Steering_mode
 291              	 .loc 3 27 0
 292              	 .cfi_startproc
 293 0000 F0B5     	 push {r4,r5,r6,r7,lr}
 294              	.LCFI12:
 295              	 .cfi_def_cfa_offset 20
 296              	 .cfi_offset 4,-20
 297              	 .cfi_offset 5,-16
 298              	 .cfi_offset 6,-12
 299              	 .cfi_offset 7,-8
 300              	 .cfi_offset 14,-4
 301 0002 87B0     	 sub sp,sp,#28
 302              	.LCFI13:
 303              	 .cfi_def_cfa_offset 48
 304 0004 00AF     	 add r7,sp,#0
 305              	.LCFI14:
 306              	 .cfi_def_cfa_register 7
 307 0006 F860     	 str r0,[r7,#12]
 308 0008 B960     	 str r1,[r7,#8]
 309 000a FB1D     	 add r3,r7,#7
 310 000c 1A70     	 strb r2,[r3]
  28:../Driving_dynamics.c **** 	New_Input = 0;
 311              	 .loc 3 28 0
 312 000e CE4B     	 ldr r3,.L106
 313 0010 0022     	 mov r2,#0
 314 0012 1A70     	 strb r2,[r3]
  29:../Driving_dynamics.c **** 
  30:../Driving_dynamics.c **** 	R_Turn = 0;
 315              	 .loc 3 30 0
 316 0014 CD4B     	 ldr r3,.L106+4
 317 0016 0022     	 mov r2,#0
 318 0018 1A60     	 str r2,[r3]
  31:../Driving_dynamics.c **** 	Speed_ratio = 0;
 319              	 .loc 3 31 0
 320 001a CD4B     	 ldr r3,.L106+8
 321 001c 0022     	 mov r2,#0
 322 001e 1A60     	 str r2,[r3]
  32:../Driving_dynamics.c **** 
  33:../Driving_dynamics.c **** 	if(Driving_speed_cal > MAX_Speed) Driving_speed_cal = MAX_Speed;
 323              	 .loc 3 33 0
 324 0020 B868     	 ldr r0,[r7,#8]
 325 0022 FF21     	 mov r1,#255
 326 0024 8905     	 lsl r1,r1,#22
 327 0026 FFF7FEFF 	 bl __aeabi_fcmpgt
 328 002a 031E     	 sub r3,r0,#0
 329 002c 02D0     	 beq .L6
 330              	 .loc 3 33 0 is_stmt 0 discriminator 1
 331 002e FF23     	 mov r3,#255
 332 0030 9B05     	 lsl r3,r3,#22
 333 0032 BB60     	 str r3,[r7,#8]
 334              	.L6:
  34:../Driving_dynamics.c **** 	if(Driving_speed_cal < -MAX_Speed) Driving_speed_cal = -MAX_Speed;
 335              	 .loc 3 34 0 is_stmt 1
 336 0034 B868     	 ldr r0,[r7,#8]
 337 0036 C749     	 ldr r1,.L106+12
 338 0038 FFF7FEFF 	 bl __aeabi_fcmplt
 339 003c 031E     	 sub r3,r0,#0
 340 003e 01D0     	 beq .L8
 341              	 .loc 3 34 0 is_stmt 0 discriminator 1
 342 0040 C44B     	 ldr r3,.L106+12
 343 0042 BB60     	 str r3,[r7,#8]
 344              	.L8:
  35:../Driving_dynamics.c **** 	if((0 < Driving_speed_cal) & (Driving_speed_cal < MIN_Speed)) Driving_speed_cal = 0;
 345              	 .loc 3 35 0 is_stmt 1
 346 0044 0123     	 mov r3,#1
 347 0046 1C1C     	 add r4,r3,#0
 348 0048 B868     	 ldr r0,[r7,#8]
 349 004a 0021     	 mov r1,#0
 350 004c FFF7FEFF 	 bl __aeabi_fcmpgt
 351 0050 031E     	 sub r3,r0,#0
 352 0052 01D1     	 bne .L10
 353 0054 0023     	 mov r3,#0
 354 0056 1C1C     	 add r4,r3,#0
 355              	.L10:
 356 0058 E4B2     	 uxtb r4,r4
 357 005a B868     	 ldr r0,[r7,#8]
 358 005c FFF7FEFF 	 bl __aeabi_f2d
 359 0060 0A1C     	 mov r2,r1
 360 0062 011C     	 mov r1,r0
 361 0064 0123     	 mov r3,#1
 362 0066 1D1C     	 add r5,r3,#0
 363 0068 081C     	 mov r0,r1
 364 006a 111C     	 mov r1,r2
 365 006c BA4A     	 ldr r2,.L106+16
 366 006e BB4B     	 ldr r3,.L106+20
 367 0070 FFF7FEFF 	 bl __aeabi_dcmplt
 368 0074 031E     	 sub r3,r0,#0
 369 0076 01D1     	 bne .L11
 370 0078 0023     	 mov r3,#0
 371 007a 1D1C     	 add r5,r3,#0
 372              	.L11:
 373 007c EBB2     	 uxtb r3,r5
 374 007e 2340     	 and r3,r4
 375 0080 DBB2     	 uxtb r3,r3
 376 0082 002B     	 cmp r3,#0
 377 0084 01D0     	 beq .L12
 378              	 .loc 3 35 0 is_stmt 0 discriminator 1
 379 0086 0023     	 mov r3,#0
 380 0088 BB60     	 str r3,[r7,#8]
 381              	.L12:
  36:../Driving_dynamics.c **** 	if((0 > Driving_speed_cal) & (Driving_speed_cal > -MIN_Speed)) Driving_speed_cal = 0;
 382              	 .loc 3 36 0 is_stmt 1
 383 008a 0123     	 mov r3,#1
 384 008c 1C1C     	 add r4,r3,#0
 385 008e B868     	 ldr r0,[r7,#8]
 386 0090 0021     	 mov r1,#0
 387 0092 FFF7FEFF 	 bl __aeabi_fcmplt
 388 0096 031E     	 sub r3,r0,#0
 389 0098 01D1     	 bne .L13
 390 009a 0023     	 mov r3,#0
 391 009c 1C1C     	 add r4,r3,#0
 392              	.L13:
 393 009e E4B2     	 uxtb r4,r4
 394 00a0 B868     	 ldr r0,[r7,#8]
 395 00a2 FFF7FEFF 	 bl __aeabi_f2d
 396 00a6 0A1C     	 mov r2,r1
 397 00a8 011C     	 mov r1,r0
 398 00aa 0123     	 mov r3,#1
 399 00ac 1D1C     	 add r5,r3,#0
 400 00ae 081C     	 mov r0,r1
 401 00b0 111C     	 mov r1,r2
 402 00b2 A94A     	 ldr r2,.L106+16
 403 00b4 AA4B     	 ldr r3,.L106+24
 404 00b6 FFF7FEFF 	 bl __aeabi_dcmpgt
 405 00ba 031E     	 sub r3,r0,#0
 406 00bc 01D1     	 bne .L14
 407 00be 0023     	 mov r3,#0
 408 00c0 1D1C     	 add r5,r3,#0
 409              	.L14:
 410 00c2 EBB2     	 uxtb r3,r5
 411 00c4 2340     	 and r3,r4
 412 00c6 DBB2     	 uxtb r3,r3
 413 00c8 002B     	 cmp r3,#0
 414 00ca 01D0     	 beq .L15
 415              	 .loc 3 36 0 is_stmt 0 discriminator 1
 416 00cc 0023     	 mov r3,#0
 417 00ce BB60     	 str r3,[r7,#8]
 418              	.L15:
  37:../Driving_dynamics.c **** 
  38:../Driving_dynamics.c **** 	switch(Steering_mode_cal) // options 'Front'; 'Rear'; '4_Wheel'; 'Carb'; 'Rotate'
 419              	 .loc 3 38 0 is_stmt 1
 420 00d0 FB1D     	 add r3,r7,#7
 421 00d2 1B78     	 ldrb r3,[r3]
 422 00d4 052B     	 cmp r3,#5
 423 00d6 01D9     	 bls .LCB271
 424 00d8 00F07CFE 	 bl .L16
 425              	.LCB271:
 426 00dc 9A00     	 lsl r2,r3,#2
 427 00de A14B     	 ldr r3,.L106+28
 428 00e0 D318     	 add r3,r2,r3
 429 00e2 1B68     	 ldr r3,[r3]
 430 00e4 9F46     	 mov pc,r3
 431              	 .section .rodata.Steering_Function,"a",%progbits
 432              	 .align 2
 433              	.L18:
 434 0000 D40D0000 	 .word .L16
 435 0004 E6000000 	 .word .L17
 436 0008 D6040000 	 .word .L19
 437 000c C4080000 	 .word .L20
 438 0010 F60C0000 	 .word .L21
 439 0014 540D0000 	 .word .L22
 440              	 .section .text.Steering_Function
 441              	.L17:
  39:../Driving_dynamics.c **** 	{
  40:../Driving_dynamics.c **** 		case FRONT://#############################################################
  41:../Driving_dynamics.c **** 			// steering limits
  42:../Driving_dynamics.c **** 			if(Steering_direction_cal > 50) Steering_direction_cal = 50;
 442              	 .loc 3 42 0
 443 00e6 F868     	 ldr r0,[r7,#12]
 444 00e8 9F49     	 ldr r1,.L106+32
 445 00ea FFF7FEFF 	 bl __aeabi_fcmpgt
 446 00ee 031E     	 sub r3,r0,#0
 447 00f0 01D0     	 beq .L23
 448              	 .loc 3 42 0 is_stmt 0 discriminator 1
 449 00f2 9D4B     	 ldr r3,.L106+32
 450 00f4 FB60     	 str r3,[r7,#12]
 451              	.L23:
  43:../Driving_dynamics.c **** 			if(Steering_direction_cal < -50) Steering_direction_cal = -50;
 452              	 .loc 3 43 0 is_stmt 1
 453 00f6 F868     	 ldr r0,[r7,#12]
 454 00f8 9C49     	 ldr r1,.L106+36
 455 00fa FFF7FEFF 	 bl __aeabi_fcmplt
 456 00fe 031E     	 sub r3,r0,#0
 457 0100 01D0     	 beq .L25
 458              	 .loc 3 43 0 is_stmt 0 discriminator 1
 459 0102 9A4B     	 ldr r3,.L106+36
 460 0104 FB60     	 str r3,[r7,#12]
 461              	.L25:
  44:../Driving_dynamics.c **** 
  45:../Driving_dynamics.c **** 			if(within_MAX_MIN(Steering_direction_cal,-5,5) == 0){// if not almost zero
 462              	 .loc 3 45 0 is_stmt 1
 463 0106 FB68     	 ldr r3,[r7,#12]
 464 0108 9949     	 ldr r1,.L106+40
 465 010a 9A4A     	 ldr r2,.L106+44
 466 010c 181C     	 add r0,r3,#0
 467 010e FFF7FEFF 	 bl within_MAX_MIN
 468 0112 031C     	 mov r3,r0
 469 0114 1A1C     	 mov r2,r3
 470 0116 0123     	 mov r3,#1
 471 0118 5340     	 eor r3,r2
 472 011a DBB2     	 uxtb r3,r3
 473 011c 002B     	 cmp r3,#0
 474 011e 00D1     	 bne .LCB314
 475 0120 BFE1     	 b .L27
 476              	.LCB314:
  46:../Driving_dynamics.c **** 				// pre calc
  47:../Driving_dynamics.c **** 				R_Turn = WHEEL_BASE / tan(Steering_direction_cal / RAD_TO_DEG); // to truni graduis converstion
 477              	 .loc 3 47 0
 478 0122 F868     	 ldr r0,[r7,#12]
 479 0124 FFF7FEFF 	 bl __aeabi_f2d
 480 0128 031C     	 mov r3,r0
 481 012a 0C1C     	 mov r4,r1
 482 012c 181C     	 mov r0,r3
 483 012e 211C     	 mov r1,r4
 484 0130 914A     	 ldr r2,.L106+48
 485 0132 924B     	 ldr r3,.L106+52
 486 0134 FFF7FEFF 	 bl __aeabi_ddiv
 487 0138 031C     	 mov r3,r0
 488 013a 0C1C     	 mov r4,r1
 489 013c 181C     	 mov r0,r3
 490 013e 211C     	 mov r1,r4
 491 0140 FFF7FEFF 	 bl tan
 492 0144 031C     	 mov r3,r0
 493 0146 0C1C     	 mov r4,r1
 494 0148 8D48     	 ldr r0,.L106+56
 495 014a 8E49     	 ldr r1,.L106+60
 496 014c 1A1C     	 mov r2,r3
 497 014e 231C     	 mov r3,r4
 498 0150 FFF7FEFF 	 bl __aeabi_ddiv
 499 0154 031C     	 mov r3,r0
 500 0156 0C1C     	 mov r4,r1
 501 0158 181C     	 mov r0,r3
 502 015a 211C     	 mov r1,r4
 503 015c FFF7FEFF 	 bl __aeabi_d2f
 504 0160 021C     	 add r2,r0,#0
 505 0162 7A4B     	 ldr r3,.L106+4
 506 0164 1A60     	 str r2,[r3]
  48:../Driving_dynamics.c **** 				Speed_ratio = (2 * (copysign(R_Turn,1) + HALF_TRACK_WIDTH) * M_PI) / (2 * copysign(R_Turn,1) * 
 507              	 .loc 3 48 0
 508 0166 794B     	 ldr r3,.L106+4
 509 0168 1B68     	 ldr r3,[r3]
 510 016a 5B00     	 lsl r3,r3,#1
 511 016c 5B08     	 lsr r3,r3,#1
 512 016e 181C     	 add r0,r3,#0
 513 0170 FFF7FEFF 	 bl __aeabi_f2d
 514 0174 031C     	 mov r3,r0
 515 0176 0C1C     	 mov r4,r1
 516 0178 181C     	 mov r0,r3
 517 017a 211C     	 mov r1,r4
 518 017c 824A     	 ldr r2,.L106+64
 519 017e 834B     	 ldr r3,.L106+68
 520 0180 FFF7FEFF 	 bl __aeabi_dadd
 521 0184 031C     	 mov r3,r0
 522 0186 0C1C     	 mov r4,r1
 523 0188 181C     	 mov r0,r3
 524 018a 211C     	 mov r1,r4
 525 018c 1A1C     	 mov r2,r3
 526 018e 231C     	 mov r3,r4
 527 0190 FFF7FEFF 	 bl __aeabi_dadd
 528 0194 031C     	 mov r3,r0
 529 0196 0C1C     	 mov r4,r1
 530 0198 181C     	 mov r0,r3
 531 019a 211C     	 mov r1,r4
 532 019c 7C4A     	 ldr r2,.L106+72
 533 019e 7D4B     	 ldr r3,.L106+76
 534 01a0 FFF7FEFF 	 bl __aeabi_dmul
 535 01a4 031C     	 mov r3,r0
 536 01a6 0C1C     	 mov r4,r1
 537 01a8 1D1C     	 mov r5,r3
 538 01aa 261C     	 mov r6,r4
 539 01ac 674B     	 ldr r3,.L106+4
 540 01ae 1B68     	 ldr r3,[r3]
 541 01b0 5B00     	 lsl r3,r3,#1
 542 01b2 5B08     	 lsr r3,r3,#1
 543 01b4 181C     	 add r0,r3,#0
 544 01b6 FFF7FEFF 	 bl __aeabi_f2d
 545 01ba 031C     	 mov r3,r0
 546 01bc 0C1C     	 mov r4,r1
 547 01be 181C     	 mov r0,r3
 548 01c0 211C     	 mov r1,r4
 549 01c2 1A1C     	 mov r2,r3
 550 01c4 231C     	 mov r3,r4
 551 01c6 FFF7FEFF 	 bl __aeabi_dadd
 552 01ca 031C     	 mov r3,r0
 553 01cc 0C1C     	 mov r4,r1
 554 01ce 181C     	 mov r0,r3
 555 01d0 211C     	 mov r1,r4
 556 01d2 6F4A     	 ldr r2,.L106+72
 557 01d4 6F4B     	 ldr r3,.L106+76
 558 01d6 FFF7FEFF 	 bl __aeabi_dmul
 559 01da 031C     	 mov r3,r0
 560 01dc 0C1C     	 mov r4,r1
 561 01de 281C     	 mov r0,r5
 562 01e0 311C     	 mov r1,r6
 563 01e2 1A1C     	 mov r2,r3
 564 01e4 231C     	 mov r3,r4
 565 01e6 FFF7FEFF 	 bl __aeabi_ddiv
 566 01ea 031C     	 mov r3,r0
 567 01ec 0C1C     	 mov r4,r1
 568 01ee 181C     	 mov r0,r3
 569 01f0 211C     	 mov r1,r4
 570 01f2 FFF7FEFF 	 bl __aeabi_d2f
 571 01f6 021C     	 add r2,r0,#0
 572 01f8 554B     	 ldr r3,.L106+8
 573 01fa 1A60     	 str r2,[r3]
  49:../Driving_dynamics.c **** 
  50:../Driving_dynamics.c **** 				if((R_TRUN_MIN < R_Turn) && (R_Turn < R_TRUN_MAX)){
 574              	 .loc 3 50 0
 575 01fc 534B     	 ldr r3,.L106+4
 576 01fe 1B68     	 ldr r3,[r3]
 577 0200 181C     	 add r0,r3,#0
 578 0202 FFF7FEFF 	 bl __aeabi_f2d
 579 0206 031C     	 mov r3,r0
 580 0208 0C1C     	 mov r4,r1
 581 020a 181C     	 mov r0,r3
 582 020c 211C     	 mov r1,r4
 583 020e 524A     	 ldr r2,.L106+16
 584 0210 524B     	 ldr r3,.L106+20
 585 0212 FFF7FEFF 	 bl __aeabi_dcmpgt
 586 0216 031E     	 sub r3,r0,#0
 587 0218 00D1     	 bne .LCB423
 588 021a 7CE0     	 b .L28
 589              	.LCB423:
 590              	 .loc 3 50 0 is_stmt 0 discriminator 1
 591 021c 4B4B     	 ldr r3,.L106+4
 592 021e 1B68     	 ldr r3,[r3]
 593 0220 181C     	 add r0,r3,#0
 594 0222 5D49     	 ldr r1,.L106+80
 595 0224 FFF7FEFF 	 bl __aeabi_fcmplt
 596 0228 031E     	 sub r3,r0,#0
 597 022a 74D0     	 beq .L28
  51:../Driving_dynamics.c **** 					angle_fl = RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn - HALF_TRACK_WIDTH)); // out wheel
 598              	 .loc 3 51 0 is_stmt 1
 599 022c 474B     	 ldr r3,.L106+4
 600 022e 1B68     	 ldr r3,[r3]
 601 0230 181C     	 add r0,r3,#0
 602 0232 FFF7FEFF 	 bl __aeabi_f2d
 603 0236 031C     	 mov r3,r0
 604 0238 0C1C     	 mov r4,r1
 605 023a 181C     	 mov r0,r3
 606 023c 211C     	 mov r1,r4
 607 023e 524A     	 ldr r2,.L106+64
 608 0240 524B     	 ldr r3,.L106+68
 609 0242 FFF7FEFF 	 bl __aeabi_dsub
 610 0246 031C     	 mov r3,r0
 611 0248 0C1C     	 mov r4,r1
 612 024a 4D48     	 ldr r0,.L106+56
 613 024c 4D49     	 ldr r1,.L106+60
 614 024e 1A1C     	 mov r2,r3
 615 0250 231C     	 mov r3,r4
 616 0252 FFF7FEFF 	 bl __aeabi_ddiv
 617 0256 031C     	 mov r3,r0
 618 0258 0C1C     	 mov r4,r1
 619 025a 181C     	 mov r0,r3
 620 025c 211C     	 mov r1,r4
 621 025e FFF7FEFF 	 bl atan
 622 0262 031C     	 mov r3,r0
 623 0264 0C1C     	 mov r4,r1
 624 0266 181C     	 mov r0,r3
 625 0268 211C     	 mov r1,r4
 626 026a 434A     	 ldr r2,.L106+48
 627 026c 434B     	 ldr r3,.L106+52
 628 026e FFF7FEFF 	 bl __aeabi_dmul
 629 0272 031C     	 mov r3,r0
 630 0274 0C1C     	 mov r4,r1
 631 0276 181C     	 mov r0,r3
 632 0278 211C     	 mov r1,r4
 633 027a FFF7FEFF 	 bl __aeabi_d2f
 634 027e 021C     	 add r2,r0,#0
 635 0280 464B     	 ldr r3,.L106+84
 636 0282 1A60     	 str r2,[r3]
  52:../Driving_dynamics.c **** 					angle_fr = RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn + HALF_TRACK_WIDTH)); // in wheel
 637              	 .loc 3 52 0
 638 0284 314B     	 ldr r3,.L106+4
 639 0286 1B68     	 ldr r3,[r3]
 640 0288 181C     	 add r0,r3,#0
 641 028a FFF7FEFF 	 bl __aeabi_f2d
 642 028e 031C     	 mov r3,r0
 643 0290 0C1C     	 mov r4,r1
 644 0292 181C     	 mov r0,r3
 645 0294 211C     	 mov r1,r4
 646 0296 3C4A     	 ldr r2,.L106+64
 647 0298 3C4B     	 ldr r3,.L106+68
 648 029a FFF7FEFF 	 bl __aeabi_dadd
 649 029e 031C     	 mov r3,r0
 650 02a0 0C1C     	 mov r4,r1
 651 02a2 3748     	 ldr r0,.L106+56
 652 02a4 3749     	 ldr r1,.L106+60
 653 02a6 1A1C     	 mov r2,r3
 654 02a8 231C     	 mov r3,r4
 655 02aa FFF7FEFF 	 bl __aeabi_ddiv
 656 02ae 031C     	 mov r3,r0
 657 02b0 0C1C     	 mov r4,r1
 658 02b2 181C     	 mov r0,r3
 659 02b4 211C     	 mov r1,r4
 660 02b6 FFF7FEFF 	 bl atan
 661 02ba 031C     	 mov r3,r0
 662 02bc 0C1C     	 mov r4,r1
 663 02be 181C     	 mov r0,r3
 664 02c0 211C     	 mov r1,r4
 665 02c2 2D4A     	 ldr r2,.L106+48
 666 02c4 2D4B     	 ldr r3,.L106+52
 667 02c6 FFF7FEFF 	 bl __aeabi_dmul
 668 02ca 031C     	 mov r3,r0
 669 02cc 0C1C     	 mov r4,r1
 670 02ce 181C     	 mov r0,r3
 671 02d0 211C     	 mov r1,r4
 672 02d2 FFF7FEFF 	 bl __aeabi_d2f
 673 02d6 021C     	 add r2,r0,#0
 674 02d8 314B     	 ldr r3,.L106+88
 675 02da 1A60     	 str r2,[r3]
  53:../Driving_dynamics.c **** 
  54:../Driving_dynamics.c **** 					speed_fl = Driving_speed_cal / Speed_ratio;
 676              	 .loc 3 54 0
 677 02dc 1C4B     	 ldr r3,.L106+8
 678 02de 1B68     	 ldr r3,[r3]
 679 02e0 B868     	 ldr r0,[r7,#8]
 680 02e2 191C     	 add r1,r3,#0
 681 02e4 FFF7FEFF 	 bl __aeabi_fdiv
 682 02e8 031C     	 add r3,r0,#0
 683 02ea 1A1C     	 add r2,r3,#0
 684 02ec 2D4B     	 ldr r3,.L106+92
 685 02ee 1A60     	 str r2,[r3]
  55:../Driving_dynamics.c **** 					speed_fr = Driving_speed_cal * Speed_ratio;
 686              	 .loc 3 55 0
 687 02f0 174B     	 ldr r3,.L106+8
 688 02f2 1B68     	 ldr r3,[r3]
 689 02f4 181C     	 add r0,r3,#0
 690 02f6 B968     	 ldr r1,[r7,#8]
 691 02f8 FFF7FEFF 	 bl __aeabi_fmul
 692 02fc 031C     	 add r3,r0,#0
 693 02fe 1A1C     	 add r2,r3,#0
 694 0300 294B     	 ldr r3,.L106+96
 695 0302 1A60     	 str r2,[r3]
  56:../Driving_dynamics.c **** 
  57:../Driving_dynamics.c **** 
  58:../Driving_dynamics.c **** 					speed_rl = speed_fl;
 696              	 .loc 3 58 0
 697 0304 274B     	 ldr r3,.L106+92
 698 0306 1A68     	 ldr r2,[r3]
 699 0308 284B     	 ldr r3,.L106+100
 700 030a 1A60     	 str r2,[r3]
  59:../Driving_dynamics.c **** 					speed_rr = speed_fr;
 701              	 .loc 3 59 0
 702 030c 264B     	 ldr r3,.L106+96
 703 030e 1A68     	 ldr r2,[r3]
 704 0310 274B     	 ldr r3,.L106+104
 705 0312 1A60     	 str r2,[r3]
 706 0314 D7E0     	 b .L34
 707              	.L28:
  60:../Driving_dynamics.c **** 				}
  61:../Driving_dynamics.c **** 				else if((- R_TRUN_MIN > R_Turn) && (R_Turn > -R_TRUN_MAX)){
 708              	 .loc 3 61 0
 709 0316 0D4B     	 ldr r3,.L106+4
 710 0318 1B68     	 ldr r3,[r3]
 711 031a 181C     	 add r0,r3,#0
 712 031c FFF7FEFF 	 bl __aeabi_f2d
 713 0320 031C     	 mov r3,r0
 714 0322 0C1C     	 mov r4,r1
 715 0324 181C     	 mov r0,r3
 716 0326 211C     	 mov r1,r4
 717 0328 0B4A     	 ldr r2,.L106+16
 718 032a 0D4B     	 ldr r3,.L106+24
 719 032c FFF7FEFF 	 bl __aeabi_dcmplt
 720 0330 031E     	 sub r3,r0,#0
 721 0332 00D1     	 bne .L83
 722 0334 C7E0     	 b .L34
 723              	.L83:
 724              	 .loc 3 61 0 is_stmt 0 discriminator 1
 725 0336 054B     	 ldr r3,.L106+4
 726 0338 1B68     	 ldr r3,[r3]
 727 033a 181C     	 add r0,r3,#0
 728 033c 1D49     	 ldr r1,.L106+108
 729 033e FFF7FEFF 	 bl __aeabi_fcmpgt
 730 0342 031E     	 sub r3,r0,#0
 731 0344 38D1     	 bne .L84
 732 0346 BEE0     	 b .L34
 733              	.L107:
 734              	 .align 2
 735              	.L106:
 736 0348 00000000 	 .word New_Input
 737 034c 00000000 	 .word R_Turn
 738 0350 00000000 	 .word Speed_ratio
 739 0354 0000C0BF 	 .word -1077936128
 740 0358 9A999999 	 .word -1717986918
 741 035c 9999A93F 	 .word 1068079513
 742 0360 9999A9BF 	 .word -1079404135
 743 0364 00000000 	 .word .L18
 744 0368 00004842 	 .word 1112014848
 745 036c 000048C2 	 .word -1035468800
 746 0370 0000A0C0 	 .word -1063256064
 747 0374 0000A040 	 .word 1084227584
 748 0378 C7F48425 	 .word 629470407
 749 037c 1EA64C40 	 .word 1078765086
 750 0380 79E92631 	 .word 824633721
 751 0384 08ACDC3F 	 .word 1071426568
 752 0388 77BE9F1A 	 .word 446676599
 753 038c 2FDDC43F 	 .word 1069866287
 754 0390 182D4454 	 .word 1413754136
 755 0394 FB210940 	 .word 1074340347
 756 0398 0000A041 	 .word 1101004800
 757 039c 00000000 	 .word angle_fl
 758 03a0 00000000 	 .word angle_fr
 759 03a4 00000000 	 .word speed_fl
 760 03a8 00000000 	 .word speed_fr
 761 03ac 00000000 	 .word speed_rl
 762 03b0 00000000 	 .word speed_rr
 763 03b4 0000A0C1 	 .word -1046478848
 764              	.L84:
  62:../Driving_dynamics.c **** 					angle_fl = RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn - HALF_TRACK_WIDTH)); // in wheel
 765              	 .loc 3 62 0 is_stmt 1
 766 03b8 DF4B     	 ldr r3,.L108
 767 03ba 1B68     	 ldr r3,[r3]
 768 03bc 181C     	 add r0,r3,#0
 769 03be FFF7FEFF 	 bl __aeabi_f2d
 770 03c2 031C     	 mov r3,r0
 771 03c4 0C1C     	 mov r4,r1
 772 03c6 181C     	 mov r0,r3
 773 03c8 211C     	 mov r1,r4
 774 03ca DC4A     	 ldr r2,.L108+4
 775 03cc DC4B     	 ldr r3,.L108+8
 776 03ce FFF7FEFF 	 bl __aeabi_dsub
 777 03d2 031C     	 mov r3,r0
 778 03d4 0C1C     	 mov r4,r1
 779 03d6 DB48     	 ldr r0,.L108+12
 780 03d8 DB49     	 ldr r1,.L108+16
 781 03da 1A1C     	 mov r2,r3
 782 03dc 231C     	 mov r3,r4
 783 03de FFF7FEFF 	 bl __aeabi_ddiv
 784 03e2 031C     	 mov r3,r0
 785 03e4 0C1C     	 mov r4,r1
 786 03e6 181C     	 mov r0,r3
 787 03e8 211C     	 mov r1,r4
 788 03ea FFF7FEFF 	 bl atan
 789 03ee 031C     	 mov r3,r0
 790 03f0 0C1C     	 mov r4,r1
 791 03f2 181C     	 mov r0,r3
 792 03f4 211C     	 mov r1,r4
 793 03f6 D54A     	 ldr r2,.L108+20
 794 03f8 D54B     	 ldr r3,.L108+24
 795 03fa FFF7FEFF 	 bl __aeabi_dmul
 796 03fe 031C     	 mov r3,r0
 797 0400 0C1C     	 mov r4,r1
 798 0402 181C     	 mov r0,r3
 799 0404 211C     	 mov r1,r4
 800 0406 FFF7FEFF 	 bl __aeabi_d2f
 801 040a 021C     	 add r2,r0,#0
 802 040c D14B     	 ldr r3,.L108+28
 803 040e 1A60     	 str r2,[r3]
  63:../Driving_dynamics.c **** 					angle_fr = RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn  + HALF_TRACK_WIDTH)); // out wheel
 804              	 .loc 3 63 0
 805 0410 C94B     	 ldr r3,.L108
 806 0412 1B68     	 ldr r3,[r3]
 807 0414 181C     	 add r0,r3,#0
 808 0416 FFF7FEFF 	 bl __aeabi_f2d
 809 041a 031C     	 mov r3,r0
 810 041c 0C1C     	 mov r4,r1
 811 041e 181C     	 mov r0,r3
 812 0420 211C     	 mov r1,r4
 813 0422 C64A     	 ldr r2,.L108+4
 814 0424 C64B     	 ldr r3,.L108+8
 815 0426 FFF7FEFF 	 bl __aeabi_dadd
 816 042a 031C     	 mov r3,r0
 817 042c 0C1C     	 mov r4,r1
 818 042e C548     	 ldr r0,.L108+12
 819 0430 C549     	 ldr r1,.L108+16
 820 0432 1A1C     	 mov r2,r3
 821 0434 231C     	 mov r3,r4
 822 0436 FFF7FEFF 	 bl __aeabi_ddiv
 823 043a 031C     	 mov r3,r0
 824 043c 0C1C     	 mov r4,r1
 825 043e 181C     	 mov r0,r3
 826 0440 211C     	 mov r1,r4
 827 0442 FFF7FEFF 	 bl atan
 828 0446 031C     	 mov r3,r0
 829 0448 0C1C     	 mov r4,r1
 830 044a 181C     	 mov r0,r3
 831 044c 211C     	 mov r1,r4
 832 044e BF4A     	 ldr r2,.L108+20
 833 0450 BF4B     	 ldr r3,.L108+24
 834 0452 FFF7FEFF 	 bl __aeabi_dmul
 835 0456 031C     	 mov r3,r0
 836 0458 0C1C     	 mov r4,r1
 837 045a 181C     	 mov r0,r3
 838 045c 211C     	 mov r1,r4
 839 045e FFF7FEFF 	 bl __aeabi_d2f
 840 0462 021C     	 add r2,r0,#0
 841 0464 BC4B     	 ldr r3,.L108+32
 842 0466 1A60     	 str r2,[r3]
  64:../Driving_dynamics.c **** 
  65:../Driving_dynamics.c **** 					speed_fl = Driving_speed_cal * Speed_ratio;
 843              	 .loc 3 65 0
 844 0468 BC4B     	 ldr r3,.L108+36
 845 046a 1B68     	 ldr r3,[r3]
 846 046c 181C     	 add r0,r3,#0
 847 046e B968     	 ldr r1,[r7,#8]
 848 0470 FFF7FEFF 	 bl __aeabi_fmul
 849 0474 031C     	 add r3,r0,#0
 850 0476 1A1C     	 add r2,r3,#0
 851 0478 B94B     	 ldr r3,.L108+40
 852 047a 1A60     	 str r2,[r3]
  66:../Driving_dynamics.c **** 					speed_fr = Driving_speed_cal / Speed_ratio;
 853              	 .loc 3 66 0
 854 047c B74B     	 ldr r3,.L108+36
 855 047e 1B68     	 ldr r3,[r3]
 856 0480 B868     	 ldr r0,[r7,#8]
 857 0482 191C     	 add r1,r3,#0
 858 0484 FFF7FEFF 	 bl __aeabi_fdiv
 859 0488 031C     	 add r3,r0,#0
 860 048a 1A1C     	 add r2,r3,#0
 861 048c B54B     	 ldr r3,.L108+44
 862 048e 1A60     	 str r2,[r3]
  67:../Driving_dynamics.c **** 
  68:../Driving_dynamics.c **** 
  69:../Driving_dynamics.c **** 					speed_rl = speed_fl;
 863              	 .loc 3 69 0
 864 0490 B34B     	 ldr r3,.L108+40
 865 0492 1A68     	 ldr r2,[r3]
 866 0494 B44B     	 ldr r3,.L108+48
 867 0496 1A60     	 str r2,[r3]
  70:../Driving_dynamics.c **** 					speed_rr = speed_fr;
 868              	 .loc 3 70 0
 869 0498 B24B     	 ldr r3,.L108+44
 870 049a 1A68     	 ldr r2,[r3]
 871 049c B34B     	 ldr r3,.L108+52
 872 049e 1A60     	 str r2,[r3]
 873 04a0 11E0     	 b .L34
 874              	.L27:
  71:../Driving_dynamics.c **** 				}
  72:../Driving_dynamics.c **** 			}
  73:../Driving_dynamics.c **** 			else{
  74:../Driving_dynamics.c **** 				angle_fl = 0;
 875              	 .loc 3 74 0
 876 04a2 AC4B     	 ldr r3,.L108+28
 877 04a4 0022     	 mov r2,#0
 878 04a6 1A60     	 str r2,[r3]
  75:../Driving_dynamics.c **** 				angle_fr = 0;
 879              	 .loc 3 75 0
 880 04a8 AB4B     	 ldr r3,.L108+32
 881 04aa 0022     	 mov r2,#0
 882 04ac 1A60     	 str r2,[r3]
  76:../Driving_dynamics.c **** 
  77:../Driving_dynamics.c **** 				speed_fl = Driving_speed_cal;
 883              	 .loc 3 77 0
 884 04ae AC4B     	 ldr r3,.L108+40
 885 04b0 BA68     	 ldr r2,[r7,#8]
 886 04b2 1A60     	 str r2,[r3]
  78:../Driving_dynamics.c **** 				speed_fr = Driving_speed_cal;
 887              	 .loc 3 78 0
 888 04b4 AB4B     	 ldr r3,.L108+44
 889 04b6 BA68     	 ldr r2,[r7,#8]
 890 04b8 1A60     	 str r2,[r3]
  79:../Driving_dynamics.c **** 				speed_rl = Driving_speed_cal;
 891              	 .loc 3 79 0
 892 04ba AB4B     	 ldr r3,.L108+48
 893 04bc BA68     	 ldr r2,[r7,#8]
 894 04be 1A60     	 str r2,[r3]
  80:../Driving_dynamics.c **** 				speed_rr = Driving_speed_cal;
 895              	 .loc 3 80 0
 896 04c0 AA4B     	 ldr r3,.L108+52
 897 04c2 BA68     	 ldr r2,[r7,#8]
 898 04c4 1A60     	 str r2,[r3]
 899              	.L34:
  81:../Driving_dynamics.c **** 			}
  82:../Driving_dynamics.c **** 
  83:../Driving_dynamics.c **** 			//rear axle
  84:../Driving_dynamics.c **** 			angle_rl = 0;
 900              	 .loc 3 84 0
 901 04c6 AA4B     	 ldr r3,.L108+56
 902 04c8 0022     	 mov r2,#0
 903 04ca 1A60     	 str r2,[r3]
  85:../Driving_dynamics.c **** 			angle_rr = 0;
 904              	 .loc 3 85 0
 905 04cc A94B     	 ldr r3,.L108+60
 906 04ce 0022     	 mov r2,#0
 907 04d0 1A60     	 str r2,[r3]
  86:../Driving_dynamics.c **** 			break;
 908              	 .loc 3 86 0
 909 04d2 00F001FD 	 bl .L35
 910              	.L19:
  87:../Driving_dynamics.c **** 
  88:../Driving_dynamics.c **** 		case BACK:// rear #############################################################
  89:../Driving_dynamics.c **** 			// steering limits
  90:../Driving_dynamics.c **** 			if(Steering_direction_cal > 50) Steering_direction_cal = 50;
 911              	 .loc 3 90 0
 912 04d6 F868     	 ldr r0,[r7,#12]
 913 04d8 A749     	 ldr r1,.L108+64
 914 04da FFF7FEFF 	 bl __aeabi_fcmpgt
 915 04de 031E     	 sub r3,r0,#0
 916 04e0 01D0     	 beq .L36
 917              	 .loc 3 90 0 is_stmt 0 discriminator 1
 918 04e2 A54B     	 ldr r3,.L108+64
 919 04e4 FB60     	 str r3,[r7,#12]
 920              	.L36:
  91:../Driving_dynamics.c **** 			if(Steering_direction_cal < -50) Steering_direction_cal = -50;
 921              	 .loc 3 91 0 is_stmt 1
 922 04e6 F868     	 ldr r0,[r7,#12]
 923 04e8 A449     	 ldr r1,.L108+68
 924 04ea FFF7FEFF 	 bl __aeabi_fcmplt
 925 04ee 031E     	 sub r3,r0,#0
 926 04f0 01D0     	 beq .L38
 927              	 .loc 3 91 0 is_stmt 0 discriminator 1
 928 04f2 A24B     	 ldr r3,.L108+68
 929 04f4 FB60     	 str r3,[r7,#12]
 930              	.L38:
  92:../Driving_dynamics.c **** 
  93:../Driving_dynamics.c **** 			if(within_MAX_MIN(Steering_direction_cal,-5,5) == 0){// if not almost zero
 931              	 .loc 3 93 0 is_stmt 1
 932 04f6 FB68     	 ldr r3,[r7,#12]
 933 04f8 A149     	 ldr r1,.L108+72
 934 04fa A24A     	 ldr r2,.L108+76
 935 04fc 181C     	 add r0,r3,#0
 936 04fe FFF7FEFF 	 bl within_MAX_MIN
 937 0502 031C     	 mov r3,r0
 938 0504 1A1C     	 mov r2,r3
 939 0506 0123     	 mov r3,#1
 940 0508 5340     	 eor r3,r2
 941 050a DBB2     	 uxtb r3,r3
 942 050c 002B     	 cmp r3,#0
 943 050e 00D1     	 bne .LCB768
 944 0510 BFE1     	 b .L40
 945              	.LCB768:
  94:../Driving_dynamics.c **** 				// pre calc
  95:../Driving_dynamics.c **** 				R_Turn = WHEEL_BASE / tan(Steering_direction_cal / RAD_TO_DEG); // to truni graduis converstion
 946              	 .loc 3 95 0
 947 0512 F868     	 ldr r0,[r7,#12]
 948 0514 FFF7FEFF 	 bl __aeabi_f2d
 949 0518 031C     	 mov r3,r0
 950 051a 0C1C     	 mov r4,r1
 951 051c 181C     	 mov r0,r3
 952 051e 211C     	 mov r1,r4
 953 0520 8A4A     	 ldr r2,.L108+20
 954 0522 8B4B     	 ldr r3,.L108+24
 955 0524 FFF7FEFF 	 bl __aeabi_ddiv
 956 0528 031C     	 mov r3,r0
 957 052a 0C1C     	 mov r4,r1
 958 052c 181C     	 mov r0,r3
 959 052e 211C     	 mov r1,r4
 960 0530 FFF7FEFF 	 bl tan
 961 0534 031C     	 mov r3,r0
 962 0536 0C1C     	 mov r4,r1
 963 0538 8248     	 ldr r0,.L108+12
 964 053a 8349     	 ldr r1,.L108+16
 965 053c 1A1C     	 mov r2,r3
 966 053e 231C     	 mov r3,r4
 967 0540 FFF7FEFF 	 bl __aeabi_ddiv
 968 0544 031C     	 mov r3,r0
 969 0546 0C1C     	 mov r4,r1
 970 0548 181C     	 mov r0,r3
 971 054a 211C     	 mov r1,r4
 972 054c FFF7FEFF 	 bl __aeabi_d2f
 973 0550 021C     	 add r2,r0,#0
 974 0552 794B     	 ldr r3,.L108
 975 0554 1A60     	 str r2,[r3]
  96:../Driving_dynamics.c **** 				Speed_ratio = (2 * (copysign(R_Turn,1) + HALF_TRACK_WIDTH) * M_PI) / (2 * copysign(R_Turn,1) * 
 976              	 .loc 3 96 0
 977 0556 784B     	 ldr r3,.L108
 978 0558 1B68     	 ldr r3,[r3]
 979 055a 5B00     	 lsl r3,r3,#1
 980 055c 5B08     	 lsr r3,r3,#1
 981 055e 181C     	 add r0,r3,#0
 982 0560 FFF7FEFF 	 bl __aeabi_f2d
 983 0564 031C     	 mov r3,r0
 984 0566 0C1C     	 mov r4,r1
 985 0568 181C     	 mov r0,r3
 986 056a 211C     	 mov r1,r4
 987 056c 734A     	 ldr r2,.L108+4
 988 056e 744B     	 ldr r3,.L108+8
 989 0570 FFF7FEFF 	 bl __aeabi_dadd
 990 0574 031C     	 mov r3,r0
 991 0576 0C1C     	 mov r4,r1
 992 0578 181C     	 mov r0,r3
 993 057a 211C     	 mov r1,r4
 994 057c 1A1C     	 mov r2,r3
 995 057e 231C     	 mov r3,r4
 996 0580 FFF7FEFF 	 bl __aeabi_dadd
 997 0584 031C     	 mov r3,r0
 998 0586 0C1C     	 mov r4,r1
 999 0588 181C     	 mov r0,r3
 1000 058a 211C     	 mov r1,r4
 1001 058c 7E4A     	 ldr r2,.L108+80
 1002 058e 7F4B     	 ldr r3,.L108+84
 1003 0590 FFF7FEFF 	 bl __aeabi_dmul
 1004 0594 031C     	 mov r3,r0
 1005 0596 0C1C     	 mov r4,r1
 1006 0598 1D1C     	 mov r5,r3
 1007 059a 261C     	 mov r6,r4
 1008 059c 664B     	 ldr r3,.L108
 1009 059e 1B68     	 ldr r3,[r3]
 1010 05a0 5B00     	 lsl r3,r3,#1
 1011 05a2 5B08     	 lsr r3,r3,#1
 1012 05a4 181C     	 add r0,r3,#0
 1013 05a6 FFF7FEFF 	 bl __aeabi_f2d
 1014 05aa 031C     	 mov r3,r0
 1015 05ac 0C1C     	 mov r4,r1
 1016 05ae 181C     	 mov r0,r3
 1017 05b0 211C     	 mov r1,r4
 1018 05b2 1A1C     	 mov r2,r3
 1019 05b4 231C     	 mov r3,r4
 1020 05b6 FFF7FEFF 	 bl __aeabi_dadd
 1021 05ba 031C     	 mov r3,r0
 1022 05bc 0C1C     	 mov r4,r1
 1023 05be 181C     	 mov r0,r3
 1024 05c0 211C     	 mov r1,r4
 1025 05c2 714A     	 ldr r2,.L108+80
 1026 05c4 714B     	 ldr r3,.L108+84
 1027 05c6 FFF7FEFF 	 bl __aeabi_dmul
 1028 05ca 031C     	 mov r3,r0
 1029 05cc 0C1C     	 mov r4,r1
 1030 05ce 281C     	 mov r0,r5
 1031 05d0 311C     	 mov r1,r6
 1032 05d2 1A1C     	 mov r2,r3
 1033 05d4 231C     	 mov r3,r4
 1034 05d6 FFF7FEFF 	 bl __aeabi_ddiv
 1035 05da 031C     	 mov r3,r0
 1036 05dc 0C1C     	 mov r4,r1
 1037 05de 181C     	 mov r0,r3
 1038 05e0 211C     	 mov r1,r4
 1039 05e2 FFF7FEFF 	 bl __aeabi_d2f
 1040 05e6 021C     	 add r2,r0,#0
 1041 05e8 5C4B     	 ldr r3,.L108+36
 1042 05ea 1A60     	 str r2,[r3]
  97:../Driving_dynamics.c **** 
  98:../Driving_dynamics.c **** 				if((R_TRUN_MIN < R_Turn) && (R_Turn < R_TRUN_MAX)){
 1043              	 .loc 3 98 0
 1044 05ec 524B     	 ldr r3,.L108
 1045 05ee 1B68     	 ldr r3,[r3]
 1046 05f0 181C     	 add r0,r3,#0
 1047 05f2 FFF7FEFF 	 bl __aeabi_f2d
 1048 05f6 031C     	 mov r3,r0
 1049 05f8 0C1C     	 mov r4,r1
 1050 05fa 181C     	 mov r0,r3
 1051 05fc 211C     	 mov r1,r4
 1052 05fe 644A     	 ldr r2,.L108+88
 1053 0600 644B     	 ldr r3,.L108+92
 1054 0602 FFF7FEFF 	 bl __aeabi_dcmpgt
 1055 0606 031E     	 sub r3,r0,#0
 1056 0608 00D1     	 bne .LCB877
 1057 060a 7CE0     	 b .L41
 1058              	.LCB877:
 1059              	 .loc 3 98 0 is_stmt 0 discriminator 1
 1060 060c 4A4B     	 ldr r3,.L108
 1061 060e 1B68     	 ldr r3,[r3]
 1062 0610 181C     	 add r0,r3,#0
 1063 0612 6149     	 ldr r1,.L108+96
 1064 0614 FFF7FEFF 	 bl __aeabi_fcmplt
 1065 0618 031E     	 sub r3,r0,#0
 1066 061a 74D0     	 beq .L41
  99:../Driving_dynamics.c **** 					angle_rl = - RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn - HALF_TRACK_WIDTH)); // out wheel
 1067              	 .loc 3 99 0 is_stmt 1
 1068 061c 464B     	 ldr r3,.L108
 1069 061e 1B68     	 ldr r3,[r3]
 1070 0620 181C     	 add r0,r3,#0
 1071 0622 FFF7FEFF 	 bl __aeabi_f2d
 1072 0626 031C     	 mov r3,r0
 1073 0628 0C1C     	 mov r4,r1
 1074 062a 181C     	 mov r0,r3
 1075 062c 211C     	 mov r1,r4
 1076 062e 434A     	 ldr r2,.L108+4
 1077 0630 434B     	 ldr r3,.L108+8
 1078 0632 FFF7FEFF 	 bl __aeabi_dsub
 1079 0636 031C     	 mov r3,r0
 1080 0638 0C1C     	 mov r4,r1
 1081 063a 4248     	 ldr r0,.L108+12
 1082 063c 4249     	 ldr r1,.L108+16
 1083 063e 1A1C     	 mov r2,r3
 1084 0640 231C     	 mov r3,r4
 1085 0642 FFF7FEFF 	 bl __aeabi_ddiv
 1086 0646 031C     	 mov r3,r0
 1087 0648 0C1C     	 mov r4,r1
 1088 064a 181C     	 mov r0,r3
 1089 064c 211C     	 mov r1,r4
 1090 064e FFF7FEFF 	 bl atan
 1091 0652 031C     	 mov r3,r0
 1092 0654 0C1C     	 mov r4,r1
 1093 0656 181C     	 mov r0,r3
 1094 0658 211C     	 mov r1,r4
 1095 065a 3C4A     	 ldr r2,.L108+20
 1096 065c 4F4B     	 ldr r3,.L108+100
 1097 065e FFF7FEFF 	 bl __aeabi_dmul
 1098 0662 031C     	 mov r3,r0
 1099 0664 0C1C     	 mov r4,r1
 1100 0666 181C     	 mov r0,r3
 1101 0668 211C     	 mov r1,r4
 1102 066a FFF7FEFF 	 bl __aeabi_d2f
 1103 066e 021C     	 add r2,r0,#0
 1104 0670 3F4B     	 ldr r3,.L108+56
 1105 0672 1A60     	 str r2,[r3]
 100:../Driving_dynamics.c **** 					angle_rr = - RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn + HALF_TRACK_WIDTH)); // in wheel
 1106              	 .loc 3 100 0
 1107 0674 304B     	 ldr r3,.L108
 1108 0676 1B68     	 ldr r3,[r3]
 1109 0678 181C     	 add r0,r3,#0
 1110 067a FFF7FEFF 	 bl __aeabi_f2d
 1111 067e 031C     	 mov r3,r0
 1112 0680 0C1C     	 mov r4,r1
 1113 0682 181C     	 mov r0,r3
 1114 0684 211C     	 mov r1,r4
 1115 0686 2D4A     	 ldr r2,.L108+4
 1116 0688 2D4B     	 ldr r3,.L108+8
 1117 068a FFF7FEFF 	 bl __aeabi_dadd
 1118 068e 031C     	 mov r3,r0
 1119 0690 0C1C     	 mov r4,r1
 1120 0692 2C48     	 ldr r0,.L108+12
 1121 0694 2C49     	 ldr r1,.L108+16
 1122 0696 1A1C     	 mov r2,r3
 1123 0698 231C     	 mov r3,r4
 1124 069a FFF7FEFF 	 bl __aeabi_ddiv
 1125 069e 031C     	 mov r3,r0
 1126 06a0 0C1C     	 mov r4,r1
 1127 06a2 181C     	 mov r0,r3
 1128 06a4 211C     	 mov r1,r4
 1129 06a6 FFF7FEFF 	 bl atan
 1130 06aa 031C     	 mov r3,r0
 1131 06ac 0C1C     	 mov r4,r1
 1132 06ae 181C     	 mov r0,r3
 1133 06b0 211C     	 mov r1,r4
 1134 06b2 264A     	 ldr r2,.L108+20
 1135 06b4 394B     	 ldr r3,.L108+100
 1136 06b6 FFF7FEFF 	 bl __aeabi_dmul
 1137 06ba 031C     	 mov r3,r0
 1138 06bc 0C1C     	 mov r4,r1
 1139 06be 181C     	 mov r0,r3
 1140 06c0 211C     	 mov r1,r4
 1141 06c2 FFF7FEFF 	 bl __aeabi_d2f
 1142 06c6 021C     	 add r2,r0,#0
 1143 06c8 2A4B     	 ldr r3,.L108+60
 1144 06ca 1A60     	 str r2,[r3]
 101:../Driving_dynamics.c **** 
 102:../Driving_dynamics.c **** 					speed_fl = Driving_speed_cal / Speed_ratio;
 1145              	 .loc 3 102 0
 1146 06cc 234B     	 ldr r3,.L108+36
 1147 06ce 1B68     	 ldr r3,[r3]
 1148 06d0 B868     	 ldr r0,[r7,#8]
 1149 06d2 191C     	 add r1,r3,#0
 1150 06d4 FFF7FEFF 	 bl __aeabi_fdiv
 1151 06d8 031C     	 add r3,r0,#0
 1152 06da 1A1C     	 add r2,r3,#0
 1153 06dc 204B     	 ldr r3,.L108+40
 1154 06de 1A60     	 str r2,[r3]
 103:../Driving_dynamics.c **** 					speed_fr = Driving_speed_cal * Speed_ratio;
 1155              	 .loc 3 103 0
 1156 06e0 1E4B     	 ldr r3,.L108+36
 1157 06e2 1B68     	 ldr r3,[r3]
 1158 06e4 181C     	 add r0,r3,#0
 1159 06e6 B968     	 ldr r1,[r7,#8]
 1160 06e8 FFF7FEFF 	 bl __aeabi_fmul
 1161 06ec 031C     	 add r3,r0,#0
 1162 06ee 1A1C     	 add r2,r3,#0
 1163 06f0 1C4B     	 ldr r3,.L108+44
 1164 06f2 1A60     	 str r2,[r3]
 104:../Driving_dynamics.c **** 
 105:../Driving_dynamics.c **** 					speed_rl = speed_fl;
 1165              	 .loc 3 105 0
 1166 06f4 1A4B     	 ldr r3,.L108+40
 1167 06f6 1A68     	 ldr r2,[r3]
 1168 06f8 1B4B     	 ldr r3,.L108+48
 1169 06fa 1A60     	 str r2,[r3]
 106:../Driving_dynamics.c **** 					speed_rr = speed_fr;
 1170              	 .loc 3 106 0
 1171 06fc 194B     	 ldr r3,.L108+44
 1172 06fe 1A68     	 ldr r2,[r3]
 1173 0700 1A4B     	 ldr r3,.L108+52
 1174 0702 1A60     	 str r2,[r3]
 1175 0704 D7E0     	 b .L47
 1176              	.L41:
 107:../Driving_dynamics.c **** 				}
 108:../Driving_dynamics.c **** 				else if((- R_TRUN_MIN > R_Turn) && (R_Turn > -R_TRUN_MAX)){
 1177              	 .loc 3 108 0
 1178 0706 0C4B     	 ldr r3,.L108
 1179 0708 1B68     	 ldr r3,[r3]
 1180 070a 181C     	 add r0,r3,#0
 1181 070c FFF7FEFF 	 bl __aeabi_f2d
 1182 0710 031C     	 mov r3,r0
 1183 0712 0C1C     	 mov r4,r1
 1184 0714 181C     	 mov r0,r3
 1185 0716 211C     	 mov r1,r4
 1186 0718 1D4A     	 ldr r2,.L108+88
 1187 071a 214B     	 ldr r3,.L108+104
 1188 071c FFF7FEFF 	 bl __aeabi_dcmplt
 1189 0720 031E     	 sub r3,r0,#0
 1190 0722 00D1     	 bne .L89
 1191 0724 C7E0     	 b .L47
 1192              	.L89:
 1193              	 .loc 3 108 0 is_stmt 0 discriminator 1
 1194 0726 044B     	 ldr r3,.L108
 1195 0728 1B68     	 ldr r3,[r3]
 1196 072a 181C     	 add r0,r3,#0
 1197 072c 1D49     	 ldr r1,.L108+108
 1198 072e FFF7FEFF 	 bl __aeabi_fcmpgt
 1199 0732 031E     	 sub r3,r0,#0
 1200 0734 38D1     	 bne .L90
 1201 0736 BEE0     	 b .L47
 1202              	.L109:
 1203              	 .align 2
 1204              	.L108:
 1205 0738 00000000 	 .word R_Turn
 1206 073c 77BE9F1A 	 .word 446676599
 1207 0740 2FDDC43F 	 .word 1069866287
 1208 0744 79E92631 	 .word 824633721
 1209 0748 08ACDC3F 	 .word 1071426568
 1210 074c C7F48425 	 .word 629470407
 1211 0750 1EA64C40 	 .word 1078765086
 1212 0754 00000000 	 .word angle_fl
 1213 0758 00000000 	 .word angle_fr
 1214 075c 00000000 	 .word Speed_ratio
 1215 0760 00000000 	 .word speed_fl
 1216 0764 00000000 	 .word speed_fr
 1217 0768 00000000 	 .word speed_rl
 1218 076c 00000000 	 .word speed_rr
 1219 0770 00000000 	 .word angle_rl
 1220 0774 00000000 	 .word angle_rr
 1221 0778 00004842 	 .word 1112014848
 1222 077c 000048C2 	 .word -1035468800
 1223 0780 0000A0C0 	 .word -1063256064
 1224 0784 0000A040 	 .word 1084227584
 1225 0788 182D4454 	 .word 1413754136
 1226 078c FB210940 	 .word 1074340347
 1227 0790 9A999999 	 .word -1717986918
 1228 0794 9999A93F 	 .word 1068079513
 1229 0798 0000A041 	 .word 1101004800
 1230 079c 1EA64CC0 	 .word -1068718562
 1231 07a0 9999A9BF 	 .word -1079404135
 1232 07a4 0000A0C1 	 .word -1046478848
 1233              	.L90:
 109:../Driving_dynamics.c **** 					angle_rl = - RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn - HALF_TRACK_WIDTH)); // in wheel
 1234              	 .loc 3 109 0 is_stmt 1
 1235 07a8 E64B     	 ldr r3,.L110
 1236 07aa 1B68     	 ldr r3,[r3]
 1237 07ac 181C     	 add r0,r3,#0
 1238 07ae FFF7FEFF 	 bl __aeabi_f2d
 1239 07b2 031C     	 mov r3,r0
 1240 07b4 0C1C     	 mov r4,r1
 1241 07b6 181C     	 mov r0,r3
 1242 07b8 211C     	 mov r1,r4
 1243 07ba E34A     	 ldr r2,.L110+4
 1244 07bc E34B     	 ldr r3,.L110+8
 1245 07be FFF7FEFF 	 bl __aeabi_dsub
 1246 07c2 031C     	 mov r3,r0
 1247 07c4 0C1C     	 mov r4,r1
 1248 07c6 E248     	 ldr r0,.L110+12
 1249 07c8 E249     	 ldr r1,.L110+16
 1250 07ca 1A1C     	 mov r2,r3
 1251 07cc 231C     	 mov r3,r4
 1252 07ce FFF7FEFF 	 bl __aeabi_ddiv
 1253 07d2 031C     	 mov r3,r0
 1254 07d4 0C1C     	 mov r4,r1
 1255 07d6 181C     	 mov r0,r3
 1256 07d8 211C     	 mov r1,r4
 1257 07da FFF7FEFF 	 bl atan
 1258 07de 031C     	 mov r3,r0
 1259 07e0 0C1C     	 mov r4,r1
 1260 07e2 181C     	 mov r0,r3
 1261 07e4 211C     	 mov r1,r4
 1262 07e6 DC4A     	 ldr r2,.L110+20
 1263 07e8 DC4B     	 ldr r3,.L110+24
 1264 07ea FFF7FEFF 	 bl __aeabi_dmul
 1265 07ee 031C     	 mov r3,r0
 1266 07f0 0C1C     	 mov r4,r1
 1267 07f2 181C     	 mov r0,r3
 1268 07f4 211C     	 mov r1,r4
 1269 07f6 FFF7FEFF 	 bl __aeabi_d2f
 1270 07fa 021C     	 add r2,r0,#0
 1271 07fc D84B     	 ldr r3,.L110+28
 1272 07fe 1A60     	 str r2,[r3]
 110:../Driving_dynamics.c **** 					angle_rr = - RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn + HALF_TRACK_WIDTH)); // out wheel
 1273              	 .loc 3 110 0
 1274 0800 D04B     	 ldr r3,.L110
 1275 0802 1B68     	 ldr r3,[r3]
 1276 0804 181C     	 add r0,r3,#0
 1277 0806 FFF7FEFF 	 bl __aeabi_f2d
 1278 080a 031C     	 mov r3,r0
 1279 080c 0C1C     	 mov r4,r1
 1280 080e 181C     	 mov r0,r3
 1281 0810 211C     	 mov r1,r4
 1282 0812 CD4A     	 ldr r2,.L110+4
 1283 0814 CD4B     	 ldr r3,.L110+8
 1284 0816 FFF7FEFF 	 bl __aeabi_dadd
 1285 081a 031C     	 mov r3,r0
 1286 081c 0C1C     	 mov r4,r1
 1287 081e CC48     	 ldr r0,.L110+12
 1288 0820 CC49     	 ldr r1,.L110+16
 1289 0822 1A1C     	 mov r2,r3
 1290 0824 231C     	 mov r3,r4
 1291 0826 FFF7FEFF 	 bl __aeabi_ddiv
 1292 082a 031C     	 mov r3,r0
 1293 082c 0C1C     	 mov r4,r1
 1294 082e 181C     	 mov r0,r3
 1295 0830 211C     	 mov r1,r4
 1296 0832 FFF7FEFF 	 bl atan
 1297 0836 031C     	 mov r3,r0
 1298 0838 0C1C     	 mov r4,r1
 1299 083a 181C     	 mov r0,r3
 1300 083c 211C     	 mov r1,r4
 1301 083e C64A     	 ldr r2,.L110+20
 1302 0840 C64B     	 ldr r3,.L110+24
 1303 0842 FFF7FEFF 	 bl __aeabi_dmul
 1304 0846 031C     	 mov r3,r0
 1305 0848 0C1C     	 mov r4,r1
 1306 084a 181C     	 mov r0,r3
 1307 084c 211C     	 mov r1,r4
 1308 084e FFF7FEFF 	 bl __aeabi_d2f
 1309 0852 021C     	 add r2,r0,#0
 1310 0854 C34B     	 ldr r3,.L110+32
 1311 0856 1A60     	 str r2,[r3]
 111:../Driving_dynamics.c **** 
 112:../Driving_dynamics.c **** 					speed_fl = Driving_speed_cal * Speed_ratio;
 1312              	 .loc 3 112 0
 1313 0858 C34B     	 ldr r3,.L110+36
 1314 085a 1B68     	 ldr r3,[r3]
 1315 085c 181C     	 add r0,r3,#0
 1316 085e B968     	 ldr r1,[r7,#8]
 1317 0860 FFF7FEFF 	 bl __aeabi_fmul
 1318 0864 031C     	 add r3,r0,#0
 1319 0866 1A1C     	 add r2,r3,#0
 1320 0868 C04B     	 ldr r3,.L110+40
 1321 086a 1A60     	 str r2,[r3]
 113:../Driving_dynamics.c **** 					speed_fr = Driving_speed_cal / Speed_ratio;
 1322              	 .loc 3 113 0
 1323 086c BE4B     	 ldr r3,.L110+36
 1324 086e 1B68     	 ldr r3,[r3]
 1325 0870 B868     	 ldr r0,[r7,#8]
 1326 0872 191C     	 add r1,r3,#0
 1327 0874 FFF7FEFF 	 bl __aeabi_fdiv
 1328 0878 031C     	 add r3,r0,#0
 1329 087a 1A1C     	 add r2,r3,#0
 1330 087c BC4B     	 ldr r3,.L110+44
 1331 087e 1A60     	 str r2,[r3]
 114:../Driving_dynamics.c **** 
 115:../Driving_dynamics.c **** 					speed_rl = speed_fl;
 1332              	 .loc 3 115 0
 1333 0880 BA4B     	 ldr r3,.L110+40
 1334 0882 1A68     	 ldr r2,[r3]
 1335 0884 BB4B     	 ldr r3,.L110+48
 1336 0886 1A60     	 str r2,[r3]
 116:../Driving_dynamics.c **** 					speed_rr = speed_fr;
 1337              	 .loc 3 116 0
 1338 0888 B94B     	 ldr r3,.L110+44
 1339 088a 1A68     	 ldr r2,[r3]
 1340 088c BA4B     	 ldr r3,.L110+52
 1341 088e 1A60     	 str r2,[r3]
 1342 0890 11E0     	 b .L47
 1343              	.L40:
 117:../Driving_dynamics.c **** 				}
 118:../Driving_dynamics.c **** 			}
 119:../Driving_dynamics.c **** 			else{
 120:../Driving_dynamics.c **** 				angle_rl = 0;
 1344              	 .loc 3 120 0
 1345 0892 B34B     	 ldr r3,.L110+28
 1346 0894 0022     	 mov r2,#0
 1347 0896 1A60     	 str r2,[r3]
 121:../Driving_dynamics.c **** 				angle_rr = 0;
 1348              	 .loc 3 121 0
 1349 0898 B24B     	 ldr r3,.L110+32
 1350 089a 0022     	 mov r2,#0
 1351 089c 1A60     	 str r2,[r3]
 122:../Driving_dynamics.c **** 
 123:../Driving_dynamics.c **** 				speed_fl = Driving_speed_cal;
 1352              	 .loc 3 123 0
 1353 089e B34B     	 ldr r3,.L110+40
 1354 08a0 BA68     	 ldr r2,[r7,#8]
 1355 08a2 1A60     	 str r2,[r3]
 124:../Driving_dynamics.c **** 				speed_fr = Driving_speed_cal;
 1356              	 .loc 3 124 0
 1357 08a4 B24B     	 ldr r3,.L110+44
 1358 08a6 BA68     	 ldr r2,[r7,#8]
 1359 08a8 1A60     	 str r2,[r3]
 125:../Driving_dynamics.c **** 				speed_rl = Driving_speed_cal;
 1360              	 .loc 3 125 0
 1361 08aa B24B     	 ldr r3,.L110+48
 1362 08ac BA68     	 ldr r2,[r7,#8]
 1363 08ae 1A60     	 str r2,[r3]
 126:../Driving_dynamics.c **** 				speed_rr = Driving_speed_cal;
 1364              	 .loc 3 126 0
 1365 08b0 B14B     	 ldr r3,.L110+52
 1366 08b2 BA68     	 ldr r2,[r7,#8]
 1367 08b4 1A60     	 str r2,[r3]
 1368              	.L47:
 127:../Driving_dynamics.c **** 			}
 128:../Driving_dynamics.c **** 
 129:../Driving_dynamics.c **** 			//rear axle
 130:../Driving_dynamics.c **** 			angle_fl = 0;
 1369              	 .loc 3 130 0
 1370 08b6 B14B     	 ldr r3,.L110+56
 1371 08b8 0022     	 mov r2,#0
 1372 08ba 1A60     	 str r2,[r3]
 131:../Driving_dynamics.c **** 			angle_fr = 0;
 1373              	 .loc 3 131 0
 1374 08bc B04B     	 ldr r3,.L110+60
 1375 08be 0022     	 mov r2,#0
 1376 08c0 1A60     	 str r2,[r3]
 132:../Driving_dynamics.c **** 			break;
 1377              	 .loc 3 132 0
 1378 08c2 09E3     	 b .L35
 1379              	.L20:
 133:../Driving_dynamics.c **** 
 134:../Driving_dynamics.c **** 		case ALL_WHEEL: // 4 wheel #############################################################
 135:../Driving_dynamics.c **** 			// steering limits
 136:../Driving_dynamics.c **** 			if(Steering_direction_cal > 30) Steering_direction_cal = 30;
 1380              	 .loc 3 136 0
 1381 08c4 F868     	 ldr r0,[r7,#12]
 1382 08c6 AF49     	 ldr r1,.L110+64
 1383 08c8 FFF7FEFF 	 bl __aeabi_fcmpgt
 1384 08cc 031E     	 sub r3,r0,#0
 1385 08ce 01D0     	 beq .L48
 1386              	 .loc 3 136 0 is_stmt 0 discriminator 1
 1387 08d0 AC4B     	 ldr r3,.L110+64
 1388 08d2 FB60     	 str r3,[r7,#12]
 1389              	.L48:
 137:../Driving_dynamics.c **** 			if(Steering_direction_cal < -30) Steering_direction_cal = -30;
 1390              	 .loc 3 137 0 is_stmt 1
 1391 08d4 F868     	 ldr r0,[r7,#12]
 1392 08d6 AC49     	 ldr r1,.L110+68
 1393 08d8 FFF7FEFF 	 bl __aeabi_fcmplt
 1394 08dc 031E     	 sub r3,r0,#0
 1395 08de 01D0     	 beq .L50
 1396              	 .loc 3 137 0 is_stmt 0 discriminator 1
 1397 08e0 A94B     	 ldr r3,.L110+68
 1398 08e2 FB60     	 str r3,[r7,#12]
 1399              	.L50:
 138:../Driving_dynamics.c **** 
 139:../Driving_dynamics.c **** 			if(within_MAX_MIN(Steering_direction_cal,-5,5) == 0){// if not almost zero
 1400              	 .loc 3 139 0 is_stmt 1
 1401 08e4 FB68     	 ldr r3,[r7,#12]
 1402 08e6 A949     	 ldr r1,.L110+72
 1403 08e8 A94A     	 ldr r2,.L110+76
 1404 08ea 181C     	 add r0,r3,#0
 1405 08ec FFF7FEFF 	 bl within_MAX_MIN
 1406 08f0 031C     	 mov r3,r0
 1407 08f2 1A1C     	 mov r2,r3
 1408 08f4 0123     	 mov r3,#1
 1409 08f6 5340     	 eor r3,r2
 1410 08f8 DBB2     	 uxtb r3,r3
 1411 08fa 002B     	 cmp r3,#0
 1412 08fc 00D1     	 bne .LCB1222
 1413 08fe E0E1     	 b .L52
 1414              	.LCB1222:
 140:../Driving_dynamics.c **** 				// pre calc
 141:../Driving_dynamics.c **** 				R_Turn = HALF_WHEEL_BASE / tan(Steering_direction_cal / RAD_TO_DEG); // to truni graduis conver
 1415              	 .loc 3 141 0
 1416 0900 F868     	 ldr r0,[r7,#12]
 1417 0902 FFF7FEFF 	 bl __aeabi_f2d
 1418 0906 031C     	 mov r3,r0
 1419 0908 0C1C     	 mov r4,r1
 1420 090a 181C     	 mov r0,r3
 1421 090c 211C     	 mov r1,r4
 1422 090e 924A     	 ldr r2,.L110+20
 1423 0910 A04B     	 ldr r3,.L110+80
 1424 0912 FFF7FEFF 	 bl __aeabi_ddiv
 1425 0916 031C     	 mov r3,r0
 1426 0918 0C1C     	 mov r4,r1
 1427 091a 181C     	 mov r0,r3
 1428 091c 211C     	 mov r1,r4
 1429 091e FFF7FEFF 	 bl tan
 1430 0922 031C     	 mov r3,r0
 1431 0924 0C1C     	 mov r4,r1
 1432 0926 9C48     	 ldr r0,.L110+84
 1433 0928 9C49     	 ldr r1,.L110+88
 1434 092a 1A1C     	 mov r2,r3
 1435 092c 231C     	 mov r3,r4
 1436 092e FFF7FEFF 	 bl __aeabi_ddiv
 1437 0932 031C     	 mov r3,r0
 1438 0934 0C1C     	 mov r4,r1
 1439 0936 181C     	 mov r0,r3
 1440 0938 211C     	 mov r1,r4
 1441 093a FFF7FEFF 	 bl __aeabi_d2f
 1442 093e 021C     	 add r2,r0,#0
 1443 0940 804B     	 ldr r3,.L110
 1444 0942 1A60     	 str r2,[r3]
 142:../Driving_dynamics.c **** 				Speed_ratio = (2 * (copysign(R_Turn,1) + HALF_TRACK_WIDTH) * M_PI) / (2 * copysign(R_Turn,1) * 
 1445              	 .loc 3 142 0
 1446 0944 7F4B     	 ldr r3,.L110
 1447 0946 1B68     	 ldr r3,[r3]
 1448 0948 5B00     	 lsl r3,r3,#1
 1449 094a 5B08     	 lsr r3,r3,#1
 1450 094c 181C     	 add r0,r3,#0
 1451 094e FFF7FEFF 	 bl __aeabi_f2d
 1452 0952 031C     	 mov r3,r0
 1453 0954 0C1C     	 mov r4,r1
 1454 0956 181C     	 mov r0,r3
 1455 0958 211C     	 mov r1,r4
 1456 095a 7B4A     	 ldr r2,.L110+4
 1457 095c 7B4B     	 ldr r3,.L110+8
 1458 095e FFF7FEFF 	 bl __aeabi_dadd
 1459 0962 031C     	 mov r3,r0
 1460 0964 0C1C     	 mov r4,r1
 1461 0966 181C     	 mov r0,r3
 1462 0968 211C     	 mov r1,r4
 1463 096a 1A1C     	 mov r2,r3
 1464 096c 231C     	 mov r3,r4
 1465 096e FFF7FEFF 	 bl __aeabi_dadd
 1466 0972 031C     	 mov r3,r0
 1467 0974 0C1C     	 mov r4,r1
 1468 0976 181C     	 mov r0,r3
 1469 0978 211C     	 mov r1,r4
 1470 097a 894A     	 ldr r2,.L110+92
 1471 097c 894B     	 ldr r3,.L110+96
 1472 097e FFF7FEFF 	 bl __aeabi_dmul
 1473 0982 031C     	 mov r3,r0
 1474 0984 0C1C     	 mov r4,r1
 1475 0986 1D1C     	 mov r5,r3
 1476 0988 261C     	 mov r6,r4
 1477 098a 6E4B     	 ldr r3,.L110
 1478 098c 1B68     	 ldr r3,[r3]
 1479 098e 5B00     	 lsl r3,r3,#1
 1480 0990 5B08     	 lsr r3,r3,#1
 1481 0992 181C     	 add r0,r3,#0
 1482 0994 FFF7FEFF 	 bl __aeabi_f2d
 1483 0998 031C     	 mov r3,r0
 1484 099a 0C1C     	 mov r4,r1
 1485 099c 181C     	 mov r0,r3
 1486 099e 211C     	 mov r1,r4
 1487 09a0 1A1C     	 mov r2,r3
 1488 09a2 231C     	 mov r3,r4
 1489 09a4 FFF7FEFF 	 bl __aeabi_dadd
 1490 09a8 031C     	 mov r3,r0
 1491 09aa 0C1C     	 mov r4,r1
 1492 09ac 181C     	 mov r0,r3
 1493 09ae 211C     	 mov r1,r4
 1494 09b0 7B4A     	 ldr r2,.L110+92
 1495 09b2 7C4B     	 ldr r3,.L110+96
 1496 09b4 FFF7FEFF 	 bl __aeabi_dmul
 1497 09b8 031C     	 mov r3,r0
 1498 09ba 0C1C     	 mov r4,r1
 1499 09bc 281C     	 mov r0,r5
 1500 09be 311C     	 mov r1,r6
 1501 09c0 1A1C     	 mov r2,r3
 1502 09c2 231C     	 mov r3,r4
 1503 09c4 FFF7FEFF 	 bl __aeabi_ddiv
 1504 09c8 031C     	 mov r3,r0
 1505 09ca 0C1C     	 mov r4,r1
 1506 09cc 181C     	 mov r0,r3
 1507 09ce 211C     	 mov r1,r4
 1508 09d0 FFF7FEFF 	 bl __aeabi_d2f
 1509 09d4 021C     	 add r2,r0,#0
 1510 09d6 644B     	 ldr r3,.L110+36
 1511 09d8 1A60     	 str r2,[r3]
 143:../Driving_dynamics.c **** 
 144:../Driving_dynamics.c **** 				if((R_TRUN_MIN < R_Turn) && (R_Turn < R_TRUN_MAX)){ // trun right positive R
 1512              	 .loc 3 144 0
 1513 09da 5A4B     	 ldr r3,.L110
 1514 09dc 1B68     	 ldr r3,[r3]
 1515 09de 181C     	 add r0,r3,#0
 1516 09e0 FFF7FEFF 	 bl __aeabi_f2d
 1517 09e4 031C     	 mov r3,r0
 1518 09e6 0C1C     	 mov r4,r1
 1519 09e8 181C     	 mov r0,r3
 1520 09ea 211C     	 mov r1,r4
 1521 09ec 6E4A     	 ldr r2,.L110+100
 1522 09ee 6F4B     	 ldr r3,.L110+104
 1523 09f0 FFF7FEFF 	 bl __aeabi_dcmpgt
 1524 09f4 031E     	 sub r3,r0,#0
 1525 09f6 00D1     	 bne .LCB1331
 1526 09f8 8BE0     	 b .L53
 1527              	.LCB1331:
 1528              	 .loc 3 144 0 is_stmt 0 discriminator 1
 1529 09fa 524B     	 ldr r3,.L110
 1530 09fc 1B68     	 ldr r3,[r3]
 1531 09fe 181C     	 add r0,r3,#0
 1532 0a00 6B49     	 ldr r1,.L110+108
 1533 0a02 FFF7FEFF 	 bl __aeabi_fcmplt
 1534 0a06 031E     	 sub r3,r0,#0
 1535 0a08 00D1     	 bne .LCB1339
 1536 0a0a 82E0     	 b .L53
 1537              	.LCB1339:
 145:../Driving_dynamics.c **** 					angle_fl = RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn - HALF_TRACK_WIDTH)); // out wheel
 1538              	 .loc 3 145 0 is_stmt 1
 1539 0a0c 4D4B     	 ldr r3,.L110
 1540 0a0e 1B68     	 ldr r3,[r3]
 1541 0a10 181C     	 add r0,r3,#0
 1542 0a12 FFF7FEFF 	 bl __aeabi_f2d
 1543 0a16 031C     	 mov r3,r0
 1544 0a18 0C1C     	 mov r4,r1
 1545 0a1a 181C     	 mov r0,r3
 1546 0a1c 211C     	 mov r1,r4
 1547 0a1e 4A4A     	 ldr r2,.L110+4
 1548 0a20 4A4B     	 ldr r3,.L110+8
 1549 0a22 FFF7FEFF 	 bl __aeabi_dsub
 1550 0a26 031C     	 mov r3,r0
 1551 0a28 0C1C     	 mov r4,r1
 1552 0a2a 4948     	 ldr r0,.L110+12
 1553 0a2c 4949     	 ldr r1,.L110+16
 1554 0a2e 1A1C     	 mov r2,r3
 1555 0a30 231C     	 mov r3,r4
 1556 0a32 FFF7FEFF 	 bl __aeabi_ddiv
 1557 0a36 031C     	 mov r3,r0
 1558 0a38 0C1C     	 mov r4,r1
 1559 0a3a 181C     	 mov r0,r3
 1560 0a3c 211C     	 mov r1,r4
 1561 0a3e FFF7FEFF 	 bl atan
 1562 0a42 031C     	 mov r3,r0
 1563 0a44 0C1C     	 mov r4,r1
 1564 0a46 181C     	 mov r0,r3
 1565 0a48 211C     	 mov r1,r4
 1566 0a4a 434A     	 ldr r2,.L110+20
 1567 0a4c 514B     	 ldr r3,.L110+80
 1568 0a4e FFF7FEFF 	 bl __aeabi_dmul
 1569 0a52 031C     	 mov r3,r0
 1570 0a54 0C1C     	 mov r4,r1
 1571 0a56 181C     	 mov r0,r3
 1572 0a58 211C     	 mov r1,r4
 1573 0a5a FFF7FEFF 	 bl __aeabi_d2f
 1574 0a5e 021C     	 add r2,r0,#0
 1575 0a60 464B     	 ldr r3,.L110+56
 1576 0a62 1A60     	 str r2,[r3]
 146:../Driving_dynamics.c **** 					angle_fr = RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn + HALF_TRACK_WIDTH)); // in wheel
 1577              	 .loc 3 146 0
 1578 0a64 374B     	 ldr r3,.L110
 1579 0a66 1B68     	 ldr r3,[r3]
 1580 0a68 181C     	 add r0,r3,#0
 1581 0a6a FFF7FEFF 	 bl __aeabi_f2d
 1582 0a6e 031C     	 mov r3,r0
 1583 0a70 0C1C     	 mov r4,r1
 1584 0a72 181C     	 mov r0,r3
 1585 0a74 211C     	 mov r1,r4
 1586 0a76 344A     	 ldr r2,.L110+4
 1587 0a78 344B     	 ldr r3,.L110+8
 1588 0a7a FFF7FEFF 	 bl __aeabi_dadd
 1589 0a7e 031C     	 mov r3,r0
 1590 0a80 0C1C     	 mov r4,r1
 1591 0a82 3348     	 ldr r0,.L110+12
 1592 0a84 3349     	 ldr r1,.L110+16
 1593 0a86 1A1C     	 mov r2,r3
 1594 0a88 231C     	 mov r3,r4
 1595 0a8a FFF7FEFF 	 bl __aeabi_ddiv
 1596 0a8e 031C     	 mov r3,r0
 1597 0a90 0C1C     	 mov r4,r1
 1598 0a92 181C     	 mov r0,r3
 1599 0a94 211C     	 mov r1,r4
 1600 0a96 FFF7FEFF 	 bl atan
 1601 0a9a 031C     	 mov r3,r0
 1602 0a9c 0C1C     	 mov r4,r1
 1603 0a9e 181C     	 mov r0,r3
 1604 0aa0 211C     	 mov r1,r4
 1605 0aa2 2D4A     	 ldr r2,.L110+20
 1606 0aa4 3B4B     	 ldr r3,.L110+80
 1607 0aa6 FFF7FEFF 	 bl __aeabi_dmul
 1608 0aaa 031C     	 mov r3,r0
 1609 0aac 0C1C     	 mov r4,r1
 1610 0aae 181C     	 mov r0,r3
 1611 0ab0 211C     	 mov r1,r4
 1612 0ab2 FFF7FEFF 	 bl __aeabi_d2f
 1613 0ab6 021C     	 add r2,r0,#0
 1614 0ab8 314B     	 ldr r3,.L110+60
 1615 0aba 1A60     	 str r2,[r3]
 147:../Driving_dynamics.c **** 
 148:../Driving_dynamics.c **** 					angle_rl = -angle_fl;
 1616              	 .loc 3 148 0
 1617 0abc 2F4B     	 ldr r3,.L110+56
 1618 0abe 1B68     	 ldr r3,[r3]
 1619 0ac0 8022     	 mov r2,#128
 1620 0ac2 1206     	 lsl r2,r2,#24
 1621 0ac4 5A40     	 eor r2,r3
 1622 0ac6 264B     	 ldr r3,.L110+28
 1623 0ac8 1A60     	 str r2,[r3]
 149:../Driving_dynamics.c **** 					angle_rr = -angle_fr;
 1624              	 .loc 3 149 0
 1625 0aca 2D4B     	 ldr r3,.L110+60
 1626 0acc 1B68     	 ldr r3,[r3]
 1627 0ace 8022     	 mov r2,#128
 1628 0ad0 1206     	 lsl r2,r2,#24
 1629 0ad2 5A40     	 eor r2,r3
 1630 0ad4 234B     	 ldr r3,.L110+32
 1631 0ad6 1A60     	 str r2,[r3]
 150:../Driving_dynamics.c **** 
 151:../Driving_dynamics.c **** 					speed_fl = Driving_speed_cal / Speed_ratio;
 1632              	 .loc 3 151 0
 1633 0ad8 234B     	 ldr r3,.L110+36
 1634 0ada 1B68     	 ldr r3,[r3]
 1635 0adc B868     	 ldr r0,[r7,#8]
 1636 0ade 191C     	 add r1,r3,#0
 1637 0ae0 FFF7FEFF 	 bl __aeabi_fdiv
 1638 0ae4 031C     	 add r3,r0,#0
 1639 0ae6 1A1C     	 add r2,r3,#0
 1640 0ae8 204B     	 ldr r3,.L110+40
 1641 0aea 1A60     	 str r2,[r3]
 152:../Driving_dynamics.c **** 					speed_fr = Driving_speed_cal * Speed_ratio;
 1642              	 .loc 3 152 0
 1643 0aec 1E4B     	 ldr r3,.L110+36
 1644 0aee 1B68     	 ldr r3,[r3]
 1645 0af0 181C     	 add r0,r3,#0
 1646 0af2 B968     	 ldr r1,[r7,#8]
 1647 0af4 FFF7FEFF 	 bl __aeabi_fmul
 1648 0af8 031C     	 add r3,r0,#0
 1649 0afa 1A1C     	 add r2,r3,#0
 1650 0afc 1C4B     	 ldr r3,.L110+44
 1651 0afe 1A60     	 str r2,[r3]
 153:../Driving_dynamics.c **** 
 154:../Driving_dynamics.c **** 					speed_rl = speed_fl;
 1652              	 .loc 3 154 0
 1653 0b00 1A4B     	 ldr r3,.L110+40
 1654 0b02 1A68     	 ldr r2,[r3]
 1655 0b04 1B4B     	 ldr r3,.L110+48
 1656 0b06 1A60     	 str r2,[r3]
 155:../Driving_dynamics.c **** 					speed_rr = speed_fr;
 1657              	 .loc 3 155 0
 1658 0b08 194B     	 ldr r3,.L110+44
 1659 0b0a 1A68     	 ldr r2,[r3]
 1660 0b0c 1A4B     	 ldr r3,.L110+52
 1661 0b0e 1A60     	 str r2,[r3]
 1662 0b10 F0E0     	 b .L59
 1663              	.L53:
 156:../Driving_dynamics.c **** 				}
 157:../Driving_dynamics.c **** 				else if((- R_TRUN_MIN > R_Turn) && (R_Turn > -R_TRUN_MAX)){ // trun left positive R
 1664              	 .loc 3 157 0
 1665 0b12 0C4B     	 ldr r3,.L110
 1666 0b14 1B68     	 ldr r3,[r3]
 1667 0b16 181C     	 add r0,r3,#0
 1668 0b18 FFF7FEFF 	 bl __aeabi_f2d
 1669 0b1c 031C     	 mov r3,r0
 1670 0b1e 0C1C     	 mov r4,r1
 1671 0b20 181C     	 mov r0,r3
 1672 0b22 211C     	 mov r1,r4
 1673 0b24 204A     	 ldr r2,.L110+100
 1674 0b26 234B     	 ldr r3,.L110+112
 1675 0b28 FFF7FEFF 	 bl __aeabi_dcmplt
 1676 0b2c 031E     	 sub r3,r0,#0
 1677 0b2e 00D1     	 bne .L95
 1678 0b30 E0E0     	 b .L59
 1679              	.L95:
 1680              	 .loc 3 157 0 is_stmt 0 discriminator 1
 1681 0b32 044B     	 ldr r3,.L110
 1682 0b34 1B68     	 ldr r3,[r3]
 1683 0b36 181C     	 add r0,r3,#0
 1684 0b38 1F49     	 ldr r1,.L110+116
 1685 0b3a FFF7FEFF 	 bl __aeabi_fcmpgt
 1686 0b3e 031E     	 sub r3,r0,#0
 1687 0b40 3CD1     	 bne .L96
 1688 0b42 D7E0     	 b .L59
 1689              	.L111:
 1690              	 .align 2
 1691              	.L110:
 1692 0b44 00000000 	 .word R_Turn
 1693 0b48 77BE9F1A 	 .word 446676599
 1694 0b4c 2FDDC43F 	 .word 1069866287
 1695 0b50 79E92631 	 .word 824633721
 1696 0b54 08ACDC3F 	 .word 1071426568
 1697 0b58 C7F48425 	 .word 629470407
 1698 0b5c 1EA64CC0 	 .word -1068718562
 1699 0b60 00000000 	 .word angle_rl
 1700 0b64 00000000 	 .word angle_rr
 1701 0b68 00000000 	 .word Speed_ratio
 1702 0b6c 00000000 	 .word speed_fl
 1703 0b70 00000000 	 .word speed_fr
 1704 0b74 00000000 	 .word speed_rl
 1705 0b78 00000000 	 .word speed_rr
 1706 0b7c 00000000 	 .word angle_fl
 1707 0b80 00000000 	 .word angle_fr
 1708 0b84 0000F041 	 .word 1106247680
 1709 0b88 0000F0C1 	 .word -1041235968
 1710 0b8c 0000A0C0 	 .word -1063256064
 1711 0b90 0000A040 	 .word 1084227584
 1712 0b94 1EA64C40 	 .word 1078765086
 1713 0b98 295C8FC2 	 .word -1030792151
 1714 0b9c F528CC3F 	 .word 1070344437
 1715 0ba0 182D4454 	 .word 1413754136
 1716 0ba4 FB210940 	 .word 1074340347
 1717 0ba8 9A999999 	 .word -1717986918
 1718 0bac 9999A93F 	 .word 1068079513
 1719 0bb0 0000A041 	 .word 1101004800
 1720 0bb4 9999A9BF 	 .word -1079404135
 1721 0bb8 0000A0C1 	 .word -1046478848
 1722              	.L96:
 158:../Driving_dynamics.c **** 					angle_fl = RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn - HALF_TRACK_WIDTH)); // in wheel
 1723              	 .loc 3 158 0 is_stmt 1
 1724 0bbc D84B     	 ldr r3,.L112
 1725 0bbe 1B68     	 ldr r3,[r3]
 1726 0bc0 181C     	 add r0,r3,#0
 1727 0bc2 FFF7FEFF 	 bl __aeabi_f2d
 1728 0bc6 031C     	 mov r3,r0
 1729 0bc8 0C1C     	 mov r4,r1
 1730 0bca 181C     	 mov r0,r3
 1731 0bcc 211C     	 mov r1,r4
 1732 0bce D54A     	 ldr r2,.L112+4
 1733 0bd0 D54B     	 ldr r3,.L112+8
 1734 0bd2 FFF7FEFF 	 bl __aeabi_dsub
 1735 0bd6 031C     	 mov r3,r0
 1736 0bd8 0C1C     	 mov r4,r1
 1737 0bda D448     	 ldr r0,.L112+12
 1738 0bdc D449     	 ldr r1,.L112+16
 1739 0bde 1A1C     	 mov r2,r3
 1740 0be0 231C     	 mov r3,r4
 1741 0be2 FFF7FEFF 	 bl __aeabi_ddiv
 1742 0be6 031C     	 mov r3,r0
 1743 0be8 0C1C     	 mov r4,r1
 1744 0bea 181C     	 mov r0,r3
 1745 0bec 211C     	 mov r1,r4
 1746 0bee FFF7FEFF 	 bl atan
 1747 0bf2 031C     	 mov r3,r0
 1748 0bf4 0C1C     	 mov r4,r1
 1749 0bf6 181C     	 mov r0,r3
 1750 0bf8 211C     	 mov r1,r4
 1751 0bfa CE4A     	 ldr r2,.L112+20
 1752 0bfc CE4B     	 ldr r3,.L112+24
 1753 0bfe FFF7FEFF 	 bl __aeabi_dmul
 1754 0c02 031C     	 mov r3,r0
 1755 0c04 0C1C     	 mov r4,r1
 1756 0c06 181C     	 mov r0,r3
 1757 0c08 211C     	 mov r1,r4
 1758 0c0a FFF7FEFF 	 bl __aeabi_d2f
 1759 0c0e 021C     	 add r2,r0,#0
 1760 0c10 CA4B     	 ldr r3,.L112+28
 1761 0c12 1A60     	 str r2,[r3]
 159:../Driving_dynamics.c **** 					angle_fr = RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn + HALF_TRACK_WIDTH)); // out wheel
 1762              	 .loc 3 159 0
 1763 0c14 C24B     	 ldr r3,.L112
 1764 0c16 1B68     	 ldr r3,[r3]
 1765 0c18 181C     	 add r0,r3,#0
 1766 0c1a FFF7FEFF 	 bl __aeabi_f2d
 1767 0c1e 031C     	 mov r3,r0
 1768 0c20 0C1C     	 mov r4,r1
 1769 0c22 181C     	 mov r0,r3
 1770 0c24 211C     	 mov r1,r4
 1771 0c26 BF4A     	 ldr r2,.L112+4
 1772 0c28 BF4B     	 ldr r3,.L112+8
 1773 0c2a FFF7FEFF 	 bl __aeabi_dadd
 1774 0c2e 031C     	 mov r3,r0
 1775 0c30 0C1C     	 mov r4,r1
 1776 0c32 BE48     	 ldr r0,.L112+12
 1777 0c34 BE49     	 ldr r1,.L112+16
 1778 0c36 1A1C     	 mov r2,r3
 1779 0c38 231C     	 mov r3,r4
 1780 0c3a FFF7FEFF 	 bl __aeabi_ddiv
 1781 0c3e 031C     	 mov r3,r0
 1782 0c40 0C1C     	 mov r4,r1
 1783 0c42 181C     	 mov r0,r3
 1784 0c44 211C     	 mov r1,r4
 1785 0c46 FFF7FEFF 	 bl atan
 1786 0c4a 031C     	 mov r3,r0
 1787 0c4c 0C1C     	 mov r4,r1
 1788 0c4e 181C     	 mov r0,r3
 1789 0c50 211C     	 mov r1,r4
 1790 0c52 B84A     	 ldr r2,.L112+20
 1791 0c54 B84B     	 ldr r3,.L112+24
 1792 0c56 FFF7FEFF 	 bl __aeabi_dmul
 1793 0c5a 031C     	 mov r3,r0
 1794 0c5c 0C1C     	 mov r4,r1
 1795 0c5e 181C     	 mov r0,r3
 1796 0c60 211C     	 mov r1,r4
 1797 0c62 FFF7FEFF 	 bl __aeabi_d2f
 1798 0c66 021C     	 add r2,r0,#0
 1799 0c68 B54B     	 ldr r3,.L112+32
 1800 0c6a 1A60     	 str r2,[r3]
 160:../Driving_dynamics.c **** 
 161:../Driving_dynamics.c **** 					angle_rl = -angle_fl;
 1801              	 .loc 3 161 0
 1802 0c6c B34B     	 ldr r3,.L112+28
 1803 0c6e 1B68     	 ldr r3,[r3]
 1804 0c70 8022     	 mov r2,#128
 1805 0c72 1206     	 lsl r2,r2,#24
 1806 0c74 5A40     	 eor r2,r3
 1807 0c76 B34B     	 ldr r3,.L112+36
 1808 0c78 1A60     	 str r2,[r3]
 162:../Driving_dynamics.c **** 					angle_rr = -angle_fr;
 1809              	 .loc 3 162 0
 1810 0c7a B14B     	 ldr r3,.L112+32
 1811 0c7c 1B68     	 ldr r3,[r3]
 1812 0c7e 8022     	 mov r2,#128
 1813 0c80 1206     	 lsl r2,r2,#24
 1814 0c82 5A40     	 eor r2,r3
 1815 0c84 B04B     	 ldr r3,.L112+40
 1816 0c86 1A60     	 str r2,[r3]
 163:../Driving_dynamics.c **** 
 164:../Driving_dynamics.c **** 					speed_fl = Driving_speed_cal * Speed_ratio;
 1817              	 .loc 3 164 0
 1818 0c88 B04B     	 ldr r3,.L112+44
 1819 0c8a 1B68     	 ldr r3,[r3]
 1820 0c8c 181C     	 add r0,r3,#0
 1821 0c8e B968     	 ldr r1,[r7,#8]
 1822 0c90 FFF7FEFF 	 bl __aeabi_fmul
 1823 0c94 031C     	 add r3,r0,#0
 1824 0c96 1A1C     	 add r2,r3,#0
 1825 0c98 AD4B     	 ldr r3,.L112+48
 1826 0c9a 1A60     	 str r2,[r3]
 165:../Driving_dynamics.c **** 					speed_fr = Driving_speed_cal / Speed_ratio;
 1827              	 .loc 3 165 0
 1828 0c9c AB4B     	 ldr r3,.L112+44
 1829 0c9e 1B68     	 ldr r3,[r3]
 1830 0ca0 B868     	 ldr r0,[r7,#8]
 1831 0ca2 191C     	 add r1,r3,#0
 1832 0ca4 FFF7FEFF 	 bl __aeabi_fdiv
 1833 0ca8 031C     	 add r3,r0,#0
 1834 0caa 1A1C     	 add r2,r3,#0
 1835 0cac A94B     	 ldr r3,.L112+52
 1836 0cae 1A60     	 str r2,[r3]
 166:../Driving_dynamics.c **** 
 167:../Driving_dynamics.c **** 					speed_rl = speed_fl;
 1837              	 .loc 3 167 0
 1838 0cb0 A74B     	 ldr r3,.L112+48
 1839 0cb2 1A68     	 ldr r2,[r3]
 1840 0cb4 A84B     	 ldr r3,.L112+56
 1841 0cb6 1A60     	 str r2,[r3]
 168:../Driving_dynamics.c **** 					speed_rr = speed_fr;
 1842              	 .loc 3 168 0
 1843 0cb8 A64B     	 ldr r3,.L112+52
 1844 0cba 1A68     	 ldr r2,[r3]
 1845 0cbc A74B     	 ldr r3,.L112+60
 1846 0cbe 1A60     	 str r2,[r3]
 1847 0cc0 18E0     	 b .L59
 1848              	.L52:
 169:../Driving_dynamics.c **** 				}
 170:../Driving_dynamics.c **** 			}
 171:../Driving_dynamics.c **** 			else{// starigt driving
 172:../Driving_dynamics.c **** 				angle_fl = 0;
 1849              	 .loc 3 172 0
 1850 0cc2 9E4B     	 ldr r3,.L112+28
 1851 0cc4 0022     	 mov r2,#0
 1852 0cc6 1A60     	 str r2,[r3]
 173:../Driving_dynamics.c **** 				angle_fr = 0;
 1853              	 .loc 3 173 0
 1854 0cc8 9D4B     	 ldr r3,.L112+32
 1855 0cca 0022     	 mov r2,#0
 1856 0ccc 1A60     	 str r2,[r3]
 174:../Driving_dynamics.c **** 				angle_rl = 0;
 1857              	 .loc 3 174 0
 1858 0cce 9D4B     	 ldr r3,.L112+36
 1859 0cd0 0022     	 mov r2,#0
 1860 0cd2 1A60     	 str r2,[r3]
 175:../Driving_dynamics.c **** 				angle_rr = 0;
 1861              	 .loc 3 175 0
 1862 0cd4 9C4B     	 ldr r3,.L112+40
 1863 0cd6 0022     	 mov r2,#0
 1864 0cd8 1A60     	 str r2,[r3]
 176:../Driving_dynamics.c **** 
 177:../Driving_dynamics.c **** 				speed_fl = Driving_speed_cal;
 1865              	 .loc 3 177 0
 1866 0cda 9D4B     	 ldr r3,.L112+48
 1867 0cdc BA68     	 ldr r2,[r7,#8]
 1868 0cde 1A60     	 str r2,[r3]
 178:../Driving_dynamics.c **** 				speed_fr = Driving_speed_cal;
 1869              	 .loc 3 178 0
 1870 0ce0 9C4B     	 ldr r3,.L112+52
 1871 0ce2 BA68     	 ldr r2,[r7,#8]
 1872 0ce4 1A60     	 str r2,[r3]
 179:../Driving_dynamics.c **** 				speed_rl = Driving_speed_cal;
 1873              	 .loc 3 179 0
 1874 0ce6 9C4B     	 ldr r3,.L112+56
 1875 0ce8 BA68     	 ldr r2,[r7,#8]
 1876 0cea 1A60     	 str r2,[r3]
 180:../Driving_dynamics.c **** 				speed_rr = Driving_speed_cal;
 1877              	 .loc 3 180 0
 1878 0cec 9B4B     	 ldr r3,.L112+60
 1879 0cee BA68     	 ldr r2,[r7,#8]
 1880 0cf0 1A60     	 str r2,[r3]
 181:../Driving_dynamics.c **** 			}
 182:../Driving_dynamics.c **** 			break;
 1881              	 .loc 3 182 0
 1882 0cf2 F1E0     	 b .L35
 1883              	.L59:
 1884              	 .loc 3 182 0 is_stmt 0 discriminator 1
 1885 0cf4 F0E0     	 b .L35
 1886              	.L21:
 183:../Driving_dynamics.c **** 
 184:../Driving_dynamics.c **** 		case CRAB:  //carb //#############################################################
 185:../Driving_dynamics.c **** 			Steering_direction_cal = Steering_direction_cal * 2.5; // mach data from remote
 1887              	 .loc 3 185 0 is_stmt 1
 1888 0cf6 F868     	 ldr r0,[r7,#12]
 1889 0cf8 9949     	 ldr r1,.L112+64
 1890 0cfa FFF7FEFF 	 bl __aeabi_fmul
 1891 0cfe 031C     	 add r3,r0,#0
 1892 0d00 FB60     	 str r3,[r7,#12]
 186:../Driving_dynamics.c **** 			if(Steering_direction_cal > 190) Steering_direction_cal = 190;
 1893              	 .loc 3 186 0
 1894 0d02 F868     	 ldr r0,[r7,#12]
 1895 0d04 9749     	 ldr r1,.L112+68
 1896 0d06 FFF7FEFF 	 bl __aeabi_fcmpgt
 1897 0d0a 031E     	 sub r3,r0,#0
 1898 0d0c 01D0     	 beq .L60
 1899              	 .loc 3 186 0 is_stmt 0 discriminator 1
 1900 0d0e 954B     	 ldr r3,.L112+68
 1901 0d10 FB60     	 str r3,[r7,#12]
 1902              	.L60:
 187:../Driving_dynamics.c **** 			if(Steering_direction_cal < -190) Steering_direction_cal = -190;
 1903              	 .loc 3 187 0 is_stmt 1
 1904 0d12 F868     	 ldr r0,[r7,#12]
 1905 0d14 9449     	 ldr r1,.L112+72
 1906 0d16 FFF7FEFF 	 bl __aeabi_fcmplt
 1907 0d1a 031E     	 sub r3,r0,#0
 1908 0d1c 01D0     	 beq .L62
 1909              	 .loc 3 187 0 is_stmt 0 discriminator 1
 1910 0d1e 924B     	 ldr r3,.L112+72
 1911 0d20 FB60     	 str r3,[r7,#12]
 1912              	.L62:
 188:../Driving_dynamics.c **** 			// steering
 189:../Driving_dynamics.c **** 			angle_fl = Steering_direction_cal;
 1913              	 .loc 3 189 0 is_stmt 1
 1914 0d22 864B     	 ldr r3,.L112+28
 1915 0d24 FA68     	 ldr r2,[r7,#12]
 1916 0d26 1A60     	 str r2,[r3]
 190:../Driving_dynamics.c **** 			angle_fr = Steering_direction_cal;
 1917              	 .loc 3 190 0
 1918 0d28 854B     	 ldr r3,.L112+32
 1919 0d2a FA68     	 ldr r2,[r7,#12]
 1920 0d2c 1A60     	 str r2,[r3]
 191:../Driving_dynamics.c **** 			angle_rl = Steering_direction_cal;
 1921              	 .loc 3 191 0
 1922 0d2e 854B     	 ldr r3,.L112+36
 1923 0d30 FA68     	 ldr r2,[r7,#12]
 1924 0d32 1A60     	 str r2,[r3]
 192:../Driving_dynamics.c **** 			angle_rr = Steering_direction_cal;
 1925              	 .loc 3 192 0
 1926 0d34 844B     	 ldr r3,.L112+40
 1927 0d36 FA68     	 ldr r2,[r7,#12]
 1928 0d38 1A60     	 str r2,[r3]
 193:../Driving_dynamics.c **** 			 // speed
 194:../Driving_dynamics.c **** 			 speed_fl = Driving_speed_cal;
 1929              	 .loc 3 194 0
 1930 0d3a 854B     	 ldr r3,.L112+48
 1931 0d3c BA68     	 ldr r2,[r7,#8]
 1932 0d3e 1A60     	 str r2,[r3]
 195:../Driving_dynamics.c **** 			 speed_fr = Driving_speed_cal;
 1933              	 .loc 3 195 0
 1934 0d40 844B     	 ldr r3,.L112+52
 1935 0d42 BA68     	 ldr r2,[r7,#8]
 1936 0d44 1A60     	 str r2,[r3]
 196:../Driving_dynamics.c **** 			 speed_rl = Driving_speed_cal;
 1937              	 .loc 3 196 0
 1938 0d46 844B     	 ldr r3,.L112+56
 1939 0d48 BA68     	 ldr r2,[r7,#8]
 1940 0d4a 1A60     	 str r2,[r3]
 197:../Driving_dynamics.c **** 			 speed_rr = Driving_speed_cal;
 1941              	 .loc 3 197 0
 1942 0d4c 834B     	 ldr r3,.L112+60
 1943 0d4e BA68     	 ldr r2,[r7,#8]
 1944 0d50 1A60     	 str r2,[r3]
 198:../Driving_dynamics.c **** 
 199:../Driving_dynamics.c **** 			break;
 1945              	 .loc 3 199 0
 1946 0d52 C1E0     	 b .L35
 1947              	.L22:
 200:../Driving_dynamics.c **** 
 201:../Driving_dynamics.c **** 		case ROTATE: // rotate #############################################################
 202:../Driving_dynamics.c **** 			// steering agel for turng in place
 203:../Driving_dynamics.c **** 			angle_fl = ROTATION_ANGLE + ROTATION_ANGLE_OFFSET;
 1948              	 .loc 3 203 0
 1949 0d54 794B     	 ldr r3,.L112+28
 1950 0d56 854A     	 ldr r2,.L112+76
 1951 0d58 1A60     	 str r2,[r3]
 204:../Driving_dynamics.c **** 			angle_fr = -ROTATION_ANGLE - ROTATION_ANGLE_OFFSET;
 1952              	 .loc 3 204 0
 1953 0d5a 794B     	 ldr r3,.L112+32
 1954 0d5c 844A     	 ldr r2,.L112+80
 1955 0d5e 1A60     	 str r2,[r3]
 205:../Driving_dynamics.c **** 			angle_rl = -ROTATION_ANGLE - ROTATION_ANGLE_OFFSET;
 1956              	 .loc 3 205 0
 1957 0d60 784B     	 ldr r3,.L112+36
 1958 0d62 834A     	 ldr r2,.L112+80
 1959 0d64 1A60     	 str r2,[r3]
 206:../Driving_dynamics.c **** 			angle_rr = ROTATION_ANGLE + ROTATION_ANGLE_OFFSET;
 1960              	 .loc 3 206 0
 1961 0d66 784B     	 ldr r3,.L112+40
 1962 0d68 804A     	 ldr r2,.L112+76
 1963 0d6a 1A60     	 str r2,[r3]
 207:../Driving_dynamics.c **** 
 208:../Driving_dynamics.c **** 			 // speed
 209:../Driving_dynamics.c **** 			if (Steering_direction_cal > 10){
 1964              	 .loc 3 209 0
 1965 0d6c F868     	 ldr r0,[r7,#12]
 1966 0d6e 8149     	 ldr r1,.L112+84
 1967 0d70 FFF7FEFF 	 bl __aeabi_fcmpgt
 1968 0d74 031E     	 sub r3,r0,#0
 1969 0d76 0CD0     	 beq .L103
 210:../Driving_dynamics.c **** 				speed_fl = -ROTATION_SPEED;
 1970              	 .loc 3 210 0
 1971 0d78 754B     	 ldr r3,.L112+48
 1972 0d7a 7F4A     	 ldr r2,.L112+88
 1973 0d7c 1A60     	 str r2,[r3]
 211:../Driving_dynamics.c **** 				speed_fr = ROTATION_SPEED;
 1974              	 .loc 3 211 0
 1975 0d7e 754B     	 ldr r3,.L112+52
 1976 0d80 7E4A     	 ldr r2,.L112+92
 1977 0d82 1A60     	 str r2,[r3]
 212:../Driving_dynamics.c **** 				speed_rl = -ROTATION_SPEED;
 1978              	 .loc 3 212 0
 1979 0d84 744B     	 ldr r3,.L112+56
 1980 0d86 7C4A     	 ldr r2,.L112+88
 1981 0d88 1A60     	 str r2,[r3]
 213:../Driving_dynamics.c **** 				speed_rr = ROTATION_SPEED;
 1982              	 .loc 3 213 0
 1983 0d8a 744B     	 ldr r3,.L112+60
 1984 0d8c 7B4A     	 ldr r2,.L112+92
 1985 0d8e 1A60     	 str r2,[r3]
 1986 0d90 1FE0     	 b .L66
 1987              	.L103:
 214:../Driving_dynamics.c **** 			}
 215:../Driving_dynamics.c **** 			else if(Steering_direction_cal < -10){
 1988              	 .loc 3 215 0
 1989 0d92 F868     	 ldr r0,[r7,#12]
 1990 0d94 7A49     	 ldr r1,.L112+96
 1991 0d96 FFF7FEFF 	 bl __aeabi_fcmplt
 1992 0d9a 031E     	 sub r3,r0,#0
 1993 0d9c 0CD0     	 beq .L104
 216:../Driving_dynamics.c **** 				speed_fl = ROTATION_SPEED;
 1994              	 .loc 3 216 0
 1995 0d9e 6C4B     	 ldr r3,.L112+48
 1996 0da0 764A     	 ldr r2,.L112+92
 1997 0da2 1A60     	 str r2,[r3]
 217:../Driving_dynamics.c **** 				speed_fr = -ROTATION_SPEED;
 1998              	 .loc 3 217 0
 1999 0da4 6B4B     	 ldr r3,.L112+52
 2000 0da6 744A     	 ldr r2,.L112+88
 2001 0da8 1A60     	 str r2,[r3]
 218:../Driving_dynamics.c **** 				speed_rl = ROTATION_SPEED;
 2002              	 .loc 3 218 0
 2003 0daa 6B4B     	 ldr r3,.L112+56
 2004 0dac 734A     	 ldr r2,.L112+92
 2005 0dae 1A60     	 str r2,[r3]
 219:../Driving_dynamics.c **** 				speed_rr = -ROTATION_SPEED;
 2006              	 .loc 3 219 0
 2007 0db0 6A4B     	 ldr r3,.L112+60
 2008 0db2 714A     	 ldr r2,.L112+88
 2009 0db4 1A60     	 str r2,[r3]
 2010 0db6 0CE0     	 b .L66
 2011              	.L104:
 220:../Driving_dynamics.c **** 			}
 221:../Driving_dynamics.c **** 			else{
 222:../Driving_dynamics.c **** 				speed_fl = 0;
 2012              	 .loc 3 222 0
 2013 0db8 654B     	 ldr r3,.L112+48
 2014 0dba 0022     	 mov r2,#0
 2015 0dbc 1A60     	 str r2,[r3]
 223:../Driving_dynamics.c **** 				speed_fr = 0;
 2016              	 .loc 3 223 0
 2017 0dbe 654B     	 ldr r3,.L112+52
 2018 0dc0 0022     	 mov r2,#0
 2019 0dc2 1A60     	 str r2,[r3]
 224:../Driving_dynamics.c **** 				speed_rl = 0;
 2020              	 .loc 3 224 0
 2021 0dc4 644B     	 ldr r3,.L112+56
 2022 0dc6 0022     	 mov r2,#0
 2023 0dc8 1A60     	 str r2,[r3]
 225:../Driving_dynamics.c **** 				speed_rr = 0;
 2024              	 .loc 3 225 0
 2025 0dca 644B     	 ldr r3,.L112+60
 2026 0dcc 0022     	 mov r2,#0
 2027 0dce 1A60     	 str r2,[r3]
 226:../Driving_dynamics.c **** 			}
 227:../Driving_dynamics.c **** 			break;
 2028              	 .loc 3 227 0
 2029 0dd0 82E0     	 b .L35
 2030              	.L66:
 2031 0dd2 81E0     	 b .L35
 2032              	.L16:
 228:../Driving_dynamics.c **** 
 229:../Driving_dynamics.c **** 		default:
 230:../Driving_dynamics.c **** 			angle_fl = 0;
 2033              	 .loc 3 230 0
 2034 0dd4 594B     	 ldr r3,.L112+28
 2035 0dd6 0022     	 mov r2,#0
 2036 0dd8 1A60     	 str r2,[r3]
 231:../Driving_dynamics.c **** 			angle_fr = 0;
 2037              	 .loc 3 231 0
 2038 0dda 594B     	 ldr r3,.L112+32
 2039 0ddc 0022     	 mov r2,#0
 2040 0dde 1A60     	 str r2,[r3]
 232:../Driving_dynamics.c **** 			angle_rl = 0;
 2041              	 .loc 3 232 0
 2042 0de0 584B     	 ldr r3,.L112+36
 2043 0de2 0022     	 mov r2,#0
 2044 0de4 1A60     	 str r2,[r3]
 233:../Driving_dynamics.c **** 			angle_rr = 0;
 2045              	 .loc 3 233 0
 2046 0de6 584B     	 ldr r3,.L112+40
 2047 0de8 0022     	 mov r2,#0
 2048 0dea 1A60     	 str r2,[r3]
 234:../Driving_dynamics.c **** 
 235:../Driving_dynamics.c **** 			speed_fl = 0;
 2049              	 .loc 3 235 0
 2050 0dec 584B     	 ldr r3,.L112+48
 2051 0dee 0022     	 mov r2,#0
 2052 0df0 1A60     	 str r2,[r3]
 236:../Driving_dynamics.c **** 			speed_fr = 0;
 2053              	 .loc 3 236 0
 2054 0df2 584B     	 ldr r3,.L112+52
 2055 0df4 0022     	 mov r2,#0
 2056 0df6 1A60     	 str r2,[r3]
 237:../Driving_dynamics.c **** 			speed_rl = 0;
 2057              	 .loc 3 237 0
 2058 0df8 574B     	 ldr r3,.L112+56
 2059 0dfa 0022     	 mov r2,#0
 2060 0dfc 1A60     	 str r2,[r3]
 238:../Driving_dynamics.c **** 			speed_rr = 0;
 2061              	 .loc 3 238 0
 2062 0dfe 574B     	 ldr r3,.L112+60
 2063 0e00 0022     	 mov r2,#0
 2064 0e02 1A60     	 str r2,[r3]
 239:../Driving_dynamics.c **** 
 240:../Driving_dynamics.c **** 			if( NP_setting_cycel_skipper == 4){
 2065              	 .loc 3 240 0
 2066 0e04 5F4B     	 ldr r3,.L112+100
 2067 0e06 1B78     	 ldrb r3,[r3]
 2068 0e08 042B     	 cmp r3,#4
 2069 0e0a 5FD1     	 bne .L69
 2070              	.LBB2:
 241:../Driving_dynamics.c **** 				NP_setting_cycel_skipper = 0;
 2071              	 .loc 3 241 0
 2072 0e0c 5D4B     	 ldr r3,.L112+100
 2073 0e0e 0022     	 mov r2,#0
 2074 0e10 1A70     	 strb r2,[r3]
 242:../Driving_dynamics.c **** 				// servor NP setting
 243:../Driving_dynamics.c **** 				uint8_t front_or_back = 0;
 2075              	 .loc 3 243 0
 2076 0e12 1723     	 mov r3,#23
 2077 0e14 FB18     	 add r3,r7,r3
 2078 0e16 0022     	 mov r2,#0
 2079 0e18 1A70     	 strb r2,[r3]
 244:../Driving_dynamics.c **** 				if(RC_AUX1_duty == 1) front_or_back = 2;
 2080              	 .loc 3 244 0
 2081 0e1a 5B4B     	 ldr r3,.L112+104
 2082 0e1c 1B78     	 ldrb r3,[r3]
 2083 0e1e DBB2     	 uxtb r3,r3
 2084 0e20 012B     	 cmp r3,#1
 2085 0e22 03D1     	 bne .L70
 2086              	 .loc 3 244 0 is_stmt 0 discriminator 1
 2087 0e24 1723     	 mov r3,#23
 2088 0e26 FB18     	 add r3,r7,r3
 2089 0e28 0222     	 mov r2,#2
 2090 0e2a 1A70     	 strb r2,[r3]
 2091              	.L70:
 245:../Driving_dynamics.c **** 
 246:../Driving_dynamics.c **** 				if(captured_time_Speed > 1700000) NP[0 + front_or_back]++;
 2092              	 .loc 3 246 0 is_stmt 1
 2093 0e2c 574B     	 ldr r3,.L112+108
 2094 0e2e 1B68     	 ldr r3,[r3]
 2095 0e30 574A     	 ldr r2,.L112+112
 2096 0e32 9342     	 cmp r3,r2
 2097 0e34 0CD9     	 bls .L71
 2098              	 .loc 3 246 0 is_stmt 0 discriminator 1
 2099 0e36 1723     	 mov r3,#23
 2100 0e38 FB18     	 add r3,r7,r3
 2101 0e3a 1B78     	 ldrb r3,[r3]
 2102 0e3c 554A     	 ldr r2,.L112+116
 2103 0e3e 5900     	 lsl r1,r3,#1
 2104 0e40 8A5A     	 ldrh r2,[r1,r2]
 2105 0e42 92B2     	 uxth r2,r2
 2106 0e44 0132     	 add r2,r2,#1
 2107 0e46 91B2     	 uxth r1,r2
 2108 0e48 524A     	 ldr r2,.L112+116
 2109 0e4a 5B00     	 lsl r3,r3,#1
 2110 0e4c 9952     	 strh r1,[r3,r2]
 2111 0e4e 10E0     	 b .L72
 2112              	.L71:
 247:../Driving_dynamics.c **** 				else if	(captured_time_Speed < 1200000) NP[0 + front_or_back]--;
 2113              	 .loc 3 247 0 is_stmt 1
 2114 0e50 4E4B     	 ldr r3,.L112+108
 2115 0e52 1B68     	 ldr r3,[r3]
 2116 0e54 504A     	 ldr r2,.L112+120
 2117 0e56 9342     	 cmp r3,r2
 2118 0e58 0BD8     	 bhi .L72
 2119              	 .loc 3 247 0 is_stmt 0 discriminator 1
 2120 0e5a 1723     	 mov r3,#23
 2121 0e5c FB18     	 add r3,r7,r3
 2122 0e5e 1B78     	 ldrb r3,[r3]
 2123 0e60 4C4A     	 ldr r2,.L112+116
 2124 0e62 5900     	 lsl r1,r3,#1
 2125 0e64 8A5A     	 ldrh r2,[r1,r2]
 2126 0e66 92B2     	 uxth r2,r2
 2127 0e68 013A     	 sub r2,r2,#1
 2128 0e6a 91B2     	 uxth r1,r2
 2129 0e6c 494A     	 ldr r2,.L112+116
 2130 0e6e 5B00     	 lsl r3,r3,#1
 2131 0e70 9952     	 strh r1,[r3,r2]
 2132              	.L72:
 248:../Driving_dynamics.c **** 
 249:../Driving_dynamics.c **** 				if(RC_Steering > 30) NP[1 + front_or_back]++;
 2133              	 .loc 3 249 0 is_stmt 1
 2134 0e72 4A4B     	 ldr r3,.L112+124
 2135 0e74 1B68     	 ldr r3,[r3]
 2136 0e76 181C     	 add r0,r3,#0
 2137 0e78 4949     	 ldr r1,.L112+128
 2138 0e7a FFF7FEFF 	 bl __aeabi_fcmpgt
 2139 0e7e 031E     	 sub r3,r0,#0
 2140 0e80 0DD0     	 beq .L105
 2141              	 .loc 3 249 0 is_stmt 0 discriminator 1
 2142 0e82 1723     	 mov r3,#23
 2143 0e84 FB18     	 add r3,r7,r3
 2144 0e86 1B78     	 ldrb r3,[r3]
 2145 0e88 0133     	 add r3,r3,#1
 2146 0e8a 424A     	 ldr r2,.L112+116
 2147 0e8c 5900     	 lsl r1,r3,#1
 2148 0e8e 8A5A     	 ldrh r2,[r1,r2]
 2149 0e90 92B2     	 uxth r2,r2
 2150 0e92 0132     	 add r2,r2,#1
 2151 0e94 91B2     	 uxth r1,r2
 2152 0e96 3F4A     	 ldr r2,.L112+116
 2153 0e98 5B00     	 lsl r3,r3,#1
 2154 0e9a 9952     	 strh r1,[r3,r2]
 2155 0e9c 1CE0     	 b .L35
 2156              	.L105:
 250:../Driving_dynamics.c **** 				else if(RC_Steering < -30) NP[1 + front_or_back]--;
 2157              	 .loc 3 250 0 is_stmt 1
 2158 0e9e 3F4B     	 ldr r3,.L112+124
 2159 0ea0 1B68     	 ldr r3,[r3]
 2160 0ea2 181C     	 add r0,r3,#0
 2161 0ea4 3F49     	 ldr r1,.L112+132
 2162 0ea6 FFF7FEFF 	 bl __aeabi_fcmplt
 2163 0eaa 031E     	 sub r3,r0,#0
 2164 0eac 00D1     	 bne .L102
 2165              	.LBE2:
 2166 0eae 13E0     	 b .L35
 2167              	.L102:
 2168              	.LBB3:
 2169              	 .loc 3 250 0 is_stmt 0 discriminator 1
 2170 0eb0 1723     	 mov r3,#23
 2171 0eb2 FB18     	 add r3,r7,r3
 2172 0eb4 1B78     	 ldrb r3,[r3]
 2173 0eb6 0133     	 add r3,r3,#1
 2174 0eb8 364A     	 ldr r2,.L112+116
 2175 0eba 5900     	 lsl r1,r3,#1
 2176 0ebc 8A5A     	 ldrh r2,[r1,r2]
 2177 0ebe 92B2     	 uxth r2,r2
 2178 0ec0 013A     	 sub r2,r2,#1
 2179 0ec2 91B2     	 uxth r1,r2
 2180 0ec4 334A     	 ldr r2,.L112+116
 2181 0ec6 5B00     	 lsl r3,r3,#1
 2182 0ec8 9952     	 strh r1,[r3,r2]
 2183              	.LBE3:
 2184 0eca 05E0     	 b .L35
 2185              	.L69:
 251:../Driving_dynamics.c **** 			}
 252:../Driving_dynamics.c **** 			else NP_setting_cycel_skipper ++;
 2186              	 .loc 3 252 0 is_stmt 1
 2187 0ecc 2D4B     	 ldr r3,.L112+100
 2188 0ece 1B78     	 ldrb r3,[r3]
 2189 0ed0 0133     	 add r3,r3,#1
 2190 0ed2 DAB2     	 uxtb r2,r3
 2191 0ed4 2B4B     	 ldr r3,.L112+100
 2192 0ed6 1A70     	 strb r2,[r3]
 2193              	.L35:
 253:../Driving_dynamics.c **** 
 254:../Driving_dynamics.c **** 	}
 255:../Driving_dynamics.c ****   // set gobal vars
 256:../Driving_dynamics.c ****   Steering_Angles[0] = angle_fl;
 2194              	 .loc 3 256 0
 2195 0ed8 184B     	 ldr r3,.L112+28
 2196 0eda 1A68     	 ldr r2,[r3]
 2197 0edc 324B     	 ldr r3,.L112+136
 2198 0ede 1A60     	 str r2,[r3]
 257:../Driving_dynamics.c ****   Steering_Angles[1] = angle_fr;
 2199              	 .loc 3 257 0
 2200 0ee0 174B     	 ldr r3,.L112+32
 2201 0ee2 1A68     	 ldr r2,[r3]
 2202 0ee4 304B     	 ldr r3,.L112+136
 2203 0ee6 5A60     	 str r2,[r3,#4]
 258:../Driving_dynamics.c ****   Steering_Angles[2] = angle_rl;
 2204              	 .loc 3 258 0
 2205 0ee8 164B     	 ldr r3,.L112+36
 2206 0eea 1A68     	 ldr r2,[r3]
 2207 0eec 2E4B     	 ldr r3,.L112+136
 2208 0eee 9A60     	 str r2,[r3,#8]
 259:../Driving_dynamics.c ****   Steering_Angles[3] = angle_rr;
 2209              	 .loc 3 259 0
 2210 0ef0 154B     	 ldr r3,.L112+40
 2211 0ef2 1A68     	 ldr r2,[r3]
 2212 0ef4 2C4B     	 ldr r3,.L112+136
 2213 0ef6 DA60     	 str r2,[r3,#12]
 260:../Driving_dynamics.c **** 
 261:../Driving_dynamics.c ****   Speeds[0] = speed_fl;
 2214              	 .loc 3 261 0
 2215 0ef8 154B     	 ldr r3,.L112+48
 2216 0efa 1A68     	 ldr r2,[r3]
 2217 0efc 2B4B     	 ldr r3,.L112+140
 2218 0efe 1A60     	 str r2,[r3]
 262:../Driving_dynamics.c ****   Speeds[1] = speed_fr;
 2219              	 .loc 3 262 0
 2220 0f00 144B     	 ldr r3,.L112+52
 2221 0f02 1A68     	 ldr r2,[r3]
 2222 0f04 294B     	 ldr r3,.L112+140
 2223 0f06 5A60     	 str r2,[r3,#4]
 263:../Driving_dynamics.c ****   Speeds[2] = speed_rl;
 2224              	 .loc 3 263 0
 2225 0f08 134B     	 ldr r3,.L112+56
 2226 0f0a 1A68     	 ldr r2,[r3]
 2227 0f0c 274B     	 ldr r3,.L112+140
 2228 0f0e 9A60     	 str r2,[r3,#8]
 264:../Driving_dynamics.c ****   Speeds[3] = speed_rr;
 2229              	 .loc 3 264 0
 2230 0f10 124B     	 ldr r3,.L112+60
 2231 0f12 1A68     	 ldr r2,[r3]
 2232 0f14 254B     	 ldr r3,.L112+140
 2233 0f16 DA60     	 str r2,[r3,#12]
 265:../Driving_dynamics.c **** 
 266:../Driving_dynamics.c **** }
 2234              	 .loc 3 266 0
 2235 0f18 BD46     	 mov sp,r7
 2236 0f1a 07B0     	 add sp,sp,#28
 2237              	 
 2238 0f1c F0BD     	 pop {r4,r5,r6,r7,pc}
 2239              	.L113:
 2240 0f1e C046     	 .align 2
 2241              	.L112:
 2242 0f20 00000000 	 .word R_Turn
 2243 0f24 77BE9F1A 	 .word 446676599
 2244 0f28 2FDDC43F 	 .word 1069866287
 2245 0f2c 79E92631 	 .word 824633721
 2246 0f30 08ACDC3F 	 .word 1071426568
 2247 0f34 C7F48425 	 .word 629470407
 2248 0f38 1EA64C40 	 .word 1078765086
 2249 0f3c 00000000 	 .word angle_fl
 2250 0f40 00000000 	 .word angle_fr
 2251 0f44 00000000 	 .word angle_rl
 2252 0f48 00000000 	 .word angle_rr
 2253 0f4c 00000000 	 .word Speed_ratio
 2254 0f50 00000000 	 .word speed_fl
 2255 0f54 00000000 	 .word speed_fr
 2256 0f58 00000000 	 .word speed_rl
 2257 0f5c 00000000 	 .word speed_rr
 2258 0f60 00002040 	 .word 1075838976
 2259 0f64 00003E43 	 .word 1128136704
 2260 0f68 00003EC3 	 .word -1019346944
 2261 0f6c 85EB93C2 	 .word -1030493307
 2262 0f70 85EB9342 	 .word 1116990341
 2263 0f74 00002041 	 .word 1092616192
 2264 0f78 CDCCCCBE 	 .word -1093874483
 2265 0f7c CDCCCC3E 	 .word 1053609165
 2266 0f80 000020C1 	 .word -1054867456
 2267 0f84 00000000 	 .word NP_setting_cycel_skipper
 2268 0f88 00000000 	 .word RC_AUX1_duty
 2269 0f8c 00000000 	 .word captured_time_Speed
 2270 0f90 A0F01900 	 .word 1700000
 2271 0f94 00000000 	 .word NP
 2272 0f98 7F4F1200 	 .word 1199999
 2273 0f9c 00000000 	 .word RC_Steering
 2274 0fa0 0000F041 	 .word 1106247680
 2275 0fa4 0000F0C1 	 .word -1041235968
 2276 0fa8 00000000 	 .word Steering_Angles
 2277 0fac 00000000 	 .word Speeds
 2278              	 .cfi_endproc
 2279              	.LFE224:
 2281              	 .section .text.Trajcetory_calc,"ax",%progbits
 2282              	 .align 2
 2283              	 .global Trajcetory_calc
 2284              	 .code 16
 2285              	 .thumb_func
 2287              	Trajcetory_calc:
 2288              	.LFB225:
 267:../Driving_dynamics.c **** 
 268:../Driving_dynamics.c **** 
 269:../Driving_dynamics.c **** void Trajcetory_calc(){
 2289              	 .loc 3 269 0
 2290              	 .cfi_startproc
 2291 0000 F8B5     	 push {r3,r4,r5,r6,r7,lr}
 2292              	.LCFI15:
 2293              	 .cfi_def_cfa_offset 24
 2294              	 .cfi_offset 3,-24
 2295              	 .cfi_offset 4,-20
 2296              	 .cfi_offset 5,-16
 2297              	 .cfi_offset 6,-12
 2298              	 .cfi_offset 7,-8
 2299              	 .cfi_offset 14,-4
 2300 0002 00AF     	 add r7,sp,#0
 2301              	.LCFI16:
 2302              	 .cfi_def_cfa_register 7
 270:../Driving_dynamics.c **** 
 271:../Driving_dynamics.c **** 	avg_Speeds = average(Speeds,4);
 2303              	 .loc 3 271 0
 2304 0004 4F4B     	 ldr r3,.L123
 2305 0006 181C     	 mov r0,r3
 2306 0008 0421     	 mov r1,#4
 2307 000a FFF7FEFF 	 bl average
 2308 000e 021C     	 add r2,r0,#0
 2309 0010 4D4B     	 ldr r3,.L123+4
 2310 0012 1A60     	 str r2,[r3]
 272:../Driving_dynamics.c **** 
 273:../Driving_dynamics.c **** 	switch(Steering_mode) // options 'Front'; 'Rear'; '4_Wheel'; 'Carb'; 'Rotate'
 2311              	 .loc 3 273 0
 2312 0014 4D4B     	 ldr r3,.L123+8
 2313 0016 1B78     	 ldrb r3,[r3]
 2314 0018 DBB2     	 uxtb r3,r3
 2315 001a 052B     	 cmp r3,#5
 2316 001c 5BD8     	 bhi .L115
 2317 001e 9A00     	 lsl r2,r3,#2
 2318 0020 4B4B     	 ldr r3,.L123+12
 2319 0022 D318     	 add r3,r2,r3
 2320 0024 1B68     	 ldr r3,[r3]
 2321 0026 9F46     	 mov pc,r3
 2322              	 .section .rodata.Trajcetory_calc,"a",%progbits
 2323              	 .align 2
 2324              	.L117:
 2325 0000 D6000000 	 .word .L115
 2326 0004 E4000000 	 .word .L122
 2327 0008 E4000000 	 .word .L122
 2328 000c E4000000 	 .word .L122
 2329 0010 28000000 	 .word .L119
 2330 0014 E4000000 	 .word .L122
 2331              	 .section .text.Trajcetory_calc
 2332              	.L119:
 274:../Driving_dynamics.c **** 		{
 275:../Driving_dynamics.c **** 			case FRONT://#############################################################
 276:../Driving_dynamics.c **** 				//trajctory_x =
 277:../Driving_dynamics.c **** 				break;
 278:../Driving_dynamics.c **** 
 279:../Driving_dynamics.c **** 			case BACK:// rear #############################################################
 280:../Driving_dynamics.c **** 
 281:../Driving_dynamics.c **** 
 282:../Driving_dynamics.c **** 			case ALL_WHEEL: // 4 wheel #############################################################
 283:../Driving_dynamics.c **** 
 284:../Driving_dynamics.c **** 				break;
 285:../Driving_dynamics.c **** 
 286:../Driving_dynamics.c **** 			case CRAB:  //carb //#############################################################
 287:../Driving_dynamics.c **** 				trajctory_x = avg_Speeds * cos(Steering_Angles[0] / RAD_TO_DEG);
 2333              	 .loc 3 287 0
 2334 0028 474B     	 ldr r3,.L123+4
 2335 002a 1B68     	 ldr r3,[r3]
 2336 002c 181C     	 add r0,r3,#0
 2337 002e FFF7FEFF 	 bl __aeabi_f2d
 2338 0032 051C     	 mov r5,r0
 2339 0034 0E1C     	 mov r6,r1
 2340 0036 474B     	 ldr r3,.L123+16
 2341 0038 1B68     	 ldr r3,[r3]
 2342 003a 181C     	 add r0,r3,#0
 2343 003c FFF7FEFF 	 bl __aeabi_f2d
 2344 0040 031C     	 mov r3,r0
 2345 0042 0C1C     	 mov r4,r1
 2346 0044 181C     	 mov r0,r3
 2347 0046 211C     	 mov r1,r4
 2348 0048 434A     	 ldr r2,.L123+20
 2349 004a 444B     	 ldr r3,.L123+24
 2350 004c FFF7FEFF 	 bl __aeabi_ddiv
 2351 0050 031C     	 mov r3,r0
 2352 0052 0C1C     	 mov r4,r1
 2353 0054 181C     	 mov r0,r3
 2354 0056 211C     	 mov r1,r4
 2355 0058 FFF7FEFF 	 bl cos
 2356 005c 031C     	 mov r3,r0
 2357 005e 0C1C     	 mov r4,r1
 2358 0060 281C     	 mov r0,r5
 2359 0062 311C     	 mov r1,r6
 2360 0064 1A1C     	 mov r2,r3
 2361 0066 231C     	 mov r3,r4
 2362 0068 FFF7FEFF 	 bl __aeabi_dmul
 2363 006c 031C     	 mov r3,r0
 2364 006e 0C1C     	 mov r4,r1
 2365 0070 181C     	 mov r0,r3
 2366 0072 211C     	 mov r1,r4
 2367 0074 FFF7FEFF 	 bl __aeabi_d2f
 2368 0078 021C     	 add r2,r0,#0
 2369 007a 394B     	 ldr r3,.L123+28
 2370 007c 1A60     	 str r2,[r3]
 288:../Driving_dynamics.c **** 				trajctory_y = avg_Speeds * sin(Steering_Angles[0] / RAD_TO_DEG);
 2371              	 .loc 3 288 0
 2372 007e 324B     	 ldr r3,.L123+4
 2373 0080 1B68     	 ldr r3,[r3]
 2374 0082 181C     	 add r0,r3,#0
 2375 0084 FFF7FEFF 	 bl __aeabi_f2d
 2376 0088 051C     	 mov r5,r0
 2377 008a 0E1C     	 mov r6,r1
 2378 008c 314B     	 ldr r3,.L123+16
 2379 008e 1B68     	 ldr r3,[r3]
 2380 0090 181C     	 add r0,r3,#0
 2381 0092 FFF7FEFF 	 bl __aeabi_f2d
 2382 0096 031C     	 mov r3,r0
 2383 0098 0C1C     	 mov r4,r1
 2384 009a 181C     	 mov r0,r3
 2385 009c 211C     	 mov r1,r4
 2386 009e 2E4A     	 ldr r2,.L123+20
 2387 00a0 2E4B     	 ldr r3,.L123+24
 2388 00a2 FFF7FEFF 	 bl __aeabi_ddiv
 2389 00a6 031C     	 mov r3,r0
 2390 00a8 0C1C     	 mov r4,r1
 2391 00aa 181C     	 mov r0,r3
 2392 00ac 211C     	 mov r1,r4
 2393 00ae FFF7FEFF 	 bl sin
 2394 00b2 031C     	 mov r3,r0
 2395 00b4 0C1C     	 mov r4,r1
 2396 00b6 281C     	 mov r0,r5
 2397 00b8 311C     	 mov r1,r6
 2398 00ba 1A1C     	 mov r2,r3
 2399 00bc 231C     	 mov r3,r4
 2400 00be FFF7FEFF 	 bl __aeabi_dmul
 2401 00c2 031C     	 mov r3,r0
 2402 00c4 0C1C     	 mov r4,r1
 2403 00c6 181C     	 mov r0,r3
 2404 00c8 211C     	 mov r1,r4
 2405 00ca FFF7FEFF 	 bl __aeabi_d2f
 2406 00ce 021C     	 add r2,r0,#0
 2407 00d0 244B     	 ldr r3,.L123+32
 2408 00d2 1A60     	 str r2,[r3]
 289:../Driving_dynamics.c **** 
 290:../Driving_dynamics.c **** 
 291:../Driving_dynamics.c **** 				break;
 2409              	 .loc 3 291 0
 2410 00d4 07E0     	 b .L121
 2411              	.L115:
 292:../Driving_dynamics.c **** 
 293:../Driving_dynamics.c **** 			case ROTATE: // rotate ############################################################
 294:../Driving_dynamics.c **** 
 295:../Driving_dynamics.c **** 				break;
 296:../Driving_dynamics.c **** 
 297:../Driving_dynamics.c **** 			default :
 298:../Driving_dynamics.c **** 
 299:../Driving_dynamics.c **** 			trajctory_x = 0;
 2412              	 .loc 3 299 0
 2413 00d6 224B     	 ldr r3,.L123+28
 2414 00d8 0022     	 mov r2,#0
 2415 00da 1A60     	 str r2,[r3]
 300:../Driving_dynamics.c **** 			trajctory_y = 0;
 2416              	 .loc 3 300 0
 2417 00dc 214B     	 ldr r3,.L123+32
 2418 00de 0022     	 mov r2,#0
 2419 00e0 1A60     	 str r2,[r3]
 2420 00e2 00E0     	 b .L121
 2421              	.L122:
 277:../Driving_dynamics.c **** 
 2422              	 .loc 3 277 0
 2423 00e4 C046     	 mov r8,r8
 2424              	.L121:
 301:../Driving_dynamics.c **** 		}
 302:../Driving_dynamics.c **** 
 303:../Driving_dynamics.c **** 	//trajectory_angle = angel_of_2D_vetor_deg(Trajctory); // atan(trajctory_x / trajctory_y) / RAD_TO
 304:../Driving_dynamics.c **** 	Trajctory[0] = trajctory_x;
 2425              	 .loc 3 304 0
 2426 00e6 1E4B     	 ldr r3,.L123+28
 2427 00e8 1A68     	 ldr r2,[r3]
 2428 00ea 1F4B     	 ldr r3,.L123+36
 2429 00ec 1A60     	 str r2,[r3]
 305:../Driving_dynamics.c **** 	Trajctory[1] = trajctory_y;
 2430              	 .loc 3 305 0
 2431 00ee 1D4B     	 ldr r3,.L123+32
 2432 00f0 1A68     	 ldr r2,[r3]
 2433 00f2 1D4B     	 ldr r3,.L123+36
 2434 00f4 5A60     	 str r2,[r3,#4]
 306:../Driving_dynamics.c **** 	trajectory_angle = atan2(trajctory_y,trajctory_x) * RAD_TO_DEG;
 2435              	 .loc 3 306 0
 2436 00f6 1B4B     	 ldr r3,.L123+32
 2437 00f8 1B68     	 ldr r3,[r3]
 2438 00fa 181C     	 add r0,r3,#0
 2439 00fc FFF7FEFF 	 bl __aeabi_f2d
 2440 0100 051C     	 mov r5,r0
 2441 0102 0E1C     	 mov r6,r1
 2442 0104 164B     	 ldr r3,.L123+28
 2443 0106 1B68     	 ldr r3,[r3]
 2444 0108 181C     	 add r0,r3,#0
 2445 010a FFF7FEFF 	 bl __aeabi_f2d
 2446 010e 031C     	 mov r3,r0
 2447 0110 0C1C     	 mov r4,r1
 2448 0112 281C     	 mov r0,r5
 2449 0114 311C     	 mov r1,r6
 2450 0116 1A1C     	 mov r2,r3
 2451 0118 231C     	 mov r3,r4
 2452 011a FFF7FEFF 	 bl atan2
 2453 011e 031C     	 mov r3,r0
 2454 0120 0C1C     	 mov r4,r1
 2455 0122 181C     	 mov r0,r3
 2456 0124 211C     	 mov r1,r4
 2457 0126 0C4A     	 ldr r2,.L123+20
 2458 0128 0C4B     	 ldr r3,.L123+24
 2459 012a FFF7FEFF 	 bl __aeabi_dmul
 2460 012e 031C     	 mov r3,r0
 2461 0130 0C1C     	 mov r4,r1
 2462 0132 181C     	 mov r0,r3
 2463 0134 211C     	 mov r1,r4
 2464 0136 FFF7FEFF 	 bl __aeabi_d2f
 2465 013a 021C     	 add r2,r0,#0
 2466 013c 0B4B     	 ldr r3,.L123+40
 2467 013e 1A60     	 str r2,[r3]
 307:../Driving_dynamics.c **** }
 2468              	 .loc 3 307 0
 2469 0140 BD46     	 mov sp,r7
 2470              	 
 2471 0142 F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 2472              	.L124:
 2473              	 .align 2
 2474              	.L123:
 2475 0144 00000000 	 .word Speeds
 2476 0148 00000000 	 .word avg_Speeds
 2477 014c 00000000 	 .word Steering_mode
 2478 0150 00000000 	 .word .L117
 2479 0154 00000000 	 .word Steering_Angles
 2480 0158 C7F48425 	 .word 629470407
 2481 015c 1EA64C40 	 .word 1078765086
 2482 0160 00000000 	 .word trajctory_x
 2483 0164 00000000 	 .word trajctory_y
 2484 0168 00000000 	 .word Trajctory
 2485 016c 00000000 	 .word trajectory_angle
 2486              	 .cfi_endproc
 2487              	.LFE225:
 2489              	 .section .text.mode_led,"ax",%progbits
 2490              	 .align 2
 2491              	 .global mode_led
 2492              	 .code 16
 2493              	 .thumb_func
 2495              	mode_led:
 2496              	.LFB226:
 308:../Driving_dynamics.c **** 
 309:../Driving_dynamics.c **** 
 310:../Driving_dynamics.c **** 
 311:../Driving_dynamics.c **** void mode_led(uint8_t var){
 2497              	 .loc 3 311 0
 2498              	 .cfi_startproc
 2499 0000 80B5     	 push {r7,lr}
 2500              	.LCFI17:
 2501              	 .cfi_def_cfa_offset 8
 2502              	 .cfi_offset 7,-8
 2503              	 .cfi_offset 14,-4
 2504 0002 82B0     	 sub sp,sp,#8
 2505              	.LCFI18:
 2506              	 .cfi_def_cfa_offset 16
 2507 0004 00AF     	 add r7,sp,#0
 2508              	.LCFI19:
 2509              	 .cfi_def_cfa_register 7
 2510 0006 021C     	 mov r2,r0
 2511 0008 FB1D     	 add r3,r7,#7
 2512 000a 1A70     	 strb r2,[r3]
 312:../Driving_dynamics.c **** 	if(CHECK_BIT(var,0)){
 2513              	 .loc 3 312 0
 2514 000c FB1D     	 add r3,r7,#7
 2515 000e 1B78     	 ldrb r3,[r3]
 2516 0010 0122     	 mov r2,#1
 2517 0012 1340     	 and r3,r2
 2518 0014 04D0     	 beq .L126
 313:../Driving_dynamics.c **** 		DIGITAL_IO_SetOutputLow(&MODE_001);
 2519              	 .loc 3 313 0
 2520 0016 174B     	 ldr r3,.L132
 2521 0018 181C     	 mov r0,r3
 2522 001a FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 2523 001e 03E0     	 b .L127
 2524              	.L126:
 314:../Driving_dynamics.c **** 	}
 315:../Driving_dynamics.c **** 	else{
 316:../Driving_dynamics.c **** 		DIGITAL_IO_SetOutputHigh(&MODE_001);
 2525              	 .loc 3 316 0
 2526 0020 144B     	 ldr r3,.L132
 2527 0022 181C     	 mov r0,r3
 2528 0024 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 2529              	.L127:
 317:../Driving_dynamics.c **** 	}
 318:../Driving_dynamics.c **** 
 319:../Driving_dynamics.c **** 	if(CHECK_BIT(var,1)){
 2530              	 .loc 3 319 0
 2531 0028 FB1D     	 add r3,r7,#7
 2532 002a 1B78     	 ldrb r3,[r3]
 2533 002c 5B08     	 lsr r3,r3,#1
 2534 002e DBB2     	 uxtb r3,r3
 2535 0030 1A1C     	 mov r2,r3
 2536 0032 0123     	 mov r3,#1
 2537 0034 1340     	 and r3,r2
 2538 0036 04D0     	 beq .L128
 320:../Driving_dynamics.c **** 		DIGITAL_IO_SetOutputLow(&MODE_010);
 2539              	 .loc 3 320 0
 2540 0038 0F4B     	 ldr r3,.L132+4
 2541 003a 181C     	 mov r0,r3
 2542 003c FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 2543 0040 03E0     	 b .L129
 2544              	.L128:
 321:../Driving_dynamics.c **** 	}
 322:../Driving_dynamics.c **** 	else{
 323:../Driving_dynamics.c **** 		DIGITAL_IO_SetOutputHigh(&MODE_010);
 2545              	 .loc 3 323 0
 2546 0042 0D4B     	 ldr r3,.L132+4
 2547 0044 181C     	 mov r0,r3
 2548 0046 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 2549              	.L129:
 324:../Driving_dynamics.c **** 	}
 325:../Driving_dynamics.c **** 
 326:../Driving_dynamics.c **** 	if(CHECK_BIT(var,2)){
 2550              	 .loc 3 326 0
 2551 004a FB1D     	 add r3,r7,#7
 2552 004c 1B78     	 ldrb r3,[r3]
 2553 004e 9B08     	 lsr r3,r3,#2
 2554 0050 DBB2     	 uxtb r3,r3
 2555 0052 1A1C     	 mov r2,r3
 2556 0054 0123     	 mov r3,#1
 2557 0056 1340     	 and r3,r2
 2558 0058 04D0     	 beq .L130
 327:../Driving_dynamics.c **** 		DIGITAL_IO_SetOutputLow(&MODE_100);
 2559              	 .loc 3 327 0
 2560 005a 084B     	 ldr r3,.L132+8
 2561 005c 181C     	 mov r0,r3
 2562 005e FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 2563 0062 03E0     	 b .L125
 2564              	.L130:
 328:../Driving_dynamics.c **** 	}
 329:../Driving_dynamics.c **** 	else{
 330:../Driving_dynamics.c **** 		DIGITAL_IO_SetOutputHigh(&MODE_100);
 2565              	 .loc 3 330 0
 2566 0064 054B     	 ldr r3,.L132+8
 2567 0066 181C     	 mov r0,r3
 2568 0068 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 2569              	.L125:
 331:../Driving_dynamics.c **** 	}
 332:../Driving_dynamics.c **** }
 2570              	 .loc 3 332 0
 2571 006c BD46     	 mov sp,r7
 2572 006e 02B0     	 add sp,sp,#8
 2573              	 
 2574 0070 80BD     	 pop {r7,pc}
 2575              	.L133:
 2576 0072 C046     	 .align 2
 2577              	.L132:
 2578 0074 00000000 	 .word MODE_001
 2579 0078 00000000 	 .word MODE_010
 2580 007c 00000000 	 .word MODE_100
 2581              	 .cfi_endproc
 2582              	.LFE226:
 2584              	 .text
 2585              	.Letext0:
 2586              	 .file 4 "c:\\dave\\dave-ide-4.4.2-64bit\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 2587              	 .file 5 "c:\\dave\\dave-ide-4.4.2-64bit\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 2588              	 .file 6 "../Globals.h"
 2589              	 .file 7 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc/xmc1_gpio.h"
 2590              	 .file 8 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/CMSIS/Include/cmsis_gcc.h"
 2591              	 .file 9 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/CMSIS/Infineon/XMC1400_series/Include/system_XMC1400.h"
 2592              	 .file 10 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO/digital_io_extern.h"
 2593              	 .file 11 "../RC_data_recive.h"
 2594              	 .file 12 "../Steering_Servos.h"
DEFINED SYMBOLS
                            *ABS*:00000000 Driving_dynamics.c
                            *COM*:00000001 RC_controll
    {standard input}:19     .text.XMC_GPIO_SetOutputHigh:00000000 $t
    {standard input}:23     .text.XMC_GPIO_SetOutputHigh:00000000 XMC_GPIO_SetOutputHigh
    {standard input}:59     .text.XMC_GPIO_SetOutputLow:00000000 $t
    {standard input}:63     .text.XMC_GPIO_SetOutputLow:00000000 XMC_GPIO_SetOutputLow
    {standard input}:99     .text.DIGITAL_IO_SetOutputHigh:00000000 $t
    {standard input}:103    .text.DIGITAL_IO_SetOutputHigh:00000000 DIGITAL_IO_SetOutputHigh
    {standard input}:137    .text.DIGITAL_IO_SetOutputLow:00000000 $t
    {standard input}:141    .text.DIGITAL_IO_SetOutputLow:00000000 DIGITAL_IO_SetOutputLow
    {standard input}:178    .bss.R_Turn:00000000 R_Turn
    {standard input}:175    .bss.R_Turn:00000000 $d
    {standard input}:185    .bss.Speed_ratio:00000000 Speed_ratio
    {standard input}:182    .bss.Speed_ratio:00000000 $d
    {standard input}:192    .bss.speed_fl:00000000 speed_fl
    {standard input}:189    .bss.speed_fl:00000000 $d
    {standard input}:199    .bss.speed_fr:00000000 speed_fr
    {standard input}:196    .bss.speed_fr:00000000 $d
    {standard input}:206    .bss.speed_rl:00000000 speed_rl
    {standard input}:203    .bss.speed_rl:00000000 $d
    {standard input}:213    .bss.speed_rr:00000000 speed_rr
    {standard input}:210    .bss.speed_rr:00000000 $d
    {standard input}:220    .bss.angle_fl:00000000 angle_fl
    {standard input}:217    .bss.angle_fl:00000000 $d
    {standard input}:227    .bss.angle_fr:00000000 angle_fr
    {standard input}:224    .bss.angle_fr:00000000 $d
    {standard input}:234    .bss.angle_rl:00000000 angle_rl
    {standard input}:231    .bss.angle_rl:00000000 $d
    {standard input}:241    .bss.angle_rr:00000000 angle_rr
    {standard input}:238    .bss.angle_rr:00000000 $d
    {standard input}:248    .bss.trajctory_x:00000000 trajctory_x
    {standard input}:245    .bss.trajctory_x:00000000 $d
    {standard input}:255    .bss.trajctory_y:00000000 trajctory_y
    {standard input}:252    .bss.trajctory_y:00000000 $d
    {standard input}:262    .bss.avg_Speeds:00000000 avg_Speeds
    {standard input}:259    .bss.avg_Speeds:00000000 $d
    {standard input}:268    .bss.NP_setting_cycel_skipper:00000000 NP_setting_cycel_skipper
    {standard input}:269    .bss.NP_setting_cycel_skipper:00000000 $d
    {standard input}:283    .text.Steering_Function:00000000 $t
    {standard input}:288    .text.Steering_Function:00000000 Steering_Function
    {standard input}:432    .rodata.Steering_Function:00000000 $d
    {standard input}:736    .text.Steering_Function:00000348 $d
    {standard input}:766    .text.Steering_Function:000003b8 $t
    {standard input}:1205   .text.Steering_Function:00000738 $d
    {standard input}:1235   .text.Steering_Function:000007a8 $t
    {standard input}:1692   .text.Steering_Function:00000b44 $d
    {standard input}:1724   .text.Steering_Function:00000bbc $t
    {standard input}:2242   .text.Steering_Function:00000f20 $d
    {standard input}:2282   .text.Trajcetory_calc:00000000 $t
    {standard input}:2287   .text.Trajcetory_calc:00000000 Trajcetory_calc
    {standard input}:2323   .rodata.Trajcetory_calc:00000000 $d
    {standard input}:2475   .text.Trajcetory_calc:00000144 $d
    {standard input}:2490   .text.mode_led:00000000 $t
    {standard input}:2495   .text.mode_led:00000000 mode_led
    {standard input}:2578   .text.mode_led:00000074 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__aeabi_fcmpgt
__aeabi_fcmplt
__aeabi_f2d
__aeabi_dcmplt
__aeabi_dcmpgt
__aeabi_ddiv
__aeabi_d2f
__aeabi_dadd
__aeabi_dmul
__aeabi_dsub
__aeabi_fdiv
__aeabi_fmul
within_MAX_MIN
tan
atan
New_Input
RC_AUX1_duty
captured_time_Speed
NP
RC_Steering
Steering_Angles
Speeds
average
cos
sin
atan2
Steering_mode
Trajctory
trajectory_angle
MODE_001
MODE_010
MODE_100
