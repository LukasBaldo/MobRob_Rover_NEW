   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,6
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "main.c"
  14              	 .text
  15              	.Ltext0:
  16              	 .cfi_sections .debug_frame
  17              	 .section .text.XMC_GPIO_SetOutputHigh,"ax",%progbits
  18              	 .align 2
  19              	 .code 16
  20              	 .thumb_func
  22              	XMC_GPIO_SetOutputHigh:
  23              	.LFB122:
  24              	 .file 1 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc/xmc_gpio.h"
   1:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
   2:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @file xmc_gpio.h
   3:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @date 2015-06-20
   4:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   5:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @cond
   6:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *****************************************************************************
   7:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   9:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * All rights reserved.
  11:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  12:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  14:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Permission is hereby granted, free of charge, to any person or organization
  15:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * obtaining a copy of the software and accompanying documentation covered by
  16:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * do so, all subject to the following:
  20:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  21:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * The copyright notices in the Software and this entire statement, including
  22:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * the above license grant, this restriction and the following disclaimer,
  23:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * must be included in all copies of the Software, in whole or in part, and
  24:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * all derivative works of the Software, unless such copies or derivative
  25:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * works are solely in the form of machine-executable object code generated by
  26:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * a source language processor.
  27:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  28:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * DEALINGS IN THE SOFTWARE.
  35:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  36:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * To improve the quality of the software, users are encouraged to share
  37:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * at XMCSupport@infineon.com.
  39:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *****************************************************************************
  40:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  41:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Change History
  42:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * --------------
  43:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  44:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-02-20:
  45:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Initial draft<br>
  46:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Documentation improved <br>
  47:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  48:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-06-20:
  49:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  50:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  51:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @endcond
  52:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  53:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  54:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
  55:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #ifndef XMC_GPIO_H
  56:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_H
  57:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
  58:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  59:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * HEADER FILES
  60:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  61:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
  62:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc_common.h"
  63:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
  64:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  65:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup XMClib XMC Peripheral Library
  66:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @{
  67:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  68:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
  69:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  70:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup GPIO
  71:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @brief General Purpose Input Output (GPIO) driver for the XMC microcontroller family.
  72:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  73:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * GPIO driver provide a generic and very flexible software interface for all standard digital I/O 
  74:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Each port slice has individual interfaces for the operation as General Purpose I/O and it furthe
  75:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * connectivity to the on-chip periphery and the control for the pad characteristics.
  76:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  77:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * The driver is divided into Input and Output mode.
  78:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  79:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Input mode features:
  80:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Configuration structure XMC_GPIO_CONFIG_t and initialization function XMC_GPIO_Init()
  81:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of weak pull-up or pull-down device. Configuration structure XMC_GPIO_MO
  82:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
  83:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of input hysteresis. XMC_GPIO_SetInputHysteresis()
  84:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  85:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  86:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  87:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Output mode features:
  88:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of push pull/open drain and Alternate output. Configuration structure XM
  89:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
  90:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of pad driver strength. Configuration structure XMC_GPIO_OUTPUT_STRENGTH
  91:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  92:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  93:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of initial output level. Configuration structure XMC_GPIO_OUTPUT_LEVEL_t
  94:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  95:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *@{
  96:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  97:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
  98:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  99:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * MACROS
 100:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 101:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 102:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Pos PORT0_IOCR0_PC0_Pos
 103:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Msk PORT0_IOCR0_PC0_Msk
 104:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 105:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Size 				(8U)
 106:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 107:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 108:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_OUTPUT_LEVEL(level) ((level == XMC_GPIO_OUTPUT_LEVEL_LOW) || \
 109:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****                                             (level == XMC_GPIO_OUTPUT_LEVEL_HIGH))
 110:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 111:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_HWCTRL(hwctrl) ((hwctrl == XMC_GPIO_HWCTRL_DISABLED) || \
 112:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL1) || \
 113:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL2))
 114:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 115:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 116:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * ENUMS
 117:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 118:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 119:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 120:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 121:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines output level of a pin. Use type \a XMC_GPIO_OUTPUT_LEVEL_t for this enum.
 122:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 123:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_OUTPUT_LEVEL
 124:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** {
 125:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_LOW  = 0x10000U, /**<  Reset bit */
 126:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_HIGH = 0x1U, 	/**< Set bit  */
 127:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_OUTPUT_LEVEL_t;
 128:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 129:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 130:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines direct hardware control characteristics of the pin . Use type \a XMC_GPIO_HWCTRL_t for t
 131:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 132:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_HWCTRL
 133:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** {
 134:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_DISABLED     = 0x0U, /**<  Software control only */
 135:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL1  = 0x1U, /**<  HWI0/HWO0 control path can override the software confi
 136:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL2  = 0x2U  /**<  HWI1/HWO1 control path can override the software confi
 137:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_HWCTRL_t;
 138:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 139:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 140:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * DEVICE FAMILY EXTENSIONS
 141:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 142:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 143:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #if UC_FAMILY == XMC1
 144:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc1_gpio.h"
 145:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #elif UC_FAMILY == XMC4
 146:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc4_gpio.h"
 147:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #else
 148:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #error "xmc_gpio.h: family device not supported"
 149:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 150:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 151:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 152:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * API PROTOTYPES
 153:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 154:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 155:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #ifdef __cplusplus
 156:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** extern "C" {
 157:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 158:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 159:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 160:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 161:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	  Constant pointer pointing to GPIO port, to access port registers like Pn_OUT,Pn_O
 162:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	  Port pin number.
 163:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  config GPIO configuration data structure. Refer data structure @ref XMC_GPIO_CONFIG_t fo
 164:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 165:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 166:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 167:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 168:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
 169:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,hysteresis, push pull
 170:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for a selected \a po
 171:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \a config provides selected I/O settings. It configures hardware registers Pn_IOCR,Pn_OUT, Pn_OM
 172:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 173:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
 174:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,push pull /open drain
 175:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for selected \a port
 176:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * It configures hardware registers Pn_IOCR,Pn_OUT,Pn_OMR,Pn_PDISC and Pn_PDR.\n
 177:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 178:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 179:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 180:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 181:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 182:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 183:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * This API is called in definition of DAVE_init by code generation and therefore should not be exp
 184:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * for the normal operation. Use other APIs only after DAVE_init is called successfully (returns DA
 185:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 186:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 187:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 188:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 189:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 190:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_Init(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_CONFIG_t *const c
 191:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 192:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 193:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 194:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	Constant pointer pointing to GPIO port, to access hardware register Pn_IOCR.
 195:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 196:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  mode input / output functionality selection. Refer @ref XMC_GPIO_MODE_t for valid values
 197:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 198:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 199:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 200:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 201:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets digital input and output driver functionality and characteristics of a GPIO port pin. It co
 202:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * registers Pn_IOCR. \a mode is initially configured during initialization in XMC_GPIO_Init(). Cal
 203:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * the port direction functionality as needed later in the program.
 204:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 205:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 206:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 207:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 208:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 209:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 210:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_SetMode(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_MODE_t mode);
 211:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 212:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 213:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 214:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 215:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	 Constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 216:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	 Port pin number.
 217:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  level output level selection. Refer @ref XMC_GPIO_OUTPUT_LEVEL_t for valid values.
 218:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 219:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 220:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 221:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 222:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Set port pin output level to high or low.It configures hardware registers Pn_OMR.\a level is ini
 223:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * configured during initialization in XMC_GPIO_Init(). Call this API to alter output level as need
 224:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 225:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 226:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 227:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 228:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 229:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 230:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 231:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 232:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 233:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 234:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLevel(XMC_GPIO_PORT_t *const port, const uint8_t pin, const 
 235:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** {
 236:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 237:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid output level", XMC_GPIO_CHECK_OUTPUT_LEVEL(level));
 238:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 239:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)level << pin;
 240:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** }
 241:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 242:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 243:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 244:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 245:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 246:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 247:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 248:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 249:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 250:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *  Sets port pin output to high. It configures hardware registers Pn_OMR.
 251:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 252:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *  \par<b>Related APIs:</b><BR>
 253:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputLow()
 254:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 255:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 256:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().\n
 257:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 258:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 259:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 260:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 261:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputHigh(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 262:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** {
  25              	 .loc 1 262 0
  26              	 .cfi_startproc
  27 0000 80B5     	 push {r7,lr}
  28              	.LCFI0:
  29              	 .cfi_def_cfa_offset 8
  30              	 .cfi_offset 7,-8
  31              	 .cfi_offset 14,-4
  32 0002 82B0     	 sub sp,sp,#8
  33              	.LCFI1:
  34              	 .cfi_def_cfa_offset 16
  35 0004 00AF     	 add r7,sp,#0
  36              	.LCFI2:
  37              	 .cfi_def_cfa_register 7
  38 0006 7860     	 str r0,[r7,#4]
  39 0008 0A1C     	 mov r2,r1
  40 000a FB1C     	 add r3,r7,#3
  41 000c 1A70     	 strb r2,[r3]
 263:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputHigh: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 264:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 265:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)0x1U << pin;
  42              	 .loc 1 265 0
  43 000e FB1C     	 add r3,r7,#3
  44 0010 1B78     	 ldrb r3,[r3]
  45 0012 0122     	 mov r2,#1
  46 0014 9A40     	 lsl r2,r2,r3
  47 0016 7B68     	 ldr r3,[r7,#4]
  48 0018 5A60     	 str r2,[r3,#4]
 266:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** }
  49              	 .loc 1 266 0
  50 001a BD46     	 mov sp,r7
  51 001c 02B0     	 add sp,sp,#8
  52              	 
  53 001e 80BD     	 pop {r7,pc}
  54              	 .cfi_endproc
  55              	.LFE122:
  57              	 .section .text.XMC_GPIO_SetOutputLow,"ax",%progbits
  58              	 .align 2
  59              	 .code 16
  60              	 .thumb_func
  62              	XMC_GPIO_SetOutputLow:
  63              	.LFB123:
 267:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 268:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 269:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 270:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 271:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	port pin number.
 272:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 273:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return  None
 274:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 275:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Description:</b><br>
 276:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets port pin output to low. It configures hardware registers Pn_OMR.\n
 277:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 278:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>>
 279:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh()
 280:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 281:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Note:</b><br>
 282:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 283:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 284:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 285:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 286:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 287:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLow(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 288:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** {
  64              	 .loc 1 288 0
  65              	 .cfi_startproc
  66 0000 80B5     	 push {r7,lr}
  67              	.LCFI3:
  68              	 .cfi_def_cfa_offset 8
  69              	 .cfi_offset 7,-8
  70              	 .cfi_offset 14,-4
  71 0002 82B0     	 sub sp,sp,#8
  72              	.LCFI4:
  73              	 .cfi_def_cfa_offset 16
  74 0004 00AF     	 add r7,sp,#0
  75              	.LCFI5:
  76              	 .cfi_def_cfa_register 7
  77 0006 7860     	 str r0,[r7,#4]
  78 0008 0A1C     	 mov r2,r1
  79 000a FB1C     	 add r3,r7,#3
  80 000c 1A70     	 strb r2,[r3]
 289:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLow: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 290:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 291:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10000U << pin;
  81              	 .loc 1 291 0
  82 000e FB1C     	 add r3,r7,#3
  83 0010 1B78     	 ldrb r3,[r3]
  84 0012 8022     	 mov r2,#128
  85 0014 5202     	 lsl r2,r2,#9
  86 0016 9A40     	 lsl r2,r2,r3
  87 0018 7B68     	 ldr r3,[r7,#4]
  88 001a 5A60     	 str r2,[r3,#4]
 292:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** }
  89              	 .loc 1 292 0
  90 001c BD46     	 mov sp,r7
  91 001e 02B0     	 add sp,sp,#8
  92              	 
  93 0020 80BD     	 pop {r7,pc}
  94              	 .cfi_endproc
  95              	.LFE123:
  97 0022 C046     	 .section .text.XMC_GPIO_GetInput,"ax",%progbits
  98              	 .align 2
  99              	 .code 16
 100              	 .thumb_func
 102              	XMC_GPIO_GetInput:
 103              	.LFB125:
 293:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 294:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 295:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 296:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 297:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param pin  port pin number.
 298:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 299:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 300:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 301:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 302:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Configures port pin output to Toggle. It configures hardware registers Pn_OMR.
 303:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 304:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 305:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 306:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 307:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 308:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode(). Regis
 309:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * and does not contain any flip-flop. A read action delivers the value of 0.
 310:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 311:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 312:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 313:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_ToggleOutput(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 314:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** {
 315:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_ToggleOutput: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 316:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 317:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10001U << pin;
 318:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** }
 319:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 320:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 321:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 322:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param port constant pointer pointing to GPIO port, to access hardware register Pn_IN.
 323:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param pin  Port pin number.
 324:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 325:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return uint32_t pin logic level status.
 326:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 327:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Description:</b><br>
 328:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Reads the Pn_IN register and returns the current logical value at the GPIO pin.
 329:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 330:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 331:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * None
 332:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 333:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 334:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to input mode using XMC_GPIO_SetMode().
 335:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 336:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 337:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 338:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE uint32_t XMC_GPIO_GetInput(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 339:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** {
 104              	 .loc 1 339 0
 105              	 .cfi_startproc
 106 0000 80B5     	 push {r7,lr}
 107              	.LCFI6:
 108              	 .cfi_def_cfa_offset 8
 109              	 .cfi_offset 7,-8
 110              	 .cfi_offset 14,-4
 111 0002 82B0     	 sub sp,sp,#8
 112              	.LCFI7:
 113              	 .cfi_def_cfa_offset 16
 114 0004 00AF     	 add r7,sp,#0
 115              	.LCFI8:
 116              	 .cfi_def_cfa_register 7
 117 0006 7860     	 str r0,[r7,#4]
 118 0008 0A1C     	 mov r2,r1
 119 000a FB1C     	 add r3,r7,#3
 120 000c 1A70     	 strb r2,[r3]
 340:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_GetInput: Invalid port", XMC_GPIO_CHECK_PORT(port));
 341:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 342:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   return (((port->IN) >> pin) & 0x1U);
 121              	 .loc 1 342 0
 122 000e 7B68     	 ldr r3,[r7,#4]
 123 0010 5A6A     	 ldr r2,[r3,#36]
 124 0012 FB1C     	 add r3,r7,#3
 125 0014 1B78     	 ldrb r3,[r3]
 126 0016 DA40     	 lsr r2,r2,r3
 127 0018 131C     	 mov r3,r2
 128 001a 0122     	 mov r2,#1
 129 001c 1340     	 and r3,r2
 343:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** }
 130              	 .loc 1 343 0
 131 001e 181C     	 mov r0,r3
 132 0020 BD46     	 mov sp,r7
 133 0022 02B0     	 add sp,sp,#8
 134              	 
 135 0024 80BD     	 pop {r7,pc}
 136              	 .cfi_endproc
 137              	.LFE125:
 139 0026 C046     	 .section .text.DIGITAL_IO_SetOutputHigh,"ax",%progbits
 140              	 .align 2
 141              	 .code 16
 142              	 .thumb_func
 144              	DIGITAL_IO_SetOutputHigh:
 145              	.LFB195:
 146              	 .file 2 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO/digital_io.h"
   1:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /*
   2:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   3:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @file digital_io.h
   4:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @date 2021-01-08
   5:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   6:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * NOTE:
   7:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   8:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   9:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @cond
  10:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  11:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DIGITAL_IO v4.0.18 - The DIGITAL_IO APP is used to configure a port pin as digital Input/Output.
  12:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  13:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  14:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * All rights reserved.
  15:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  16:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  17:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * following conditions are met:
  18:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  19:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  20:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   disclaimer.
  21:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  22:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  23:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  24:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  25:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  26:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   products derived from this software without specific prior written permission.
  27:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  28:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  29:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  30:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  31:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  32:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  33:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  34:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  36:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  37:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * with Infineon Technologies AG (dave@infineon.com).
  38:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  39:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  40:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Change History
  41:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * --------------
  42:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  43:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-02-16
  44:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Initial version
  45:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  46:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-04-22
  47:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - XMC_ASSERT is added in static inline functions.<br>
  48:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  49:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-06-20
  50:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Version check added for XMCLib dependency.<br>
  51:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  52:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-12-22
  53:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Added hardware controlled IO feature.
  54:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2016-07-08:
  55:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Fixed incorrect case for an included header.<br>
  56:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2021-01-08:
  57:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Modified check for minimum XMCLib version
  58:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  59:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @endcond
  60:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  61:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  */
  62:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  63:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
  64:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * HEADER FILES
  65:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  66:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  67:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #ifndef DIGITAL_IO_H
  68:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #define DIGITAL_IO_H
  69:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  70:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #include "xmc_gpio.h"
  71:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #include "DAVE_Common.h"
  72:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #include "digital_io_conf.h"
  73:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  74:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
  75:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * MACROS
  76:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  77:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #define DIGITAL_IO_XMC_LIB_MAJOR_VERSION 2
  78:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #define DIGITAL_IO_XMC_LIB_MINOR_VERSION 0
  79:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #define DIGITAL_IO_XMC_LIB_PATCH_VERSION 0
  80:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  81:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #if !((XMC_LIB_MAJOR_VERSION > DIGITAL_IO_XMC_LIB_MAJOR_VERSION) ||\
  82:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****       ((XMC_LIB_MAJOR_VERSION == DIGITAL_IO_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION > DIGI
  83:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****       ((XMC_LIB_MAJOR_VERSION == DIGITAL_IO_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION == DIG
  84:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #error "DIGITAL_IO requires XMC Peripheral Library v2.0.0 or higher"
  85:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #endif
  86:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  87:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  /*************************************************************************************************
  88:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * ENUMS
  89:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  90:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  91:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
  92:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_enumerations
  93:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
  94:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
  95:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  96:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
  97:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Initialization status of DIGITAL_IO APP.
  98:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
  99:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** typedef enum DIGITAL_IO_STATUS
 100:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 101:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   DIGITAL_IO_STATUS_OK = 0U,/**< 0=Status OK */
 102:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   DIGITAL_IO_STATUS_FAILURE = 1U/**< 1=Status Failed */
 103:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** } DIGITAL_IO_STATUS_t;
 104:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 105:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 106:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @}
 107:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 108:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 109:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
 110:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DATA STRUCTURES
 111:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
 112:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 113:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_datastructures
 114:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
 115:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 116:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 117:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 118:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Initialization data structure of DIGITAL_IO APP
 119:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 120:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** typedef struct DIGITAL_IO
 121:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 122:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_PORT_t *const gpio_port;             /**< port number */
 123:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   const XMC_GPIO_CONFIG_t gpio_config;          /**< mode, initial output level and pad driver stre
 124:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   const uint8_t gpio_pin;                       /**< pin number */
 125:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   const XMC_GPIO_HWCTRL_t hwctrl;               /**< Hardware port control */
 126:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** } DIGITAL_IO_t;
 127:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 128:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 129:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 130:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @}
 131:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 132:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 133:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 134:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
 135:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * API Prototypes
 136:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
 137:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 138:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 139:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #ifdef __cplusplus
 140:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** extern "C" {
 141:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #endif
 142:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 143:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 144:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_apidoc
 145:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
 146:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 147:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 148:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 149:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 150:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 151:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Get DIGITAL_IO APP version
 152:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return DAVE_APP_VERSION_t APP version information (major, minor and patch number)
 153:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 154:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description: </b><br>
 155:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * The function can be used to check application software compatibility with a
 156:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * specific version of the APP.
 157:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 158:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 159:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 160:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 161:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include "DAVE.h"
 162:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 163:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 164:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 165:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t init_status;
 166:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_APP_VERSION_t version;
 167:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 168:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   // Initialize DIGITAL_IO APP:
 169:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   // DIGITAL_IO_Init() is called from within DAVE_Init().
 170:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   init_status = DAVE_Init();
 171:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(init_status == DAVE_STATUS_SUCCESS)
 172:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 173:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     version = DIGITAL_IO_GetAppVersion();
 174:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     if (version.major != 4U) {
 175:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // Probably, not the right version.
 176:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 177:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 178:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 179:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // More code here
 180:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1) {
 181:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 182:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 183:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     return (1);
 184:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  }
 185:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @endcode<BR>
 186:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 187:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 188:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** DAVE_APP_VERSION_t DIGITAL_IO_GetAppVersion(void);
 189:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 190:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 191:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 192:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to initialize the port pin as per UI settings.
 193:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 194:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return DIGITAL_IO_STATUS_t DIGITAL_IO APP status. Refer @ref DIGITAL_IO_STATUS_t structure for d
 195:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 196:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 197:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function initializes GPIO port registers IOCR,PDISC,OMR,PDR/PHCR to configure pin direction,
 198:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * and pad driver strength/hysteresis.
 199:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 200:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 201:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * None
 202:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 203:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 204:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 205:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include "DAVE.h" //Declarations from DAVE Code Generation (includes SFR declaration)
 206:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 207:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 208:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 209:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 210:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 211:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 212:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 213:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 214:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 215:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 216:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 217:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 218:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1U)
 219:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 220:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 221:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 222:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 223:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 224:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 225:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 226:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return 1U;
 227:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  }
 228:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 229:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 230:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 231:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** DIGITAL_IO_STATUS_t DIGITAL_IO_Init(const DIGITAL_IO_t *const handler);
 232:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 233:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 234:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 235:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to set port pin high.
 236:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 237:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return None
 238:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 239:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 240:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to make port pin to high level
 241:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 242:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 243:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  DIGITAL_IO_SetOutputLow()
 244:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 245:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 246:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 247:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include "DAVE.h" //Declarations from DAVE Code Generation (includes SFR declaration)
 248:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 249:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 250:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 251:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 252:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 253:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 254:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 255:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 256:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 257:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 258:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 259:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 260:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1U)
 261:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 262:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 263:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 264:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 265:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DIGITAL_IO_SetOutputHigh(&DIGITAL_IO_0);
 266:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 267:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 268:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // Add application code here
 269:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 270:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 271:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 272:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 273:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 274:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 275:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 276:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_SetOutputHigh(const DIGITAL_IO_t *const handler)
 277:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 147              	 .loc 2 277 0
 148              	 .cfi_startproc
 149 0000 80B5     	 push {r7,lr}
 150              	.LCFI9:
 151              	 .cfi_def_cfa_offset 8
 152              	 .cfi_offset 7,-8
 153              	 .cfi_offset 14,-4
 154 0002 82B0     	 sub sp,sp,#8
 155              	.LCFI10:
 156              	 .cfi_def_cfa_offset 16
 157 0004 00AF     	 add r7,sp,#0
 158              	.LCFI11:
 159              	 .cfi_def_cfa_register 7
 160 0006 7860     	 str r0,[r7,#4]
 278:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_SetOutputHigh: handler null pointer", handler != NULL);
 279:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_SetOutputHigh(handler->gpio_port, handler->gpio_pin);
 161              	 .loc 2 279 0
 162 0008 7B68     	 ldr r3,[r7,#4]
 163 000a 1A68     	 ldr r2,[r3]
 164 000c 7B68     	 ldr r3,[r7,#4]
 165 000e 1B7B     	 ldrb r3,[r3,#12]
 166 0010 101C     	 mov r0,r2
 167 0012 191C     	 mov r1,r3
 168 0014 FFF7FEFF 	 bl XMC_GPIO_SetOutputHigh
 280:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 169              	 .loc 2 280 0
 170 0018 BD46     	 mov sp,r7
 171 001a 02B0     	 add sp,sp,#8
 172              	 
 173 001c 80BD     	 pop {r7,pc}
 174              	 .cfi_endproc
 175              	.LFE195:
 177 001e C046     	 .section .text.DIGITAL_IO_SetOutputLow,"ax",%progbits
 178              	 .align 2
 179              	 .code 16
 180              	 .thumb_func
 182              	DIGITAL_IO_SetOutputLow:
 183              	.LFB196:
 281:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 282:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 283:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to reset port pin.
 284:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 285:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return None
 286:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 287:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 288:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to make port pin to low level.
 289:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 290:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 291:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * DIGITAL_IO_SetOutputHigh()
 292:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 293:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 294:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 295:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  #include "DAVE.h" //Declarations from DAVE Code Generation (includes SFR declaration)
 296:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 297:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  int main(void)
 298:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  {
 299:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    DAVE_STATUS_t status;
 300:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_I
 301:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    if(status == DAVE_STATUS_SUCCESS)
 302:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 303:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG("DAVE Apps initialization success\n");
 304:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 305:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    else
 306:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 307:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 308:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *      while(1U)
 309:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *      {
 310:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *      }
 311:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 312:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    //Placeholder for user application code. The while loop below can be replaced with user applic
 313:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    DIGITAL_IO_SetOutputLow(&DIGITAL_IO_0);
 314:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    while(1U)
 315:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 316:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *      // Add application code here
 317:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 318:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 319:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 320:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 321:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 322:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 323:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 324:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_SetOutputLow(const DIGITAL_IO_t *const handler)
 325:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 184              	 .loc 2 325 0
 185              	 .cfi_startproc
 186 0000 80B5     	 push {r7,lr}
 187              	.LCFI12:
 188              	 .cfi_def_cfa_offset 8
 189              	 .cfi_offset 7,-8
 190              	 .cfi_offset 14,-4
 191 0002 82B0     	 sub sp,sp,#8
 192              	.LCFI13:
 193              	 .cfi_def_cfa_offset 16
 194 0004 00AF     	 add r7,sp,#0
 195              	.LCFI14:
 196              	 .cfi_def_cfa_register 7
 197 0006 7860     	 str r0,[r7,#4]
 326:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_SetOutputLow: handler null pointer", handler != NULL);
 327:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_SetOutputLow(handler->gpio_port,handler->gpio_pin);
 198              	 .loc 2 327 0
 199 0008 7B68     	 ldr r3,[r7,#4]
 200 000a 1A68     	 ldr r2,[r3]
 201 000c 7B68     	 ldr r3,[r7,#4]
 202 000e 1B7B     	 ldrb r3,[r3,#12]
 203 0010 101C     	 mov r0,r2
 204 0012 191C     	 mov r1,r3
 205 0014 FFF7FEFF 	 bl XMC_GPIO_SetOutputLow
 328:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 206              	 .loc 2 328 0
 207 0018 BD46     	 mov sp,r7
 208 001a 02B0     	 add sp,sp,#8
 209              	 
 210 001c 80BD     	 pop {r7,pc}
 211              	 .cfi_endproc
 212              	.LFE196:
 214 001e C046     	 .section .text.PIN_INTERRUPT_GetPinValue,"ax",%progbits
 215              	 .align 2
 216              	 .code 16
 217              	 .thumb_func
 219              	PIN_INTERRUPT_GetPinValue:
 220              	.LFB205:
 221              	 .file 3 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT/pin_interrupt.h"
   1:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
   2:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @file pin_interrupt.h
   3:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @date 2021-01-08
   4:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
   5:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * NOTE:
   6:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
   8:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @cond
   9:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
  10:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * PIN_INTERRUPT v4.0.4 - The PIN_INTERRUPT APP invokes user interrupt handler in a response to ris
  11:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                        edge event signal on a pin.
  12:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
  13:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * Copyright (c) 2016-2020, Infineon Technologies AG
  14:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * All rights reserved.                        
  15:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                                             
  16:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  17:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * following conditions are met:   
  18:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                                                                              
  19:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  20:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   disclaimer.                        
  21:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * 
  22:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  23:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   disclaimer in the documentation and/or other materials provided with the distribution.     
  24:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                         
  25:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  26:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   products derived from this software without specific prior written permission. 
  27:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                                             
  28:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  29:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  30:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  31:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  32:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  33:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  34:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.    
  35:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                                                                              
  36:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  37:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * with Infineon Technologies AG (dave@infineon.com).         
  38:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
  39:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
  40:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * Change History
  41:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * --------------
  42:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * 2015-12-03:
  43:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     - Initial version for DAVEv4. <BR>
  44:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * 
  45:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * 2021-01-08:
  46:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     - Modified check for minimum XMCLib version
  47:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
  48:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @endcond 
  49:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
  50:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
  51:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  52:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #ifndef PIN_INTERRUPT_H
  53:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #define PIN_INTERRUPT_H
  54:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  55:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**************************************************************************************************
  56:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * HEADER FILES                                                                                    
  57:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
  58:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #if (UC_SERIES == XMC14)
  59:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #include "xmc_scu.h"
  60:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #endif
  61:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #include "xmc_gpio.h"
  62:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #include "xmc_eru.h"
  63:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  64:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #include "DAVE_Common.h"
  65:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #include "pin_interrupt_conf.h"
  66:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  67:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**************************************************************************************************
  68:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * MACROS                                                                                          
  69:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
  70:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #define PIN_INTERRUPT_XMC_LIB_MAJOR_VERSION 2
  71:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #define PIN_INTERRUPT_XMC_LIB_MINOR_VERSION 1
  72:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #define PIN_INTERRUPT_XMC_LIB_PATCH_VERSION 6
  73:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  74:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #if !((XMC_LIB_MAJOR_VERSION > PIN_INTERRUPT_XMC_LIB_MAJOR_VERSION) ||\
  75:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****       ((XMC_LIB_MAJOR_VERSION == PIN_INTERRUPT_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION > P
  76:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****       ((XMC_LIB_MAJOR_VERSION == PIN_INTERRUPT_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION == 
  77:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #error "PIN_INTERRUPT requires XMC Peripheral Library v2.1.6 or higher"
  78:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #endif
  79:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  80:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
  81:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @ingroup App_publicparam
  82:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @{
  83:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
  84:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
  85:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  @brief Initialization data structure for PIN_INTERRUPT APP
  86:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
  87:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  88:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
  89:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @}
  90:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
  91:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  92:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  /*************************************************************************************************
  93:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * ENUMS
  94:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
  95:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
  96:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @ingroup PIN_INTERRUPT_enumerations
  97:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @{
  98:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
  99:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /*
 100:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief enumeration for PIN_INTERRUPT APP
 101:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 102:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** typedef enum PIN_INTERRUPT_STATUS
 103:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
 104:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_STATUS_SUCCESS = 0U,        /**<APP initialization is success */
 105:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_STATUS_FAILURE = 1U         /**<APP initialization is failure */
 106:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** } PIN_INTERRUPT_STATUS_t;
 107:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 108:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 109:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 110:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * Defines trigger edge for the event generation by ETLx (Event Trigger Logic, x = [0 to 3]) unit, 
 111:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * from ERSx(Event request source, x = [0 to 3]) unit.
 112:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 113:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** typedef enum PIN_INTERRUPT_EDGE
 114:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
 115:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_EDGE_NONE = 0U, /**< no event enabled */
 116:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_EDGE_RISING = 1U,   /**< detection of rising edge generates the event */
 117:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_EDGE_FALLING = 2U,  /**< detection of falling edge generates the event */
 118:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_EDGE_BOTH = 3U      /**< detection of either edges generates the event */
 119:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** } PIN_INTERRUPT_EDGE_t;
 120:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 121:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @}
 122:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 123:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 124:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**************************************************************************************************
 125:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * DATA STRUCTURES
 126:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** ***************************************************************************************************
 127:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 128:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @ingroup PIN_INTERRUPT_datastructures
 129:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @{
 130:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 131:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 132:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 133:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief Configuration structure for PIN_INTERRUPT APP
 134:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 135:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** typedef struct PIN_INTERRUPT
 136:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
 137:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_ERU_t *eru;  /**< Mapped ERU module */
 138:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_GPIO_PORT_t *port;  /**< Mapped port number */
 139:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_GPIO_CONFIG_t gpio_config;   /**< Initializes the input pin characteristics */
 140:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_ERU_ETL_CONFIG_t etl_config;  /**< reference to ERUx_ETLy (x = [0..1], y = [0..4])
 141:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****                                                       module configuration */
 142:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #if (UC_SERIES == XMC14)
 143:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_SCU_IRQCTRL_t irqctrl;  /**< selects the interrupt source for a NVIC interrupt node*/
 144:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #endif
 145:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   IRQn_Type IRQn;       /**< Mapped NVIC Node */
 146:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   uint8_t irq_priority; 	  /**< Node Interrupt Priority */
 147:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #if (UC_FAMILY == XMC4)
 148:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   uint8_t irq_subpriority;  /**< Node Interrupt SubPriority only valid for XMC4x */
 149:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #endif
 150:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   uint8_t etl; /*< ETLx channel (x = [0..3])*/
 151:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   uint8_t ogu; /*< OGUy channel (y = [0..3])*/
 152:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   uint8_t pin; /*< Mapped pin number */
 153:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   bool enable_at_init;  /**< Interrupt enable for Node at initialization*/
 154:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** } PIN_INTERRUPT_t;
 155:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 156:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @}
 157:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 158:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 159:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #ifdef __cplusplus
 160:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** extern "C" {
 161:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #endif
 162:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**************************************************************************************************
 163:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * API Prototypes
 164:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
 165:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 166:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @ingroup PIN_INTERRUPT_apidoc
 167:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @{
 168:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 169:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 170:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief Get PIN_INTERRUPT APP version
 171:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @return DAVE_APP_VERSION_t APP version information (major, minor and patch number)
 172:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 173:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * \par<b>Description: </b><br>
 174:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * The function can be used to check application software compatibility with a
 175:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * specific version of the APP.
 176:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 177:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * \par<b>Example Usage:</b><br>
 178:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 179:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @code
 180:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * #include "DAVE.h"
 181:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 182:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * int main(void) 
 183:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * {
 184:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   DAVE_STATUS_t init_status;
 185:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   DAVE_APP_VERSION_t version;
 186:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 187:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   // Initialize PIN_INTERRUPT APP:
 188:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   // PIN_INTERRUPT_Init() is called from within DAVE_Init().
 189:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   init_status = DAVE_Init();
 190:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 191:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   if (DAVE_STATUS_SUCCESS == init_status)
 192:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   {
 193:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     version = PIN_INTERRUPT_GetAppVersion();
 194:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     if (version.major != 4U) {
 195:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *       // Probably, not the right version.
 196:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     }
 197:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   }
 198:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 199:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   // More code here
 200:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   while(1)
 201:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   {
 202:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   }
 203:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   return (1);
 204:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * }
 205:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @endcode<BR>
 206:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 207:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** DAVE_APP_VERSION_t PIN_INTERRUPT_GetAppVersion(void);
 208:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 209:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 210:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief Initializes a PIN_INTERRUPT APP instance
 211:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @param handle Pointer pointing to APP data structure. Refer @ref PIN_INTERRUPT_t for details.
 212:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @return
 213:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *            PIN_INTERRUPT_STATUS_SUCCESS             : if initialization is successful\n
 214:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *            PIN_INTERRUPT_STATUS_FAILURE             : if initialization is failed
 215:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 216:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * \par<b>Description:</b><br>
 217:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * PIN_INTERRUPT_Init API is called during initialization of DAVE APPS. This API Initializes input 
 218:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * ERU and OGU hardware module initialization, Configures NVIC node and its priority in order to ge
 219:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 220:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * \par<b>Example Usage:</b><br>
 221:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 222:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @code
 223:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * #include "DAVE.h"
 224:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 225:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * int main(void)
 226:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * {
 227:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   DAVE_STATUS_t status;
 228:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 229:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   status = DAVE_Init();  //  PIN_INTERRUPT_Init API is called during initialization of DAVE APPS
 230:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   if (DAVE_STATUS_SUCCESS == status)
 231:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   {
 232:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     // user code
 233:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 234:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     while(1)
 235:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     {
 236:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 237:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     }
 238:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   }
 239:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   return (1);
 240:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * }
 241:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 242:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @endcode<BR>
 243:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 244:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** PIN_INTERRUPT_STATUS_t PIN_INTERRUPT_Init(const PIN_INTERRUPT_t *const handle);
 245:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 246:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 247:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief Enables the IRQ.
 248:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @param handle Pointer pointing to APP data structure. Refer @ref PIN_INTERRUPT_t for details.
 249:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @return None
 250:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * <BR><P ALIGN="LEFT"><B>Example:</B>
 251:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 252:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @code
 253:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  #include "DAVE.h"
 254:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 255:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  int main(void)
 256:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  {
 257:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    DAVE_STATUS_t status;
 258:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 259:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    status = DAVE_Init();  //  PIN_INTERRUPT_Init API is called during initialization of DAVE APP
 260:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    if (DAVE_STATUS_SUCCESS == status)
 261:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    {
 262:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *      // user code
 263:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 264:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *      PIN_INTERRUPT_Enable(&PIN_INTERRUPT_0);
 265:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *      while(1)
 266:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *      {}
 267:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    }
 268:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 269:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    return (1);
 270:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  }
 271:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @endcode<BR> </p>
 272:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 273:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** __STATIC_INLINE void PIN_INTERRUPT_Enable(const PIN_INTERRUPT_t *const handle)
 274:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
 275:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_ASSERT("PIN_INTERRUPT_Enable: Handler null pointer", handle != NULL);
 276:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   NVIC_EnableIRQ(handle->IRQn);
 277:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** }
 278:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 279:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 280:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief Disables the IRQ.
 281:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @param handle Pointer pointing to APP data structure. Refer @ref PIN_INTERRUPT_t for details.
 282:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @return None
 283:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * <BR><P ALIGN="LEFT"><B>Example:</B>
 284:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 285:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @code
 286:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  #include "DAVE.h"
 287:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 288:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  int main(void)
 289:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  {
 290:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 291:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    DAVE_STATUS_t status;
 292:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 293:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    status = DAVE_Init();  //  PIN_INTERRUPT_Init API is called during initialization of DAVE APP
 294:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    if(DAVE_STATUS_SUCCESS == status)
 295:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    {
 296:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *      // user code
 297:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 298:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *      PIN_INTERRUPT_Disable(&PIN_INTERRUPT_0);
 299:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *      while(1)
 300:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *      {}
 301:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    }
 302:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 303:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    return (1);
 304:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 305:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  }
 306:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @endcode<BR> </p>
 307:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 308:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** __STATIC_INLINE void PIN_INTERRUPT_Disable(const PIN_INTERRUPT_t *const handle)
 309:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
 310:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_ASSERT("PIN_INTERRUPT_Disable: Handler null pointer", handle != NULL);
 311:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   NVIC_DisableIRQ(handle->IRQn);
 312:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** }
 313:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 314:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 315:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * @brief Read input level of port pin.
 316:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * @param handle Pointer pointing to APP data structure. Refer @ref PIN_INTERRUPT_t for details.
 317:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * @return uint32_t input logic level. Range:0-1
 318:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *
 319:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * \par<b>Description:</b><br>
 320:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * This function reads the Pn_IN register and returns the current logical value at the GPIO pin.
 321:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *
 322:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *
 323:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * Example Usage:
 324:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * @code
 325:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * #include "DAVE.h"//Declarations from DAVE Code Generation (includes SFR declaration)
 326:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *
 327:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * int main(void)
 328:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * {
 329:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   DAVE_STATUS_t status;
 330:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   uint32_t pin_status;
 331:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   status = DAVE_Init();   // (DAVE_STATUS_t)PIN_INTERRUPT_Init(&PIN_INTERRUPT_0) is called within
 332:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   
 333:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   if (status == DAVE_STATUS_SUCCESS)
 334:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   {
 335:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 336:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   }
 337:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   else
 338:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   {
 339:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 340:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     while(1U)
 341:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     {
 342:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     }
 343:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   }
 344:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 345:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   while(1U)
 346:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   {
 347:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     pin_status = PIN_INTERRUPT_GetPinValue(&PIN_INTERRUPT_0);
 348:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     if (pin_status == 1)
 349:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     {
 350:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *       // Add application code here
 351:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     }
 352:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     else
 353:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     {
 354:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *       // Add application code here
 355:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     }
 356:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   }
 357:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   return (1);
 358:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * }
 359:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *  @endcode
 360:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** */
 361:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** __STATIC_INLINE uint32_t PIN_INTERRUPT_GetPinValue(const PIN_INTERRUPT_t *const handle)
 362:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
 222              	 .loc 3 362 0
 223              	 .cfi_startproc
 224 0000 80B5     	 push {r7,lr}
 225              	.LCFI15:
 226              	 .cfi_def_cfa_offset 8
 227              	 .cfi_offset 7,-8
 228              	 .cfi_offset 14,-4
 229 0002 82B0     	 sub sp,sp,#8
 230              	.LCFI16:
 231              	 .cfi_def_cfa_offset 16
 232 0004 00AF     	 add r7,sp,#0
 233              	.LCFI17:
 234              	 .cfi_def_cfa_register 7
 235 0006 7860     	 str r0,[r7,#4]
 363:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_ASSERT("PIN_INTERRUPT_GetPinValue: Handler null pointer", handle != NULL);
 364:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   return (XMC_GPIO_GetInput(handle->port, handle->pin));
 236              	 .loc 3 364 0
 237 0008 7B68     	 ldr r3,[r7,#4]
 238 000a 5A68     	 ldr r2,[r3,#4]
 239 000c 7B68     	 ldr r3,[r7,#4]
 240 000e 9B7F     	 ldrb r3,[r3,#30]
 241 0010 101C     	 mov r0,r2
 242 0012 191C     	 mov r1,r3
 243 0014 FFF7FEFF 	 bl XMC_GPIO_GetInput
 244 0018 031C     	 mov r3,r0
 365:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** }
 245              	 .loc 3 365 0
 246 001a 181C     	 mov r0,r3
 247 001c BD46     	 mov sp,r7
 248 001e 02B0     	 add sp,sp,#8
 249              	 
 250 0020 80BD     	 pop {r7,pc}
 251              	 .cfi_endproc
 252              	.LFE205:
 254 0022 C046     	 .section .text.XMC_WDT_Start,"ax",%progbits
 255              	 .align 2
 256              	 .code 16
 257              	 .thumb_func
 259              	XMC_WDT_Start:
 260              	.LFB214:
 261              	 .file 4 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc/xmc_wdt.h"
   1:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
   2:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @file xmc_wdt.h
   3:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @date 2015-08-06
   4:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
   5:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @cond
   6:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *****************************************************************************
   7:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
   9:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * All rights reserved.
  11:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
  12:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
  14:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Permission is hereby granted, free of charge, to any person or organization
  15:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * obtaining a copy of the software and accompanying documentation covered by
  16:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * do so, all subject to the following:
  20:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
  21:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * The copyright notices in the Software and this entire statement, including
  22:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * the above license grant, this restriction and the following disclaimer,
  23:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * must be included in all copies of the Software, in whole or in part, and
  24:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * all derivative works of the Software, unless such copies or derivative
  25:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * works are solely in the form of machine-executable object code generated by
  26:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * a source language processor.
  27:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
  28:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * DEALINGS IN THE SOFTWARE.
  35:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
  36:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * To improve the quality of the software, users are encouraged to share
  37:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * at XMCSupport@infineon.com.
  39:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *****************************************************************************
  40:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
  41:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Change History
  42:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * --------------
  43:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
  44:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * 2015-02-20:
  45:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *     - Initial <br>
  46:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *     - Documentation updates <br>
  47:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
  48:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * 2015-06-20:
  49:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  50:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
  51:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * 2015-08-06:
  52:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *     - Bug fix in XMC_WDT_SetDebugMode() API, Wrong register is being configured.<br>
  53:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @endcond
  54:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
  55:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
  56:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #ifndef XMC_WDT_H
  57:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #define XMC_WDT_H
  58:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
  59:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**************************************************************************************************
  60:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * HEADER FILES
  61:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  **************************************************************************************************
  62:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
  63:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #include "xmc_common.h"
  64:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #include "xmc_scu.h"
  65:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
  66:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @addtogroup XMClib XMC Peripheral Library
  67:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @{
  68:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
  69:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
  70:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
  71:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @addtogroup WDT
  72:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @brief Watchdog driver for the XMC microcontroller family.
  73:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
  74:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * The watchdog unit (WDT) improves the system integrity, by triggering the system reset request to
  75:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * back from the unresponsive state to normal operation.
  76:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
  77:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * This LLD provides the Configuration structure XMC_WDT_CONFIG_t and initialization function XMC_W
  78:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * It can be used to:
  79:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * -# Start or Stop the watchdog timer. (XMC_WDT_Start() and XMC_WDT_Stop())
  80:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * -# Service the watchdog timer. (XMC_WDT_Service())
  81:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * -# Configure the service window upper bound and lower bound timing values. (XMC_WDT_SetWindowBou
  82:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * -# Enable the generation of the pre-warning event for the first overflow of the timer. (XMC_WDT_
  83:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * -# Clear the pre-warning alarm event. It is mandatory to clear the flag during pre-warning alarm
  84:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****       generating reset request for the second overflow of the timer. (XMC_WDT_ClearAlarm())
  85:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * -# Suspend the watchdog timer during Debug HALT mode. (XMC_WDT_SetDebugMode())
  86:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * -# Configure service indication pulse width.(XMC_WDT_SetServicePulseWidth())
  87:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
  88:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @{
  89:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
  90:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
  91:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**************************************************************************************************
  92:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * MACROS
  93:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   *************************************************************************************************
  94:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
  95:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #define XMC_WDT_MAGIC_WORD             (0xABADCAFEU) /* Magic word to be written in Service Registe
  96:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****                                                           to service or feed the watchdog. */
  97:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
  98:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**************************************************************************************************
  99:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * ENUMS
 100:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   *************************************************************************************************
 101:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 102:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 103:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *  Defines working modes for watchdog. Use type XMC_WDT_MODE_t for this enum.
 104:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 105:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** typedef enum XMC_WDT_MODE
 106:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** {
 107:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   XMC_WDT_MODE_TIMEOUT    = (uint32_t)0x0 << WDT_CTR_PRE_Pos, /**< Generates reset request as soon 
 108:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****                                                                    occurs. */
 109:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   XMC_WDT_MODE_PREWARNING = (uint32_t)0x1 << WDT_CTR_PRE_Pos  /**< Generates an alarm event for the
 110:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****                                                                    reset request after subsequent o
 111:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****                                                                    serviced after first overflow. *
 112:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** } XMC_WDT_MODE_t;
 113:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 114:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 115:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *  Defines debug behaviour of watchdog when the CPU enters HALT mode. Use type XMC_WDT_DEBUG_MODE_
 116:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 117:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** typedef enum XMC_WDT_DEBUG_MODE
 118:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** {
 119:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   XMC_WDT_DEBUG_MODE_STOP = (uint32_t)0x0 << WDT_CTR_DSP_Pos, /**< Watchdog counter is paused durin
 120:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   XMC_WDT_DEBUG_MODE_RUN  = (uint32_t)0x1 << WDT_CTR_DSP_Pos  /**< Watchdog counter is not paused d
 121:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** } XMC_WDT_DEBUG_MODE_t;
 122:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 123:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**************************************************************************************************
 124:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * DATA STRUCTURES
 125:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   *************************************************************************************************
 126:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /* Anonymous structure/union guard start */
 127:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #if defined(__CC_ARM)
 128:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #pragma push
 129:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #pragma anon_unions
 130:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #elif defined(__TASKING__)
 131:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #pragma warning 586
 132:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #endif
 133:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 134:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 135:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Structure for initializing watchdog timer. Use type XMC_WDT_CONFIG_t for this structure.
 136:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 137:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** typedef struct XMC_WDT_CONFIG
 138:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** {
 139:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   uint32_t window_upper_bound; /**< Upper bound for service window (WUB). Reset request is generate
 140:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****                                     timer. ALways upper bound value has to be more than lower bound
 141:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****                                     lower than WLB, triggers a system reset after timer crossed upp
 142:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****                                     Range: [0H to FFFFFFFFH] */
 143:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   uint32_t window_lower_bound; /**< Lower bound for servicing window (WLB). Setting the lower bound
 144:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****                                     window mechanism.\n
 145:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****                                     Range: [0H to FFFFFFFFH] */
 146:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   union
 147:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   {
 148:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****     struct
 149:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****     {
 150:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****       uint32_t : 1;
 151:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****       uint32_t prewarn_mode : 1;        /**< Pre-warning mode (PRE). This accepts boolean values as
 152:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****       uint32_t : 2;
 153:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****       uint32_t run_in_debug_mode : 1;   /**< Watchdog timer behaviour during debug (DSP). This acce
 154:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****       uint32_t : 3;
 155:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****       uint32_t service_pulse_width : 8; /**< Service Indication Pulse Width (SPW). Generated Pulse 
 156:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****                                              in fwdt cycles.\n
 157:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****                                              Range: [0H to FFH] */
 158:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****       uint32_t : 16;
 159:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****     };
 160:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****     uint32_t wdt_ctr; /* Value of operation mode control register (CTR). It’s bit fields are repr
 161:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****                            union members. */
 162:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   };
 163:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** } XMC_WDT_CONFIG_t;
 164:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /* Anonymous structure/union guard end */
 165:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #if defined(__CC_ARM)
 166:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #pragma pop
 167:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #elif defined(__TASKING__)
 168:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #pragma warning restore
 169:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #endif
 170:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**************************************************************************************************
 171:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * API PROTOTYPES
 172:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   *************************************************************************************************
 173:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 174:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #ifdef __cplusplus
 175:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** extern "C" {
 176:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #endif
 177:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 178:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 179:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param None
 180:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 181:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @return None
 182:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 183:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Description:</b><br>
 184:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \if XMC4
 185:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Enables watchdog clock and releases watchdog reset.\n
 186:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \endif
 187:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \if XMC1
 188:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Enables watchdog clock.\n
 189:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \endif
 190:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par
 191:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * This API is invoked by XMC_WDT_Init() and therefore no need to call it explicitly during watchdo
 192:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * sequence. Invoke this API to enable watchdog once again if the watchdog is disabled by invoking 
 193:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 194:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Note:</b><br>
 195:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \if XMC4
 196:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * 1. It is required to configure the watchdog, again after invoking XMC_WDT_Disable(). Since all t
 197:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *    reset with default values.
 198:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \endif
 199:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \if XMC1
 200:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * 1. Not required to configure the watchdog again after invoking XMC_WDT_Disable(). Since the regi
 201:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *    the configured values.
 202:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \endif
 203:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Related APIs:</b><BR>
 204:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * XMC_WDT_Init(), XMC_WDT_Disable()
 205:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 206:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** void XMC_WDT_Enable(void);
 207:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 208:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 209:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param None
 210:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 211:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @return None
 212:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 213:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Description:</b><br>
 214:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \if XMC4
 215:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Disables the clock and resets watchdog timer.\n
 216:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \endif
 217:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \if XMC1
 218:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Disables the clock to the watchdog timer.\n
 219:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \endif
 220:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 221:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Note:</b><br>
 222:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \if XMC4
 223:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * 1. Resets the registers with default values. So XMC_WDT_Init() has to be invoked again to config
 224:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \endif
 225:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \if XMC1
 226:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * 1. After invoking XMC_WDT_Disable(), all register values are displayed with 0F in debugger. Once
 227:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****       calling XMC_WDT_Enable(), previous configured register values are displayed. No need to invok
 228:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****       again.
 229:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \endif
 230:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Related APIs:</b><BR>
 231:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * XMC_WDT_Enable()
 232:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 233:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** void XMC_WDT_Disable(void);
 234:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 235:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 236:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param config pointer to a constant watchdog configuration data structure. Refer data structure 
 237:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *               for detail.
 238:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 239:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @return None
 240:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 241:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Description:</b><br>
 242:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Initializes and configures watchdog with configuration data pointed by \a config.\n
 243:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par
 244:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * It invokes XMC_WDT_Enable() to enable clock and release reset. Then configures the lower and upp
 245:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * working mode (timeout/pre-warning), debug behaviour and service request indication pulse width.
 246:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 247:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Note:</b><br>
 248:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * 1. With out invoking this XMC_WDT_Init() or XMC_WDT_Enable(), invocation of other APIs like XMC_
 249:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *    XMC_WDT_SetMode(), XMC_WDT_SetServicePulseWidth(), XMC_WDT_SetDebugMode(), XMC_WDT_Start(), X
 250:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *    XMC_WDT_Service(), XMC_WDT_ClearAlarm() has no affect.
 251:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 252:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** void XMC_WDT_Init(const XMC_WDT_CONFIG_t *const config);
 253:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 254:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 255:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param lower_bound specifies watchdog window lower bound in terms of watchdog clock (fWDT) cycle
 256:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *                    Range: [0H to FFFFFFFFH].
 257:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param upper_bound specifies watchdog window upper bound in terms of watchdog clock (fWDT) cycle
 258:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *                    Range: [0H to FFFFFFFFH].
 259:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 260:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @return None
 261:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 262:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Description:</b><br>
 263:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Sets watchdog window lower and upper bounds by updating WLB and WUB registers.\n
 264:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par
 265:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Window lower and upper bounds are set during initialization in XMC_WDT_Init(). Invoke this API t
 266:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * needed later in the program. This upper bound and lower bound can be calculated by using the bel
 267:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *       upper_bound or lower_bound = desired_boundary_time(sec) * fwdt(hz)
 268:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 269:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Note:</b>
 270:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * 1. Always ensure that upper_bound is greater than the lower_bound value. If not, whenever timer 
 271:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *    upper_bound value it triggers the reset(wdt_rst_req) of the controller.
 272:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 273:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** __STATIC_INLINE void XMC_WDT_SetWindowBounds(uint32_t lower_bound, uint32_t upper_bound)
 274:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** {
 275:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   WDT->WLB = lower_bound;
 276:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   WDT->WUB = upper_bound;
 277:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** }
 278:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 279:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 280:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param mode is one of the working modes of the watchdog timer, i.e timeout or pre-warning. Refer
 281:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *             for valid values.
 282:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 283:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @return None
 284:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 285:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Description:</b><br>
 286:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Sets watchdog working mode (timeout or pre-warning) by updating PRE bit of CTR register.\n
 287:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par
 288:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * The working mode is set during initialization in XMC_WDT_Init(). Invoke this API to alter the mo
 289:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * the program.
 290:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 291:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** __STATIC_INLINE void XMC_WDT_SetMode(XMC_WDT_MODE_t mode)
 292:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** {
 293:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   WDT->CTR = (WDT->CTR & (uint32_t)~WDT_CTR_PRE_Msk) | (uint32_t)mode;
 294:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** }
 295:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 296:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 297:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param service_pulse_width specifies Service indication pulse width in terms of fwdt.
 298:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *                            Range: [0H – FFH].
 299:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @return None
 300:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 301:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Description:</b><br>
 302:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Sets service indication pulse width by updating SPW bit field of CTR register.\n
 303:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par
 304:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * The service indication pulse (with width service_pulse_width + 1 in fwdt cycles) is generated on
 305:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * or feeding of watchdog. The pulse width is initially set during initialization in XMC_WDT_Init()
 306:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * alter the width as needed later in the program.
 307:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 308:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** __STATIC_INLINE void XMC_WDT_SetServicePulseWidth(uint8_t service_pulse_width)
 309:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** {
 310:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   WDT->CTR = (WDT->CTR & (uint32_t)~WDT_CTR_SPW_Msk) | ((uint32_t)service_pulse_width << WDT_CTR_SP
 311:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** }
 312:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 313:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 314:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param debug_mode running state of watchdog during debug halt mode. Refer @ref XMC_WDT_DEBUG_MOD
 315:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *                   valid values.
 316:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 317:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @return None
 318:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 319:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Description:</b><br>
 320:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Sets debug behaviour of watchdog by modifying DSP bit of CTR register.\n
 321:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par
 322:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Depending upon DSP bit, the watchdog timer stops when CPU is in HALT mode. The debug behaviour i
 323:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * XMC_WDT_DEBUG_MODE_STOP during initialization in XMC_WDT_Init(). Invoke this API to change the d
 324:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * needed later in the program.
 325:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 326:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** __STATIC_INLINE void XMC_WDT_SetDebugMode(const XMC_WDT_DEBUG_MODE_t debug_mode)
 327:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** {
 328:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   WDT->CTR = (WDT->CTR & (uint32_t)~WDT_CTR_DSP_Msk) | (uint32_t)debug_mode;
 329:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** }
 330:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 331:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 332:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param None
 333:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 334:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @return None
 335:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 336:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Description:</b><br>
 337:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Start the watchdog timer by setting ENB bit of CTR register.\n
 338:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par
 339:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Invoke this API to start the watchdog after initialization, or to resume the watchdog when
 340:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * paused by invoking XMC_WDT_Stop().
 341:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 342:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Related APIs:</b><BR>
 343:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * XMC_WDT_Init(), XMC_WDT_Stop()
 344:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 345:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** __STATIC_INLINE void XMC_WDT_Start(void)
 346:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** {
 262              	 .loc 4 346 0
 263              	 .cfi_startproc
 264 0000 80B5     	 push {r7,lr}
 265              	.LCFI18:
 266              	 .cfi_def_cfa_offset 8
 267              	 .cfi_offset 7,-8
 268              	 .cfi_offset 14,-4
 269 0002 00AF     	 add r7,sp,#0
 270              	.LCFI19:
 271              	 .cfi_def_cfa_register 7
 347:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   WDT->CTR |= (uint32_t)WDT_CTR_ENB_Msk;
 272              	 .loc 4 347 0
 273 0004 034B     	 ldr r3,.L10
 274 0006 034A     	 ldr r2,.L10
 275 0008 5268     	 ldr r2,[r2,#4]
 276 000a 0121     	 mov r1,#1
 277 000c 0A43     	 orr r2,r1
 278 000e 5A60     	 str r2,[r3,#4]
 348:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** }
 279              	 .loc 4 348 0
 280 0010 BD46     	 mov sp,r7
 281              	 
 282 0012 80BD     	 pop {r7,pc}
 283              	.L11:
 284              	 .align 2
 285              	.L10:
 286 0014 00000240 	 .word 1073872896
 287              	 .cfi_endproc
 288              	.LFE214:
 290              	 .section .text.XMC_WDT_Service,"ax",%progbits
 291              	 .align 2
 292              	 .code 16
 293              	 .thumb_func
 295              	XMC_WDT_Service:
 296              	.LFB217:
 349:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 350:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 351:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param None
 352:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 353:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @return None
 354:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 355:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Description:</b><br>
 356:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Pauses watchdog timer by resetting ENB bit of CTR register.\n
 357:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par
 358:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Invoke this API to pause the watchdog as needed in the program e.g. debugging through software c
 359:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 360:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Related APIs:</b><BR>
 361:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * XMC_WDT_Init(), XMC_WDT_Stop()
 362:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 363:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** __STATIC_INLINE void XMC_WDT_Stop(void)
 364:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** {
 365:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   WDT->CTR &= (uint32_t)~WDT_CTR_ENB_Msk;
 366:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** }
 367:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 368:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 369:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param None
 370:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 371:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @return uint32_t Current count value of watchdog timer register (TIM).
 372:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *                  Range: [0H to FFFFFFFFH]
 373:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 374:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Description:</b><br>
 375:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Reads current count of timer register (TIM).\n
 376:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par
 377:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Invoke this API before servicing or feeding the watchdog to check whether count is between lower
 378:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * window bounds.
 379:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 380:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Related APIs:</b><BR>
 381:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * XMC_WDT_Service()
 382:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 383:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** __STATIC_INLINE uint32_t XMC_WDT_GetCounter(void)
 384:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** {
 385:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   return WDT->TIM;
 386:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** }
 387:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 388:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 389:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param None
 390:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 391:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @return None
 392:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 393:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Description:</b><br>
 394:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Services or feeds the watchdog by writing the Magic word in SRV register.\n
 395:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par
 396:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Service watchdog when count value of watchdog timer is between lower and upper window bounds. Su
 397:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * will reset watchdog timer (TIM register) to 0H and generate service indication pulse.
 398:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 399:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Note:</b><br>
 400:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * 1. invoking this API when count value of watchdog timer is less than window lower bound results
 401:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *    wrong servicing and immediately triggers reset request.
 402:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 403:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Related APIs:</b><BR>
 404:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * XMC_WDT_GetCounter(), XMC_WDT_SetWindowBounds(), XMC_WDT_SetServicePulseWidth()
 405:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 406:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** __STATIC_INLINE void XMC_WDT_Service(void)
 407:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** {
 297              	 .loc 4 407 0
 298              	 .cfi_startproc
 299 0000 80B5     	 push {r7,lr}
 300              	.LCFI20:
 301              	 .cfi_def_cfa_offset 8
 302              	 .cfi_offset 7,-8
 303              	 .cfi_offset 14,-4
 304 0002 00AF     	 add r7,sp,#0
 305              	.LCFI21:
 306              	 .cfi_def_cfa_register 7
 408:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   WDT->SRV = XMC_WDT_MAGIC_WORD;
 307              	 .loc 4 408 0
 308 0004 024B     	 ldr r3,.L13
 309 0006 034A     	 ldr r2,.L13+4
 310 0008 9A60     	 str r2,[r3,#8]
 409:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** }
 311              	 .loc 4 409 0
 312 000a BD46     	 mov sp,r7
 313              	 
 314 000c 80BD     	 pop {r7,pc}
 315              	.L14:
 316 000e C046     	 .align 2
 317              	.L13:
 318 0010 00000240 	 .word 1073872896
 319 0014 FECAADAB 	 .word -1414673666
 320              	 .cfi_endproc
 321              	.LFE217:
 323              	 .section .text.XMC_WDT_ClearAlarm,"ax",%progbits
 324              	 .align 2
 325              	 .code 16
 326              	 .thumb_func
 328              	XMC_WDT_ClearAlarm:
 329              	.LFB218:
 410:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 411:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 412:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param None
 413:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 414:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @return None
 415:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 416:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Description:</b><br>
 417:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Clears pre-warning alarm by setting ALMC bit in WDTCLR register.\n
 418:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par
 419:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * In pre-warning mode, first overflow of the timer upper window bound fires the pre-warning alarm.
 420:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * must be invoked to clear the alarm alarm. After clearing of the alarm, watchdog timer must be se
 421:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * time window. Otherwise watchdog timer triggers the reset request up on crossing the upper bound 
 422:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * cycle.
 423:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 424:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Related APIs:</b><BR>
 425:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * XMC_WDT_Service(), XMC_WDT_SetMode()
 426:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 427:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** __STATIC_INLINE void XMC_WDT_ClearAlarm(void)
 428:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** {
 330              	 .loc 4 428 0
 331              	 .cfi_startproc
 332 0000 80B5     	 push {r7,lr}
 333              	.LCFI22:
 334              	 .cfi_def_cfa_offset 8
 335              	 .cfi_offset 7,-8
 336              	 .cfi_offset 14,-4
 337 0002 00AF     	 add r7,sp,#0
 338              	.LCFI23:
 339              	 .cfi_def_cfa_register 7
 429:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   WDT->WDTCLR = WDT_WDTCLR_ALMC_Msk;
 340              	 .loc 4 429 0
 341 0004 024B     	 ldr r3,.L16
 342 0006 0122     	 mov r2,#1
 343 0008 DA61     	 str r2,[r3,#28]
 430:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** }
 344              	 .loc 4 430 0
 345 000a BD46     	 mov sp,r7
 346              	 
 347 000c 80BD     	 pop {r7,pc}
 348              	.L17:
 349 000e C046     	 .align 2
 350              	.L16:
 351 0010 00000240 	 .word 1073872896
 352              	 .cfi_endproc
 353              	.LFE218:
 355              	 .section .text.WATCHDOG_Start,"ax",%progbits
 356              	 .align 2
 357              	 .code 16
 358              	 .thumb_func
 360              	WATCHDOG_Start:
 361              	.LFB219:
 362              	 .file 5 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG/watchdog.h"
   1:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
   2:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @file watchdog.h
   3:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @date 2016-02-09
   4:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
   5:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * NOTE:
   6:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
   8:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @cond
   9:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  **************************************************************************************************
  10:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * WATCHDOG v4.0.16 - Configures the watchdog peripheral instance.
  11:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  12:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * Copyright (c) 2016-2020, Infineon Technologies AG
  13:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * All rights reserved.
  14:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  15:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  16:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * following conditions are met:
  17:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  18:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  19:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   disclaimer.
  20:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  21:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  22:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  23:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  24:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  25:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   products derived from this software without specific prior written permission.
  26:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  27:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  28:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  29:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  30:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  31:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  32:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  33:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  34:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  35:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  36:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * with Infineon Technologies AG (dave@infineon.com).
  37:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  **************************************************************************************************
  38:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  39:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * Change History
  40:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * --------------
  41:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  42:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * 2015-02-16:
  43:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *     - Initial version<br>
  44:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  45:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * 2015-05-08:
  46:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *     - C++ guard applied to only API section<br>
  47:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *     - File guard updated according to the guidelines<br>
  48:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *     - Enum items of "WATCHDOG_EVENT_MODE" are changed to follow coding guidelines<br>
  49:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  50:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * 2015-06-20:
  51:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *     - "callback_func_ptr" in APP config structure is updated according to the GLOBAL_SCU APP.
  52:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  53:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * 2015-06-20:
  54:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *     - macro WATCHDOG_EVENT_CONFIGURATION is replaced with WATCHDOG_EVENT_VIA_SCU.
  55:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  56:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * 2016-02-09:
  57:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *     - Added a check for XMC4 devices, to verify that WATCHDOG clock is enabled or not in CLOCK_X
  58:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  59:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @endcond
  60:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  61:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
  62:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
  63:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #ifndef WATCHDOG_H
  64:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #define WATCHDOG_H
  65:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**************************************************************************************************
  66:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * HEADER FILES
  67:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  **************************************************************************************************
  68:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #include "xmc_wdt.h"
  69:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #if(UC_FAMILY == XMC4)
  70:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #include "CLOCK_XMC4/clock_xmc4.h"
  71:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #else
  72:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #include "CLOCK_XMC1/clock_xmc1.h"
  73:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #endif
  74:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #include "watchdog_conf.h"
  75:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #include "DAVE_Common.h"
  76:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
  77:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**************************************************************************************************
  78:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * MACROS
  79:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  **************************************************************************************************
  80:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #define WATCHDOG_XMC_LIB_MAJOR_VERSION 2
  81:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #define WATCHDOG_XMC_LIB_MINOR_VERSION 0
  82:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #define WATCHDOG_XMC_LIB_PATCH_VERSION 0
  83:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
  84:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #if !((XMC_LIB_MAJOR_VERSION > WATCHDOG_XMC_LIB_MAJOR_VERSION) ||\
  85:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****       ((XMC_LIB_MAJOR_VERSION == WATCHDOG_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION > WATCHD
  86:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****       ((XMC_LIB_MAJOR_VERSION == WATCHDOG_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION == WATCH
  87:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #error "WATCHDOG requires XMC Peripheral Library v2.0.0 or higher"
  88:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #endif
  89:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
  90:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**************************************************************************************************
  91:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * ENUMS
  92:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  **************************************************************************************************
  93:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
  94:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @ingroup WATCHDOG_enumerations
  95:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @{
  96:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
  97:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
  98:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
  99:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *  @brief In case of XMC4000 devices, WatchDog event can be generated as  Regular Interrupt or can
 100:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *         NMI Request. Where as in case of XMC1000 device, it can be generated as Regular Interrup
 101:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
 102:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** typedef enum WATCHDOG_EVENT_MODE
 103:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** {
 104:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****     WATCHDOG_EVENT_MODE_INTERRUPT   = 0U, /**< Regular Interrupt */
 105:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****     WATCHDOG_EVENT_MODE_NMI_REQUEST = 1U /**< Promoted to NMI */
 106:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** } WATCHDOG_EVENT_MODE_t;
 107:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
 108:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
 109:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *  @brief Initialization status.
 110:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
 111:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** typedef enum WATCHDOG_STATUS
 112:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** {
 113:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   WATCHDOG_STATUS_SUCCESS = 0U, /**< Status success */
 114:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   WATCHDOG_STATUS_FAILURE, /**< Status failure */
 115:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** } WATCHDOG_STATUS_t;
 116:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
 117:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** * @}
 118:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** */
 119:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
 120:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**************************************************************************************************
 121:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** * DATA STRUCTURES
 122:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** ***************************************************************************************************
 123:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
 124:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @ingroup WATCHDOG_datastructures
 125:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @{
 126:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
 127:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
 128:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
 129:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @brief WATCHDOG_HandleType is  data structure for storing the GUI configured values of a WATCHDO
 130:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
 131:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** typedef struct WATCHDOG
 132:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** {
 133:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   const XMC_WDT_CONFIG_t* const config; /**< Configuration of WDT */
 134:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   #if ((WATCHDOG_PREWARNING_CHECK == 1U) && (WATCHDOG_EVENT_VIA_SCU == 1U))
 135:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   #if(UC_FAMILY == XMC4)
 136:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   GLOBAL_SCU_XMC4_t* const scu_global_handler; /**< pointer to SCU_GLOBAL APP instance*/
 137:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   GLOBAL_SCU_XMC4_EVENT_HANDLER_t callback_func_ptr; /**< Callback function pointer */
 138:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   #else
 139:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   GLOBAL_SCU_XMC1_t* const scu_global_handler; /**< pointer to SCU_GLOBAL APP instance*/
 140:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   GLOBAL_SCU_XMC1_EVENT_HANDLER_t callback_func_ptr; /**< Callback function pointer */
 141:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   #endif
 142:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   #endif
 143:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   bool  initialized; /**< Holds the initialization status */
 144:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** } WATCHDOG_t;
 145:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
 146:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
 147:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** * @}
 148:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** */
 149:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**************************************************************************************************
 150:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** * API Prototypes
 151:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** ***************************************************************************************************
 152:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #ifdef __cplusplus
 153:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** extern "C" {
 154:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #endif
 155:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
 156:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @brief Get WATCHDOG APP version
 157:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @return DAVE_APP_VERSION_t APP version information (major, minor and patch number)
 158:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * <BR>
 159:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * \par<b>Description:</b><br>
 160:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * The function can be used to check application software compatibility with a
 161:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * specific version of the APP.
 162:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 163:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * Example Usage:
 164:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 165:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @code
 166:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * #include "DAVE.h"
 167:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * int main(void)
 168:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * {
 169:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   DAVE_STATUS_t status;
 170:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   DAVE_APP_VERSION_t app_version;
 171:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 172:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   status = DAVE_Init();    // WATCHDOG_Init() is called from DAVE_Init()
 173:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 174:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   app_version = WATCHDOG_GetAppVersion();
 175:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 176:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   if (app_version.major != 4U)
 177:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   {
 178:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *     // Probably, not the right version.
 179:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   }
 180:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 181:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   while(1U)
 182:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   {
 183:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   }
 184:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   return 1;
 185:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * }
 186:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @endcode<BR>
 187:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
 188:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
 189:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** DAVE_APP_VERSION_t WATCHDOG_GetAppVersion(void);
 190:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
 191:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
 192:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @ingroup WATCHDOG_apidoc
 193:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @{
 194:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
 195:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
 196:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
 197:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @brief Initializes a WATCHDOG with generated configuration.
 198:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 199:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @param handle pointer to the WATCHDOG APP handle structure.
 200:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @return WATCHDOG_STATUS_t\n
 201:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *         WATCHDOG_STATUS_SUCCESS : if initialization is successful\n
 202:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *         WATCHDOG_STATUS_FAILURE : if initialization is failed
 203:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * <BR>
 204:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * \par<b>Description:</b><br>
 205:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * <ul>
 206:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * <li>Enable the WDT module.</li>
 207:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * <li>Configure the service upper and lower bound settings</li>
 208:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * <li>Configure the Pre-warning alarm event, if enabled</li>
 209:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * </ul>
 210:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 211:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * Example Usage:
 212:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 213:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @code
 214:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * #include "DAVE.h"
 215:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * int main(void)
 216:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * {
 217:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   // ... Initializes Apps configurations ...
 218:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   DAVE_Init(); // WATCHDOG_Init(&WATCHDOG_0) will be called from DAVE_Init()
 219:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 220:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   while(1U)
 221:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   {
 222:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   }
 223:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 224:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   return 1;
 225:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * }
 226:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 227:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @endcode<BR> </p>
 228:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
 229:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** WATCHDOG_STATUS_t WATCHDOG_Init(WATCHDOG_t *handle);
 230:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
 231:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
 232:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @brief Starts the WATCHDOG timer.
 233:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 234:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @return None
 235:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * <BR>
 236:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * 
 237:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * \par<b>Description:</b><br>
 238:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * After starting, WDT has to be serviced with in the specified service window boundary.
 239:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * This can done by invoking WATCHDOG_Service(). If failed service, leads to system reset.
 240:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 241:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * Example Usage:
 242:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 243:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @code
 244:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * #include "DAVE.h"
 245:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * int main(void)
 246:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * {
 247:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   DAVE_STATUS_t status;
 248:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 249:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   status = DAVE_Init();        // Initialization of DAVE Apps
 250:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 251:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   if(status == DAVE_STATUS_SUCCESS)
 252:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   {
 253:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *     WATCHDOG_Start(); // Start the watchdog timer
 254:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   }
 255:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 256:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   while(1U)
 257:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   {
 258:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   }
 259:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 260:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   return 1;
 261:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * }
 262:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 263:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * void Watchdog_Handler(void)
 264:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * {
 265:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   WATCHDOG_Service(); //service the watchdog timer.
 266:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   WATCHDOG_Stop();
 267:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * }
 268:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 269:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @endcode<BR> </p>
 270:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
 271:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** __STATIC_INLINE void WATCHDOG_Start(void)
 272:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** {
 363              	 .loc 5 272 0
 364              	 .cfi_startproc
 365 0000 80B5     	 push {r7,lr}
 366              	.LCFI24:
 367              	 .cfi_def_cfa_offset 8
 368              	 .cfi_offset 7,-8
 369              	 .cfi_offset 14,-4
 370 0002 00AF     	 add r7,sp,#0
 371              	.LCFI25:
 372              	 .cfi_def_cfa_register 7
 273:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   XMC_WDT_Start();
 373              	 .loc 5 273 0
 374 0004 FFF7FEFF 	 bl XMC_WDT_Start
 274:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** }
 375              	 .loc 5 274 0
 376 0008 BD46     	 mov sp,r7
 377              	 
 378 000a 80BD     	 pop {r7,pc}
 379              	 .cfi_endproc
 380              	.LFE219:
 382              	 .section .text.WATCHDOG_Service,"ax",%progbits
 383              	 .align 2
 384              	 .code 16
 385              	 .thumb_func
 387              	WATCHDOG_Service:
 388              	.LFB221:
 275:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
 276:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
 277:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @brief Stops the WATCHDOG timer.
 278:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 279:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @return None
 280:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *            <BR>
 281:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 282:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * \par<b>Description:</b><br>
 283:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * WATCHDOG_Stop() can be used to pause the watchog timer as needed. To resume invoke WATCHDOG_Star
 284:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * 
 285:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * Example Usage:
 286:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 287:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @code
 288:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * #include "DAVE.h"
 289:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * int main(void)
 290:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * {
 291:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   DAVE_STATUS_t status;
 292:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 293:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   status = DAVE_Init();        // Initialization of DAVE Apps
 294:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 295:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   if(status == DAVE_STATUS_SUCCESS)
 296:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   {
 297:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *     WATCHDOG_Start(); // Start the watchdog timer
 298:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   }
 299:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 300:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   while(1U)
 301:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   {
 302:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   }
 303:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 304:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   return 1;
 305:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * }
 306:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 307:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * void Watchdog_Handler(void)
 308:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * {
 309:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   WATCHDOG_ClearAlarm(); //clears the alarm flag
 310:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   WATCHDOG_Service(); //service the watchdog timer.
 311:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   WATCHDOG_Stop(); //Stop the watchdog timer
 312:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * }
 313:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 314:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @endcode<BR> </p>
 315:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
 316:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** __STATIC_INLINE void WATCHDOG_Stop(void)
 317:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** {
 318:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   XMC_WDT_Stop();
 319:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** }
 320:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
 321:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
 322:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @brief Service the WATCHDOG timer.
 323:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 324:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @return    None                           
 325:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *            <BR>
 326:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 327:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * \par<b>Description:</b><br>
 328:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * WATCHDOG_Service() will reset the watchdog timer.
 329:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 330:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * Example Usage:
 331:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * 
 332:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @code
 333:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * #include "DAVE.h"
 334:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * int main(void)
 335:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * {
 336:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   DAVE_STATUS_t status;
 337:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 338:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   status = DAVE_Init();        // Initialization of DAVE Apps
 339:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 340:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   if(status == DAVE_STATUS_SUCCESS)
 341:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   {
 342:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *     WATCHDOG_Start(); // Start the watchdog timer
 343:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   }
 344:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 345:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   while(1U)
 346:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   {
 347:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   }
 348:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 349:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   return 1;
 350:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * }
 351:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 352:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * void Watchdog_Handler(void)
 353:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * {
 354:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   WATCHDOG_ClearAlarm(); //clears the alarm flag
 355:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   WATCHDOG_Service(); //service the watchdog timer.
 356:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   WATCHDOG_Stop();
 357:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * }
 358:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 359:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @endcode<BR> </p>
 360:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
 361:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** __STATIC_INLINE void WATCHDOG_Service(void)
 362:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** {
 389              	 .loc 5 362 0
 390              	 .cfi_startproc
 391 0000 80B5     	 push {r7,lr}
 392              	.LCFI26:
 393              	 .cfi_def_cfa_offset 8
 394              	 .cfi_offset 7,-8
 395              	 .cfi_offset 14,-4
 396 0002 00AF     	 add r7,sp,#0
 397              	.LCFI27:
 398              	 .cfi_def_cfa_register 7
 363:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   XMC_WDT_Service();
 399              	 .loc 5 363 0
 400 0004 FFF7FEFF 	 bl XMC_WDT_Service
 364:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** }
 401              	 .loc 5 364 0
 402 0008 BD46     	 mov sp,r7
 403              	 
 404 000a 80BD     	 pop {r7,pc}
 405              	 .cfi_endproc
 406              	.LFE221:
 408              	 .section .text.WATCHDOG_ClearAlarm,"ax",%progbits
 409              	 .align 2
 410              	 .code 16
 411              	 .thumb_func
 413              	WATCHDOG_ClearAlarm:
 414              	.LFB222:
 365:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
 366:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
 367:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @brief Clears the alarm flag.
 368:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 369:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @return None
 370:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * <BR>
 371:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * \par<b>Description:</b><br>
 372:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * After occurrence of Pre-warning alarm event, the timer has to be serviced with in second over fl
 373:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * clearing the alarm flag. Otherwise it will lead to system reset.
 374:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 375:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * Example Usage:
 376:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 377:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @code
 378:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * #include "DAVE.h"
 379:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * int main(void)
 380:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * {
 381:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   DAVE_STATUS_t status;
 382:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 383:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   status = DAVE_Init();        // Initialization of DAVE Apps
 384:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 385:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   if(status == DAVE_STATUS_SUCCESS)
 386:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   {
 387:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *     WATCHDOG_Start(); // Start the watchdog timer
 388:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   }
 389:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 390:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   while(1U)
 391:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   {
 392:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   }
 393:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 394:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   return 1;
 395:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * }
 396:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 397:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * void Watchdog_Handler(void)
 398:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * {
 399:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   WATCHDOG_ClearAlarm(); //clears the alarm flag
 400:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   WATCHDOG_Service(); //service the watchdog timer.
 401:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * }
 402:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 403:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @endcode<BR> </p>
 404:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
 405:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** __STATIC_INLINE void WATCHDOG_ClearAlarm(void)
 406:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** {
 415              	 .loc 5 406 0
 416              	 .cfi_startproc
 417 0000 80B5     	 push {r7,lr}
 418              	.LCFI28:
 419              	 .cfi_def_cfa_offset 8
 420              	 .cfi_offset 7,-8
 421              	 .cfi_offset 14,-4
 422 0002 00AF     	 add r7,sp,#0
 423              	.LCFI29:
 424              	 .cfi_def_cfa_register 7
 407:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   XMC_WDT_ClearAlarm();
 425              	 .loc 5 407 0
 426 0004 FFF7FEFF 	 bl XMC_WDT_ClearAlarm
 408:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** }
 427              	 .loc 5 408 0
 428 0008 BD46     	 mov sp,r7
 429              	 
 430 000a 80BD     	 pop {r7,pc}
 431              	 .cfi_endproc
 432              	.LFE222:
 434              	 .global NP
 435              	 .section .data.NP,"aw",%progbits
 436              	 .align 2
 439              	NP:
 440 0000 42030000 	 .word 834
 441 0004 DC020000 	 .word 732
 442 0008 1B030000 	 .word 795
 443 000c BC020000 	 .word 700
 444              	 .global NPfl
 445              	 .section .data.NPfl,"aw",%progbits
 446              	 .align 2
 449              	NPfl:
 450 0000 D2020000 	 .word 722
 451              	 .global NPfr
 452              	 .section .data.NPfr,"aw",%progbits
 453              	 .align 2
 456              	NPfr:
 457 0000 DF020000 	 .word 735
 458              	 .global NPrl
 459              	 .section .data.NPrl,"aw",%progbits
 460              	 .align 2
 463              	NPrl:
 464 0000 4B000000 	 .word 75
 465              	 .global NPrr
 466              	 .section .data.NPrr,"aw",%progbits
 467              	 .align 2
 470              	NPrr:
 471 0000 BC020000 	 .word 700
 472              	 .global RC_controll
 473              	 .section .data.RC_controll,"aw",%progbits
 476              	RC_controll:
 477 0000 01       	 .byte 1
 478              	 .global Steering_mode
 479              	 .section .data.Steering_mode,"aw",%progbits
 482              	Steering_mode:
 483 0000 04       	 .byte 4
 484              	 .global New_Input
 485              	 .section .bss.New_Input,"aw",%nobits
 488              	New_Input:
 489 0000 00       	 .space 1
 490              	 .global NO_New_Input_counter
 491              	 .section .bss.NO_New_Input_counter,"aw",%nobits
 492              	 .align 2
 495              	NO_New_Input_counter:
 496 0000 00000000 	 .space 4
 497              	 .global modeswitch_colldown
 498              	 .section .data.modeswitch_colldown,"aw",%progbits
 501              	modeswitch_colldown:
 502 0000 0A       	 .byte 10
 503              	 .global Speeds_int16_r
 504              	 .section .bss.Speeds_int16_r,"aw",%nobits
 505              	 .align 2
 508              	Speeds_int16_r:
 509 0000 00000000 	 .space 8
 509      00000000 
 510              	 .global CAN_RX_0
 511              	 .section .bss.CAN_RX_0,"aw",%nobits
 512              	 .align 1
 515              	CAN_RX_0:
 516 0000 0000     	 .space 2
 517              	 .comm init_status,1,1
 518              	 .global CAN_OK
 519              	 .section .bss.CAN_OK,"aw",%nobits
 520              	 .align 2
 523              	CAN_OK:
 524 0000 00000000 	 .space 4
 525              	 .global Inverters_CAN_state
 526              	 .section .bss.Inverters_CAN_state,"aw",%nobits
 527              	 .align 2
 530              	Inverters_CAN_state:
 531 0000 00000000 	 .space 4
 532              	 .global CAN_10ms_counter
 533              	 .section .bss.CAN_10ms_counter,"aw",%nobits
 534              	 .align 2
 537              	CAN_10ms_counter:
 538 0000 00000000 	 .space 4
 539              	 .global reset_distance
 540              	 .section .bss.reset_distance,"aw",%nobits
 543              	reset_distance:
 544 0000 00       	 .space 1
 545              	 .global speed_fl_act
 546              	 .section .bss.speed_fl_act,"aw",%nobits
 547              	 .align 2
 550              	speed_fl_act:
 551 0000 00000000 	 .space 4
 552              	 .global speed_fr_act
 553              	 .section .bss.speed_fr_act,"aw",%nobits
 554              	 .align 2
 557              	speed_fr_act:
 558 0000 00000000 	 .space 4
 559              	 .global speed_rl_act
 560              	 .section .bss.speed_rl_act,"aw",%nobits
 561              	 .align 2
 564              	speed_rl_act:
 565 0000 00000000 	 .space 4
 566              	 .global speed_rr_act
 567              	 .section .bss.speed_rr_act,"aw",%nobits
 568              	 .align 2
 571              	speed_rr_act:
 572 0000 00000000 	 .space 4
 573              	 .global distance_fl_act
 574              	 .section .bss.distance_fl_act,"aw",%nobits
 575              	 .align 2
 578              	distance_fl_act:
 579 0000 00000000 	 .space 4
 580              	 .global distance_fr_act
 581              	 .section .bss.distance_fr_act,"aw",%nobits
 582              	 .align 2
 585              	distance_fr_act:
 586 0000 00000000 	 .space 4
 587              	 .global distance_rl_act
 588              	 .section .bss.distance_rl_act,"aw",%nobits
 589              	 .align 2
 592              	distance_rl_act:
 593 0000 00000000 	 .space 4
 594              	 .global distance_rr_act
 595              	 .section .bss.distance_rr_act,"aw",%nobits
 596              	 .align 2
 599              	distance_rr_act:
 600 0000 00000000 	 .space 4
 601              	 .global CAN_RX_Inverter_count
 602              	 .section .bss.CAN_RX_Inverter_count,"aw",%nobits
 605              	CAN_RX_Inverter_count:
 606 0000 00       	 .space 1
 607              	 .global CAN_Ultrasonic_No_messasge_count
 608              	 .section .data.CAN_Ultrasonic_No_messasge_count,"aw",%progbits
 611              	CAN_Ultrasonic_No_messasge_count:
 612 0000 64       	 .byte 100
 613              	 .global CAN_state_Ultrasonic
 614              	 .section .bss.CAN_state_Ultrasonic,"aw",%nobits
 617              	CAN_state_Ultrasonic:
 618 0000 00       	 .space 1
 619              	 .global Ultrasonic_cm_C
 620              	 .section .bss.Ultrasonic_cm_C,"aw",%nobits
 621              	 .align 1
 624              	Ultrasonic_cm_C:
 625 0000 0000     	 .space 2
 626              	 .global Ultrasonic_cm_L
 627              	 .section .bss.Ultrasonic_cm_L,"aw",%nobits
 628              	 .align 1
 631              	Ultrasonic_cm_L:
 632 0000 0000     	 .space 2
 633              	 .global Ultrasonic_cm_R
 634              	 .section .bss.Ultrasonic_cm_R,"aw",%nobits
 635              	 .align 1
 638              	Ultrasonic_cm_R:
 639 0000 0000     	 .space 2
 640              	 .global ALPHA_ULTARSONIC
 641              	 .section .data.ALPHA_ULTARSONIC,"aw",%progbits
 642              	 .align 2
 645              	ALPHA_ULTARSONIC:
 646 0000 9A99993E 	 .word 1050253722
 647              	 .global obstructed_L
 648              	 .section .bss.obstructed_L,"aw",%nobits
 651              	obstructed_L:
 652 0000 00       	 .space 1
 653              	 .global obstructed_R
 654              	 .section .bss.obstructed_R,"aw",%nobits
 657              	obstructed_R:
 658 0000 00       	 .space 1
 659              	 .global Fil_Ultrasonic_m_C
 660              	 .section .data.Fil_Ultrasonic_m_C,"aw",%progbits
 661              	 .align 2
 664              	Fil_Ultrasonic_m_C:
 665 0000 00008040 	 .word 1082130432
 666              	 .global Fil_Ultrasonic_m_L
 667              	 .section .data.Fil_Ultrasonic_m_L,"aw",%progbits
 668              	 .align 2
 671              	Fil_Ultrasonic_m_L:
 672 0000 00008040 	 .word 1082130432
 673              	 .global Fil_Ultrasonic_m_R
 674              	 .section .data.Fil_Ultrasonic_m_R,"aw",%progbits
 675              	 .align 2
 678              	Fil_Ultrasonic_m_R:
 679 0000 00008040 	 .word 1082130432
 680              	 .global Ultrsonic_data_invaildcounter
 681              	 .section .data.Ultrsonic_data_invaildcounter,"aw",%progbits
 682              	 .align 2
 685              	Ultrsonic_data_invaildcounter:
 686 0000 28       	 .byte 40
 687 0001 28       	 .byte 40
 688 0002 28       	 .byte 40
 689              	 .global Obstacel_F
 690 0003 00       	 .section .data.Obstacel_F,"aw",%progbits
 691              	 .align 2
 694              	Obstacel_F:
 695 0000 00008040 	 .word 1082130432
 696 0004 00008040 	 .word 1082130432
 697              	 .global Obstacel_L
 698              	 .section .data.Obstacel_L,"aw",%progbits
 699              	 .align 2
 702              	Obstacel_L:
 703 0000 00008040 	 .word 1082130432
 704 0004 000080C0 	 .word -1065353216
 705              	 .global Obstacel_R
 706              	 .section .data.Obstacel_R,"aw",%progbits
 707              	 .align 2
 710              	Obstacel_R:
 711 0000 00008040 	 .word 1082130432
 712 0004 00008040 	 .word 1082130432
 713              	 .global obstacel_F_x
 714              	 .section .bss.obstacel_F_x,"aw",%nobits
 715              	 .align 2
 718              	obstacel_F_x:
 719 0000 00000000 	 .space 4
 720              	 .global obstacel_L_x
 721              	 .section .bss.obstacel_L_x,"aw",%nobits
 722              	 .align 2
 725              	obstacel_L_x:
 726 0000 00000000 	 .space 4
 727              	 .global obstacel_L_y
 728              	 .section .bss.obstacel_L_y,"aw",%nobits
 729              	 .align 2
 732              	obstacel_L_y:
 733 0000 00000000 	 .space 4
 734              	 .global obstacel_R_x
 735              	 .section .bss.obstacel_R_x,"aw",%nobits
 736              	 .align 2
 739              	obstacel_R_x:
 740 0000 00000000 	 .space 4
 741              	 .global obstacel_R_y
 742              	 .section .bss.obstacel_R_y,"aw",%nobits
 743              	 .align 2
 746              	obstacel_R_y:
 747 0000 00000000 	 .space 4
 748              	 .global Obstacel_valid
 749              	 .section .bss.Obstacel_valid,"aw",%nobits
 750              	 .align 2
 753              	Obstacel_valid:
 754 0000 000000   	 .space 3
 755              	 .global avg_Speeds
 756 0003 00       	 .section .bss.avg_Speeds,"aw",%nobits
 757              	 .align 2
 760              	avg_Speeds:
 761 0000 00000000 	 .space 4
 762              	 .global act_trajctory_x
 763              	 .section .bss.act_trajctory_x,"aw",%nobits
 764              	 .align 2
 767              	act_trajctory_x:
 768 0000 00000000 	 .space 4
 769              	 .global act_trajctory_y
 770              	 .section .bss.act_trajctory_y,"aw",%nobits
 771              	 .align 2
 774              	act_trajctory_y:
 775 0000 00000000 	 .space 4
 776              	 .global RC_Signal_OK
 777              	 .section .bss.RC_Signal_OK,"aw",%nobits
 780              	RC_Signal_OK:
 781 0000 00       	 .space 1
 782              	 .global RC_Signal_not_OK_counter
 783              	 .section .bss.RC_Signal_not_OK_counter,"aw",%nobits
 786              	RC_Signal_not_OK_counter:
 787 0000 00       	 .space 1
 788              	 .global captured_time_Steering
 789              	 .section .bss.captured_time_Steering,"aw",%nobits
 790              	 .align 2
 793              	captured_time_Steering:
 794 0000 00000000 	 .space 4
 795              	 .global captured_time_Speed
 796              	 .section .bss.captured_time_Speed,"aw",%nobits
 797              	 .align 2
 800              	captured_time_Speed:
 801 0000 00000000 	 .space 4
 802              	 .global RC_no_Speed_data_counter
 803              	 .section .bss.RC_no_Speed_data_counter,"aw",%nobits
 806              	RC_no_Speed_data_counter:
 807 0000 00       	 .space 1
 808              	 .global RC_no_Steering_data_counter
 809              	 .section .bss.RC_no_Steering_data_counter,"aw",%nobits
 812              	RC_no_Steering_data_counter:
 813 0000 00       	 .space 1
 814              	 .global RC_Speed
 815              	 .section .bss.RC_Speed,"aw",%nobits
 816              	 .align 2
 819              	RC_Speed:
 820 0000 00000000 	 .space 4
 821              	 .global RC_Steering
 822              	 .section .bss.RC_Steering,"aw",%nobits
 823              	 .align 2
 826              	RC_Steering:
 827 0000 00000000 	 .space 4
 828              	 .global RC_Speed_ns_to_mps
 829              	 .section .data.RC_Speed_ns_to_mps,"aw",%progbits
 830              	 .align 2
 833              	RC_Speed_ns_to_mps:
 834 0000 ACC5A735 	 .word 900187564
 835              	 .global RC_Steering_ns_to_deg
 836              	 .section .data.RC_Steering_ns_to_deg,"aw",%progbits
 837              	 .align 2
 840              	RC_Steering_ns_to_deg:
 841 0000 72335C39 	 .word 962343794
 842              	 .global RC_gear_100us_counter
 843              	 .section .bss.RC_gear_100us_counter,"aw",%nobits
 844              	 .align 2
 847              	RC_gear_100us_counter:
 848 0000 00000000 	 .space 4
 849              	 .global RC_AUX1_100us_counter
 850              	 .section .bss.RC_AUX1_100us_counter,"aw",%nobits
 851              	 .align 2
 854              	RC_AUX1_100us_counter:
 855 0000 00000000 	 .space 4
 856              	 .global RC_Gear_state
 857              	 .section .data.RC_Gear_state,"aw",%progbits
 860              	RC_Gear_state:
 861 0000 02       	 .byte 2
 862              	 .global RC_AUX1_state
 863              	 .section .data.RC_AUX1_state,"aw",%progbits
 866              	RC_AUX1_state:
 867 0000 02       	 .byte 2
 868              	 .global RC_Gear_duty
 869              	 .section .data.RC_Gear_duty,"aw",%progbits
 872              	RC_Gear_duty:
 873 0000 02       	 .byte 2
 874              	 .global RC_Gear_duty_OLD
 875              	 .section .data.RC_Gear_duty_OLD,"aw",%progbits
 878              	RC_Gear_duty_OLD:
 879 0000 02       	 .byte 2
 880              	 .global RC_AUX1_duty
 881              	 .section .data.RC_AUX1_duty,"aw",%progbits
 884              	RC_AUX1_duty:
 885 0000 02       	 .byte 2
 886              	 .global RC_Speed_Stop
 887              	 .section .data.RC_Speed_Stop,"aw",%progbits
 890              	RC_Speed_Stop:
 891 0000 01       	 .byte 1
 892              	 .global Steering_direction
 893              	 .section .bss.Steering_direction,"aw",%nobits
 894              	 .align 2
 897              	Steering_direction:
 898 0000 00000000 	 .space 4
 899              	 .global Driving_speed
 900              	 .section .bss.Driving_speed,"aw",%nobits
 901              	 .align 2
 904              	Driving_speed:
 905 0000 00000000 	 .space 4
 906              	 .comm R_Turn,4,4
 907              	 .comm Speed_ratio,4,4
 908              	 .global speed_fl
 909              	 .section .bss.speed_fl,"aw",%nobits
 910              	 .align 2
 913              	speed_fl:
 914 0000 00000000 	 .space 4
 915              	 .global speed_fr
 916              	 .section .bss.speed_fr,"aw",%nobits
 917              	 .align 2
 920              	speed_fr:
 921 0000 00000000 	 .space 4
 922              	 .global speed_rl
 923              	 .section .bss.speed_rl,"aw",%nobits
 924              	 .align 2
 927              	speed_rl:
 928 0000 00000000 	 .space 4
 929              	 .global speed_rr
 930              	 .section .bss.speed_rr,"aw",%nobits
 931              	 .align 2
 934              	speed_rr:
 935 0000 00000000 	 .space 4
 936              	 .global angle_fl
 937              	 .section .bss.angle_fl,"aw",%nobits
 938              	 .align 2
 941              	angle_fl:
 942 0000 00000000 	 .space 4
 943              	 .global angle_fr
 944              	 .section .bss.angle_fr,"aw",%nobits
 945              	 .align 2
 948              	angle_fr:
 949 0000 00000000 	 .space 4
 950              	 .global angle_rl
 951              	 .section .bss.angle_rl,"aw",%nobits
 952              	 .align 2
 955              	angle_rl:
 956 0000 00000000 	 .space 4
 957              	 .global angle_rr
 958              	 .section .bss.angle_rr,"aw",%nobits
 959              	 .align 2
 962              	angle_rr:
 963 0000 00000000 	 .space 4
 964              	 .global Speeds
 965              	 .section .bss.Speeds,"aw",%nobits
 966              	 .align 2
 969              	Speeds:
 970 0000 00000000 	 .space 16
 970      00000000 
 970      00000000 
 970      00000000 
 971              	 .global Steering_Angles
 972              	 .section .bss.Steering_Angles,"aw",%nobits
 973              	 .align 2
 976              	Steering_Angles:
 977 0000 00000000 	 .space 16
 977      00000000 
 977      00000000 
 977      00000000 
 978              	 .global Servo_PWMs
 979              	 .section .bss.Servo_PWMs,"aw",%nobits
 980              	 .align 2
 983              	Servo_PWMs:
 984 0000 00000000 	 .space 16
 984      00000000 
 984      00000000 
 984      00000000 
 985              	 .global Inveter_CAN_OK
 986              	 .section .bss.Inveter_CAN_OK,"aw",%nobits
 987              	 .align 2
 990              	Inveter_CAN_OK:
 991 0000 00000000 	 .space 4
 992              	 .global Actual_Speeds
 993              	 .section .bss.Actual_Speeds,"aw",%nobits
 994              	 .align 2
 997              	Actual_Speeds:
 998 0000 00000000 	 .space 16
 998      00000000 
 998      00000000 
 998      00000000 
 999              	 .global Actual_Distance
 1000              	 .section .bss.Actual_Distance,"aw",%nobits
 1001              	 .align 2
 1004              	Actual_Distance:
 1005 0000 00000000 	 .space 16
 1005      00000000 
 1005      00000000 
 1005      00000000 
 1006              	 .section .text.main,"ax",%progbits
 1007              	 .align 2
 1008              	 .global main
 1009              	 .code 16
 1010              	 .thumb_func
 1012              	main:
 1013              	.LFB224:
 1014              	 .file 6 "../main.c"
   1:../main.c     **** /*
   2:../main.c     ****  * main.c
   3:../main.c     ****  *
   4:../main.c     ****  *  Created on: 2022 Apr 25 09:31:37
   5:../main.c     ****  *  Author: lukas
   6:../main.c     ****  */
   7:../main.c     **** #include "DAVE.h"                 //Declarations from DAVE Code Generation (includes SFR declaratio
   8:../main.c     **** #include <math.h>
   9:../main.c     **** 
  10:../main.c     **** #define CHECK_BIT(var,pos) (((var)>>(pos)) & 1)
  11:../main.c     **** 
  12:../main.c     **** //constant
  13:../main.c     **** int NP[4] = {834, 732, 795, 700}; //servo nutral points PWM duty values
  14:../main.c     **** int NPfl = 722; int NPfr = 735; int NPrl = 75; int NPrr = 700; // serov defalut 750
  15:../main.c     **** #define MIN_Speed  0.05
  16:../main.c     **** #define MAX_Speed  1
  17:../main.c     **** 
  18:../main.c     **** #define ROTATION_ANGLE 53.96
  19:../main.c     **** #define ROTATION_ANGLE_OFFSET 5
  20:../main.c     **** #define ROTATION_SPEED  0.25
  21:../main.c     **** 
  22:../main.c     **** //#define PI180 0.01745329
  23:../main.c     **** #define PI 3.14
  24:../main.c     **** #define HALF_PI 1.57
  25:../main.c     **** #define RAD_TO_DEG 57.296
  26:../main.c     **** 
  27:../main.c     **** // steering parameter
  28:../main.c     **** //const float WHEEL_BASE = 0.448;
  29:../main.c     **** #define WHEEL_BASE 0.448
  30:../main.c     **** #define	HALF_WHEEL_BASE 			0.22				// halfbase of mobrob
  31:../main.c     **** //#define 	HALFBASEPOW2 		(HALFBASE*HALFBASE)		// halfbase of mobrob to the power of two
  32:../main.c     **** #define	HALF_TRACK_WIDTH		0.163					// halftrack of mobrob
  33:../main.c     **** #define 	R_WHEEL				0.067			// wheel radius of mobrob
  34:../main.c     **** #define	R_TRUN_MAX				20.000				// maximum corner radius (before straight)
  35:../main.c     **** #define 	R_TRUN_MIN				0.05				// minimum corner/reorientation radius
  36:../main.c     **** //#define		P_RO_VEL			0.500					// reduction factor for reorientation velocity
  37:../main.c     **** //#define		CWHEEL				(2.000*M_PI*RWHEEL)		// wheel circumference of mobrob
  38:../main.c     **** 
  39:../main.c     **** 
  40:../main.c     **** // Var MODES
  41:../main.c     **** volatile uint8_t RC_controll = 1; // if 1 RC controll
  42:../main.c     **** //uint8_t Steering_mode = 3; // otions 1 'Front';  2'Rear'; 3 '4_Wheel'; 4 'Carb'; 5 'Rotate' 0 not
  43:../main.c     **** enum STEERING_MODES{
  44:../main.c     **** 	ZERO = 0,
  45:../main.c     **** 	FRONT = 1,
  46:../main.c     **** 	BACK = 2,
  47:../main.c     **** 	ALL_WHEEL = 3,
  48:../main.c     **** 	CRAB = 4,
  49:../main.c     **** 	ROTATE =5
  50:../main.c     **** };
  51:../main.c     **** volatile enum STEERING_MODES Steering_mode = CRAB;
  52:../main.c     **** volatile uint8_t New_Input = 0;
  53:../main.c     **** volatile uint32_t NO_New_Input_counter = 0;
  54:../main.c     **** volatile uint8_t modeswitch_colldown = 10;
  55:../main.c     **** 
  56:../main.c     **** 
  57:../main.c     **** //VAR CAN
  58:../main.c     **** int16_t Speeds_int16_r[4] = {0};
  59:../main.c     **** int16_t CAN_RX_0 = 0;
  60:../main.c     **** CAN_NODE_STATUS_t init_status;
  61:../main.c     **** int CAN_OK = 0;
  62:../main.c     **** uint8_t Inverters_CAN_state[4] = {0};
  63:../main.c     **** uint32_t CAN_10ms_counter = 0; // to send ever 10ms
  64:../main.c     **** 
  65:../main.c     **** volatile uint8_t reset_distance = 0;// reste from mircum by setting 1
  66:../main.c     **** float speed_fl_act = 0;float speed_fr_act = 0;float speed_rl_act = 0;float speed_rr_act = 0; // in 
  67:../main.c     **** float distance_fl_act = 0;float distance_fr_act = 0;float distance_rl_act = 0;float distance_rr_act
  68:../main.c     **** 
  69:../main.c     **** volatile uint8_t CAN_RX_Inverter_count = 0;
  70:../main.c     **** 
  71:../main.c     **** //ULTRASOCNIC
  72:../main.c     **** // reciving
  73:../main.c     **** volatile uint8_t CAN_Ultrasonic_No_messasge_count = 100;
  74:../main.c     **** volatile uint8_t CAN_state_Ultrasonic = 0;
  75:../main.c     **** volatile uint16_t Ultrasonic_cm_C = 0;
  76:../main.c     **** volatile uint16_t Ultrasonic_cm_L = 0;
  77:../main.c     **** volatile uint16_t Ultrasonic_cm_R = 0;
  78:../main.c     **** // filtering
  79:../main.c     **** float ALPHA_ULTARSONIC = 0.3; // giltering prameter for the Exponential moving average
  80:../main.c     **** #define POS_OBSTRUCTED_ANGLE_MIN 50
  81:../main.c     **** #define POS_OBSTRUCTED_ANGLE_MAX 210
  82:../main.c     **** #define NEG_OBSTRUCTED_ANGLE_MIN -150
  83:../main.c     **** #define NEG_OBSTRUCTED_ANGLE_MAX -310
  84:../main.c     **** uint8_t obstructed_L = 0, obstructed_R = 0;
  85:../main.c     **** float Fil_Ultrasonic_m_C = 4;
  86:../main.c     **** float Fil_Ultrasonic_m_L = 4;
  87:../main.c     **** float Fil_Ultrasonic_m_R = 4;
  88:../main.c     **** 
  89:../main.c     **** #define ULRTA_NUM_NO_DATA_INVALID 40
  90:../main.c     **** uint8_t Ultrsonic_data_invaildcounter[3] = {ULRTA_NUM_NO_DATA_INVALID, ULRTA_NUM_NO_DATA_INVALID, U
  91:../main.c     **** 
  92:../main.c     **** // obstacels
  93:../main.c     **** float Obstacel_F[2] = {4, 4}; // y vaule alwasy stays 4
  94:../main.c     **** float Obstacel_L[2] = {4, -4};
  95:../main.c     **** float Obstacel_R[2] = {4, 4};
  96:../main.c     **** 
  97:../main.c     **** float obstacel_F_x = 0, obstacel_L_x = 0, obstacel_L_y = 0, obstacel_R_x = 0, obstacel_R_y = 0;
  98:../main.c     **** uint8_t Obstacel_valid[3] = {0, 0, 0};
  99:../main.c     **** 
 100:../main.c     **** // collison avdoidance
 101:../main.c     **** #define CA_START 1
 102:../main.c     **** #define CA_STOP 0.2
 103:../main.c     **** float avg_Speeds = 0;
 104:../main.c     **** float act_trajctory_x = 0, act_trajctory_y = 0;
 105:../main.c     **** 
 106:../main.c     **** 
 107:../main.c     **** // Var RC
 108:../main.c     **** uint8_t RC_Signal_OK = 0, RC_Signal_not_OK_counter = 0; // 0 no ok 1 OK
 109:../main.c     **** uint32_t  captured_time_Steering=0, captured_time_Speed=0;
 110:../main.c     **** uint8_t RC_no_Speed_data_counter = 0, RC_no_Steering_data_counter = 0;
 111:../main.c     **** float RC_Speed = 0, RC_Steering = 0;
 112:../main.c     **** #define RC_NP_SPEED  1500000
 113:../main.c     **** #define RC_NP_STEERING  1540000
 114:../main.c     **** float RC_Speed_ns_to_mps = 0.00000125;
 115:../main.c     **** float RC_Steering_ns_to_deg = 0.00021;
 116:../main.c     **** 
 117:../main.c     **** volatile uint32_t RC_gear_100us_counter = 0, RC_AUX1_100us_counter = 0;
 118:../main.c     **** volatile uint8_t RC_Gear_state = 2, RC_AUX1_state = 2;
 119:../main.c     **** volatile uint8_t RC_Gear_duty = 2, RC_Gear_duty_OLD =2, RC_AUX1_duty = 2;
 120:../main.c     **** uint8_t RC_Speed_Stop = 1;
 121:../main.c     **** 
 122:../main.c     **** //VAR general
 123:../main.c     **** float Steering_direction = 0; // steering Angle
 124:../main.c     **** float Driving_speed = 0;
 125:../main.c     **** 
 126:../main.c     **** float R_Turn;
 127:../main.c     **** float Speed_ratio;
 128:../main.c     **** 
 129:../main.c     **** float speed_fl = 0;float speed_fr = 0;float speed_rl = 0;float speed_rr = 0; // in m/s
 130:../main.c     **** float angle_fl = 0;float angle_fr = 0;float angle_rl = 0;float angle_rr = 0; // in deg  0 straing a
 131:../main.c     **** 
 132:../main.c     **** volatile float Speeds[4] = {0, 0, 0, 0};
 133:../main.c     **** volatile float Steering_Angles[4] = {0, 0, 0, 0};
 134:../main.c     **** float Servo_PWMs[4] = {0, 0, 0, 0};
 135:../main.c     **** 
 136:../main.c     **** //values form inveter bioard over CAN
 137:../main.c     **** uint8_t Inveter_CAN_OK[4] = {0};
 138:../main.c     **** float Actual_Speeds[4] = {0};
 139:../main.c     **** float Actual_Distance[4] = {0};
 140:../main.c     **** 
 141:../main.c     **** // FUNCTIONS
 142:../main.c     **** void CAN_send_Speeds(float Speed_data[4]);
 143:../main.c     **** void CAN_reset_distance(uint8_t distance_to_reset[4]);
 144:../main.c     **** void Steering_set_Angles(float Angles_data_int[4]);
 145:../main.c     **** void Steering_Function(float Steering_direction_cal, float Driving_speed_cal, uint8_t Steering_mode
 146:../main.c     **** void RC_Recive(void);
 147:../main.c     **** void Servo_NP_setting(void);
 148:../main.c     **** void mode_led(uint8_t var);
 149:../main.c     **** float average(float a[],int num_values);
 150:../main.c     **** void CAN_Inveter_RX_Interperter(uint8_t data_RX[8], uint8_t Motor_on_rover);
 151:../main.c     **** void CAN_RX_Inverter_Read_Data();
 152:../main.c     **** void Ultra_sonic_filter(int16_t Ultrasonic_cm_C_clc, int16_t Ultrasonic_cm_L_clc, int16_t Ultrasoni
 153:../main.c     **** float Exp_moving_average(float new_value, float value, float ALPHA);
 154:../main.c     **** uint8_t Ultrasoinc_Obstructet_Test(float Angle);
 155:../main.c     **** void Collision_voidance();
 156:../main.c     **** 
 157:../main.c     **** 
 158:../main.c     **** int main(void)
 159:../main.c     **** {
 1015              	 .loc 6 159 0
 1016              	 .cfi_startproc
 1017 0000 90B5     	 push {r4,r7,lr}
 1018              	.LCFI30:
 1019              	 .cfi_def_cfa_offset 12
 1020              	 .cfi_offset 4,-12
 1021              	 .cfi_offset 7,-8
 1022              	 .cfi_offset 14,-4
 1023 0002 83B0     	 sub sp,sp,#12
 1024              	.LCFI31:
 1025              	 .cfi_def_cfa_offset 24
 1026 0004 00AF     	 add r7,sp,#0
 1027              	.LCFI32:
 1028              	 .cfi_def_cfa_register 7
 160:../main.c     ****   DAVE_STATUS_t status;
 161:../main.c     **** 
 162:../main.c     ****   status = DAVE_Init();           /* Initialization of DAVE APPs  */
 1029              	 .loc 6 162 0
 1030 0006 FC1D     	 add r4,r7,#7
 1031 0008 FFF7FEFF 	 bl DAVE_Init
 1032 000c 031C     	 mov r3,r0
 1033 000e 2370     	 strb r3,[r4]
 163:../main.c     **** 
 164:../main.c     ****   if (status != DAVE_STATUS_SUCCESS)
 1034              	 .loc 6 164 0
 1035 0010 FB1D     	 add r3,r7,#7
 1036 0012 1B78     	 ldrb r3,[r3]
 1037 0014 002B     	 cmp r3,#0
 1038 0016 00D0     	 beq .L22
 1039              	.L23:
 165:../main.c     ****   {
 166:../main.c     ****     /* Placeholder for error handler code. The while loop below can be replaced with an user error 
 167:../main.c     ****     XMC_DEBUG("DAVE APPs initialization failed\n");
 168:../main.c     **** 
 169:../main.c     ****     while(1U)
 170:../main.c     ****     {
 171:../main.c     **** 
 172:../main.c     ****     }
 1040              	 .loc 6 172 0 discriminator 1
 1041 0018 FEE7     	 b .L23
 1042              	.L22:
 173:../main.c     ****   }
 174:../main.c     **** 
 175:../main.c     ****   //Initialization of CAN
 176:../main.c     ****   	//CAN_NODE_STATUS_t init_status;
 177:../main.c     ****   	init_status = CAN_NODE_Init(&CAN_NODE_0);
 1043              	 .loc 6 177 0
 1044 001a 094B     	 ldr r3,.L26
 1045 001c 181C     	 mov r0,r3
 1046 001e FFF7FEFF 	 bl CAN_NODE_Init
 1047 0022 031C     	 mov r3,r0
 1048 0024 1A1C     	 mov r2,r3
 1049 0026 074B     	 ldr r3,.L26+4
 1050 0028 1A70     	 strb r2,[r3]
 178:../main.c     **** 
 179:../main.c     ****   	if (init_status != CAN_NODE_STATUS_SUCCESS) {
 1051              	 .loc 6 179 0
 1052 002a 064B     	 ldr r3,.L26+4
 1053 002c 1B78     	 ldrb r3,[r3]
 1054 002e 002B     	 cmp r3,#0
 1055 0030 02D1     	 bne .L24
 180:../main.c     ****   		XMC_DEBUG("CAN initialization failed\n");
 181:../main.c     ****   	}
 182:../main.c     ****   	else{
 183:../main.c     ****   		CAN_OK = 1;
 1056              	 .loc 6 183 0
 1057 0032 054B     	 ldr r3,.L26+8
 1058 0034 0122     	 mov r2,#1
 1059 0036 1A60     	 str r2,[r3]
 1060              	.L24:
 184:../main.c     ****   	}
 185:../main.c     **** 
 186:../main.c     ****   	// watchdog
 187:../main.c     ****   	WATCHDOG_Start();
 1061              	 .loc 6 187 0
 1062 0038 FFF7FEFF 	 bl WATCHDOG_Start
 1063              	.L25:
 188:../main.c     **** 
 189:../main.c     ****   /* Placeholder for user application code. The while loop below can be replaced with user applicat
 190:../main.c     ****   while(1U)
 191:../main.c     ****   {
 192:../main.c     **** 	//Servo_NP_setting();	  // nutral point servo setting
 193:../main.c     ****   }
 1064              	 .loc 6 193 0 discriminator 2
 1065 003c FEE7     	 b .L25
 1066              	.L27:
 1067 003e C046     	 .align 2
 1068              	.L26:
 1069 0040 00000000 	 .word CAN_NODE_0
 1070 0044 00000000 	 .word init_status
 1071 0048 00000000 	 .word CAN_OK
 1072              	 .cfi_endproc
 1073              	.LFE224:
 1075              	 .global __aeabi_fcmpgt
 1076              	 .global __aeabi_fcmplt
 1077              	 .global __aeabi_f2d
 1078              	 .global __aeabi_dcmplt
 1079              	 .global __aeabi_dcmpgt
 1080              	 .global __aeabi_ddiv
 1081              	 .global __aeabi_d2f
 1082              	 .global __aeabi_dadd
 1083              	 .global __aeabi_dmul
 1084              	 .global __aeabi_dsub
 1085              	 .global __aeabi_fmul
 1086              	 .global __aeabi_fdiv
 1087              	 .section .text.Steering_Function,"ax",%progbits
 1088              	 .align 2
 1089              	 .global Steering_Function
 1090              	 .code 16
 1091              	 .thumb_func
 1093              	Steering_Function:
 1094              	.LFB225:
 194:../main.c     **** }
 195:../main.c     **** 
 196:../main.c     **** 
 197:../main.c     **** void Steering_Function(float Steering_direction_cal, float Driving_speed_cal, uint8_t Steering_mode
 1095              	 .loc 6 197 0
 1096              	 .cfi_startproc
 1097 0000 F0B5     	 push {r4,r5,r6,r7,lr}
 1098              	.LCFI33:
 1099              	 .cfi_def_cfa_offset 20
 1100              	 .cfi_offset 4,-20
 1101              	 .cfi_offset 5,-16
 1102              	 .cfi_offset 6,-12
 1103              	 .cfi_offset 7,-8
 1104              	 .cfi_offset 14,-4
 1105 0002 85B0     	 sub sp,sp,#20
 1106              	.LCFI34:
 1107              	 .cfi_def_cfa_offset 40
 1108 0004 00AF     	 add r7,sp,#0
 1109              	.LCFI35:
 1110              	 .cfi_def_cfa_register 7
 1111 0006 F860     	 str r0,[r7,#12]
 1112 0008 B960     	 str r1,[r7,#8]
 1113 000a FB1D     	 add r3,r7,#7
 1114 000c 1A70     	 strb r2,[r3]
 198:../main.c     **** 	New_Input = 0;
 1115              	 .loc 6 198 0
 1116 000e B84B     	 ldr r3,.L115
 1117 0010 0022     	 mov r2,#0
 1118 0012 1A70     	 strb r2,[r3]
 199:../main.c     **** 
 200:../main.c     **** 	if(Driving_speed_cal > MAX_Speed) Driving_speed_cal = MAX_Speed;
 1119              	 .loc 6 200 0
 1120 0014 B868     	 ldr r0,[r7,#8]
 1121 0016 FE21     	 mov r1,#254
 1122 0018 8905     	 lsl r1,r1,#22
 1123 001a FFF7FEFF 	 bl __aeabi_fcmpgt
 1124 001e 031E     	 sub r3,r0,#0
 1125 0020 02D0     	 beq .L29
 1126              	 .loc 6 200 0 is_stmt 0 discriminator 1
 1127 0022 FE23     	 mov r3,#254
 1128 0024 9B05     	 lsl r3,r3,#22
 1129 0026 BB60     	 str r3,[r7,#8]
 1130              	.L29:
 201:../main.c     **** 	if(Driving_speed_cal < -MAX_Speed) Driving_speed_cal = -MAX_Speed;
 1131              	 .loc 6 201 0 is_stmt 1
 1132 0028 B868     	 ldr r0,[r7,#8]
 1133 002a B249     	 ldr r1,.L115+4
 1134 002c FFF7FEFF 	 bl __aeabi_fcmplt
 1135 0030 031E     	 sub r3,r0,#0
 1136 0032 01D0     	 beq .L31
 1137              	 .loc 6 201 0 is_stmt 0 discriminator 1
 1138 0034 AF4B     	 ldr r3,.L115+4
 1139 0036 BB60     	 str r3,[r7,#8]
 1140              	.L31:
 202:../main.c     **** 	if((0 < Driving_speed_cal) & (Driving_speed_cal < MIN_Speed)) Driving_speed_cal = 0;
 1141              	 .loc 6 202 0 is_stmt 1
 1142 0038 0123     	 mov r3,#1
 1143 003a 1C1C     	 add r4,r3,#0
 1144 003c B868     	 ldr r0,[r7,#8]
 1145 003e 0021     	 mov r1,#0
 1146 0040 FFF7FEFF 	 bl __aeabi_fcmpgt
 1147 0044 031E     	 sub r3,r0,#0
 1148 0046 01D1     	 bne .L33
 1149 0048 0023     	 mov r3,#0
 1150 004a 1C1C     	 add r4,r3,#0
 1151              	.L33:
 1152 004c E4B2     	 uxtb r4,r4
 1153 004e B868     	 ldr r0,[r7,#8]
 1154 0050 FFF7FEFF 	 bl __aeabi_f2d
 1155 0054 0A1C     	 mov r2,r1
 1156 0056 011C     	 mov r1,r0
 1157 0058 0123     	 mov r3,#1
 1158 005a 1D1C     	 add r5,r3,#0
 1159 005c 081C     	 mov r0,r1
 1160 005e 111C     	 mov r1,r2
 1161 0060 A54A     	 ldr r2,.L115+8
 1162 0062 A64B     	 ldr r3,.L115+12
 1163 0064 FFF7FEFF 	 bl __aeabi_dcmplt
 1164 0068 031E     	 sub r3,r0,#0
 1165 006a 01D1     	 bne .L34
 1166 006c 0023     	 mov r3,#0
 1167 006e 1D1C     	 add r5,r3,#0
 1168              	.L34:
 1169 0070 EBB2     	 uxtb r3,r5
 1170 0072 2340     	 and r3,r4
 1171 0074 DBB2     	 uxtb r3,r3
 1172 0076 002B     	 cmp r3,#0
 1173 0078 01D0     	 beq .L35
 1174              	 .loc 6 202 0 is_stmt 0 discriminator 1
 1175 007a 0023     	 mov r3,#0
 1176 007c BB60     	 str r3,[r7,#8]
 1177              	.L35:
 203:../main.c     **** 	if((0 > Driving_speed_cal) & (Driving_speed_cal > -MIN_Speed)) Driving_speed_cal = 0;
 1178              	 .loc 6 203 0 is_stmt 1
 1179 007e 0123     	 mov r3,#1
 1180 0080 1C1C     	 add r4,r3,#0
 1181 0082 B868     	 ldr r0,[r7,#8]
 1182 0084 0021     	 mov r1,#0
 1183 0086 FFF7FEFF 	 bl __aeabi_fcmplt
 1184 008a 031E     	 sub r3,r0,#0
 1185 008c 01D1     	 bne .L36
 1186 008e 0023     	 mov r3,#0
 1187 0090 1C1C     	 add r4,r3,#0
 1188              	.L36:
 1189 0092 E4B2     	 uxtb r4,r4
 1190 0094 B868     	 ldr r0,[r7,#8]
 1191 0096 FFF7FEFF 	 bl __aeabi_f2d
 1192 009a 0A1C     	 mov r2,r1
 1193 009c 011C     	 mov r1,r0
 1194 009e 0123     	 mov r3,#1
 1195 00a0 1D1C     	 add r5,r3,#0
 1196 00a2 081C     	 mov r0,r1
 1197 00a4 111C     	 mov r1,r2
 1198 00a6 944A     	 ldr r2,.L115+8
 1199 00a8 954B     	 ldr r3,.L115+16
 1200 00aa FFF7FEFF 	 bl __aeabi_dcmpgt
 1201 00ae 031E     	 sub r3,r0,#0
 1202 00b0 01D1     	 bne .L37
 1203 00b2 0023     	 mov r3,#0
 1204 00b4 1D1C     	 add r5,r3,#0
 1205              	.L37:
 1206 00b6 EBB2     	 uxtb r3,r5
 1207 00b8 2340     	 and r3,r4
 1208 00ba DBB2     	 uxtb r3,r3
 1209 00bc 002B     	 cmp r3,#0
 1210 00be 01D0     	 beq .L38
 1211              	 .loc 6 203 0 is_stmt 0 discriminator 1
 1212 00c0 0023     	 mov r3,#0
 1213 00c2 BB60     	 str r3,[r7,#8]
 1214              	.L38:
 204:../main.c     **** 
 205:../main.c     **** 	switch(Steering_mode_cal) // options 'Front'; 'Rear'; '4_Wheel'; 'Carb'; 'Rotate'
 1215              	 .loc 6 205 0 is_stmt 1
 1216 00c4 FB1D     	 add r3,r7,#7
 1217 00c6 1B78     	 ldrb r3,[r3]
 1218 00c8 052B     	 cmp r3,#5
 1219 00ca 01D9     	 bls .LCB549
 1220 00cc 00F049FE 	 bl .L39
 1221              	.LCB549:
 1222 00d0 9A00     	 lsl r2,r3,#2
 1223 00d2 8C4B     	 ldr r3,.L115+20
 1224 00d4 D318     	 add r3,r2,r3
 1225 00d6 1B68     	 ldr r3,[r3]
 1226 00d8 9F46     	 mov pc,r3
 1227              	 .section .rodata.Steering_Function,"a",%progbits
 1228              	 .align 2
 1229              	.L41:
 1230 0000 620D0000 	 .word .L39
 1231 0004 DA000000 	 .word .L40
 1232 0008 A2040000 	 .word .L42
 1233 000c 6C080000 	 .word .L43
 1234 0010 7C0C0000 	 .word .L44
 1235 0014 DA0C0000 	 .word .L45
 1236              	 .section .text.Steering_Function
 1237              	.L40:
 206:../main.c     **** 	{
 207:../main.c     **** 		case FRONT://#############################################################
 208:../main.c     **** 			// steering limits
 209:../main.c     **** 			if(Steering_direction_cal > 50) Steering_direction_cal = 50;
 1238              	 .loc 6 209 0
 1239 00da F868     	 ldr r0,[r7,#12]
 1240 00dc 8A49     	 ldr r1,.L115+24
 1241 00de FFF7FEFF 	 bl __aeabi_fcmpgt
 1242 00e2 031E     	 sub r3,r0,#0
 1243 00e4 01D0     	 beq .L46
 1244              	 .loc 6 209 0 is_stmt 0 discriminator 1
 1245 00e6 884B     	 ldr r3,.L115+24
 1246 00e8 FB60     	 str r3,[r7,#12]
 1247              	.L46:
 210:../main.c     **** 			if(Steering_direction_cal < -50) Steering_direction_cal = -50;
 1248              	 .loc 6 210 0 is_stmt 1
 1249 00ea F868     	 ldr r0,[r7,#12]
 1250 00ec 8749     	 ldr r1,.L115+28
 1251 00ee FFF7FEFF 	 bl __aeabi_fcmplt
 1252 00f2 031E     	 sub r3,r0,#0
 1253 00f4 01D0     	 beq .L48
 1254              	 .loc 6 210 0 is_stmt 0 discriminator 1
 1255 00f6 854B     	 ldr r3,.L115+28
 1256 00f8 FB60     	 str r3,[r7,#12]
 1257              	.L48:
 211:../main.c     **** 
 212:../main.c     **** 			// pre calc
 213:../main.c     **** 			R_Turn = WHEEL_BASE / tan(Steering_direction_cal / RAD_TO_DEG); // to truni graduis converstion
 1258              	 .loc 6 213 0 is_stmt 1
 1259 00fa F868     	 ldr r0,[r7,#12]
 1260 00fc FFF7FEFF 	 bl __aeabi_f2d
 1261 0100 031C     	 mov r3,r0
 1262 0102 0C1C     	 mov r4,r1
 1263 0104 181C     	 mov r0,r3
 1264 0106 211C     	 mov r1,r4
 1265 0108 814A     	 ldr r2,.L115+32
 1266 010a 824B     	 ldr r3,.L115+36
 1267 010c FFF7FEFF 	 bl __aeabi_ddiv
 1268 0110 031C     	 mov r3,r0
 1269 0112 0C1C     	 mov r4,r1
 1270 0114 181C     	 mov r0,r3
 1271 0116 211C     	 mov r1,r4
 1272 0118 FFF7FEFF 	 bl tan
 1273 011c 031C     	 mov r3,r0
 1274 011e 0C1C     	 mov r4,r1
 1275 0120 7D48     	 ldr r0,.L115+40
 1276 0122 7E49     	 ldr r1,.L115+44
 1277 0124 1A1C     	 mov r2,r3
 1278 0126 231C     	 mov r3,r4
 1279 0128 FFF7FEFF 	 bl __aeabi_ddiv
 1280 012c 031C     	 mov r3,r0
 1281 012e 0C1C     	 mov r4,r1
 1282 0130 181C     	 mov r0,r3
 1283 0132 211C     	 mov r1,r4
 1284 0134 FFF7FEFF 	 bl __aeabi_d2f
 1285 0138 021C     	 add r2,r0,#0
 1286 013a 794B     	 ldr r3,.L115+48
 1287 013c 1A60     	 str r2,[r3]
 214:../main.c     **** 			Speed_ratio = (2 * (copysign(R_Turn,1) + HALF_TRACK_WIDTH) * M_PI) / (2 * copysign(R_Turn,1) * M
 1288              	 .loc 6 214 0
 1289 013e 784B     	 ldr r3,.L115+48
 1290 0140 1B68     	 ldr r3,[r3]
 1291 0142 5B00     	 lsl r3,r3,#1
 1292 0144 5B08     	 lsr r3,r3,#1
 1293 0146 181C     	 add r0,r3,#0
 1294 0148 FFF7FEFF 	 bl __aeabi_f2d
 1295 014c 031C     	 mov r3,r0
 1296 014e 0C1C     	 mov r4,r1
 1297 0150 181C     	 mov r0,r3
 1298 0152 211C     	 mov r1,r4
 1299 0154 734A     	 ldr r2,.L115+52
 1300 0156 744B     	 ldr r3,.L115+56
 1301 0158 FFF7FEFF 	 bl __aeabi_dadd
 1302 015c 031C     	 mov r3,r0
 1303 015e 0C1C     	 mov r4,r1
 1304 0160 181C     	 mov r0,r3
 1305 0162 211C     	 mov r1,r4
 1306 0164 1A1C     	 mov r2,r3
 1307 0166 231C     	 mov r3,r4
 1308 0168 FFF7FEFF 	 bl __aeabi_dadd
 1309 016c 031C     	 mov r3,r0
 1310 016e 0C1C     	 mov r4,r1
 1311 0170 181C     	 mov r0,r3
 1312 0172 211C     	 mov r1,r4
 1313 0174 6D4A     	 ldr r2,.L115+60
 1314 0176 6E4B     	 ldr r3,.L115+64
 1315 0178 FFF7FEFF 	 bl __aeabi_dmul
 1316 017c 031C     	 mov r3,r0
 1317 017e 0C1C     	 mov r4,r1
 1318 0180 1D1C     	 mov r5,r3
 1319 0182 261C     	 mov r6,r4
 1320 0184 664B     	 ldr r3,.L115+48
 1321 0186 1B68     	 ldr r3,[r3]
 1322 0188 5B00     	 lsl r3,r3,#1
 1323 018a 5B08     	 lsr r3,r3,#1
 1324 018c 181C     	 add r0,r3,#0
 1325 018e FFF7FEFF 	 bl __aeabi_f2d
 1326 0192 031C     	 mov r3,r0
 1327 0194 0C1C     	 mov r4,r1
 1328 0196 181C     	 mov r0,r3
 1329 0198 211C     	 mov r1,r4
 1330 019a 1A1C     	 mov r2,r3
 1331 019c 231C     	 mov r3,r4
 1332 019e FFF7FEFF 	 bl __aeabi_dadd
 1333 01a2 031C     	 mov r3,r0
 1334 01a4 0C1C     	 mov r4,r1
 1335 01a6 181C     	 mov r0,r3
 1336 01a8 211C     	 mov r1,r4
 1337 01aa 604A     	 ldr r2,.L115+60
 1338 01ac 604B     	 ldr r3,.L115+64
 1339 01ae FFF7FEFF 	 bl __aeabi_dmul
 1340 01b2 031C     	 mov r3,r0
 1341 01b4 0C1C     	 mov r4,r1
 1342 01b6 281C     	 mov r0,r5
 1343 01b8 311C     	 mov r1,r6
 1344 01ba 1A1C     	 mov r2,r3
 1345 01bc 231C     	 mov r3,r4
 1346 01be FFF7FEFF 	 bl __aeabi_ddiv
 1347 01c2 031C     	 mov r3,r0
 1348 01c4 0C1C     	 mov r4,r1
 1349 01c6 181C     	 mov r0,r3
 1350 01c8 211C     	 mov r1,r4
 1351 01ca FFF7FEFF 	 bl __aeabi_d2f
 1352 01ce 021C     	 add r2,r0,#0
 1353 01d0 584B     	 ldr r3,.L115+68
 1354 01d2 1A60     	 str r2,[r3]
 215:../main.c     **** 
 216:../main.c     **** 			if((R_TRUN_MIN < R_Turn) && (R_Turn < R_TRUN_MAX)){
 1355              	 .loc 6 216 0
 1356 01d4 524B     	 ldr r3,.L115+48
 1357 01d6 1B68     	 ldr r3,[r3]
 1358 01d8 181C     	 add r0,r3,#0
 1359 01da FFF7FEFF 	 bl __aeabi_f2d
 1360 01de 031C     	 mov r3,r0
 1361 01e0 0C1C     	 mov r4,r1
 1362 01e2 181C     	 mov r0,r3
 1363 01e4 211C     	 mov r1,r4
 1364 01e6 444A     	 ldr r2,.L115+8
 1365 01e8 444B     	 ldr r3,.L115+12
 1366 01ea FFF7FEFF 	 bl __aeabi_dcmpgt
 1367 01ee 031E     	 sub r3,r0,#0
 1368 01f0 00D1     	 bne .LCB689
 1369 01f2 AFE0     	 b .L50
 1370              	.LCB689:
 1371              	 .loc 6 216 0 is_stmt 0 discriminator 1
 1372 01f4 4A4B     	 ldr r3,.L115+48
 1373 01f6 1B68     	 ldr r3,[r3]
 1374 01f8 181C     	 add r0,r3,#0
 1375 01fa 4F49     	 ldr r1,.L115+72
 1376 01fc FFF7FEFF 	 bl __aeabi_fcmplt
 1377 0200 031E     	 sub r3,r0,#0
 1378 0202 00D1     	 bne .LCB697
 1379 0204 A6E0     	 b .L50
 1380              	.LCB697:
 217:../main.c     **** 				angle_fl = RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn + HALF_TRACK_WIDTH)); // out wheel
 1381              	 .loc 6 217 0 is_stmt 1
 1382 0206 464B     	 ldr r3,.L115+48
 1383 0208 1B68     	 ldr r3,[r3]
 1384 020a 181C     	 add r0,r3,#0
 1385 020c FFF7FEFF 	 bl __aeabi_f2d
 1386 0210 031C     	 mov r3,r0
 1387 0212 0C1C     	 mov r4,r1
 1388 0214 181C     	 mov r0,r3
 1389 0216 211C     	 mov r1,r4
 1390 0218 424A     	 ldr r2,.L115+52
 1391 021a 434B     	 ldr r3,.L115+56
 1392 021c FFF7FEFF 	 bl __aeabi_dadd
 1393 0220 031C     	 mov r3,r0
 1394 0222 0C1C     	 mov r4,r1
 1395 0224 3C48     	 ldr r0,.L115+40
 1396 0226 3D49     	 ldr r1,.L115+44
 1397 0228 1A1C     	 mov r2,r3
 1398 022a 231C     	 mov r3,r4
 1399 022c FFF7FEFF 	 bl __aeabi_ddiv
 1400 0230 031C     	 mov r3,r0
 1401 0232 0C1C     	 mov r4,r1
 1402 0234 181C     	 mov r0,r3
 1403 0236 211C     	 mov r1,r4
 1404 0238 FFF7FEFF 	 bl atan
 1405 023c 031C     	 mov r3,r0
 1406 023e 0C1C     	 mov r4,r1
 1407 0240 181C     	 mov r0,r3
 1408 0242 211C     	 mov r1,r4
 1409 0244 324A     	 ldr r2,.L115+32
 1410 0246 334B     	 ldr r3,.L115+36
 1411 0248 FFF7FEFF 	 bl __aeabi_dmul
 1412 024c 031C     	 mov r3,r0
 1413 024e 0C1C     	 mov r4,r1
 1414 0250 181C     	 mov r0,r3
 1415 0252 211C     	 mov r1,r4
 1416 0254 FFF7FEFF 	 bl __aeabi_d2f
 1417 0258 021C     	 add r2,r0,#0
 1418 025a 384B     	 ldr r3,.L115+76
 1419 025c 1A60     	 str r2,[r3]
 218:../main.c     **** 				angle_fr = RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn - HALF_TRACK_WIDTH)); // in wheel
 1420              	 .loc 6 218 0
 1421 025e 304B     	 ldr r3,.L115+48
 1422 0260 1B68     	 ldr r3,[r3]
 1423 0262 181C     	 add r0,r3,#0
 1424 0264 FFF7FEFF 	 bl __aeabi_f2d
 1425 0268 031C     	 mov r3,r0
 1426 026a 0C1C     	 mov r4,r1
 1427 026c 181C     	 mov r0,r3
 1428 026e 211C     	 mov r1,r4
 1429 0270 2C4A     	 ldr r2,.L115+52
 1430 0272 2D4B     	 ldr r3,.L115+56
 1431 0274 FFF7FEFF 	 bl __aeabi_dsub
 1432 0278 031C     	 mov r3,r0
 1433 027a 0C1C     	 mov r4,r1
 1434 027c 2648     	 ldr r0,.L115+40
 1435 027e 2749     	 ldr r1,.L115+44
 1436 0280 1A1C     	 mov r2,r3
 1437 0282 231C     	 mov r3,r4
 1438 0284 FFF7FEFF 	 bl __aeabi_ddiv
 1439 0288 031C     	 mov r3,r0
 1440 028a 0C1C     	 mov r4,r1
 1441 028c 181C     	 mov r0,r3
 1442 028e 211C     	 mov r1,r4
 1443 0290 FFF7FEFF 	 bl atan
 1444 0294 031C     	 mov r3,r0
 1445 0296 0C1C     	 mov r4,r1
 1446 0298 181C     	 mov r0,r3
 1447 029a 211C     	 mov r1,r4
 1448 029c 1C4A     	 ldr r2,.L115+32
 1449 029e 1D4B     	 ldr r3,.L115+36
 1450 02a0 FFF7FEFF 	 bl __aeabi_dmul
 1451 02a4 031C     	 mov r3,r0
 1452 02a6 0C1C     	 mov r4,r1
 1453 02a8 181C     	 mov r0,r3
 1454 02aa 211C     	 mov r1,r4
 1455 02ac FFF7FEFF 	 bl __aeabi_d2f
 1456 02b0 021C     	 add r2,r0,#0
 1457 02b2 234B     	 ldr r3,.L115+80
 1458 02b4 1A60     	 str r2,[r3]
 219:../main.c     **** 
 220:../main.c     **** 				speed_fl = Driving_speed_cal * Speed_ratio;
 1459              	 .loc 6 220 0
 1460 02b6 1F4B     	 ldr r3,.L115+68
 1461 02b8 1B68     	 ldr r3,[r3]
 1462 02ba 181C     	 add r0,r3,#0
 1463 02bc B968     	 ldr r1,[r7,#8]
 1464 02be FFF7FEFF 	 bl __aeabi_fmul
 1465 02c2 031C     	 add r3,r0,#0
 1466 02c4 1A1C     	 add r2,r3,#0
 1467 02c6 1F4B     	 ldr r3,.L115+84
 1468 02c8 1A60     	 str r2,[r3]
 221:../main.c     **** 				speed_fr = Driving_speed_cal / Speed_ratio;
 1469              	 .loc 6 221 0
 1470 02ca 1A4B     	 ldr r3,.L115+68
 1471 02cc 1B68     	 ldr r3,[r3]
 1472 02ce B868     	 ldr r0,[r7,#8]
 1473 02d0 191C     	 add r1,r3,#0
 1474 02d2 FFF7FEFF 	 bl __aeabi_fdiv
 1475 02d6 031C     	 add r3,r0,#0
 1476 02d8 1A1C     	 add r2,r3,#0
 1477 02da 1B4B     	 ldr r3,.L115+88
 1478 02dc 1A60     	 str r2,[r3]
 222:../main.c     **** 				//speed_rl = Driving_speed_cal * Speed_ratio;
 223:../main.c     **** 				//speed_rr = Driving_speed_cal / Speed_ratio;
 224:../main.c     **** 
 225:../main.c     **** 				speed_rl = speed_fl;
 1479              	 .loc 6 225 0
 1480 02de 194B     	 ldr r3,.L115+84
 1481 02e0 1A68     	 ldr r2,[r3]
 1482 02e2 1A4B     	 ldr r3,.L115+92
 1483 02e4 1A60     	 str r2,[r3]
 226:../main.c     **** 				speed_rr = speed_fr;
 1484              	 .loc 6 226 0
 1485 02e6 184B     	 ldr r3,.L115+88
 1486 02e8 1A68     	 ldr r2,[r3]
 1487 02ea 194B     	 ldr r3,.L115+96
 1488 02ec 1A60     	 str r2,[r3]
 1489 02ee D0E0     	 b .L53
 1490              	.L116:
 1491              	 .align 2
 1492              	.L115:
 1493 02f0 00000000 	 .word New_Input
 1494 02f4 000080BF 	 .word -1082130432
 1495 02f8 9A999999 	 .word -1717986918
 1496 02fc 9999A93F 	 .word 1068079513
 1497 0300 9999A9BF 	 .word -1079404135
 1498 0304 00000000 	 .word .L41
 1499 0308 00004842 	 .word 1112014848
 1500 030c 000048C2 	 .word -1035468800
 1501 0310 D9CEF753 	 .word 1408749273
 1502 0314 E3A54C40 	 .word 1078765027
 1503 0318 79E92631 	 .word 824633721
 1504 031c 08ACDC3F 	 .word 1071426568
 1505 0320 00000000 	 .word R_Turn
 1506 0324 77BE9F1A 	 .word 446676599
 1507 0328 2FDDC43F 	 .word 1069866287
 1508 032c 182D4454 	 .word 1413754136
 1509 0330 FB210940 	 .word 1074340347
 1510 0334 00000000 	 .word Speed_ratio
 1511 0338 0000A041 	 .word 1101004800
 1512 033c 00000000 	 .word angle_fl
 1513 0340 00000000 	 .word angle_fr
 1514 0344 00000000 	 .word speed_fl
 1515 0348 00000000 	 .word speed_fr
 1516 034c 00000000 	 .word speed_rl
 1517 0350 00000000 	 .word speed_rr
 1518              	.L50:
 227:../main.c     **** 			}
 228:../main.c     **** 			else if((- R_TRUN_MIN > R_Turn) && (R_Turn > -R_TRUN_MAX)){
 1519              	 .loc 6 228 0
 1520 0354 D84B     	 ldr r3,.L117
 1521 0356 1B68     	 ldr r3,[r3]
 1522 0358 181C     	 add r0,r3,#0
 1523 035a FFF7FEFF 	 bl __aeabi_f2d
 1524 035e 031C     	 mov r3,r0
 1525 0360 0C1C     	 mov r4,r1
 1526 0362 181C     	 mov r0,r3
 1527 0364 211C     	 mov r1,r4
 1528 0366 D54A     	 ldr r2,.L117+4
 1529 0368 D54B     	 ldr r3,.L117+8
 1530 036a FFF7FEFF 	 bl __aeabi_dcmplt
 1531 036e 031E     	 sub r3,r0,#0
 1532 0370 00D1     	 bne .LCB847
 1533 0372 7CE0     	 b .L54
 1534              	.LCB847:
 1535              	 .loc 6 228 0 is_stmt 0 discriminator 1
 1536 0374 D04B     	 ldr r3,.L117
 1537 0376 1B68     	 ldr r3,[r3]
 1538 0378 181C     	 add r0,r3,#0
 1539 037a D249     	 ldr r1,.L117+12
 1540 037c FFF7FEFF 	 bl __aeabi_fcmpgt
 1541 0380 031E     	 sub r3,r0,#0
 1542 0382 74D0     	 beq .L54
 229:../main.c     **** 				angle_fl = RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn + HALF_TRACK_WIDTH)); // in wheel
 1543              	 .loc 6 229 0 is_stmt 1
 1544 0384 CC4B     	 ldr r3,.L117
 1545 0386 1B68     	 ldr r3,[r3]
 1546 0388 181C     	 add r0,r3,#0
 1547 038a FFF7FEFF 	 bl __aeabi_f2d
 1548 038e 031C     	 mov r3,r0
 1549 0390 0C1C     	 mov r4,r1
 1550 0392 181C     	 mov r0,r3
 1551 0394 211C     	 mov r1,r4
 1552 0396 CC4A     	 ldr r2,.L117+16
 1553 0398 CC4B     	 ldr r3,.L117+20
 1554 039a FFF7FEFF 	 bl __aeabi_dadd
 1555 039e 031C     	 mov r3,r0
 1556 03a0 0C1C     	 mov r4,r1
 1557 03a2 CB48     	 ldr r0,.L117+24
 1558 03a4 CB49     	 ldr r1,.L117+28
 1559 03a6 1A1C     	 mov r2,r3
 1560 03a8 231C     	 mov r3,r4
 1561 03aa FFF7FEFF 	 bl __aeabi_ddiv
 1562 03ae 031C     	 mov r3,r0
 1563 03b0 0C1C     	 mov r4,r1
 1564 03b2 181C     	 mov r0,r3
 1565 03b4 211C     	 mov r1,r4
 1566 03b6 FFF7FEFF 	 bl atan
 1567 03ba 031C     	 mov r3,r0
 1568 03bc 0C1C     	 mov r4,r1
 1569 03be 181C     	 mov r0,r3
 1570 03c0 211C     	 mov r1,r4
 1571 03c2 C54A     	 ldr r2,.L117+32
 1572 03c4 C54B     	 ldr r3,.L117+36
 1573 03c6 FFF7FEFF 	 bl __aeabi_dmul
 1574 03ca 031C     	 mov r3,r0
 1575 03cc 0C1C     	 mov r4,r1
 1576 03ce 181C     	 mov r0,r3
 1577 03d0 211C     	 mov r1,r4
 1578 03d2 FFF7FEFF 	 bl __aeabi_d2f
 1579 03d6 021C     	 add r2,r0,#0
 1580 03d8 C14B     	 ldr r3,.L117+40
 1581 03da 1A60     	 str r2,[r3]
 230:../main.c     **** 				angle_fr = RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn - HALF_TRACK_WIDTH)); // out wheel
 1582              	 .loc 6 230 0
 1583 03dc B64B     	 ldr r3,.L117
 1584 03de 1B68     	 ldr r3,[r3]
 1585 03e0 181C     	 add r0,r3,#0
 1586 03e2 FFF7FEFF 	 bl __aeabi_f2d
 1587 03e6 031C     	 mov r3,r0
 1588 03e8 0C1C     	 mov r4,r1
 1589 03ea 181C     	 mov r0,r3
 1590 03ec 211C     	 mov r1,r4
 1591 03ee B64A     	 ldr r2,.L117+16
 1592 03f0 B64B     	 ldr r3,.L117+20
 1593 03f2 FFF7FEFF 	 bl __aeabi_dsub
 1594 03f6 031C     	 mov r3,r0
 1595 03f8 0C1C     	 mov r4,r1
 1596 03fa B548     	 ldr r0,.L117+24
 1597 03fc B549     	 ldr r1,.L117+28
 1598 03fe 1A1C     	 mov r2,r3
 1599 0400 231C     	 mov r3,r4
 1600 0402 FFF7FEFF 	 bl __aeabi_ddiv
 1601 0406 031C     	 mov r3,r0
 1602 0408 0C1C     	 mov r4,r1
 1603 040a 181C     	 mov r0,r3
 1604 040c 211C     	 mov r1,r4
 1605 040e FFF7FEFF 	 bl atan
 1606 0412 031C     	 mov r3,r0
 1607 0414 0C1C     	 mov r4,r1
 1608 0416 181C     	 mov r0,r3
 1609 0418 211C     	 mov r1,r4
 1610 041a AF4A     	 ldr r2,.L117+32
 1611 041c AF4B     	 ldr r3,.L117+36
 1612 041e FFF7FEFF 	 bl __aeabi_dmul
 1613 0422 031C     	 mov r3,r0
 1614 0424 0C1C     	 mov r4,r1
 1615 0426 181C     	 mov r0,r3
 1616 0428 211C     	 mov r1,r4
 1617 042a FFF7FEFF 	 bl __aeabi_d2f
 1618 042e 021C     	 add r2,r0,#0
 1619 0430 AC4B     	 ldr r3,.L117+44
 1620 0432 1A60     	 str r2,[r3]
 231:../main.c     **** 
 232:../main.c     **** 				speed_fl = Driving_speed_cal / Speed_ratio;
 1621              	 .loc 6 232 0
 1622 0434 AC4B     	 ldr r3,.L117+48
 1623 0436 1B68     	 ldr r3,[r3]
 1624 0438 B868     	 ldr r0,[r7,#8]
 1625 043a 191C     	 add r1,r3,#0
 1626 043c FFF7FEFF 	 bl __aeabi_fdiv
 1627 0440 031C     	 add r3,r0,#0
 1628 0442 1A1C     	 add r2,r3,#0
 1629 0444 A94B     	 ldr r3,.L117+52
 1630 0446 1A60     	 str r2,[r3]
 233:../main.c     **** 				speed_fr = Driving_speed_cal * Speed_ratio;
 1631              	 .loc 6 233 0
 1632 0448 A74B     	 ldr r3,.L117+48
 1633 044a 1B68     	 ldr r3,[r3]
 1634 044c 181C     	 add r0,r3,#0
 1635 044e B968     	 ldr r1,[r7,#8]
 1636 0450 FFF7FEFF 	 bl __aeabi_fmul
 1637 0454 031C     	 add r3,r0,#0
 1638 0456 1A1C     	 add r2,r3,#0
 1639 0458 A54B     	 ldr r3,.L117+56
 1640 045a 1A60     	 str r2,[r3]
 234:../main.c     **** 				//speed_rl = Driving_speed_cal / Speed_ratio;
 235:../main.c     **** 				//speed_rr = Driving_speed_cal * Speed_ratio;
 236:../main.c     **** 
 237:../main.c     **** 				speed_rl = speed_fl;
 1641              	 .loc 6 237 0
 1642 045c A34B     	 ldr r3,.L117+52
 1643 045e 1A68     	 ldr r2,[r3]
 1644 0460 A44B     	 ldr r3,.L117+60
 1645 0462 1A60     	 str r2,[r3]
 238:../main.c     **** 				speed_rr = speed_fr;
 1646              	 .loc 6 238 0
 1647 0464 A24B     	 ldr r3,.L117+56
 1648 0466 1A68     	 ldr r2,[r3]
 1649 0468 A34B     	 ldr r3,.L117+64
 1650 046a 1A60     	 str r2,[r3]
 1651 046c 11E0     	 b .L53
 1652              	.L54:
 239:../main.c     **** 			}
 240:../main.c     **** 			else{
 241:../main.c     **** 				angle_fl = 0;
 1653              	 .loc 6 241 0
 1654 046e 9C4B     	 ldr r3,.L117+40
 1655 0470 0022     	 mov r2,#0
 1656 0472 1A60     	 str r2,[r3]
 242:../main.c     **** 				angle_fr = 0;
 1657              	 .loc 6 242 0
 1658 0474 9B4B     	 ldr r3,.L117+44
 1659 0476 0022     	 mov r2,#0
 1660 0478 1A60     	 str r2,[r3]
 243:../main.c     **** 
 244:../main.c     **** 				speed_fl = Driving_speed_cal;
 1661              	 .loc 6 244 0
 1662 047a 9C4B     	 ldr r3,.L117+52
 1663 047c BA68     	 ldr r2,[r7,#8]
 1664 047e 1A60     	 str r2,[r3]
 245:../main.c     **** 				speed_fr = Driving_speed_cal;
 1665              	 .loc 6 245 0
 1666 0480 9B4B     	 ldr r3,.L117+56
 1667 0482 BA68     	 ldr r2,[r7,#8]
 1668 0484 1A60     	 str r2,[r3]
 246:../main.c     **** 				speed_rl = Driving_speed_cal;
 1669              	 .loc 6 246 0
 1670 0486 9B4B     	 ldr r3,.L117+60
 1671 0488 BA68     	 ldr r2,[r7,#8]
 1672 048a 1A60     	 str r2,[r3]
 247:../main.c     **** 				speed_rr = Driving_speed_cal;
 1673              	 .loc 6 247 0
 1674 048c 9A4B     	 ldr r3,.L117+64
 1675 048e BA68     	 ldr r2,[r7,#8]
 1676 0490 1A60     	 str r2,[r3]
 1677              	.L53:
 248:../main.c     **** 			}
 249:../main.c     **** 
 250:../main.c     **** 			//rear axle
 251:../main.c     **** 			angle_rl = 0;
 1678              	 .loc 6 251 0
 1679 0492 9A4B     	 ldr r3,.L117+68
 1680 0494 0022     	 mov r2,#0
 1681 0496 1A60     	 str r2,[r3]
 252:../main.c     **** 			angle_rr = 0;
 1682              	 .loc 6 252 0
 1683 0498 994B     	 ldr r3,.L117+72
 1684 049a 0022     	 mov r2,#0
 1685 049c 1A60     	 str r2,[r3]
 253:../main.c     **** 			break;
 1686              	 .loc 6 253 0
 1687 049e 00F078FC 	 bl .L57
 1688              	.L42:
 254:../main.c     **** 
 255:../main.c     **** 		case BACK:// rear #############################################################
 256:../main.c     **** 			// steering limits
 257:../main.c     **** 			if(Steering_direction_cal > 50) Steering_direction_cal = 50;
 1689              	 .loc 6 257 0
 1690 04a2 F868     	 ldr r0,[r7,#12]
 1691 04a4 9749     	 ldr r1,.L117+76
 1692 04a6 FFF7FEFF 	 bl __aeabi_fcmpgt
 1693 04aa 031E     	 sub r3,r0,#0
 1694 04ac 01D0     	 beq .L58
 1695              	 .loc 6 257 0 is_stmt 0 discriminator 1
 1696 04ae 954B     	 ldr r3,.L117+76
 1697 04b0 FB60     	 str r3,[r7,#12]
 1698              	.L58:
 258:../main.c     **** 			if(Steering_direction_cal < -50) Steering_direction_cal = -50;
 1699              	 .loc 6 258 0 is_stmt 1
 1700 04b2 F868     	 ldr r0,[r7,#12]
 1701 04b4 9449     	 ldr r1,.L117+80
 1702 04b6 FFF7FEFF 	 bl __aeabi_fcmplt
 1703 04ba 031E     	 sub r3,r0,#0
 1704 04bc 01D0     	 beq .L60
 1705              	 .loc 6 258 0 is_stmt 0 discriminator 1
 1706 04be 924B     	 ldr r3,.L117+80
 1707 04c0 FB60     	 str r3,[r7,#12]
 1708              	.L60:
 259:../main.c     **** 
 260:../main.c     **** 			// pre calc
 261:../main.c     **** 			R_Turn = WHEEL_BASE / tan(Steering_direction_cal / RAD_TO_DEG); // to truni graduis converstion
 1709              	 .loc 6 261 0 is_stmt 1
 1710 04c2 F868     	 ldr r0,[r7,#12]
 1711 04c4 FFF7FEFF 	 bl __aeabi_f2d
 1712 04c8 031C     	 mov r3,r0
 1713 04ca 0C1C     	 mov r4,r1
 1714 04cc 181C     	 mov r0,r3
 1715 04ce 211C     	 mov r1,r4
 1716 04d0 814A     	 ldr r2,.L117+32
 1717 04d2 824B     	 ldr r3,.L117+36
 1718 04d4 FFF7FEFF 	 bl __aeabi_ddiv
 1719 04d8 031C     	 mov r3,r0
 1720 04da 0C1C     	 mov r4,r1
 1721 04dc 181C     	 mov r0,r3
 1722 04de 211C     	 mov r1,r4
 1723 04e0 FFF7FEFF 	 bl tan
 1724 04e4 031C     	 mov r3,r0
 1725 04e6 0C1C     	 mov r4,r1
 1726 04e8 7948     	 ldr r0,.L117+24
 1727 04ea 7A49     	 ldr r1,.L117+28
 1728 04ec 1A1C     	 mov r2,r3
 1729 04ee 231C     	 mov r3,r4
 1730 04f0 FFF7FEFF 	 bl __aeabi_ddiv
 1731 04f4 031C     	 mov r3,r0
 1732 04f6 0C1C     	 mov r4,r1
 1733 04f8 181C     	 mov r0,r3
 1734 04fa 211C     	 mov r1,r4
 1735 04fc FFF7FEFF 	 bl __aeabi_d2f
 1736 0500 021C     	 add r2,r0,#0
 1737 0502 6D4B     	 ldr r3,.L117
 1738 0504 1A60     	 str r2,[r3]
 262:../main.c     **** 			Speed_ratio = (2 * (copysign(R_Turn,1) + HALF_TRACK_WIDTH) * M_PI) / (2 * copysign(R_Turn,1) * M
 1739              	 .loc 6 262 0
 1740 0506 6C4B     	 ldr r3,.L117
 1741 0508 1B68     	 ldr r3,[r3]
 1742 050a 5B00     	 lsl r3,r3,#1
 1743 050c 5B08     	 lsr r3,r3,#1
 1744 050e 181C     	 add r0,r3,#0
 1745 0510 FFF7FEFF 	 bl __aeabi_f2d
 1746 0514 031C     	 mov r3,r0
 1747 0516 0C1C     	 mov r4,r1
 1748 0518 181C     	 mov r0,r3
 1749 051a 211C     	 mov r1,r4
 1750 051c 6A4A     	 ldr r2,.L117+16
 1751 051e 6B4B     	 ldr r3,.L117+20
 1752 0520 FFF7FEFF 	 bl __aeabi_dadd
 1753 0524 031C     	 mov r3,r0
 1754 0526 0C1C     	 mov r4,r1
 1755 0528 181C     	 mov r0,r3
 1756 052a 211C     	 mov r1,r4
 1757 052c 1A1C     	 mov r2,r3
 1758 052e 231C     	 mov r3,r4
 1759 0530 FFF7FEFF 	 bl __aeabi_dadd
 1760 0534 031C     	 mov r3,r0
 1761 0536 0C1C     	 mov r4,r1
 1762 0538 181C     	 mov r0,r3
 1763 053a 211C     	 mov r1,r4
 1764 053c 734A     	 ldr r2,.L117+84
 1765 053e 744B     	 ldr r3,.L117+88
 1766 0540 FFF7FEFF 	 bl __aeabi_dmul
 1767 0544 031C     	 mov r3,r0
 1768 0546 0C1C     	 mov r4,r1
 1769 0548 1D1C     	 mov r5,r3
 1770 054a 261C     	 mov r6,r4
 1771 054c 5A4B     	 ldr r3,.L117
 1772 054e 1B68     	 ldr r3,[r3]
 1773 0550 5B00     	 lsl r3,r3,#1
 1774 0552 5B08     	 lsr r3,r3,#1
 1775 0554 181C     	 add r0,r3,#0
 1776 0556 FFF7FEFF 	 bl __aeabi_f2d
 1777 055a 031C     	 mov r3,r0
 1778 055c 0C1C     	 mov r4,r1
 1779 055e 181C     	 mov r0,r3
 1780 0560 211C     	 mov r1,r4
 1781 0562 1A1C     	 mov r2,r3
 1782 0564 231C     	 mov r3,r4
 1783 0566 FFF7FEFF 	 bl __aeabi_dadd
 1784 056a 031C     	 mov r3,r0
 1785 056c 0C1C     	 mov r4,r1
 1786 056e 181C     	 mov r0,r3
 1787 0570 211C     	 mov r1,r4
 1788 0572 664A     	 ldr r2,.L117+84
 1789 0574 664B     	 ldr r3,.L117+88
 1790 0576 FFF7FEFF 	 bl __aeabi_dmul
 1791 057a 031C     	 mov r3,r0
 1792 057c 0C1C     	 mov r4,r1
 1793 057e 281C     	 mov r0,r5
 1794 0580 311C     	 mov r1,r6
 1795 0582 1A1C     	 mov r2,r3
 1796 0584 231C     	 mov r3,r4
 1797 0586 FFF7FEFF 	 bl __aeabi_ddiv
 1798 058a 031C     	 mov r3,r0
 1799 058c 0C1C     	 mov r4,r1
 1800 058e 181C     	 mov r0,r3
 1801 0590 211C     	 mov r1,r4
 1802 0592 FFF7FEFF 	 bl __aeabi_d2f
 1803 0596 021C     	 add r2,r0,#0
 1804 0598 534B     	 ldr r3,.L117+48
 1805 059a 1A60     	 str r2,[r3]
 263:../main.c     **** 
 264:../main.c     **** 			if((R_TRUN_MIN < R_Turn) && (R_Turn < R_TRUN_MAX)){
 1806              	 .loc 6 264 0
 1807 059c 464B     	 ldr r3,.L117
 1808 059e 1B68     	 ldr r3,[r3]
 1809 05a0 181C     	 add r0,r3,#0
 1810 05a2 FFF7FEFF 	 bl __aeabi_f2d
 1811 05a6 031C     	 mov r3,r0
 1812 05a8 0C1C     	 mov r4,r1
 1813 05aa 181C     	 mov r0,r3
 1814 05ac 211C     	 mov r1,r4
 1815 05ae 434A     	 ldr r2,.L117+4
 1816 05b0 584B     	 ldr r3,.L117+92
 1817 05b2 FFF7FEFF 	 bl __aeabi_dcmpgt
 1818 05b6 031E     	 sub r3,r0,#0
 1819 05b8 00D1     	 bne .LCB1120
 1820 05ba B1E0     	 b .L62
 1821              	.LCB1120:
 1822              	 .loc 6 264 0 is_stmt 0 discriminator 1
 1823 05bc 3E4B     	 ldr r3,.L117
 1824 05be 1B68     	 ldr r3,[r3]
 1825 05c0 181C     	 add r0,r3,#0
 1826 05c2 5549     	 ldr r1,.L117+96
 1827 05c4 FFF7FEFF 	 bl __aeabi_fcmplt
 1828 05c8 031E     	 sub r3,r0,#0
 1829 05ca 00D1     	 bne .LCB1128
 1830 05cc A8E0     	 b .L62
 1831              	.LCB1128:
 265:../main.c     **** 				angle_rl = - RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn + HALF_TRACK_WIDTH)); // out wheel
 1832              	 .loc 6 265 0 is_stmt 1
 1833 05ce 3A4B     	 ldr r3,.L117
 1834 05d0 1B68     	 ldr r3,[r3]
 1835 05d2 181C     	 add r0,r3,#0
 1836 05d4 FFF7FEFF 	 bl __aeabi_f2d
 1837 05d8 031C     	 mov r3,r0
 1838 05da 0C1C     	 mov r4,r1
 1839 05dc 181C     	 mov r0,r3
 1840 05de 211C     	 mov r1,r4
 1841 05e0 394A     	 ldr r2,.L117+16
 1842 05e2 3A4B     	 ldr r3,.L117+20
 1843 05e4 FFF7FEFF 	 bl __aeabi_dadd
 1844 05e8 031C     	 mov r3,r0
 1845 05ea 0C1C     	 mov r4,r1
 1846 05ec 3848     	 ldr r0,.L117+24
 1847 05ee 3949     	 ldr r1,.L117+28
 1848 05f0 1A1C     	 mov r2,r3
 1849 05f2 231C     	 mov r3,r4
 1850 05f4 FFF7FEFF 	 bl __aeabi_ddiv
 1851 05f8 031C     	 mov r3,r0
 1852 05fa 0C1C     	 mov r4,r1
 1853 05fc 181C     	 mov r0,r3
 1854 05fe 211C     	 mov r1,r4
 1855 0600 FFF7FEFF 	 bl atan
 1856 0604 031C     	 mov r3,r0
 1857 0606 0C1C     	 mov r4,r1
 1858 0608 181C     	 mov r0,r3
 1859 060a 211C     	 mov r1,r4
 1860 060c 324A     	 ldr r2,.L117+32
 1861 060e 434B     	 ldr r3,.L117+100
 1862 0610 FFF7FEFF 	 bl __aeabi_dmul
 1863 0614 031C     	 mov r3,r0
 1864 0616 0C1C     	 mov r4,r1
 1865 0618 181C     	 mov r0,r3
 1866 061a 211C     	 mov r1,r4
 1867 061c FFF7FEFF 	 bl __aeabi_d2f
 1868 0620 021C     	 add r2,r0,#0
 1869 0622 364B     	 ldr r3,.L117+68
 1870 0624 1A60     	 str r2,[r3]
 266:../main.c     **** 				angle_rr = - RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn - HALF_TRACK_WIDTH)); // in wheel
 1871              	 .loc 6 266 0
 1872 0626 244B     	 ldr r3,.L117
 1873 0628 1B68     	 ldr r3,[r3]
 1874 062a 181C     	 add r0,r3,#0
 1875 062c FFF7FEFF 	 bl __aeabi_f2d
 1876 0630 031C     	 mov r3,r0
 1877 0632 0C1C     	 mov r4,r1
 1878 0634 181C     	 mov r0,r3
 1879 0636 211C     	 mov r1,r4
 1880 0638 234A     	 ldr r2,.L117+16
 1881 063a 244B     	 ldr r3,.L117+20
 1882 063c FFF7FEFF 	 bl __aeabi_dsub
 1883 0640 031C     	 mov r3,r0
 1884 0642 0C1C     	 mov r4,r1
 1885 0644 2248     	 ldr r0,.L117+24
 1886 0646 2349     	 ldr r1,.L117+28
 1887 0648 1A1C     	 mov r2,r3
 1888 064a 231C     	 mov r3,r4
 1889 064c FFF7FEFF 	 bl __aeabi_ddiv
 1890 0650 031C     	 mov r3,r0
 1891 0652 0C1C     	 mov r4,r1
 1892 0654 181C     	 mov r0,r3
 1893 0656 211C     	 mov r1,r4
 1894 0658 FFF7FEFF 	 bl atan
 1895 065c 031C     	 mov r3,r0
 1896 065e 0C1C     	 mov r4,r1
 1897 0660 181C     	 mov r0,r3
 1898 0662 211C     	 mov r1,r4
 1899 0664 1C4A     	 ldr r2,.L117+32
 1900 0666 2D4B     	 ldr r3,.L117+100
 1901 0668 FFF7FEFF 	 bl __aeabi_dmul
 1902 066c 031C     	 mov r3,r0
 1903 066e 0C1C     	 mov r4,r1
 1904 0670 181C     	 mov r0,r3
 1905 0672 211C     	 mov r1,r4
 1906 0674 FFF7FEFF 	 bl __aeabi_d2f
 1907 0678 021C     	 add r2,r0,#0
 1908 067a 214B     	 ldr r3,.L117+72
 1909 067c 1A60     	 str r2,[r3]
 267:../main.c     **** 
 268:../main.c     **** 
 269:../main.c     **** 				speed_fl = Driving_speed_cal * Speed_ratio;
 1910              	 .loc 6 269 0
 1911 067e 1A4B     	 ldr r3,.L117+48
 1912 0680 1B68     	 ldr r3,[r3]
 1913 0682 181C     	 add r0,r3,#0
 1914 0684 B968     	 ldr r1,[r7,#8]
 1915 0686 FFF7FEFF 	 bl __aeabi_fmul
 1916 068a 031C     	 add r3,r0,#0
 1917 068c 1A1C     	 add r2,r3,#0
 1918 068e 174B     	 ldr r3,.L117+52
 1919 0690 1A60     	 str r2,[r3]
 270:../main.c     **** 				speed_fr = Driving_speed_cal / Speed_ratio;
 1920              	 .loc 6 270 0
 1921 0692 154B     	 ldr r3,.L117+48
 1922 0694 1B68     	 ldr r3,[r3]
 1923 0696 B868     	 ldr r0,[r7,#8]
 1924 0698 191C     	 add r1,r3,#0
 1925 069a FFF7FEFF 	 bl __aeabi_fdiv
 1926 069e 031C     	 add r3,r0,#0
 1927 06a0 1A1C     	 add r2,r3,#0
 1928 06a2 134B     	 ldr r3,.L117+56
 1929 06a4 1A60     	 str r2,[r3]
 271:../main.c     **** 				//speed_rl = Driving_speed_cal * Speed_ratio;
 272:../main.c     **** 				//speed_rr = Driving_speed_cal / Speed_ratio;
 273:../main.c     **** 
 274:../main.c     **** 				speed_rl = speed_fl;
 1930              	 .loc 6 274 0
 1931 06a6 114B     	 ldr r3,.L117+52
 1932 06a8 1A68     	 ldr r2,[r3]
 1933 06aa 124B     	 ldr r3,.L117+60
 1934 06ac 1A60     	 str r2,[r3]
 275:../main.c     **** 				speed_rr = speed_fr;
 1935              	 .loc 6 275 0
 1936 06ae 104B     	 ldr r3,.L117+56
 1937 06b0 1A68     	 ldr r2,[r3]
 1938 06b2 114B     	 ldr r3,.L117+64
 1939 06b4 1A60     	 str r2,[r3]
 1940 06b6 D2E0     	 b .L65
 1941              	.L118:
 1942              	 .align 2
 1943              	.L117:
 1944 06b8 00000000 	 .word R_Turn
 1945 06bc 9A999999 	 .word -1717986918
 1946 06c0 9999A9BF 	 .word -1079404135
 1947 06c4 0000A0C1 	 .word -1046478848
 1948 06c8 77BE9F1A 	 .word 446676599
 1949 06cc 2FDDC43F 	 .word 1069866287
 1950 06d0 79E92631 	 .word 824633721
 1951 06d4 08ACDC3F 	 .word 1071426568
 1952 06d8 D9CEF753 	 .word 1408749273
 1953 06dc E3A54C40 	 .word 1078765027
 1954 06e0 00000000 	 .word angle_fl
 1955 06e4 00000000 	 .word angle_fr
 1956 06e8 00000000 	 .word Speed_ratio
 1957 06ec 00000000 	 .word speed_fl
 1958 06f0 00000000 	 .word speed_fr
 1959 06f4 00000000 	 .word speed_rl
 1960 06f8 00000000 	 .word speed_rr
 1961 06fc 00000000 	 .word angle_rl
 1962 0700 00000000 	 .word angle_rr
 1963 0704 00004842 	 .word 1112014848
 1964 0708 000048C2 	 .word -1035468800
 1965 070c 182D4454 	 .word 1413754136
 1966 0710 FB210940 	 .word 1074340347
 1967 0714 9999A93F 	 .word 1068079513
 1968 0718 0000A041 	 .word 1101004800
 1969 071c E3A54CC0 	 .word -1068718621
 1970              	.L62:
 276:../main.c     **** 			}
 277:../main.c     **** 			else if((- R_TRUN_MIN > R_Turn) && (R_Turn > -R_TRUN_MAX)){
 1971              	 .loc 6 277 0
 1972 0720 DF4B     	 ldr r3,.L119
 1973 0722 1B68     	 ldr r3,[r3]
 1974 0724 181C     	 add r0,r3,#0
 1975 0726 FFF7FEFF 	 bl __aeabi_f2d
 1976 072a 031C     	 mov r3,r0
 1977 072c 0C1C     	 mov r4,r1
 1978 072e 181C     	 mov r0,r3
 1979 0730 211C     	 mov r1,r4
 1980 0732 DC4A     	 ldr r2,.L119+4
 1981 0734 DC4B     	 ldr r3,.L119+8
 1982 0736 FFF7FEFF 	 bl __aeabi_dcmplt
 1983 073a 031E     	 sub r3,r0,#0
 1984 073c 00D1     	 bne .LCB1279
 1985 073e 7CE0     	 b .L66
 1986              	.LCB1279:
 1987              	 .loc 6 277 0 is_stmt 0 discriminator 1
 1988 0740 D74B     	 ldr r3,.L119
 1989 0742 1B68     	 ldr r3,[r3]
 1990 0744 181C     	 add r0,r3,#0
 1991 0746 D949     	 ldr r1,.L119+12
 1992 0748 FFF7FEFF 	 bl __aeabi_fcmpgt
 1993 074c 031E     	 sub r3,r0,#0
 1994 074e 74D0     	 beq .L66
 278:../main.c     **** 				angle_rl = - RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn + HALF_TRACK_WIDTH)); // in wheel
 1995              	 .loc 6 278 0 is_stmt 1
 1996 0750 D34B     	 ldr r3,.L119
 1997 0752 1B68     	 ldr r3,[r3]
 1998 0754 181C     	 add r0,r3,#0
 1999 0756 FFF7FEFF 	 bl __aeabi_f2d
 2000 075a 031C     	 mov r3,r0
 2001 075c 0C1C     	 mov r4,r1
 2002 075e 181C     	 mov r0,r3
 2003 0760 211C     	 mov r1,r4
 2004 0762 D34A     	 ldr r2,.L119+16
 2005 0764 D34B     	 ldr r3,.L119+20
 2006 0766 FFF7FEFF 	 bl __aeabi_dadd
 2007 076a 031C     	 mov r3,r0
 2008 076c 0C1C     	 mov r4,r1
 2009 076e D248     	 ldr r0,.L119+24
 2010 0770 D249     	 ldr r1,.L119+28
 2011 0772 1A1C     	 mov r2,r3
 2012 0774 231C     	 mov r3,r4
 2013 0776 FFF7FEFF 	 bl __aeabi_ddiv
 2014 077a 031C     	 mov r3,r0
 2015 077c 0C1C     	 mov r4,r1
 2016 077e 181C     	 mov r0,r3
 2017 0780 211C     	 mov r1,r4
 2018 0782 FFF7FEFF 	 bl atan
 2019 0786 031C     	 mov r3,r0
 2020 0788 0C1C     	 mov r4,r1
 2021 078a 181C     	 mov r0,r3
 2022 078c 211C     	 mov r1,r4
 2023 078e CC4A     	 ldr r2,.L119+32
 2024 0790 CC4B     	 ldr r3,.L119+36
 2025 0792 FFF7FEFF 	 bl __aeabi_dmul
 2026 0796 031C     	 mov r3,r0
 2027 0798 0C1C     	 mov r4,r1
 2028 079a 181C     	 mov r0,r3
 2029 079c 211C     	 mov r1,r4
 2030 079e FFF7FEFF 	 bl __aeabi_d2f
 2031 07a2 021C     	 add r2,r0,#0
 2032 07a4 C84B     	 ldr r3,.L119+40
 2033 07a6 1A60     	 str r2,[r3]
 279:../main.c     **** 				angle_rr = - RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn - HALF_TRACK_WIDTH)); // out wheel
 2034              	 .loc 6 279 0
 2035 07a8 BD4B     	 ldr r3,.L119
 2036 07aa 1B68     	 ldr r3,[r3]
 2037 07ac 181C     	 add r0,r3,#0
 2038 07ae FFF7FEFF 	 bl __aeabi_f2d
 2039 07b2 031C     	 mov r3,r0
 2040 07b4 0C1C     	 mov r4,r1
 2041 07b6 181C     	 mov r0,r3
 2042 07b8 211C     	 mov r1,r4
 2043 07ba BD4A     	 ldr r2,.L119+16
 2044 07bc BD4B     	 ldr r3,.L119+20
 2045 07be FFF7FEFF 	 bl __aeabi_dsub
 2046 07c2 031C     	 mov r3,r0
 2047 07c4 0C1C     	 mov r4,r1
 2048 07c6 BC48     	 ldr r0,.L119+24
 2049 07c8 BC49     	 ldr r1,.L119+28
 2050 07ca 1A1C     	 mov r2,r3
 2051 07cc 231C     	 mov r3,r4
 2052 07ce FFF7FEFF 	 bl __aeabi_ddiv
 2053 07d2 031C     	 mov r3,r0
 2054 07d4 0C1C     	 mov r4,r1
 2055 07d6 181C     	 mov r0,r3
 2056 07d8 211C     	 mov r1,r4
 2057 07da FFF7FEFF 	 bl atan
 2058 07de 031C     	 mov r3,r0
 2059 07e0 0C1C     	 mov r4,r1
 2060 07e2 181C     	 mov r0,r3
 2061 07e4 211C     	 mov r1,r4
 2062 07e6 B64A     	 ldr r2,.L119+32
 2063 07e8 B64B     	 ldr r3,.L119+36
 2064 07ea FFF7FEFF 	 bl __aeabi_dmul
 2065 07ee 031C     	 mov r3,r0
 2066 07f0 0C1C     	 mov r4,r1
 2067 07f2 181C     	 mov r0,r3
 2068 07f4 211C     	 mov r1,r4
 2069 07f6 FFF7FEFF 	 bl __aeabi_d2f
 2070 07fa 021C     	 add r2,r0,#0
 2071 07fc B34B     	 ldr r3,.L119+44
 2072 07fe 1A60     	 str r2,[r3]
 280:../main.c     **** 
 281:../main.c     **** 				speed_fl = Driving_speed_cal / Speed_ratio;
 2073              	 .loc 6 281 0
 2074 0800 B34B     	 ldr r3,.L119+48
 2075 0802 1B68     	 ldr r3,[r3]
 2076 0804 B868     	 ldr r0,[r7,#8]
 2077 0806 191C     	 add r1,r3,#0
 2078 0808 FFF7FEFF 	 bl __aeabi_fdiv
 2079 080c 031C     	 add r3,r0,#0
 2080 080e 1A1C     	 add r2,r3,#0
 2081 0810 B04B     	 ldr r3,.L119+52
 2082 0812 1A60     	 str r2,[r3]
 282:../main.c     **** 				speed_fr = Driving_speed_cal * Speed_ratio;
 2083              	 .loc 6 282 0
 2084 0814 AE4B     	 ldr r3,.L119+48
 2085 0816 1B68     	 ldr r3,[r3]
 2086 0818 181C     	 add r0,r3,#0
 2087 081a B968     	 ldr r1,[r7,#8]
 2088 081c FFF7FEFF 	 bl __aeabi_fmul
 2089 0820 031C     	 add r3,r0,#0
 2090 0822 1A1C     	 add r2,r3,#0
 2091 0824 AC4B     	 ldr r3,.L119+56
 2092 0826 1A60     	 str r2,[r3]
 283:../main.c     **** 				//speed_rl = Driving_speed_cal / Speed_ratio;
 284:../main.c     **** 				//speed_rr = Driving_speed_cal * Speed_ratio;
 285:../main.c     **** 
 286:../main.c     **** 				speed_rl = speed_fl;
 2093              	 .loc 6 286 0
 2094 0828 AA4B     	 ldr r3,.L119+52
 2095 082a 1A68     	 ldr r2,[r3]
 2096 082c AB4B     	 ldr r3,.L119+60
 2097 082e 1A60     	 str r2,[r3]
 287:../main.c     **** 				speed_rr = speed_fr;
 2098              	 .loc 6 287 0
 2099 0830 A94B     	 ldr r3,.L119+56
 2100 0832 1A68     	 ldr r2,[r3]
 2101 0834 AA4B     	 ldr r3,.L119+64
 2102 0836 1A60     	 str r2,[r3]
 2103 0838 11E0     	 b .L65
 2104              	.L66:
 288:../main.c     **** 			}
 289:../main.c     **** 			else{
 290:../main.c     **** 				angle_rl = 0;
 2105              	 .loc 6 290 0
 2106 083a A34B     	 ldr r3,.L119+40
 2107 083c 0022     	 mov r2,#0
 2108 083e 1A60     	 str r2,[r3]
 291:../main.c     **** 				angle_rr = 0;
 2109              	 .loc 6 291 0
 2110 0840 A24B     	 ldr r3,.L119+44
 2111 0842 0022     	 mov r2,#0
 2112 0844 1A60     	 str r2,[r3]
 292:../main.c     **** 
 293:../main.c     **** 				speed_fl = Driving_speed_cal;
 2113              	 .loc 6 293 0
 2114 0846 A34B     	 ldr r3,.L119+52
 2115 0848 BA68     	 ldr r2,[r7,#8]
 2116 084a 1A60     	 str r2,[r3]
 294:../main.c     **** 				speed_fr = Driving_speed_cal;
 2117              	 .loc 6 294 0
 2118 084c A24B     	 ldr r3,.L119+56
 2119 084e BA68     	 ldr r2,[r7,#8]
 2120 0850 1A60     	 str r2,[r3]
 295:../main.c     **** 				speed_rl = Driving_speed_cal;
 2121              	 .loc 6 295 0
 2122 0852 A24B     	 ldr r3,.L119+60
 2123 0854 BA68     	 ldr r2,[r7,#8]
 2124 0856 1A60     	 str r2,[r3]
 296:../main.c     **** 				speed_rr = Driving_speed_cal;
 2125              	 .loc 6 296 0
 2126 0858 A14B     	 ldr r3,.L119+64
 2127 085a BA68     	 ldr r2,[r7,#8]
 2128 085c 1A60     	 str r2,[r3]
 2129              	.L65:
 297:../main.c     **** 			}
 298:../main.c     **** 
 299:../main.c     **** 			//rear axle
 300:../main.c     **** 			angle_fl = 0;
 2130              	 .loc 6 300 0
 2131 085e A14B     	 ldr r3,.L119+68
 2132 0860 0022     	 mov r2,#0
 2133 0862 1A60     	 str r2,[r3]
 301:../main.c     **** 			angle_fr = 0;
 2134              	 .loc 6 301 0
 2135 0864 A04B     	 ldr r3,.L119+72
 2136 0866 0022     	 mov r2,#0
 2137 0868 1A60     	 str r2,[r3]
 302:../main.c     **** 			break;
 2138              	 .loc 6 302 0
 2139 086a 92E2     	 b .L57
 2140              	.L43:
 303:../main.c     **** 
 304:../main.c     **** 		case ALL_WHEEL: // 4 wheel #############################################################
 305:../main.c     **** 			// steering limits
 306:../main.c     **** 			if(Steering_direction_cal > 30) Steering_direction_cal = 30;
 2141              	 .loc 6 306 0
 2142 086c F868     	 ldr r0,[r7,#12]
 2143 086e 9F49     	 ldr r1,.L119+76
 2144 0870 FFF7FEFF 	 bl __aeabi_fcmpgt
 2145 0874 031E     	 sub r3,r0,#0
 2146 0876 01D0     	 beq .L69
 2147              	 .loc 6 306 0 is_stmt 0 discriminator 1
 2148 0878 9C4B     	 ldr r3,.L119+76
 2149 087a FB60     	 str r3,[r7,#12]
 2150              	.L69:
 307:../main.c     **** 			if(Steering_direction_cal < -30) Steering_direction_cal = -30;
 2151              	 .loc 6 307 0 is_stmt 1
 2152 087c F868     	 ldr r0,[r7,#12]
 2153 087e 9C49     	 ldr r1,.L119+80
 2154 0880 FFF7FEFF 	 bl __aeabi_fcmplt
 2155 0884 031E     	 sub r3,r0,#0
 2156 0886 01D0     	 beq .L71
 2157              	 .loc 6 307 0 is_stmt 0 discriminator 1
 2158 0888 994B     	 ldr r3,.L119+80
 2159 088a FB60     	 str r3,[r7,#12]
 2160              	.L71:
 308:../main.c     **** 
 309:../main.c     **** 			// pre calc
 310:../main.c     **** 			R_Turn = HALF_WHEEL_BASE / tan(Steering_direction_cal / RAD_TO_DEG); // to truni graduis convers
 2161              	 .loc 6 310 0 is_stmt 1
 2162 088c F868     	 ldr r0,[r7,#12]
 2163 088e FFF7FEFF 	 bl __aeabi_f2d
 2164 0892 031C     	 mov r3,r0
 2165 0894 0C1C     	 mov r4,r1
 2166 0896 181C     	 mov r0,r3
 2167 0898 211C     	 mov r1,r4
 2168 089a 894A     	 ldr r2,.L119+32
 2169 089c 954B     	 ldr r3,.L119+84
 2170 089e FFF7FEFF 	 bl __aeabi_ddiv
 2171 08a2 031C     	 mov r3,r0
 2172 08a4 0C1C     	 mov r4,r1
 2173 08a6 181C     	 mov r0,r3
 2174 08a8 211C     	 mov r1,r4
 2175 08aa FFF7FEFF 	 bl tan
 2176 08ae 031C     	 mov r3,r0
 2177 08b0 0C1C     	 mov r4,r1
 2178 08b2 9148     	 ldr r0,.L119+88
 2179 08b4 9149     	 ldr r1,.L119+92
 2180 08b6 1A1C     	 mov r2,r3
 2181 08b8 231C     	 mov r3,r4
 2182 08ba FFF7FEFF 	 bl __aeabi_ddiv
 2183 08be 031C     	 mov r3,r0
 2184 08c0 0C1C     	 mov r4,r1
 2185 08c2 181C     	 mov r0,r3
 2186 08c4 211C     	 mov r1,r4
 2187 08c6 FFF7FEFF 	 bl __aeabi_d2f
 2188 08ca 021C     	 add r2,r0,#0
 2189 08cc 744B     	 ldr r3,.L119
 2190 08ce 1A60     	 str r2,[r3]
 311:../main.c     **** 			Speed_ratio = (2 * (copysign(R_Turn,1) + HALF_TRACK_WIDTH) * M_PI) / (2 * copysign(R_Turn,1) * M
 2191              	 .loc 6 311 0
 2192 08d0 734B     	 ldr r3,.L119
 2193 08d2 1B68     	 ldr r3,[r3]
 2194 08d4 5B00     	 lsl r3,r3,#1
 2195 08d6 5B08     	 lsr r3,r3,#1
 2196 08d8 181C     	 add r0,r3,#0
 2197 08da FFF7FEFF 	 bl __aeabi_f2d
 2198 08de 031C     	 mov r3,r0
 2199 08e0 0C1C     	 mov r4,r1
 2200 08e2 181C     	 mov r0,r3
 2201 08e4 211C     	 mov r1,r4
 2202 08e6 724A     	 ldr r2,.L119+16
 2203 08e8 724B     	 ldr r3,.L119+20
 2204 08ea FFF7FEFF 	 bl __aeabi_dadd
 2205 08ee 031C     	 mov r3,r0
 2206 08f0 0C1C     	 mov r4,r1
 2207 08f2 181C     	 mov r0,r3
 2208 08f4 211C     	 mov r1,r4
 2209 08f6 1A1C     	 mov r2,r3
 2210 08f8 231C     	 mov r3,r4
 2211 08fa FFF7FEFF 	 bl __aeabi_dadd
 2212 08fe 031C     	 mov r3,r0
 2213 0900 0C1C     	 mov r4,r1
 2214 0902 181C     	 mov r0,r3
 2215 0904 211C     	 mov r1,r4
 2216 0906 7E4A     	 ldr r2,.L119+96
 2217 0908 7E4B     	 ldr r3,.L119+100
 2218 090a FFF7FEFF 	 bl __aeabi_dmul
 2219 090e 031C     	 mov r3,r0
 2220 0910 0C1C     	 mov r4,r1
 2221 0912 1D1C     	 mov r5,r3
 2222 0914 261C     	 mov r6,r4
 2223 0916 624B     	 ldr r3,.L119
 2224 0918 1B68     	 ldr r3,[r3]
 2225 091a 5B00     	 lsl r3,r3,#1
 2226 091c 5B08     	 lsr r3,r3,#1
 2227 091e 181C     	 add r0,r3,#0
 2228 0920 FFF7FEFF 	 bl __aeabi_f2d
 2229 0924 031C     	 mov r3,r0
 2230 0926 0C1C     	 mov r4,r1
 2231 0928 181C     	 mov r0,r3
 2232 092a 211C     	 mov r1,r4
 2233 092c 1A1C     	 mov r2,r3
 2234 092e 231C     	 mov r3,r4
 2235 0930 FFF7FEFF 	 bl __aeabi_dadd
 2236 0934 031C     	 mov r3,r0
 2237 0936 0C1C     	 mov r4,r1
 2238 0938 181C     	 mov r0,r3
 2239 093a 211C     	 mov r1,r4
 2240 093c 704A     	 ldr r2,.L119+96
 2241 093e 714B     	 ldr r3,.L119+100
 2242 0940 FFF7FEFF 	 bl __aeabi_dmul
 2243 0944 031C     	 mov r3,r0
 2244 0946 0C1C     	 mov r4,r1
 2245 0948 281C     	 mov r0,r5
 2246 094a 311C     	 mov r1,r6
 2247 094c 1A1C     	 mov r2,r3
 2248 094e 231C     	 mov r3,r4
 2249 0950 FFF7FEFF 	 bl __aeabi_ddiv
 2250 0954 031C     	 mov r3,r0
 2251 0956 0C1C     	 mov r4,r1
 2252 0958 181C     	 mov r0,r3
 2253 095a 211C     	 mov r1,r4
 2254 095c FFF7FEFF 	 bl __aeabi_d2f
 2255 0960 021C     	 add r2,r0,#0
 2256 0962 5B4B     	 ldr r3,.L119+48
 2257 0964 1A60     	 str r2,[r3]
 312:../main.c     **** 
 313:../main.c     **** 			if((R_TRUN_MIN < R_Turn) && (R_Turn < R_TRUN_MAX)){ // trun right positive R
 2258              	 .loc 6 313 0
 2259 0966 4E4B     	 ldr r3,.L119
 2260 0968 1B68     	 ldr r3,[r3]
 2261 096a 181C     	 add r0,r3,#0
 2262 096c FFF7FEFF 	 bl __aeabi_f2d
 2263 0970 031C     	 mov r3,r0
 2264 0972 0C1C     	 mov r4,r1
 2265 0974 181C     	 mov r0,r3
 2266 0976 211C     	 mov r1,r4
 2267 0978 4A4A     	 ldr r2,.L119+4
 2268 097a 634B     	 ldr r3,.L119+104
 2269 097c FFF7FEFF 	 bl __aeabi_dcmpgt
 2270 0980 031E     	 sub r3,r0,#0
 2271 0982 00D1     	 bne .LCB1552
 2272 0984 C4E0     	 b .L73
 2273              	.LCB1552:
 2274              	 .loc 6 313 0 is_stmt 0 discriminator 1
 2275 0986 464B     	 ldr r3,.L119
 2276 0988 1B68     	 ldr r3,[r3]
 2277 098a 181C     	 add r0,r3,#0
 2278 098c 5F49     	 ldr r1,.L119+108
 2279 098e FFF7FEFF 	 bl __aeabi_fcmplt
 2280 0992 031E     	 sub r3,r0,#0
 2281 0994 00D1     	 bne .LCB1560
 2282 0996 BBE0     	 b .L73
 2283              	.LCB1560:
 314:../main.c     **** 				angle_fl = RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn + HALF_TRACK_WIDTH)); // out wheel
 2284              	 .loc 6 314 0 is_stmt 1
 2285 0998 414B     	 ldr r3,.L119
 2286 099a 1B68     	 ldr r3,[r3]
 2287 099c 181C     	 add r0,r3,#0
 2288 099e FFF7FEFF 	 bl __aeabi_f2d
 2289 09a2 031C     	 mov r3,r0
 2290 09a4 0C1C     	 mov r4,r1
 2291 09a6 181C     	 mov r0,r3
 2292 09a8 211C     	 mov r1,r4
 2293 09aa 414A     	 ldr r2,.L119+16
 2294 09ac 414B     	 ldr r3,.L119+20
 2295 09ae FFF7FEFF 	 bl __aeabi_dadd
 2296 09b2 031C     	 mov r3,r0
 2297 09b4 0C1C     	 mov r4,r1
 2298 09b6 4048     	 ldr r0,.L119+24
 2299 09b8 4049     	 ldr r1,.L119+28
 2300 09ba 1A1C     	 mov r2,r3
 2301 09bc 231C     	 mov r3,r4
 2302 09be FFF7FEFF 	 bl __aeabi_ddiv
 2303 09c2 031C     	 mov r3,r0
 2304 09c4 0C1C     	 mov r4,r1
 2305 09c6 181C     	 mov r0,r3
 2306 09c8 211C     	 mov r1,r4
 2307 09ca FFF7FEFF 	 bl atan
 2308 09ce 031C     	 mov r3,r0
 2309 09d0 0C1C     	 mov r4,r1
 2310 09d2 181C     	 mov r0,r3
 2311 09d4 211C     	 mov r1,r4
 2312 09d6 3A4A     	 ldr r2,.L119+32
 2313 09d8 464B     	 ldr r3,.L119+84
 2314 09da FFF7FEFF 	 bl __aeabi_dmul
 2315 09de 031C     	 mov r3,r0
 2316 09e0 0C1C     	 mov r4,r1
 2317 09e2 181C     	 mov r0,r3
 2318 09e4 211C     	 mov r1,r4
 2319 09e6 FFF7FEFF 	 bl __aeabi_d2f
 2320 09ea 021C     	 add r2,r0,#0
 2321 09ec 3D4B     	 ldr r3,.L119+68
 2322 09ee 1A60     	 str r2,[r3]
 315:../main.c     **** 				angle_fr = RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn - HALF_TRACK_WIDTH)); // in wheel
 2323              	 .loc 6 315 0
 2324 09f0 2B4B     	 ldr r3,.L119
 2325 09f2 1B68     	 ldr r3,[r3]
 2326 09f4 181C     	 add r0,r3,#0
 2327 09f6 FFF7FEFF 	 bl __aeabi_f2d
 2328 09fa 031C     	 mov r3,r0
 2329 09fc 0C1C     	 mov r4,r1
 2330 09fe 181C     	 mov r0,r3
 2331 0a00 211C     	 mov r1,r4
 2332 0a02 2B4A     	 ldr r2,.L119+16
 2333 0a04 2B4B     	 ldr r3,.L119+20
 2334 0a06 FFF7FEFF 	 bl __aeabi_dsub
 2335 0a0a 031C     	 mov r3,r0
 2336 0a0c 0C1C     	 mov r4,r1
 2337 0a0e 2A48     	 ldr r0,.L119+24
 2338 0a10 2A49     	 ldr r1,.L119+28
 2339 0a12 1A1C     	 mov r2,r3
 2340 0a14 231C     	 mov r3,r4
 2341 0a16 FFF7FEFF 	 bl __aeabi_ddiv
 2342 0a1a 031C     	 mov r3,r0
 2343 0a1c 0C1C     	 mov r4,r1
 2344 0a1e 181C     	 mov r0,r3
 2345 0a20 211C     	 mov r1,r4
 2346 0a22 FFF7FEFF 	 bl atan
 2347 0a26 031C     	 mov r3,r0
 2348 0a28 0C1C     	 mov r4,r1
 2349 0a2a 181C     	 mov r0,r3
 2350 0a2c 211C     	 mov r1,r4
 2351 0a2e 244A     	 ldr r2,.L119+32
 2352 0a30 304B     	 ldr r3,.L119+84
 2353 0a32 FFF7FEFF 	 bl __aeabi_dmul
 2354 0a36 031C     	 mov r3,r0
 2355 0a38 0C1C     	 mov r4,r1
 2356 0a3a 181C     	 mov r0,r3
 2357 0a3c 211C     	 mov r1,r4
 2358 0a3e FFF7FEFF 	 bl __aeabi_d2f
 2359 0a42 021C     	 add r2,r0,#0
 2360 0a44 284B     	 ldr r3,.L119+72
 2361 0a46 1A60     	 str r2,[r3]
 316:../main.c     **** 				//angle_rl = - RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn + HALF_TRACK_WIDTH)); // out wheel
 317:../main.c     **** 				//angle_rr = - RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn - HALF_TRACK_WIDTH)); // in wheel
 318:../main.c     **** 
 319:../main.c     **** 				angle_rl = -angle_fl;
 2362              	 .loc 6 319 0
 2363 0a48 264B     	 ldr r3,.L119+68
 2364 0a4a 1B68     	 ldr r3,[r3]
 2365 0a4c 8022     	 mov r2,#128
 2366 0a4e 1206     	 lsl r2,r2,#24
 2367 0a50 5A40     	 eor r2,r3
 2368 0a52 1D4B     	 ldr r3,.L119+40
 2369 0a54 1A60     	 str r2,[r3]
 320:../main.c     **** 				angle_rr = -angle_fr;
 2370              	 .loc 6 320 0
 2371 0a56 244B     	 ldr r3,.L119+72
 2372 0a58 1B68     	 ldr r3,[r3]
 2373 0a5a 8022     	 mov r2,#128
 2374 0a5c 1206     	 lsl r2,r2,#24
 2375 0a5e 5A40     	 eor r2,r3
 2376 0a60 1A4B     	 ldr r3,.L119+44
 2377 0a62 1A60     	 str r2,[r3]
 321:../main.c     **** 
 322:../main.c     **** 				speed_fl = Driving_speed_cal * Speed_ratio;
 2378              	 .loc 6 322 0
 2379 0a64 1A4B     	 ldr r3,.L119+48
 2380 0a66 1B68     	 ldr r3,[r3]
 2381 0a68 181C     	 add r0,r3,#0
 2382 0a6a B968     	 ldr r1,[r7,#8]
 2383 0a6c FFF7FEFF 	 bl __aeabi_fmul
 2384 0a70 031C     	 add r3,r0,#0
 2385 0a72 1A1C     	 add r2,r3,#0
 2386 0a74 174B     	 ldr r3,.L119+52
 2387 0a76 1A60     	 str r2,[r3]
 323:../main.c     **** 				speed_fr = Driving_speed_cal / Speed_ratio;
 2388              	 .loc 6 323 0
 2389 0a78 154B     	 ldr r3,.L119+48
 2390 0a7a 1B68     	 ldr r3,[r3]
 2391 0a7c B868     	 ldr r0,[r7,#8]
 2392 0a7e 191C     	 add r1,r3,#0
 2393 0a80 FFF7FEFF 	 bl __aeabi_fdiv
 2394 0a84 031C     	 add r3,r0,#0
 2395 0a86 1A1C     	 add r2,r3,#0
 2396 0a88 134B     	 ldr r3,.L119+56
 2397 0a8a 1A60     	 str r2,[r3]
 324:../main.c     **** 				//speed_rl = Driving_speed_cal * Speed_ratio;
 325:../main.c     **** 				//speed_rr = Driving_speed_cal / Speed_ratio;
 326:../main.c     **** 
 327:../main.c     **** 				speed_rl = speed_fl;
 2398              	 .loc 6 327 0
 2399 0a8c 114B     	 ldr r3,.L119+52
 2400 0a8e 1A68     	 ldr r2,[r3]
 2401 0a90 124B     	 ldr r3,.L119+60
 2402 0a92 1A60     	 str r2,[r3]
 328:../main.c     **** 				speed_rr = speed_fr;
 2403              	 .loc 6 328 0
 2404 0a94 104B     	 ldr r3,.L119+56
 2405 0a96 1A68     	 ldr r2,[r3]
 2406 0a98 114B     	 ldr r3,.L119+64
 2407 0a9a 1A60     	 str r2,[r3]
 2408 0a9c EDE0     	 b .L76
 2409              	.L120:
 2410 0a9e C046     	 .align 2
 2411              	.L119:
 2412 0aa0 00000000 	 .word R_Turn
 2413 0aa4 9A999999 	 .word -1717986918
 2414 0aa8 9999A9BF 	 .word -1079404135
 2415 0aac 0000A0C1 	 .word -1046478848
 2416 0ab0 77BE9F1A 	 .word 446676599
 2417 0ab4 2FDDC43F 	 .word 1069866287
 2418 0ab8 79E92631 	 .word 824633721
 2419 0abc 08ACDC3F 	 .word 1071426568
 2420 0ac0 D9CEF753 	 .word 1408749273
 2421 0ac4 E3A54CC0 	 .word -1068718621
 2422 0ac8 00000000 	 .word angle_rl
 2423 0acc 00000000 	 .word angle_rr
 2424 0ad0 00000000 	 .word Speed_ratio
 2425 0ad4 00000000 	 .word speed_fl
 2426 0ad8 00000000 	 .word speed_fr
 2427 0adc 00000000 	 .word speed_rl
 2428 0ae0 00000000 	 .word speed_rr
 2429 0ae4 00000000 	 .word angle_fl
 2430 0ae8 00000000 	 .word angle_fr
 2431 0aec 0000F041 	 .word 1106247680
 2432 0af0 0000F0C1 	 .word -1041235968
 2433 0af4 E3A54C40 	 .word 1078765027
 2434 0af8 295C8FC2 	 .word -1030792151
 2435 0afc F528CC3F 	 .word 1070344437
 2436 0b00 182D4454 	 .word 1413754136
 2437 0b04 FB210940 	 .word 1074340347
 2438 0b08 9999A93F 	 .word 1068079513
 2439 0b0c 0000A041 	 .word 1101004800
 2440              	.L73:
 329:../main.c     **** 			}
 330:../main.c     **** 			else if((- R_TRUN_MIN > R_Turn) && (R_Turn > -R_TRUN_MAX)){ // trun left positive R
 2441              	 .loc 6 330 0
 2442 0b10 B14B     	 ldr r3,.L121
 2443 0b12 1B68     	 ldr r3,[r3]
 2444 0b14 181C     	 add r0,r3,#0
 2445 0b16 FFF7FEFF 	 bl __aeabi_f2d
 2446 0b1a 031C     	 mov r3,r0
 2447 0b1c 0C1C     	 mov r4,r1
 2448 0b1e 181C     	 mov r0,r3
 2449 0b20 211C     	 mov r1,r4
 2450 0b22 AE4A     	 ldr r2,.L121+4
 2451 0b24 AE4B     	 ldr r3,.L121+8
 2452 0b26 FFF7FEFF 	 bl __aeabi_dcmplt
 2453 0b2a 031E     	 sub r3,r0,#0
 2454 0b2c 00D1     	 bne .LCB1727
 2455 0b2e 8BE0     	 b .L77
 2456              	.LCB1727:
 2457              	 .loc 6 330 0 is_stmt 0 discriminator 1
 2458 0b30 A94B     	 ldr r3,.L121
 2459 0b32 1B68     	 ldr r3,[r3]
 2460 0b34 181C     	 add r0,r3,#0
 2461 0b36 AB49     	 ldr r1,.L121+12
 2462 0b38 FFF7FEFF 	 bl __aeabi_fcmpgt
 2463 0b3c 031E     	 sub r3,r0,#0
 2464 0b3e 00D1     	 bne .LCB1735
 2465 0b40 82E0     	 b .L77
 2466              	.LCB1735:
 331:../main.c     **** 				angle_fl = RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn + HALF_TRACK_WIDTH)); // in wheel
 2467              	 .loc 6 331 0 is_stmt 1
 2468 0b42 A54B     	 ldr r3,.L121
 2469 0b44 1B68     	 ldr r3,[r3]
 2470 0b46 181C     	 add r0,r3,#0
 2471 0b48 FFF7FEFF 	 bl __aeabi_f2d
 2472 0b4c 031C     	 mov r3,r0
 2473 0b4e 0C1C     	 mov r4,r1
 2474 0b50 181C     	 mov r0,r3
 2475 0b52 211C     	 mov r1,r4
 2476 0b54 A44A     	 ldr r2,.L121+16
 2477 0b56 A54B     	 ldr r3,.L121+20
 2478 0b58 FFF7FEFF 	 bl __aeabi_dadd
 2479 0b5c 031C     	 mov r3,r0
 2480 0b5e 0C1C     	 mov r4,r1
 2481 0b60 A348     	 ldr r0,.L121+24
 2482 0b62 A449     	 ldr r1,.L121+28
 2483 0b64 1A1C     	 mov r2,r3
 2484 0b66 231C     	 mov r3,r4
 2485 0b68 FFF7FEFF 	 bl __aeabi_ddiv
 2486 0b6c 031C     	 mov r3,r0
 2487 0b6e 0C1C     	 mov r4,r1
 2488 0b70 181C     	 mov r0,r3
 2489 0b72 211C     	 mov r1,r4
 2490 0b74 FFF7FEFF 	 bl atan
 2491 0b78 031C     	 mov r3,r0
 2492 0b7a 0C1C     	 mov r4,r1
 2493 0b7c 181C     	 mov r0,r3
 2494 0b7e 211C     	 mov r1,r4
 2495 0b80 9D4A     	 ldr r2,.L121+32
 2496 0b82 9E4B     	 ldr r3,.L121+36
 2497 0b84 FFF7FEFF 	 bl __aeabi_dmul
 2498 0b88 031C     	 mov r3,r0
 2499 0b8a 0C1C     	 mov r4,r1
 2500 0b8c 181C     	 mov r0,r3
 2501 0b8e 211C     	 mov r1,r4
 2502 0b90 FFF7FEFF 	 bl __aeabi_d2f
 2503 0b94 021C     	 add r2,r0,#0
 2504 0b96 9A4B     	 ldr r3,.L121+40
 2505 0b98 1A60     	 str r2,[r3]
 332:../main.c     **** 				angle_fr = RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn - HALF_TRACK_WIDTH)); // out wheel
 2506              	 .loc 6 332 0
 2507 0b9a 8F4B     	 ldr r3,.L121
 2508 0b9c 1B68     	 ldr r3,[r3]
 2509 0b9e 181C     	 add r0,r3,#0
 2510 0ba0 FFF7FEFF 	 bl __aeabi_f2d
 2511 0ba4 031C     	 mov r3,r0
 2512 0ba6 0C1C     	 mov r4,r1
 2513 0ba8 181C     	 mov r0,r3
 2514 0baa 211C     	 mov r1,r4
 2515 0bac 8E4A     	 ldr r2,.L121+16
 2516 0bae 8F4B     	 ldr r3,.L121+20
 2517 0bb0 FFF7FEFF 	 bl __aeabi_dsub
 2518 0bb4 031C     	 mov r3,r0
 2519 0bb6 0C1C     	 mov r4,r1
 2520 0bb8 8D48     	 ldr r0,.L121+24
 2521 0bba 8E49     	 ldr r1,.L121+28
 2522 0bbc 1A1C     	 mov r2,r3
 2523 0bbe 231C     	 mov r3,r4
 2524 0bc0 FFF7FEFF 	 bl __aeabi_ddiv
 2525 0bc4 031C     	 mov r3,r0
 2526 0bc6 0C1C     	 mov r4,r1
 2527 0bc8 181C     	 mov r0,r3
 2528 0bca 211C     	 mov r1,r4
 2529 0bcc FFF7FEFF 	 bl atan
 2530 0bd0 031C     	 mov r3,r0
 2531 0bd2 0C1C     	 mov r4,r1
 2532 0bd4 181C     	 mov r0,r3
 2533 0bd6 211C     	 mov r1,r4
 2534 0bd8 874A     	 ldr r2,.L121+32
 2535 0bda 884B     	 ldr r3,.L121+36
 2536 0bdc FFF7FEFF 	 bl __aeabi_dmul
 2537 0be0 031C     	 mov r3,r0
 2538 0be2 0C1C     	 mov r4,r1
 2539 0be4 181C     	 mov r0,r3
 2540 0be6 211C     	 mov r1,r4
 2541 0be8 FFF7FEFF 	 bl __aeabi_d2f
 2542 0bec 021C     	 add r2,r0,#0
 2543 0bee 854B     	 ldr r3,.L121+44
 2544 0bf0 1A60     	 str r2,[r3]
 333:../main.c     **** 				//angle_rl = - RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn + HALF_TRACK_WIDTH)); // in wheel
 334:../main.c     **** 				//angle_rr = - RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn - HALF_TRACK_WIDTH)); // in wheel
 335:../main.c     **** 
 336:../main.c     **** 				angle_rl = -angle_fl;
 2545              	 .loc 6 336 0
 2546 0bf2 834B     	 ldr r3,.L121+40
 2547 0bf4 1B68     	 ldr r3,[r3]
 2548 0bf6 8022     	 mov r2,#128
 2549 0bf8 1206     	 lsl r2,r2,#24
 2550 0bfa 5A40     	 eor r2,r3
 2551 0bfc 824B     	 ldr r3,.L121+48
 2552 0bfe 1A60     	 str r2,[r3]
 337:../main.c     **** 				angle_rr = -angle_fr;
 2553              	 .loc 6 337 0
 2554 0c00 804B     	 ldr r3,.L121+44
 2555 0c02 1B68     	 ldr r3,[r3]
 2556 0c04 8022     	 mov r2,#128
 2557 0c06 1206     	 lsl r2,r2,#24
 2558 0c08 5A40     	 eor r2,r3
 2559 0c0a 804B     	 ldr r3,.L121+52
 2560 0c0c 1A60     	 str r2,[r3]
 338:../main.c     **** 
 339:../main.c     **** 				speed_fl = Driving_speed_cal / Speed_ratio;
 2561              	 .loc 6 339 0
 2562 0c0e 804B     	 ldr r3,.L121+56
 2563 0c10 1B68     	 ldr r3,[r3]
 2564 0c12 B868     	 ldr r0,[r7,#8]
 2565 0c14 191C     	 add r1,r3,#0
 2566 0c16 FFF7FEFF 	 bl __aeabi_fdiv
 2567 0c1a 031C     	 add r3,r0,#0
 2568 0c1c 1A1C     	 add r2,r3,#0
 2569 0c1e 7D4B     	 ldr r3,.L121+60
 2570 0c20 1A60     	 str r2,[r3]
 340:../main.c     **** 				speed_fr = Driving_speed_cal * Speed_ratio;
 2571              	 .loc 6 340 0
 2572 0c22 7B4B     	 ldr r3,.L121+56
 2573 0c24 1B68     	 ldr r3,[r3]
 2574 0c26 181C     	 add r0,r3,#0
 2575 0c28 B968     	 ldr r1,[r7,#8]
 2576 0c2a FFF7FEFF 	 bl __aeabi_fmul
 2577 0c2e 031C     	 add r3,r0,#0
 2578 0c30 1A1C     	 add r2,r3,#0
 2579 0c32 794B     	 ldr r3,.L121+64
 2580 0c34 1A60     	 str r2,[r3]
 341:../main.c     **** 				//speed_rl = Driving_speed_cal / Speed_ratio;
 342:../main.c     **** 				//speed_rr = Driving_speed_cal * Speed_ratio;
 343:../main.c     **** 
 344:../main.c     **** 				speed_rl = speed_fl;
 2581              	 .loc 6 344 0
 2582 0c36 774B     	 ldr r3,.L121+60
 2583 0c38 1A68     	 ldr r2,[r3]
 2584 0c3a 784B     	 ldr r3,.L121+68
 2585 0c3c 1A60     	 str r2,[r3]
 345:../main.c     **** 				speed_rr = speed_fr;
 2586              	 .loc 6 345 0
 2587 0c3e 764B     	 ldr r3,.L121+64
 2588 0c40 1A68     	 ldr r2,[r3]
 2589 0c42 774B     	 ldr r3,.L121+72
 2590 0c44 1A60     	 str r2,[r3]
 2591 0c46 18E0     	 b .L76
 2592              	.L77:
 346:../main.c     **** 			}
 347:../main.c     **** 			else{// starigt driving
 348:../main.c     **** 				angle_fl = 0;
 2593              	 .loc 6 348 0
 2594 0c48 6D4B     	 ldr r3,.L121+40
 2595 0c4a 0022     	 mov r2,#0
 2596 0c4c 1A60     	 str r2,[r3]
 349:../main.c     **** 				angle_fr = 0;
 2597              	 .loc 6 349 0
 2598 0c4e 6D4B     	 ldr r3,.L121+44
 2599 0c50 0022     	 mov r2,#0
 2600 0c52 1A60     	 str r2,[r3]
 350:../main.c     **** 				angle_rl = 0;
 2601              	 .loc 6 350 0
 2602 0c54 6C4B     	 ldr r3,.L121+48
 2603 0c56 0022     	 mov r2,#0
 2604 0c58 1A60     	 str r2,[r3]
 351:../main.c     **** 				angle_rr = 0;
 2605              	 .loc 6 351 0
 2606 0c5a 6C4B     	 ldr r3,.L121+52
 2607 0c5c 0022     	 mov r2,#0
 2608 0c5e 1A60     	 str r2,[r3]
 352:../main.c     **** 
 353:../main.c     **** 				speed_fl = Driving_speed_cal;
 2609              	 .loc 6 353 0
 2610 0c60 6C4B     	 ldr r3,.L121+60
 2611 0c62 BA68     	 ldr r2,[r7,#8]
 2612 0c64 1A60     	 str r2,[r3]
 354:../main.c     **** 				speed_fr = Driving_speed_cal;
 2613              	 .loc 6 354 0
 2614 0c66 6C4B     	 ldr r3,.L121+64
 2615 0c68 BA68     	 ldr r2,[r7,#8]
 2616 0c6a 1A60     	 str r2,[r3]
 355:../main.c     **** 				speed_rl = Driving_speed_cal;
 2617              	 .loc 6 355 0
 2618 0c6c 6B4B     	 ldr r3,.L121+68
 2619 0c6e BA68     	 ldr r2,[r7,#8]
 2620 0c70 1A60     	 str r2,[r3]
 356:../main.c     **** 				speed_rr = Driving_speed_cal;
 2621              	 .loc 6 356 0
 2622 0c72 6B4B     	 ldr r3,.L121+72
 2623 0c74 BA68     	 ldr r2,[r7,#8]
 2624 0c76 1A60     	 str r2,[r3]
 357:../main.c     **** 			}
 358:../main.c     **** 			break;
 2625              	 .loc 6 358 0
 2626 0c78 8BE0     	 b .L57
 2627              	.L76:
 2628 0c7a 8AE0     	 b .L57
 2629              	.L44:
 359:../main.c     **** 
 360:../main.c     **** 		case CRAB:  //carb //#############################################################
 361:../main.c     **** 			Steering_direction_cal = Steering_direction_cal * 2.5; // mach data from remote
 2630              	 .loc 6 361 0
 2631 0c7c F868     	 ldr r0,[r7,#12]
 2632 0c7e 6949     	 ldr r1,.L121+76
 2633 0c80 FFF7FEFF 	 bl __aeabi_fmul
 2634 0c84 031C     	 add r3,r0,#0
 2635 0c86 FB60     	 str r3,[r7,#12]
 362:../main.c     **** 			if(Steering_direction_cal > 190) Steering_direction_cal = 190;
 2636              	 .loc 6 362 0
 2637 0c88 F868     	 ldr r0,[r7,#12]
 2638 0c8a 6749     	 ldr r1,.L121+80
 2639 0c8c FFF7FEFF 	 bl __aeabi_fcmpgt
 2640 0c90 031E     	 sub r3,r0,#0
 2641 0c92 01D0     	 beq .L80
 2642              	 .loc 6 362 0 is_stmt 0 discriminator 1
 2643 0c94 644B     	 ldr r3,.L121+80
 2644 0c96 FB60     	 str r3,[r7,#12]
 2645              	.L80:
 363:../main.c     **** 			if(Steering_direction_cal < -190) Steering_direction_cal = -190;
 2646              	 .loc 6 363 0 is_stmt 1
 2647 0c98 F868     	 ldr r0,[r7,#12]
 2648 0c9a 6449     	 ldr r1,.L121+84
 2649 0c9c FFF7FEFF 	 bl __aeabi_fcmplt
 2650 0ca0 031E     	 sub r3,r0,#0
 2651 0ca2 01D0     	 beq .L82
 2652              	 .loc 6 363 0 is_stmt 0 discriminator 1
 2653 0ca4 614B     	 ldr r3,.L121+84
 2654 0ca6 FB60     	 str r3,[r7,#12]
 2655              	.L82:
 364:../main.c     **** 			// steering
 365:../main.c     **** 			angle_fl = Steering_direction_cal;
 2656              	 .loc 6 365 0 is_stmt 1
 2657 0ca8 554B     	 ldr r3,.L121+40
 2658 0caa FA68     	 ldr r2,[r7,#12]
 2659 0cac 1A60     	 str r2,[r3]
 366:../main.c     **** 			angle_fr = Steering_direction_cal;
 2660              	 .loc 6 366 0
 2661 0cae 554B     	 ldr r3,.L121+44
 2662 0cb0 FA68     	 ldr r2,[r7,#12]
 2663 0cb2 1A60     	 str r2,[r3]
 367:../main.c     **** 			angle_rl = Steering_direction_cal;
 2664              	 .loc 6 367 0
 2665 0cb4 544B     	 ldr r3,.L121+48
 2666 0cb6 FA68     	 ldr r2,[r7,#12]
 2667 0cb8 1A60     	 str r2,[r3]
 368:../main.c     **** 			angle_rr = Steering_direction_cal;
 2668              	 .loc 6 368 0
 2669 0cba 544B     	 ldr r3,.L121+52
 2670 0cbc FA68     	 ldr r2,[r7,#12]
 2671 0cbe 1A60     	 str r2,[r3]
 369:../main.c     **** 			 // speed
 370:../main.c     **** 			 speed_fl = Driving_speed_cal;
 2672              	 .loc 6 370 0
 2673 0cc0 544B     	 ldr r3,.L121+60
 2674 0cc2 BA68     	 ldr r2,[r7,#8]
 2675 0cc4 1A60     	 str r2,[r3]
 371:../main.c     **** 			 speed_fr = Driving_speed_cal;
 2676              	 .loc 6 371 0
 2677 0cc6 544B     	 ldr r3,.L121+64
 2678 0cc8 BA68     	 ldr r2,[r7,#8]
 2679 0cca 1A60     	 str r2,[r3]
 372:../main.c     **** 			 speed_rl = Driving_speed_cal;
 2680              	 .loc 6 372 0
 2681 0ccc 534B     	 ldr r3,.L121+68
 2682 0cce BA68     	 ldr r2,[r7,#8]
 2683 0cd0 1A60     	 str r2,[r3]
 373:../main.c     **** 			 speed_rr = Driving_speed_cal;
 2684              	 .loc 6 373 0
 2685 0cd2 534B     	 ldr r3,.L121+72
 2686 0cd4 BA68     	 ldr r2,[r7,#8]
 2687 0cd6 1A60     	 str r2,[r3]
 374:../main.c     **** 			break;
 2688              	 .loc 6 374 0
 2689 0cd8 5BE0     	 b .L57
 2690              	.L45:
 375:../main.c     **** 
 376:../main.c     **** 		case ROTATE: // rotate #############################################################
 377:../main.c     **** 			// steering agel for turng in place
 378:../main.c     **** 			angle_fl = ROTATION_ANGLE + ROTATION_ANGLE_OFFSET;
 2691              	 .loc 6 378 0
 2692 0cda 494B     	 ldr r3,.L121+40
 2693 0cdc 544A     	 ldr r2,.L121+88
 2694 0cde 1A60     	 str r2,[r3]
 379:../main.c     **** 			angle_fr = -ROTATION_ANGLE + ROTATION_ANGLE_OFFSET;
 2695              	 .loc 6 379 0
 2696 0ce0 484B     	 ldr r3,.L121+44
 2697 0ce2 544A     	 ldr r2,.L121+92
 2698 0ce4 1A60     	 str r2,[r3]
 380:../main.c     **** 			angle_rl = -ROTATION_ANGLE + ROTATION_ANGLE_OFFSET;
 2699              	 .loc 6 380 0
 2700 0ce6 484B     	 ldr r3,.L121+48
 2701 0ce8 524A     	 ldr r2,.L121+92
 2702 0cea 1A60     	 str r2,[r3]
 381:../main.c     **** 			angle_rr = ROTATION_ANGLE + ROTATION_ANGLE_OFFSET;
 2703              	 .loc 6 381 0
 2704 0cec 474B     	 ldr r3,.L121+52
 2705 0cee 504A     	 ldr r2,.L121+88
 2706 0cf0 1A60     	 str r2,[r3]
 382:../main.c     **** 
 383:../main.c     **** 			 // speed
 384:../main.c     **** 			if (Steering_direction_cal > 10){
 2707              	 .loc 6 384 0
 2708 0cf2 F868     	 ldr r0,[r7,#12]
 2709 0cf4 5049     	 ldr r1,.L121+96
 2710 0cf6 FFF7FEFF 	 bl __aeabi_fcmpgt
 2711 0cfa 031E     	 sub r3,r0,#0
 2712 0cfc 0ED0     	 beq .L113
 385:../main.c     **** 				speed_fl = ROTATION_SPEED;
 2713              	 .loc 6 385 0
 2714 0cfe 454B     	 ldr r3,.L121+60
 2715 0d00 FA22     	 mov r2,#250
 2716 0d02 9205     	 lsl r2,r2,#22
 2717 0d04 1A60     	 str r2,[r3]
 386:../main.c     **** 				speed_fr = -ROTATION_SPEED;
 2718              	 .loc 6 386 0
 2719 0d06 444B     	 ldr r3,.L121+64
 2720 0d08 4C4A     	 ldr r2,.L121+100
 2721 0d0a 1A60     	 str r2,[r3]
 387:../main.c     **** 				speed_rl = ROTATION_SPEED;
 2722              	 .loc 6 387 0
 2723 0d0c 434B     	 ldr r3,.L121+68
 2724 0d0e FA22     	 mov r2,#250
 2725 0d10 9205     	 lsl r2,r2,#22
 2726 0d12 1A60     	 str r2,[r3]
 388:../main.c     **** 				speed_rr = -ROTATION_SPEED;
 2727              	 .loc 6 388 0
 2728 0d14 424B     	 ldr r3,.L121+72
 2729 0d16 494A     	 ldr r2,.L121+100
 2730 0d18 1A60     	 str r2,[r3]
 2731 0d1a 21E0     	 b .L86
 2732              	.L113:
 389:../main.c     **** 			}
 390:../main.c     **** 			else if(Steering_direction_cal < -10){
 2733              	 .loc 6 390 0
 2734 0d1c F868     	 ldr r0,[r7,#12]
 2735 0d1e 4849     	 ldr r1,.L121+104
 2736 0d20 FFF7FEFF 	 bl __aeabi_fcmplt
 2737 0d24 031E     	 sub r3,r0,#0
 2738 0d26 0ED0     	 beq .L114
 391:../main.c     **** 				speed_fl = -ROTATION_SPEED;
 2739              	 .loc 6 391 0
 2740 0d28 3A4B     	 ldr r3,.L121+60
 2741 0d2a 444A     	 ldr r2,.L121+100
 2742 0d2c 1A60     	 str r2,[r3]
 392:../main.c     **** 				speed_fr = ROTATION_SPEED;
 2743              	 .loc 6 392 0
 2744 0d2e 3A4B     	 ldr r3,.L121+64
 2745 0d30 FA22     	 mov r2,#250
 2746 0d32 9205     	 lsl r2,r2,#22
 2747 0d34 1A60     	 str r2,[r3]
 393:../main.c     **** 				speed_rl = -ROTATION_SPEED;
 2748              	 .loc 6 393 0
 2749 0d36 394B     	 ldr r3,.L121+68
 2750 0d38 404A     	 ldr r2,.L121+100
 2751 0d3a 1A60     	 str r2,[r3]
 394:../main.c     **** 				speed_rr = ROTATION_SPEED;
 2752              	 .loc 6 394 0
 2753 0d3c 384B     	 ldr r3,.L121+72
 2754 0d3e FA22     	 mov r2,#250
 2755 0d40 9205     	 lsl r2,r2,#22
 2756 0d42 1A60     	 str r2,[r3]
 2757 0d44 0CE0     	 b .L86
 2758              	.L114:
 395:../main.c     **** 			}
 396:../main.c     **** 			else{
 397:../main.c     **** 				speed_fl = 0;
 2759              	 .loc 6 397 0
 2760 0d46 334B     	 ldr r3,.L121+60
 2761 0d48 0022     	 mov r2,#0
 2762 0d4a 1A60     	 str r2,[r3]
 398:../main.c     **** 				speed_fr = 0;
 2763              	 .loc 6 398 0
 2764 0d4c 324B     	 ldr r3,.L121+64
 2765 0d4e 0022     	 mov r2,#0
 2766 0d50 1A60     	 str r2,[r3]
 399:../main.c     **** 				speed_rl = 0;
 2767              	 .loc 6 399 0
 2768 0d52 324B     	 ldr r3,.L121+68
 2769 0d54 0022     	 mov r2,#0
 2770 0d56 1A60     	 str r2,[r3]
 400:../main.c     **** 				speed_rr = 0;
 2771              	 .loc 6 400 0
 2772 0d58 314B     	 ldr r3,.L121+72
 2773 0d5a 0022     	 mov r2,#0
 2774 0d5c 1A60     	 str r2,[r3]
 401:../main.c     **** 			}
 402:../main.c     **** 			break;
 2775              	 .loc 6 402 0
 2776 0d5e 18E0     	 b .L57
 2777              	.L86:
 2778 0d60 17E0     	 b .L57
 2779              	.L39:
 403:../main.c     **** 
 404:../main.c     **** 		default:
 405:../main.c     **** 			angle_fl = 0;
 2780              	 .loc 6 405 0
 2781 0d62 274B     	 ldr r3,.L121+40
 2782 0d64 0022     	 mov r2,#0
 2783 0d66 1A60     	 str r2,[r3]
 406:../main.c     **** 			angle_fr = 0;
 2784              	 .loc 6 406 0
 2785 0d68 264B     	 ldr r3,.L121+44
 2786 0d6a 0022     	 mov r2,#0
 2787 0d6c 1A60     	 str r2,[r3]
 407:../main.c     **** 			angle_rl = 0;
 2788              	 .loc 6 407 0
 2789 0d6e 264B     	 ldr r3,.L121+48
 2790 0d70 0022     	 mov r2,#0
 2791 0d72 1A60     	 str r2,[r3]
 408:../main.c     **** 			angle_rr = 0;
 2792              	 .loc 6 408 0
 2793 0d74 254B     	 ldr r3,.L121+52
 2794 0d76 0022     	 mov r2,#0
 2795 0d78 1A60     	 str r2,[r3]
 409:../main.c     **** 
 410:../main.c     **** 			speed_fl = 0;
 2796              	 .loc 6 410 0
 2797 0d7a 264B     	 ldr r3,.L121+60
 2798 0d7c 0022     	 mov r2,#0
 2799 0d7e 1A60     	 str r2,[r3]
 411:../main.c     **** 			speed_fr = 0;
 2800              	 .loc 6 411 0
 2801 0d80 254B     	 ldr r3,.L121+64
 2802 0d82 0022     	 mov r2,#0
 2803 0d84 1A60     	 str r2,[r3]
 412:../main.c     **** 			speed_rl = 0;
 2804              	 .loc 6 412 0
 2805 0d86 254B     	 ldr r3,.L121+68
 2806 0d88 0022     	 mov r2,#0
 2807 0d8a 1A60     	 str r2,[r3]
 413:../main.c     **** 			speed_rr = 0;
 2808              	 .loc 6 413 0
 2809 0d8c 244B     	 ldr r3,.L121+72
 2810 0d8e 0022     	 mov r2,#0
 2811 0d90 1A60     	 str r2,[r3]
 2812              	.L57:
 414:../main.c     **** 
 415:../main.c     **** 	}
 416:../main.c     ****   // set gobal vars
 417:../main.c     ****   Steering_Angles[0] = angle_fl;
 2813              	 .loc 6 417 0
 2814 0d92 1B4B     	 ldr r3,.L121+40
 2815 0d94 1A68     	 ldr r2,[r3]
 2816 0d96 2B4B     	 ldr r3,.L121+108
 2817 0d98 1A60     	 str r2,[r3]
 418:../main.c     ****   Steering_Angles[1] = angle_fr;
 2818              	 .loc 6 418 0
 2819 0d9a 1A4B     	 ldr r3,.L121+44
 2820 0d9c 1A68     	 ldr r2,[r3]
 2821 0d9e 294B     	 ldr r3,.L121+108
 2822 0da0 5A60     	 str r2,[r3,#4]
 419:../main.c     ****   Steering_Angles[2] = angle_rl;
 2823              	 .loc 6 419 0
 2824 0da2 194B     	 ldr r3,.L121+48
 2825 0da4 1A68     	 ldr r2,[r3]
 2826 0da6 274B     	 ldr r3,.L121+108
 2827 0da8 9A60     	 str r2,[r3,#8]
 420:../main.c     ****   Steering_Angles[3] = angle_rr;
 2828              	 .loc 6 420 0
 2829 0daa 184B     	 ldr r3,.L121+52
 2830 0dac 1A68     	 ldr r2,[r3]
 2831 0dae 254B     	 ldr r3,.L121+108
 2832 0db0 DA60     	 str r2,[r3,#12]
 421:../main.c     **** 
 422:../main.c     ****   Speeds[0] = speed_fl;
 2833              	 .loc 6 422 0
 2834 0db2 184B     	 ldr r3,.L121+60
 2835 0db4 1A68     	 ldr r2,[r3]
 2836 0db6 244B     	 ldr r3,.L121+112
 2837 0db8 1A60     	 str r2,[r3]
 423:../main.c     ****   Speeds[1] = speed_fr;
 2838              	 .loc 6 423 0
 2839 0dba 174B     	 ldr r3,.L121+64
 2840 0dbc 1A68     	 ldr r2,[r3]
 2841 0dbe 224B     	 ldr r3,.L121+112
 2842 0dc0 5A60     	 str r2,[r3,#4]
 424:../main.c     ****   Speeds[2] = speed_rl;
 2843              	 .loc 6 424 0
 2844 0dc2 164B     	 ldr r3,.L121+68
 2845 0dc4 1A68     	 ldr r2,[r3]
 2846 0dc6 204B     	 ldr r3,.L121+112
 2847 0dc8 9A60     	 str r2,[r3,#8]
 425:../main.c     ****   Speeds[3] = speed_rr;
 2848              	 .loc 6 425 0
 2849 0dca 154B     	 ldr r3,.L121+72
 2850 0dcc 1A68     	 ldr r2,[r3]
 2851 0dce 1E4B     	 ldr r3,.L121+112
 2852 0dd0 DA60     	 str r2,[r3,#12]
 426:../main.c     **** 
 427:../main.c     **** }
 2853              	 .loc 6 427 0
 2854 0dd2 BD46     	 mov sp,r7
 2855 0dd4 05B0     	 add sp,sp,#20
 2856              	 
 2857 0dd6 F0BD     	 pop {r4,r5,r6,r7,pc}
 2858              	.L122:
 2859              	 .align 2
 2860              	.L121:
 2861 0dd8 00000000 	 .word R_Turn
 2862 0ddc 9A999999 	 .word -1717986918
 2863 0de0 9999A9BF 	 .word -1079404135
 2864 0de4 0000A0C1 	 .word -1046478848
 2865 0de8 77BE9F1A 	 .word 446676599
 2866 0dec 2FDDC43F 	 .word 1069866287
 2867 0df0 79E92631 	 .word 824633721
 2868 0df4 08ACDC3F 	 .word 1071426568
 2869 0df8 D9CEF753 	 .word 1408749273
 2870 0dfc E3A54C40 	 .word 1078765027
 2871 0e00 00000000 	 .word angle_fl
 2872 0e04 00000000 	 .word angle_fr
 2873 0e08 00000000 	 .word angle_rl
 2874 0e0c 00000000 	 .word angle_rr
 2875 0e10 00000000 	 .word Speed_ratio
 2876 0e14 00000000 	 .word speed_fl
 2877 0e18 00000000 	 .word speed_fr
 2878 0e1c 00000000 	 .word speed_rl
 2879 0e20 00000000 	 .word speed_rr
 2880 0e24 00002040 	 .word 1075838976
 2881 0e28 00003E43 	 .word 1128136704
 2882 0e2c 00003EC3 	 .word -1019346944
 2883 0e30 0AD76B42 	 .word 1114363658
 2884 0e34 0AD743C2 	 .word -1035741430
 2885 0e38 00002041 	 .word 1092616192
 2886 0e3c 000080BE 	 .word -1098907648
 2887 0e40 000020C1 	 .word -1054867456
 2888 0e44 00000000 	 .word Steering_Angles
 2889 0e48 00000000 	 .word Speeds
 2890              	 .cfi_endproc
 2891              	.LFE225:
 2893              	 .section .text.IRQ4_Handler,"ax",%progbits
 2894              	 .align 2
 2895              	 .global IRQ4_Handler
 2896              	 .code 16
 2897              	 .thumb_func
 2899              	IRQ4_Handler:
 2900              	.LFB226:
 428:../main.c     **** 
 429:../main.c     **** void CAN_RX_ULTRASONIC_ISR(void) { // recide data
 2901              	 .loc 6 429 0
 2902              	 .cfi_startproc
 2903 0000 90B5     	 push {r4,r7,lr}
 2904              	.LCFI36:
 2905              	 .cfi_def_cfa_offset 12
 2906              	 .cfi_offset 4,-12
 2907              	 .cfi_offset 7,-8
 2908              	 .cfi_offset 14,-4
 2909 0002 87B0     	 sub sp,sp,#28
 2910              	.LCFI37:
 2911              	 .cfi_def_cfa_offset 40
 2912 0004 02AF     	 add r7,sp,#8
 2913              	.LCFI38:
 2914              	 .cfi_def_cfa 7,32
 430:../main.c     **** 	XMC_CAN_MO_t* lmsgobjct_ptr_1 = CAN_NODE_0.lmobj_ptr[6]->mo_ptr;
 2915              	 .loc 6 430 0
 2916 0006 3B4B     	 ldr r3,.L126
 2917 0008 5B6A     	 ldr r3,[r3,#36]
 2918 000a 1B68     	 ldr r3,[r3]
 2919 000c BB60     	 str r3,[r7,#8]
 431:../main.c     **** 	CAN_NODE_MO_Receive((void*) CAN_NODE_0.lmobj_ptr[6]);
 2920              	 .loc 6 431 0
 2921 000e 394B     	 ldr r3,.L126
 2922 0010 5B6A     	 ldr r3,[r3,#36]
 2923 0012 181C     	 mov r0,r3
 2924 0014 FFF7FEFF 	 bl CAN_NODE_MO_Receive
 432:../main.c     **** 
 433:../main.c     **** 	uint8_t data_RX[8];
 434:../main.c     **** 	uint8_t i;
 435:../main.c     **** 	for(i = 0 ; i < 8 ; i ++){
 2925              	 .loc 6 435 0
 2926 0018 0F23     	 mov r3,#15
 2927 001a FB18     	 add r3,r7,r3
 2928 001c 0022     	 mov r2,#0
 2929 001e 1A70     	 strb r2,[r3]
 2930 0020 11E0     	 b .L124
 2931              	.L125:
 436:../main.c     **** 		 data_RX[i] = lmsgobjct_ptr_1->can_data_byte[i];
 2932              	 .loc 6 436 0 discriminator 3
 2933 0022 0F23     	 mov r3,#15
 2934 0024 FB18     	 add r3,r7,r3
 2935 0026 1B78     	 ldrb r3,[r3]
 2936 0028 0F22     	 mov r2,#15
 2937 002a BA18     	 add r2,r7,r2
 2938 002c 1278     	 ldrb r2,[r2]
 2939 002e B968     	 ldr r1,[r7,#8]
 2940 0030 8A18     	 add r2,r1,r2
 2941 0032 117C     	 ldrb r1,[r2,#16]
 2942 0034 3A1C     	 mov r2,r7
 2943 0036 D154     	 strb r1,[r2,r3]
 435:../main.c     **** 		 data_RX[i] = lmsgobjct_ptr_1->can_data_byte[i];
 2944              	 .loc 6 435 0 discriminator 3
 2945 0038 0F23     	 mov r3,#15
 2946 003a FB18     	 add r3,r7,r3
 2947 003c 1A78     	 ldrb r2,[r3]
 2948 003e 0F23     	 mov r3,#15
 2949 0040 FB18     	 add r3,r7,r3
 2950 0042 0132     	 add r2,r2,#1
 2951 0044 1A70     	 strb r2,[r3]
 2952              	.L124:
 435:../main.c     **** 		 data_RX[i] = lmsgobjct_ptr_1->can_data_byte[i];
 2953              	 .loc 6 435 0 is_stmt 0 discriminator 1
 2954 0046 0F23     	 mov r3,#15
 2955 0048 FB18     	 add r3,r7,r3
 2956 004a 1B78     	 ldrb r3,[r3]
 2957 004c 072B     	 cmp r3,#7
 2958 004e E8D9     	 bls .L125
 437:../main.c     **** 	}
 438:../main.c     **** 
 439:../main.c     **** 	CAN_state_Ultrasonic = (data_RX[0 * 2 + 1] << 8) | data_RX[0 * 2];
 2959              	 .loc 6 439 0 is_stmt 1
 2960 0050 3B1C     	 mov r3,r7
 2961 0052 5B78     	 ldrb r3,[r3,#1]
 2962 0054 1B02     	 lsl r3,r3,#8
 2963 0056 DAB2     	 uxtb r2,r3
 2964 0058 3B1C     	 mov r3,r7
 2965 005a 1B78     	 ldrb r3,[r3]
 2966 005c DBB2     	 uxtb r3,r3
 2967 005e 1343     	 orr r3,r2
 2968 0060 DBB2     	 uxtb r3,r3
 2969 0062 DAB2     	 uxtb r2,r3
 2970 0064 244B     	 ldr r3,.L126+4
 2971 0066 1A70     	 strb r2,[r3]
 440:../main.c     **** 	Ultrasonic_cm_C = (data_RX[1 * 2 + 1] << 8) | data_RX[1 * 2];
 2972              	 .loc 6 440 0
 2973 0068 3B1C     	 mov r3,r7
 2974 006a DB78     	 ldrb r3,[r3,#3]
 2975 006c 1B02     	 lsl r3,r3,#8
 2976 006e 9AB2     	 uxth r2,r3
 2977 0070 3B1C     	 mov r3,r7
 2978 0072 9B78     	 ldrb r3,[r3,#2]
 2979 0074 9BB2     	 uxth r3,r3
 2980 0076 1343     	 orr r3,r2
 2981 0078 9BB2     	 uxth r3,r3
 2982 007a 9AB2     	 uxth r2,r3
 2983 007c 1F4B     	 ldr r3,.L126+8
 2984 007e 1A80     	 strh r2,[r3]
 441:../main.c     **** 	Ultrasonic_cm_L = (data_RX[2 * 2 + 1] << 8) | data_RX[2 * 2];
 2985              	 .loc 6 441 0
 2986 0080 3B1C     	 mov r3,r7
 2987 0082 5B79     	 ldrb r3,[r3,#5]
 2988 0084 1B02     	 lsl r3,r3,#8
 2989 0086 9AB2     	 uxth r2,r3
 2990 0088 3B1C     	 mov r3,r7
 2991 008a 1B79     	 ldrb r3,[r3,#4]
 2992 008c 9BB2     	 uxth r3,r3
 2993 008e 1343     	 orr r3,r2
 2994 0090 9BB2     	 uxth r3,r3
 2995 0092 9AB2     	 uxth r2,r3
 2996 0094 1A4B     	 ldr r3,.L126+12
 2997 0096 1A80     	 strh r2,[r3]
 442:../main.c     **** 	Ultrasonic_cm_R = (data_RX[3 * 2 + 1] << 8) | data_RX[3 * 2];
 2998              	 .loc 6 442 0
 2999 0098 3B1C     	 mov r3,r7
 3000 009a DB79     	 ldrb r3,[r3,#7]
 3001 009c 1B02     	 lsl r3,r3,#8
 3002 009e 9AB2     	 uxth r2,r3
 3003 00a0 3B1C     	 mov r3,r7
 3004 00a2 9B79     	 ldrb r3,[r3,#6]
 3005 00a4 9BB2     	 uxth r3,r3
 3006 00a6 1343     	 orr r3,r2
 3007 00a8 9BB2     	 uxth r3,r3
 3008 00aa 9AB2     	 uxth r2,r3
 3009 00ac 154B     	 ldr r3,.L126+16
 3010 00ae 1A80     	 strh r2,[r3]
 443:../main.c     **** 
 444:../main.c     **** 	Ultra_sonic_filter(Ultrasonic_cm_C,  Ultrasonic_cm_L,  Ultrasonic_cm_R,  Steering_Angles,  ALPHA_U
 3011              	 .loc 6 444 0
 3012 00b0 124B     	 ldr r3,.L126+8
 3013 00b2 1B88     	 ldrh r3,[r3]
 3014 00b4 9BB2     	 uxth r3,r3
 3015 00b6 98B2     	 uxth r0,r3
 3016 00b8 114B     	 ldr r3,.L126+12
 3017 00ba 1B88     	 ldrh r3,[r3]
 3018 00bc 9BB2     	 uxth r3,r3
 3019 00be 99B2     	 uxth r1,r3
 3020 00c0 104B     	 ldr r3,.L126+16
 3021 00c2 1B88     	 ldrh r3,[r3]
 3022 00c4 9BB2     	 uxth r3,r3
 3023 00c6 9AB2     	 uxth r2,r3
 3024 00c8 0F4B     	 ldr r3,.L126+20
 3025 00ca 1B68     	 ldr r3,[r3]
 3026 00cc 00B2     	 sxth r0,r0
 3027 00ce 09B2     	 sxth r1,r1
 3028 00d0 12B2     	 sxth r2,r2
 3029 00d2 0E4C     	 ldr r4,.L126+24
 3030 00d4 0093     	 str r3,[sp]
 3031 00d6 231C     	 mov r3,r4
 3032 00d8 FFF7FEFF 	 bl Ultra_sonic_filter
 445:../main.c     **** 
 446:../main.c     **** 	CAN_Ultrasonic_No_messasge_count = 0;
 3033              	 .loc 6 446 0
 3034 00dc 0C4B     	 ldr r3,.L126+28
 3035 00de 0022     	 mov r2,#0
 3036 00e0 1A70     	 strb r2,[r3]
 447:../main.c     **** 
 448:../main.c     **** 	WATCHDOG_Service();
 3037              	 .loc 6 448 0
 3038 00e2 FFF7FEFF 	 bl WATCHDOG_Service
 449:../main.c     **** 	DIGITAL_IO_SetOutputLow(&WATCHDOG_LED_BLUE);
 3039              	 .loc 6 449 0
 3040 00e6 0B4B     	 ldr r3,.L126+32
 3041 00e8 181C     	 mov r0,r3
 3042 00ea FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 450:../main.c     **** }
 3043              	 .loc 6 450 0
 3044 00ee BD46     	 mov sp,r7
 3045 00f0 05B0     	 add sp,sp,#20
 3046              	 
 3047 00f2 90BD     	 pop {r4,r7,pc}
 3048              	.L127:
 3049              	 .align 2
 3050              	.L126:
 3051 00f4 00000000 	 .word CAN_NODE_0
 3052 00f8 00000000 	 .word CAN_state_Ultrasonic
 3053 00fc 00000000 	 .word Ultrasonic_cm_C
 3054 0100 00000000 	 .word Ultrasonic_cm_L
 3055 0104 00000000 	 .word Ultrasonic_cm_R
 3056 0108 00000000 	 .word ALPHA_ULTARSONIC
 3057 010c 00000000 	 .word Steering_Angles
 3058 0110 00000000 	 .word CAN_Ultrasonic_No_messasge_count
 3059 0114 00000000 	 .word WATCHDOG_LED_BLUE
 3060              	 .cfi_endproc
 3061              	.LFE226:
 3063              	 .global __aeabi_i2f
 3064              	 .section .text.Ultra_sonic_filter,"ax",%progbits
 3065              	 .align 2
 3066              	 .global Ultra_sonic_filter
 3067              	 .code 16
 3068              	 .thumb_func
 3070              	Ultra_sonic_filter:
 3071              	.LFB227:
 451:../main.c     **** 
 452:../main.c     **** void Ultra_sonic_filter(int16_t Ultrasonic_cm_C_clc, int16_t Ultrasonic_cm_L_clc, int16_t Ultrasoni
 3072              	 .loc 6 452 0
 3073              	 .cfi_startproc
 3074 0000 F0B5     	 push {r4,r5,r6,r7,lr}
 3075              	.LCFI39:
 3076              	 .cfi_def_cfa_offset 20
 3077              	 .cfi_offset 4,-20
 3078              	 .cfi_offset 5,-16
 3079              	 .cfi_offset 6,-12
 3080              	 .cfi_offset 7,-8
 3081              	 .cfi_offset 14,-4
 3082 0002 87B0     	 sub sp,sp,#28
 3083              	.LCFI40:
 3084              	 .cfi_def_cfa_offset 48
 3085 0004 00AF     	 add r7,sp,#0
 3086              	.LCFI41:
 3087              	 .cfi_def_cfa_register 7
 3088 0006 041C     	 mov r4,r0
 3089 0008 081C     	 mov r0,r1
 3090 000a 111C     	 mov r1,r2
 3091 000c 7B60     	 str r3,[r7,#4]
 3092 000e 0E23     	 mov r3,#14
 3093 0010 FB18     	 add r3,r7,r3
 3094 0012 221C     	 add r2,r4,#0
 3095 0014 1A80     	 strh r2,[r3]
 3096 0016 0C23     	 mov r3,#12
 3097 0018 FB18     	 add r3,r7,r3
 3098 001a 021C     	 add r2,r0,#0
 3099 001c 1A80     	 strh r2,[r3]
 3100 001e 0A23     	 mov r3,#10
 3101 0020 FB18     	 add r3,r7,r3
 3102 0022 0A1C     	 add r2,r1,#0
 3103 0024 1A80     	 strh r2,[r3]
 453:../main.c     **** 
 454:../main.c     **** 	if(Ultrasonic_cm_C_clc != 0){
 3104              	 .loc 6 454 0
 3105 0026 0E23     	 mov r3,#14
 3106 0028 FB18     	 add r3,r7,r3
 3107 002a 0022     	 mov r2,#0
 3108 002c 9B5E     	 ldrsh r3,[r3,r2]
 3109 002e 002B     	 cmp r3,#0
 3110 0030 1CD0     	 beq .L129
 455:../main.c     **** 		Ultrsonic_data_invaildcounter[0] = 0;
 3111              	 .loc 6 455 0
 3112 0032 DA4B     	 ldr r3,.L146
 3113 0034 0022     	 mov r2,#0
 3114 0036 1A70     	 strb r2,[r3]
 456:../main.c     **** 		Fil_Ultrasonic_m_C = Exp_moving_average((float)Ultrasonic_cm_C_clc / 100 , Fil_Ultrasonic_m_C, AL
 3115              	 .loc 6 456 0
 3116 0038 0E23     	 mov r3,#14
 3117 003a FB18     	 add r3,r7,r3
 3118 003c 0022     	 mov r2,#0
 3119 003e 9B5E     	 ldrsh r3,[r3,r2]
 3120 0040 181C     	 mov r0,r3
 3121 0042 FFF7FEFF 	 bl __aeabi_i2f
 3122 0046 031C     	 add r3,r0,#0
 3123 0048 181C     	 add r0,r3,#0
 3124 004a D549     	 ldr r1,.L146+4
 3125 004c FFF7FEFF 	 bl __aeabi_fdiv
 3126 0050 031C     	 add r3,r0,#0
 3127 0052 191C     	 add r1,r3,#0
 3128 0054 D34B     	 ldr r3,.L146+8
 3129 0056 1A68     	 ldr r2,[r3]
 3130 0058 3B6B     	 ldr r3,[r7,#48]
 3131 005a 081C     	 add r0,r1,#0
 3132 005c 111C     	 add r1,r2,#0
 3133 005e 1A1C     	 add r2,r3,#0
 3134 0060 FFF7FEFF 	 bl Exp_moving_average
 3135 0064 021C     	 add r2,r0,#0
 3136 0066 CF4B     	 ldr r3,.L146+8
 3137 0068 1A60     	 str r2,[r3]
 3138 006a 05E0     	 b .L130
 3139              	.L129:
 457:../main.c     **** 	}
 458:../main.c     **** 	else Ultrsonic_data_invaildcounter[0]++;
 3140              	 .loc 6 458 0
 3141 006c CB4B     	 ldr r3,.L146
 3142 006e 1B78     	 ldrb r3,[r3]
 3143 0070 0133     	 add r3,r3,#1
 3144 0072 DAB2     	 uxtb r2,r3
 3145 0074 C94B     	 ldr r3,.L146
 3146 0076 1A70     	 strb r2,[r3]
 3147              	.L130:
 459:../main.c     **** 
 460:../main.c     **** 	if(Ultrasonic_cm_L_clc != 0){
 3148              	 .loc 6 460 0
 3149 0078 0C23     	 mov r3,#12
 3150 007a FB18     	 add r3,r7,r3
 3151 007c 0022     	 mov r2,#0
 3152 007e 9B5E     	 ldrsh r3,[r3,r2]
 3153 0080 002B     	 cmp r3,#0
 3154 0082 29D0     	 beq .L131
 461:../main.c     **** 		obstructed_L = Ultrasoinc_Obstructet_Test(Steering_Angles_clc[0]);
 3155              	 .loc 6 461 0
 3156 0084 7B68     	 ldr r3,[r7,#4]
 3157 0086 1B68     	 ldr r3,[r3]
 3158 0088 181C     	 add r0,r3,#0
 3159 008a FFF7FEFF 	 bl Ultrasoinc_Obstructet_Test
 3160 008e 031C     	 mov r3,r0
 3161 0090 1A1C     	 mov r2,r3
 3162 0092 C54B     	 ldr r3,.L146+12
 3163 0094 1A70     	 strb r2,[r3]
 462:../main.c     **** 		if(obstructed_L == 0) {
 3164              	 .loc 6 462 0
 3165 0096 C44B     	 ldr r3,.L146+12
 3166 0098 1B78     	 ldrb r3,[r3]
 3167 009a 002B     	 cmp r3,#0
 3168 009c 22D1     	 bne .L133
 463:../main.c     **** 			Ultrsonic_data_invaildcounter[1] = 0;
 3169              	 .loc 6 463 0
 3170 009e BF4B     	 ldr r3,.L146
 3171 00a0 0022     	 mov r2,#0
 3172 00a2 5A70     	 strb r2,[r3,#1]
 464:../main.c     **** 			Fil_Ultrasonic_m_L = Exp_moving_average((float)Ultrasonic_cm_L_clc / 100 , Fil_Ultrasonic_m_L, A
 3173              	 .loc 6 464 0
 3174 00a4 0C23     	 mov r3,#12
 3175 00a6 FB18     	 add r3,r7,r3
 3176 00a8 0022     	 mov r2,#0
 3177 00aa 9B5E     	 ldrsh r3,[r3,r2]
 3178 00ac 181C     	 mov r0,r3
 3179 00ae FFF7FEFF 	 bl __aeabi_i2f
 3180 00b2 031C     	 add r3,r0,#0
 3181 00b4 181C     	 add r0,r3,#0
 3182 00b6 BA49     	 ldr r1,.L146+4
 3183 00b8 FFF7FEFF 	 bl __aeabi_fdiv
 3184 00bc 031C     	 add r3,r0,#0
 3185 00be 191C     	 add r1,r3,#0
 3186 00c0 BA4B     	 ldr r3,.L146+16
 3187 00c2 1A68     	 ldr r2,[r3]
 3188 00c4 3B6B     	 ldr r3,[r7,#48]
 3189 00c6 081C     	 add r0,r1,#0
 3190 00c8 111C     	 add r1,r2,#0
 3191 00ca 1A1C     	 add r2,r3,#0
 3192 00cc FFF7FEFF 	 bl Exp_moving_average
 3193 00d0 021C     	 add r2,r0,#0
 3194 00d2 B64B     	 ldr r3,.L146+16
 3195 00d4 1A60     	 str r2,[r3]
 3196 00d6 05E0     	 b .L133
 3197              	.L131:
 465:../main.c     **** 		}
 466:../main.c     **** 	}
 467:../main.c     **** 	else Ultrsonic_data_invaildcounter[1]++;
 3198              	 .loc 6 467 0
 3199 00d8 B04B     	 ldr r3,.L146
 3200 00da 5B78     	 ldrb r3,[r3,#1]
 3201 00dc 0133     	 add r3,r3,#1
 3202 00de DAB2     	 uxtb r2,r3
 3203 00e0 AE4B     	 ldr r3,.L146
 3204 00e2 5A70     	 strb r2,[r3,#1]
 3205              	.L133:
 468:../main.c     **** 
 469:../main.c     **** 	if(Ultrasonic_cm_R_clc != 0){
 3206              	 .loc 6 469 0
 3207 00e4 0A23     	 mov r3,#10
 3208 00e6 FB18     	 add r3,r7,r3
 3209 00e8 0022     	 mov r2,#0
 3210 00ea 9B5E     	 ldrsh r3,[r3,r2]
 3211 00ec 002B     	 cmp r3,#0
 3212 00ee 2DD0     	 beq .L134
 470:../main.c     **** 		obstructed_R = Ultrasoinc_Obstructet_Test( - Steering_Angles_clc[1]); // neagtiv becasue right wh
 3213              	 .loc 6 470 0
 3214 00f0 7B68     	 ldr r3,[r7,#4]
 3215 00f2 0433     	 add r3,r3,#4
 3216 00f4 1B68     	 ldr r3,[r3]
 3217 00f6 8022     	 mov r2,#128
 3218 00f8 1206     	 lsl r2,r2,#24
 3219 00fa 5340     	 eor r3,r2
 3220 00fc 181C     	 add r0,r3,#0
 3221 00fe FFF7FEFF 	 bl Ultrasoinc_Obstructet_Test
 3222 0102 031C     	 mov r3,r0
 3223 0104 1A1C     	 mov r2,r3
 3224 0106 AA4B     	 ldr r3,.L146+20
 3225 0108 1A70     	 strb r2,[r3]
 471:../main.c     **** 		if(obstructed_R == 0){
 3226              	 .loc 6 471 0
 3227 010a A94B     	 ldr r3,.L146+20
 3228 010c 1B78     	 ldrb r3,[r3]
 3229 010e 002B     	 cmp r3,#0
 3230 0110 22D1     	 bne .L136
 472:../main.c     **** 			Ultrsonic_data_invaildcounter[2] = 0;
 3231              	 .loc 6 472 0
 3232 0112 A24B     	 ldr r3,.L146
 3233 0114 0022     	 mov r2,#0
 3234 0116 9A70     	 strb r2,[r3,#2]
 473:../main.c     **** 			Fil_Ultrasonic_m_R = Exp_moving_average((float)Ultrasonic_cm_R_clc / 100 , Fil_Ultrasonic_m_R, A
 3235              	 .loc 6 473 0
 3236 0118 0A23     	 mov r3,#10
 3237 011a FB18     	 add r3,r7,r3
 3238 011c 0022     	 mov r2,#0
 3239 011e 9B5E     	 ldrsh r3,[r3,r2]
 3240 0120 181C     	 mov r0,r3
 3241 0122 FFF7FEFF 	 bl __aeabi_i2f
 3242 0126 031C     	 add r3,r0,#0
 3243 0128 181C     	 add r0,r3,#0
 3244 012a 9D49     	 ldr r1,.L146+4
 3245 012c FFF7FEFF 	 bl __aeabi_fdiv
 3246 0130 031C     	 add r3,r0,#0
 3247 0132 191C     	 add r1,r3,#0
 3248 0134 9F4B     	 ldr r3,.L146+24
 3249 0136 1A68     	 ldr r2,[r3]
 3250 0138 3B6B     	 ldr r3,[r7,#48]
 3251 013a 081C     	 add r0,r1,#0
 3252 013c 111C     	 add r1,r2,#0
 3253 013e 1A1C     	 add r2,r3,#0
 3254 0140 FFF7FEFF 	 bl Exp_moving_average
 3255 0144 021C     	 add r2,r0,#0
 3256 0146 9B4B     	 ldr r3,.L146+24
 3257 0148 1A60     	 str r2,[r3]
 3258 014a 05E0     	 b .L136
 3259              	.L134:
 474:../main.c     **** 		}
 475:../main.c     **** 	}
 476:../main.c     **** 	else Ultrsonic_data_invaildcounter[2]++;
 3260              	 .loc 6 476 0
 3261 014c 934B     	 ldr r3,.L146
 3262 014e 9B78     	 ldrb r3,[r3,#2]
 3263 0150 0133     	 add r3,r3,#1
 3264 0152 DAB2     	 uxtb r2,r3
 3265 0154 914B     	 ldr r3,.L146
 3266 0156 9A70     	 strb r2,[r3,#2]
 3267              	.L136:
 477:../main.c     **** 
 478:../main.c     **** 	uint8_t i;
 479:../main.c     **** 	for(i = 0; i < 3; i++){
 3268              	 .loc 6 479 0
 3269 0158 1723     	 mov r3,#23
 3270 015a FB18     	 add r3,r7,r3
 3271 015c 0022     	 mov r2,#0
 3272 015e 1A70     	 strb r2,[r3]
 3273 0160 13E0     	 b .L137
 3274              	.L139:
 480:../main.c     **** 		if( Ultrsonic_data_invaildcounter[i] > ULRTA_NUM_NO_DATA_INVALID) Ultrsonic_data_invaildcounter[i
 3275              	 .loc 6 480 0
 3276 0162 1723     	 mov r3,#23
 3277 0164 FB18     	 add r3,r7,r3
 3278 0166 1B78     	 ldrb r3,[r3]
 3279 0168 8C4A     	 ldr r2,.L146
 3280 016a D35C     	 ldrb r3,[r2,r3]
 3281 016c 282B     	 cmp r3,#40
 3282 016e 05D9     	 bls .L138
 3283              	 .loc 6 480 0 is_stmt 0 discriminator 1
 3284 0170 1723     	 mov r3,#23
 3285 0172 FB18     	 add r3,r7,r3
 3286 0174 1B78     	 ldrb r3,[r3]
 3287 0176 894A     	 ldr r2,.L146
 3288 0178 2821     	 mov r1,#40
 3289 017a D154     	 strb r1,[r2,r3]
 3290              	.L138:
 479:../main.c     **** 		if( Ultrsonic_data_invaildcounter[i] > ULRTA_NUM_NO_DATA_INVALID) Ultrsonic_data_invaildcounter[i
 3291              	 .loc 6 479 0 is_stmt 1 discriminator 2
 3292 017c 1723     	 mov r3,#23
 3293 017e FB18     	 add r3,r7,r3
 3294 0180 1A78     	 ldrb r2,[r3]
 3295 0182 1723     	 mov r3,#23
 3296 0184 FB18     	 add r3,r7,r3
 3297 0186 0132     	 add r2,r2,#1
 3298 0188 1A70     	 strb r2,[r3]
 3299              	.L137:
 479:../main.c     **** 		if( Ultrsonic_data_invaildcounter[i] > ULRTA_NUM_NO_DATA_INVALID) Ultrsonic_data_invaildcounter[i
 3300              	 .loc 6 479 0 is_stmt 0 discriminator 1
 3301 018a 1723     	 mov r3,#23
 3302 018c FB18     	 add r3,r7,r3
 3303 018e 1B78     	 ldrb r3,[r3]
 3304 0190 022B     	 cmp r3,#2
 3305 0192 E6D9     	 bls .L139
 481:../main.c     **** 	}
 482:../main.c     **** 
 483:../main.c     **** 	// front obstacel
 484:../main.c     **** 	if(Ultrsonic_data_invaildcounter[0] < ULRTA_NUM_NO_DATA_INVALID ){
 3306              	 .loc 6 484 0 is_stmt 1
 3307 0194 814B     	 ldr r3,.L146
 3308 0196 1B78     	 ldrb r3,[r3]
 3309 0198 272B     	 cmp r3,#39
 3310 019a 07D8     	 bhi .L140
 485:../main.c     **** 		Obstacel_F[0] = Fil_Ultrasonic_m_C;
 3311              	 .loc 6 485 0
 3312 019c 814B     	 ldr r3,.L146+8
 3313 019e 1A68     	 ldr r2,[r3]
 3314 01a0 854B     	 ldr r3,.L146+28
 3315 01a2 1A60     	 str r2,[r3]
 486:../main.c     **** 		Obstacel_valid[0] = 1;
 3316              	 .loc 6 486 0
 3317 01a4 854B     	 ldr r3,.L146+32
 3318 01a6 0122     	 mov r2,#1
 3319 01a8 1A70     	 strb r2,[r3]
 3320 01aa 06E0     	 b .L141
 3321              	.L140:
 487:../main.c     **** 	}
 488:../main.c     **** 	else {
 489:../main.c     **** 		Obstacel_valid[0] = 0;
 3322              	 .loc 6 489 0
 3323 01ac 834B     	 ldr r3,.L146+32
 3324 01ae 0022     	 mov r2,#0
 3325 01b0 1A70     	 strb r2,[r3]
 490:../main.c     **** 		Obstacel_F[0]  = 4;
 3326              	 .loc 6 490 0
 3327 01b2 814B     	 ldr r3,.L146+28
 3328 01b4 8122     	 mov r2,#129
 3329 01b6 D205     	 lsl r2,r2,#23
 3330 01b8 1A60     	 str r2,[r3]
 3331              	.L141:
 491:../main.c     **** 	}
 492:../main.c     **** 
 493:../main.c     **** 	if(Ultrsonic_data_invaildcounter[1] < ULRTA_NUM_NO_DATA_INVALID && obstructed_L == 0 ){
 3332              	 .loc 6 493 0
 3333 01ba 784B     	 ldr r3,.L146
 3334 01bc 5B78     	 ldrb r3,[r3,#1]
 3335 01be 272B     	 cmp r3,#39
 3336 01c0 5DD8     	 bhi .L142
 3337              	 .loc 6 493 0 is_stmt 0 discriminator 1
 3338 01c2 794B     	 ldr r3,.L146+12
 3339 01c4 1B78     	 ldrb r3,[r3]
 3340 01c6 002B     	 cmp r3,#0
 3341 01c8 59D1     	 bne .L142
 494:../main.c     **** 		Obstacel_L[0] = Fil_Ultrasonic_m_L * cos(Steering_Angles[0] / RAD_TO_DEG);
 3342              	 .loc 6 494 0 is_stmt 1
 3343 01ca 784B     	 ldr r3,.L146+16
 3344 01cc 1B68     	 ldr r3,[r3]
 3345 01ce 181C     	 add r0,r3,#0
 3346 01d0 FFF7FEFF 	 bl __aeabi_f2d
 3347 01d4 051C     	 mov r5,r0
 3348 01d6 0E1C     	 mov r6,r1
 3349 01d8 794B     	 ldr r3,.L146+36
 3350 01da 1B68     	 ldr r3,[r3]
 3351 01dc 181C     	 add r0,r3,#0
 3352 01de FFF7FEFF 	 bl __aeabi_f2d
 3353 01e2 031C     	 mov r3,r0
 3354 01e4 0C1C     	 mov r4,r1
 3355 01e6 181C     	 mov r0,r3
 3356 01e8 211C     	 mov r1,r4
 3357 01ea 764A     	 ldr r2,.L146+40
 3358 01ec 764B     	 ldr r3,.L146+44
 3359 01ee FFF7FEFF 	 bl __aeabi_ddiv
 3360 01f2 031C     	 mov r3,r0
 3361 01f4 0C1C     	 mov r4,r1
 3362 01f6 181C     	 mov r0,r3
 3363 01f8 211C     	 mov r1,r4
 3364 01fa FFF7FEFF 	 bl cos
 3365 01fe 031C     	 mov r3,r0
 3366 0200 0C1C     	 mov r4,r1
 3367 0202 281C     	 mov r0,r5
 3368 0204 311C     	 mov r1,r6
 3369 0206 1A1C     	 mov r2,r3
 3370 0208 231C     	 mov r3,r4
 3371 020a FFF7FEFF 	 bl __aeabi_dmul
 3372 020e 031C     	 mov r3,r0
 3373 0210 0C1C     	 mov r4,r1
 3374 0212 181C     	 mov r0,r3
 3375 0214 211C     	 mov r1,r4
 3376 0216 FFF7FEFF 	 bl __aeabi_d2f
 3377 021a 021C     	 add r2,r0,#0
 3378 021c 6B4B     	 ldr r3,.L146+48
 3379 021e 1A60     	 str r2,[r3]
 495:../main.c     **** 		Obstacel_L[1] = Fil_Ultrasonic_m_L * sin(Steering_Angles[0] / RAD_TO_DEG);
 3380              	 .loc 6 495 0
 3381 0220 624B     	 ldr r3,.L146+16
 3382 0222 1B68     	 ldr r3,[r3]
 3383 0224 181C     	 add r0,r3,#0
 3384 0226 FFF7FEFF 	 bl __aeabi_f2d
 3385 022a 051C     	 mov r5,r0
 3386 022c 0E1C     	 mov r6,r1
 3387 022e 644B     	 ldr r3,.L146+36
 3388 0230 1B68     	 ldr r3,[r3]
 3389 0232 181C     	 add r0,r3,#0
 3390 0234 FFF7FEFF 	 bl __aeabi_f2d
 3391 0238 031C     	 mov r3,r0
 3392 023a 0C1C     	 mov r4,r1
 3393 023c 181C     	 mov r0,r3
 3394 023e 211C     	 mov r1,r4
 3395 0240 604A     	 ldr r2,.L146+40
 3396 0242 614B     	 ldr r3,.L146+44
 3397 0244 FFF7FEFF 	 bl __aeabi_ddiv
 3398 0248 031C     	 mov r3,r0
 3399 024a 0C1C     	 mov r4,r1
 3400 024c 181C     	 mov r0,r3
 3401 024e 211C     	 mov r1,r4
 3402 0250 FFF7FEFF 	 bl sin
 3403 0254 031C     	 mov r3,r0
 3404 0256 0C1C     	 mov r4,r1
 3405 0258 281C     	 mov r0,r5
 3406 025a 311C     	 mov r1,r6
 3407 025c 1A1C     	 mov r2,r3
 3408 025e 231C     	 mov r3,r4
 3409 0260 FFF7FEFF 	 bl __aeabi_dmul
 3410 0264 031C     	 mov r3,r0
 3411 0266 0C1C     	 mov r4,r1
 3412 0268 181C     	 mov r0,r3
 3413 026a 211C     	 mov r1,r4
 3414 026c FFF7FEFF 	 bl __aeabi_d2f
 3415 0270 021C     	 add r2,r0,#0
 3416 0272 564B     	 ldr r3,.L146+48
 3417 0274 5A60     	 str r2,[r3,#4]
 496:../main.c     **** 		Obstacel_valid[1] = 1;
 3418              	 .loc 6 496 0
 3419 0276 514B     	 ldr r3,.L146+32
 3420 0278 0122     	 mov r2,#1
 3421 027a 5A70     	 strb r2,[r3,#1]
 3422 027c 0AE0     	 b .L143
 3423              	.L142:
 497:../main.c     **** 	}
 498:../main.c     **** 	else {
 499:../main.c     **** 		Obstacel_valid[1] = 0;
 3424              	 .loc 6 499 0
 3425 027e 4F4B     	 ldr r3,.L146+32
 3426 0280 0022     	 mov r2,#0
 3427 0282 5A70     	 strb r2,[r3,#1]
 500:../main.c     **** 		Obstacel_L[0]  = 4;
 3428              	 .loc 6 500 0
 3429 0284 514B     	 ldr r3,.L146+48
 3430 0286 8122     	 mov r2,#129
 3431 0288 D205     	 lsl r2,r2,#23
 3432 028a 1A60     	 str r2,[r3]
 501:../main.c     **** 		Obstacel_L[1]  = 4;
 3433              	 .loc 6 501 0
 3434 028c 4F4B     	 ldr r3,.L146+48
 3435 028e 8122     	 mov r2,#129
 3436 0290 D205     	 lsl r2,r2,#23
 3437 0292 5A60     	 str r2,[r3,#4]
 3438              	.L143:
 502:../main.c     **** 	}
 503:../main.c     **** 
 504:../main.c     **** 	if(Ultrsonic_data_invaildcounter[2]  < ULRTA_NUM_NO_DATA_INVALID && obstructed_R == 0 ){
 3439              	 .loc 6 504 0
 3440 0294 414B     	 ldr r3,.L146
 3441 0296 9B78     	 ldrb r3,[r3,#2]
 3442 0298 272B     	 cmp r3,#39
 3443 029a 5DD8     	 bhi .L144
 3444              	 .loc 6 504 0 is_stmt 0 discriminator 1
 3445 029c 444B     	 ldr r3,.L146+20
 3446 029e 1B78     	 ldrb r3,[r3]
 3447 02a0 002B     	 cmp r3,#0
 3448 02a2 59D1     	 bne .L144
 505:../main.c     **** 		Obstacel_R[0] = Fil_Ultrasonic_m_R * cos(Steering_Angles[1] / RAD_TO_DEG);
 3449              	 .loc 6 505 0 is_stmt 1
 3450 02a4 434B     	 ldr r3,.L146+24
 3451 02a6 1B68     	 ldr r3,[r3]
 3452 02a8 181C     	 add r0,r3,#0
 3453 02aa FFF7FEFF 	 bl __aeabi_f2d
 3454 02ae 051C     	 mov r5,r0
 3455 02b0 0E1C     	 mov r6,r1
 3456 02b2 434B     	 ldr r3,.L146+36
 3457 02b4 5B68     	 ldr r3,[r3,#4]
 3458 02b6 181C     	 add r0,r3,#0
 3459 02b8 FFF7FEFF 	 bl __aeabi_f2d
 3460 02bc 031C     	 mov r3,r0
 3461 02be 0C1C     	 mov r4,r1
 3462 02c0 181C     	 mov r0,r3
 3463 02c2 211C     	 mov r1,r4
 3464 02c4 3F4A     	 ldr r2,.L146+40
 3465 02c6 404B     	 ldr r3,.L146+44
 3466 02c8 FFF7FEFF 	 bl __aeabi_ddiv
 3467 02cc 031C     	 mov r3,r0
 3468 02ce 0C1C     	 mov r4,r1
 3469 02d0 181C     	 mov r0,r3
 3470 02d2 211C     	 mov r1,r4
 3471 02d4 FFF7FEFF 	 bl cos
 3472 02d8 031C     	 mov r3,r0
 3473 02da 0C1C     	 mov r4,r1
 3474 02dc 281C     	 mov r0,r5
 3475 02de 311C     	 mov r1,r6
 3476 02e0 1A1C     	 mov r2,r3
 3477 02e2 231C     	 mov r3,r4
 3478 02e4 FFF7FEFF 	 bl __aeabi_dmul
 3479 02e8 031C     	 mov r3,r0
 3480 02ea 0C1C     	 mov r4,r1
 3481 02ec 181C     	 mov r0,r3
 3482 02ee 211C     	 mov r1,r4
 3483 02f0 FFF7FEFF 	 bl __aeabi_d2f
 3484 02f4 021C     	 add r2,r0,#0
 3485 02f6 364B     	 ldr r3,.L146+52
 3486 02f8 1A60     	 str r2,[r3]
 506:../main.c     **** 		Obstacel_R[1] = Fil_Ultrasonic_m_R * sin(Steering_Angles[1] / RAD_TO_DEG);
 3487              	 .loc 6 506 0
 3488 02fa 2E4B     	 ldr r3,.L146+24
 3489 02fc 1B68     	 ldr r3,[r3]
 3490 02fe 181C     	 add r0,r3,#0
 3491 0300 FFF7FEFF 	 bl __aeabi_f2d
 3492 0304 051C     	 mov r5,r0
 3493 0306 0E1C     	 mov r6,r1
 3494 0308 2D4B     	 ldr r3,.L146+36
 3495 030a 5B68     	 ldr r3,[r3,#4]
 3496 030c 181C     	 add r0,r3,#0
 3497 030e FFF7FEFF 	 bl __aeabi_f2d
 3498 0312 031C     	 mov r3,r0
 3499 0314 0C1C     	 mov r4,r1
 3500 0316 181C     	 mov r0,r3
 3501 0318 211C     	 mov r1,r4
 3502 031a 2A4A     	 ldr r2,.L146+40
 3503 031c 2A4B     	 ldr r3,.L146+44
 3504 031e FFF7FEFF 	 bl __aeabi_ddiv
 3505 0322 031C     	 mov r3,r0
 3506 0324 0C1C     	 mov r4,r1
 3507 0326 181C     	 mov r0,r3
 3508 0328 211C     	 mov r1,r4
 3509 032a FFF7FEFF 	 bl sin
 3510 032e 031C     	 mov r3,r0
 3511 0330 0C1C     	 mov r4,r1
 3512 0332 281C     	 mov r0,r5
 3513 0334 311C     	 mov r1,r6
 3514 0336 1A1C     	 mov r2,r3
 3515 0338 231C     	 mov r3,r4
 3516 033a FFF7FEFF 	 bl __aeabi_dmul
 3517 033e 031C     	 mov r3,r0
 3518 0340 0C1C     	 mov r4,r1
 3519 0342 181C     	 mov r0,r3
 3520 0344 211C     	 mov r1,r4
 3521 0346 FFF7FEFF 	 bl __aeabi_d2f
 3522 034a 021C     	 add r2,r0,#0
 3523 034c 204B     	 ldr r3,.L146+52
 3524 034e 5A60     	 str r2,[r3,#4]
 507:../main.c     **** 		Obstacel_valid[2] = 1;
 3525              	 .loc 6 507 0
 3526 0350 1A4B     	 ldr r3,.L146+32
 3527 0352 0122     	 mov r2,#1
 3528 0354 9A70     	 strb r2,[r3,#2]
 3529 0356 0AE0     	 b .L145
 3530              	.L144:
 508:../main.c     **** 	}
 509:../main.c     **** 	else {
 510:../main.c     **** 		Obstacel_valid[2] = 0;
 3531              	 .loc 6 510 0
 3532 0358 184B     	 ldr r3,.L146+32
 3533 035a 0022     	 mov r2,#0
 3534 035c 9A70     	 strb r2,[r3,#2]
 511:../main.c     **** 		Obstacel_R[0]  = 4;
 3535              	 .loc 6 511 0
 3536 035e 1C4B     	 ldr r3,.L146+52
 3537 0360 8122     	 mov r2,#129
 3538 0362 D205     	 lsl r2,r2,#23
 3539 0364 1A60     	 str r2,[r3]
 512:../main.c     **** 		Obstacel_R[1]  = 4;
 3540              	 .loc 6 512 0
 3541 0366 1A4B     	 ldr r3,.L146+52
 3542 0368 8122     	 mov r2,#129
 3543 036a D205     	 lsl r2,r2,#23
 3544 036c 5A60     	 str r2,[r3,#4]
 3545              	.L145:
 513:../main.c     **** 	}
 514:../main.c     **** 
 515:../main.c     **** 	obstacel_F_x = Obstacel_F[0];
 3546              	 .loc 6 515 0
 3547 036e 124B     	 ldr r3,.L146+28
 3548 0370 1A68     	 ldr r2,[r3]
 3549 0372 184B     	 ldr r3,.L146+56
 3550 0374 1A60     	 str r2,[r3]
 516:../main.c     **** 	obstacel_L_x = Obstacel_L[0];
 3551              	 .loc 6 516 0
 3552 0376 154B     	 ldr r3,.L146+48
 3553 0378 1A68     	 ldr r2,[r3]
 3554 037a 174B     	 ldr r3,.L146+60
 3555 037c 1A60     	 str r2,[r3]
 517:../main.c     **** 	obstacel_L_y = Obstacel_L[1];
 3556              	 .loc 6 517 0
 3557 037e 134B     	 ldr r3,.L146+48
 3558 0380 5A68     	 ldr r2,[r3,#4]
 3559 0382 164B     	 ldr r3,.L146+64
 3560 0384 1A60     	 str r2,[r3]
 518:../main.c     **** 	obstacel_R_x = Obstacel_R[0];
 3561              	 .loc 6 518 0
 3562 0386 124B     	 ldr r3,.L146+52
 3563 0388 1A68     	 ldr r2,[r3]
 3564 038a 154B     	 ldr r3,.L146+68
 3565 038c 1A60     	 str r2,[r3]
 519:../main.c     **** 	obstacel_R_y = Obstacel_R[1];
 3566              	 .loc 6 519 0
 3567 038e 104B     	 ldr r3,.L146+52
 3568 0390 5A68     	 ldr r2,[r3,#4]
 3569 0392 144B     	 ldr r3,.L146+72
 3570 0394 1A60     	 str r2,[r3]
 520:../main.c     **** 
 521:../main.c     **** 
 522:../main.c     **** }
 3571              	 .loc 6 522 0
 3572 0396 BD46     	 mov sp,r7
 3573 0398 07B0     	 add sp,sp,#28
 3574              	 
 3575 039a F0BD     	 pop {r4,r5,r6,r7,pc}
 3576              	.L147:
 3577              	 .align 2
 3578              	.L146:
 3579 039c 00000000 	 .word Ultrsonic_data_invaildcounter
 3580 03a0 0000C842 	 .word 1120403456
 3581 03a4 00000000 	 .word Fil_Ultrasonic_m_C
 3582 03a8 00000000 	 .word obstructed_L
 3583 03ac 00000000 	 .word Fil_Ultrasonic_m_L
 3584 03b0 00000000 	 .word obstructed_R
 3585 03b4 00000000 	 .word Fil_Ultrasonic_m_R
 3586 03b8 00000000 	 .word Obstacel_F
 3587 03bc 00000000 	 .word Obstacel_valid
 3588 03c0 00000000 	 .word Steering_Angles
 3589 03c4 D9CEF753 	 .word 1408749273
 3590 03c8 E3A54C40 	 .word 1078765027
 3591 03cc 00000000 	 .word Obstacel_L
 3592 03d0 00000000 	 .word Obstacel_R
 3593 03d4 00000000 	 .word obstacel_F_x
 3594 03d8 00000000 	 .word obstacel_L_x
 3595 03dc 00000000 	 .word obstacel_L_y
 3596 03e0 00000000 	 .word obstacel_R_x
 3597 03e4 00000000 	 .word obstacel_R_y
 3598              	 .cfi_endproc
 3599              	.LFE227:
 3601              	 .global __aeabi_fsub
 3602              	 .global __aeabi_fcmple
 3603              	 .section .text.Ultrasoinc_Obstructet_Test,"ax",%progbits
 3604              	 .align 2
 3605              	 .global Ultrasoinc_Obstructet_Test
 3606              	 .code 16
 3607              	 .thumb_func
 3609              	Ultrasoinc_Obstructet_Test:
 3610              	.LFB228:
 523:../main.c     **** 
 524:../main.c     **** uint8_t Ultrasoinc_Obstructet_Test(float Angle){
 3611              	 .loc 6 524 0
 3612              	 .cfi_startproc
 3613 0000 90B5     	 push {r4,r7,lr}
 3614              	.LCFI42:
 3615              	 .cfi_def_cfa_offset 12
 3616              	 .cfi_offset 4,-12
 3617              	 .cfi_offset 7,-8
 3618              	 .cfi_offset 14,-4
 3619 0002 85B0     	 sub sp,sp,#20
 3620              	.LCFI43:
 3621              	 .cfi_def_cfa_offset 32
 3622 0004 00AF     	 add r7,sp,#0
 3623              	.LCFI44:
 3624              	 .cfi_def_cfa_register 7
 3625 0006 7860     	 str r0,[r7,#4]
 525:../main.c     **** 	uint8_t i;
 526:../main.c     **** 	for(i = 0; i < 3; i++){ // if rotate around multipel times
 3626              	 .loc 6 526 0
 3627 0008 0F23     	 mov r3,#15
 3628 000a FB18     	 add r3,r7,r3
 3629 000c 0022     	 mov r2,#0
 3630 000e 1A70     	 strb r2,[r3]
 3631 0010 6DE0     	 b .L149
 3632              	.L157:
 527:../main.c     **** 		if(Angle > 0){
 3633              	 .loc 6 527 0
 3634 0012 7868     	 ldr r0,[r7,#4]
 3635 0014 0021     	 mov r1,#0
 3636 0016 FFF7FEFF 	 bl __aeabi_fcmpgt
 3637 001a 031E     	 sub r3,r0,#0
 3638 001c 2DD0     	 beq .L150
 528:../main.c     **** 			if((Angle - (POS_OBSTRUCTED_ANGLE_MIN + (i * 360))) * (Angle - (POS_OBSTRUCTED_ANGLE_MAX + (i * 
 3639              	 .loc 6 528 0
 3640 001e 0F23     	 mov r3,#15
 3641 0020 FB18     	 add r3,r7,r3
 3642 0022 1B78     	 ldrb r3,[r3]
 3643 0024 B422     	 mov r2,#180
 3644 0026 5200     	 lsl r2,r2,#1
 3645 0028 5343     	 mul r3,r2
 3646 002a 3233     	 add r3,r3,#50
 3647 002c 181C     	 mov r0,r3
 3648 002e FFF7FEFF 	 bl __aeabi_i2f
 3649 0032 031C     	 add r3,r0,#0
 3650 0034 7868     	 ldr r0,[r7,#4]
 3651 0036 191C     	 add r1,r3,#0
 3652 0038 FFF7FEFF 	 bl __aeabi_fsub
 3653 003c 031C     	 add r3,r0,#0
 3654 003e 1C1C     	 add r4,r3,#0
 3655 0040 0F23     	 mov r3,#15
 3656 0042 FB18     	 add r3,r7,r3
 3657 0044 1B78     	 ldrb r3,[r3]
 3658 0046 B422     	 mov r2,#180
 3659 0048 5200     	 lsl r2,r2,#1
 3660 004a 5343     	 mul r3,r2
 3661 004c D233     	 add r3,r3,#210
 3662 004e 181C     	 mov r0,r3
 3663 0050 FFF7FEFF 	 bl __aeabi_i2f
 3664 0054 031C     	 add r3,r0,#0
 3665 0056 7868     	 ldr r0,[r7,#4]
 3666 0058 191C     	 add r1,r3,#0
 3667 005a FFF7FEFF 	 bl __aeabi_fsub
 3668 005e 031C     	 add r3,r0,#0
 3669 0060 201C     	 add r0,r4,#0
 3670 0062 191C     	 add r1,r3,#0
 3671 0064 FFF7FEFF 	 bl __aeabi_fmul
 3672 0068 031C     	 add r3,r0,#0
 3673 006a 181C     	 add r0,r3,#0
 3674 006c 0021     	 mov r1,#0
 3675 006e FFF7FEFF 	 bl __aeabi_fcmple
 3676 0072 031E     	 sub r3,r0,#0
 3677 0074 01D0     	 beq .L150
 529:../main.c     **** 				return 1;
 3678              	 .loc 6 529 0
 3679 0076 0123     	 mov r3,#1
 3680 0078 3FE0     	 b .L153
 3681              	.L150:
 530:../main.c     **** 			}
 531:../main.c     **** 		}
 532:../main.c     **** 
 533:../main.c     **** 		if(Angle < 0){
 3682              	 .loc 6 533 0
 3683 007a 7868     	 ldr r0,[r7,#4]
 3684 007c 0021     	 mov r1,#0
 3685 007e FFF7FEFF 	 bl __aeabi_fcmplt
 3686 0082 031E     	 sub r3,r0,#0
 3687 0084 2CD0     	 beq .L154
 534:../main.c     **** 			if((Angle - (NEG_OBSTRUCTED_ANGLE_MIN - (i * 360))) * (Angle - (NEG_OBSTRUCTED_ANGLE_MAX - (i * 
 3688              	 .loc 6 534 0
 3689 0086 0F23     	 mov r3,#15
 3690 0088 FB18     	 add r3,r7,r3
 3691 008a 1B78     	 ldrb r3,[r3]
 3692 008c 1D4A     	 ldr r2,.L162
 3693 008e 5343     	 mul r3,r2
 3694 0090 963B     	 sub r3,r3,#150
 3695 0092 181C     	 mov r0,r3
 3696 0094 FFF7FEFF 	 bl __aeabi_i2f
 3697 0098 031C     	 add r3,r0,#0
 3698 009a 7868     	 ldr r0,[r7,#4]
 3699 009c 191C     	 add r1,r3,#0
 3700 009e FFF7FEFF 	 bl __aeabi_fsub
 3701 00a2 031C     	 add r3,r0,#0
 3702 00a4 1C1C     	 add r4,r3,#0
 3703 00a6 0F23     	 mov r3,#15
 3704 00a8 FB18     	 add r3,r7,r3
 3705 00aa 1B78     	 ldrb r3,[r3]
 3706 00ac 154A     	 ldr r2,.L162
 3707 00ae 5343     	 mul r3,r2
 3708 00b0 373B     	 sub r3,r3,#55
 3709 00b2 FF3B     	 sub r3,r3,#255
 3710 00b4 181C     	 mov r0,r3
 3711 00b6 FFF7FEFF 	 bl __aeabi_i2f
 3712 00ba 031C     	 add r3,r0,#0
 3713 00bc 7868     	 ldr r0,[r7,#4]
 3714 00be 191C     	 add r1,r3,#0
 3715 00c0 FFF7FEFF 	 bl __aeabi_fsub
 3716 00c4 031C     	 add r3,r0,#0
 3717 00c6 201C     	 add r0,r4,#0
 3718 00c8 191C     	 add r1,r3,#0
 3719 00ca FFF7FEFF 	 bl __aeabi_fmul
 3720 00ce 031C     	 add r3,r0,#0
 3721 00d0 181C     	 add r0,r3,#0
 3722 00d2 0021     	 mov r1,#0
 3723 00d4 FFF7FEFF 	 bl __aeabi_fcmple
 3724 00d8 031E     	 sub r3,r0,#0
 3725 00da 01D0     	 beq .L154
 535:../main.c     **** 						return 1;
 3726              	 .loc 6 535 0
 3727 00dc 0123     	 mov r3,#1
 3728 00de 0CE0     	 b .L153
 3729              	.L154:
 526:../main.c     **** 		if(Angle > 0){
 3730              	 .loc 6 526 0 discriminator 2
 3731 00e0 0F23     	 mov r3,#15
 3732 00e2 FB18     	 add r3,r7,r3
 3733 00e4 1A78     	 ldrb r2,[r3]
 3734 00e6 0F23     	 mov r3,#15
 3735 00e8 FB18     	 add r3,r7,r3
 3736 00ea 0132     	 add r2,r2,#1
 3737 00ec 1A70     	 strb r2,[r3]
 3738              	.L149:
 526:../main.c     **** 		if(Angle > 0){
 3739              	 .loc 6 526 0 is_stmt 0 discriminator 1
 3740 00ee 0F23     	 mov r3,#15
 3741 00f0 FB18     	 add r3,r7,r3
 3742 00f2 1B78     	 ldrb r3,[r3]
 3743 00f4 022B     	 cmp r3,#2
 3744 00f6 8CD9     	 bls .L157
 536:../main.c     **** 			}
 537:../main.c     **** 		}
 538:../main.c     **** 	}
 539:../main.c     **** 
 540:../main.c     **** 	return 0;
 3745              	 .loc 6 540 0 is_stmt 1
 3746 00f8 0023     	 mov r3,#0
 3747              	.L153:
 541:../main.c     **** }
 3748              	 .loc 6 541 0
 3749 00fa 181C     	 mov r0,r3
 3750 00fc BD46     	 mov sp,r7
 3751 00fe 05B0     	 add sp,sp,#20
 3752              	 
 3753 0100 90BD     	 pop {r4,r7,pc}
 3754              	.L163:
 3755 0102 C046     	 .align 2
 3756              	.L162:
 3757 0104 98FEFFFF 	 .word -360
 3758              	 .cfi_endproc
 3759              	.LFE228:
 3761              	 .global __aeabi_fadd
 3762              	 .section .text.Exp_moving_average,"ax",%progbits
 3763              	 .align 2
 3764              	 .global Exp_moving_average
 3765              	 .code 16
 3766              	 .thumb_func
 3768              	Exp_moving_average:
 3769              	.LFB229:
 542:../main.c     **** 
 543:../main.c     **** float Exp_moving_average(float new_value, float value, float ALPHA){
 3770              	 .loc 6 543 0
 3771              	 .cfi_startproc
 3772 0000 90B5     	 push {r4,r7,lr}
 3773              	.LCFI45:
 3774              	 .cfi_def_cfa_offset 12
 3775              	 .cfi_offset 4,-12
 3776              	 .cfi_offset 7,-8
 3777              	 .cfi_offset 14,-4
 3778 0002 85B0     	 sub sp,sp,#20
 3779              	.LCFI46:
 3780              	 .cfi_def_cfa_offset 32
 3781 0004 00AF     	 add r7,sp,#0
 3782              	.LCFI47:
 3783              	 .cfi_def_cfa_register 7
 3784 0006 F860     	 str r0,[r7,#12]
 3785 0008 B960     	 str r1,[r7,#8]
 3786 000a 7A60     	 str r2,[r7,#4]
 544:../main.c     **** 	return ((new_value * ALPHA) + ((1 - ALPHA) * value));
 3787              	 .loc 6 544 0
 3788 000c F868     	 ldr r0,[r7,#12]
 3789 000e 7968     	 ldr r1,[r7,#4]
 3790 0010 FFF7FEFF 	 bl __aeabi_fmul
 3791 0014 031C     	 add r3,r0,#0
 3792 0016 1C1C     	 add r4,r3,#0
 3793 0018 FE20     	 mov r0,#254
 3794 001a 8005     	 lsl r0,r0,#22
 3795 001c 7968     	 ldr r1,[r7,#4]
 3796 001e FFF7FEFF 	 bl __aeabi_fsub
 3797 0022 031C     	 add r3,r0,#0
 3798 0024 181C     	 add r0,r3,#0
 3799 0026 B968     	 ldr r1,[r7,#8]
 3800 0028 FFF7FEFF 	 bl __aeabi_fmul
 3801 002c 031C     	 add r3,r0,#0
 3802 002e 201C     	 add r0,r4,#0
 3803 0030 191C     	 add r1,r3,#0
 3804 0032 FFF7FEFF 	 bl __aeabi_fadd
 3805 0036 031C     	 add r3,r0,#0
 545:../main.c     **** }
 3806              	 .loc 6 545 0
 3807 0038 181C     	 add r0,r3,#0
 3808 003a BD46     	 mov sp,r7
 3809 003c 05B0     	 add sp,sp,#20
 3810              	 
 3811 003e 90BD     	 pop {r4,r7,pc}
 3812              	 .cfi_endproc
 3813              	.LFE229:
 3815              	 .section .text.IRQ3_Handler,"ax",%progbits
 3816              	 .align 2
 3817              	 .global IRQ3_Handler
 3818              	 .code 16
 3819              	 .thumb_func
 3821              	IRQ3_Handler:
 3822              	.LFB230:
 546:../main.c     **** 
 547:../main.c     **** void CAN_RX_INVERTER_ISR(void) {
 3823              	 .loc 6 547 0
 3824              	 .cfi_startproc
 3825 0000 80B5     	 push {r7,lr}
 3826              	.LCFI48:
 3827              	 .cfi_def_cfa_offset 8
 3828              	 .cfi_offset 7,-8
 3829              	 .cfi_offset 14,-4
 3830 0002 00AF     	 add r7,sp,#0
 3831              	.LCFI49:
 3832              	 .cfi_def_cfa_register 7
 548:../main.c     **** 	WATCHDOG_Service();
 3833              	 .loc 6 548 0
 3834 0004 FFF7FEFF 	 bl WATCHDOG_Service
 549:../main.c     **** 	DIGITAL_IO_SetOutputLow(&WATCHDOG_LED_BLUE);
 3835              	 .loc 6 549 0
 3836 0008 094B     	 ldr r3,.L168
 3837 000a 181C     	 mov r0,r3
 3838 000c FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 550:../main.c     **** 
 551:../main.c     **** 	CAN_RX_Inverter_count++;
 3839              	 .loc 6 551 0
 3840 0010 084B     	 ldr r3,.L168+4
 3841 0012 1B78     	 ldrb r3,[r3]
 3842 0014 DBB2     	 uxtb r3,r3
 3843 0016 0133     	 add r3,r3,#1
 3844 0018 DAB2     	 uxtb r2,r3
 3845 001a 064B     	 ldr r3,.L168+4
 3846 001c 1A70     	 strb r2,[r3]
 552:../main.c     **** 	if(CAN_RX_Inverter_count == 4) CAN_RX_Inverter_Read_Data(); // read data after all for have revice
 3847              	 .loc 6 552 0
 3848 001e 054B     	 ldr r3,.L168+4
 3849 0020 1B78     	 ldrb r3,[r3]
 3850 0022 DBB2     	 uxtb r3,r3
 3851 0024 042B     	 cmp r3,#4
 3852 0026 01D1     	 bne .L166
 3853              	 .loc 6 552 0 is_stmt 0 discriminator 1
 3854 0028 FFF7FEFF 	 bl CAN_RX_Inverter_Read_Data
 3855              	.L166:
 553:../main.c     **** }
 3856              	 .loc 6 553 0 is_stmt 1
 3857 002c BD46     	 mov sp,r7
 3858              	 
 3859 002e 80BD     	 pop {r7,pc}
 3860              	.L169:
 3861              	 .align 2
 3862              	.L168:
 3863 0030 00000000 	 .word WATCHDOG_LED_BLUE
 3864 0034 00000000 	 .word CAN_RX_Inverter_count
 3865              	 .cfi_endproc
 3866              	.LFE230:
 3868              	 .section .text.CAN_RX_Inverter_Read_Data,"ax",%progbits
 3869              	 .align 2
 3870              	 .global CAN_RX_Inverter_Read_Data
 3871              	 .code 16
 3872              	 .thumb_func
 3874              	CAN_RX_Inverter_Read_Data:
 3875              	.LFB231:
 554:../main.c     **** 
 555:../main.c     **** void CAN_RX_Inverter_Read_Data(){
 3876              	 .loc 6 555 0
 3877              	 .cfi_startproc
 3878 0000 90B5     	 push {r4,r7,lr}
 3879              	.LCFI50:
 3880              	 .cfi_def_cfa_offset 12
 3881              	 .cfi_offset 4,-12
 3882              	 .cfi_offset 7,-8
 3883              	 .cfi_offset 14,-4
 3884 0002 89B0     	 sub sp,sp,#36
 3885              	.LCFI51:
 3886              	 .cfi_def_cfa_offset 48
 3887 0004 00AF     	 add r7,sp,#0
 3888              	.LCFI52:
 3889              	 .cfi_def_cfa_register 7
 556:../main.c     **** 	uint8_t Motor_on_rover;
 557:../main.c     **** 	for(Motor_on_rover = 0; Motor_on_rover < 4; Motor_on_rover ++){
 3890              	 .loc 6 557 0
 3891 0006 1F23     	 mov r3,#31
 3892 0008 FB18     	 add r3,r7,r3
 3893 000a 0022     	 mov r2,#0
 3894 000c 1A70     	 strb r2,[r3]
 3895 000e 03E1     	 b .L171
 3896              	.L181:
 3897              	.LBB2:
 558:../main.c     **** 		XMC_CAN_MO_t* lmsgobjct_ptr_1 = CAN_NODE_0.lmobj_ptr[Motor_on_rover + 2]->mo_ptr;
 3898              	 .loc 6 558 0
 3899 0010 1F23     	 mov r3,#31
 3900 0012 FB18     	 add r3,r7,r3
 3901 0014 1B78     	 ldrb r3,[r3]
 3902 0016 0233     	 add r3,r3,#2
 3903 0018 944A     	 ldr r2,.L182
 3904 001a 0233     	 add r3,r3,#2
 3905 001c 9B00     	 lsl r3,r3,#2
 3906 001e D318     	 add r3,r2,r3
 3907 0020 5B68     	 ldr r3,[r3,#4]
 3908 0022 1B68     	 ldr r3,[r3]
 3909 0024 BB61     	 str r3,[r7,#24]
 559:../main.c     **** 		CAN_NODE_MO_Receive((void*) CAN_NODE_0.lmobj_ptr[Motor_on_rover + 2]);
 3910              	 .loc 6 559 0
 3911 0026 1F23     	 mov r3,#31
 3912 0028 FB18     	 add r3,r7,r3
 3913 002a 1B78     	 ldrb r3,[r3]
 3914 002c 0233     	 add r3,r3,#2
 3915 002e 8F4A     	 ldr r2,.L182
 3916 0030 0233     	 add r3,r3,#2
 3917 0032 9B00     	 lsl r3,r3,#2
 3918 0034 D318     	 add r3,r2,r3
 3919 0036 5B68     	 ldr r3,[r3,#4]
 3920 0038 181C     	 mov r0,r3
 3921 003a FFF7FEFF 	 bl CAN_NODE_MO_Receive
 560:../main.c     **** 
 561:../main.c     **** 		uint8_t data_RX[8];
 562:../main.c     **** 		uint8_t i;
 563:../main.c     **** 		for(i = 0 ; i < 8 ; i ++){
 3922              	 .loc 6 563 0
 3923 003e 1E23     	 mov r3,#30
 3924 0040 FB18     	 add r3,r7,r3
 3925 0042 0022     	 mov r2,#0
 3926 0044 1A70     	 strb r2,[r3]
 3927 0046 12E0     	 b .L172
 3928              	.L173:
 564:../main.c     **** 			 data_RX[i] = lmsgobjct_ptr_1->can_data_byte[i];
 3929              	 .loc 6 564 0 discriminator 3
 3930 0048 1E23     	 mov r3,#30
 3931 004a FB18     	 add r3,r7,r3
 3932 004c 1B78     	 ldrb r3,[r3]
 3933 004e 1E22     	 mov r2,#30
 3934 0050 BA18     	 add r2,r7,r2
 3935 0052 1278     	 ldrb r2,[r2]
 3936 0054 B969     	 ldr r1,[r7,#24]
 3937 0056 8A18     	 add r2,r1,r2
 3938 0058 117C     	 ldrb r1,[r2,#16]
 3939 005a 0C22     	 mov r2,#12
 3940 005c BA18     	 add r2,r7,r2
 3941 005e D154     	 strb r1,[r2,r3]
 563:../main.c     **** 			 data_RX[i] = lmsgobjct_ptr_1->can_data_byte[i];
 3942              	 .loc 6 563 0 discriminator 3
 3943 0060 1E23     	 mov r3,#30
 3944 0062 FB18     	 add r3,r7,r3
 3945 0064 1A78     	 ldrb r2,[r3]
 3946 0066 1E23     	 mov r3,#30
 3947 0068 FB18     	 add r3,r7,r3
 3948 006a 0132     	 add r2,r2,#1
 3949 006c 1A70     	 strb r2,[r3]
 3950              	.L172:
 563:../main.c     **** 			 data_RX[i] = lmsgobjct_ptr_1->can_data_byte[i];
 3951              	 .loc 6 563 0 is_stmt 0 discriminator 1
 3952 006e 1E23     	 mov r3,#30
 3953 0070 FB18     	 add r3,r7,r3
 3954 0072 1B78     	 ldrb r3,[r3]
 3955 0074 072B     	 cmp r3,#7
 3956 0076 E7D9     	 bls .L173
 565:../main.c     **** 		}
 566:../main.c     **** 
 567:../main.c     **** 		uint8_t Motor_on_rover_RX = (data_RX[0 * 2 + 1] << 8) | data_RX[0 * 2];
 3957              	 .loc 6 567 0 is_stmt 1
 3958 0078 0C23     	 mov r3,#12
 3959 007a FB18     	 add r3,r7,r3
 3960 007c 5B78     	 ldrb r3,[r3,#1]
 3961 007e 1B02     	 lsl r3,r3,#8
 3962 0080 DAB2     	 uxtb r2,r3
 3963 0082 0C23     	 mov r3,#12
 3964 0084 FB18     	 add r3,r7,r3
 3965 0086 1B78     	 ldrb r3,[r3]
 3966 0088 DBB2     	 uxtb r3,r3
 3967 008a 1343     	 orr r3,r2
 3968 008c DAB2     	 uxtb r2,r3
 3969 008e 1723     	 mov r3,#23
 3970 0090 FB18     	 add r3,r7,r3
 3971 0092 1A70     	 strb r2,[r3]
 568:../main.c     **** 		if(Motor_on_rover_RX == Motor_on_rover){
 3972              	 .loc 6 568 0
 3973 0094 1723     	 mov r3,#23
 3974 0096 FA18     	 add r2,r7,r3
 3975 0098 1F23     	 mov r3,#31
 3976 009a FB18     	 add r3,r7,r3
 3977 009c 1278     	 ldrb r2,[r2]
 3978 009e 1B78     	 ldrb r3,[r3]
 3979 00a0 9A42     	 cmp r2,r3
 3980 00a2 00D0     	 beq .LCB3143
 3981 00a4 ADE0     	 b .L174
 3982              	.LCB3143:
 3983              	.LBB3:
 569:../main.c     **** 			DIGITAL_IO_SetOutputLow(&LED_CAN_ERROR);
 3984              	 .loc 6 569 0
 3985 00a6 724B     	 ldr r3,.L182+4
 3986 00a8 181C     	 mov r0,r3
 3987 00aa FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 570:../main.c     **** 
 571:../main.c     **** 			uint8_t i;
 572:../main.c     **** 			int16_t values_int16[3] = {0};
 3988              	 .loc 6 572 0
 3989 00ae 3B1D     	 add r3,r7,#4
 3990 00b0 0022     	 mov r2,#0
 3991 00b2 1A60     	 str r2,[r3]
 3992 00b4 0022     	 mov r2,#0
 3993 00b6 9A80     	 strh r2,[r3,#4]
 573:../main.c     **** 			for(i = 1 ; i < 4 ; i ++){
 3994              	 .loc 6 573 0
 3995 00b8 1D23     	 mov r3,#29
 3996 00ba FB18     	 add r3,r7,r3
 3997 00bc 0122     	 mov r2,#1
 3998 00be 1A70     	 strb r2,[r3]
 3999 00c0 6BE0     	 b .L175
 4000              	.L179:
 574:../main.c     **** 				 if(i == 1) values_int16[i - 1] = (data_RX[i * 2 + 1] << 8) | data_RX[i * 2];
 4001              	 .loc 6 574 0
 4002 00c2 1D23     	 mov r3,#29
 4003 00c4 FB18     	 add r3,r7,r3
 4004 00c6 1B78     	 ldrb r3,[r3]
 4005 00c8 012B     	 cmp r3,#1
 4006 00ca 1CD1     	 bne .L176
 4007              	 .loc 6 574 0 is_stmt 0 discriminator 1
 4008 00cc 1D23     	 mov r3,#29
 4009 00ce FB18     	 add r3,r7,r3
 4010 00d0 1B78     	 ldrb r3,[r3]
 4011 00d2 5A1E     	 sub r2,r3,#1
 4012 00d4 1D23     	 mov r3,#29
 4013 00d6 FB18     	 add r3,r7,r3
 4014 00d8 1B78     	 ldrb r3,[r3]
 4015 00da 5B00     	 lsl r3,r3,#1
 4016 00dc 0133     	 add r3,r3,#1
 4017 00de 0C21     	 mov r1,#12
 4018 00e0 7918     	 add r1,r7,r1
 4019 00e2 CB5C     	 ldrb r3,[r1,r3]
 4020 00e4 1B02     	 lsl r3,r3,#8
 4021 00e6 98B2     	 uxth r0,r3
 4022 00e8 1D23     	 mov r3,#29
 4023 00ea FB18     	 add r3,r7,r3
 4024 00ec 1B78     	 ldrb r3,[r3]
 4025 00ee 5B00     	 lsl r3,r3,#1
 4026 00f0 0C21     	 mov r1,#12
 4027 00f2 7918     	 add r1,r7,r1
 4028 00f4 CB5C     	 ldrb r3,[r1,r3]
 4029 00f6 9BB2     	 uxth r3,r3
 4030 00f8 011C     	 add r1,r0,#0
 4031 00fa 0B43     	 orr r3,r1
 4032 00fc 99B2     	 uxth r1,r3
 4033 00fe 3B1D     	 add r3,r7,#4
 4034 0100 5200     	 lsl r2,r2,#1
 4035 0102 D152     	 strh r1,[r2,r3]
 4036 0104 42E0     	 b .L177
 4037              	.L176:
 575:../main.c     **** 				 else if(i == 2) values_int16[i - 1] = (data_RX[i * 2 + 1] << 8) | data_RX[i * 2];
 4038              	 .loc 6 575 0 is_stmt 1
 4039 0106 1D23     	 mov r3,#29
 4040 0108 FB18     	 add r3,r7,r3
 4041 010a 1B78     	 ldrb r3,[r3]
 4042 010c 022B     	 cmp r3,#2
 4043 010e 1CD1     	 bne .L178
 4044              	 .loc 6 575 0 is_stmt 0 discriminator 1
 4045 0110 1D23     	 mov r3,#29
 4046 0112 FB18     	 add r3,r7,r3
 4047 0114 1B78     	 ldrb r3,[r3]
 4048 0116 5A1E     	 sub r2,r3,#1
 4049 0118 1D23     	 mov r3,#29
 4050 011a FB18     	 add r3,r7,r3
 4051 011c 1B78     	 ldrb r3,[r3]
 4052 011e 5B00     	 lsl r3,r3,#1
 4053 0120 0133     	 add r3,r3,#1
 4054 0122 0C21     	 mov r1,#12
 4055 0124 7918     	 add r1,r7,r1
 4056 0126 CB5C     	 ldrb r3,[r1,r3]
 4057 0128 1B02     	 lsl r3,r3,#8
 4058 012a 98B2     	 uxth r0,r3
 4059 012c 1D23     	 mov r3,#29
 4060 012e FB18     	 add r3,r7,r3
 4061 0130 1B78     	 ldrb r3,[r3]
 4062 0132 5B00     	 lsl r3,r3,#1
 4063 0134 0C21     	 mov r1,#12
 4064 0136 7918     	 add r1,r7,r1
 4065 0138 CB5C     	 ldrb r3,[r1,r3]
 4066 013a 9BB2     	 uxth r3,r3
 4067 013c 011C     	 add r1,r0,#0
 4068 013e 0B43     	 orr r3,r1
 4069 0140 99B2     	 uxth r1,r3
 4070 0142 3B1D     	 add r3,r7,#4
 4071 0144 5200     	 lsl r2,r2,#1
 4072 0146 D152     	 strh r1,[r2,r3]
 4073 0148 20E0     	 b .L177
 4074              	.L178:
 576:../main.c     **** 				 else if(i == 3) values_int16[i - 1] = (data_RX[i * 2 + 1] << 8) | data_RX[i * 2];
 4075              	 .loc 6 576 0 is_stmt 1
 4076 014a 1D23     	 mov r3,#29
 4077 014c FB18     	 add r3,r7,r3
 4078 014e 1B78     	 ldrb r3,[r3]
 4079 0150 032B     	 cmp r3,#3
 4080 0152 1BD1     	 bne .L177
 4081              	 .loc 6 576 0 is_stmt 0 discriminator 1
 4082 0154 1D23     	 mov r3,#29
 4083 0156 FB18     	 add r3,r7,r3
 4084 0158 1B78     	 ldrb r3,[r3]
 4085 015a 5A1E     	 sub r2,r3,#1
 4086 015c 1D23     	 mov r3,#29
 4087 015e FB18     	 add r3,r7,r3
 4088 0160 1B78     	 ldrb r3,[r3]
 4089 0162 5B00     	 lsl r3,r3,#1
 4090 0164 0133     	 add r3,r3,#1
 4091 0166 0C21     	 mov r1,#12
 4092 0168 7918     	 add r1,r7,r1
 4093 016a CB5C     	 ldrb r3,[r1,r3]
 4094 016c 1B02     	 lsl r3,r3,#8
 4095 016e 98B2     	 uxth r0,r3
 4096 0170 1D23     	 mov r3,#29
 4097 0172 FB18     	 add r3,r7,r3
 4098 0174 1B78     	 ldrb r3,[r3]
 4099 0176 5B00     	 lsl r3,r3,#1
 4100 0178 0C21     	 mov r1,#12
 4101 017a 7918     	 add r1,r7,r1
 4102 017c CB5C     	 ldrb r3,[r1,r3]
 4103 017e 9BB2     	 uxth r3,r3
 4104 0180 011C     	 add r1,r0,#0
 4105 0182 0B43     	 orr r3,r1
 4106 0184 99B2     	 uxth r1,r3
 4107 0186 3B1D     	 add r3,r7,#4
 4108 0188 5200     	 lsl r2,r2,#1
 4109 018a D152     	 strh r1,[r2,r3]
 4110              	.L177:
 573:../main.c     **** 				 if(i == 1) values_int16[i - 1] = (data_RX[i * 2 + 1] << 8) | data_RX[i * 2];
 4111              	 .loc 6 573 0 is_stmt 1 discriminator 2
 4112 018c 1D23     	 mov r3,#29
 4113 018e FB18     	 add r3,r7,r3
 4114 0190 1A78     	 ldrb r2,[r3]
 4115 0192 1D23     	 mov r3,#29
 4116 0194 FB18     	 add r3,r7,r3
 4117 0196 0132     	 add r2,r2,#1
 4118 0198 1A70     	 strb r2,[r3]
 4119              	.L175:
 573:../main.c     **** 				 if(i == 1) values_int16[i - 1] = (data_RX[i * 2 + 1] << 8) | data_RX[i * 2];
 4120              	 .loc 6 573 0 is_stmt 0 discriminator 1
 4121 019a 1D23     	 mov r3,#29
 4122 019c FB18     	 add r3,r7,r3
 4123 019e 1B78     	 ldrb r3,[r3]
 4124 01a0 032B     	 cmp r3,#3
 4125 01a2 8ED9     	 bls .L179
 577:../main.c     **** 			 }
 578:../main.c     **** 
 579:../main.c     **** 			Inveter_CAN_OK[Motor_on_rover] = values_int16[0];
 4126              	 .loc 6 579 0 is_stmt 1
 4127 01a4 1F23     	 mov r3,#31
 4128 01a6 FB18     	 add r3,r7,r3
 4129 01a8 1B78     	 ldrb r3,[r3]
 4130 01aa 3A1D     	 add r2,r7,#4
 4131 01ac 1288     	 ldrh r2,[r2]
 4132 01ae D1B2     	 uxtb r1,r2
 4133 01b0 304A     	 ldr r2,.L182+8
 4134 01b2 D154     	 strb r1,[r2,r3]
 580:../main.c     **** 			Actual_Speeds[Motor_on_rover] = (float)values_int16[1] / 1000;
 4135              	 .loc 6 580 0
 4136 01b4 1F23     	 mov r3,#31
 4137 01b6 FB18     	 add r3,r7,r3
 4138 01b8 1C78     	 ldrb r4,[r3]
 4139 01ba 3B1D     	 add r3,r7,#4
 4140 01bc 5B88     	 ldrh r3,[r3,#2]
 4141 01be 1BB2     	 sxth r3,r3
 4142 01c0 181C     	 mov r0,r3
 4143 01c2 FFF7FEFF 	 bl __aeabi_i2f
 4144 01c6 031C     	 add r3,r0,#0
 4145 01c8 181C     	 add r0,r3,#0
 4146 01ca 2B49     	 ldr r1,.L182+12
 4147 01cc FFF7FEFF 	 bl __aeabi_fdiv
 4148 01d0 031C     	 add r3,r0,#0
 4149 01d2 191C     	 add r1,r3,#0
 4150 01d4 294B     	 ldr r3,.L182+16
 4151 01d6 A200     	 lsl r2,r4,#2
 4152 01d8 D150     	 str r1,[r2,r3]
 581:../main.c     **** 			Actual_Distance[Motor_on_rover] = (float)values_int16[2] / 1000;
 4153              	 .loc 6 581 0
 4154 01da 1F23     	 mov r3,#31
 4155 01dc FB18     	 add r3,r7,r3
 4156 01de 1C78     	 ldrb r4,[r3]
 4157 01e0 3B1D     	 add r3,r7,#4
 4158 01e2 9B88     	 ldrh r3,[r3,#4]
 4159 01e4 1BB2     	 sxth r3,r3
 4160 01e6 181C     	 mov r0,r3
 4161 01e8 FFF7FEFF 	 bl __aeabi_i2f
 4162 01ec 031C     	 add r3,r0,#0
 4163 01ee 181C     	 add r0,r3,#0
 4164 01f0 2149     	 ldr r1,.L182+12
 4165 01f2 FFF7FEFF 	 bl __aeabi_fdiv
 4166 01f6 031C     	 add r3,r0,#0
 4167 01f8 191C     	 add r1,r3,#0
 4168 01fa 214B     	 ldr r3,.L182+20
 4169 01fc A200     	 lsl r2,r4,#2
 4170 01fe D150     	 str r1,[r2,r3]
 4171              	.LBE3:
 4172 0200 03E0     	 b .L180
 4173              	.L174:
 582:../main.c     **** 
 583:../main.c     **** 
 584:../main.c     **** 			}
 585:../main.c     **** 		else DIGITAL_IO_SetOutputHigh(&LED_CAN_ERROR);
 4174              	 .loc 6 585 0
 4175 0202 1B4B     	 ldr r3,.L182+4
 4176 0204 181C     	 mov r0,r3
 4177 0206 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 4178              	.L180:
 4179              	.LBE2:
 557:../main.c     **** 		XMC_CAN_MO_t* lmsgobjct_ptr_1 = CAN_NODE_0.lmobj_ptr[Motor_on_rover + 2]->mo_ptr;
 4180              	 .loc 6 557 0 discriminator 1
 4181 020a 1F23     	 mov r3,#31
 4182 020c FB18     	 add r3,r7,r3
 4183 020e 1A78     	 ldrb r2,[r3]
 4184 0210 1F23     	 mov r3,#31
 4185 0212 FB18     	 add r3,r7,r3
 4186 0214 0132     	 add r2,r2,#1
 4187 0216 1A70     	 strb r2,[r3]
 4188              	.L171:
 557:../main.c     **** 		XMC_CAN_MO_t* lmsgobjct_ptr_1 = CAN_NODE_0.lmobj_ptr[Motor_on_rover + 2]->mo_ptr;
 4189              	 .loc 6 557 0 is_stmt 0 discriminator 2
 4190 0218 1F23     	 mov r3,#31
 4191 021a FB18     	 add r3,r7,r3
 4192 021c 1B78     	 ldrb r3,[r3]
 4193 021e 032B     	 cmp r3,#3
 4194 0220 00D8     	 bhi .LCB3350
 4195 0222 F5E6     	 b .L181
 4196              	.LCB3350:
 586:../main.c     **** 	}
 587:../main.c     **** 
 588:../main.c     **** 	speed_fl_act = Actual_Speeds[0];
 4197              	 .loc 6 588 0 is_stmt 1
 4198 0224 154B     	 ldr r3,.L182+16
 4199 0226 1A68     	 ldr r2,[r3]
 4200 0228 164B     	 ldr r3,.L182+24
 4201 022a 1A60     	 str r2,[r3]
 589:../main.c     **** 	speed_fr_act = Actual_Speeds[1];
 4202              	 .loc 6 589 0
 4203 022c 134B     	 ldr r3,.L182+16
 4204 022e 5A68     	 ldr r2,[r3,#4]
 4205 0230 154B     	 ldr r3,.L182+28
 4206 0232 1A60     	 str r2,[r3]
 590:../main.c     **** 	speed_rl_act = Actual_Speeds[2];
 4207              	 .loc 6 590 0
 4208 0234 114B     	 ldr r3,.L182+16
 4209 0236 9A68     	 ldr r2,[r3,#8]
 4210 0238 144B     	 ldr r3,.L182+32
 4211 023a 1A60     	 str r2,[r3]
 591:../main.c     **** 	speed_rr_act = Actual_Speeds[3];
 4212              	 .loc 6 591 0
 4213 023c 0F4B     	 ldr r3,.L182+16
 4214 023e DA68     	 ldr r2,[r3,#12]
 4215 0240 134B     	 ldr r3,.L182+36
 4216 0242 1A60     	 str r2,[r3]
 592:../main.c     **** 
 593:../main.c     **** 	distance_fl_act = Actual_Distance[0];
 4217              	 .loc 6 593 0
 4218 0244 0E4B     	 ldr r3,.L182+20
 4219 0246 1A68     	 ldr r2,[r3]
 4220 0248 124B     	 ldr r3,.L182+40
 4221 024a 1A60     	 str r2,[r3]
 594:../main.c     **** 	distance_fr_act = Actual_Distance[1];
 4222              	 .loc 6 594 0
 4223 024c 0C4B     	 ldr r3,.L182+20
 4224 024e 5A68     	 ldr r2,[r3,#4]
 4225 0250 114B     	 ldr r3,.L182+44
 4226 0252 1A60     	 str r2,[r3]
 595:../main.c     **** 	distance_rl_act = Actual_Distance[2];
 4227              	 .loc 6 595 0
 4228 0254 0A4B     	 ldr r3,.L182+20
 4229 0256 9A68     	 ldr r2,[r3,#8]
 4230 0258 104B     	 ldr r3,.L182+48
 4231 025a 1A60     	 str r2,[r3]
 596:../main.c     **** 	distance_rr_act = Actual_Distance[3];
 4232              	 .loc 6 596 0
 4233 025c 084B     	 ldr r3,.L182+20
 4234 025e DA68     	 ldr r2,[r3,#12]
 4235 0260 0F4B     	 ldr r3,.L182+52
 4236 0262 1A60     	 str r2,[r3]
 597:../main.c     **** 
 598:../main.c     **** }
 4237              	 .loc 6 598 0
 4238 0264 BD46     	 mov sp,r7
 4239 0266 09B0     	 add sp,sp,#36
 4240              	 
 4241 0268 90BD     	 pop {r4,r7,pc}
 4242              	.L183:
 4243 026a C046     	 .align 2
 4244              	.L182:
 4245 026c 00000000 	 .word CAN_NODE_0
 4246 0270 00000000 	 .word LED_CAN_ERROR
 4247 0274 00000000 	 .word Inveter_CAN_OK
 4248 0278 00007A44 	 .word 1148846080
 4249 027c 00000000 	 .word Actual_Speeds
 4250 0280 00000000 	 .word Actual_Distance
 4251 0284 00000000 	 .word speed_fl_act
 4252 0288 00000000 	 .word speed_fr_act
 4253 028c 00000000 	 .word speed_rl_act
 4254 0290 00000000 	 .word speed_rr_act
 4255 0294 00000000 	 .word distance_fl_act
 4256 0298 00000000 	 .word distance_fr_act
 4257 029c 00000000 	 .word distance_rl_act
 4258 02a0 00000000 	 .word distance_rr_act
 4259              	 .cfi_endproc
 4260              	.LFE231:
 4262              	 .section .text.Watchdog_Handler,"ax",%progbits
 4263              	 .align 2
 4264              	 .global Watchdog_Handler
 4265              	 .code 16
 4266              	 .thumb_func
 4268              	Watchdog_Handler:
 4269              	.LFB232:
 599:../main.c     **** 
 600:../main.c     **** void Watchdog_Handler(void) // to do restates if can is not working a problem wenn power from the b
 601:../main.c     **** {
 4270              	 .loc 6 601 0
 4271              	 .cfi_startproc
 4272 0000 80B5     	 push {r7,lr}
 4273              	.LCFI53:
 4274              	 .cfi_def_cfa_offset 8
 4275              	 .cfi_offset 7,-8
 4276              	 .cfi_offset 14,-4
 4277 0002 00AF     	 add r7,sp,#0
 4278              	.LCFI54:
 4279              	 .cfi_def_cfa_register 7
 602:../main.c     ****   WATCHDOG_ClearAlarm(); /* Clear the alarm event */
 4280              	 .loc 6 602 0
 4281 0004 FFF7FEFF 	 bl WATCHDOG_ClearAlarm
 603:../main.c     ****   DIGITAL_IO_SetOutputHigh(&WATCHDOG_LED_BLUE);
 4282              	 .loc 6 603 0
 4283 0008 024B     	 ldr r3,.L185
 4284 000a 181C     	 mov r0,r3
 4285 000c FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 604:../main.c     **** }
 4286              	 .loc 6 604 0
 4287 0010 BD46     	 mov sp,r7
 4288              	 
 4289 0012 80BD     	 pop {r7,pc}
 4290              	.L186:
 4291              	 .align 2
 4292              	.L185:
 4293 0014 00000000 	 .word WATCHDOG_LED_BLUE
 4294              	 .cfi_endproc
 4295              	.LFE232:
 4297              	 .section .text.CAN_reset_distance,"ax",%progbits
 4298              	 .align 2
 4299              	 .global CAN_reset_distance
 4300              	 .code 16
 4301              	 .thumb_func
 4303              	CAN_reset_distance:
 4304              	.LFB233:
 605:../main.c     **** 
 606:../main.c     **** void CAN_reset_distance(uint8_t distance_to_reset[4]){
 4305              	 .loc 6 606 0
 4306              	 .cfi_startproc
 4307 0000 80B5     	 push {r7,lr}
 4308              	.LCFI55:
 4309              	 .cfi_def_cfa_offset 8
 4310              	 .cfi_offset 7,-8
 4311              	 .cfi_offset 14,-4
 4312 0002 86B0     	 sub sp,sp,#24
 4313              	.LCFI56:
 4314              	 .cfi_def_cfa_offset 32
 4315 0004 00AF     	 add r7,sp,#0
 4316              	.LCFI57:
 4317              	 .cfi_def_cfa_register 7
 4318 0006 7860     	 str r0,[r7,#4]
 607:../main.c     **** 	uint8_t TX[8] ={0};
 4319              	 .loc 6 607 0
 4320 0008 0C23     	 mov r3,#12
 4321 000a FB18     	 add r3,r7,r3
 4322 000c 0022     	 mov r2,#0
 4323 000e 1A60     	 str r2,[r3]
 4324 0010 0022     	 mov r2,#0
 4325 0012 5A60     	 str r2,[r3,#4]
 608:../main.c     **** 	uint8_t i;
 609:../main.c     **** 	for(i = 0; i < 4; i++){	TX[i] = distance_to_reset[i];}
 4326              	 .loc 6 609 0
 4327 0014 1723     	 mov r3,#23
 4328 0016 FB18     	 add r3,r7,r3
 4329 0018 0022     	 mov r2,#0
 4330 001a 1A70     	 strb r2,[r3]
 4331 001c 12E0     	 b .L188
 4332              	.L189:
 4333              	 .loc 6 609 0 is_stmt 0 discriminator 3
 4334 001e 1723     	 mov r3,#23
 4335 0020 FB18     	 add r3,r7,r3
 4336 0022 1B78     	 ldrb r3,[r3]
 4337 0024 1722     	 mov r2,#23
 4338 0026 BA18     	 add r2,r7,r2
 4339 0028 1278     	 ldrb r2,[r2]
 4340 002a 7968     	 ldr r1,[r7,#4]
 4341 002c 8A18     	 add r2,r1,r2
 4342 002e 1178     	 ldrb r1,[r2]
 4343 0030 0C22     	 mov r2,#12
 4344 0032 BA18     	 add r2,r7,r2
 4345 0034 D154     	 strb r1,[r2,r3]
 4346 0036 1723     	 mov r3,#23
 4347 0038 FB18     	 add r3,r7,r3
 4348 003a 1A78     	 ldrb r2,[r3]
 4349 003c 1723     	 mov r3,#23
 4350 003e FB18     	 add r3,r7,r3
 4351 0040 0132     	 add r2,r2,#1
 4352 0042 1A70     	 strb r2,[r3]
 4353              	.L188:
 4354              	 .loc 6 609 0 discriminator 1
 4355 0044 1723     	 mov r3,#23
 4356 0046 FB18     	 add r3,r7,r3
 4357 0048 1B78     	 ldrb r3,[r3]
 4358 004a 032B     	 cmp r3,#3
 4359 004c E7D9     	 bls .L189
 610:../main.c     **** 
 611:../main.c     **** 	CAN_NODE_MO_UpdateData((void*) CAN_NODE_0.lmobj_ptr[1], (uint8_t*)TX);
 4360              	 .loc 6 611 0 is_stmt 1
 4361 004e 084B     	 ldr r3,.L190
 4362 0050 1A69     	 ldr r2,[r3,#16]
 4363 0052 0C23     	 mov r3,#12
 4364 0054 FB18     	 add r3,r7,r3
 4365 0056 101C     	 mov r0,r2
 4366 0058 191C     	 mov r1,r3
 4367 005a FFF7FEFF 	 bl CAN_NODE_MO_UpdateData
 612:../main.c     **** 	CAN_NODE_MO_Transmit((void*) CAN_NODE_0.lmobj_ptr[1]); //Transmit the data of message object1
 4368              	 .loc 6 612 0
 4369 005e 044B     	 ldr r3,.L190
 4370 0060 1B69     	 ldr r3,[r3,#16]
 4371 0062 181C     	 mov r0,r3
 4372 0064 FFF7FEFF 	 bl CAN_NODE_MO_Transmit
 613:../main.c     **** }
 4373              	 .loc 6 613 0
 4374 0068 BD46     	 mov sp,r7
 4375 006a 06B0     	 add sp,sp,#24
 4376              	 
 4377 006c 80BD     	 pop {r7,pc}
 4378              	.L191:
 4379 006e C046     	 .align 2
 4380              	.L190:
 4381 0070 00000000 	 .word CAN_NODE_0
 4382              	 .cfi_endproc
 4383              	.LFE233:
 4385              	 .global __aeabi_f2iz
 4386              	 .section .text.CAN_send_Speeds,"ax",%progbits
 4387              	 .align 2
 4388              	 .global CAN_send_Speeds
 4389              	 .code 16
 4390              	 .thumb_func
 4392              	CAN_send_Speeds:
 4393              	.LFB234:
 614:../main.c     **** 
 615:../main.c     **** void CAN_send_Speeds(float Speed_data[4]){
 4394              	 .loc 6 615 0
 4395              	 .cfi_startproc
 4396 0000 80B5     	 push {r7,lr}
 4397              	.LCFI58:
 4398              	 .cfi_def_cfa_offset 8
 4399              	 .cfi_offset 7,-8
 4400              	 .cfi_offset 14,-4
 4401 0002 84B0     	 sub sp,sp,#16
 4402              	.LCFI59:
 4403              	 .cfi_def_cfa_offset 24
 4404 0004 00AF     	 add r7,sp,#0
 4405              	.LCFI60:
 4406              	 .cfi_def_cfa_register 7
 4407 0006 7860     	 str r0,[r7,#4]
 616:../main.c     **** 
 617:../main.c     **** 	int16_t Speeds_int16[4] ={Speed_data[0] *1000, Speed_data[1] *1000, Speed_data[2] *1000, Speed_dat
 4408              	 .loc 6 617 0
 4409 0008 7B68     	 ldr r3,[r7,#4]
 4410 000a 1B68     	 ldr r3,[r3]
 4411 000c 181C     	 add r0,r3,#0
 4412 000e 2649     	 ldr r1,.L193
 4413 0010 FFF7FEFF 	 bl __aeabi_fmul
 4414 0014 031C     	 add r3,r0,#0
 4415 0016 181C     	 add r0,r3,#0
 4416 0018 FFF7FEFF 	 bl __aeabi_f2iz
 4417 001c 031C     	 mov r3,r0
 4418 001e 9AB2     	 uxth r2,r3
 4419 0020 0823     	 mov r3,#8
 4420 0022 FB18     	 add r3,r7,r3
 4421 0024 1A80     	 strh r2,[r3]
 4422 0026 7B68     	 ldr r3,[r7,#4]
 4423 0028 0433     	 add r3,r3,#4
 4424 002a 1B68     	 ldr r3,[r3]
 4425 002c 181C     	 add r0,r3,#0
 4426 002e 1E49     	 ldr r1,.L193
 4427 0030 FFF7FEFF 	 bl __aeabi_fmul
 4428 0034 031C     	 add r3,r0,#0
 4429 0036 181C     	 add r0,r3,#0
 4430 0038 FFF7FEFF 	 bl __aeabi_f2iz
 4431 003c 031C     	 mov r3,r0
 4432 003e 9AB2     	 uxth r2,r3
 4433 0040 0823     	 mov r3,#8
 4434 0042 FB18     	 add r3,r7,r3
 4435 0044 5A80     	 strh r2,[r3,#2]
 4436 0046 7B68     	 ldr r3,[r7,#4]
 4437 0048 0833     	 add r3,r3,#8
 4438 004a 1B68     	 ldr r3,[r3]
 4439 004c 181C     	 add r0,r3,#0
 4440 004e 1649     	 ldr r1,.L193
 4441 0050 FFF7FEFF 	 bl __aeabi_fmul
 4442 0054 031C     	 add r3,r0,#0
 4443 0056 181C     	 add r0,r3,#0
 4444 0058 FFF7FEFF 	 bl __aeabi_f2iz
 4445 005c 031C     	 mov r3,r0
 4446 005e 9AB2     	 uxth r2,r3
 4447 0060 0823     	 mov r3,#8
 4448 0062 FB18     	 add r3,r7,r3
 4449 0064 9A80     	 strh r2,[r3,#4]
 4450 0066 7B68     	 ldr r3,[r7,#4]
 4451 0068 0C33     	 add r3,r3,#12
 4452 006a 1B68     	 ldr r3,[r3]
 4453 006c 181C     	 add r0,r3,#0
 4454 006e 0E49     	 ldr r1,.L193
 4455 0070 FFF7FEFF 	 bl __aeabi_fmul
 4456 0074 031C     	 add r3,r0,#0
 4457 0076 181C     	 add r0,r3,#0
 4458 0078 FFF7FEFF 	 bl __aeabi_f2iz
 4459 007c 031C     	 mov r3,r0
 4460 007e 9AB2     	 uxth r2,r3
 4461 0080 0823     	 mov r3,#8
 4462 0082 FB18     	 add r3,r7,r3
 4463 0084 DA80     	 strh r2,[r3,#6]
 618:../main.c     **** 
 619:../main.c     **** 	CAN_NODE_MO_UpdateData((void*) CAN_NODE_0.lmobj_ptr[0], (uint8_t*)Speeds_int16);
 4464              	 .loc 6 619 0
 4465 0086 094B     	 ldr r3,.L193+4
 4466 0088 DA68     	 ldr r2,[r3,#12]
 4467 008a 0823     	 mov r3,#8
 4468 008c FB18     	 add r3,r7,r3
 4469 008e 101C     	 mov r0,r2
 4470 0090 191C     	 mov r1,r3
 4471 0092 FFF7FEFF 	 bl CAN_NODE_MO_UpdateData
 620:../main.c     **** 	CAN_NODE_MO_Transmit((void*) CAN_NODE_0.lmobj_ptr[0]); //Transmit the data of message object1
 4472              	 .loc 6 620 0
 4473 0096 054B     	 ldr r3,.L193+4
 4474 0098 DB68     	 ldr r3,[r3,#12]
 4475 009a 181C     	 mov r0,r3
 4476 009c FFF7FEFF 	 bl CAN_NODE_MO_Transmit
 621:../main.c     **** 
 622:../main.c     **** }
 4477              	 .loc 6 622 0
 4478 00a0 BD46     	 mov sp,r7
 4479 00a2 04B0     	 add sp,sp,#16
 4480              	 
 4481 00a4 80BD     	 pop {r7,pc}
 4482              	.L194:
 4483 00a6 C046     	 .align 2
 4484              	.L193:
 4485 00a8 00007A44 	 .word 1148846080
 4486 00ac 00000000 	 .word CAN_NODE_0
 4487              	 .cfi_endproc
 4488              	.LFE234:
 4490              	 .section .text.IRQ8_Handler,"ax",%progbits
 4491              	 .align 2
 4492              	 .global IRQ8_Handler
 4493              	 .code 16
 4494              	 .thumb_func
 4496              	IRQ8_Handler:
 4497              	.LFB235:
 623:../main.c     **** 
 624:../main.c     **** void INTERRUPT_TIMER_10us_ISR(void){ // every 1ms so 10kHz
 4498              	 .loc 6 624 0
 4499              	 .cfi_startproc
 4500 0000 80B5     	 push {r7,lr}
 4501              	.LCFI61:
 4502              	 .cfi_def_cfa_offset 8
 4503              	 .cfi_offset 7,-8
 4504              	 .cfi_offset 14,-4
 4505 0002 00AF     	 add r7,sp,#0
 4506              	.LCFI62:
 4507              	 .cfi_def_cfa_register 7
 625:../main.c     **** 	if(RC_Gear_state == 1)RC_gear_100us_counter ++;
 4508              	 .loc 6 625 0
 4509 0004 0A4B     	 ldr r3,.L198
 4510 0006 1B78     	 ldrb r3,[r3]
 4511 0008 DBB2     	 uxtb r3,r3
 4512 000a 012B     	 cmp r3,#1
 4513 000c 04D1     	 bne .L196
 4514              	 .loc 6 625 0 is_stmt 0 discriminator 1
 4515 000e 094B     	 ldr r3,.L198+4
 4516 0010 1B68     	 ldr r3,[r3]
 4517 0012 5A1C     	 add r2,r3,#1
 4518 0014 074B     	 ldr r3,.L198+4
 4519 0016 1A60     	 str r2,[r3]
 4520              	.L196:
 626:../main.c     **** 	if(RC_AUX1_state == 1)RC_AUX1_100us_counter ++;
 4521              	 .loc 6 626 0 is_stmt 1
 4522 0018 074B     	 ldr r3,.L198+8
 4523 001a 1B78     	 ldrb r3,[r3]
 4524 001c DBB2     	 uxtb r3,r3
 4525 001e 012B     	 cmp r3,#1
 4526 0020 04D1     	 bne .L195
 4527              	 .loc 6 626 0 is_stmt 0 discriminator 1
 4528 0022 064B     	 ldr r3,.L198+12
 4529 0024 1B68     	 ldr r3,[r3]
 4530 0026 5A1C     	 add r2,r3,#1
 4531 0028 044B     	 ldr r3,.L198+12
 4532 002a 1A60     	 str r2,[r3]
 4533              	.L195:
 627:../main.c     **** }
 4534              	 .loc 6 627 0 is_stmt 1
 4535 002c BD46     	 mov sp,r7
 4536              	 
 4537 002e 80BD     	 pop {r7,pc}
 4538              	.L199:
 4539              	 .align 2
 4540              	.L198:
 4541 0030 00000000 	 .word RC_Gear_state
 4542 0034 00000000 	 .word RC_gear_100us_counter
 4543 0038 00000000 	 .word RC_AUX1_state
 4544 003c 00000000 	 .word RC_AUX1_100us_counter
 4545              	 .cfi_endproc
 4546              	.LFE235:
 4548              	 .global __aeabi_f2uiz
 4549              	 .section .text.Steering_set_Angles,"ax",%progbits
 4550              	 .align 2
 4551              	 .global Steering_set_Angles
 4552              	 .code 16
 4553              	 .thumb_func
 4555              	Steering_set_Angles:
 4556              	.LFB236:
 628:../main.c     **** 
 629:../main.c     **** void Steering_set_Angles(float Angles_data[4]){
 4557              	 .loc 6 629 0
 4558              	 .cfi_startproc
 4559 0000 90B5     	 push {r4,r7,lr}
 4560              	.LCFI63:
 4561              	 .cfi_def_cfa_offset 12
 4562              	 .cfi_offset 4,-12
 4563              	 .cfi_offset 7,-8
 4564              	 .cfi_offset 14,-4
 4565 0002 85B0     	 sub sp,sp,#20
 4566              	.LCFI64:
 4567              	 .cfi_def_cfa_offset 32
 4568 0004 00AF     	 add r7,sp,#0
 4569              	.LCFI65:
 4570              	 .cfi_def_cfa_register 7
 4571 0006 7860     	 str r0,[r7,#4]
 630:../main.c     **** 	float deg_PWM = 0.645; // deg to PWM singlan converstion factor
 4572              	 .loc 6 630 0
 4573 0008 3E4B     	 ldr r3,.L211
 4574 000a BB60     	 str r3,[r7,#8]
 631:../main.c     **** 
 632:../main.c     **** 	// calcuation of PWM for Angle on each wheel
 633:../main.c     **** 	int i;
 634:../main.c     **** 	for(i = 0 ; i < 4 ; i ++){
 4575              	 .loc 6 634 0
 4576 000c 0023     	 mov r3,#0
 4577 000e FB60     	 str r3,[r7,#12]
 4578 0010 1FE0     	 b .L201
 4579              	.L202:
 635:../main.c     **** 		Servo_PWMs[i] = Angles_data[i]*deg_PWM + NP[i];
 4580              	 .loc 6 635 0 discriminator 3
 4581 0012 FB68     	 ldr r3,[r7,#12]
 4582 0014 9B00     	 lsl r3,r3,#2
 4583 0016 7A68     	 ldr r2,[r7,#4]
 4584 0018 D318     	 add r3,r2,r3
 4585 001a 1B68     	 ldr r3,[r3]
 4586 001c 181C     	 add r0,r3,#0
 4587 001e B968     	 ldr r1,[r7,#8]
 4588 0020 FFF7FEFF 	 bl __aeabi_fmul
 4589 0024 031C     	 add r3,r0,#0
 4590 0026 1C1C     	 add r4,r3,#0
 4591 0028 374B     	 ldr r3,.L211+4
 4592 002a FA68     	 ldr r2,[r7,#12]
 4593 002c 9200     	 lsl r2,r2,#2
 4594 002e D358     	 ldr r3,[r2,r3]
 4595 0030 181C     	 mov r0,r3
 4596 0032 FFF7FEFF 	 bl __aeabi_i2f
 4597 0036 031C     	 add r3,r0,#0
 4598 0038 201C     	 add r0,r4,#0
 4599 003a 191C     	 add r1,r3,#0
 4600 003c FFF7FEFF 	 bl __aeabi_fadd
 4601 0040 031C     	 add r3,r0,#0
 4602 0042 191C     	 add r1,r3,#0
 4603 0044 314B     	 ldr r3,.L211+8
 4604 0046 FA68     	 ldr r2,[r7,#12]
 4605 0048 9200     	 lsl r2,r2,#2
 4606 004a D150     	 str r1,[r2,r3]
 634:../main.c     **** 		Servo_PWMs[i] = Angles_data[i]*deg_PWM + NP[i];
 4607              	 .loc 6 634 0 discriminator 3
 4608 004c FB68     	 ldr r3,[r7,#12]
 4609 004e 0133     	 add r3,r3,#1
 4610 0050 FB60     	 str r3,[r7,#12]
 4611              	.L201:
 634:../main.c     **** 		Servo_PWMs[i] = Angles_data[i]*deg_PWM + NP[i];
 4612              	 .loc 6 634 0 is_stmt 0 discriminator 1
 4613 0052 FB68     	 ldr r3,[r7,#12]
 4614 0054 032B     	 cmp r3,#3
 4615 0056 DCDD     	 ble .L202
 636:../main.c     **** 		}
 637:../main.c     **** 
 638:../main.c     **** 	//limitinbg max servor Angle to 1.75 rot in each dirction
 639:../main.c     **** 	for(i = 0 ; i < 4 ; i ++){
 4616              	 .loc 6 639 0 is_stmt 1
 4617 0058 0023     	 mov r3,#0
 4618 005a FB60     	 str r3,[r7,#12]
 4619 005c 20E0     	 b .L203
 4620              	.L208:
 640:../main.c     **** 		if(Servo_PWMs[i] > 950) { Servo_PWMs[i] = 950;}
 4621              	 .loc 6 640 0
 4622 005e 2B4B     	 ldr r3,.L211+8
 4623 0060 FA68     	 ldr r2,[r7,#12]
 4624 0062 9200     	 lsl r2,r2,#2
 4625 0064 D358     	 ldr r3,[r2,r3]
 4626 0066 181C     	 add r0,r3,#0
 4627 0068 2949     	 ldr r1,.L211+12
 4628 006a FFF7FEFF 	 bl __aeabi_fcmpgt
 4629 006e 031E     	 sub r3,r0,#0
 4630 0070 04D0     	 beq .L204
 4631              	 .loc 6 640 0 is_stmt 0 discriminator 1
 4632 0072 264B     	 ldr r3,.L211+8
 4633 0074 FA68     	 ldr r2,[r7,#12]
 4634 0076 9200     	 lsl r2,r2,#2
 4635 0078 2549     	 ldr r1,.L211+12
 4636 007a D150     	 str r1,[r2,r3]
 4637              	.L204:
 641:../main.c     **** 		if(Servo_PWMs[i] < 550) { Servo_PWMs[i] = 550;}
 4638              	 .loc 6 641 0 is_stmt 1
 4639 007c 234B     	 ldr r3,.L211+8
 4640 007e FA68     	 ldr r2,[r7,#12]
 4641 0080 9200     	 lsl r2,r2,#2
 4642 0082 D358     	 ldr r3,[r2,r3]
 4643 0084 181C     	 add r0,r3,#0
 4644 0086 2349     	 ldr r1,.L211+16
 4645 0088 FFF7FEFF 	 bl __aeabi_fcmplt
 4646 008c 031E     	 sub r3,r0,#0
 4647 008e 04D0     	 beq .L206
 4648              	 .loc 6 641 0 is_stmt 0 discriminator 1
 4649 0090 1E4B     	 ldr r3,.L211+8
 4650 0092 FA68     	 ldr r2,[r7,#12]
 4651 0094 9200     	 lsl r2,r2,#2
 4652 0096 1F49     	 ldr r1,.L211+16
 4653 0098 D150     	 str r1,[r2,r3]
 4654              	.L206:
 639:../main.c     **** 		if(Servo_PWMs[i] > 950) { Servo_PWMs[i] = 950;}
 4655              	 .loc 6 639 0 is_stmt 1 discriminator 2
 4656 009a FB68     	 ldr r3,[r7,#12]
 4657 009c 0133     	 add r3,r3,#1
 4658 009e FB60     	 str r3,[r7,#12]
 4659              	.L203:
 639:../main.c     **** 		if(Servo_PWMs[i] > 950) { Servo_PWMs[i] = 950;}
 4660              	 .loc 6 639 0 is_stmt 0 discriminator 1
 4661 00a0 FB68     	 ldr r3,[r7,#12]
 4662 00a2 032B     	 cmp r3,#3
 4663 00a4 DBDD     	 ble .L208
 642:../main.c     **** 	}
 643:../main.c     **** 
 644:../main.c     **** 	//seting PWM values
 645:../main.c     **** 	PWM_SetDutyCycle(&PWM_servo_fl,Servo_PWMs[0]);
 4664              	 .loc 6 645 0 is_stmt 1
 4665 00a6 194B     	 ldr r3,.L211+8
 4666 00a8 1B68     	 ldr r3,[r3]
 4667 00aa 181C     	 add r0,r3,#0
 4668 00ac FFF7FEFF 	 bl __aeabi_f2uiz
 4669 00b0 021C     	 mov r2,r0
 4670 00b2 194B     	 ldr r3,.L211+20
 4671 00b4 181C     	 mov r0,r3
 4672 00b6 111C     	 mov r1,r2
 4673 00b8 FFF7FEFF 	 bl PWM_SetDutyCycle
 646:../main.c     **** 	PWM_SetDutyCycle(&PWM_servo_fr,Servo_PWMs[1]);
 4674              	 .loc 6 646 0
 4675 00bc 134B     	 ldr r3,.L211+8
 4676 00be 5B68     	 ldr r3,[r3,#4]
 4677 00c0 181C     	 add r0,r3,#0
 4678 00c2 FFF7FEFF 	 bl __aeabi_f2uiz
 4679 00c6 021C     	 mov r2,r0
 4680 00c8 144B     	 ldr r3,.L211+24
 4681 00ca 181C     	 mov r0,r3
 4682 00cc 111C     	 mov r1,r2
 4683 00ce FFF7FEFF 	 bl PWM_SetDutyCycle
 647:../main.c     **** 	PWM_SetDutyCycle(&PWM_servo_rl,Servo_PWMs[2]);
 4684              	 .loc 6 647 0
 4685 00d2 0E4B     	 ldr r3,.L211+8
 4686 00d4 9B68     	 ldr r3,[r3,#8]
 4687 00d6 181C     	 add r0,r3,#0
 4688 00d8 FFF7FEFF 	 bl __aeabi_f2uiz
 4689 00dc 021C     	 mov r2,r0
 4690 00de 104B     	 ldr r3,.L211+28
 4691 00e0 181C     	 mov r0,r3
 4692 00e2 111C     	 mov r1,r2
 4693 00e4 FFF7FEFF 	 bl PWM_SetDutyCycle
 648:../main.c     **** 	PWM_SetDutyCycle(&PWM_servo_rr,Servo_PWMs[3]);
 4694              	 .loc 6 648 0
 4695 00e8 084B     	 ldr r3,.L211+8
 4696 00ea DB68     	 ldr r3,[r3,#12]
 4697 00ec 181C     	 add r0,r3,#0
 4698 00ee FFF7FEFF 	 bl __aeabi_f2uiz
 4699 00f2 021C     	 mov r2,r0
 4700 00f4 0B4B     	 ldr r3,.L211+32
 4701 00f6 181C     	 mov r0,r3
 4702 00f8 111C     	 mov r1,r2
 4703 00fa FFF7FEFF 	 bl PWM_SetDutyCycle
 649:../main.c     **** 
 650:../main.c     **** }
 4704              	 .loc 6 650 0
 4705 00fe BD46     	 mov sp,r7
 4706 0100 05B0     	 add sp,sp,#20
 4707              	 
 4708 0102 90BD     	 pop {r4,r7,pc}
 4709              	.L212:
 4710              	 .align 2
 4711              	.L211:
 4712 0104 B81E253F 	 .word 1059397304
 4713 0108 00000000 	 .word NP
 4714 010c 00000000 	 .word Servo_PWMs
 4715 0110 00806D44 	 .word 1148026880
 4716 0114 00800944 	 .word 1141473280
 4717 0118 00000000 	 .word PWM_servo_fl
 4718 011c 00000000 	 .word PWM_servo_fr
 4719 0120 00000000 	 .word PWM_servo_rl
 4720 0124 00000000 	 .word PWM_servo_rr
 4721              	 .cfi_endproc
 4722              	.LFE236:
 4724              	 .global __aeabi_ui2d
 4725              	 .section .text.RC_Recive,"ax",%progbits
 4726              	 .align 2
 4727              	 .global RC_Recive
 4728              	 .code 16
 4729              	 .thumb_func
 4731              	RC_Recive:
 4732              	.LFB237:
 651:../main.c     **** 
 652:../main.c     **** void RC_Recive(void){
 4733              	 .loc 6 652 0
 4734              	 .cfi_startproc
 4735 0000 F8B5     	 push {r3,r4,r5,r6,r7,lr}
 4736              	.LCFI66:
 4737              	 .cfi_def_cfa_offset 24
 4738              	 .cfi_offset 3,-24
 4739              	 .cfi_offset 4,-20
 4740              	 .cfi_offset 5,-16
 4741              	 .cfi_offset 6,-12
 4742              	 .cfi_offset 7,-8
 4743              	 .cfi_offset 14,-4
 4744 0002 00AF     	 add r7,sp,#0
 4745              	.LCFI67:
 4746              	 .cfi_def_cfa_register 7
 653:../main.c     **** 
 654:../main.c     **** 	CAPTURE_Start(&CAPTURE_RC_Steering);
 4747              	 .loc 6 654 0
 4748 0004 784B     	 ldr r3,.L233
 4749 0006 181C     	 mov r0,r3
 4750 0008 FFF7FEFF 	 bl CAPTURE_Start
 655:../main.c     **** 	CAPTURE_Start(&CAPTURE_RC_Speed);
 4751              	 .loc 6 655 0
 4752 000c 774B     	 ldr r3,.L233+4
 4753 000e 181C     	 mov r0,r3
 4754 0010 FFF7FEFF 	 bl CAPTURE_Start
 656:../main.c     **** 
 657:../main.c     **** 	CAPTURE_GetCapturedTimeInNanoSec(&CAPTURE_RC_Steering, &captured_time_Steering);
 4755              	 .loc 6 657 0
 4756 0014 744A     	 ldr r2,.L233
 4757 0016 764B     	 ldr r3,.L233+8
 4758 0018 101C     	 mov r0,r2
 4759 001a 191C     	 mov r1,r3
 4760 001c FFF7FEFF 	 bl CAPTURE_GetCapturedTimeInNanoSec
 658:../main.c     **** 	CAPTURE_GetCapturedTimeInNanoSec(&CAPTURE_RC_Speed, &captured_time_Speed);
 4761              	 .loc 6 658 0
 4762 0020 724A     	 ldr r2,.L233+4
 4763 0022 744B     	 ldr r3,.L233+12
 4764 0024 101C     	 mov r0,r2
 4765 0026 191C     	 mov r1,r3
 4766 0028 FFF7FEFF 	 bl CAPTURE_GetCapturedTimeInNanoSec
 659:../main.c     **** 
 660:../main.c     **** 	if(RC_Speed_Stop == 1){
 4767              	 .loc 6 660 0
 4768 002c 724B     	 ldr r3,.L233+16
 4769 002e 1B78     	 ldrb r3,[r3]
 4770 0030 012B     	 cmp r3,#1
 4771 0032 5CD1     	 bne .L214
 661:../main.c     **** 		if((captured_time_Speed >= 1000000) && (captured_time_Speed <= 2000000)){
 4772              	 .loc 6 661 0
 4773 0034 6F4B     	 ldr r3,.L233+12
 4774 0036 1B68     	 ldr r3,[r3]
 4775 0038 704A     	 ldr r2,.L233+20
 4776 003a 9342     	 cmp r3,r2
 4777 003c 50D9     	 bls .L215
 4778              	 .loc 6 661 0 is_stmt 0 discriminator 1
 4779 003e 6D4B     	 ldr r3,.L233+12
 4780 0040 1B68     	 ldr r3,[r3]
 4781 0042 6F4A     	 ldr r2,.L233+24
 4782 0044 9342     	 cmp r3,r2
 4783 0046 4BD8     	 bhi .L215
 662:../main.c     **** 		  RC_Speed = ((double)captured_time_Speed - RC_NP_SPEED) * RC_Speed_ns_to_mps; // form +-0.6m/s
 4784              	 .loc 6 662 0 is_stmt 1
 4785 0048 6A4B     	 ldr r3,.L233+12
 4786 004a 1B68     	 ldr r3,[r3]
 4787 004c 181C     	 mov r0,r3
 4788 004e FFF7FEFF 	 bl __aeabi_ui2d
 4789 0052 031C     	 mov r3,r0
 4790 0054 0C1C     	 mov r4,r1
 4791 0056 181C     	 mov r0,r3
 4792 0058 211C     	 mov r1,r4
 4793 005a 0022     	 mov r2,#0
 4794 005c 694B     	 ldr r3,.L233+28
 4795 005e FFF7FEFF 	 bl __aeabi_dsub
 4796 0062 031C     	 mov r3,r0
 4797 0064 0C1C     	 mov r4,r1
 4798 0066 1D1C     	 mov r5,r3
 4799 0068 261C     	 mov r6,r4
 4800 006a 674B     	 ldr r3,.L233+32
 4801 006c 1B68     	 ldr r3,[r3]
 4802 006e 181C     	 add r0,r3,#0
 4803 0070 FFF7FEFF 	 bl __aeabi_f2d
 4804 0074 031C     	 mov r3,r0
 4805 0076 0C1C     	 mov r4,r1
 4806 0078 281C     	 mov r0,r5
 4807 007a 311C     	 mov r1,r6
 4808 007c 1A1C     	 mov r2,r3
 4809 007e 231C     	 mov r3,r4
 4810 0080 FFF7FEFF 	 bl __aeabi_dmul
 4811 0084 031C     	 mov r3,r0
 4812 0086 0C1C     	 mov r4,r1
 4813 0088 181C     	 mov r0,r3
 4814 008a 211C     	 mov r1,r4
 4815 008c FFF7FEFF 	 bl __aeabi_d2f
 4816 0090 021C     	 add r2,r0,#0
 4817 0092 5E4B     	 ldr r3,.L233+36
 4818 0094 1A60     	 str r2,[r3]
 663:../main.c     **** 		  if((RC_Speed < 0.1) && (RC_Speed > -0.1)) RC_Speed = 0; // to have accutal 0
 4819              	 .loc 6 663 0
 4820 0096 5D4B     	 ldr r3,.L233+36
 4821 0098 1B68     	 ldr r3,[r3]
 4822 009a 181C     	 add r0,r3,#0
 4823 009c FFF7FEFF 	 bl __aeabi_f2d
 4824 00a0 031C     	 mov r3,r0
 4825 00a2 0C1C     	 mov r4,r1
 4826 00a4 181C     	 mov r0,r3
 4827 00a6 211C     	 mov r1,r4
 4828 00a8 594A     	 ldr r2,.L233+40
 4829 00aa 5A4B     	 ldr r3,.L233+44
 4830 00ac FFF7FEFF 	 bl __aeabi_dcmplt
 4831 00b0 031E     	 sub r3,r0,#0
 4832 00b2 11D0     	 beq .L216
 4833              	 .loc 6 663 0 is_stmt 0 discriminator 1
 4834 00b4 554B     	 ldr r3,.L233+36
 4835 00b6 1B68     	 ldr r3,[r3]
 4836 00b8 181C     	 add r0,r3,#0
 4837 00ba FFF7FEFF 	 bl __aeabi_f2d
 4838 00be 031C     	 mov r3,r0
 4839 00c0 0C1C     	 mov r4,r1
 4840 00c2 181C     	 mov r0,r3
 4841 00c4 211C     	 mov r1,r4
 4842 00c6 524A     	 ldr r2,.L233+40
 4843 00c8 534B     	 ldr r3,.L233+48
 4844 00ca FFF7FEFF 	 bl __aeabi_dcmpgt
 4845 00ce 031E     	 sub r3,r0,#0
 4846 00d0 02D0     	 beq .L216
 4847              	 .loc 6 663 0 discriminator 2
 4848 00d2 4E4B     	 ldr r3,.L233+36
 4849 00d4 0022     	 mov r2,#0
 4850 00d6 1A60     	 str r2,[r3]
 4851              	.L216:
 664:../main.c     **** 		  RC_no_Speed_data_counter = 0;
 4852              	 .loc 6 664 0 is_stmt 1
 4853 00d8 504B     	 ldr r3,.L233+52
 4854 00da 0022     	 mov r2,#0
 4855 00dc 1A70     	 strb r2,[r3]
 4856 00de 09E0     	 b .L220
 4857              	.L215:
 665:../main.c     **** 		}
 666:../main.c     **** 		else{
 667:../main.c     **** 			RC_no_Speed_data_counter ++;
 4858              	 .loc 6 667 0
 4859 00e0 4E4B     	 ldr r3,.L233+52
 4860 00e2 1B78     	 ldrb r3,[r3]
 4861 00e4 0133     	 add r3,r3,#1
 4862 00e6 DAB2     	 uxtb r2,r3
 4863 00e8 4C4B     	 ldr r3,.L233+52
 4864 00ea 1A70     	 strb r2,[r3]
 4865 00ec 02E0     	 b .L220
 4866              	.L214:
 668:../main.c     **** 		}
 669:../main.c     **** 	}
 670:../main.c     **** 	else RC_Speed = 0;
 4867              	 .loc 6 670 0
 4868 00ee 474B     	 ldr r3,.L233+36
 4869 00f0 0022     	 mov r2,#0
 4870 00f2 1A60     	 str r2,[r3]
 4871              	.L220:
 671:../main.c     **** 
 672:../main.c     **** 	if((captured_time_Steering >= 1000000) && (captured_time_Steering <= 2000000)){
 4872              	 .loc 6 672 0
 4873 00f4 3E4B     	 ldr r3,.L233+8
 4874 00f6 1B68     	 ldr r3,[r3]
 4875 00f8 404A     	 ldr r2,.L233+20
 4876 00fa 9342     	 cmp r3,r2
 4877 00fc 44D9     	 bls .L221
 4878              	 .loc 6 672 0 is_stmt 0 discriminator 1
 4879 00fe 3C4B     	 ldr r3,.L233+8
 4880 0100 1B68     	 ldr r3,[r3]
 4881 0102 3F4A     	 ldr r2,.L233+24
 4882 0104 9342     	 cmp r3,r2
 4883 0106 3FD8     	 bhi .L221
 673:../main.c     **** 	  RC_Steering = (((double)captured_time_Steering - RC_NP_STEERING) * RC_Steering_ns_to_deg); // fo
 4884              	 .loc 6 673 0 is_stmt 1
 4885 0108 394B     	 ldr r3,.L233+8
 4886 010a 1B68     	 ldr r3,[r3]
 4887 010c 181C     	 mov r0,r3
 4888 010e FFF7FEFF 	 bl __aeabi_ui2d
 4889 0112 031C     	 mov r3,r0
 4890 0114 0C1C     	 mov r4,r1
 4891 0116 181C     	 mov r0,r3
 4892 0118 211C     	 mov r1,r4
 4893 011a 0022     	 mov r2,#0
 4894 011c 404B     	 ldr r3,.L233+56
 4895 011e FFF7FEFF 	 bl __aeabi_dsub
 4896 0122 031C     	 mov r3,r0
 4897 0124 0C1C     	 mov r4,r1
 4898 0126 1D1C     	 mov r5,r3
 4899 0128 261C     	 mov r6,r4
 4900 012a 3E4B     	 ldr r3,.L233+60
 4901 012c 1B68     	 ldr r3,[r3]
 4902 012e 181C     	 add r0,r3,#0
 4903 0130 FFF7FEFF 	 bl __aeabi_f2d
 4904 0134 031C     	 mov r3,r0
 4905 0136 0C1C     	 mov r4,r1
 4906 0138 281C     	 mov r0,r5
 4907 013a 311C     	 mov r1,r6
 4908 013c 1A1C     	 mov r2,r3
 4909 013e 231C     	 mov r3,r4
 4910 0140 FFF7FEFF 	 bl __aeabi_dmul
 4911 0144 031C     	 mov r3,r0
 4912 0146 0C1C     	 mov r4,r1
 4913 0148 181C     	 mov r0,r3
 4914 014a 211C     	 mov r1,r4
 4915 014c FFF7FEFF 	 bl __aeabi_d2f
 4916 0150 021C     	 add r2,r0,#0
 4917 0152 354B     	 ldr r3,.L233+64
 4918 0154 1A60     	 str r2,[r3]
 674:../main.c     **** 	  if((RC_Steering < 2) && (RC_Steering > -2)) RC_Steering = 0; // to have accutal 0
 4919              	 .loc 6 674 0
 4920 0156 344B     	 ldr r3,.L233+64
 4921 0158 1B68     	 ldr r3,[r3]
 4922 015a 181C     	 add r0,r3,#0
 4923 015c 8021     	 mov r1,#128
 4924 015e C905     	 lsl r1,r1,#23
 4925 0160 FFF7FEFF 	 bl __aeabi_fcmplt
 4926 0164 031E     	 sub r3,r0,#0
 4927 0166 0BD0     	 beq .L222
 4928              	 .loc 6 674 0 is_stmt 0 discriminator 1
 4929 0168 2F4B     	 ldr r3,.L233+64
 4930 016a 1B68     	 ldr r3,[r3]
 4931 016c 181C     	 add r0,r3,#0
 4932 016e C021     	 mov r1,#192
 4933 0170 0906     	 lsl r1,r1,#24
 4934 0172 FFF7FEFF 	 bl __aeabi_fcmpgt
 4935 0176 031E     	 sub r3,r0,#0
 4936 0178 02D0     	 beq .L222
 4937              	 .loc 6 674 0 discriminator 2
 4938 017a 2B4B     	 ldr r3,.L233+64
 4939 017c 0022     	 mov r2,#0
 4940 017e 1A60     	 str r2,[r3]
 4941              	.L222:
 675:../main.c     **** 	  RC_no_Steering_data_counter = 0;
 4942              	 .loc 6 675 0 is_stmt 1
 4943 0180 2A4B     	 ldr r3,.L233+68
 4944 0182 0022     	 mov r2,#0
 4945 0184 1A70     	 strb r2,[r3]
 4946 0186 05E0     	 b .L225
 4947              	.L221:
 676:../main.c     **** 	}
 677:../main.c     **** 	else{
 678:../main.c     **** 	  RC_no_Steering_data_counter ++;
 4948              	 .loc 6 678 0
 4949 0188 284B     	 ldr r3,.L233+68
 4950 018a 1B78     	 ldrb r3,[r3]
 4951 018c 0133     	 add r3,r3,#1
 4952 018e DAB2     	 uxtb r2,r3
 4953 0190 264B     	 ldr r3,.L233+68
 4954 0192 1A70     	 strb r2,[r3]
 4955              	.L225:
 679:../main.c     **** 	}
 680:../main.c     **** 
 681:../main.c     **** 	if(RC_no_Speed_data_counter > 20 || RC_no_Steering_data_counter > 20 ){ // internall values not ok
 4956              	 .loc 6 681 0
 4957 0194 214B     	 ldr r3,.L233+52
 4958 0196 1B78     	 ldrb r3,[r3]
 4959 0198 142B     	 cmp r3,#20
 4960 019a 03D8     	 bhi .L226
 4961              	 .loc 6 681 0 is_stmt 0 discriminator 1
 4962 019c 234B     	 ldr r3,.L233+68
 4963 019e 1B78     	 ldrb r3,[r3]
 4964 01a0 142B     	 cmp r3,#20
 4965 01a2 10D9     	 bls .L227
 4966              	.L226:
 682:../main.c     **** 	  DIGITAL_IO_SetOutputLow(&RC_no_data_LED);
 4967              	 .loc 6 682 0 is_stmt 1
 4968 01a4 224B     	 ldr r3,.L233+72
 4969 01a6 181C     	 mov r0,r3
 4970 01a8 FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 683:../main.c     **** 	  RC_no_Speed_data_counter = 20;
 4971              	 .loc 6 683 0
 4972 01ac 1B4B     	 ldr r3,.L233+52
 4973 01ae 1422     	 mov r2,#20
 4974 01b0 1A70     	 strb r2,[r3]
 684:../main.c     **** 	  RC_no_Steering_data_counter = 20;
 4975              	 .loc 6 684 0
 4976 01b2 1E4B     	 ldr r3,.L233+68
 4977 01b4 1422     	 mov r2,#20
 4978 01b6 1A70     	 strb r2,[r3]
 685:../main.c     **** 
 686:../main.c     **** 	  //set gobal vars 0
 687:../main.c     **** 	  Driving_speed = 0;
 4979              	 .loc 6 687 0
 4980 01b8 1E4B     	 ldr r3,.L233+76
 4981 01ba 0022     	 mov r2,#0
 4982 01bc 1A60     	 str r2,[r3]
 688:../main.c     **** 	  Steering_direction = 0;
 4983              	 .loc 6 688 0
 4984 01be 1E4B     	 ldr r3,.L233+80
 4985 01c0 0022     	 mov r2,#0
 4986 01c2 1A60     	 str r2,[r3]
 4987 01c4 0BE0     	 b .L228
 4988              	.L227:
 689:../main.c     **** 	}
 690:../main.c     **** 	else{ // values filternig
 691:../main.c     **** 	  DIGITAL_IO_SetOutputHigh(&RC_no_data_LED);
 4989              	 .loc 6 691 0
 4990 01c6 1A4B     	 ldr r3,.L233+72
 4991 01c8 181C     	 mov r0,r3
 4992 01ca FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 692:../main.c     **** 
 693:../main.c     **** 	  //set gobal vars stanart
 694:../main.c     **** 	  Driving_speed = RC_Speed;
 4993              	 .loc 6 694 0
 4994 01ce 0F4B     	 ldr r3,.L233+36
 4995 01d0 1A68     	 ldr r2,[r3]
 4996 01d2 184B     	 ldr r3,.L233+76
 4997 01d4 1A60     	 str r2,[r3]
 695:../main.c     **** 	  Steering_direction = RC_Steering;
 4998              	 .loc 6 695 0
 4999 01d6 144B     	 ldr r3,.L233+64
 5000 01d8 1A68     	 ldr r2,[r3]
 5001 01da 174B     	 ldr r3,.L233+80
 5002 01dc 1A60     	 str r2,[r3]
 5003              	.L228:
 696:../main.c     **** 	}
 697:../main.c     **** 
 698:../main.c     **** 	New_Input = 1; //goalb var to tell it that there in new data to calculate
 5004              	 .loc 6 698 0
 5005 01de 174B     	 ldr r3,.L233+84
 5006 01e0 0122     	 mov r2,#1
 5007 01e2 1A70     	 strb r2,[r3]
 699:../main.c     **** }
 5008              	 .loc 6 699 0
 5009 01e4 BD46     	 mov sp,r7
 5010              	 
 5011 01e6 F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 5012              	.L234:
 5013              	 .align 2
 5014              	.L233:
 5015 01e8 00000000 	 .word CAPTURE_RC_Steering
 5016 01ec 00000000 	 .word CAPTURE_RC_Speed
 5017 01f0 00000000 	 .word captured_time_Steering
 5018 01f4 00000000 	 .word captured_time_Speed
 5019 01f8 00000000 	 .word RC_Speed_Stop
 5020 01fc 3F420F00 	 .word 999999
 5021 0200 80841E00 	 .word 2000000
 5022 0204 60E33641 	 .word 1094116192
 5023 0208 00000000 	 .word RC_Speed_ns_to_mps
 5024 020c 00000000 	 .word RC_Speed
 5025 0210 9A999999 	 .word -1717986918
 5026 0214 9999B93F 	 .word 1069128089
 5027 0218 9999B9BF 	 .word -1078355559
 5028 021c 00000000 	 .word RC_no_Speed_data_counter
 5029 0220 A07F3741 	 .word 1094156192
 5030 0224 00000000 	 .word RC_Steering_ns_to_deg
 5031 0228 00000000 	 .word RC_Steering
 5032 022c 00000000 	 .word RC_no_Steering_data_counter
 5033 0230 00000000 	 .word RC_no_data_LED
 5034 0234 00000000 	 .word Driving_speed
 5035 0238 00000000 	 .word Steering_direction
 5036 023c 00000000 	 .word New_Input
 5037              	 .cfi_endproc
 5038              	.LFE237:
 5040              	 .section .text.IRQ12_Handler,"ax",%progbits
 5041              	 .align 2
 5042              	 .global IRQ12_Handler
 5043              	 .code 16
 5044              	 .thumb_func
 5046              	IRQ12_Handler:
 5047              	.LFB238:
 700:../main.c     **** 
 701:../main.c     **** void RC_Connected_ISR(void){
 5048              	 .loc 6 701 0
 5049              	 .cfi_startproc
 5050 0000 80B5     	 push {r7,lr}
 5051              	.LCFI68:
 5052              	 .cfi_def_cfa_offset 8
 5053              	 .cfi_offset 7,-8
 5054              	 .cfi_offset 14,-4
 5055 0002 82B0     	 sub sp,sp,#8
 5056              	.LCFI69:
 5057              	 .cfi_def_cfa_offset 16
 5058 0004 00AF     	 add r7,sp,#0
 5059              	.LCFI70:
 5060              	 .cfi_def_cfa_register 7
 702:../main.c     **** 
 703:../main.c     **** 	if(RC_controll == 1){
 5061              	 .loc 6 703 0
 5062 0006 314B     	 ldr r3,.L244
 5063 0008 1B78     	 ldrb r3,[r3]
 5064 000a DBB2     	 uxtb r3,r3
 5065 000c 012B     	 cmp r3,#1
 5066 000e 59D1     	 bne .L235
 704:../main.c     **** 
 705:../main.c     **** 		RC_Gear_state =  PIN_INTERRUPT_GetPinValue(&RC_Connected); // pin haig or low
 5067              	 .loc 6 705 0
 5068 0010 2F4B     	 ldr r3,.L244+4
 5069 0012 181C     	 mov r0,r3
 5070 0014 FFF7FEFF 	 bl PIN_INTERRUPT_GetPinValue
 5071 0018 031C     	 mov r3,r0
 5072 001a DAB2     	 uxtb r2,r3
 5073 001c 2D4B     	 ldr r3,.L244+8
 5074 001e 1A70     	 strb r2,[r3]
 706:../main.c     **** 
 707:../main.c     **** 		if(RC_Gear_state == 0){// do nothing during high
 5075              	 .loc 6 707 0
 5076 0020 2C4B     	 ldr r3,.L244+8
 5077 0022 1B78     	 ldrb r3,[r3]
 5078 0024 DBB2     	 uxtb r3,r3
 5079 0026 002B     	 cmp r3,#0
 5080 0028 4CD1     	 bne .L235
 5081              	.LBB4:
 708:../main.c     **** 
 709:../main.c     **** 			RC_Recive(); // get speed and steering data
 5082              	 .loc 6 709 0
 5083 002a FFF7FEFF 	 bl RC_Recive
 710:../main.c     **** 
 711:../main.c     **** 			uint32_t RC_Gear_on_time_100us = RC_gear_100us_counter;
 5084              	 .loc 6 711 0
 5085 002e 2A4B     	 ldr r3,.L244+12
 5086 0030 1B68     	 ldr r3,[r3]
 5087 0032 7B60     	 str r3,[r7,#4]
 712:../main.c     **** 			RC_gear_100us_counter = 0;
 5088              	 .loc 6 712 0
 5089 0034 284B     	 ldr r3,.L244+12
 5090 0036 0022     	 mov r2,#0
 5091 0038 1A60     	 str r2,[r3]
 713:../main.c     **** 
 714:../main.c     **** 			if((80 < RC_Gear_on_time_100us) && (RC_Gear_on_time_100us < 150)) RC_Gear_duty= 0;
 5092              	 .loc 6 714 0
 5093 003a 7B68     	 ldr r3,[r7,#4]
 5094 003c 502B     	 cmp r3,#80
 5095 003e 06D9     	 bls .L237
 5096              	 .loc 6 714 0 is_stmt 0 discriminator 1
 5097 0040 7B68     	 ldr r3,[r7,#4]
 5098 0042 952B     	 cmp r3,#149
 5099 0044 03D8     	 bhi .L237
 5100              	 .loc 6 714 0 discriminator 2
 5101 0046 254B     	 ldr r3,.L244+16
 5102 0048 0022     	 mov r2,#0
 5103 004a 1A70     	 strb r2,[r3]
 5104 004c 0CE0     	 b .L238
 5105              	.L237:
 715:../main.c     **** 			else if ((150 < RC_Gear_on_time_100us) && (RC_Gear_on_time_100us < 210)) RC_Gear_duty = 1;
 5106              	 .loc 6 715 0 is_stmt 1
 5107 004e 7B68     	 ldr r3,[r7,#4]
 5108 0050 962B     	 cmp r3,#150
 5109 0052 06D9     	 bls .L239
 5110              	 .loc 6 715 0 is_stmt 0 discriminator 1
 5111 0054 7B68     	 ldr r3,[r7,#4]
 5112 0056 D12B     	 cmp r3,#209
 5113 0058 03D8     	 bhi .L239
 5114              	 .loc 6 715 0 discriminator 2
 5115 005a 204B     	 ldr r3,.L244+16
 5116 005c 0122     	 mov r2,#1
 5117 005e 1A70     	 strb r2,[r3]
 5118 0060 02E0     	 b .L238
 5119              	.L239:
 716:../main.c     **** 			else RC_Gear_duty = 2;
 5120              	 .loc 6 716 0 is_stmt 1
 5121 0062 1E4B     	 ldr r3,.L244+16
 5122 0064 0222     	 mov r2,#2
 5123 0066 1A70     	 strb r2,[r3]
 5124              	.L238:
 717:../main.c     **** 
 718:../main.c     **** 
 719:../main.c     **** 			if(modeswitch_colldown == 0){
 5125              	 .loc 6 719 0
 5126 0068 1D4B     	 ldr r3,.L244+20
 5127 006a 1B78     	 ldrb r3,[r3]
 5128 006c DBB2     	 uxtb r3,r3
 5129 006e 002B     	 cmp r3,#0
 5130 0070 1CD1     	 bne .L240
 720:../main.c     **** 				if(RC_Gear_duty == 0 && RC_Gear_duty_OLD == 1){
 5131              	 .loc 6 720 0
 5132 0072 1A4B     	 ldr r3,.L244+16
 5133 0074 1B78     	 ldrb r3,[r3]
 5134 0076 DBB2     	 uxtb r3,r3
 5135 0078 002B     	 cmp r3,#0
 5136 007a 1ED1     	 bne .L243
 5137              	 .loc 6 720 0 is_stmt 0 discriminator 1
 5138 007c 194B     	 ldr r3,.L244+24
 5139 007e 1B78     	 ldrb r3,[r3]
 5140 0080 DBB2     	 uxtb r3,r3
 5141 0082 012B     	 cmp r3,#1
 5142 0084 19D1     	 bne .L243
 721:../main.c     **** 					Steering_mode ++;
 5143              	 .loc 6 721 0 is_stmt 1
 5144 0086 184B     	 ldr r3,.L244+28
 5145 0088 1B78     	 ldrb r3,[r3]
 5146 008a DBB2     	 uxtb r3,r3
 5147 008c 0133     	 add r3,r3,#1
 5148 008e DAB2     	 uxtb r2,r3
 5149 0090 154B     	 ldr r3,.L244+28
 5150 0092 1A70     	 strb r2,[r3]
 722:../main.c     **** 					if(Steering_mode > 5)Steering_mode = 0;
 5151              	 .loc 6 722 0
 5152 0094 144B     	 ldr r3,.L244+28
 5153 0096 1B78     	 ldrb r3,[r3]
 5154 0098 DBB2     	 uxtb r3,r3
 5155 009a 052B     	 cmp r3,#5
 5156 009c 02D9     	 bls .L242
 5157              	 .loc 6 722 0 is_stmt 0 discriminator 1
 5158 009e 124B     	 ldr r3,.L244+28
 5159 00a0 0022     	 mov r2,#0
 5160 00a2 1A70     	 strb r2,[r3]
 5161              	.L242:
 723:../main.c     **** 					modeswitch_colldown = 10;
 5162              	 .loc 6 723 0 is_stmt 1
 5163 00a4 0E4B     	 ldr r3,.L244+20
 5164 00a6 0A22     	 mov r2,#10
 5165 00a8 1A70     	 strb r2,[r3]
 5166 00aa 06E0     	 b .L243
 5167              	.L240:
 724:../main.c     **** 				}
 725:../main.c     **** 			}
 726:../main.c     **** 			else modeswitch_colldown--;
 5168              	 .loc 6 726 0
 5169 00ac 0C4B     	 ldr r3,.L244+20
 5170 00ae 1B78     	 ldrb r3,[r3]
 5171 00b0 DBB2     	 uxtb r3,r3
 5172 00b2 013B     	 sub r3,r3,#1
 5173 00b4 DAB2     	 uxtb r2,r3
 5174 00b6 0A4B     	 ldr r3,.L244+20
 5175 00b8 1A70     	 strb r2,[r3]
 5176              	.L243:
 727:../main.c     **** 			RC_Gear_duty_OLD = RC_Gear_duty;
 5177              	 .loc 6 727 0
 5178 00ba 084B     	 ldr r3,.L244+16
 5179 00bc 1B78     	 ldrb r3,[r3]
 5180 00be DAB2     	 uxtb r2,r3
 5181 00c0 084B     	 ldr r3,.L244+24
 5182 00c2 1A70     	 strb r2,[r3]
 5183              	.L235:
 5184              	.LBE4:
 728:../main.c     **** 		}
 729:../main.c     **** 	}
 730:../main.c     **** }
 5185              	 .loc 6 730 0
 5186 00c4 BD46     	 mov sp,r7
 5187 00c6 02B0     	 add sp,sp,#8
 5188              	 
 5189 00c8 80BD     	 pop {r7,pc}
 5190              	.L245:
 5191 00ca C046     	 .align 2
 5192              	.L244:
 5193 00cc 00000000 	 .word RC_controll
 5194 00d0 00000000 	 .word RC_Connected
 5195 00d4 00000000 	 .word RC_Gear_state
 5196 00d8 00000000 	 .word RC_gear_100us_counter
 5197 00dc 00000000 	 .word RC_Gear_duty
 5198 00e0 00000000 	 .word modeswitch_colldown
 5199 00e4 00000000 	 .word RC_Gear_duty_OLD
 5200 00e8 00000000 	 .word Steering_mode
 5201              	 .cfi_endproc
 5202              	.LFE238:
 5204              	 .section .text.IRQ6_Handler,"ax",%progbits
 5205              	 .align 2
 5206              	 .global IRQ6_Handler
 5207              	 .code 16
 5208              	 .thumb_func
 5210              	IRQ6_Handler:
 5211              	.LFB239:
 731:../main.c     **** 
 732:../main.c     **** void RC_AUX1_ISR(void){
 5212              	 .loc 6 732 0
 5213              	 .cfi_startproc
 5214 0000 80B5     	 push {r7,lr}
 5215              	.LCFI71:
 5216              	 .cfi_def_cfa_offset 8
 5217              	 .cfi_offset 7,-8
 5218              	 .cfi_offset 14,-4
 5219 0002 82B0     	 sub sp,sp,#8
 5220              	.LCFI72:
 5221              	 .cfi_def_cfa_offset 16
 5222 0004 00AF     	 add r7,sp,#0
 5223              	.LCFI73:
 5224              	 .cfi_def_cfa_register 7
 733:../main.c     **** 	if(RC_controll == 1){
 5225              	 .loc 6 733 0
 5226 0006 1F4B     	 ldr r3,.L252
 5227 0008 1B78     	 ldrb r3,[r3]
 5228 000a DBB2     	 uxtb r3,r3
 5229 000c 012B     	 cmp r3,#1
 5230 000e 35D1     	 bne .L246
 734:../main.c     **** 		RC_AUX1_state =  PIN_INTERRUPT_GetPinValue(&RC_AUX1); // pin haig or low
 5231              	 .loc 6 734 0
 5232 0010 1D4B     	 ldr r3,.L252+4
 5233 0012 181C     	 mov r0,r3
 5234 0014 FFF7FEFF 	 bl PIN_INTERRUPT_GetPinValue
 5235 0018 031C     	 mov r3,r0
 5236 001a DAB2     	 uxtb r2,r3
 5237 001c 1B4B     	 ldr r3,.L252+8
 5238 001e 1A70     	 strb r2,[r3]
 735:../main.c     **** 
 736:../main.c     **** 		if(RC_AUX1_state == 0){// do nothing during high
 5239              	 .loc 6 736 0
 5240 0020 1A4B     	 ldr r3,.L252+8
 5241 0022 1B78     	 ldrb r3,[r3]
 5242 0024 DBB2     	 uxtb r3,r3
 5243 0026 002B     	 cmp r3,#0
 5244 0028 28D1     	 bne .L246
 5245              	.LBB5:
 737:../main.c     **** 			uint32_t RC_AUX1_on_time_100us = RC_AUX1_100us_counter;
 5246              	 .loc 6 737 0
 5247 002a 194B     	 ldr r3,.L252+12
 5248 002c 1B68     	 ldr r3,[r3]
 5249 002e 7B60     	 str r3,[r7,#4]
 738:../main.c     **** 			RC_AUX1_100us_counter = 0;
 5250              	 .loc 6 738 0
 5251 0030 174B     	 ldr r3,.L252+12
 5252 0032 0022     	 mov r2,#0
 5253 0034 1A60     	 str r2,[r3]
 739:../main.c     **** 
 740:../main.c     **** 			if((80 < RC_AUX1_on_time_100us) && (RC_AUX1_on_time_100us < 150)) RC_AUX1_duty= 0;
 5254              	 .loc 6 740 0
 5255 0036 7B68     	 ldr r3,[r7,#4]
 5256 0038 502B     	 cmp r3,#80
 5257 003a 06D9     	 bls .L248
 5258              	 .loc 6 740 0 is_stmt 0 discriminator 1
 5259 003c 7B68     	 ldr r3,[r7,#4]
 5260 003e 952B     	 cmp r3,#149
 5261 0040 03D8     	 bhi .L248
 5262              	 .loc 6 740 0 discriminator 2
 5263 0042 144B     	 ldr r3,.L252+16
 5264 0044 0022     	 mov r2,#0
 5265 0046 1A70     	 strb r2,[r3]
 5266 0048 0CE0     	 b .L249
 5267              	.L248:
 741:../main.c     **** 			else if ((150 < RC_AUX1_on_time_100us) && (RC_AUX1_on_time_100us < 210)) RC_AUX1_duty = 1;
 5268              	 .loc 6 741 0 is_stmt 1
 5269 004a 7B68     	 ldr r3,[r7,#4]
 5270 004c 962B     	 cmp r3,#150
 5271 004e 06D9     	 bls .L250
 5272              	 .loc 6 741 0 is_stmt 0 discriminator 1
 5273 0050 7B68     	 ldr r3,[r7,#4]
 5274 0052 D12B     	 cmp r3,#209
 5275 0054 03D8     	 bhi .L250
 5276              	 .loc 6 741 0 discriminator 2
 5277 0056 0F4B     	 ldr r3,.L252+16
 5278 0058 0122     	 mov r2,#1
 5279 005a 1A70     	 strb r2,[r3]
 5280 005c 02E0     	 b .L249
 5281              	.L250:
 742:../main.c     **** 			else RC_AUX1_duty = 2;
 5282              	 .loc 6 742 0 is_stmt 1
 5283 005e 0D4B     	 ldr r3,.L252+16
 5284 0060 0222     	 mov r2,#2
 5285 0062 1A70     	 strb r2,[r3]
 5286              	.L249:
 743:../main.c     **** 
 744:../main.c     **** 
 745:../main.c     **** 			if(RC_AUX1_duty == 1)RC_Speed_Stop = 1;
 5287              	 .loc 6 745 0
 5288 0064 0B4B     	 ldr r3,.L252+16
 5289 0066 1B78     	 ldrb r3,[r3]
 5290 0068 DBB2     	 uxtb r3,r3
 5291 006a 012B     	 cmp r3,#1
 5292 006c 03D1     	 bne .L251
 5293              	 .loc 6 745 0 is_stmt 0 discriminator 1
 5294 006e 0A4B     	 ldr r3,.L252+20
 5295 0070 0122     	 mov r2,#1
 5296 0072 1A70     	 strb r2,[r3]
 5297 0074 02E0     	 b .L246
 5298              	.L251:
 746:../main.c     **** 			else RC_Speed_Stop = 0;
 5299              	 .loc 6 746 0 is_stmt 1
 5300 0076 084B     	 ldr r3,.L252+20
 5301 0078 0022     	 mov r2,#0
 5302 007a 1A70     	 strb r2,[r3]
 5303              	.L246:
 5304              	.LBE5:
 747:../main.c     **** 		}
 748:../main.c     **** 	}
 749:../main.c     **** }
 5305              	 .loc 6 749 0
 5306 007c BD46     	 mov sp,r7
 5307 007e 02B0     	 add sp,sp,#8
 5308              	 
 5309 0080 80BD     	 pop {r7,pc}
 5310              	.L253:
 5311 0082 C046     	 .align 2
 5312              	.L252:
 5313 0084 00000000 	 .word RC_controll
 5314 0088 00000000 	 .word RC_AUX1
 5315 008c 00000000 	 .word RC_AUX1_state
 5316 0090 00000000 	 .word RC_AUX1_100us_counter
 5317 0094 00000000 	 .word RC_AUX1_duty
 5318 0098 00000000 	 .word RC_Speed_Stop
 5319              	 .cfi_endproc
 5320              	.LFE239:
 5322              	 .section .rodata
 5323              	 .align 2
 5324              	.LC0:
 5325 0000 01       	 .byte 1
 5326 0001 01       	 .byte 1
 5327 0002 01       	 .byte 1
 5328 0003 01       	 .byte 1
 5329              	 .section .text.IRQ7_Handler,"ax",%progbits
 5330              	 .align 2
 5331              	 .global IRQ7_Handler
 5332              	 .code 16
 5333              	 .thumb_func
 5335              	IRQ7_Handler:
 5336              	.LFB240:
 750:../main.c     **** 
 751:../main.c     **** void TIMER_CONTROL_ISR(void){
 5337              	 .loc 6 751 0
 5338              	 .cfi_startproc
 5339 0000 80B5     	 push {r7,lr}
 5340              	.LCFI74:
 5341              	 .cfi_def_cfa_offset 8
 5342              	 .cfi_offset 7,-8
 5343              	 .cfi_offset 14,-4
 5344 0002 82B0     	 sub sp,sp,#8
 5345              	.LCFI75:
 5346              	 .cfi_def_cfa_offset 16
 5347 0004 00AF     	 add r7,sp,#0
 5348              	.LCFI76:
 5349              	 .cfi_def_cfa_register 7
 752:../main.c     **** 	DIGITAL_IO_SetOutputHigh(&CALC_TIME_INDICATOR);
 5350              	 .loc 6 752 0
 5351 0006 3B4B     	 ldr r3,.L259
 5352 0008 181C     	 mov r0,r3
 5353 000a FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 753:../main.c     **** 	mode_led(Steering_mode);
 5354              	 .loc 6 753 0
 5355 000e 3A4B     	 ldr r3,.L259+4
 5356 0010 1B78     	 ldrb r3,[r3]
 5357 0012 DBB2     	 uxtb r3,r3
 5358 0014 181C     	 mov r0,r3
 5359 0016 FFF7FEFF 	 bl mode_led
 754:../main.c     **** 
 755:../main.c     **** 	if(RC_controll == 1){
 5360              	 .loc 6 755 0
 5361 001a 384B     	 ldr r3,.L259+8
 5362 001c 1B78     	 ldrb r3,[r3]
 5363 001e DBB2     	 uxtb r3,r3
 5364 0020 012B     	 cmp r3,#1
 5365 0022 07D1     	 bne .L255
 756:../main.c     **** 		if( NO_New_Input_counter > 9){
 5366              	 .loc 6 756 0
 5367 0024 364B     	 ldr r3,.L259+12
 5368 0026 1B68     	 ldr r3,[r3]
 5369 0028 092B     	 cmp r3,#9
 5370 002a 03D9     	 bls .L255
 757:../main.c     **** 			DIGITAL_IO_SetOutputLow(&RC_no_data_LED);
 5371              	 .loc 6 757 0
 5372 002c 354B     	 ldr r3,.L259+16
 5373 002e 181C     	 mov r0,r3
 5374 0030 FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 5375              	.L255:
 758:../main.c     **** 		}
 759:../main.c     **** 	}
 760:../main.c     **** 
 761:../main.c     **** 
 762:../main.c     **** 	if(New_Input == 1){
 5376              	 .loc 6 762 0
 5377 0034 344B     	 ldr r3,.L259+20
 5378 0036 1B78     	 ldrb r3,[r3]
 5379 0038 DBB2     	 uxtb r3,r3
 5380 003a 012B     	 cmp r3,#1
 5381 003c 0FD1     	 bne .L256
 763:../main.c     **** 	Steering_Function(Steering_direction, Driving_speed, Steering_mode);
 5382              	 .loc 6 763 0
 5383 003e 334B     	 ldr r3,.L259+24
 5384 0040 1968     	 ldr r1,[r3]
 5385 0042 334B     	 ldr r3,.L259+28
 5386 0044 1A68     	 ldr r2,[r3]
 5387 0046 2C4B     	 ldr r3,.L259+4
 5388 0048 1B78     	 ldrb r3,[r3]
 5389 004a DBB2     	 uxtb r3,r3
 5390 004c 081C     	 add r0,r1,#0
 5391 004e 111C     	 add r1,r2,#0
 5392 0050 1A1C     	 mov r2,r3
 5393 0052 FFF7FEFF 	 bl Steering_Function
 764:../main.c     **** 	NO_New_Input_counter = 0;
 5394              	 .loc 6 764 0
 5395 0056 2A4B     	 ldr r3,.L259+12
 5396 0058 0022     	 mov r2,#0
 5397 005a 1A60     	 str r2,[r3]
 5398 005c 23E0     	 b .L257
 5399              	.L256:
 765:../main.c     **** 
 766:../main.c     **** 	}
 767:../main.c     **** 	else{
 768:../main.c     **** 		NO_New_Input_counter ++;
 5400              	 .loc 6 768 0
 5401 005e 284B     	 ldr r3,.L259+12
 5402 0060 1B68     	 ldr r3,[r3]
 5403 0062 5A1C     	 add r2,r3,#1
 5404 0064 264B     	 ldr r3,.L259+12
 5405 0066 1A60     	 str r2,[r3]
 769:../main.c     **** 		if( NO_New_Input_counter > 10){
 5406              	 .loc 6 769 0
 5407 0068 254B     	 ldr r3,.L259+12
 5408 006a 1B68     	 ldr r3,[r3]
 5409 006c 0A2B     	 cmp r3,#10
 5410 006e 1AD9     	 bls .L257
 770:../main.c     **** 			NO_New_Input_counter = 10;
 5411              	 .loc 6 770 0
 5412 0070 234B     	 ldr r3,.L259+12
 5413 0072 0A22     	 mov r2,#10
 5414 0074 1A60     	 str r2,[r3]
 771:../main.c     **** 
 772:../main.c     **** 			  Steering_Angles[0] = 0;
 5415              	 .loc 6 772 0
 5416 0076 274B     	 ldr r3,.L259+32
 5417 0078 0022     	 mov r2,#0
 5418 007a 1A60     	 str r2,[r3]
 773:../main.c     **** 			  Steering_Angles[1] = 0;
 5419              	 .loc 6 773 0
 5420 007c 254B     	 ldr r3,.L259+32
 5421 007e 0022     	 mov r2,#0
 5422 0080 5A60     	 str r2,[r3,#4]
 774:../main.c     **** 			  Steering_Angles[2] = 0;
 5423              	 .loc 6 774 0
 5424 0082 244B     	 ldr r3,.L259+32
 5425 0084 0022     	 mov r2,#0
 5426 0086 9A60     	 str r2,[r3,#8]
 775:../main.c     **** 			  Steering_Angles[3] = 0;
 5427              	 .loc 6 775 0
 5428 0088 224B     	 ldr r3,.L259+32
 5429 008a 0022     	 mov r2,#0
 5430 008c DA60     	 str r2,[r3,#12]
 776:../main.c     **** 
 777:../main.c     **** 			  Speeds[0] = 0;
 5431              	 .loc 6 777 0
 5432 008e 224B     	 ldr r3,.L259+36
 5433 0090 0022     	 mov r2,#0
 5434 0092 1A60     	 str r2,[r3]
 778:../main.c     **** 			  Speeds[1] = 0;
 5435              	 .loc 6 778 0
 5436 0094 204B     	 ldr r3,.L259+36
 5437 0096 0022     	 mov r2,#0
 5438 0098 5A60     	 str r2,[r3,#4]
 779:../main.c     **** 			  Speeds[2] = 0;
 5439              	 .loc 6 779 0
 5440 009a 1F4B     	 ldr r3,.L259+36
 5441 009c 0022     	 mov r2,#0
 5442 009e 9A60     	 str r2,[r3,#8]
 780:../main.c     **** 			  Speeds[3] = 0;
 5443              	 .loc 6 780 0
 5444 00a0 1D4B     	 ldr r3,.L259+36
 5445 00a2 0022     	 mov r2,#0
 5446 00a4 DA60     	 str r2,[r3,#12]
 5447              	.L257:
 781:../main.c     **** 		}
 782:../main.c     **** 	}
 783:../main.c     **** 
 784:../main.c     **** 	//set Angles PWM
 785:../main.c     **** 	Steering_set_Angles(Steering_Angles);
 5448              	 .loc 6 785 0
 5449 00a6 1B4B     	 ldr r3,.L259+32
 5450 00a8 181C     	 mov r0,r3
 5451 00aa FFF7FEFF 	 bl Steering_set_Angles
 786:../main.c     **** 
 787:../main.c     **** 	Collision_voidance();
 5452              	 .loc 6 787 0
 5453 00ae FFF7FEFF 	 bl Collision_voidance
 788:../main.c     **** 
 789:../main.c     **** 	//send traget speeds to inverter
 790:../main.c     **** 	CAN_send_Speeds(Speeds);
 5454              	 .loc 6 790 0
 5455 00b2 194B     	 ldr r3,.L259+36
 5456 00b4 181C     	 mov r0,r3
 5457 00b6 FFF7FEFF 	 bl CAN_send_Speeds
 791:../main.c     **** 
 792:../main.c     **** 	//
 793:../main.c     **** 	if(reset_distance == 1){
 5458              	 .loc 6 793 0
 5459 00ba 184B     	 ldr r3,.L259+40
 5460 00bc 1B78     	 ldrb r3,[r3]
 5461 00be DBB2     	 uxtb r3,r3
 5462 00c0 012B     	 cmp r3,#1
 5463 00c2 10D1     	 bne .L258
 5464              	.LBB6:
 794:../main.c     **** 		reset_distance = 0;
 5465              	 .loc 6 794 0
 5466 00c4 154B     	 ldr r3,.L259+40
 5467 00c6 0022     	 mov r2,#0
 5468 00c8 1A70     	 strb r2,[r3]
 795:../main.c     **** 		uint8_t all[4] = {1,1,1,1};
 5469              	 .loc 6 795 0
 5470 00ca 3A1D     	 add r2,r7,#4
 5471 00cc 144B     	 ldr r3,.L259+44
 5472 00ce 111C     	 mov r1,r2
 5473 00d0 1A1C     	 mov r2,r3
 5474 00d2 0423     	 mov r3,#4
 5475 00d4 081C     	 mov r0,r1
 5476 00d6 111C     	 mov r1,r2
 5477 00d8 1A1C     	 mov r2,r3
 5478 00da FFF7FEFF 	 bl memcpy
 796:../main.c     **** 		CAN_reset_distance(all);
 5479              	 .loc 6 796 0
 5480 00de 3B1D     	 add r3,r7,#4
 5481 00e0 181C     	 mov r0,r3
 5482 00e2 FFF7FEFF 	 bl CAN_reset_distance
 5483              	.L258:
 5484              	.LBE6:
 797:../main.c     **** 	}
 798:../main.c     **** 
 799:../main.c     **** 
 800:../main.c     **** 	DIGITAL_IO_SetOutputLow(&CALC_TIME_INDICATOR);
 5485              	 .loc 6 800 0
 5486 00e6 034B     	 ldr r3,.L259
 5487 00e8 181C     	 mov r0,r3
 5488 00ea FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 801:../main.c     **** }
 5489              	 .loc 6 801 0
 5490 00ee BD46     	 mov sp,r7
 5491 00f0 02B0     	 add sp,sp,#8
 5492              	 
 5493 00f2 80BD     	 pop {r7,pc}
 5494              	.L260:
 5495              	 .align 2
 5496              	.L259:
 5497 00f4 00000000 	 .word CALC_TIME_INDICATOR
 5498 00f8 00000000 	 .word Steering_mode
 5499 00fc 00000000 	 .word RC_controll
 5500 0100 00000000 	 .word NO_New_Input_counter
 5501 0104 00000000 	 .word RC_no_data_LED
 5502 0108 00000000 	 .word New_Input
 5503 010c 00000000 	 .word Steering_direction
 5504 0110 00000000 	 .word Driving_speed
 5505 0114 00000000 	 .word Steering_Angles
 5506 0118 00000000 	 .word Speeds
 5507 011c 00000000 	 .word reset_distance
 5508 0120 00000000 	 .word .LC0
 5509              	 .cfi_endproc
 5510              	.LFE240:
 5512              	 .section .text.Collision_voidance,"ax",%progbits
 5513              	 .align 2
 5514              	 .global Collision_voidance
 5515              	 .code 16
 5516              	 .thumb_func
 5518              	Collision_voidance:
 5519              	.LFB241:
 802:../main.c     **** 
 803:../main.c     **** void Collision_voidance(){
 5520              	 .loc 6 803 0
 5521              	 .cfi_startproc
 5522 0000 F0B5     	 push {r4,r5,r6,r7,lr}
 5523              	.LCFI77:
 5524              	 .cfi_def_cfa_offset 20
 5525              	 .cfi_offset 4,-20
 5526              	 .cfi_offset 5,-16
 5527              	 .cfi_offset 6,-12
 5528              	 .cfi_offset 7,-8
 5529              	 .cfi_offset 14,-4
 5530 0002 83B0     	 sub sp,sp,#12
 5531              	.LCFI78:
 5532              	 .cfi_def_cfa_offset 32
 5533 0004 00AF     	 add r7,sp,#0
 5534              	.LCFI79:
 5535              	 .cfi_def_cfa_register 7
 804:../main.c     **** 	DIGITAL_IO_SetOutputLow(&LED_COLLISION_AVOID);
 5536              	 .loc 6 804 0
 5537 0006 8D4B     	 ldr r3,.L286
 5538 0008 181C     	 mov r0,r3
 5539 000a FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 805:../main.c     **** 	CAN_Ultrasonic_No_messasge_count ++;
 5540              	 .loc 6 805 0
 5541 000e 8C4B     	 ldr r3,.L286+4
 5542 0010 1B78     	 ldrb r3,[r3]
 5543 0012 DBB2     	 uxtb r3,r3
 5544 0014 0133     	 add r3,r3,#1
 5545 0016 DAB2     	 uxtb r2,r3
 5546 0018 894B     	 ldr r3,.L286+4
 5547 001a 1A70     	 strb r2,[r3]
 806:../main.c     **** 	if(CAN_Ultrasonic_No_messasge_count > 200) {
 5548              	 .loc 6 806 0
 5549 001c 884B     	 ldr r3,.L286+4
 5550 001e 1B78     	 ldrb r3,[r3]
 5551 0020 DBB2     	 uxtb r3,r3
 5552 0022 C82B     	 cmp r3,#200
 5553 0024 03D9     	 bls .L262
 807:../main.c     **** 		CAN_Ultrasonic_No_messasge_count = 200;
 5554              	 .loc 6 807 0
 5555 0026 864B     	 ldr r3,.L286+4
 5556 0028 C822     	 mov r2,#200
 5557 002a 1A70     	 strb r2,[r3]
 808:../main.c     **** 		return;
 5558              	 .loc 6 808 0
 5559 002c 03E1     	 b .L261
 5560              	.L262:
 809:../main.c     **** 	}
 810:../main.c     **** 
 811:../main.c     **** 	avg_Speeds = average(Speeds,4);
 5561              	 .loc 6 811 0
 5562 002e 854B     	 ldr r3,.L286+8
 5563 0030 181C     	 mov r0,r3
 5564 0032 0421     	 mov r1,#4
 5565 0034 FFF7FEFF 	 bl average
 5566 0038 021C     	 add r2,r0,#0
 5567 003a 834B     	 ldr r3,.L286+12
 5568 003c 1A60     	 str r2,[r3]
 812:../main.c     **** 
 813:../main.c     **** 	switch(Steering_mode) // options 'Front'; 'Rear'; '4_Wheel'; 'Carb'; 'Rotate'
 5569              	 .loc 6 813 0
 5570 003e 834B     	 ldr r3,.L286+16
 5571 0040 1B78     	 ldrb r3,[r3]
 5572 0042 DBB2     	 uxtb r3,r3
 5573 0044 052B     	 cmp r3,#5
 5574 0046 5BD8     	 bhi .L264
 5575 0048 9A00     	 lsl r2,r3,#2
 5576 004a 814B     	 ldr r3,.L286+20
 5577 004c D318     	 add r3,r2,r3
 5578 004e 1B68     	 ldr r3,[r3]
 5579 0050 9F46     	 mov pc,r3
 5580              	 .section .rodata.Collision_voidance,"a",%progbits
 5581              	 .align 2
 5582              	.L266:
 5583 0000 00010000 	 .word .L264
 5584 0004 0E010000 	 .word .L285
 5585 0008 0E010000 	 .word .L285
 5586 000c 0E010000 	 .word .L285
 5587 0010 52000000 	 .word .L268
 5588 0014 0E010000 	 .word .L285
 5589              	 .section .text.Collision_voidance
 5590              	.L268:
 814:../main.c     **** 		{
 815:../main.c     **** 			case FRONT://#############################################################
 816:../main.c     **** 				//act_trajctory_x =
 817:../main.c     **** 				break;
 818:../main.c     **** 
 819:../main.c     **** 			case BACK:// rear #############################################################
 820:../main.c     **** 
 821:../main.c     **** 
 822:../main.c     **** 			case ALL_WHEEL: // 4 wheel #############################################################
 823:../main.c     **** 
 824:../main.c     **** 				break;
 825:../main.c     **** 
 826:../main.c     **** 			case CRAB:  //carb //#############################################################
 827:../main.c     **** 				act_trajctory_x = avg_Speeds * cos(Steering_Angles[0] / RAD_TO_DEG);
 5591              	 .loc 6 827 0
 5592 0052 7D4B     	 ldr r3,.L286+12
 5593 0054 1B68     	 ldr r3,[r3]
 5594 0056 181C     	 add r0,r3,#0
 5595 0058 FFF7FEFF 	 bl __aeabi_f2d
 5596 005c 051C     	 mov r5,r0
 5597 005e 0E1C     	 mov r6,r1
 5598 0060 7C4B     	 ldr r3,.L286+24
 5599 0062 1B68     	 ldr r3,[r3]
 5600 0064 181C     	 add r0,r3,#0
 5601 0066 FFF7FEFF 	 bl __aeabi_f2d
 5602 006a 031C     	 mov r3,r0
 5603 006c 0C1C     	 mov r4,r1
 5604 006e 181C     	 mov r0,r3
 5605 0070 211C     	 mov r1,r4
 5606 0072 794A     	 ldr r2,.L286+28
 5607 0074 794B     	 ldr r3,.L286+32
 5608 0076 FFF7FEFF 	 bl __aeabi_ddiv
 5609 007a 031C     	 mov r3,r0
 5610 007c 0C1C     	 mov r4,r1
 5611 007e 181C     	 mov r0,r3
 5612 0080 211C     	 mov r1,r4
 5613 0082 FFF7FEFF 	 bl cos
 5614 0086 031C     	 mov r3,r0
 5615 0088 0C1C     	 mov r4,r1
 5616 008a 281C     	 mov r0,r5
 5617 008c 311C     	 mov r1,r6
 5618 008e 1A1C     	 mov r2,r3
 5619 0090 231C     	 mov r3,r4
 5620 0092 FFF7FEFF 	 bl __aeabi_dmul
 5621 0096 031C     	 mov r3,r0
 5622 0098 0C1C     	 mov r4,r1
 5623 009a 181C     	 mov r0,r3
 5624 009c 211C     	 mov r1,r4
 5625 009e FFF7FEFF 	 bl __aeabi_d2f
 5626 00a2 021C     	 add r2,r0,#0
 5627 00a4 6E4B     	 ldr r3,.L286+36
 5628 00a6 1A60     	 str r2,[r3]
 828:../main.c     **** 				act_trajctory_y = avg_Speeds * sin(Steering_Angles[0] / RAD_TO_DEG);
 5629              	 .loc 6 828 0
 5630 00a8 674B     	 ldr r3,.L286+12
 5631 00aa 1B68     	 ldr r3,[r3]
 5632 00ac 181C     	 add r0,r3,#0
 5633 00ae FFF7FEFF 	 bl __aeabi_f2d
 5634 00b2 051C     	 mov r5,r0
 5635 00b4 0E1C     	 mov r6,r1
 5636 00b6 674B     	 ldr r3,.L286+24
 5637 00b8 1B68     	 ldr r3,[r3]
 5638 00ba 181C     	 add r0,r3,#0
 5639 00bc FFF7FEFF 	 bl __aeabi_f2d
 5640 00c0 031C     	 mov r3,r0
 5641 00c2 0C1C     	 mov r4,r1
 5642 00c4 181C     	 mov r0,r3
 5643 00c6 211C     	 mov r1,r4
 5644 00c8 634A     	 ldr r2,.L286+28
 5645 00ca 644B     	 ldr r3,.L286+32
 5646 00cc FFF7FEFF 	 bl __aeabi_ddiv
 5647 00d0 031C     	 mov r3,r0
 5648 00d2 0C1C     	 mov r4,r1
 5649 00d4 181C     	 mov r0,r3
 5650 00d6 211C     	 mov r1,r4
 5651 00d8 FFF7FEFF 	 bl sin
 5652 00dc 031C     	 mov r3,r0
 5653 00de 0C1C     	 mov r4,r1
 5654 00e0 281C     	 mov r0,r5
 5655 00e2 311C     	 mov r1,r6
 5656 00e4 1A1C     	 mov r2,r3
 5657 00e6 231C     	 mov r3,r4
 5658 00e8 FFF7FEFF 	 bl __aeabi_dmul
 5659 00ec 031C     	 mov r3,r0
 5660 00ee 0C1C     	 mov r4,r1
 5661 00f0 181C     	 mov r0,r3
 5662 00f2 211C     	 mov r1,r4
 5663 00f4 FFF7FEFF 	 bl __aeabi_d2f
 5664 00f8 021C     	 add r2,r0,#0
 5665 00fa 5A4B     	 ldr r3,.L286+40
 5666 00fc 1A60     	 str r2,[r3]
 829:../main.c     **** 
 830:../main.c     **** 				break;
 5667              	 .loc 6 830 0
 5668 00fe 07E0     	 b .L270
 5669              	.L264:
 831:../main.c     **** 
 832:../main.c     **** 			case ROTATE: // rotate ############################################################
 833:../main.c     **** 
 834:../main.c     **** 				break;
 835:../main.c     **** 
 836:../main.c     **** 			default :
 837:../main.c     **** 
 838:../main.c     **** 			act_trajctory_x = 0;
 5670              	 .loc 6 838 0
 5671 0100 574B     	 ldr r3,.L286+36
 5672 0102 0022     	 mov r2,#0
 5673 0104 1A60     	 str r2,[r3]
 839:../main.c     **** 			act_trajctory_y = 0;
 5674              	 .loc 6 839 0
 5675 0106 574B     	 ldr r3,.L286+40
 5676 0108 0022     	 mov r2,#0
 5677 010a 1A60     	 str r2,[r3]
 5678 010c 00E0     	 b .L270
 5679              	.L285:
 817:../main.c     **** 
 5680              	 .loc 6 817 0
 5681 010e C046     	 mov r8,r8
 5682              	.L270:
 840:../main.c     **** 		}
 841:../main.c     **** 
 842:../main.c     **** 	if(Steering_mode == CRAB){
 5683              	 .loc 6 842 0
 5684 0110 4E4B     	 ldr r3,.L286+16
 5685 0112 1B78     	 ldrb r3,[r3]
 5686 0114 DBB2     	 uxtb r3,r3
 5687 0116 042B     	 cmp r3,#4
 5688 0118 00D0     	 beq .LCB4712
 5689 011a 7CE0     	 b .L271
 5690              	.LCB4712:
 843:../main.c     **** 		if(Obstacel_valid[0] == 1){
 5691              	 .loc 6 843 0
 5692 011c 524B     	 ldr r3,.L286+44
 5693 011e 1B78     	 ldrb r3,[r3]
 5694 0120 012B     	 cmp r3,#1
 5695 0122 00D0     	 beq .LCB4716
 5696 0124 77E0     	 b .L271
 5697              	.LCB4716:
 844:../main.c     **** 			if(Obstacel_F[0] < CA_START){
 5698              	 .loc 6 844 0
 5699 0126 514B     	 ldr r3,.L286+48
 5700 0128 1B68     	 ldr r3,[r3]
 5701 012a 181C     	 add r0,r3,#0
 5702 012c FE21     	 mov r1,#254
 5703 012e 8905     	 lsl r1,r1,#22
 5704 0130 FFF7FEFF 	 bl __aeabi_fcmplt
 5705 0134 031E     	 sub r3,r0,#0
 5706 0136 6ED0     	 beq .L271
 845:../main.c     **** 				if(act_trajctory_x > 0.02){
 5707              	 .loc 6 845 0
 5708 0138 494B     	 ldr r3,.L286+36
 5709 013a 1B68     	 ldr r3,[r3]
 5710 013c 181C     	 add r0,r3,#0
 5711 013e FFF7FEFF 	 bl __aeabi_f2d
 5712 0142 031C     	 mov r3,r0
 5713 0144 0C1C     	 mov r4,r1
 5714 0146 181C     	 mov r0,r3
 5715 0148 211C     	 mov r1,r4
 5716 014a 494A     	 ldr r2,.L286+52
 5717 014c 494B     	 ldr r3,.L286+56
 5718 014e FFF7FEFF 	 bl __aeabi_dcmpgt
 5719 0152 031E     	 sub r3,r0,#0
 5720 0154 5FD0     	 beq .L271
 846:../main.c     **** 				if(act_trajctory_x > Obstacel_F[0] - CA_STOP){
 5721              	 .loc 6 846 0
 5722 0156 424B     	 ldr r3,.L286+36
 5723 0158 1B68     	 ldr r3,[r3]
 5724 015a 181C     	 add r0,r3,#0
 5725 015c FFF7FEFF 	 bl __aeabi_f2d
 5726 0160 051C     	 mov r5,r0
 5727 0162 0E1C     	 mov r6,r1
 5728 0164 414B     	 ldr r3,.L286+48
 5729 0166 1B68     	 ldr r3,[r3]
 5730 0168 181C     	 add r0,r3,#0
 5731 016a FFF7FEFF 	 bl __aeabi_f2d
 5732 016e 031C     	 mov r3,r0
 5733 0170 0C1C     	 mov r4,r1
 5734 0172 181C     	 mov r0,r3
 5735 0174 211C     	 mov r1,r4
 5736 0176 404A     	 ldr r2,.L286+60
 5737 0178 404B     	 ldr r3,.L286+64
 5738 017a FFF7FEFF 	 bl __aeabi_dsub
 5739 017e 031C     	 mov r3,r0
 5740 0180 0C1C     	 mov r4,r1
 5741 0182 281C     	 mov r0,r5
 5742 0184 311C     	 mov r1,r6
 5743 0186 1A1C     	 mov r2,r3
 5744 0188 231C     	 mov r3,r4
 5745 018a FFF7FEFF 	 bl __aeabi_dcmpgt
 5746 018e 031E     	 sub r3,r0,#0
 5747 0190 41D0     	 beq .L271
 5748              	.LBB7:
 847:../main.c     **** 					DIGITAL_IO_SetOutputHigh(&LED_COLLISION_AVOID);
 5749              	 .loc 6 847 0
 5750 0192 2A4B     	 ldr r3,.L286
 5751 0194 181C     	 mov r0,r3
 5752 0196 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 848:../main.c     **** 					uint8_t i;
 849:../main.c     **** 					for(i = 0; i < 4; i ++){
 5753              	 .loc 6 849 0
 5754 019a FB1D     	 add r3,r7,#7
 5755 019c 0022     	 mov r2,#0
 5756 019e 1A70     	 strb r2,[r3]
 5757 01a0 35E0     	 b .L275
 5758              	.L279:
 850:../main.c     **** 						if(Obstacel_F[0] < CA_STOP) Speeds[i] = 0;
 5759              	 .loc 6 850 0
 5760 01a2 324B     	 ldr r3,.L286+48
 5761 01a4 1B68     	 ldr r3,[r3]
 5762 01a6 181C     	 add r0,r3,#0
 5763 01a8 FFF7FEFF 	 bl __aeabi_f2d
 5764 01ac 031C     	 mov r3,r0
 5765 01ae 0C1C     	 mov r4,r1
 5766 01b0 181C     	 mov r0,r3
 5767 01b2 211C     	 mov r1,r4
 5768 01b4 304A     	 ldr r2,.L286+60
 5769 01b6 314B     	 ldr r3,.L286+64
 5770 01b8 FFF7FEFF 	 bl __aeabi_dcmplt
 5771 01bc 031E     	 sub r3,r0,#0
 5772 01be 06D0     	 beq .L284
 5773              	 .loc 6 850 0 is_stmt 0 discriminator 1
 5774 01c0 FB1D     	 add r3,r7,#7
 5775 01c2 1A78     	 ldrb r2,[r3]
 5776 01c4 1F4B     	 ldr r3,.L286+8
 5777 01c6 9200     	 lsl r2,r2,#2
 5778 01c8 0021     	 mov r1,#0
 5779 01ca D150     	 str r1,[r2,r3]
 5780 01cc 1AE0     	 b .L278
 5781              	.L284:
 851:../main.c     **** 						else Speeds[i] = copysign(Obstacel_F[0],1) - CA_STOP;
 5782              	 .loc 6 851 0 is_stmt 1
 5783 01ce FB1D     	 add r3,r7,#7
 5784 01d0 1C78     	 ldrb r4,[r3]
 5785 01d2 264B     	 ldr r3,.L286+48
 5786 01d4 1B68     	 ldr r3,[r3]
 5787 01d6 5B00     	 lsl r3,r3,#1
 5788 01d8 5B08     	 lsr r3,r3,#1
 5789 01da 181C     	 add r0,r3,#0
 5790 01dc FFF7FEFF 	 bl __aeabi_f2d
 5791 01e0 021C     	 mov r2,r0
 5792 01e2 0B1C     	 mov r3,r1
 5793 01e4 101C     	 mov r0,r2
 5794 01e6 191C     	 mov r1,r3
 5795 01e8 234A     	 ldr r2,.L286+60
 5796 01ea 244B     	 ldr r3,.L286+64
 5797 01ec FFF7FEFF 	 bl __aeabi_dsub
 5798 01f0 021C     	 mov r2,r0
 5799 01f2 0B1C     	 mov r3,r1
 5800 01f4 101C     	 mov r0,r2
 5801 01f6 191C     	 mov r1,r3
 5802 01f8 FFF7FEFF 	 bl __aeabi_d2f
 5803 01fc 011C     	 add r1,r0,#0
 5804 01fe 114B     	 ldr r3,.L286+8
 5805 0200 A200     	 lsl r2,r4,#2
 5806 0202 D150     	 str r1,[r2,r3]
 5807              	.L278:
 849:../main.c     **** 						if(Obstacel_F[0] < CA_STOP) Speeds[i] = 0;
 5808              	 .loc 6 849 0 discriminator 2
 5809 0204 FB1D     	 add r3,r7,#7
 5810 0206 1A78     	 ldrb r2,[r3]
 5811 0208 FB1D     	 add r3,r7,#7
 5812 020a 0132     	 add r2,r2,#1
 5813 020c 1A70     	 strb r2,[r3]
 5814              	.L275:
 849:../main.c     **** 						if(Obstacel_F[0] < CA_STOP) Speeds[i] = 0;
 5815              	 .loc 6 849 0 is_stmt 0 discriminator 1
 5816 020e FB1D     	 add r3,r7,#7
 5817 0210 1B78     	 ldrb r3,[r3]
 5818 0212 032B     	 cmp r3,#3
 5819 0214 C5D9     	 bls .L279
 5820              	.L271:
 5821              	.LBE7:
 852:../main.c     **** 					}
 853:../main.c     **** 
 854:../main.c     **** 				}
 855:../main.c     **** 				}
 856:../main.c     **** 			}
 857:../main.c     **** 		}
 858:../main.c     **** 	}
 859:../main.c     **** 
 860:../main.c     **** 
 861:../main.c     **** 	speed_fl = Speeds[0];
 5822              	 .loc 6 861 0 is_stmt 1
 5823 0216 0B4B     	 ldr r3,.L286+8
 5824 0218 1A68     	 ldr r2,[r3]
 5825 021a 194B     	 ldr r3,.L286+68
 5826 021c 1A60     	 str r2,[r3]
 862:../main.c     **** 	speed_fr = Speeds[1];
 5827              	 .loc 6 862 0
 5828 021e 094B     	 ldr r3,.L286+8
 5829 0220 5A68     	 ldr r2,[r3,#4]
 5830 0222 184B     	 ldr r3,.L286+72
 5831 0224 1A60     	 str r2,[r3]
 863:../main.c     **** 	speed_rl = Speeds[2];
 5832              	 .loc 6 863 0
 5833 0226 074B     	 ldr r3,.L286+8
 5834 0228 9A68     	 ldr r2,[r3,#8]
 5835 022a 174B     	 ldr r3,.L286+76
 5836 022c 1A60     	 str r2,[r3]
 864:../main.c     **** 	speed_rr = Speeds[3];
 5837              	 .loc 6 864 0
 5838 022e 054B     	 ldr r3,.L286+8
 5839 0230 DA68     	 ldr r2,[r3,#12]
 5840 0232 164B     	 ldr r3,.L286+80
 5841 0234 1A60     	 str r2,[r3]
 5842              	.L261:
 865:../main.c     **** }
 5843              	 .loc 6 865 0
 5844 0236 BD46     	 mov sp,r7
 5845 0238 03B0     	 add sp,sp,#12
 5846              	 
 5847 023a F0BD     	 pop {r4,r5,r6,r7,pc}
 5848              	.L287:
 5849              	 .align 2
 5850              	.L286:
 5851 023c 00000000 	 .word LED_COLLISION_AVOID
 5852 0240 00000000 	 .word CAN_Ultrasonic_No_messasge_count
 5853 0244 00000000 	 .word Speeds
 5854 0248 00000000 	 .word avg_Speeds
 5855 024c 00000000 	 .word Steering_mode
 5856 0250 00000000 	 .word .L266
 5857 0254 00000000 	 .word Steering_Angles
 5858 0258 D9CEF753 	 .word 1408749273
 5859 025c E3A54C40 	 .word 1078765027
 5860 0260 00000000 	 .word act_trajctory_x
 5861 0264 00000000 	 .word act_trajctory_y
 5862 0268 00000000 	 .word Obstacel_valid
 5863 026c 00000000 	 .word Obstacel_F
 5864 0270 7B14AE47 	 .word 1202590843
 5865 0274 E17A943F 	 .word 1066695393
 5866 0278 9A999999 	 .word -1717986918
 5867 027c 9999C93F 	 .word 1070176665
 5868 0280 00000000 	 .word speed_fl
 5869 0284 00000000 	 .word speed_fr
 5870 0288 00000000 	 .word speed_rl
 5871 028c 00000000 	 .word speed_rr
 5872              	 .cfi_endproc
 5873              	.LFE241:
 5875              	 .section .text.Servo_NP_setting,"ax",%progbits
 5876              	 .align 2
 5877              	 .global Servo_NP_setting
 5878              	 .code 16
 5879              	 .thumb_func
 5881              	Servo_NP_setting:
 5882              	.LFB242:
 866:../main.c     **** 
 867:../main.c     **** 
 868:../main.c     **** void Servo_NP_setting(void){
 5883              	 .loc 6 868 0
 5884              	 .cfi_startproc
 5885 0000 80B5     	 push {r7,lr}
 5886              	.LCFI80:
 5887              	 .cfi_def_cfa_offset 8
 5888              	 .cfi_offset 7,-8
 5889              	 .cfi_offset 14,-4
 5890 0002 00AF     	 add r7,sp,#0
 5891              	.LCFI81:
 5892              	 .cfi_def_cfa_register 7
 869:../main.c     **** 	  NP[0] = NPfl;
 5893              	 .loc 6 869 0
 5894 0004 084B     	 ldr r3,.L289
 5895 0006 1A68     	 ldr r2,[r3]
 5896 0008 084B     	 ldr r3,.L289+4
 5897 000a 1A60     	 str r2,[r3]
 870:../main.c     **** 	  NP[1] = NPfr;
 5898              	 .loc 6 870 0
 5899 000c 084B     	 ldr r3,.L289+8
 5900 000e 1A68     	 ldr r2,[r3]
 5901 0010 064B     	 ldr r3,.L289+4
 5902 0012 5A60     	 str r2,[r3,#4]
 871:../main.c     **** 	  NP[2] = NPrl;
 5903              	 .loc 6 871 0
 5904 0014 074B     	 ldr r3,.L289+12
 5905 0016 1A68     	 ldr r2,[r3]
 5906 0018 044B     	 ldr r3,.L289+4
 5907 001a 9A60     	 str r2,[r3,#8]
 872:../main.c     **** 	  NP[3] = NPrr;
 5908              	 .loc 6 872 0
 5909 001c 064B     	 ldr r3,.L289+16
 5910 001e 1A68     	 ldr r2,[r3]
 5911 0020 024B     	 ldr r3,.L289+4
 5912 0022 DA60     	 str r2,[r3,#12]
 873:../main.c     **** }
 5913              	 .loc 6 873 0
 5914 0024 BD46     	 mov sp,r7
 5915              	 
 5916 0026 80BD     	 pop {r7,pc}
 5917              	.L290:
 5918              	 .align 2
 5919              	.L289:
 5920 0028 00000000 	 .word NPfl
 5921 002c 00000000 	 .word NP
 5922 0030 00000000 	 .word NPfr
 5923 0034 00000000 	 .word NPrl
 5924 0038 00000000 	 .word NPrr
 5925              	 .cfi_endproc
 5926              	.LFE242:
 5928              	 .section .text.average,"ax",%progbits
 5929              	 .align 2
 5930              	 .global average
 5931              	 .code 16
 5932              	 .thumb_func
 5934              	average:
 5935              	.LFB243:
 874:../main.c     **** 
 875:../main.c     **** float average(float a[],int num_values) {
 5936              	 .loc 6 875 0
 5937              	 .cfi_startproc
 5938 0000 80B5     	 push {r7,lr}
 5939              	.LCFI82:
 5940              	 .cfi_def_cfa_offset 8
 5941              	 .cfi_offset 7,-8
 5942              	 .cfi_offset 14,-4
 5943 0002 84B0     	 sub sp,sp,#16
 5944              	.LCFI83:
 5945              	 .cfi_def_cfa_offset 24
 5946 0004 00AF     	 add r7,sp,#0
 5947              	.LCFI84:
 5948              	 .cfi_def_cfa_register 7
 5949 0006 7860     	 str r0,[r7,#4]
 5950 0008 3960     	 str r1,[r7]
 876:../main.c     ****     float sum = 0;
 5951              	 .loc 6 876 0
 5952 000a 0023     	 mov r3,#0
 5953 000c FB60     	 str r3,[r7,#12]
 877:../main.c     ****     int i;
 878:../main.c     ****     for(i = 0; i < num_values; i++){
 5954              	 .loc 6 878 0
 5955 000e 0023     	 mov r3,#0
 5956 0010 BB60     	 str r3,[r7,#8]
 5957 0012 0DE0     	 b .L292
 5958              	.L293:
 879:../main.c     ****         sum += a[i];
 5959              	 .loc 6 879 0 discriminator 3
 5960 0014 BB68     	 ldr r3,[r7,#8]
 5961 0016 9B00     	 lsl r3,r3,#2
 5962 0018 7A68     	 ldr r2,[r7,#4]
 5963 001a D318     	 add r3,r2,r3
 5964 001c 1B68     	 ldr r3,[r3]
 5965 001e F868     	 ldr r0,[r7,#12]
 5966 0020 191C     	 add r1,r3,#0
 5967 0022 FFF7FEFF 	 bl __aeabi_fadd
 5968 0026 031C     	 add r3,r0,#0
 5969 0028 FB60     	 str r3,[r7,#12]
 878:../main.c     ****         sum += a[i];
 5970              	 .loc 6 878 0 discriminator 3
 5971 002a BB68     	 ldr r3,[r7,#8]
 5972 002c 0133     	 add r3,r3,#1
 5973 002e BB60     	 str r3,[r7,#8]
 5974              	.L292:
 878:../main.c     ****         sum += a[i];
 5975              	 .loc 6 878 0 is_stmt 0 discriminator 1
 5976 0030 BA68     	 ldr r2,[r7,#8]
 5977 0032 3B68     	 ldr r3,[r7]
 5978 0034 9A42     	 cmp r2,r3
 5979 0036 EDDB     	 blt .L293
 880:../main.c     ****     }
 881:../main.c     ****     return sum / num_values;
 5980              	 .loc 6 881 0 is_stmt 1
 5981 0038 3868     	 ldr r0,[r7]
 5982 003a FFF7FEFF 	 bl __aeabi_i2f
 5983 003e 031C     	 add r3,r0,#0
 5984 0040 F868     	 ldr r0,[r7,#12]
 5985 0042 191C     	 add r1,r3,#0
 5986 0044 FFF7FEFF 	 bl __aeabi_fdiv
 5987 0048 031C     	 add r3,r0,#0
 882:../main.c     **** }
 5988              	 .loc 6 882 0
 5989 004a 181C     	 add r0,r3,#0
 5990 004c BD46     	 mov sp,r7
 5991 004e 04B0     	 add sp,sp,#16
 5992              	 
 5993 0050 80BD     	 pop {r7,pc}
 5994              	 .cfi_endproc
 5995              	.LFE243:
 5997 0052 C046     	 .section .text.mode_led,"ax",%progbits
 5998              	 .align 2
 5999              	 .global mode_led
 6000              	 .code 16
 6001              	 .thumb_func
 6003              	mode_led:
 6004              	.LFB244:
 883:../main.c     **** 
 884:../main.c     **** void mode_led(uint8_t var){
 6005              	 .loc 6 884 0
 6006              	 .cfi_startproc
 6007 0000 80B5     	 push {r7,lr}
 6008              	.LCFI85:
 6009              	 .cfi_def_cfa_offset 8
 6010              	 .cfi_offset 7,-8
 6011              	 .cfi_offset 14,-4
 6012 0002 82B0     	 sub sp,sp,#8
 6013              	.LCFI86:
 6014              	 .cfi_def_cfa_offset 16
 6015 0004 00AF     	 add r7,sp,#0
 6016              	.LCFI87:
 6017              	 .cfi_def_cfa_register 7
 6018 0006 021C     	 mov r2,r0
 6019 0008 FB1D     	 add r3,r7,#7
 6020 000a 1A70     	 strb r2,[r3]
 885:../main.c     **** 	if(CHECK_BIT(var,0)){
 6021              	 .loc 6 885 0
 6022 000c FB1D     	 add r3,r7,#7
 6023 000e 1B78     	 ldrb r3,[r3]
 6024 0010 0122     	 mov r2,#1
 6025 0012 1340     	 and r3,r2
 6026 0014 04D0     	 beq .L296
 886:../main.c     **** 		DIGITAL_IO_SetOutputLow(&MODE_001);
 6027              	 .loc 6 886 0
 6028 0016 174B     	 ldr r3,.L302
 6029 0018 181C     	 mov r0,r3
 6030 001a FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 6031 001e 03E0     	 b .L297
 6032              	.L296:
 887:../main.c     **** 	}
 888:../main.c     **** 	else{
 889:../main.c     **** 		DIGITAL_IO_SetOutputHigh(&MODE_001);
 6033              	 .loc 6 889 0
 6034 0020 144B     	 ldr r3,.L302
 6035 0022 181C     	 mov r0,r3
 6036 0024 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 6037              	.L297:
 890:../main.c     **** 	}
 891:../main.c     **** 
 892:../main.c     **** 	if(CHECK_BIT(var,1)){
 6038              	 .loc 6 892 0
 6039 0028 FB1D     	 add r3,r7,#7
 6040 002a 1B78     	 ldrb r3,[r3]
 6041 002c 5B08     	 lsr r3,r3,#1
 6042 002e DBB2     	 uxtb r3,r3
 6043 0030 1A1C     	 mov r2,r3
 6044 0032 0123     	 mov r3,#1
 6045 0034 1340     	 and r3,r2
 6046 0036 04D0     	 beq .L298
 893:../main.c     **** 		DIGITAL_IO_SetOutputLow(&MODE_010);
 6047              	 .loc 6 893 0
 6048 0038 0F4B     	 ldr r3,.L302+4
 6049 003a 181C     	 mov r0,r3
 6050 003c FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 6051 0040 03E0     	 b .L299
 6052              	.L298:
 894:../main.c     **** 	}
 895:../main.c     **** 	else{
 896:../main.c     **** 		DIGITAL_IO_SetOutputHigh(&MODE_010);
 6053              	 .loc 6 896 0
 6054 0042 0D4B     	 ldr r3,.L302+4
 6055 0044 181C     	 mov r0,r3
 6056 0046 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 6057              	.L299:
 897:../main.c     **** 	}
 898:../main.c     **** 
 899:../main.c     **** 	if(CHECK_BIT(var,2)){
 6058              	 .loc 6 899 0
 6059 004a FB1D     	 add r3,r7,#7
 6060 004c 1B78     	 ldrb r3,[r3]
 6061 004e 9B08     	 lsr r3,r3,#2
 6062 0050 DBB2     	 uxtb r3,r3
 6063 0052 1A1C     	 mov r2,r3
 6064 0054 0123     	 mov r3,#1
 6065 0056 1340     	 and r3,r2
 6066 0058 04D0     	 beq .L300
 900:../main.c     **** 		DIGITAL_IO_SetOutputLow(&MODE_100);
 6067              	 .loc 6 900 0
 6068 005a 084B     	 ldr r3,.L302+8
 6069 005c 181C     	 mov r0,r3
 6070 005e FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 6071 0062 03E0     	 b .L295
 6072              	.L300:
 901:../main.c     **** 	}
 902:../main.c     **** 	else{
 903:../main.c     **** 		DIGITAL_IO_SetOutputHigh(&MODE_100);
 6073              	 .loc 6 903 0
 6074 0064 054B     	 ldr r3,.L302+8
 6075 0066 181C     	 mov r0,r3
 6076 0068 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 6077              	.L295:
 904:../main.c     **** 	}
 905:../main.c     **** }
 6078              	 .loc 6 905 0
 6079 006c BD46     	 mov sp,r7
 6080 006e 02B0     	 add sp,sp,#8
 6081              	 
 6082 0070 80BD     	 pop {r7,pc}
 6083              	.L303:
 6084 0072 C046     	 .align 2
 6085              	.L302:
 6086 0074 00000000 	 .word MODE_001
 6087 0078 00000000 	 .word MODE_010
 6088 007c 00000000 	 .word MODE_100
 6089              	 .cfi_endproc
 6090              	.LFE244:
 6092              	 .text
 6093              	.Letext0:
 6094              	 .file 7 "c:\\dave\\dave-ide-4.4.2-64bit\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 6095              	 .file 8 "c:\\dave\\dave-ide-4.4.2-64bit\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 6096              	 .file 9 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/CMSIS/Infineon/XMC1400_series/Include/XMC1400.h"
 6097              	 .file 10 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc/xmc1_scu.h"
 6098              	 .file 11 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc/xmc_can.h"
 6099              	 .file 12 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/GLOBAL_CAN/global_can.h"
 6100              	 .file 13 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc/xmc1_gpio.h"
 6101              	 .file 14 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/CAN_NODE/can_node.h"
 6102              	 .file 15 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc/xmc_ccu4.h"
 6103              	 .file 16 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/GLOBAL_CCU4/global_ccu4.h"
 6104              	 .file 17 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PWM/pwm.h"
 6105              	 .file 18 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/CAPTURE/capture.h"
 6106              	 .file 19 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc/xmc_eru.h"
 6107              	 .file 20 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DAVE.h"
 6108              	 .file 21 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/CMSIS/Include/cmsis_gcc.h"
 6109              	 .file 22 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/CMSIS/Infineon/XMC1400_series/Include/system_XMC1400.h"
 6110              	 .file 23 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/CAN_NODE/can_node_extern.h"
 6111              	 .file 24 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PWM/PWM_Extern.h"
 6112              	 .file 25 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/CAPTURE/capture_extern.h"
 6113              	 .file 26 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO/digital_io_extern.h"
 6114              	 .file 27 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT/pin_interrupt_extern.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
    {standard input}:18     .text.XMC_GPIO_SetOutputHigh:00000000 $t
    {standard input}:22     .text.XMC_GPIO_SetOutputHigh:00000000 XMC_GPIO_SetOutputHigh
    {standard input}:58     .text.XMC_GPIO_SetOutputLow:00000000 $t
    {standard input}:62     .text.XMC_GPIO_SetOutputLow:00000000 XMC_GPIO_SetOutputLow
    {standard input}:98     .text.XMC_GPIO_GetInput:00000000 $t
    {standard input}:102    .text.XMC_GPIO_GetInput:00000000 XMC_GPIO_GetInput
    {standard input}:140    .text.DIGITAL_IO_SetOutputHigh:00000000 $t
    {standard input}:144    .text.DIGITAL_IO_SetOutputHigh:00000000 DIGITAL_IO_SetOutputHigh
    {standard input}:178    .text.DIGITAL_IO_SetOutputLow:00000000 $t
    {standard input}:182    .text.DIGITAL_IO_SetOutputLow:00000000 DIGITAL_IO_SetOutputLow
    {standard input}:215    .text.PIN_INTERRUPT_GetPinValue:00000000 $t
    {standard input}:219    .text.PIN_INTERRUPT_GetPinValue:00000000 PIN_INTERRUPT_GetPinValue
    {standard input}:255    .text.XMC_WDT_Start:00000000 $t
    {standard input}:259    .text.XMC_WDT_Start:00000000 XMC_WDT_Start
    {standard input}:286    .text.XMC_WDT_Start:00000014 $d
    {standard input}:291    .text.XMC_WDT_Service:00000000 $t
    {standard input}:295    .text.XMC_WDT_Service:00000000 XMC_WDT_Service
    {standard input}:318    .text.XMC_WDT_Service:00000010 $d
    {standard input}:324    .text.XMC_WDT_ClearAlarm:00000000 $t
    {standard input}:328    .text.XMC_WDT_ClearAlarm:00000000 XMC_WDT_ClearAlarm
    {standard input}:351    .text.XMC_WDT_ClearAlarm:00000010 $d
    {standard input}:356    .text.WATCHDOG_Start:00000000 $t
    {standard input}:360    .text.WATCHDOG_Start:00000000 WATCHDOG_Start
    {standard input}:383    .text.WATCHDOG_Service:00000000 $t
    {standard input}:387    .text.WATCHDOG_Service:00000000 WATCHDOG_Service
    {standard input}:409    .text.WATCHDOG_ClearAlarm:00000000 $t
    {standard input}:413    .text.WATCHDOG_ClearAlarm:00000000 WATCHDOG_ClearAlarm
    {standard input}:439    .data.NP:00000000 NP
    {standard input}:436    .data.NP:00000000 $d
    {standard input}:449    .data.NPfl:00000000 NPfl
    {standard input}:446    .data.NPfl:00000000 $d
    {standard input}:456    .data.NPfr:00000000 NPfr
    {standard input}:453    .data.NPfr:00000000 $d
    {standard input}:463    .data.NPrl:00000000 NPrl
    {standard input}:460    .data.NPrl:00000000 $d
    {standard input}:470    .data.NPrr:00000000 NPrr
    {standard input}:467    .data.NPrr:00000000 $d
    {standard input}:476    .data.RC_controll:00000000 RC_controll
    {standard input}:482    .data.Steering_mode:00000000 Steering_mode
    {standard input}:488    .bss.New_Input:00000000 New_Input
    {standard input}:489    .bss.New_Input:00000000 $d
    {standard input}:495    .bss.NO_New_Input_counter:00000000 NO_New_Input_counter
    {standard input}:492    .bss.NO_New_Input_counter:00000000 $d
    {standard input}:501    .data.modeswitch_colldown:00000000 modeswitch_colldown
    {standard input}:508    .bss.Speeds_int16_r:00000000 Speeds_int16_r
    {standard input}:505    .bss.Speeds_int16_r:00000000 $d
    {standard input}:515    .bss.CAN_RX_0:00000000 CAN_RX_0
    {standard input}:512    .bss.CAN_RX_0:00000000 $d
                            *COM*:00000001 init_status
    {standard input}:523    .bss.CAN_OK:00000000 CAN_OK
    {standard input}:520    .bss.CAN_OK:00000000 $d
    {standard input}:530    .bss.Inverters_CAN_state:00000000 Inverters_CAN_state
    {standard input}:527    .bss.Inverters_CAN_state:00000000 $d
    {standard input}:537    .bss.CAN_10ms_counter:00000000 CAN_10ms_counter
    {standard input}:534    .bss.CAN_10ms_counter:00000000 $d
    {standard input}:543    .bss.reset_distance:00000000 reset_distance
    {standard input}:544    .bss.reset_distance:00000000 $d
    {standard input}:550    .bss.speed_fl_act:00000000 speed_fl_act
    {standard input}:547    .bss.speed_fl_act:00000000 $d
    {standard input}:557    .bss.speed_fr_act:00000000 speed_fr_act
    {standard input}:554    .bss.speed_fr_act:00000000 $d
    {standard input}:564    .bss.speed_rl_act:00000000 speed_rl_act
    {standard input}:561    .bss.speed_rl_act:00000000 $d
    {standard input}:571    .bss.speed_rr_act:00000000 speed_rr_act
    {standard input}:568    .bss.speed_rr_act:00000000 $d
    {standard input}:578    .bss.distance_fl_act:00000000 distance_fl_act
    {standard input}:575    .bss.distance_fl_act:00000000 $d
    {standard input}:585    .bss.distance_fr_act:00000000 distance_fr_act
    {standard input}:582    .bss.distance_fr_act:00000000 $d
    {standard input}:592    .bss.distance_rl_act:00000000 distance_rl_act
    {standard input}:589    .bss.distance_rl_act:00000000 $d
    {standard input}:599    .bss.distance_rr_act:00000000 distance_rr_act
    {standard input}:596    .bss.distance_rr_act:00000000 $d
    {standard input}:605    .bss.CAN_RX_Inverter_count:00000000 CAN_RX_Inverter_count
    {standard input}:606    .bss.CAN_RX_Inverter_count:00000000 $d
    {standard input}:611    .data.CAN_Ultrasonic_No_messasge_count:00000000 CAN_Ultrasonic_No_messasge_count
    {standard input}:617    .bss.CAN_state_Ultrasonic:00000000 CAN_state_Ultrasonic
    {standard input}:618    .bss.CAN_state_Ultrasonic:00000000 $d
    {standard input}:624    .bss.Ultrasonic_cm_C:00000000 Ultrasonic_cm_C
    {standard input}:621    .bss.Ultrasonic_cm_C:00000000 $d
    {standard input}:631    .bss.Ultrasonic_cm_L:00000000 Ultrasonic_cm_L
    {standard input}:628    .bss.Ultrasonic_cm_L:00000000 $d
    {standard input}:638    .bss.Ultrasonic_cm_R:00000000 Ultrasonic_cm_R
    {standard input}:635    .bss.Ultrasonic_cm_R:00000000 $d
    {standard input}:645    .data.ALPHA_ULTARSONIC:00000000 ALPHA_ULTARSONIC
    {standard input}:642    .data.ALPHA_ULTARSONIC:00000000 $d
    {standard input}:651    .bss.obstructed_L:00000000 obstructed_L
    {standard input}:652    .bss.obstructed_L:00000000 $d
    {standard input}:657    .bss.obstructed_R:00000000 obstructed_R
    {standard input}:658    .bss.obstructed_R:00000000 $d
    {standard input}:664    .data.Fil_Ultrasonic_m_C:00000000 Fil_Ultrasonic_m_C
    {standard input}:661    .data.Fil_Ultrasonic_m_C:00000000 $d
    {standard input}:671    .data.Fil_Ultrasonic_m_L:00000000 Fil_Ultrasonic_m_L
    {standard input}:668    .data.Fil_Ultrasonic_m_L:00000000 $d
    {standard input}:678    .data.Fil_Ultrasonic_m_R:00000000 Fil_Ultrasonic_m_R
    {standard input}:675    .data.Fil_Ultrasonic_m_R:00000000 $d
    {standard input}:685    .data.Ultrsonic_data_invaildcounter:00000000 Ultrsonic_data_invaildcounter
    {standard input}:682    .data.Ultrsonic_data_invaildcounter:00000000 $d
    {standard input}:694    .data.Obstacel_F:00000000 Obstacel_F
    {standard input}:691    .data.Obstacel_F:00000000 $d
    {standard input}:702    .data.Obstacel_L:00000000 Obstacel_L
    {standard input}:699    .data.Obstacel_L:00000000 $d
    {standard input}:710    .data.Obstacel_R:00000000 Obstacel_R
    {standard input}:707    .data.Obstacel_R:00000000 $d
    {standard input}:718    .bss.obstacel_F_x:00000000 obstacel_F_x
    {standard input}:715    .bss.obstacel_F_x:00000000 $d
    {standard input}:725    .bss.obstacel_L_x:00000000 obstacel_L_x
    {standard input}:722    .bss.obstacel_L_x:00000000 $d
    {standard input}:732    .bss.obstacel_L_y:00000000 obstacel_L_y
    {standard input}:729    .bss.obstacel_L_y:00000000 $d
    {standard input}:739    .bss.obstacel_R_x:00000000 obstacel_R_x
    {standard input}:736    .bss.obstacel_R_x:00000000 $d
    {standard input}:746    .bss.obstacel_R_y:00000000 obstacel_R_y
    {standard input}:743    .bss.obstacel_R_y:00000000 $d
    {standard input}:753    .bss.Obstacel_valid:00000000 Obstacel_valid
    {standard input}:750    .bss.Obstacel_valid:00000000 $d
    {standard input}:760    .bss.avg_Speeds:00000000 avg_Speeds
    {standard input}:757    .bss.avg_Speeds:00000000 $d
    {standard input}:767    .bss.act_trajctory_x:00000000 act_trajctory_x
    {standard input}:764    .bss.act_trajctory_x:00000000 $d
    {standard input}:774    .bss.act_trajctory_y:00000000 act_trajctory_y
    {standard input}:771    .bss.act_trajctory_y:00000000 $d
    {standard input}:780    .bss.RC_Signal_OK:00000000 RC_Signal_OK
    {standard input}:781    .bss.RC_Signal_OK:00000000 $d
    {standard input}:786    .bss.RC_Signal_not_OK_counter:00000000 RC_Signal_not_OK_counter
    {standard input}:787    .bss.RC_Signal_not_OK_counter:00000000 $d
    {standard input}:793    .bss.captured_time_Steering:00000000 captured_time_Steering
    {standard input}:790    .bss.captured_time_Steering:00000000 $d
    {standard input}:800    .bss.captured_time_Speed:00000000 captured_time_Speed
    {standard input}:797    .bss.captured_time_Speed:00000000 $d
    {standard input}:806    .bss.RC_no_Speed_data_counter:00000000 RC_no_Speed_data_counter
    {standard input}:807    .bss.RC_no_Speed_data_counter:00000000 $d
    {standard input}:812    .bss.RC_no_Steering_data_counter:00000000 RC_no_Steering_data_counter
    {standard input}:813    .bss.RC_no_Steering_data_counter:00000000 $d
    {standard input}:819    .bss.RC_Speed:00000000 RC_Speed
    {standard input}:816    .bss.RC_Speed:00000000 $d
    {standard input}:826    .bss.RC_Steering:00000000 RC_Steering
    {standard input}:823    .bss.RC_Steering:00000000 $d
    {standard input}:833    .data.RC_Speed_ns_to_mps:00000000 RC_Speed_ns_to_mps
    {standard input}:830    .data.RC_Speed_ns_to_mps:00000000 $d
    {standard input}:840    .data.RC_Steering_ns_to_deg:00000000 RC_Steering_ns_to_deg
    {standard input}:837    .data.RC_Steering_ns_to_deg:00000000 $d
    {standard input}:847    .bss.RC_gear_100us_counter:00000000 RC_gear_100us_counter
    {standard input}:844    .bss.RC_gear_100us_counter:00000000 $d
    {standard input}:854    .bss.RC_AUX1_100us_counter:00000000 RC_AUX1_100us_counter
    {standard input}:851    .bss.RC_AUX1_100us_counter:00000000 $d
    {standard input}:860    .data.RC_Gear_state:00000000 RC_Gear_state
    {standard input}:866    .data.RC_AUX1_state:00000000 RC_AUX1_state
    {standard input}:872    .data.RC_Gear_duty:00000000 RC_Gear_duty
    {standard input}:878    .data.RC_Gear_duty_OLD:00000000 RC_Gear_duty_OLD
    {standard input}:884    .data.RC_AUX1_duty:00000000 RC_AUX1_duty
    {standard input}:890    .data.RC_Speed_Stop:00000000 RC_Speed_Stop
    {standard input}:897    .bss.Steering_direction:00000000 Steering_direction
    {standard input}:894    .bss.Steering_direction:00000000 $d
    {standard input}:904    .bss.Driving_speed:00000000 Driving_speed
    {standard input}:901    .bss.Driving_speed:00000000 $d
                            *COM*:00000004 R_Turn
                            *COM*:00000004 Speed_ratio
    {standard input}:913    .bss.speed_fl:00000000 speed_fl
    {standard input}:910    .bss.speed_fl:00000000 $d
    {standard input}:920    .bss.speed_fr:00000000 speed_fr
    {standard input}:917    .bss.speed_fr:00000000 $d
    {standard input}:927    .bss.speed_rl:00000000 speed_rl
    {standard input}:924    .bss.speed_rl:00000000 $d
    {standard input}:934    .bss.speed_rr:00000000 speed_rr
    {standard input}:931    .bss.speed_rr:00000000 $d
    {standard input}:941    .bss.angle_fl:00000000 angle_fl
    {standard input}:938    .bss.angle_fl:00000000 $d
    {standard input}:948    .bss.angle_fr:00000000 angle_fr
    {standard input}:945    .bss.angle_fr:00000000 $d
    {standard input}:955    .bss.angle_rl:00000000 angle_rl
    {standard input}:952    .bss.angle_rl:00000000 $d
    {standard input}:962    .bss.angle_rr:00000000 angle_rr
    {standard input}:959    .bss.angle_rr:00000000 $d
    {standard input}:969    .bss.Speeds:00000000 Speeds
    {standard input}:966    .bss.Speeds:00000000 $d
    {standard input}:976    .bss.Steering_Angles:00000000 Steering_Angles
    {standard input}:973    .bss.Steering_Angles:00000000 $d
    {standard input}:983    .bss.Servo_PWMs:00000000 Servo_PWMs
    {standard input}:980    .bss.Servo_PWMs:00000000 $d
    {standard input}:990    .bss.Inveter_CAN_OK:00000000 Inveter_CAN_OK
    {standard input}:987    .bss.Inveter_CAN_OK:00000000 $d
    {standard input}:997    .bss.Actual_Speeds:00000000 Actual_Speeds
    {standard input}:994    .bss.Actual_Speeds:00000000 $d
    {standard input}:1004   .bss.Actual_Distance:00000000 Actual_Distance
    {standard input}:1001   .bss.Actual_Distance:00000000 $d
    {standard input}:1007   .text.main:00000000 $t
    {standard input}:1012   .text.main:00000000 main
    {standard input}:1069   .text.main:00000040 $d
    {standard input}:1088   .text.Steering_Function:00000000 $t
    {standard input}:1093   .text.Steering_Function:00000000 Steering_Function
    {standard input}:1228   .rodata.Steering_Function:00000000 $d
    {standard input}:1493   .text.Steering_Function:000002f0 $d
    {standard input}:1520   .text.Steering_Function:00000354 $t
    {standard input}:1944   .text.Steering_Function:000006b8 $d
    {standard input}:1972   .text.Steering_Function:00000720 $t
    {standard input}:2412   .text.Steering_Function:00000aa0 $d
    {standard input}:2442   .text.Steering_Function:00000b10 $t
    {standard input}:2861   .text.Steering_Function:00000dd8 $d
    {standard input}:2894   .text.IRQ4_Handler:00000000 $t
    {standard input}:2899   .text.IRQ4_Handler:00000000 IRQ4_Handler
    {standard input}:3070   .text.Ultra_sonic_filter:00000000 Ultra_sonic_filter
    {standard input}:3051   .text.IRQ4_Handler:000000f4 $d
    {standard input}:3065   .text.Ultra_sonic_filter:00000000 $t
    {standard input}:3768   .text.Exp_moving_average:00000000 Exp_moving_average
    {standard input}:3609   .text.Ultrasoinc_Obstructet_Test:00000000 Ultrasoinc_Obstructet_Test
    {standard input}:3579   .text.Ultra_sonic_filter:0000039c $d
    {standard input}:3604   .text.Ultrasoinc_Obstructet_Test:00000000 $t
    {standard input}:3757   .text.Ultrasoinc_Obstructet_Test:00000104 $d
    {standard input}:3763   .text.Exp_moving_average:00000000 $t
    {standard input}:3816   .text.IRQ3_Handler:00000000 $t
    {standard input}:3821   .text.IRQ3_Handler:00000000 IRQ3_Handler
    {standard input}:3874   .text.CAN_RX_Inverter_Read_Data:00000000 CAN_RX_Inverter_Read_Data
    {standard input}:3863   .text.IRQ3_Handler:00000030 $d
    {standard input}:3869   .text.CAN_RX_Inverter_Read_Data:00000000 $t
    {standard input}:4245   .text.CAN_RX_Inverter_Read_Data:0000026c $d
    {standard input}:4263   .text.Watchdog_Handler:00000000 $t
    {standard input}:4268   .text.Watchdog_Handler:00000000 Watchdog_Handler
    {standard input}:4293   .text.Watchdog_Handler:00000014 $d
    {standard input}:4298   .text.CAN_reset_distance:00000000 $t
    {standard input}:4303   .text.CAN_reset_distance:00000000 CAN_reset_distance
    {standard input}:4381   .text.CAN_reset_distance:00000070 $d
    {standard input}:4387   .text.CAN_send_Speeds:00000000 $t
    {standard input}:4392   .text.CAN_send_Speeds:00000000 CAN_send_Speeds
    {standard input}:4485   .text.CAN_send_Speeds:000000a8 $d
    {standard input}:4491   .text.IRQ8_Handler:00000000 $t
    {standard input}:4496   .text.IRQ8_Handler:00000000 IRQ8_Handler
    {standard input}:4541   .text.IRQ8_Handler:00000030 $d
    {standard input}:4550   .text.Steering_set_Angles:00000000 $t
    {standard input}:4555   .text.Steering_set_Angles:00000000 Steering_set_Angles
    {standard input}:4712   .text.Steering_set_Angles:00000104 $d
    {standard input}:4726   .text.RC_Recive:00000000 $t
    {standard input}:4731   .text.RC_Recive:00000000 RC_Recive
    {standard input}:5015   .text.RC_Recive:000001e8 $d
    {standard input}:5041   .text.IRQ12_Handler:00000000 $t
    {standard input}:5046   .text.IRQ12_Handler:00000000 IRQ12_Handler
    {standard input}:5193   .text.IRQ12_Handler:000000cc $d
    {standard input}:5205   .text.IRQ6_Handler:00000000 $t
    {standard input}:5210   .text.IRQ6_Handler:00000000 IRQ6_Handler
    {standard input}:5313   .text.IRQ6_Handler:00000084 $d
    {standard input}:5323   .rodata:00000000 $d
    {standard input}:5330   .text.IRQ7_Handler:00000000 $t
    {standard input}:5335   .text.IRQ7_Handler:00000000 IRQ7_Handler
    {standard input}:6003   .text.mode_led:00000000 mode_led
    {standard input}:5518   .text.Collision_voidance:00000000 Collision_voidance
    {standard input}:5497   .text.IRQ7_Handler:000000f4 $d
    {standard input}:5513   .text.Collision_voidance:00000000 $t
    {standard input}:5934   .text.average:00000000 average
    {standard input}:5581   .rodata.Collision_voidance:00000000 $d
    {standard input}:5851   .text.Collision_voidance:0000023c $d
    {standard input}:5876   .text.Servo_NP_setting:00000000 $t
    {standard input}:5881   .text.Servo_NP_setting:00000000 Servo_NP_setting
    {standard input}:5920   .text.Servo_NP_setting:00000028 $d
    {standard input}:5929   .text.average:00000000 $t
    {standard input}:5998   .text.mode_led:00000000 $t
    {standard input}:6086   .text.mode_led:00000074 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
DAVE_Init
CAN_NODE_Init
CAN_NODE_0
__aeabi_fcmpgt
__aeabi_fcmplt
__aeabi_f2d
__aeabi_dcmplt
__aeabi_dcmpgt
__aeabi_ddiv
__aeabi_d2f
__aeabi_dadd
__aeabi_dmul
__aeabi_dsub
__aeabi_fmul
__aeabi_fdiv
tan
atan
CAN_NODE_MO_Receive
WATCHDOG_LED_BLUE
__aeabi_i2f
cos
sin
__aeabi_fsub
__aeabi_fcmple
__aeabi_fadd
LED_CAN_ERROR
CAN_NODE_MO_UpdateData
CAN_NODE_MO_Transmit
__aeabi_f2iz
__aeabi_f2uiz
PWM_SetDutyCycle
PWM_servo_fl
PWM_servo_fr
PWM_servo_rl
PWM_servo_rr
__aeabi_ui2d
CAPTURE_Start
CAPTURE_GetCapturedTimeInNanoSec
CAPTURE_RC_Steering
CAPTURE_RC_Speed
RC_no_data_LED
RC_Connected
RC_AUX1
memcpy
CALC_TIME_INDICATOR
LED_COLLISION_AVOID
MODE_001
MODE_010
MODE_100
