   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,6
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "main.c"
  14              	 .text
  15              	.Ltext0:
  16              	 .cfi_sections .debug_frame
  17              	 .section .text.XMC_GPIO_SetOutputHigh,"ax",%progbits
  18              	 .align 2
  19              	 .code 16
  20              	 .thumb_func
  22              	XMC_GPIO_SetOutputHigh:
  23              	.LFB122:
  24              	 .file 1 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc/xmc_gpio.h"
   1:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
   2:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @file xmc_gpio.h
   3:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @date 2015-06-20
   4:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   5:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @cond
   6:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *****************************************************************************
   7:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   9:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * All rights reserved.
  11:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  12:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  14:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Permission is hereby granted, free of charge, to any person or organization
  15:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * obtaining a copy of the software and accompanying documentation covered by
  16:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * do so, all subject to the following:
  20:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  21:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * The copyright notices in the Software and this entire statement, including
  22:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * the above license grant, this restriction and the following disclaimer,
  23:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * must be included in all copies of the Software, in whole or in part, and
  24:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * all derivative works of the Software, unless such copies or derivative
  25:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * works are solely in the form of machine-executable object code generated by
  26:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * a source language processor.
  27:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  28:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * DEALINGS IN THE SOFTWARE.
  35:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  36:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * To improve the quality of the software, users are encouraged to share
  37:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * at XMCSupport@infineon.com.
  39:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *****************************************************************************
  40:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  41:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Change History
  42:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * --------------
  43:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  44:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-02-20:
  45:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Initial draft<br>
  46:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Documentation improved <br>
  47:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  48:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-06-20:
  49:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  50:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  51:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @endcond
  52:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  53:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  54:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
  55:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #ifndef XMC_GPIO_H
  56:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_H
  57:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
  58:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  59:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * HEADER FILES
  60:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  61:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
  62:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc_common.h"
  63:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
  64:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  65:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup XMClib XMC Peripheral Library
  66:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @{
  67:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  68:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
  69:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  70:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup GPIO
  71:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @brief General Purpose Input Output (GPIO) driver for the XMC microcontroller family.
  72:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  73:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * GPIO driver provide a generic and very flexible software interface for all standard digital I/O 
  74:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Each port slice has individual interfaces for the operation as General Purpose I/O and it furthe
  75:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * connectivity to the on-chip periphery and the control for the pad characteristics.
  76:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  77:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * The driver is divided into Input and Output mode.
  78:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  79:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Input mode features:
  80:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Configuration structure XMC_GPIO_CONFIG_t and initialization function XMC_GPIO_Init()
  81:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of weak pull-up or pull-down device. Configuration structure XMC_GPIO_MO
  82:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
  83:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of input hysteresis. XMC_GPIO_SetInputHysteresis()
  84:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  85:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  86:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  87:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Output mode features:
  88:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of push pull/open drain and Alternate output. Configuration structure XM
  89:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
  90:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of pad driver strength. Configuration structure XMC_GPIO_OUTPUT_STRENGTH
  91:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  92:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  93:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of initial output level. Configuration structure XMC_GPIO_OUTPUT_LEVEL_t
  94:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  95:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *@{
  96:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  97:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
  98:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  99:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * MACROS
 100:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 101:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 102:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Pos PORT0_IOCR0_PC0_Pos
 103:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Msk PORT0_IOCR0_PC0_Msk
 104:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 105:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Size 				(8U)
 106:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 107:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 108:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_OUTPUT_LEVEL(level) ((level == XMC_GPIO_OUTPUT_LEVEL_LOW) || \
 109:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****                                             (level == XMC_GPIO_OUTPUT_LEVEL_HIGH))
 110:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 111:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_HWCTRL(hwctrl) ((hwctrl == XMC_GPIO_HWCTRL_DISABLED) || \
 112:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL1) || \
 113:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL2))
 114:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 115:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 116:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * ENUMS
 117:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 118:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 119:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 120:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 121:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines output level of a pin. Use type \a XMC_GPIO_OUTPUT_LEVEL_t for this enum.
 122:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 123:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_OUTPUT_LEVEL
 124:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** {
 125:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_LOW  = 0x10000U, /**<  Reset bit */
 126:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_HIGH = 0x1U, 	/**< Set bit  */
 127:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_OUTPUT_LEVEL_t;
 128:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 129:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 130:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines direct hardware control characteristics of the pin . Use type \a XMC_GPIO_HWCTRL_t for t
 131:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 132:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_HWCTRL
 133:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** {
 134:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_DISABLED     = 0x0U, /**<  Software control only */
 135:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL1  = 0x1U, /**<  HWI0/HWO0 control path can override the software confi
 136:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL2  = 0x2U  /**<  HWI1/HWO1 control path can override the software confi
 137:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_HWCTRL_t;
 138:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 139:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 140:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * DEVICE FAMILY EXTENSIONS
 141:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 142:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 143:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #if UC_FAMILY == XMC1
 144:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc1_gpio.h"
 145:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #elif UC_FAMILY == XMC4
 146:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc4_gpio.h"
 147:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #else
 148:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #error "xmc_gpio.h: family device not supported"
 149:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 150:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 151:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 152:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * API PROTOTYPES
 153:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 154:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 155:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #ifdef __cplusplus
 156:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** extern "C" {
 157:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 158:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 159:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 160:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 161:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	  Constant pointer pointing to GPIO port, to access port registers like Pn_OUT,Pn_O
 162:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	  Port pin number.
 163:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  config GPIO configuration data structure. Refer data structure @ref XMC_GPIO_CONFIG_t fo
 164:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 165:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 166:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 167:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 168:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
 169:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,hysteresis, push pull
 170:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for a selected \a po
 171:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \a config provides selected I/O settings. It configures hardware registers Pn_IOCR,Pn_OUT, Pn_OM
 172:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 173:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
 174:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,push pull /open drain
 175:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for selected \a port
 176:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * It configures hardware registers Pn_IOCR,Pn_OUT,Pn_OMR,Pn_PDISC and Pn_PDR.\n
 177:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 178:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 179:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 180:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 181:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 182:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 183:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * This API is called in definition of DAVE_init by code generation and therefore should not be exp
 184:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * for the normal operation. Use other APIs only after DAVE_init is called successfully (returns DA
 185:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 186:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 187:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 188:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 189:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 190:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_Init(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_CONFIG_t *const c
 191:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 192:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 193:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 194:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	Constant pointer pointing to GPIO port, to access hardware register Pn_IOCR.
 195:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 196:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  mode input / output functionality selection. Refer @ref XMC_GPIO_MODE_t for valid values
 197:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 198:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 199:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 200:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 201:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets digital input and output driver functionality and characteristics of a GPIO port pin. It co
 202:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * registers Pn_IOCR. \a mode is initially configured during initialization in XMC_GPIO_Init(). Cal
 203:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * the port direction functionality as needed later in the program.
 204:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 205:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 206:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 207:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 208:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 209:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 210:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_SetMode(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_MODE_t mode);
 211:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 212:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 213:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 214:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 215:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	 Constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 216:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	 Port pin number.
 217:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  level output level selection. Refer @ref XMC_GPIO_OUTPUT_LEVEL_t for valid values.
 218:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 219:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 220:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 221:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 222:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Set port pin output level to high or low.It configures hardware registers Pn_OMR.\a level is ini
 223:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * configured during initialization in XMC_GPIO_Init(). Call this API to alter output level as need
 224:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 225:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 226:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 227:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 228:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 229:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 230:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 231:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 232:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 233:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 234:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLevel(XMC_GPIO_PORT_t *const port, const uint8_t pin, const 
 235:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** {
 236:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 237:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid output level", XMC_GPIO_CHECK_OUTPUT_LEVEL(level));
 238:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 239:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)level << pin;
 240:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** }
 241:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 242:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 243:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 244:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 245:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 246:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 247:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 248:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 249:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 250:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *  Sets port pin output to high. It configures hardware registers Pn_OMR.
 251:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 252:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *  \par<b>Related APIs:</b><BR>
 253:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputLow()
 254:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 255:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 256:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().\n
 257:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 258:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 259:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 260:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 261:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputHigh(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 262:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** {
  25              	 .loc 1 262 0
  26              	 .cfi_startproc
  27 0000 80B5     	 push {r7,lr}
  28              	.LCFI0:
  29              	 .cfi_def_cfa_offset 8
  30              	 .cfi_offset 7,-8
  31              	 .cfi_offset 14,-4
  32 0002 82B0     	 sub sp,sp,#8
  33              	.LCFI1:
  34              	 .cfi_def_cfa_offset 16
  35 0004 00AF     	 add r7,sp,#0
  36              	.LCFI2:
  37              	 .cfi_def_cfa_register 7
  38 0006 7860     	 str r0,[r7,#4]
  39 0008 0A1C     	 mov r2,r1
  40 000a FB1C     	 add r3,r7,#3
  41 000c 1A70     	 strb r2,[r3]
 263:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputHigh: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 264:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 265:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)0x1U << pin;
  42              	 .loc 1 265 0
  43 000e FB1C     	 add r3,r7,#3
  44 0010 1B78     	 ldrb r3,[r3]
  45 0012 0122     	 mov r2,#1
  46 0014 9A40     	 lsl r2,r2,r3
  47 0016 7B68     	 ldr r3,[r7,#4]
  48 0018 5A60     	 str r2,[r3,#4]
 266:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** }
  49              	 .loc 1 266 0
  50 001a BD46     	 mov sp,r7
  51 001c 02B0     	 add sp,sp,#8
  52              	 
  53 001e 80BD     	 pop {r7,pc}
  54              	 .cfi_endproc
  55              	.LFE122:
  57              	 .section .text.XMC_GPIO_SetOutputLow,"ax",%progbits
  58              	 .align 2
  59              	 .code 16
  60              	 .thumb_func
  62              	XMC_GPIO_SetOutputLow:
  63              	.LFB123:
 267:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 268:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 269:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 270:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 271:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	port pin number.
 272:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 273:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return  None
 274:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 275:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Description:</b><br>
 276:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets port pin output to low. It configures hardware registers Pn_OMR.\n
 277:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 278:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>>
 279:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh()
 280:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 281:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Note:</b><br>
 282:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 283:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 284:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 285:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 286:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 287:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLow(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 288:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** {
  64              	 .loc 1 288 0
  65              	 .cfi_startproc
  66 0000 80B5     	 push {r7,lr}
  67              	.LCFI3:
  68              	 .cfi_def_cfa_offset 8
  69              	 .cfi_offset 7,-8
  70              	 .cfi_offset 14,-4
  71 0002 82B0     	 sub sp,sp,#8
  72              	.LCFI4:
  73              	 .cfi_def_cfa_offset 16
  74 0004 00AF     	 add r7,sp,#0
  75              	.LCFI5:
  76              	 .cfi_def_cfa_register 7
  77 0006 7860     	 str r0,[r7,#4]
  78 0008 0A1C     	 mov r2,r1
  79 000a FB1C     	 add r3,r7,#3
  80 000c 1A70     	 strb r2,[r3]
 289:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLow: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 290:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 291:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10000U << pin;
  81              	 .loc 1 291 0
  82 000e FB1C     	 add r3,r7,#3
  83 0010 1B78     	 ldrb r3,[r3]
  84 0012 8022     	 mov r2,#128
  85 0014 5202     	 lsl r2,r2,#9
  86 0016 9A40     	 lsl r2,r2,r3
  87 0018 7B68     	 ldr r3,[r7,#4]
  88 001a 5A60     	 str r2,[r3,#4]
 292:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** }
  89              	 .loc 1 292 0
  90 001c BD46     	 mov sp,r7
  91 001e 02B0     	 add sp,sp,#8
  92              	 
  93 0020 80BD     	 pop {r7,pc}
  94              	 .cfi_endproc
  95              	.LFE123:
  97 0022 C046     	 .section .text.XMC_GPIO_GetInput,"ax",%progbits
  98              	 .align 2
  99              	 .code 16
 100              	 .thumb_func
 102              	XMC_GPIO_GetInput:
 103              	.LFB125:
 293:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 294:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 295:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 296:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 297:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param pin  port pin number.
 298:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 299:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 300:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 301:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 302:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Configures port pin output to Toggle. It configures hardware registers Pn_OMR.
 303:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 304:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 305:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 306:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 307:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 308:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode(). Regis
 309:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * and does not contain any flip-flop. A read action delivers the value of 0.
 310:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 311:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 312:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 313:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_ToggleOutput(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 314:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** {
 315:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_ToggleOutput: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 316:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 317:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10001U << pin;
 318:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** }
 319:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 320:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 321:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 322:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param port constant pointer pointing to GPIO port, to access hardware register Pn_IN.
 323:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param pin  Port pin number.
 324:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 325:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return uint32_t pin logic level status.
 326:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 327:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Description:</b><br>
 328:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Reads the Pn_IN register and returns the current logical value at the GPIO pin.
 329:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 330:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 331:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * None
 332:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 333:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 334:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to input mode using XMC_GPIO_SetMode().
 335:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 336:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 337:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 338:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE uint32_t XMC_GPIO_GetInput(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 339:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** {
 104              	 .loc 1 339 0
 105              	 .cfi_startproc
 106 0000 80B5     	 push {r7,lr}
 107              	.LCFI6:
 108              	 .cfi_def_cfa_offset 8
 109              	 .cfi_offset 7,-8
 110              	 .cfi_offset 14,-4
 111 0002 82B0     	 sub sp,sp,#8
 112              	.LCFI7:
 113              	 .cfi_def_cfa_offset 16
 114 0004 00AF     	 add r7,sp,#0
 115              	.LCFI8:
 116              	 .cfi_def_cfa_register 7
 117 0006 7860     	 str r0,[r7,#4]
 118 0008 0A1C     	 mov r2,r1
 119 000a FB1C     	 add r3,r7,#3
 120 000c 1A70     	 strb r2,[r3]
 340:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_GetInput: Invalid port", XMC_GPIO_CHECK_PORT(port));
 341:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 342:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   return (((port->IN) >> pin) & 0x1U);
 121              	 .loc 1 342 0
 122 000e 7B68     	 ldr r3,[r7,#4]
 123 0010 5A6A     	 ldr r2,[r3,#36]
 124 0012 FB1C     	 add r3,r7,#3
 125 0014 1B78     	 ldrb r3,[r3]
 126 0016 DA40     	 lsr r2,r2,r3
 127 0018 131C     	 mov r3,r2
 128 001a 0122     	 mov r2,#1
 129 001c 1340     	 and r3,r2
 343:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** }
 130              	 .loc 1 343 0
 131 001e 181C     	 mov r0,r3
 132 0020 BD46     	 mov sp,r7
 133 0022 02B0     	 add sp,sp,#8
 134              	 
 135 0024 80BD     	 pop {r7,pc}
 136              	 .cfi_endproc
 137              	.LFE125:
 139 0026 C046     	 .section .text.DIGITAL_IO_SetOutputHigh,"ax",%progbits
 140              	 .align 2
 141              	 .code 16
 142              	 .thumb_func
 144              	DIGITAL_IO_SetOutputHigh:
 145              	.LFB195:
 146              	 .file 2 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO/digital_io.h"
   1:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /*
   2:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   3:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @file digital_io.h
   4:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @date 2021-01-08
   5:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   6:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * NOTE:
   7:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   8:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   9:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @cond
  10:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  11:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DIGITAL_IO v4.0.18 - The DIGITAL_IO APP is used to configure a port pin as digital Input/Output.
  12:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  13:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  14:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * All rights reserved.
  15:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  16:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  17:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * following conditions are met:
  18:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  19:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  20:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   disclaimer.
  21:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  22:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  23:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  24:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  25:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  26:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   products derived from this software without specific prior written permission.
  27:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  28:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  29:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  30:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  31:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  32:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  33:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  34:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  36:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  37:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * with Infineon Technologies AG (dave@infineon.com).
  38:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  39:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  40:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Change History
  41:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * --------------
  42:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  43:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-02-16
  44:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Initial version
  45:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  46:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-04-22
  47:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - XMC_ASSERT is added in static inline functions.<br>
  48:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  49:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-06-20
  50:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Version check added for XMCLib dependency.<br>
  51:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  52:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-12-22
  53:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Added hardware controlled IO feature.
  54:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2016-07-08:
  55:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Fixed incorrect case for an included header.<br>
  56:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2021-01-08:
  57:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Modified check for minimum XMCLib version
  58:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  59:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @endcond
  60:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  61:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  */
  62:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  63:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
  64:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * HEADER FILES
  65:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  66:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  67:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #ifndef DIGITAL_IO_H
  68:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #define DIGITAL_IO_H
  69:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  70:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #include "xmc_gpio.h"
  71:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #include "DAVE_Common.h"
  72:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #include "digital_io_conf.h"
  73:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  74:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
  75:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * MACROS
  76:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  77:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #define DIGITAL_IO_XMC_LIB_MAJOR_VERSION 2
  78:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #define DIGITAL_IO_XMC_LIB_MINOR_VERSION 0
  79:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #define DIGITAL_IO_XMC_LIB_PATCH_VERSION 0
  80:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  81:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #if !((XMC_LIB_MAJOR_VERSION > DIGITAL_IO_XMC_LIB_MAJOR_VERSION) ||\
  82:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****       ((XMC_LIB_MAJOR_VERSION == DIGITAL_IO_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION > DIGI
  83:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****       ((XMC_LIB_MAJOR_VERSION == DIGITAL_IO_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION == DIG
  84:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #error "DIGITAL_IO requires XMC Peripheral Library v2.0.0 or higher"
  85:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #endif
  86:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  87:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  /*************************************************************************************************
  88:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * ENUMS
  89:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  90:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  91:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
  92:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_enumerations
  93:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
  94:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
  95:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  96:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
  97:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Initialization status of DIGITAL_IO APP.
  98:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
  99:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** typedef enum DIGITAL_IO_STATUS
 100:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 101:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   DIGITAL_IO_STATUS_OK = 0U,/**< 0=Status OK */
 102:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   DIGITAL_IO_STATUS_FAILURE = 1U/**< 1=Status Failed */
 103:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** } DIGITAL_IO_STATUS_t;
 104:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 105:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 106:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @}
 107:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 108:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 109:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
 110:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DATA STRUCTURES
 111:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
 112:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 113:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_datastructures
 114:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
 115:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 116:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 117:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 118:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Initialization data structure of DIGITAL_IO APP
 119:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 120:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** typedef struct DIGITAL_IO
 121:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 122:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_PORT_t *const gpio_port;             /**< port number */
 123:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   const XMC_GPIO_CONFIG_t gpio_config;          /**< mode, initial output level and pad driver stre
 124:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   const uint8_t gpio_pin;                       /**< pin number */
 125:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   const XMC_GPIO_HWCTRL_t hwctrl;               /**< Hardware port control */
 126:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** } DIGITAL_IO_t;
 127:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 128:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 129:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 130:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @}
 131:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 132:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 133:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 134:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
 135:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * API Prototypes
 136:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
 137:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 138:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 139:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #ifdef __cplusplus
 140:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** extern "C" {
 141:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #endif
 142:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 143:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 144:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_apidoc
 145:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
 146:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 147:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 148:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 149:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 150:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 151:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Get DIGITAL_IO APP version
 152:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return DAVE_APP_VERSION_t APP version information (major, minor and patch number)
 153:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 154:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description: </b><br>
 155:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * The function can be used to check application software compatibility with a
 156:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * specific version of the APP.
 157:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 158:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 159:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 160:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 161:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include "DAVE.h"
 162:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 163:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 164:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 165:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t init_status;
 166:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_APP_VERSION_t version;
 167:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 168:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   // Initialize DIGITAL_IO APP:
 169:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   // DIGITAL_IO_Init() is called from within DAVE_Init().
 170:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   init_status = DAVE_Init();
 171:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(init_status == DAVE_STATUS_SUCCESS)
 172:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 173:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     version = DIGITAL_IO_GetAppVersion();
 174:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     if (version.major != 4U) {
 175:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // Probably, not the right version.
 176:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 177:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 178:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 179:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // More code here
 180:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1) {
 181:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 182:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 183:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     return (1);
 184:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  }
 185:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @endcode<BR>
 186:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 187:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 188:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** DAVE_APP_VERSION_t DIGITAL_IO_GetAppVersion(void);
 189:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 190:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 191:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 192:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to initialize the port pin as per UI settings.
 193:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 194:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return DIGITAL_IO_STATUS_t DIGITAL_IO APP status. Refer @ref DIGITAL_IO_STATUS_t structure for d
 195:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 196:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 197:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function initializes GPIO port registers IOCR,PDISC,OMR,PDR/PHCR to configure pin direction,
 198:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * and pad driver strength/hysteresis.
 199:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 200:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 201:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * None
 202:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 203:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 204:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 205:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include "DAVE.h" //Declarations from DAVE Code Generation (includes SFR declaration)
 206:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 207:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 208:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 209:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 210:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 211:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 212:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 213:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 214:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 215:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 216:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 217:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 218:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1U)
 219:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 220:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 221:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 222:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 223:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 224:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 225:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 226:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return 1U;
 227:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  }
 228:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 229:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 230:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 231:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** DIGITAL_IO_STATUS_t DIGITAL_IO_Init(const DIGITAL_IO_t *const handler);
 232:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 233:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 234:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 235:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to set port pin high.
 236:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 237:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return None
 238:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 239:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 240:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to make port pin to high level
 241:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 242:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 243:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  DIGITAL_IO_SetOutputLow()
 244:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 245:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 246:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 247:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include "DAVE.h" //Declarations from DAVE Code Generation (includes SFR declaration)
 248:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 249:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 250:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 251:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 252:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 253:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 254:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 255:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 256:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 257:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 258:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 259:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 260:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1U)
 261:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 262:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 263:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 264:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 265:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DIGITAL_IO_SetOutputHigh(&DIGITAL_IO_0);
 266:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 267:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 268:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // Add application code here
 269:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 270:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 271:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 272:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 273:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 274:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 275:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 276:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_SetOutputHigh(const DIGITAL_IO_t *const handler)
 277:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 147              	 .loc 2 277 0
 148              	 .cfi_startproc
 149 0000 80B5     	 push {r7,lr}
 150              	.LCFI9:
 151              	 .cfi_def_cfa_offset 8
 152              	 .cfi_offset 7,-8
 153              	 .cfi_offset 14,-4
 154 0002 82B0     	 sub sp,sp,#8
 155              	.LCFI10:
 156              	 .cfi_def_cfa_offset 16
 157 0004 00AF     	 add r7,sp,#0
 158              	.LCFI11:
 159              	 .cfi_def_cfa_register 7
 160 0006 7860     	 str r0,[r7,#4]
 278:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_SetOutputHigh: handler null pointer", handler != NULL);
 279:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_SetOutputHigh(handler->gpio_port, handler->gpio_pin);
 161              	 .loc 2 279 0
 162 0008 7B68     	 ldr r3,[r7,#4]
 163 000a 1A68     	 ldr r2,[r3]
 164 000c 7B68     	 ldr r3,[r7,#4]
 165 000e 1B7B     	 ldrb r3,[r3,#12]
 166 0010 101C     	 mov r0,r2
 167 0012 191C     	 mov r1,r3
 168 0014 FFF7FEFF 	 bl XMC_GPIO_SetOutputHigh
 280:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 169              	 .loc 2 280 0
 170 0018 BD46     	 mov sp,r7
 171 001a 02B0     	 add sp,sp,#8
 172              	 
 173 001c 80BD     	 pop {r7,pc}
 174              	 .cfi_endproc
 175              	.LFE195:
 177 001e C046     	 .section .text.DIGITAL_IO_SetOutputLow,"ax",%progbits
 178              	 .align 2
 179              	 .code 16
 180              	 .thumb_func
 182              	DIGITAL_IO_SetOutputLow:
 183              	.LFB196:
 281:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 282:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 283:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to reset port pin.
 284:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 285:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return None
 286:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 287:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 288:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to make port pin to low level.
 289:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 290:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 291:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * DIGITAL_IO_SetOutputHigh()
 292:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 293:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 294:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 295:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  #include "DAVE.h" //Declarations from DAVE Code Generation (includes SFR declaration)
 296:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 297:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  int main(void)
 298:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  {
 299:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    DAVE_STATUS_t status;
 300:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_I
 301:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    if(status == DAVE_STATUS_SUCCESS)
 302:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 303:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG("DAVE Apps initialization success\n");
 304:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 305:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    else
 306:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 307:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 308:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *      while(1U)
 309:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *      {
 310:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *      }
 311:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 312:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    //Placeholder for user application code. The while loop below can be replaced with user applic
 313:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    DIGITAL_IO_SetOutputLow(&DIGITAL_IO_0);
 314:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    while(1U)
 315:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 316:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *      // Add application code here
 317:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 318:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 319:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 320:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 321:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 322:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 323:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 324:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_SetOutputLow(const DIGITAL_IO_t *const handler)
 325:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 184              	 .loc 2 325 0
 185              	 .cfi_startproc
 186 0000 80B5     	 push {r7,lr}
 187              	.LCFI12:
 188              	 .cfi_def_cfa_offset 8
 189              	 .cfi_offset 7,-8
 190              	 .cfi_offset 14,-4
 191 0002 82B0     	 sub sp,sp,#8
 192              	.LCFI13:
 193              	 .cfi_def_cfa_offset 16
 194 0004 00AF     	 add r7,sp,#0
 195              	.LCFI14:
 196              	 .cfi_def_cfa_register 7
 197 0006 7860     	 str r0,[r7,#4]
 326:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_SetOutputLow: handler null pointer", handler != NULL);
 327:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_SetOutputLow(handler->gpio_port,handler->gpio_pin);
 198              	 .loc 2 327 0
 199 0008 7B68     	 ldr r3,[r7,#4]
 200 000a 1A68     	 ldr r2,[r3]
 201 000c 7B68     	 ldr r3,[r7,#4]
 202 000e 1B7B     	 ldrb r3,[r3,#12]
 203 0010 101C     	 mov r0,r2
 204 0012 191C     	 mov r1,r3
 205 0014 FFF7FEFF 	 bl XMC_GPIO_SetOutputLow
 328:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 206              	 .loc 2 328 0
 207 0018 BD46     	 mov sp,r7
 208 001a 02B0     	 add sp,sp,#8
 209              	 
 210 001c 80BD     	 pop {r7,pc}
 211              	 .cfi_endproc
 212              	.LFE196:
 214 001e C046     	 .section .text.PIN_INTERRUPT_GetPinValue,"ax",%progbits
 215              	 .align 2
 216              	 .code 16
 217              	 .thumb_func
 219              	PIN_INTERRUPT_GetPinValue:
 220              	.LFB205:
 221              	 .file 3 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT/pin_interrupt.h"
   1:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
   2:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @file pin_interrupt.h
   3:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @date 2021-01-08
   4:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
   5:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * NOTE:
   6:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
   8:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @cond
   9:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
  10:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * PIN_INTERRUPT v4.0.4 - The PIN_INTERRUPT APP invokes user interrupt handler in a response to ris
  11:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                        edge event signal on a pin.
  12:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
  13:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * Copyright (c) 2016-2020, Infineon Technologies AG
  14:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * All rights reserved.                        
  15:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                                             
  16:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  17:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * following conditions are met:   
  18:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                                                                              
  19:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  20:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   disclaimer.                        
  21:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * 
  22:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  23:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   disclaimer in the documentation and/or other materials provided with the distribution.     
  24:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                         
  25:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  26:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   products derived from this software without specific prior written permission. 
  27:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                                             
  28:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  29:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  30:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  31:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  32:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  33:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  34:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.    
  35:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                                                                              
  36:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  37:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * with Infineon Technologies AG (dave@infineon.com).         
  38:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
  39:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
  40:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * Change History
  41:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * --------------
  42:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * 2015-12-03:
  43:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     - Initial version for DAVEv4. <BR>
  44:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * 
  45:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * 2021-01-08:
  46:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     - Modified check for minimum XMCLib version
  47:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
  48:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @endcond 
  49:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
  50:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
  51:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  52:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #ifndef PIN_INTERRUPT_H
  53:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #define PIN_INTERRUPT_H
  54:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  55:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**************************************************************************************************
  56:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * HEADER FILES                                                                                    
  57:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
  58:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #if (UC_SERIES == XMC14)
  59:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #include "xmc_scu.h"
  60:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #endif
  61:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #include "xmc_gpio.h"
  62:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #include "xmc_eru.h"
  63:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  64:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #include "DAVE_Common.h"
  65:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #include "pin_interrupt_conf.h"
  66:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  67:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**************************************************************************************************
  68:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * MACROS                                                                                          
  69:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
  70:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #define PIN_INTERRUPT_XMC_LIB_MAJOR_VERSION 2
  71:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #define PIN_INTERRUPT_XMC_LIB_MINOR_VERSION 1
  72:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #define PIN_INTERRUPT_XMC_LIB_PATCH_VERSION 6
  73:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  74:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #if !((XMC_LIB_MAJOR_VERSION > PIN_INTERRUPT_XMC_LIB_MAJOR_VERSION) ||\
  75:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****       ((XMC_LIB_MAJOR_VERSION == PIN_INTERRUPT_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION > P
  76:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****       ((XMC_LIB_MAJOR_VERSION == PIN_INTERRUPT_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION == 
  77:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #error "PIN_INTERRUPT requires XMC Peripheral Library v2.1.6 or higher"
  78:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #endif
  79:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  80:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
  81:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @ingroup App_publicparam
  82:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @{
  83:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
  84:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
  85:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  @brief Initialization data structure for PIN_INTERRUPT APP
  86:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
  87:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  88:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
  89:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @}
  90:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
  91:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  92:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  /*************************************************************************************************
  93:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * ENUMS
  94:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
  95:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
  96:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @ingroup PIN_INTERRUPT_enumerations
  97:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @{
  98:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
  99:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /*
 100:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief enumeration for PIN_INTERRUPT APP
 101:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 102:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** typedef enum PIN_INTERRUPT_STATUS
 103:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
 104:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_STATUS_SUCCESS = 0U,        /**<APP initialization is success */
 105:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_STATUS_FAILURE = 1U         /**<APP initialization is failure */
 106:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** } PIN_INTERRUPT_STATUS_t;
 107:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 108:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 109:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 110:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * Defines trigger edge for the event generation by ETLx (Event Trigger Logic, x = [0 to 3]) unit, 
 111:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * from ERSx(Event request source, x = [0 to 3]) unit.
 112:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 113:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** typedef enum PIN_INTERRUPT_EDGE
 114:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
 115:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_EDGE_NONE = 0U, /**< no event enabled */
 116:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_EDGE_RISING = 1U,   /**< detection of rising edge generates the event */
 117:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_EDGE_FALLING = 2U,  /**< detection of falling edge generates the event */
 118:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_EDGE_BOTH = 3U      /**< detection of either edges generates the event */
 119:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** } PIN_INTERRUPT_EDGE_t;
 120:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 121:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @}
 122:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 123:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 124:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**************************************************************************************************
 125:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * DATA STRUCTURES
 126:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** ***************************************************************************************************
 127:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 128:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @ingroup PIN_INTERRUPT_datastructures
 129:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @{
 130:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 131:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 132:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 133:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief Configuration structure for PIN_INTERRUPT APP
 134:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 135:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** typedef struct PIN_INTERRUPT
 136:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
 137:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_ERU_t *eru;  /**< Mapped ERU module */
 138:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_GPIO_PORT_t *port;  /**< Mapped port number */
 139:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_GPIO_CONFIG_t gpio_config;   /**< Initializes the input pin characteristics */
 140:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_ERU_ETL_CONFIG_t etl_config;  /**< reference to ERUx_ETLy (x = [0..1], y = [0..4])
 141:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****                                                       module configuration */
 142:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #if (UC_SERIES == XMC14)
 143:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_SCU_IRQCTRL_t irqctrl;  /**< selects the interrupt source for a NVIC interrupt node*/
 144:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #endif
 145:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   IRQn_Type IRQn;       /**< Mapped NVIC Node */
 146:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   uint8_t irq_priority; 	  /**< Node Interrupt Priority */
 147:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #if (UC_FAMILY == XMC4)
 148:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   uint8_t irq_subpriority;  /**< Node Interrupt SubPriority only valid for XMC4x */
 149:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #endif
 150:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   uint8_t etl; /*< ETLx channel (x = [0..3])*/
 151:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   uint8_t ogu; /*< OGUy channel (y = [0..3])*/
 152:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   uint8_t pin; /*< Mapped pin number */
 153:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   bool enable_at_init;  /**< Interrupt enable for Node at initialization*/
 154:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** } PIN_INTERRUPT_t;
 155:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 156:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @}
 157:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 158:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 159:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #ifdef __cplusplus
 160:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** extern "C" {
 161:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #endif
 162:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**************************************************************************************************
 163:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * API Prototypes
 164:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
 165:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 166:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @ingroup PIN_INTERRUPT_apidoc
 167:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @{
 168:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 169:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 170:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief Get PIN_INTERRUPT APP version
 171:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @return DAVE_APP_VERSION_t APP version information (major, minor and patch number)
 172:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 173:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * \par<b>Description: </b><br>
 174:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * The function can be used to check application software compatibility with a
 175:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * specific version of the APP.
 176:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 177:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * \par<b>Example Usage:</b><br>
 178:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 179:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @code
 180:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * #include "DAVE.h"
 181:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 182:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * int main(void) 
 183:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * {
 184:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   DAVE_STATUS_t init_status;
 185:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   DAVE_APP_VERSION_t version;
 186:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 187:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   // Initialize PIN_INTERRUPT APP:
 188:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   // PIN_INTERRUPT_Init() is called from within DAVE_Init().
 189:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   init_status = DAVE_Init();
 190:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 191:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   if (DAVE_STATUS_SUCCESS == init_status)
 192:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   {
 193:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     version = PIN_INTERRUPT_GetAppVersion();
 194:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     if (version.major != 4U) {
 195:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *       // Probably, not the right version.
 196:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     }
 197:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   }
 198:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 199:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   // More code here
 200:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   while(1)
 201:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   {
 202:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   }
 203:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   return (1);
 204:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * }
 205:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @endcode<BR>
 206:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 207:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** DAVE_APP_VERSION_t PIN_INTERRUPT_GetAppVersion(void);
 208:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 209:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 210:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief Initializes a PIN_INTERRUPT APP instance
 211:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @param handle Pointer pointing to APP data structure. Refer @ref PIN_INTERRUPT_t for details.
 212:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @return
 213:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *            PIN_INTERRUPT_STATUS_SUCCESS             : if initialization is successful\n
 214:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *            PIN_INTERRUPT_STATUS_FAILURE             : if initialization is failed
 215:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 216:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * \par<b>Description:</b><br>
 217:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * PIN_INTERRUPT_Init API is called during initialization of DAVE APPS. This API Initializes input 
 218:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * ERU and OGU hardware module initialization, Configures NVIC node and its priority in order to ge
 219:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 220:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * \par<b>Example Usage:</b><br>
 221:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 222:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @code
 223:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * #include "DAVE.h"
 224:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 225:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * int main(void)
 226:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * {
 227:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   DAVE_STATUS_t status;
 228:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 229:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   status = DAVE_Init();  //  PIN_INTERRUPT_Init API is called during initialization of DAVE APPS
 230:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   if (DAVE_STATUS_SUCCESS == status)
 231:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   {
 232:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     // user code
 233:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 234:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     while(1)
 235:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     {
 236:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 237:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     }
 238:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   }
 239:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   return (1);
 240:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * }
 241:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 242:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @endcode<BR>
 243:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 244:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** PIN_INTERRUPT_STATUS_t PIN_INTERRUPT_Init(const PIN_INTERRUPT_t *const handle);
 245:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 246:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 247:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief Enables the IRQ.
 248:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @param handle Pointer pointing to APP data structure. Refer @ref PIN_INTERRUPT_t for details.
 249:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @return None
 250:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * <BR><P ALIGN="LEFT"><B>Example:</B>
 251:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 252:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @code
 253:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  #include "DAVE.h"
 254:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 255:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  int main(void)
 256:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  {
 257:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    DAVE_STATUS_t status;
 258:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 259:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    status = DAVE_Init();  //  PIN_INTERRUPT_Init API is called during initialization of DAVE APP
 260:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    if (DAVE_STATUS_SUCCESS == status)
 261:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    {
 262:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *      // user code
 263:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 264:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *      PIN_INTERRUPT_Enable(&PIN_INTERRUPT_0);
 265:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *      while(1)
 266:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *      {}
 267:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    }
 268:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 269:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    return (1);
 270:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  }
 271:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @endcode<BR> </p>
 272:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 273:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** __STATIC_INLINE void PIN_INTERRUPT_Enable(const PIN_INTERRUPT_t *const handle)
 274:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
 275:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_ASSERT("PIN_INTERRUPT_Enable: Handler null pointer", handle != NULL);
 276:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   NVIC_EnableIRQ(handle->IRQn);
 277:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** }
 278:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 279:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 280:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief Disables the IRQ.
 281:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @param handle Pointer pointing to APP data structure. Refer @ref PIN_INTERRUPT_t for details.
 282:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @return None
 283:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * <BR><P ALIGN="LEFT"><B>Example:</B>
 284:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 285:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @code
 286:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  #include "DAVE.h"
 287:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 288:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  int main(void)
 289:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  {
 290:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 291:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    DAVE_STATUS_t status;
 292:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 293:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    status = DAVE_Init();  //  PIN_INTERRUPT_Init API is called during initialization of DAVE APP
 294:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    if(DAVE_STATUS_SUCCESS == status)
 295:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    {
 296:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *      // user code
 297:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 298:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *      PIN_INTERRUPT_Disable(&PIN_INTERRUPT_0);
 299:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *      while(1)
 300:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *      {}
 301:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    }
 302:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 303:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    return (1);
 304:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 305:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  }
 306:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @endcode<BR> </p>
 307:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 308:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** __STATIC_INLINE void PIN_INTERRUPT_Disable(const PIN_INTERRUPT_t *const handle)
 309:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
 310:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_ASSERT("PIN_INTERRUPT_Disable: Handler null pointer", handle != NULL);
 311:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   NVIC_DisableIRQ(handle->IRQn);
 312:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** }
 313:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 314:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 315:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * @brief Read input level of port pin.
 316:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * @param handle Pointer pointing to APP data structure. Refer @ref PIN_INTERRUPT_t for details.
 317:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * @return uint32_t input logic level. Range:0-1
 318:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *
 319:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * \par<b>Description:</b><br>
 320:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * This function reads the Pn_IN register and returns the current logical value at the GPIO pin.
 321:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *
 322:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *
 323:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * Example Usage:
 324:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * @code
 325:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * #include "DAVE.h"//Declarations from DAVE Code Generation (includes SFR declaration)
 326:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *
 327:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * int main(void)
 328:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * {
 329:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   DAVE_STATUS_t status;
 330:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   uint32_t pin_status;
 331:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   status = DAVE_Init();   // (DAVE_STATUS_t)PIN_INTERRUPT_Init(&PIN_INTERRUPT_0) is called within
 332:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   
 333:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   if (status == DAVE_STATUS_SUCCESS)
 334:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   {
 335:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 336:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   }
 337:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   else
 338:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   {
 339:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 340:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     while(1U)
 341:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     {
 342:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     }
 343:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   }
 344:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 345:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   while(1U)
 346:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   {
 347:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     pin_status = PIN_INTERRUPT_GetPinValue(&PIN_INTERRUPT_0);
 348:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     if (pin_status == 1)
 349:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     {
 350:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *       // Add application code here
 351:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     }
 352:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     else
 353:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     {
 354:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *       // Add application code here
 355:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     }
 356:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   }
 357:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   return (1);
 358:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * }
 359:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *  @endcode
 360:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** */
 361:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** __STATIC_INLINE uint32_t PIN_INTERRUPT_GetPinValue(const PIN_INTERRUPT_t *const handle)
 362:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
 222              	 .loc 3 362 0
 223              	 .cfi_startproc
 224 0000 80B5     	 push {r7,lr}
 225              	.LCFI15:
 226              	 .cfi_def_cfa_offset 8
 227              	 .cfi_offset 7,-8
 228              	 .cfi_offset 14,-4
 229 0002 82B0     	 sub sp,sp,#8
 230              	.LCFI16:
 231              	 .cfi_def_cfa_offset 16
 232 0004 00AF     	 add r7,sp,#0
 233              	.LCFI17:
 234              	 .cfi_def_cfa_register 7
 235 0006 7860     	 str r0,[r7,#4]
 363:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_ASSERT("PIN_INTERRUPT_GetPinValue: Handler null pointer", handle != NULL);
 364:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   return (XMC_GPIO_GetInput(handle->port, handle->pin));
 236              	 .loc 3 364 0
 237 0008 7B68     	 ldr r3,[r7,#4]
 238 000a 5A68     	 ldr r2,[r3,#4]
 239 000c 7B68     	 ldr r3,[r7,#4]
 240 000e 9B7F     	 ldrb r3,[r3,#30]
 241 0010 101C     	 mov r0,r2
 242 0012 191C     	 mov r1,r3
 243 0014 FFF7FEFF 	 bl XMC_GPIO_GetInput
 244 0018 031C     	 mov r3,r0
 365:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** }
 245              	 .loc 3 365 0
 246 001a 181C     	 mov r0,r3
 247 001c BD46     	 mov sp,r7
 248 001e 02B0     	 add sp,sp,#8
 249              	 
 250 0020 80BD     	 pop {r7,pc}
 251              	 .cfi_endproc
 252              	.LFE205:
 254 0022 C046     	 .section .text.XMC_WDT_Start,"ax",%progbits
 255              	 .align 2
 256              	 .code 16
 257              	 .thumb_func
 259              	XMC_WDT_Start:
 260              	.LFB214:
 261              	 .file 4 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc/xmc_wdt.h"
   1:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
   2:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @file xmc_wdt.h
   3:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @date 2015-08-06
   4:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
   5:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @cond
   6:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *****************************************************************************
   7:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
   9:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * All rights reserved.
  11:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
  12:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
  14:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Permission is hereby granted, free of charge, to any person or organization
  15:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * obtaining a copy of the software and accompanying documentation covered by
  16:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * do so, all subject to the following:
  20:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
  21:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * The copyright notices in the Software and this entire statement, including
  22:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * the above license grant, this restriction and the following disclaimer,
  23:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * must be included in all copies of the Software, in whole or in part, and
  24:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * all derivative works of the Software, unless such copies or derivative
  25:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * works are solely in the form of machine-executable object code generated by
  26:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * a source language processor.
  27:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
  28:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * DEALINGS IN THE SOFTWARE.
  35:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
  36:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * To improve the quality of the software, users are encouraged to share
  37:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * at XMCSupport@infineon.com.
  39:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *****************************************************************************
  40:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
  41:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Change History
  42:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * --------------
  43:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
  44:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * 2015-02-20:
  45:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *     - Initial <br>
  46:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *     - Documentation updates <br>
  47:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
  48:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * 2015-06-20:
  49:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  50:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
  51:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * 2015-08-06:
  52:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *     - Bug fix in XMC_WDT_SetDebugMode() API, Wrong register is being configured.<br>
  53:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @endcond
  54:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
  55:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
  56:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #ifndef XMC_WDT_H
  57:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #define XMC_WDT_H
  58:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
  59:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**************************************************************************************************
  60:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * HEADER FILES
  61:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  **************************************************************************************************
  62:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
  63:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #include "xmc_common.h"
  64:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #include "xmc_scu.h"
  65:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
  66:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @addtogroup XMClib XMC Peripheral Library
  67:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @{
  68:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
  69:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
  70:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
  71:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @addtogroup WDT
  72:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @brief Watchdog driver for the XMC microcontroller family.
  73:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
  74:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * The watchdog unit (WDT) improves the system integrity, by triggering the system reset request to
  75:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * back from the unresponsive state to normal operation.
  76:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
  77:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * This LLD provides the Configuration structure XMC_WDT_CONFIG_t and initialization function XMC_W
  78:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * It can be used to:
  79:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * -# Start or Stop the watchdog timer. (XMC_WDT_Start() and XMC_WDT_Stop())
  80:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * -# Service the watchdog timer. (XMC_WDT_Service())
  81:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * -# Configure the service window upper bound and lower bound timing values. (XMC_WDT_SetWindowBou
  82:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * -# Enable the generation of the pre-warning event for the first overflow of the timer. (XMC_WDT_
  83:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * -# Clear the pre-warning alarm event. It is mandatory to clear the flag during pre-warning alarm
  84:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****       generating reset request for the second overflow of the timer. (XMC_WDT_ClearAlarm())
  85:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * -# Suspend the watchdog timer during Debug HALT mode. (XMC_WDT_SetDebugMode())
  86:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * -# Configure service indication pulse width.(XMC_WDT_SetServicePulseWidth())
  87:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
  88:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @{
  89:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
  90:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
  91:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**************************************************************************************************
  92:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * MACROS
  93:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   *************************************************************************************************
  94:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
  95:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #define XMC_WDT_MAGIC_WORD             (0xABADCAFEU) /* Magic word to be written in Service Registe
  96:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****                                                           to service or feed the watchdog. */
  97:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
  98:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**************************************************************************************************
  99:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * ENUMS
 100:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   *************************************************************************************************
 101:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 102:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 103:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *  Defines working modes for watchdog. Use type XMC_WDT_MODE_t for this enum.
 104:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 105:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** typedef enum XMC_WDT_MODE
 106:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** {
 107:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   XMC_WDT_MODE_TIMEOUT    = (uint32_t)0x0 << WDT_CTR_PRE_Pos, /**< Generates reset request as soon 
 108:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****                                                                    occurs. */
 109:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   XMC_WDT_MODE_PREWARNING = (uint32_t)0x1 << WDT_CTR_PRE_Pos  /**< Generates an alarm event for the
 110:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****                                                                    reset request after subsequent o
 111:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****                                                                    serviced after first overflow. *
 112:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** } XMC_WDT_MODE_t;
 113:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 114:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 115:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *  Defines debug behaviour of watchdog when the CPU enters HALT mode. Use type XMC_WDT_DEBUG_MODE_
 116:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 117:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** typedef enum XMC_WDT_DEBUG_MODE
 118:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** {
 119:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   XMC_WDT_DEBUG_MODE_STOP = (uint32_t)0x0 << WDT_CTR_DSP_Pos, /**< Watchdog counter is paused durin
 120:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   XMC_WDT_DEBUG_MODE_RUN  = (uint32_t)0x1 << WDT_CTR_DSP_Pos  /**< Watchdog counter is not paused d
 121:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** } XMC_WDT_DEBUG_MODE_t;
 122:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 123:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**************************************************************************************************
 124:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * DATA STRUCTURES
 125:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   *************************************************************************************************
 126:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /* Anonymous structure/union guard start */
 127:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #if defined(__CC_ARM)
 128:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #pragma push
 129:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #pragma anon_unions
 130:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #elif defined(__TASKING__)
 131:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #pragma warning 586
 132:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #endif
 133:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 134:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 135:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Structure for initializing watchdog timer. Use type XMC_WDT_CONFIG_t for this structure.
 136:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 137:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** typedef struct XMC_WDT_CONFIG
 138:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** {
 139:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   uint32_t window_upper_bound; /**< Upper bound for service window (WUB). Reset request is generate
 140:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****                                     timer. ALways upper bound value has to be more than lower bound
 141:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****                                     lower than WLB, triggers a system reset after timer crossed upp
 142:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****                                     Range: [0H to FFFFFFFFH] */
 143:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   uint32_t window_lower_bound; /**< Lower bound for servicing window (WLB). Setting the lower bound
 144:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****                                     window mechanism.\n
 145:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****                                     Range: [0H to FFFFFFFFH] */
 146:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   union
 147:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   {
 148:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****     struct
 149:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****     {
 150:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****       uint32_t : 1;
 151:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****       uint32_t prewarn_mode : 1;        /**< Pre-warning mode (PRE). This accepts boolean values as
 152:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****       uint32_t : 2;
 153:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****       uint32_t run_in_debug_mode : 1;   /**< Watchdog timer behaviour during debug (DSP). This acce
 154:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****       uint32_t : 3;
 155:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****       uint32_t service_pulse_width : 8; /**< Service Indication Pulse Width (SPW). Generated Pulse 
 156:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****                                              in fwdt cycles.\n
 157:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****                                              Range: [0H to FFH] */
 158:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****       uint32_t : 16;
 159:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****     };
 160:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****     uint32_t wdt_ctr; /* Value of operation mode control register (CTR). It’s bit fields are repr
 161:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****                            union members. */
 162:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   };
 163:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** } XMC_WDT_CONFIG_t;
 164:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /* Anonymous structure/union guard end */
 165:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #if defined(__CC_ARM)
 166:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #pragma pop
 167:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #elif defined(__TASKING__)
 168:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #pragma warning restore
 169:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #endif
 170:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**************************************************************************************************
 171:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * API PROTOTYPES
 172:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   *************************************************************************************************
 173:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 174:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #ifdef __cplusplus
 175:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** extern "C" {
 176:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #endif
 177:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 178:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 179:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param None
 180:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 181:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @return None
 182:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 183:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Description:</b><br>
 184:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \if XMC4
 185:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Enables watchdog clock and releases watchdog reset.\n
 186:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \endif
 187:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \if XMC1
 188:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Enables watchdog clock.\n
 189:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \endif
 190:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par
 191:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * This API is invoked by XMC_WDT_Init() and therefore no need to call it explicitly during watchdo
 192:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * sequence. Invoke this API to enable watchdog once again if the watchdog is disabled by invoking 
 193:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 194:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Note:</b><br>
 195:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \if XMC4
 196:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * 1. It is required to configure the watchdog, again after invoking XMC_WDT_Disable(). Since all t
 197:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *    reset with default values.
 198:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \endif
 199:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \if XMC1
 200:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * 1. Not required to configure the watchdog again after invoking XMC_WDT_Disable(). Since the regi
 201:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *    the configured values.
 202:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \endif
 203:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Related APIs:</b><BR>
 204:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * XMC_WDT_Init(), XMC_WDT_Disable()
 205:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 206:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** void XMC_WDT_Enable(void);
 207:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 208:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 209:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param None
 210:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 211:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @return None
 212:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 213:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Description:</b><br>
 214:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \if XMC4
 215:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Disables the clock and resets watchdog timer.\n
 216:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \endif
 217:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \if XMC1
 218:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Disables the clock to the watchdog timer.\n
 219:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \endif
 220:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 221:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Note:</b><br>
 222:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \if XMC4
 223:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * 1. Resets the registers with default values. So XMC_WDT_Init() has to be invoked again to config
 224:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \endif
 225:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \if XMC1
 226:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * 1. After invoking XMC_WDT_Disable(), all register values are displayed with 0F in debugger. Once
 227:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****       calling XMC_WDT_Enable(), previous configured register values are displayed. No need to invok
 228:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****       again.
 229:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \endif
 230:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Related APIs:</b><BR>
 231:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * XMC_WDT_Enable()
 232:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 233:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** void XMC_WDT_Disable(void);
 234:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 235:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 236:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param config pointer to a constant watchdog configuration data structure. Refer data structure 
 237:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *               for detail.
 238:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 239:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @return None
 240:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 241:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Description:</b><br>
 242:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Initializes and configures watchdog with configuration data pointed by \a config.\n
 243:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par
 244:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * It invokes XMC_WDT_Enable() to enable clock and release reset. Then configures the lower and upp
 245:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * working mode (timeout/pre-warning), debug behaviour and service request indication pulse width.
 246:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 247:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Note:</b><br>
 248:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * 1. With out invoking this XMC_WDT_Init() or XMC_WDT_Enable(), invocation of other APIs like XMC_
 249:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *    XMC_WDT_SetMode(), XMC_WDT_SetServicePulseWidth(), XMC_WDT_SetDebugMode(), XMC_WDT_Start(), X
 250:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *    XMC_WDT_Service(), XMC_WDT_ClearAlarm() has no affect.
 251:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 252:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** void XMC_WDT_Init(const XMC_WDT_CONFIG_t *const config);
 253:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 254:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 255:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param lower_bound specifies watchdog window lower bound in terms of watchdog clock (fWDT) cycle
 256:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *                    Range: [0H to FFFFFFFFH].
 257:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param upper_bound specifies watchdog window upper bound in terms of watchdog clock (fWDT) cycle
 258:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *                    Range: [0H to FFFFFFFFH].
 259:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 260:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @return None
 261:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 262:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Description:</b><br>
 263:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Sets watchdog window lower and upper bounds by updating WLB and WUB registers.\n
 264:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par
 265:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Window lower and upper bounds are set during initialization in XMC_WDT_Init(). Invoke this API t
 266:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * needed later in the program. This upper bound and lower bound can be calculated by using the bel
 267:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *       upper_bound or lower_bound = desired_boundary_time(sec) * fwdt(hz)
 268:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 269:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Note:</b>
 270:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * 1. Always ensure that upper_bound is greater than the lower_bound value. If not, whenever timer 
 271:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *    upper_bound value it triggers the reset(wdt_rst_req) of the controller.
 272:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 273:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** __STATIC_INLINE void XMC_WDT_SetWindowBounds(uint32_t lower_bound, uint32_t upper_bound)
 274:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** {
 275:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   WDT->WLB = lower_bound;
 276:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   WDT->WUB = upper_bound;
 277:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** }
 278:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 279:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 280:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param mode is one of the working modes of the watchdog timer, i.e timeout or pre-warning. Refer
 281:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *             for valid values.
 282:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 283:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @return None
 284:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 285:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Description:</b><br>
 286:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Sets watchdog working mode (timeout or pre-warning) by updating PRE bit of CTR register.\n
 287:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par
 288:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * The working mode is set during initialization in XMC_WDT_Init(). Invoke this API to alter the mo
 289:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * the program.
 290:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 291:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** __STATIC_INLINE void XMC_WDT_SetMode(XMC_WDT_MODE_t mode)
 292:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** {
 293:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   WDT->CTR = (WDT->CTR & (uint32_t)~WDT_CTR_PRE_Msk) | (uint32_t)mode;
 294:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** }
 295:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 296:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 297:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param service_pulse_width specifies Service indication pulse width in terms of fwdt.
 298:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *                            Range: [0H – FFH].
 299:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @return None
 300:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 301:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Description:</b><br>
 302:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Sets service indication pulse width by updating SPW bit field of CTR register.\n
 303:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par
 304:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * The service indication pulse (with width service_pulse_width + 1 in fwdt cycles) is generated on
 305:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * or feeding of watchdog. The pulse width is initially set during initialization in XMC_WDT_Init()
 306:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * alter the width as needed later in the program.
 307:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 308:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** __STATIC_INLINE void XMC_WDT_SetServicePulseWidth(uint8_t service_pulse_width)
 309:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** {
 310:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   WDT->CTR = (WDT->CTR & (uint32_t)~WDT_CTR_SPW_Msk) | ((uint32_t)service_pulse_width << WDT_CTR_SP
 311:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** }
 312:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 313:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 314:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param debug_mode running state of watchdog during debug halt mode. Refer @ref XMC_WDT_DEBUG_MOD
 315:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *                   valid values.
 316:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 317:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @return None
 318:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 319:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Description:</b><br>
 320:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Sets debug behaviour of watchdog by modifying DSP bit of CTR register.\n
 321:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par
 322:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Depending upon DSP bit, the watchdog timer stops when CPU is in HALT mode. The debug behaviour i
 323:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * XMC_WDT_DEBUG_MODE_STOP during initialization in XMC_WDT_Init(). Invoke this API to change the d
 324:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * needed later in the program.
 325:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 326:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** __STATIC_INLINE void XMC_WDT_SetDebugMode(const XMC_WDT_DEBUG_MODE_t debug_mode)
 327:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** {
 328:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   WDT->CTR = (WDT->CTR & (uint32_t)~WDT_CTR_DSP_Msk) | (uint32_t)debug_mode;
 329:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** }
 330:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 331:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 332:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param None
 333:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 334:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @return None
 335:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 336:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Description:</b><br>
 337:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Start the watchdog timer by setting ENB bit of CTR register.\n
 338:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par
 339:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Invoke this API to start the watchdog after initialization, or to resume the watchdog when
 340:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * paused by invoking XMC_WDT_Stop().
 341:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 342:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Related APIs:</b><BR>
 343:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * XMC_WDT_Init(), XMC_WDT_Stop()
 344:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 345:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** __STATIC_INLINE void XMC_WDT_Start(void)
 346:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** {
 262              	 .loc 4 346 0
 263              	 .cfi_startproc
 264 0000 80B5     	 push {r7,lr}
 265              	.LCFI18:
 266              	 .cfi_def_cfa_offset 8
 267              	 .cfi_offset 7,-8
 268              	 .cfi_offset 14,-4
 269 0002 00AF     	 add r7,sp,#0
 270              	.LCFI19:
 271              	 .cfi_def_cfa_register 7
 347:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   WDT->CTR |= (uint32_t)WDT_CTR_ENB_Msk;
 272              	 .loc 4 347 0
 273 0004 034B     	 ldr r3,.L10
 274 0006 034A     	 ldr r2,.L10
 275 0008 5268     	 ldr r2,[r2,#4]
 276 000a 0121     	 mov r1,#1
 277 000c 0A43     	 orr r2,r1
 278 000e 5A60     	 str r2,[r3,#4]
 348:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** }
 279              	 .loc 4 348 0
 280 0010 BD46     	 mov sp,r7
 281              	 
 282 0012 80BD     	 pop {r7,pc}
 283              	.L11:
 284              	 .align 2
 285              	.L10:
 286 0014 00000240 	 .word 1073872896
 287              	 .cfi_endproc
 288              	.LFE214:
 290              	 .section .text.XMC_WDT_Service,"ax",%progbits
 291              	 .align 2
 292              	 .code 16
 293              	 .thumb_func
 295              	XMC_WDT_Service:
 296              	.LFB217:
 349:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 350:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 351:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param None
 352:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 353:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @return None
 354:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 355:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Description:</b><br>
 356:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Pauses watchdog timer by resetting ENB bit of CTR register.\n
 357:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par
 358:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Invoke this API to pause the watchdog as needed in the program e.g. debugging through software c
 359:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 360:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Related APIs:</b><BR>
 361:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * XMC_WDT_Init(), XMC_WDT_Stop()
 362:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 363:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** __STATIC_INLINE void XMC_WDT_Stop(void)
 364:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** {
 365:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   WDT->CTR &= (uint32_t)~WDT_CTR_ENB_Msk;
 366:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** }
 367:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 368:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 369:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param None
 370:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 371:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @return uint32_t Current count value of watchdog timer register (TIM).
 372:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *                  Range: [0H to FFFFFFFFH]
 373:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 374:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Description:</b><br>
 375:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Reads current count of timer register (TIM).\n
 376:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par
 377:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Invoke this API before servicing or feeding the watchdog to check whether count is between lower
 378:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * window bounds.
 379:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 380:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Related APIs:</b><BR>
 381:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * XMC_WDT_Service()
 382:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 383:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** __STATIC_INLINE uint32_t XMC_WDT_GetCounter(void)
 384:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** {
 385:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   return WDT->TIM;
 386:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** }
 387:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 388:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 389:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param None
 390:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 391:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @return None
 392:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 393:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Description:</b><br>
 394:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Services or feeds the watchdog by writing the Magic word in SRV register.\n
 395:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par
 396:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Service watchdog when count value of watchdog timer is between lower and upper window bounds. Su
 397:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * will reset watchdog timer (TIM register) to 0H and generate service indication pulse.
 398:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 399:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Note:</b><br>
 400:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * 1. invoking this API when count value of watchdog timer is less than window lower bound results
 401:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *    wrong servicing and immediately triggers reset request.
 402:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 403:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Related APIs:</b><BR>
 404:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * XMC_WDT_GetCounter(), XMC_WDT_SetWindowBounds(), XMC_WDT_SetServicePulseWidth()
 405:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 406:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** __STATIC_INLINE void XMC_WDT_Service(void)
 407:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** {
 297              	 .loc 4 407 0
 298              	 .cfi_startproc
 299 0000 80B5     	 push {r7,lr}
 300              	.LCFI20:
 301              	 .cfi_def_cfa_offset 8
 302              	 .cfi_offset 7,-8
 303              	 .cfi_offset 14,-4
 304 0002 00AF     	 add r7,sp,#0
 305              	.LCFI21:
 306              	 .cfi_def_cfa_register 7
 408:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   WDT->SRV = XMC_WDT_MAGIC_WORD;
 307              	 .loc 4 408 0
 308 0004 024B     	 ldr r3,.L13
 309 0006 034A     	 ldr r2,.L13+4
 310 0008 9A60     	 str r2,[r3,#8]
 409:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** }
 311              	 .loc 4 409 0
 312 000a BD46     	 mov sp,r7
 313              	 
 314 000c 80BD     	 pop {r7,pc}
 315              	.L14:
 316 000e C046     	 .align 2
 317              	.L13:
 318 0010 00000240 	 .word 1073872896
 319 0014 FECAADAB 	 .word -1414673666
 320              	 .cfi_endproc
 321              	.LFE217:
 323              	 .section .text.XMC_WDT_ClearAlarm,"ax",%progbits
 324              	 .align 2
 325              	 .code 16
 326              	 .thumb_func
 328              	XMC_WDT_ClearAlarm:
 329              	.LFB218:
 410:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 411:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 412:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param None
 413:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 414:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @return None
 415:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 416:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Description:</b><br>
 417:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Clears pre-warning alarm by setting ALMC bit in WDTCLR register.\n
 418:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par
 419:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * In pre-warning mode, first overflow of the timer upper window bound fires the pre-warning alarm.
 420:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * must be invoked to clear the alarm alarm. After clearing of the alarm, watchdog timer must be se
 421:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * time window. Otherwise watchdog timer triggers the reset request up on crossing the upper bound 
 422:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * cycle.
 423:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 424:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Related APIs:</b><BR>
 425:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * XMC_WDT_Service(), XMC_WDT_SetMode()
 426:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 427:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** __STATIC_INLINE void XMC_WDT_ClearAlarm(void)
 428:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** {
 330              	 .loc 4 428 0
 331              	 .cfi_startproc
 332 0000 80B5     	 push {r7,lr}
 333              	.LCFI22:
 334              	 .cfi_def_cfa_offset 8
 335              	 .cfi_offset 7,-8
 336              	 .cfi_offset 14,-4
 337 0002 00AF     	 add r7,sp,#0
 338              	.LCFI23:
 339              	 .cfi_def_cfa_register 7
 429:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   WDT->WDTCLR = WDT_WDTCLR_ALMC_Msk;
 340              	 .loc 4 429 0
 341 0004 024B     	 ldr r3,.L16
 342 0006 0122     	 mov r2,#1
 343 0008 DA61     	 str r2,[r3,#28]
 430:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** }
 344              	 .loc 4 430 0
 345 000a BD46     	 mov sp,r7
 346              	 
 347 000c 80BD     	 pop {r7,pc}
 348              	.L17:
 349 000e C046     	 .align 2
 350              	.L16:
 351 0010 00000240 	 .word 1073872896
 352              	 .cfi_endproc
 353              	.LFE218:
 355              	 .section .text.WATCHDOG_Start,"ax",%progbits
 356              	 .align 2
 357              	 .code 16
 358              	 .thumb_func
 360              	WATCHDOG_Start:
 361              	.LFB219:
 362              	 .file 5 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG/watchdog.h"
   1:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
   2:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @file watchdog.h
   3:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @date 2016-02-09
   4:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
   5:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * NOTE:
   6:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
   8:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @cond
   9:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  **************************************************************************************************
  10:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * WATCHDOG v4.0.16 - Configures the watchdog peripheral instance.
  11:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  12:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * Copyright (c) 2016-2020, Infineon Technologies AG
  13:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * All rights reserved.
  14:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  15:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  16:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * following conditions are met:
  17:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  18:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  19:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   disclaimer.
  20:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  21:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  22:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  23:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  24:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  25:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   products derived from this software without specific prior written permission.
  26:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  27:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  28:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  29:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  30:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  31:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  32:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  33:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  34:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  35:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  36:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * with Infineon Technologies AG (dave@infineon.com).
  37:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  **************************************************************************************************
  38:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  39:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * Change History
  40:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * --------------
  41:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  42:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * 2015-02-16:
  43:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *     - Initial version<br>
  44:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  45:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * 2015-05-08:
  46:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *     - C++ guard applied to only API section<br>
  47:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *     - File guard updated according to the guidelines<br>
  48:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *     - Enum items of "WATCHDOG_EVENT_MODE" are changed to follow coding guidelines<br>
  49:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  50:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * 2015-06-20:
  51:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *     - "callback_func_ptr" in APP config structure is updated according to the GLOBAL_SCU APP.
  52:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  53:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * 2015-06-20:
  54:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *     - macro WATCHDOG_EVENT_CONFIGURATION is replaced with WATCHDOG_EVENT_VIA_SCU.
  55:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  56:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * 2016-02-09:
  57:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *     - Added a check for XMC4 devices, to verify that WATCHDOG clock is enabled or not in CLOCK_X
  58:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  59:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @endcond
  60:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  61:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
  62:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
  63:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #ifndef WATCHDOG_H
  64:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #define WATCHDOG_H
  65:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**************************************************************************************************
  66:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * HEADER FILES
  67:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  **************************************************************************************************
  68:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #include "xmc_wdt.h"
  69:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #if(UC_FAMILY == XMC4)
  70:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #include "CLOCK_XMC4/clock_xmc4.h"
  71:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #else
  72:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #include "CLOCK_XMC1/clock_xmc1.h"
  73:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #endif
  74:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #include "watchdog_conf.h"
  75:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #include "DAVE_Common.h"
  76:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
  77:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**************************************************************************************************
  78:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * MACROS
  79:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  **************************************************************************************************
  80:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #define WATCHDOG_XMC_LIB_MAJOR_VERSION 2
  81:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #define WATCHDOG_XMC_LIB_MINOR_VERSION 0
  82:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #define WATCHDOG_XMC_LIB_PATCH_VERSION 0
  83:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
  84:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #if !((XMC_LIB_MAJOR_VERSION > WATCHDOG_XMC_LIB_MAJOR_VERSION) ||\
  85:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****       ((XMC_LIB_MAJOR_VERSION == WATCHDOG_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION > WATCHD
  86:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****       ((XMC_LIB_MAJOR_VERSION == WATCHDOG_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION == WATCH
  87:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #error "WATCHDOG requires XMC Peripheral Library v2.0.0 or higher"
  88:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #endif
  89:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
  90:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**************************************************************************************************
  91:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * ENUMS
  92:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  **************************************************************************************************
  93:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
  94:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @ingroup WATCHDOG_enumerations
  95:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @{
  96:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
  97:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
  98:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
  99:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *  @brief In case of XMC4000 devices, WatchDog event can be generated as  Regular Interrupt or can
 100:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *         NMI Request. Where as in case of XMC1000 device, it can be generated as Regular Interrup
 101:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
 102:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** typedef enum WATCHDOG_EVENT_MODE
 103:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** {
 104:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****     WATCHDOG_EVENT_MODE_INTERRUPT   = 0U, /**< Regular Interrupt */
 105:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****     WATCHDOG_EVENT_MODE_NMI_REQUEST = 1U /**< Promoted to NMI */
 106:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** } WATCHDOG_EVENT_MODE_t;
 107:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
 108:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
 109:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *  @brief Initialization status.
 110:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
 111:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** typedef enum WATCHDOG_STATUS
 112:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** {
 113:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   WATCHDOG_STATUS_SUCCESS = 0U, /**< Status success */
 114:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   WATCHDOG_STATUS_FAILURE, /**< Status failure */
 115:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** } WATCHDOG_STATUS_t;
 116:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
 117:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** * @}
 118:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** */
 119:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
 120:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**************************************************************************************************
 121:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** * DATA STRUCTURES
 122:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** ***************************************************************************************************
 123:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
 124:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @ingroup WATCHDOG_datastructures
 125:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @{
 126:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
 127:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
 128:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
 129:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @brief WATCHDOG_HandleType is  data structure for storing the GUI configured values of a WATCHDO
 130:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
 131:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** typedef struct WATCHDOG
 132:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** {
 133:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   const XMC_WDT_CONFIG_t* const config; /**< Configuration of WDT */
 134:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   #if ((WATCHDOG_PREWARNING_CHECK == 1U) && (WATCHDOG_EVENT_VIA_SCU == 1U))
 135:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   #if(UC_FAMILY == XMC4)
 136:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   GLOBAL_SCU_XMC4_t* const scu_global_handler; /**< pointer to SCU_GLOBAL APP instance*/
 137:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   GLOBAL_SCU_XMC4_EVENT_HANDLER_t callback_func_ptr; /**< Callback function pointer */
 138:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   #else
 139:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   GLOBAL_SCU_XMC1_t* const scu_global_handler; /**< pointer to SCU_GLOBAL APP instance*/
 140:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   GLOBAL_SCU_XMC1_EVENT_HANDLER_t callback_func_ptr; /**< Callback function pointer */
 141:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   #endif
 142:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   #endif
 143:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   bool  initialized; /**< Holds the initialization status */
 144:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** } WATCHDOG_t;
 145:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
 146:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
 147:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** * @}
 148:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** */
 149:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**************************************************************************************************
 150:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** * API Prototypes
 151:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** ***************************************************************************************************
 152:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #ifdef __cplusplus
 153:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** extern "C" {
 154:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #endif
 155:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
 156:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @brief Get WATCHDOG APP version
 157:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @return DAVE_APP_VERSION_t APP version information (major, minor and patch number)
 158:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * <BR>
 159:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * \par<b>Description:</b><br>
 160:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * The function can be used to check application software compatibility with a
 161:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * specific version of the APP.
 162:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 163:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * Example Usage:
 164:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 165:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @code
 166:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * #include "DAVE.h"
 167:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * int main(void)
 168:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * {
 169:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   DAVE_STATUS_t status;
 170:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   DAVE_APP_VERSION_t app_version;
 171:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 172:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   status = DAVE_Init();    // WATCHDOG_Init() is called from DAVE_Init()
 173:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 174:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   app_version = WATCHDOG_GetAppVersion();
 175:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 176:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   if (app_version.major != 4U)
 177:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   {
 178:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *     // Probably, not the right version.
 179:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   }
 180:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 181:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   while(1U)
 182:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   {
 183:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   }
 184:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   return 1;
 185:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * }
 186:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @endcode<BR>
 187:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
 188:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
 189:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** DAVE_APP_VERSION_t WATCHDOG_GetAppVersion(void);
 190:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
 191:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
 192:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @ingroup WATCHDOG_apidoc
 193:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @{
 194:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
 195:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
 196:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
 197:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @brief Initializes a WATCHDOG with generated configuration.
 198:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 199:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @param handle pointer to the WATCHDOG APP handle structure.
 200:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @return WATCHDOG_STATUS_t\n
 201:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *         WATCHDOG_STATUS_SUCCESS : if initialization is successful\n
 202:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *         WATCHDOG_STATUS_FAILURE : if initialization is failed
 203:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * <BR>
 204:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * \par<b>Description:</b><br>
 205:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * <ul>
 206:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * <li>Enable the WDT module.</li>
 207:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * <li>Configure the service upper and lower bound settings</li>
 208:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * <li>Configure the Pre-warning alarm event, if enabled</li>
 209:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * </ul>
 210:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 211:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * Example Usage:
 212:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 213:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @code
 214:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * #include "DAVE.h"
 215:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * int main(void)
 216:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * {
 217:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   // ... Initializes Apps configurations ...
 218:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   DAVE_Init(); // WATCHDOG_Init(&WATCHDOG_0) will be called from DAVE_Init()
 219:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 220:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   while(1U)
 221:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   {
 222:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   }
 223:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 224:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   return 1;
 225:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * }
 226:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 227:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @endcode<BR> </p>
 228:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
 229:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** WATCHDOG_STATUS_t WATCHDOG_Init(WATCHDOG_t *handle);
 230:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
 231:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
 232:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @brief Starts the WATCHDOG timer.
 233:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 234:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @return None
 235:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * <BR>
 236:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * 
 237:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * \par<b>Description:</b><br>
 238:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * After starting, WDT has to be serviced with in the specified service window boundary.
 239:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * This can done by invoking WATCHDOG_Service(). If failed service, leads to system reset.
 240:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 241:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * Example Usage:
 242:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 243:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @code
 244:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * #include "DAVE.h"
 245:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * int main(void)
 246:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * {
 247:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   DAVE_STATUS_t status;
 248:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 249:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   status = DAVE_Init();        // Initialization of DAVE Apps
 250:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 251:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   if(status == DAVE_STATUS_SUCCESS)
 252:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   {
 253:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *     WATCHDOG_Start(); // Start the watchdog timer
 254:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   }
 255:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 256:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   while(1U)
 257:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   {
 258:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   }
 259:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 260:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   return 1;
 261:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * }
 262:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 263:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * void Watchdog_Handler(void)
 264:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * {
 265:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   WATCHDOG_Service(); //service the watchdog timer.
 266:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   WATCHDOG_Stop();
 267:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * }
 268:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 269:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @endcode<BR> </p>
 270:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
 271:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** __STATIC_INLINE void WATCHDOG_Start(void)
 272:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** {
 363              	 .loc 5 272 0
 364              	 .cfi_startproc
 365 0000 80B5     	 push {r7,lr}
 366              	.LCFI24:
 367              	 .cfi_def_cfa_offset 8
 368              	 .cfi_offset 7,-8
 369              	 .cfi_offset 14,-4
 370 0002 00AF     	 add r7,sp,#0
 371              	.LCFI25:
 372              	 .cfi_def_cfa_register 7
 273:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   XMC_WDT_Start();
 373              	 .loc 5 273 0
 374 0004 FFF7FEFF 	 bl XMC_WDT_Start
 274:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** }
 375              	 .loc 5 274 0
 376 0008 BD46     	 mov sp,r7
 377              	 
 378 000a 80BD     	 pop {r7,pc}
 379              	 .cfi_endproc
 380              	.LFE219:
 382              	 .section .text.WATCHDOG_Service,"ax",%progbits
 383              	 .align 2
 384              	 .code 16
 385              	 .thumb_func
 387              	WATCHDOG_Service:
 388              	.LFB221:
 275:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
 276:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
 277:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @brief Stops the WATCHDOG timer.
 278:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 279:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @return None
 280:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *            <BR>
 281:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 282:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * \par<b>Description:</b><br>
 283:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * WATCHDOG_Stop() can be used to pause the watchog timer as needed. To resume invoke WATCHDOG_Star
 284:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * 
 285:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * Example Usage:
 286:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 287:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @code
 288:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * #include "DAVE.h"
 289:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * int main(void)
 290:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * {
 291:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   DAVE_STATUS_t status;
 292:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 293:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   status = DAVE_Init();        // Initialization of DAVE Apps
 294:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 295:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   if(status == DAVE_STATUS_SUCCESS)
 296:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   {
 297:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *     WATCHDOG_Start(); // Start the watchdog timer
 298:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   }
 299:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 300:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   while(1U)
 301:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   {
 302:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   }
 303:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 304:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   return 1;
 305:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * }
 306:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 307:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * void Watchdog_Handler(void)
 308:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * {
 309:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   WATCHDOG_ClearAlarm(); //clears the alarm flag
 310:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   WATCHDOG_Service(); //service the watchdog timer.
 311:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   WATCHDOG_Stop(); //Stop the watchdog timer
 312:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * }
 313:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 314:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @endcode<BR> </p>
 315:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
 316:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** __STATIC_INLINE void WATCHDOG_Stop(void)
 317:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** {
 318:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   XMC_WDT_Stop();
 319:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** }
 320:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
 321:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
 322:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @brief Service the WATCHDOG timer.
 323:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 324:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @return    None                           
 325:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *            <BR>
 326:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 327:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * \par<b>Description:</b><br>
 328:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * WATCHDOG_Service() will reset the watchdog timer.
 329:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 330:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * Example Usage:
 331:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * 
 332:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @code
 333:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * #include "DAVE.h"
 334:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * int main(void)
 335:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * {
 336:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   DAVE_STATUS_t status;
 337:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 338:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   status = DAVE_Init();        // Initialization of DAVE Apps
 339:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 340:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   if(status == DAVE_STATUS_SUCCESS)
 341:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   {
 342:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *     WATCHDOG_Start(); // Start the watchdog timer
 343:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   }
 344:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 345:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   while(1U)
 346:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   {
 347:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   }
 348:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 349:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   return 1;
 350:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * }
 351:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 352:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * void Watchdog_Handler(void)
 353:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * {
 354:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   WATCHDOG_ClearAlarm(); //clears the alarm flag
 355:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   WATCHDOG_Service(); //service the watchdog timer.
 356:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   WATCHDOG_Stop();
 357:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * }
 358:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 359:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @endcode<BR> </p>
 360:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
 361:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** __STATIC_INLINE void WATCHDOG_Service(void)
 362:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** {
 389              	 .loc 5 362 0
 390              	 .cfi_startproc
 391 0000 80B5     	 push {r7,lr}
 392              	.LCFI26:
 393              	 .cfi_def_cfa_offset 8
 394              	 .cfi_offset 7,-8
 395              	 .cfi_offset 14,-4
 396 0002 00AF     	 add r7,sp,#0
 397              	.LCFI27:
 398              	 .cfi_def_cfa_register 7
 363:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   XMC_WDT_Service();
 399              	 .loc 5 363 0
 400 0004 FFF7FEFF 	 bl XMC_WDT_Service
 364:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** }
 401              	 .loc 5 364 0
 402 0008 BD46     	 mov sp,r7
 403              	 
 404 000a 80BD     	 pop {r7,pc}
 405              	 .cfi_endproc
 406              	.LFE221:
 408              	 .section .text.WATCHDOG_ClearAlarm,"ax",%progbits
 409              	 .align 2
 410              	 .code 16
 411              	 .thumb_func
 413              	WATCHDOG_ClearAlarm:
 414              	.LFB222:
 365:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
 366:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
 367:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @brief Clears the alarm flag.
 368:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 369:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @return None
 370:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * <BR>
 371:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * \par<b>Description:</b><br>
 372:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * After occurrence of Pre-warning alarm event, the timer has to be serviced with in second over fl
 373:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * clearing the alarm flag. Otherwise it will lead to system reset.
 374:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 375:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * Example Usage:
 376:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 377:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @code
 378:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * #include "DAVE.h"
 379:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * int main(void)
 380:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * {
 381:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   DAVE_STATUS_t status;
 382:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 383:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   status = DAVE_Init();        // Initialization of DAVE Apps
 384:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 385:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   if(status == DAVE_STATUS_SUCCESS)
 386:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   {
 387:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *     WATCHDOG_Start(); // Start the watchdog timer
 388:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   }
 389:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 390:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   while(1U)
 391:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   {
 392:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   }
 393:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 394:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   return 1;
 395:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * }
 396:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 397:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * void Watchdog_Handler(void)
 398:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * {
 399:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   WATCHDOG_ClearAlarm(); //clears the alarm flag
 400:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   WATCHDOG_Service(); //service the watchdog timer.
 401:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * }
 402:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 403:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @endcode<BR> </p>
 404:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
 405:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** __STATIC_INLINE void WATCHDOG_ClearAlarm(void)
 406:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** {
 415              	 .loc 5 406 0
 416              	 .cfi_startproc
 417 0000 80B5     	 push {r7,lr}
 418              	.LCFI28:
 419              	 .cfi_def_cfa_offset 8
 420              	 .cfi_offset 7,-8
 421              	 .cfi_offset 14,-4
 422 0002 00AF     	 add r7,sp,#0
 423              	.LCFI29:
 424              	 .cfi_def_cfa_register 7
 407:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   XMC_WDT_ClearAlarm();
 425              	 .loc 5 407 0
 426 0004 FFF7FEFF 	 bl XMC_WDT_ClearAlarm
 408:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** }
 427              	 .loc 5 408 0
 428 0008 BD46     	 mov sp,r7
 429              	 
 430 000a 80BD     	 pop {r7,pc}
 431              	 .cfi_endproc
 432              	.LFE222:
 434              	 .global NP
 435              	 .section .data.NP,"aw",%progbits
 436              	 .align 2
 439              	NP:
 440 0000 07030000 	 .word 775
 441 0004 DF020000 	 .word 735
 442 0008 DF020000 	 .word 735
 443 000c BC020000 	 .word 700
 444              	 .global NPfl
 445              	 .section .data.NPfl,"aw",%progbits
 446              	 .align 2
 449              	NPfl:
 450 0000 EE020000 	 .word 750
 451              	 .global NPfr
 452              	 .section .data.NPfr,"aw",%progbits
 453              	 .align 2
 456              	NPfr:
 457 0000 EE020000 	 .word 750
 458              	 .global NPrl
 459              	 .section .data.NPrl,"aw",%progbits
 460              	 .align 2
 463              	NPrl:
 464 0000 EE020000 	 .word 750
 465              	 .global NPrr
 466              	 .section .data.NPrr,"aw",%progbits
 467              	 .align 2
 470              	NPrr:
 471 0000 EE020000 	 .word 750
 472              	 .global RC_controll
 473              	 .section .data.RC_controll,"aw",%progbits
 476              	RC_controll:
 477 0000 01       	 .byte 1
 478              	 .global Steering_mode
 479              	 .section .data.Steering_mode,"aw",%progbits
 482              	Steering_mode:
 483 0000 03       	 .byte 3
 484              	 .global New_Input
 485              	 .section .bss.New_Input,"aw",%nobits
 488              	New_Input:
 489 0000 00       	 .space 1
 490              	 .global NO_New_Input_counter
 491              	 .section .bss.NO_New_Input_counter,"aw",%nobits
 492              	 .align 2
 495              	NO_New_Input_counter:
 496 0000 00000000 	 .space 4
 497              	 .global Speeds_int16_r
 498              	 .section .bss.Speeds_int16_r,"aw",%nobits
 499              	 .align 2
 502              	Speeds_int16_r:
 503 0000 00000000 	 .space 8
 503      00000000 
 504              	 .global CAN_RX_0
 505              	 .section .bss.CAN_RX_0,"aw",%nobits
 506              	 .align 1
 509              	CAN_RX_0:
 510 0000 0000     	 .space 2
 511              	 .comm init_status,1,1
 512              	 .global CAN_OK
 513              	 .section .bss.CAN_OK,"aw",%nobits
 514              	 .align 2
 517              	CAN_OK:
 518 0000 00000000 	 .space 4
 519              	 .global Inverters_CAN_state
 520              	 .section .bss.Inverters_CAN_state,"aw",%nobits
 521              	 .align 2
 524              	Inverters_CAN_state:
 525 0000 00000000 	 .space 4
 526              	 .global CAN_10ms_counter
 527              	 .section .bss.CAN_10ms_counter,"aw",%nobits
 528              	 .align 2
 531              	CAN_10ms_counter:
 532 0000 00000000 	 .space 4
 533              	 .global reset_distance
 534              	 .section .bss.reset_distance,"aw",%nobits
 537              	reset_distance:
 538 0000 00       	 .space 1
 539              	 .global speed_fl_act
 540              	 .section .bss.speed_fl_act,"aw",%nobits
 541              	 .align 2
 544              	speed_fl_act:
 545 0000 00000000 	 .space 4
 546              	 .global speed_fr_act
 547              	 .section .bss.speed_fr_act,"aw",%nobits
 548              	 .align 2
 551              	speed_fr_act:
 552 0000 00000000 	 .space 4
 553              	 .global speed_rl_act
 554              	 .section .bss.speed_rl_act,"aw",%nobits
 555              	 .align 2
 558              	speed_rl_act:
 559 0000 00000000 	 .space 4
 560              	 .global speed_rr_act
 561              	 .section .bss.speed_rr_act,"aw",%nobits
 562              	 .align 2
 565              	speed_rr_act:
 566 0000 00000000 	 .space 4
 567              	 .global distance_fl_act
 568              	 .section .bss.distance_fl_act,"aw",%nobits
 569              	 .align 2
 572              	distance_fl_act:
 573 0000 00000000 	 .space 4
 574              	 .global distance_fr_act
 575              	 .section .bss.distance_fr_act,"aw",%nobits
 576              	 .align 2
 579              	distance_fr_act:
 580 0000 00000000 	 .space 4
 581              	 .global distance_rl_act
 582              	 .section .bss.distance_rl_act,"aw",%nobits
 583              	 .align 2
 586              	distance_rl_act:
 587 0000 00000000 	 .space 4
 588              	 .global distance_rr_act
 589              	 .section .bss.distance_rr_act,"aw",%nobits
 590              	 .align 2
 593              	distance_rr_act:
 594 0000 00000000 	 .space 4
 595              	 .global CAN_RX_Inverter_count
 596              	 .section .bss.CAN_RX_Inverter_count,"aw",%nobits
 599              	CAN_RX_Inverter_count:
 600 0000 00       	 .space 1
 601              	 .global CAN_state_Ultrasonic
 602              	 .section .bss.CAN_state_Ultrasonic,"aw",%nobits
 605              	CAN_state_Ultrasonic:
 606 0000 00       	 .space 1
 607              	 .global distance_C
 608              	 .section .bss.distance_C,"aw",%nobits
 609              	 .align 1
 612              	distance_C:
 613 0000 0000     	 .space 2
 614              	 .global distance_L
 615              	 .section .bss.distance_L,"aw",%nobits
 616              	 .align 1
 619              	distance_L:
 620 0000 0000     	 .space 2
 621              	 .global distance_R
 622              	 .section .bss.distance_R,"aw",%nobits
 623              	 .align 1
 626              	distance_R:
 627 0000 0000     	 .space 2
 628              	 .global RC_Signal_OK
 629              	 .section .bss.RC_Signal_OK,"aw",%nobits
 632              	RC_Signal_OK:
 633 0000 00       	 .space 1
 634              	 .global RC_Signal_not_OK_counter
 635              	 .section .bss.RC_Signal_not_OK_counter,"aw",%nobits
 638              	RC_Signal_not_OK_counter:
 639 0000 00       	 .space 1
 640              	 .global captured_time_Steering
 641              	 .section .bss.captured_time_Steering,"aw",%nobits
 642              	 .align 2
 645              	captured_time_Steering:
 646 0000 00000000 	 .space 4
 647              	 .global captured_time_Speed
 648              	 .section .bss.captured_time_Speed,"aw",%nobits
 649              	 .align 2
 652              	captured_time_Speed:
 653 0000 00000000 	 .space 4
 654              	 .global RC_no_Speed_data_counter
 655              	 .section .bss.RC_no_Speed_data_counter,"aw",%nobits
 658              	RC_no_Speed_data_counter:
 659 0000 00       	 .space 1
 660              	 .global RC_no_Steering_data_counter
 661              	 .section .bss.RC_no_Steering_data_counter,"aw",%nobits
 664              	RC_no_Steering_data_counter:
 665 0000 00       	 .space 1
 666              	 .global RC_Speed
 667              	 .section .bss.RC_Speed,"aw",%nobits
 668              	 .align 2
 671              	RC_Speed:
 672 0000 00000000 	 .space 4
 673              	 .global RC_Steering
 674              	 .section .bss.RC_Steering,"aw",%nobits
 675              	 .align 2
 678              	RC_Steering:
 679 0000 00000000 	 .space 4
 680              	 .global RC_Speed_ns_to_mps
 681              	 .section .data.RC_Speed_ns_to_mps,"aw",%progbits
 682              	 .align 2
 685              	RC_Speed_ns_to_mps:
 686 0000 ACC5A735 	 .word 900187564
 687              	 .global RC_Steering_ns_to_deg
 688              	 .section .data.RC_Steering_ns_to_deg,"aw",%progbits
 689              	 .align 2
 692              	RC_Steering_ns_to_deg:
 693 0000 72335C39 	 .word 962343794
 694              	 .global RC_gear_100us_counter
 695              	 .section .bss.RC_gear_100us_counter,"aw",%nobits
 696              	 .align 2
 699              	RC_gear_100us_counter:
 700 0000 00000000 	 .space 4
 701              	 .global RC_AUX1_100us_counter
 702              	 .section .bss.RC_AUX1_100us_counter,"aw",%nobits
 703              	 .align 2
 706              	RC_AUX1_100us_counter:
 707 0000 00000000 	 .space 4
 708              	 .global RC_Gear_state
 709              	 .section .data.RC_Gear_state,"aw",%progbits
 712              	RC_Gear_state:
 713 0000 02       	 .byte 2
 714              	 .global RC_AUX1_state
 715              	 .section .data.RC_AUX1_state,"aw",%progbits
 718              	RC_AUX1_state:
 719 0000 02       	 .byte 2
 720              	 .global RC_Gear_duty
 721              	 .section .data.RC_Gear_duty,"aw",%progbits
 724              	RC_Gear_duty:
 725 0000 02       	 .byte 2
 726              	 .global RC_Gear_duty_OLD
 727              	 .section .data.RC_Gear_duty_OLD,"aw",%progbits
 730              	RC_Gear_duty_OLD:
 731 0000 02       	 .byte 2
 732              	 .global RC_AUX1_duty
 733              	 .section .data.RC_AUX1_duty,"aw",%progbits
 736              	RC_AUX1_duty:
 737 0000 02       	 .byte 2
 738              	 .global RC_Speed_Stop
 739              	 .section .data.RC_Speed_Stop,"aw",%progbits
 742              	RC_Speed_Stop:
 743 0000 01       	 .byte 1
 744              	 .global Steering_direction
 745              	 .section .bss.Steering_direction,"aw",%nobits
 746              	 .align 2
 749              	Steering_direction:
 750 0000 00000000 	 .space 4
 751              	 .global Driving_speed
 752              	 .section .bss.Driving_speed,"aw",%nobits
 753              	 .align 2
 756              	Driving_speed:
 757 0000 00000000 	 .space 4
 758              	 .comm R_Turn,4,4
 759              	 .comm Speed_ratio,4,4
 760              	 .global speed_fl
 761              	 .section .bss.speed_fl,"aw",%nobits
 762              	 .align 2
 765              	speed_fl:
 766 0000 00000000 	 .space 4
 767              	 .global speed_fr
 768              	 .section .bss.speed_fr,"aw",%nobits
 769              	 .align 2
 772              	speed_fr:
 773 0000 00000000 	 .space 4
 774              	 .global speed_rl
 775              	 .section .bss.speed_rl,"aw",%nobits
 776              	 .align 2
 779              	speed_rl:
 780 0000 00000000 	 .space 4
 781              	 .global speed_rr
 782              	 .section .bss.speed_rr,"aw",%nobits
 783              	 .align 2
 786              	speed_rr:
 787 0000 00000000 	 .space 4
 788              	 .global angle_fl
 789              	 .section .bss.angle_fl,"aw",%nobits
 790              	 .align 2
 793              	angle_fl:
 794 0000 00000000 	 .space 4
 795              	 .global angle_fr
 796              	 .section .bss.angle_fr,"aw",%nobits
 797              	 .align 2
 800              	angle_fr:
 801 0000 00000000 	 .space 4
 802              	 .global angle_rl
 803              	 .section .bss.angle_rl,"aw",%nobits
 804              	 .align 2
 807              	angle_rl:
 808 0000 00000000 	 .space 4
 809              	 .global angle_rr
 810              	 .section .bss.angle_rr,"aw",%nobits
 811              	 .align 2
 814              	angle_rr:
 815 0000 00000000 	 .space 4
 816              	 .global Speeds
 817              	 .section .bss.Speeds,"aw",%nobits
 818              	 .align 2
 821              	Speeds:
 822 0000 00000000 	 .space 16
 822      00000000 
 822      00000000 
 822      00000000 
 823              	 .global Steering_Angles
 824              	 .section .bss.Steering_Angles,"aw",%nobits
 825              	 .align 2
 828              	Steering_Angles:
 829 0000 00000000 	 .space 16
 829      00000000 
 829      00000000 
 829      00000000 
 830              	 .global Servo_PWMs
 831              	 .section .bss.Servo_PWMs,"aw",%nobits
 832              	 .align 2
 835              	Servo_PWMs:
 836 0000 00000000 	 .space 16
 836      00000000 
 836      00000000 
 836      00000000 
 837              	 .global Inveter_CAN_OK
 838              	 .section .bss.Inveter_CAN_OK,"aw",%nobits
 839              	 .align 2
 842              	Inveter_CAN_OK:
 843 0000 00000000 	 .space 4
 844              	 .global Actual_Speeds
 845              	 .section .bss.Actual_Speeds,"aw",%nobits
 846              	 .align 2
 849              	Actual_Speeds:
 850 0000 00000000 	 .space 16
 850      00000000 
 850      00000000 
 850      00000000 
 851              	 .global Actual_Distance
 852              	 .section .bss.Actual_Distance,"aw",%nobits
 853              	 .align 2
 856              	Actual_Distance:
 857 0000 00000000 	 .space 16
 857      00000000 
 857      00000000 
 857      00000000 
 858              	 .section .text.main,"ax",%progbits
 859              	 .align 2
 860              	 .global main
 861              	 .code 16
 862              	 .thumb_func
 864              	main:
 865              	.LFB224:
 866              	 .file 6 "../main.c"
   1:../main.c     **** /*
   2:../main.c     ****  * main.c
   3:../main.c     ****  *
   4:../main.c     ****  *  Created on: 2022 Apr 25 09:31:37
   5:../main.c     ****  *  Author: lukas
   6:../main.c     ****  */
   7:../main.c     **** #include "DAVE.h"                 //Declarations from DAVE Code Generation (includes SFR declaratio
   8:../main.c     **** #include <math.h>
   9:../main.c     **** 
  10:../main.c     **** #define CHECK_BIT(var,pos) (((var)>>(pos)) & 1)
  11:../main.c     **** 
  12:../main.c     **** //constant
  13:../main.c     **** int NP[4] = {775, 735, 735, 700}; //servo nutral points PWM duty vaules
  14:../main.c     **** int NPfl = 750; int NPfr = 750; int NPrl = 750; int NPrr = 750;
  15:../main.c     **** #define MIN_Speed  0.05
  16:../main.c     **** #define MAX_Speed  1
  17:../main.c     **** 
  18:../main.c     **** #define ROTATION_ANGEL 53.96
  19:../main.c     **** #define ROTATION_ANGEL_OFFSET 5
  20:../main.c     **** #define ROTATION_SPEED  0.25
  21:../main.c     **** 
  22:../main.c     **** #define PI180 0.01745329
  23:../main.c     **** #define PI 3.14
  24:../main.c     **** #define HALF_PI 1.57
  25:../main.c     **** #define RAD_TO_DEG 57.296
  26:../main.c     **** 
  27:../main.c     **** // steering parameter
  28:../main.c     **** //const float WHEEL_BASE = 0.448;
  29:../main.c     **** #define WHEEL_BASE 0.448
  30:../main.c     **** #define	HALF_WHEEL_BASE 			0.22				// halfbase of mobrob
  31:../main.c     **** //#define 	HALFBASEPOW2 		(HALFBASE*HALFBASE)		// halfbase of mobrob to the power of two
  32:../main.c     **** #define	HALF_TRACK_WIDTH		0.163					// halftrack of mobrob
  33:../main.c     **** #define 	R_WHEEL				0.067			// wheel radius of mobrob
  34:../main.c     **** #define	R_TRUN_MAX				20.000				// maximum corner radius (before straight)
  35:../main.c     **** #define 	R_TRUN_MIN				0.05				// minimum corner/reorientation radius
  36:../main.c     **** //#define		P_RO_VEL			0.500					// reduction factor for reorientation velocity
  37:../main.c     **** //#define		CWHEEL				(2.000*M_PI*RWHEEL)		// wheel circumference of mobrob
  38:../main.c     **** 
  39:../main.c     **** 
  40:../main.c     **** // Var MODES
  41:../main.c     **** uint8_t RC_controll = 1; // if 1 RC controll
  42:../main.c     **** uint8_t Steering_mode = 3; // otions 1 'Front';  2'Rear'; 3 '4_Wheel'; 4 'Carb'; 5 'Rotate' 0 nothi
  43:../main.c     **** uint8_t New_Input = 0;
  44:../main.c     **** uint32_t NO_New_Input_counter = 0;
  45:../main.c     **** 
  46:../main.c     **** 
  47:../main.c     **** //VAR CAN
  48:../main.c     **** int16_t Speeds_int16_r[4] = {0};
  49:../main.c     **** int16_t CAN_RX_0 = 0;
  50:../main.c     **** CAN_NODE_STATUS_t init_status;
  51:../main.c     **** int CAN_OK = 0;
  52:../main.c     **** uint8_t Inverters_CAN_state[4] = {0};
  53:../main.c     **** uint32_t CAN_10ms_counter = 0; // to send ever 10ms
  54:../main.c     **** 
  55:../main.c     **** uint8_t reset_distance = 0;// reste from mircum by setting 1
  56:../main.c     **** float speed_fl_act = 0;float speed_fr_act = 0;float speed_rl_act = 0;float speed_rr_act = 0; // in 
  57:../main.c     **** float distance_fl_act = 0;float distance_fr_act = 0;float distance_rl_act = 0;float distance_rr_act
  58:../main.c     **** 
  59:../main.c     **** volatile uint8_t CAN_RX_Inverter_count = 0;
  60:../main.c     **** 
  61:../main.c     **** //ULTRASOCNIC
  62:../main.c     **** uint8_t CAN_state_Ultrasonic = 0;
  63:../main.c     **** uint16_t distance_C = 0;
  64:../main.c     **** uint16_t distance_L = 0;
  65:../main.c     **** uint16_t distance_R = 0;
  66:../main.c     **** 
  67:../main.c     **** // Var RC
  68:../main.c     **** uint8_t RC_Signal_OK = 0, RC_Signal_not_OK_counter = 0; // 0 no ok 1 OK
  69:../main.c     **** uint32_t  captured_time_Steering=0, captured_time_Speed=0;
  70:../main.c     **** uint8_t RC_no_Speed_data_counter = 0, RC_no_Steering_data_counter = 0;
  71:../main.c     **** float RC_Speed = 0, RC_Steering = 0;
  72:../main.c     **** #define RC_NP_SPEED  1500000
  73:../main.c     **** #define RC_NP_STEERING  1540000
  74:../main.c     **** float RC_Speed_ns_to_mps = 0.00000125;
  75:../main.c     **** float RC_Steering_ns_to_deg = 0.00021;
  76:../main.c     **** 
  77:../main.c     **** uint32_t RC_gear_100us_counter = 0, RC_AUX1_100us_counter = 0;
  78:../main.c     **** uint8_t RC_Gear_state = 2, RC_AUX1_state = 2;
  79:../main.c     **** uint8_t RC_Gear_duty = 2, RC_Gear_duty_OLD =2, RC_AUX1_duty = 2;
  80:../main.c     **** uint8_t RC_Speed_Stop = 1;
  81:../main.c     **** 
  82:../main.c     **** //VAR general
  83:../main.c     **** float Steering_direction = 0; // steering angel
  84:../main.c     **** float Driving_speed = 0;
  85:../main.c     **** 
  86:../main.c     **** float R_Turn;
  87:../main.c     **** float Speed_ratio;
  88:../main.c     **** 
  89:../main.c     **** float speed_fl = 0;float speed_fr = 0;float speed_rl = 0;float speed_rr = 0; // in m/s
  90:../main.c     **** float angle_fl = 0;float angle_fr = 0;float angle_rl = 0;float angle_rr = 0; // in deg  0 straing a
  91:../main.c     **** 
  92:../main.c     **** float Speeds[4] = {0, 0, 0, 0};
  93:../main.c     **** float Steering_Angles[4] = {0, 0, 0, 0};
  94:../main.c     **** float Servo_PWMs[4] = {0, 0, 0, 0};
  95:../main.c     **** 
  96:../main.c     **** //vaules form inveter bioard over CAN
  97:../main.c     **** uint8_t Inveter_CAN_OK[4] = {0};
  98:../main.c     **** float Actual_Speeds[4] = {0};
  99:../main.c     **** float Actual_Distance[4] = {0};
 100:../main.c     **** 
 101:../main.c     **** // FUNCTIONS
 102:../main.c     **** void CAN_send_Speeds(float Speed_data[4]);
 103:../main.c     **** void CAN_reset_distance(uint8_t distance_to_reset[4]);
 104:../main.c     **** void Steering_set_Angles(float Angles_data_int[4]);
 105:../main.c     **** void Steering_Function(float Steering_direction_cal, float Driving_speed_cal, uint8_t Steering_mode
 106:../main.c     **** void RC_Recive(void);
 107:../main.c     **** void Servo_NP_setting(void);
 108:../main.c     **** void mode_led(uint8_t var);
 109:../main.c     **** float average(float a[],int num_vaules);
 110:../main.c     **** void CAN_Inveter_RX_Interperter(uint8_t data_RX[8], uint8_t Motor_on_rover);
 111:../main.c     **** void CAN_RX_Inverter_Read_Data();
 112:../main.c     **** 
 113:../main.c     **** 
 114:../main.c     **** int main(void)
 115:../main.c     **** {
 867              	 .loc 6 115 0
 868              	 .cfi_startproc
 869 0000 90B5     	 push {r4,r7,lr}
 870              	.LCFI30:
 871              	 .cfi_def_cfa_offset 12
 872              	 .cfi_offset 4,-12
 873              	 .cfi_offset 7,-8
 874              	 .cfi_offset 14,-4
 875 0002 83B0     	 sub sp,sp,#12
 876              	.LCFI31:
 877              	 .cfi_def_cfa_offset 24
 878 0004 00AF     	 add r7,sp,#0
 879              	.LCFI32:
 880              	 .cfi_def_cfa_register 7
 116:../main.c     ****   DAVE_STATUS_t status;
 117:../main.c     **** 
 118:../main.c     ****   status = DAVE_Init();           /* Initialization of DAVE APPs  */
 881              	 .loc 6 118 0
 882 0006 FC1D     	 add r4,r7,#7
 883 0008 FFF7FEFF 	 bl DAVE_Init
 884 000c 031C     	 mov r3,r0
 885 000e 2370     	 strb r3,[r4]
 119:../main.c     **** 
 120:../main.c     ****   if (status != DAVE_STATUS_SUCCESS)
 886              	 .loc 6 120 0
 887 0010 FB1D     	 add r3,r7,#7
 888 0012 1B78     	 ldrb r3,[r3]
 889 0014 002B     	 cmp r3,#0
 890 0016 00D0     	 beq .L22
 891              	.L23:
 121:../main.c     ****   {
 122:../main.c     ****     /* Placeholder for error handler code. The while loop below can be replaced with an user error 
 123:../main.c     ****     XMC_DEBUG("DAVE APPs initialization failed\n");
 124:../main.c     **** 
 125:../main.c     ****     while(1U)
 126:../main.c     ****     {
 127:../main.c     **** 
 128:../main.c     ****     }
 892              	 .loc 6 128 0 discriminator 1
 893 0018 FEE7     	 b .L23
 894              	.L22:
 129:../main.c     ****   }
 130:../main.c     **** 
 131:../main.c     ****   //Initialization of CAN
 132:../main.c     ****   	//CAN_NODE_STATUS_t init_status;
 133:../main.c     ****   	init_status = CAN_NODE_Init(&CAN_NODE_0);
 895              	 .loc 6 133 0
 896 001a 094B     	 ldr r3,.L26
 897 001c 181C     	 mov r0,r3
 898 001e FFF7FEFF 	 bl CAN_NODE_Init
 899 0022 031C     	 mov r3,r0
 900 0024 1A1C     	 mov r2,r3
 901 0026 074B     	 ldr r3,.L26+4
 902 0028 1A70     	 strb r2,[r3]
 134:../main.c     **** 
 135:../main.c     ****   	if (init_status != CAN_NODE_STATUS_SUCCESS) {
 903              	 .loc 6 135 0
 904 002a 064B     	 ldr r3,.L26+4
 905 002c 1B78     	 ldrb r3,[r3]
 906 002e 002B     	 cmp r3,#0
 907 0030 02D1     	 bne .L24
 136:../main.c     ****   		XMC_DEBUG("CAN initialization failed\n");
 137:../main.c     ****   	}
 138:../main.c     ****   	else{
 139:../main.c     ****   		CAN_OK = 1;
 908              	 .loc 6 139 0
 909 0032 054B     	 ldr r3,.L26+8
 910 0034 0122     	 mov r2,#1
 911 0036 1A60     	 str r2,[r3]
 912              	.L24:
 140:../main.c     ****   	}
 141:../main.c     **** 
 142:../main.c     ****   	// watchdog
 143:../main.c     ****   	WATCHDOG_Start();
 913              	 .loc 6 143 0
 914 0038 FFF7FEFF 	 bl WATCHDOG_Start
 915              	.L25:
 144:../main.c     **** 
 145:../main.c     ****   /* Placeholder for user application code. The while loop below can be replaced with user applicat
 146:../main.c     ****   while(1U)
 147:../main.c     ****   {
 148:../main.c     **** 	//  Servo_NP_setting();	  // nutral point servo setting
 149:../main.c     ****   }
 916              	 .loc 6 149 0 discriminator 2
 917 003c FEE7     	 b .L25
 918              	.L27:
 919 003e C046     	 .align 2
 920              	.L26:
 921 0040 00000000 	 .word CAN_NODE_0
 922 0044 00000000 	 .word init_status
 923 0048 00000000 	 .word CAN_OK
 924              	 .cfi_endproc
 925              	.LFE224:
 927              	 .global __aeabi_fcmpgt
 928              	 .global __aeabi_fcmplt
 929              	 .global __aeabi_f2d
 930              	 .global __aeabi_dcmplt
 931              	 .global __aeabi_dcmpgt
 932              	 .global __aeabi_ddiv
 933              	 .global __aeabi_d2f
 934              	 .global __aeabi_dadd
 935              	 .global __aeabi_dmul
 936              	 .global __aeabi_dsub
 937              	 .global __aeabi_fmul
 938              	 .global __aeabi_fdiv
 939              	 .global __aeabi_fadd
 940              	 .section .text.Steering_Function,"ax",%progbits
 941              	 .align 2
 942              	 .global Steering_Function
 943              	 .code 16
 944              	 .thumb_func
 946              	Steering_Function:
 947              	.LFB225:
 150:../main.c     **** }
 151:../main.c     **** 
 152:../main.c     **** 
 153:../main.c     **** void Steering_Function(float Steering_direction_cal, float Driving_speed_cal, uint8_t Steering_mode
 948              	 .loc 6 153 0
 949              	 .cfi_startproc
 950 0000 F0B5     	 push {r4,r5,r6,r7,lr}
 951              	.LCFI33:
 952              	 .cfi_def_cfa_offset 20
 953              	 .cfi_offset 4,-20
 954              	 .cfi_offset 5,-16
 955              	 .cfi_offset 6,-12
 956              	 .cfi_offset 7,-8
 957              	 .cfi_offset 14,-4
 958 0002 85B0     	 sub sp,sp,#20
 959              	.LCFI34:
 960              	 .cfi_def_cfa_offset 40
 961 0004 00AF     	 add r7,sp,#0
 962              	.LCFI35:
 963              	 .cfi_def_cfa_register 7
 964 0006 F860     	 str r0,[r7,#12]
 965 0008 B960     	 str r1,[r7,#8]
 966 000a FB1D     	 add r3,r7,#7
 967 000c 1A70     	 strb r2,[r3]
 154:../main.c     **** 	New_Input = 0;
 968              	 .loc 6 154 0
 969 000e B84B     	 ldr r3,.L115
 970 0010 0022     	 mov r2,#0
 971 0012 1A70     	 strb r2,[r3]
 155:../main.c     **** 
 156:../main.c     **** 	if(Driving_speed_cal > MAX_Speed) Driving_speed_cal = MAX_Speed;
 972              	 .loc 6 156 0
 973 0014 B868     	 ldr r0,[r7,#8]
 974 0016 FE21     	 mov r1,#254
 975 0018 8905     	 lsl r1,r1,#22
 976 001a FFF7FEFF 	 bl __aeabi_fcmpgt
 977 001e 031E     	 sub r3,r0,#0
 978 0020 02D0     	 beq .L29
 979              	 .loc 6 156 0 is_stmt 0 discriminator 1
 980 0022 FE23     	 mov r3,#254
 981 0024 9B05     	 lsl r3,r3,#22
 982 0026 BB60     	 str r3,[r7,#8]
 983              	.L29:
 157:../main.c     **** 	if(Driving_speed_cal < -MAX_Speed) Driving_speed_cal = -MAX_Speed;
 984              	 .loc 6 157 0 is_stmt 1
 985 0028 B868     	 ldr r0,[r7,#8]
 986 002a B249     	 ldr r1,.L115+4
 987 002c FFF7FEFF 	 bl __aeabi_fcmplt
 988 0030 031E     	 sub r3,r0,#0
 989 0032 01D0     	 beq .L31
 990              	 .loc 6 157 0 is_stmt 0 discriminator 1
 991 0034 AF4B     	 ldr r3,.L115+4
 992 0036 BB60     	 str r3,[r7,#8]
 993              	.L31:
 158:../main.c     **** 	if((0 < Driving_speed_cal) & (Driving_speed_cal < MIN_Speed)) Driving_speed_cal = 0;
 994              	 .loc 6 158 0 is_stmt 1
 995 0038 0123     	 mov r3,#1
 996 003a 1C1C     	 add r4,r3,#0
 997 003c B868     	 ldr r0,[r7,#8]
 998 003e 0021     	 mov r1,#0
 999 0040 FFF7FEFF 	 bl __aeabi_fcmpgt
 1000 0044 031E     	 sub r3,r0,#0
 1001 0046 01D1     	 bne .L33
 1002 0048 0023     	 mov r3,#0
 1003 004a 1C1C     	 add r4,r3,#0
 1004              	.L33:
 1005 004c E4B2     	 uxtb r4,r4
 1006 004e B868     	 ldr r0,[r7,#8]
 1007 0050 FFF7FEFF 	 bl __aeabi_f2d
 1008 0054 0A1C     	 mov r2,r1
 1009 0056 011C     	 mov r1,r0
 1010 0058 0123     	 mov r3,#1
 1011 005a 1D1C     	 add r5,r3,#0
 1012 005c 081C     	 mov r0,r1
 1013 005e 111C     	 mov r1,r2
 1014 0060 A54A     	 ldr r2,.L115+8
 1015 0062 A64B     	 ldr r3,.L115+12
 1016 0064 FFF7FEFF 	 bl __aeabi_dcmplt
 1017 0068 031E     	 sub r3,r0,#0
 1018 006a 01D1     	 bne .L34
 1019 006c 0023     	 mov r3,#0
 1020 006e 1D1C     	 add r5,r3,#0
 1021              	.L34:
 1022 0070 EBB2     	 uxtb r3,r5
 1023 0072 2340     	 and r3,r4
 1024 0074 DBB2     	 uxtb r3,r3
 1025 0076 002B     	 cmp r3,#0
 1026 0078 01D0     	 beq .L35
 1027              	 .loc 6 158 0 is_stmt 0 discriminator 1
 1028 007a 0023     	 mov r3,#0
 1029 007c BB60     	 str r3,[r7,#8]
 1030              	.L35:
 159:../main.c     **** 	if((0 > Driving_speed_cal) & (Driving_speed_cal > -MIN_Speed)) Driving_speed_cal = 0;
 1031              	 .loc 6 159 0 is_stmt 1
 1032 007e 0123     	 mov r3,#1
 1033 0080 1C1C     	 add r4,r3,#0
 1034 0082 B868     	 ldr r0,[r7,#8]
 1035 0084 0021     	 mov r1,#0
 1036 0086 FFF7FEFF 	 bl __aeabi_fcmplt
 1037 008a 031E     	 sub r3,r0,#0
 1038 008c 01D1     	 bne .L36
 1039 008e 0023     	 mov r3,#0
 1040 0090 1C1C     	 add r4,r3,#0
 1041              	.L36:
 1042 0092 E4B2     	 uxtb r4,r4
 1043 0094 B868     	 ldr r0,[r7,#8]
 1044 0096 FFF7FEFF 	 bl __aeabi_f2d
 1045 009a 0A1C     	 mov r2,r1
 1046 009c 011C     	 mov r1,r0
 1047 009e 0123     	 mov r3,#1
 1048 00a0 1D1C     	 add r5,r3,#0
 1049 00a2 081C     	 mov r0,r1
 1050 00a4 111C     	 mov r1,r2
 1051 00a6 944A     	 ldr r2,.L115+8
 1052 00a8 954B     	 ldr r3,.L115+16
 1053 00aa FFF7FEFF 	 bl __aeabi_dcmpgt
 1054 00ae 031E     	 sub r3,r0,#0
 1055 00b0 01D1     	 bne .L37
 1056 00b2 0023     	 mov r3,#0
 1057 00b4 1D1C     	 add r5,r3,#0
 1058              	.L37:
 1059 00b6 EBB2     	 uxtb r3,r5
 1060 00b8 2340     	 and r3,r4
 1061 00ba DBB2     	 uxtb r3,r3
 1062 00bc 002B     	 cmp r3,#0
 1063 00be 01D0     	 beq .L38
 1064              	 .loc 6 159 0 is_stmt 0 discriminator 1
 1065 00c0 0023     	 mov r3,#0
 1066 00c2 BB60     	 str r3,[r7,#8]
 1067              	.L38:
 160:../main.c     **** 
 161:../main.c     **** 	switch(Steering_mode_cal) // options 'Front'; 'Rear'; '4_Wheel'; 'Carb'; 'Rotate'
 1068              	 .loc 6 161 0 is_stmt 1
 1069 00c4 FB1D     	 add r3,r7,#7
 1070 00c6 1B78     	 ldrb r3,[r3]
 1071 00c8 052B     	 cmp r3,#5
 1072 00ca 01D9     	 bls .LCB549
 1073 00cc 00F04AFE 	 bl .L39
 1074              	.LCB549:
 1075 00d0 9A00     	 lsl r2,r3,#2
 1076 00d2 8C4B     	 ldr r3,.L115+20
 1077 00d4 D318     	 add r3,r2,r3
 1078 00d6 1B68     	 ldr r3,[r3]
 1079 00d8 9F46     	 mov pc,r3
 1080              	 .section .rodata.Steering_Function,"a",%progbits
 1081              	 .align 2
 1082              	.L41:
 1083 0000 640D0000 	 .word .L39
 1084 0004 DA000000 	 .word .L40
 1085 0008 A2040000 	 .word .L42
 1086 000c 6C080000 	 .word .L43
 1087 0010 7C0C0000 	 .word .L44
 1088 0014 DC0C0000 	 .word .L45
 1089              	 .section .text.Steering_Function
 1090              	.L40:
 162:../main.c     **** 	{
 163:../main.c     **** 		case 1://#############################################################
 164:../main.c     **** 			// steering limits
 165:../main.c     **** 			if(Steering_direction_cal > 50) Steering_direction_cal = 50;
 1091              	 .loc 6 165 0
 1092 00da F868     	 ldr r0,[r7,#12]
 1093 00dc 8A49     	 ldr r1,.L115+24
 1094 00de FFF7FEFF 	 bl __aeabi_fcmpgt
 1095 00e2 031E     	 sub r3,r0,#0
 1096 00e4 01D0     	 beq .L46
 1097              	 .loc 6 165 0 is_stmt 0 discriminator 1
 1098 00e6 884B     	 ldr r3,.L115+24
 1099 00e8 FB60     	 str r3,[r7,#12]
 1100              	.L46:
 166:../main.c     **** 			if(Steering_direction_cal < -50) Steering_direction_cal = -50;
 1101              	 .loc 6 166 0 is_stmt 1
 1102 00ea F868     	 ldr r0,[r7,#12]
 1103 00ec 8749     	 ldr r1,.L115+28
 1104 00ee FFF7FEFF 	 bl __aeabi_fcmplt
 1105 00f2 031E     	 sub r3,r0,#0
 1106 00f4 01D0     	 beq .L48
 1107              	 .loc 6 166 0 is_stmt 0 discriminator 1
 1108 00f6 854B     	 ldr r3,.L115+28
 1109 00f8 FB60     	 str r3,[r7,#12]
 1110              	.L48:
 167:../main.c     **** 
 168:../main.c     **** 			// pre calc
 169:../main.c     **** 			R_Turn = WHEEL_BASE / tan(Steering_direction_cal / RAD_TO_DEG); // to truni graduis converstion
 1111              	 .loc 6 169 0 is_stmt 1
 1112 00fa F868     	 ldr r0,[r7,#12]
 1113 00fc FFF7FEFF 	 bl __aeabi_f2d
 1114 0100 031C     	 mov r3,r0
 1115 0102 0C1C     	 mov r4,r1
 1116 0104 181C     	 mov r0,r3
 1117 0106 211C     	 mov r1,r4
 1118 0108 814A     	 ldr r2,.L115+32
 1119 010a 824B     	 ldr r3,.L115+36
 1120 010c FFF7FEFF 	 bl __aeabi_ddiv
 1121 0110 031C     	 mov r3,r0
 1122 0112 0C1C     	 mov r4,r1
 1123 0114 181C     	 mov r0,r3
 1124 0116 211C     	 mov r1,r4
 1125 0118 FFF7FEFF 	 bl tan
 1126 011c 031C     	 mov r3,r0
 1127 011e 0C1C     	 mov r4,r1
 1128 0120 7D48     	 ldr r0,.L115+40
 1129 0122 7E49     	 ldr r1,.L115+44
 1130 0124 1A1C     	 mov r2,r3
 1131 0126 231C     	 mov r3,r4
 1132 0128 FFF7FEFF 	 bl __aeabi_ddiv
 1133 012c 031C     	 mov r3,r0
 1134 012e 0C1C     	 mov r4,r1
 1135 0130 181C     	 mov r0,r3
 1136 0132 211C     	 mov r1,r4
 1137 0134 FFF7FEFF 	 bl __aeabi_d2f
 1138 0138 021C     	 add r2,r0,#0
 1139 013a 794B     	 ldr r3,.L115+48
 1140 013c 1A60     	 str r2,[r3]
 170:../main.c     **** 			Speed_ratio = (2 * (copysign(R_Turn,1) + HALF_TRACK_WIDTH) * M_PI) / (2 * copysign(R_Turn,1) * M
 1141              	 .loc 6 170 0
 1142 013e 784B     	 ldr r3,.L115+48
 1143 0140 1B68     	 ldr r3,[r3]
 1144 0142 5B00     	 lsl r3,r3,#1
 1145 0144 5B08     	 lsr r3,r3,#1
 1146 0146 181C     	 add r0,r3,#0
 1147 0148 FFF7FEFF 	 bl __aeabi_f2d
 1148 014c 031C     	 mov r3,r0
 1149 014e 0C1C     	 mov r4,r1
 1150 0150 181C     	 mov r0,r3
 1151 0152 211C     	 mov r1,r4
 1152 0154 734A     	 ldr r2,.L115+52
 1153 0156 744B     	 ldr r3,.L115+56
 1154 0158 FFF7FEFF 	 bl __aeabi_dadd
 1155 015c 031C     	 mov r3,r0
 1156 015e 0C1C     	 mov r4,r1
 1157 0160 181C     	 mov r0,r3
 1158 0162 211C     	 mov r1,r4
 1159 0164 1A1C     	 mov r2,r3
 1160 0166 231C     	 mov r3,r4
 1161 0168 FFF7FEFF 	 bl __aeabi_dadd
 1162 016c 031C     	 mov r3,r0
 1163 016e 0C1C     	 mov r4,r1
 1164 0170 181C     	 mov r0,r3
 1165 0172 211C     	 mov r1,r4
 1166 0174 6D4A     	 ldr r2,.L115+60
 1167 0176 6E4B     	 ldr r3,.L115+64
 1168 0178 FFF7FEFF 	 bl __aeabi_dmul
 1169 017c 031C     	 mov r3,r0
 1170 017e 0C1C     	 mov r4,r1
 1171 0180 1D1C     	 mov r5,r3
 1172 0182 261C     	 mov r6,r4
 1173 0184 664B     	 ldr r3,.L115+48
 1174 0186 1B68     	 ldr r3,[r3]
 1175 0188 5B00     	 lsl r3,r3,#1
 1176 018a 5B08     	 lsr r3,r3,#1
 1177 018c 181C     	 add r0,r3,#0
 1178 018e FFF7FEFF 	 bl __aeabi_f2d
 1179 0192 031C     	 mov r3,r0
 1180 0194 0C1C     	 mov r4,r1
 1181 0196 181C     	 mov r0,r3
 1182 0198 211C     	 mov r1,r4
 1183 019a 1A1C     	 mov r2,r3
 1184 019c 231C     	 mov r3,r4
 1185 019e FFF7FEFF 	 bl __aeabi_dadd
 1186 01a2 031C     	 mov r3,r0
 1187 01a4 0C1C     	 mov r4,r1
 1188 01a6 181C     	 mov r0,r3
 1189 01a8 211C     	 mov r1,r4
 1190 01aa 604A     	 ldr r2,.L115+60
 1191 01ac 604B     	 ldr r3,.L115+64
 1192 01ae FFF7FEFF 	 bl __aeabi_dmul
 1193 01b2 031C     	 mov r3,r0
 1194 01b4 0C1C     	 mov r4,r1
 1195 01b6 281C     	 mov r0,r5
 1196 01b8 311C     	 mov r1,r6
 1197 01ba 1A1C     	 mov r2,r3
 1198 01bc 231C     	 mov r3,r4
 1199 01be FFF7FEFF 	 bl __aeabi_ddiv
 1200 01c2 031C     	 mov r3,r0
 1201 01c4 0C1C     	 mov r4,r1
 1202 01c6 181C     	 mov r0,r3
 1203 01c8 211C     	 mov r1,r4
 1204 01ca FFF7FEFF 	 bl __aeabi_d2f
 1205 01ce 021C     	 add r2,r0,#0
 1206 01d0 584B     	 ldr r3,.L115+68
 1207 01d2 1A60     	 str r2,[r3]
 171:../main.c     **** 
 172:../main.c     **** 			if((R_TRUN_MIN < R_Turn) && (R_Turn < R_TRUN_MAX)){
 1208              	 .loc 6 172 0
 1209 01d4 524B     	 ldr r3,.L115+48
 1210 01d6 1B68     	 ldr r3,[r3]
 1211 01d8 181C     	 add r0,r3,#0
 1212 01da FFF7FEFF 	 bl __aeabi_f2d
 1213 01de 031C     	 mov r3,r0
 1214 01e0 0C1C     	 mov r4,r1
 1215 01e2 181C     	 mov r0,r3
 1216 01e4 211C     	 mov r1,r4
 1217 01e6 444A     	 ldr r2,.L115+8
 1218 01e8 444B     	 ldr r3,.L115+12
 1219 01ea FFF7FEFF 	 bl __aeabi_dcmpgt
 1220 01ee 031E     	 sub r3,r0,#0
 1221 01f0 00D1     	 bne .LCB689
 1222 01f2 AFE0     	 b .L50
 1223              	.LCB689:
 1224              	 .loc 6 172 0 is_stmt 0 discriminator 1
 1225 01f4 4A4B     	 ldr r3,.L115+48
 1226 01f6 1B68     	 ldr r3,[r3]
 1227 01f8 181C     	 add r0,r3,#0
 1228 01fa 4F49     	 ldr r1,.L115+72
 1229 01fc FFF7FEFF 	 bl __aeabi_fcmplt
 1230 0200 031E     	 sub r3,r0,#0
 1231 0202 00D1     	 bne .LCB697
 1232 0204 A6E0     	 b .L50
 1233              	.LCB697:
 173:../main.c     **** 				angle_fl = RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn + HALF_TRACK_WIDTH)); // out wheel
 1234              	 .loc 6 173 0 is_stmt 1
 1235 0206 464B     	 ldr r3,.L115+48
 1236 0208 1B68     	 ldr r3,[r3]
 1237 020a 181C     	 add r0,r3,#0
 1238 020c FFF7FEFF 	 bl __aeabi_f2d
 1239 0210 031C     	 mov r3,r0
 1240 0212 0C1C     	 mov r4,r1
 1241 0214 181C     	 mov r0,r3
 1242 0216 211C     	 mov r1,r4
 1243 0218 424A     	 ldr r2,.L115+52
 1244 021a 434B     	 ldr r3,.L115+56
 1245 021c FFF7FEFF 	 bl __aeabi_dadd
 1246 0220 031C     	 mov r3,r0
 1247 0222 0C1C     	 mov r4,r1
 1248 0224 3C48     	 ldr r0,.L115+40
 1249 0226 3D49     	 ldr r1,.L115+44
 1250 0228 1A1C     	 mov r2,r3
 1251 022a 231C     	 mov r3,r4
 1252 022c FFF7FEFF 	 bl __aeabi_ddiv
 1253 0230 031C     	 mov r3,r0
 1254 0232 0C1C     	 mov r4,r1
 1255 0234 181C     	 mov r0,r3
 1256 0236 211C     	 mov r1,r4
 1257 0238 FFF7FEFF 	 bl atan
 1258 023c 031C     	 mov r3,r0
 1259 023e 0C1C     	 mov r4,r1
 1260 0240 181C     	 mov r0,r3
 1261 0242 211C     	 mov r1,r4
 1262 0244 324A     	 ldr r2,.L115+32
 1263 0246 334B     	 ldr r3,.L115+36
 1264 0248 FFF7FEFF 	 bl __aeabi_dmul
 1265 024c 031C     	 mov r3,r0
 1266 024e 0C1C     	 mov r4,r1
 1267 0250 181C     	 mov r0,r3
 1268 0252 211C     	 mov r1,r4
 1269 0254 FFF7FEFF 	 bl __aeabi_d2f
 1270 0258 021C     	 add r2,r0,#0
 1271 025a 384B     	 ldr r3,.L115+76
 1272 025c 1A60     	 str r2,[r3]
 174:../main.c     **** 				angle_fr = RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn - HALF_TRACK_WIDTH)); // in wheel
 1273              	 .loc 6 174 0
 1274 025e 304B     	 ldr r3,.L115+48
 1275 0260 1B68     	 ldr r3,[r3]
 1276 0262 181C     	 add r0,r3,#0
 1277 0264 FFF7FEFF 	 bl __aeabi_f2d
 1278 0268 031C     	 mov r3,r0
 1279 026a 0C1C     	 mov r4,r1
 1280 026c 181C     	 mov r0,r3
 1281 026e 211C     	 mov r1,r4
 1282 0270 2C4A     	 ldr r2,.L115+52
 1283 0272 2D4B     	 ldr r3,.L115+56
 1284 0274 FFF7FEFF 	 bl __aeabi_dsub
 1285 0278 031C     	 mov r3,r0
 1286 027a 0C1C     	 mov r4,r1
 1287 027c 2648     	 ldr r0,.L115+40
 1288 027e 2749     	 ldr r1,.L115+44
 1289 0280 1A1C     	 mov r2,r3
 1290 0282 231C     	 mov r3,r4
 1291 0284 FFF7FEFF 	 bl __aeabi_ddiv
 1292 0288 031C     	 mov r3,r0
 1293 028a 0C1C     	 mov r4,r1
 1294 028c 181C     	 mov r0,r3
 1295 028e 211C     	 mov r1,r4
 1296 0290 FFF7FEFF 	 bl atan
 1297 0294 031C     	 mov r3,r0
 1298 0296 0C1C     	 mov r4,r1
 1299 0298 181C     	 mov r0,r3
 1300 029a 211C     	 mov r1,r4
 1301 029c 1C4A     	 ldr r2,.L115+32
 1302 029e 1D4B     	 ldr r3,.L115+36
 1303 02a0 FFF7FEFF 	 bl __aeabi_dmul
 1304 02a4 031C     	 mov r3,r0
 1305 02a6 0C1C     	 mov r4,r1
 1306 02a8 181C     	 mov r0,r3
 1307 02aa 211C     	 mov r1,r4
 1308 02ac FFF7FEFF 	 bl __aeabi_d2f
 1309 02b0 021C     	 add r2,r0,#0
 1310 02b2 234B     	 ldr r3,.L115+80
 1311 02b4 1A60     	 str r2,[r3]
 175:../main.c     **** 
 176:../main.c     **** 				speed_fl = Driving_speed_cal * Speed_ratio;
 1312              	 .loc 6 176 0
 1313 02b6 1F4B     	 ldr r3,.L115+68
 1314 02b8 1B68     	 ldr r3,[r3]
 1315 02ba 181C     	 add r0,r3,#0
 1316 02bc B968     	 ldr r1,[r7,#8]
 1317 02be FFF7FEFF 	 bl __aeabi_fmul
 1318 02c2 031C     	 add r3,r0,#0
 1319 02c4 1A1C     	 add r2,r3,#0
 1320 02c6 1F4B     	 ldr r3,.L115+84
 1321 02c8 1A60     	 str r2,[r3]
 177:../main.c     **** 				speed_fr = Driving_speed_cal / Speed_ratio;
 1322              	 .loc 6 177 0
 1323 02ca 1A4B     	 ldr r3,.L115+68
 1324 02cc 1B68     	 ldr r3,[r3]
 1325 02ce B868     	 ldr r0,[r7,#8]
 1326 02d0 191C     	 add r1,r3,#0
 1327 02d2 FFF7FEFF 	 bl __aeabi_fdiv
 1328 02d6 031C     	 add r3,r0,#0
 1329 02d8 1A1C     	 add r2,r3,#0
 1330 02da 1B4B     	 ldr r3,.L115+88
 1331 02dc 1A60     	 str r2,[r3]
 178:../main.c     **** 				//speed_rl = Driving_speed_cal * Speed_ratio;
 179:../main.c     **** 				//speed_rr = Driving_speed_cal / Speed_ratio;
 180:../main.c     **** 
 181:../main.c     **** 				speed_rl = speed_fl;
 1332              	 .loc 6 181 0
 1333 02de 194B     	 ldr r3,.L115+84
 1334 02e0 1A68     	 ldr r2,[r3]
 1335 02e2 1A4B     	 ldr r3,.L115+92
 1336 02e4 1A60     	 str r2,[r3]
 182:../main.c     **** 				speed_rr = speed_fr;
 1337              	 .loc 6 182 0
 1338 02e6 184B     	 ldr r3,.L115+88
 1339 02e8 1A68     	 ldr r2,[r3]
 1340 02ea 194B     	 ldr r3,.L115+96
 1341 02ec 1A60     	 str r2,[r3]
 1342 02ee D0E0     	 b .L53
 1343              	.L116:
 1344              	 .align 2
 1345              	.L115:
 1346 02f0 00000000 	 .word New_Input
 1347 02f4 000080BF 	 .word -1082130432
 1348 02f8 9A999999 	 .word -1717986918
 1349 02fc 9999A93F 	 .word 1068079513
 1350 0300 9999A9BF 	 .word -1079404135
 1351 0304 00000000 	 .word .L41
 1352 0308 00004842 	 .word 1112014848
 1353 030c 000048C2 	 .word -1035468800
 1354 0310 D9CEF753 	 .word 1408749273
 1355 0314 E3A54C40 	 .word 1078765027
 1356 0318 79E92631 	 .word 824633721
 1357 031c 08ACDC3F 	 .word 1071426568
 1358 0320 00000000 	 .word R_Turn
 1359 0324 77BE9F1A 	 .word 446676599
 1360 0328 2FDDC43F 	 .word 1069866287
 1361 032c 182D4454 	 .word 1413754136
 1362 0330 FB210940 	 .word 1074340347
 1363 0334 00000000 	 .word Speed_ratio
 1364 0338 0000A041 	 .word 1101004800
 1365 033c 00000000 	 .word angle_fl
 1366 0340 00000000 	 .word angle_fr
 1367 0344 00000000 	 .word speed_fl
 1368 0348 00000000 	 .word speed_fr
 1369 034c 00000000 	 .word speed_rl
 1370 0350 00000000 	 .word speed_rr
 1371              	.L50:
 183:../main.c     **** 			}
 184:../main.c     **** 			else if((- R_TRUN_MIN > R_Turn) && (R_Turn > -R_TRUN_MAX)){
 1372              	 .loc 6 184 0
 1373 0354 D84B     	 ldr r3,.L117
 1374 0356 1B68     	 ldr r3,[r3]
 1375 0358 181C     	 add r0,r3,#0
 1376 035a FFF7FEFF 	 bl __aeabi_f2d
 1377 035e 031C     	 mov r3,r0
 1378 0360 0C1C     	 mov r4,r1
 1379 0362 181C     	 mov r0,r3
 1380 0364 211C     	 mov r1,r4
 1381 0366 D54A     	 ldr r2,.L117+4
 1382 0368 D54B     	 ldr r3,.L117+8
 1383 036a FFF7FEFF 	 bl __aeabi_dcmplt
 1384 036e 031E     	 sub r3,r0,#0
 1385 0370 00D1     	 bne .LCB847
 1386 0372 7CE0     	 b .L54
 1387              	.LCB847:
 1388              	 .loc 6 184 0 is_stmt 0 discriminator 1
 1389 0374 D04B     	 ldr r3,.L117
 1390 0376 1B68     	 ldr r3,[r3]
 1391 0378 181C     	 add r0,r3,#0
 1392 037a D249     	 ldr r1,.L117+12
 1393 037c FFF7FEFF 	 bl __aeabi_fcmpgt
 1394 0380 031E     	 sub r3,r0,#0
 1395 0382 74D0     	 beq .L54
 185:../main.c     **** 				angle_fl = RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn + HALF_TRACK_WIDTH)); // in wheel
 1396              	 .loc 6 185 0 is_stmt 1
 1397 0384 CC4B     	 ldr r3,.L117
 1398 0386 1B68     	 ldr r3,[r3]
 1399 0388 181C     	 add r0,r3,#0
 1400 038a FFF7FEFF 	 bl __aeabi_f2d
 1401 038e 031C     	 mov r3,r0
 1402 0390 0C1C     	 mov r4,r1
 1403 0392 181C     	 mov r0,r3
 1404 0394 211C     	 mov r1,r4
 1405 0396 CC4A     	 ldr r2,.L117+16
 1406 0398 CC4B     	 ldr r3,.L117+20
 1407 039a FFF7FEFF 	 bl __aeabi_dadd
 1408 039e 031C     	 mov r3,r0
 1409 03a0 0C1C     	 mov r4,r1
 1410 03a2 CB48     	 ldr r0,.L117+24
 1411 03a4 CB49     	 ldr r1,.L117+28
 1412 03a6 1A1C     	 mov r2,r3
 1413 03a8 231C     	 mov r3,r4
 1414 03aa FFF7FEFF 	 bl __aeabi_ddiv
 1415 03ae 031C     	 mov r3,r0
 1416 03b0 0C1C     	 mov r4,r1
 1417 03b2 181C     	 mov r0,r3
 1418 03b4 211C     	 mov r1,r4
 1419 03b6 FFF7FEFF 	 bl atan
 1420 03ba 031C     	 mov r3,r0
 1421 03bc 0C1C     	 mov r4,r1
 1422 03be 181C     	 mov r0,r3
 1423 03c0 211C     	 mov r1,r4
 1424 03c2 C54A     	 ldr r2,.L117+32
 1425 03c4 C54B     	 ldr r3,.L117+36
 1426 03c6 FFF7FEFF 	 bl __aeabi_dmul
 1427 03ca 031C     	 mov r3,r0
 1428 03cc 0C1C     	 mov r4,r1
 1429 03ce 181C     	 mov r0,r3
 1430 03d0 211C     	 mov r1,r4
 1431 03d2 FFF7FEFF 	 bl __aeabi_d2f
 1432 03d6 021C     	 add r2,r0,#0
 1433 03d8 C14B     	 ldr r3,.L117+40
 1434 03da 1A60     	 str r2,[r3]
 186:../main.c     **** 				angle_fr = RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn - HALF_TRACK_WIDTH)); // out wheel
 1435              	 .loc 6 186 0
 1436 03dc B64B     	 ldr r3,.L117
 1437 03de 1B68     	 ldr r3,[r3]
 1438 03e0 181C     	 add r0,r3,#0
 1439 03e2 FFF7FEFF 	 bl __aeabi_f2d
 1440 03e6 031C     	 mov r3,r0
 1441 03e8 0C1C     	 mov r4,r1
 1442 03ea 181C     	 mov r0,r3
 1443 03ec 211C     	 mov r1,r4
 1444 03ee B64A     	 ldr r2,.L117+16
 1445 03f0 B64B     	 ldr r3,.L117+20
 1446 03f2 FFF7FEFF 	 bl __aeabi_dsub
 1447 03f6 031C     	 mov r3,r0
 1448 03f8 0C1C     	 mov r4,r1
 1449 03fa B548     	 ldr r0,.L117+24
 1450 03fc B549     	 ldr r1,.L117+28
 1451 03fe 1A1C     	 mov r2,r3
 1452 0400 231C     	 mov r3,r4
 1453 0402 FFF7FEFF 	 bl __aeabi_ddiv
 1454 0406 031C     	 mov r3,r0
 1455 0408 0C1C     	 mov r4,r1
 1456 040a 181C     	 mov r0,r3
 1457 040c 211C     	 mov r1,r4
 1458 040e FFF7FEFF 	 bl atan
 1459 0412 031C     	 mov r3,r0
 1460 0414 0C1C     	 mov r4,r1
 1461 0416 181C     	 mov r0,r3
 1462 0418 211C     	 mov r1,r4
 1463 041a AF4A     	 ldr r2,.L117+32
 1464 041c AF4B     	 ldr r3,.L117+36
 1465 041e FFF7FEFF 	 bl __aeabi_dmul
 1466 0422 031C     	 mov r3,r0
 1467 0424 0C1C     	 mov r4,r1
 1468 0426 181C     	 mov r0,r3
 1469 0428 211C     	 mov r1,r4
 1470 042a FFF7FEFF 	 bl __aeabi_d2f
 1471 042e 021C     	 add r2,r0,#0
 1472 0430 AC4B     	 ldr r3,.L117+44
 1473 0432 1A60     	 str r2,[r3]
 187:../main.c     **** 
 188:../main.c     **** 				speed_fl = Driving_speed_cal / Speed_ratio;
 1474              	 .loc 6 188 0
 1475 0434 AC4B     	 ldr r3,.L117+48
 1476 0436 1B68     	 ldr r3,[r3]
 1477 0438 B868     	 ldr r0,[r7,#8]
 1478 043a 191C     	 add r1,r3,#0
 1479 043c FFF7FEFF 	 bl __aeabi_fdiv
 1480 0440 031C     	 add r3,r0,#0
 1481 0442 1A1C     	 add r2,r3,#0
 1482 0444 A94B     	 ldr r3,.L117+52
 1483 0446 1A60     	 str r2,[r3]
 189:../main.c     **** 				speed_fr = Driving_speed_cal * Speed_ratio;
 1484              	 .loc 6 189 0
 1485 0448 A74B     	 ldr r3,.L117+48
 1486 044a 1B68     	 ldr r3,[r3]
 1487 044c 181C     	 add r0,r3,#0
 1488 044e B968     	 ldr r1,[r7,#8]
 1489 0450 FFF7FEFF 	 bl __aeabi_fmul
 1490 0454 031C     	 add r3,r0,#0
 1491 0456 1A1C     	 add r2,r3,#0
 1492 0458 A54B     	 ldr r3,.L117+56
 1493 045a 1A60     	 str r2,[r3]
 190:../main.c     **** 				//speed_rl = Driving_speed_cal / Speed_ratio;
 191:../main.c     **** 				//speed_rr = Driving_speed_cal * Speed_ratio;
 192:../main.c     **** 
 193:../main.c     **** 				speed_rl = speed_fl;
 1494              	 .loc 6 193 0
 1495 045c A34B     	 ldr r3,.L117+52
 1496 045e 1A68     	 ldr r2,[r3]
 1497 0460 A44B     	 ldr r3,.L117+60
 1498 0462 1A60     	 str r2,[r3]
 194:../main.c     **** 				speed_rr = speed_fr;
 1499              	 .loc 6 194 0
 1500 0464 A24B     	 ldr r3,.L117+56
 1501 0466 1A68     	 ldr r2,[r3]
 1502 0468 A34B     	 ldr r3,.L117+64
 1503 046a 1A60     	 str r2,[r3]
 1504 046c 11E0     	 b .L53
 1505              	.L54:
 195:../main.c     **** 			}
 196:../main.c     **** 			else{
 197:../main.c     **** 				angle_fl = 0;
 1506              	 .loc 6 197 0
 1507 046e 9C4B     	 ldr r3,.L117+40
 1508 0470 0022     	 mov r2,#0
 1509 0472 1A60     	 str r2,[r3]
 198:../main.c     **** 				angle_fr = 0;
 1510              	 .loc 6 198 0
 1511 0474 9B4B     	 ldr r3,.L117+44
 1512 0476 0022     	 mov r2,#0
 1513 0478 1A60     	 str r2,[r3]
 199:../main.c     **** 
 200:../main.c     **** 				speed_fl = Driving_speed_cal;
 1514              	 .loc 6 200 0
 1515 047a 9C4B     	 ldr r3,.L117+52
 1516 047c BA68     	 ldr r2,[r7,#8]
 1517 047e 1A60     	 str r2,[r3]
 201:../main.c     **** 				speed_fr = Driving_speed_cal;
 1518              	 .loc 6 201 0
 1519 0480 9B4B     	 ldr r3,.L117+56
 1520 0482 BA68     	 ldr r2,[r7,#8]
 1521 0484 1A60     	 str r2,[r3]
 202:../main.c     **** 				speed_rl = Driving_speed_cal;
 1522              	 .loc 6 202 0
 1523 0486 9B4B     	 ldr r3,.L117+60
 1524 0488 BA68     	 ldr r2,[r7,#8]
 1525 048a 1A60     	 str r2,[r3]
 203:../main.c     **** 				speed_rr = Driving_speed_cal;
 1526              	 .loc 6 203 0
 1527 048c 9A4B     	 ldr r3,.L117+64
 1528 048e BA68     	 ldr r2,[r7,#8]
 1529 0490 1A60     	 str r2,[r3]
 1530              	.L53:
 204:../main.c     **** 			}
 205:../main.c     **** 
 206:../main.c     **** 			//rear axle
 207:../main.c     **** 			angle_rl = 0;
 1531              	 .loc 6 207 0
 1532 0492 9A4B     	 ldr r3,.L117+68
 1533 0494 0022     	 mov r2,#0
 1534 0496 1A60     	 str r2,[r3]
 208:../main.c     **** 			angle_rr = 0;
 1535              	 .loc 6 208 0
 1536 0498 994B     	 ldr r3,.L117+72
 1537 049a 0022     	 mov r2,#0
 1538 049c 1A60     	 str r2,[r3]
 209:../main.c     **** 			break;
 1539              	 .loc 6 209 0
 1540 049e 00F079FC 	 bl .L57
 1541              	.L42:
 210:../main.c     **** 
 211:../main.c     **** 		case 2:// rear #############################################################
 212:../main.c     **** 			// steering limits
 213:../main.c     **** 			if(Steering_direction_cal > 50) Steering_direction_cal = 50;
 1542              	 .loc 6 213 0
 1543 04a2 F868     	 ldr r0,[r7,#12]
 1544 04a4 9749     	 ldr r1,.L117+76
 1545 04a6 FFF7FEFF 	 bl __aeabi_fcmpgt
 1546 04aa 031E     	 sub r3,r0,#0
 1547 04ac 01D0     	 beq .L58
 1548              	 .loc 6 213 0 is_stmt 0 discriminator 1
 1549 04ae 954B     	 ldr r3,.L117+76
 1550 04b0 FB60     	 str r3,[r7,#12]
 1551              	.L58:
 214:../main.c     **** 			if(Steering_direction_cal < -50) Steering_direction_cal = -50;
 1552              	 .loc 6 214 0 is_stmt 1
 1553 04b2 F868     	 ldr r0,[r7,#12]
 1554 04b4 9449     	 ldr r1,.L117+80
 1555 04b6 FFF7FEFF 	 bl __aeabi_fcmplt
 1556 04ba 031E     	 sub r3,r0,#0
 1557 04bc 01D0     	 beq .L60
 1558              	 .loc 6 214 0 is_stmt 0 discriminator 1
 1559 04be 924B     	 ldr r3,.L117+80
 1560 04c0 FB60     	 str r3,[r7,#12]
 1561              	.L60:
 215:../main.c     **** 
 216:../main.c     **** 			// pre calc
 217:../main.c     **** 			R_Turn = WHEEL_BASE / tan(Steering_direction_cal / RAD_TO_DEG); // to truni graduis converstion
 1562              	 .loc 6 217 0 is_stmt 1
 1563 04c2 F868     	 ldr r0,[r7,#12]
 1564 04c4 FFF7FEFF 	 bl __aeabi_f2d
 1565 04c8 031C     	 mov r3,r0
 1566 04ca 0C1C     	 mov r4,r1
 1567 04cc 181C     	 mov r0,r3
 1568 04ce 211C     	 mov r1,r4
 1569 04d0 814A     	 ldr r2,.L117+32
 1570 04d2 824B     	 ldr r3,.L117+36
 1571 04d4 FFF7FEFF 	 bl __aeabi_ddiv
 1572 04d8 031C     	 mov r3,r0
 1573 04da 0C1C     	 mov r4,r1
 1574 04dc 181C     	 mov r0,r3
 1575 04de 211C     	 mov r1,r4
 1576 04e0 FFF7FEFF 	 bl tan
 1577 04e4 031C     	 mov r3,r0
 1578 04e6 0C1C     	 mov r4,r1
 1579 04e8 7948     	 ldr r0,.L117+24
 1580 04ea 7A49     	 ldr r1,.L117+28
 1581 04ec 1A1C     	 mov r2,r3
 1582 04ee 231C     	 mov r3,r4
 1583 04f0 FFF7FEFF 	 bl __aeabi_ddiv
 1584 04f4 031C     	 mov r3,r0
 1585 04f6 0C1C     	 mov r4,r1
 1586 04f8 181C     	 mov r0,r3
 1587 04fa 211C     	 mov r1,r4
 1588 04fc FFF7FEFF 	 bl __aeabi_d2f
 1589 0500 021C     	 add r2,r0,#0
 1590 0502 6D4B     	 ldr r3,.L117
 1591 0504 1A60     	 str r2,[r3]
 218:../main.c     **** 			Speed_ratio = (2 * (copysign(R_Turn,1) + HALF_TRACK_WIDTH) * M_PI) / (2 * copysign(R_Turn,1) * M
 1592              	 .loc 6 218 0
 1593 0506 6C4B     	 ldr r3,.L117
 1594 0508 1B68     	 ldr r3,[r3]
 1595 050a 5B00     	 lsl r3,r3,#1
 1596 050c 5B08     	 lsr r3,r3,#1
 1597 050e 181C     	 add r0,r3,#0
 1598 0510 FFF7FEFF 	 bl __aeabi_f2d
 1599 0514 031C     	 mov r3,r0
 1600 0516 0C1C     	 mov r4,r1
 1601 0518 181C     	 mov r0,r3
 1602 051a 211C     	 mov r1,r4
 1603 051c 6A4A     	 ldr r2,.L117+16
 1604 051e 6B4B     	 ldr r3,.L117+20
 1605 0520 FFF7FEFF 	 bl __aeabi_dadd
 1606 0524 031C     	 mov r3,r0
 1607 0526 0C1C     	 mov r4,r1
 1608 0528 181C     	 mov r0,r3
 1609 052a 211C     	 mov r1,r4
 1610 052c 1A1C     	 mov r2,r3
 1611 052e 231C     	 mov r3,r4
 1612 0530 FFF7FEFF 	 bl __aeabi_dadd
 1613 0534 031C     	 mov r3,r0
 1614 0536 0C1C     	 mov r4,r1
 1615 0538 181C     	 mov r0,r3
 1616 053a 211C     	 mov r1,r4
 1617 053c 734A     	 ldr r2,.L117+84
 1618 053e 744B     	 ldr r3,.L117+88
 1619 0540 FFF7FEFF 	 bl __aeabi_dmul
 1620 0544 031C     	 mov r3,r0
 1621 0546 0C1C     	 mov r4,r1
 1622 0548 1D1C     	 mov r5,r3
 1623 054a 261C     	 mov r6,r4
 1624 054c 5A4B     	 ldr r3,.L117
 1625 054e 1B68     	 ldr r3,[r3]
 1626 0550 5B00     	 lsl r3,r3,#1
 1627 0552 5B08     	 lsr r3,r3,#1
 1628 0554 181C     	 add r0,r3,#0
 1629 0556 FFF7FEFF 	 bl __aeabi_f2d
 1630 055a 031C     	 mov r3,r0
 1631 055c 0C1C     	 mov r4,r1
 1632 055e 181C     	 mov r0,r3
 1633 0560 211C     	 mov r1,r4
 1634 0562 1A1C     	 mov r2,r3
 1635 0564 231C     	 mov r3,r4
 1636 0566 FFF7FEFF 	 bl __aeabi_dadd
 1637 056a 031C     	 mov r3,r0
 1638 056c 0C1C     	 mov r4,r1
 1639 056e 181C     	 mov r0,r3
 1640 0570 211C     	 mov r1,r4
 1641 0572 664A     	 ldr r2,.L117+84
 1642 0574 664B     	 ldr r3,.L117+88
 1643 0576 FFF7FEFF 	 bl __aeabi_dmul
 1644 057a 031C     	 mov r3,r0
 1645 057c 0C1C     	 mov r4,r1
 1646 057e 281C     	 mov r0,r5
 1647 0580 311C     	 mov r1,r6
 1648 0582 1A1C     	 mov r2,r3
 1649 0584 231C     	 mov r3,r4
 1650 0586 FFF7FEFF 	 bl __aeabi_ddiv
 1651 058a 031C     	 mov r3,r0
 1652 058c 0C1C     	 mov r4,r1
 1653 058e 181C     	 mov r0,r3
 1654 0590 211C     	 mov r1,r4
 1655 0592 FFF7FEFF 	 bl __aeabi_d2f
 1656 0596 021C     	 add r2,r0,#0
 1657 0598 534B     	 ldr r3,.L117+48
 1658 059a 1A60     	 str r2,[r3]
 219:../main.c     **** 
 220:../main.c     **** 			if((R_TRUN_MIN < R_Turn) && (R_Turn < R_TRUN_MAX)){
 1659              	 .loc 6 220 0
 1660 059c 464B     	 ldr r3,.L117
 1661 059e 1B68     	 ldr r3,[r3]
 1662 05a0 181C     	 add r0,r3,#0
 1663 05a2 FFF7FEFF 	 bl __aeabi_f2d
 1664 05a6 031C     	 mov r3,r0
 1665 05a8 0C1C     	 mov r4,r1
 1666 05aa 181C     	 mov r0,r3
 1667 05ac 211C     	 mov r1,r4
 1668 05ae 434A     	 ldr r2,.L117+4
 1669 05b0 584B     	 ldr r3,.L117+92
 1670 05b2 FFF7FEFF 	 bl __aeabi_dcmpgt
 1671 05b6 031E     	 sub r3,r0,#0
 1672 05b8 00D1     	 bne .LCB1120
 1673 05ba B1E0     	 b .L62
 1674              	.LCB1120:
 1675              	 .loc 6 220 0 is_stmt 0 discriminator 1
 1676 05bc 3E4B     	 ldr r3,.L117
 1677 05be 1B68     	 ldr r3,[r3]
 1678 05c0 181C     	 add r0,r3,#0
 1679 05c2 5549     	 ldr r1,.L117+96
 1680 05c4 FFF7FEFF 	 bl __aeabi_fcmplt
 1681 05c8 031E     	 sub r3,r0,#0
 1682 05ca 00D1     	 bne .LCB1128
 1683 05cc A8E0     	 b .L62
 1684              	.LCB1128:
 221:../main.c     **** 				angle_rl = - RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn + HALF_TRACK_WIDTH)); // out wheel
 1685              	 .loc 6 221 0 is_stmt 1
 1686 05ce 3A4B     	 ldr r3,.L117
 1687 05d0 1B68     	 ldr r3,[r3]
 1688 05d2 181C     	 add r0,r3,#0
 1689 05d4 FFF7FEFF 	 bl __aeabi_f2d
 1690 05d8 031C     	 mov r3,r0
 1691 05da 0C1C     	 mov r4,r1
 1692 05dc 181C     	 mov r0,r3
 1693 05de 211C     	 mov r1,r4
 1694 05e0 394A     	 ldr r2,.L117+16
 1695 05e2 3A4B     	 ldr r3,.L117+20
 1696 05e4 FFF7FEFF 	 bl __aeabi_dadd
 1697 05e8 031C     	 mov r3,r0
 1698 05ea 0C1C     	 mov r4,r1
 1699 05ec 3848     	 ldr r0,.L117+24
 1700 05ee 3949     	 ldr r1,.L117+28
 1701 05f0 1A1C     	 mov r2,r3
 1702 05f2 231C     	 mov r3,r4
 1703 05f4 FFF7FEFF 	 bl __aeabi_ddiv
 1704 05f8 031C     	 mov r3,r0
 1705 05fa 0C1C     	 mov r4,r1
 1706 05fc 181C     	 mov r0,r3
 1707 05fe 211C     	 mov r1,r4
 1708 0600 FFF7FEFF 	 bl atan
 1709 0604 031C     	 mov r3,r0
 1710 0606 0C1C     	 mov r4,r1
 1711 0608 181C     	 mov r0,r3
 1712 060a 211C     	 mov r1,r4
 1713 060c 324A     	 ldr r2,.L117+32
 1714 060e 434B     	 ldr r3,.L117+100
 1715 0610 FFF7FEFF 	 bl __aeabi_dmul
 1716 0614 031C     	 mov r3,r0
 1717 0616 0C1C     	 mov r4,r1
 1718 0618 181C     	 mov r0,r3
 1719 061a 211C     	 mov r1,r4
 1720 061c FFF7FEFF 	 bl __aeabi_d2f
 1721 0620 021C     	 add r2,r0,#0
 1722 0622 364B     	 ldr r3,.L117+68
 1723 0624 1A60     	 str r2,[r3]
 222:../main.c     **** 				angle_rr = - RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn - HALF_TRACK_WIDTH)); // in wheel
 1724              	 .loc 6 222 0
 1725 0626 244B     	 ldr r3,.L117
 1726 0628 1B68     	 ldr r3,[r3]
 1727 062a 181C     	 add r0,r3,#0
 1728 062c FFF7FEFF 	 bl __aeabi_f2d
 1729 0630 031C     	 mov r3,r0
 1730 0632 0C1C     	 mov r4,r1
 1731 0634 181C     	 mov r0,r3
 1732 0636 211C     	 mov r1,r4
 1733 0638 234A     	 ldr r2,.L117+16
 1734 063a 244B     	 ldr r3,.L117+20
 1735 063c FFF7FEFF 	 bl __aeabi_dsub
 1736 0640 031C     	 mov r3,r0
 1737 0642 0C1C     	 mov r4,r1
 1738 0644 2248     	 ldr r0,.L117+24
 1739 0646 2349     	 ldr r1,.L117+28
 1740 0648 1A1C     	 mov r2,r3
 1741 064a 231C     	 mov r3,r4
 1742 064c FFF7FEFF 	 bl __aeabi_ddiv
 1743 0650 031C     	 mov r3,r0
 1744 0652 0C1C     	 mov r4,r1
 1745 0654 181C     	 mov r0,r3
 1746 0656 211C     	 mov r1,r4
 1747 0658 FFF7FEFF 	 bl atan
 1748 065c 031C     	 mov r3,r0
 1749 065e 0C1C     	 mov r4,r1
 1750 0660 181C     	 mov r0,r3
 1751 0662 211C     	 mov r1,r4
 1752 0664 1C4A     	 ldr r2,.L117+32
 1753 0666 2D4B     	 ldr r3,.L117+100
 1754 0668 FFF7FEFF 	 bl __aeabi_dmul
 1755 066c 031C     	 mov r3,r0
 1756 066e 0C1C     	 mov r4,r1
 1757 0670 181C     	 mov r0,r3
 1758 0672 211C     	 mov r1,r4
 1759 0674 FFF7FEFF 	 bl __aeabi_d2f
 1760 0678 021C     	 add r2,r0,#0
 1761 067a 214B     	 ldr r3,.L117+72
 1762 067c 1A60     	 str r2,[r3]
 223:../main.c     **** 
 224:../main.c     **** 
 225:../main.c     **** 				speed_fl = Driving_speed_cal * Speed_ratio;
 1763              	 .loc 6 225 0
 1764 067e 1A4B     	 ldr r3,.L117+48
 1765 0680 1B68     	 ldr r3,[r3]
 1766 0682 181C     	 add r0,r3,#0
 1767 0684 B968     	 ldr r1,[r7,#8]
 1768 0686 FFF7FEFF 	 bl __aeabi_fmul
 1769 068a 031C     	 add r3,r0,#0
 1770 068c 1A1C     	 add r2,r3,#0
 1771 068e 174B     	 ldr r3,.L117+52
 1772 0690 1A60     	 str r2,[r3]
 226:../main.c     **** 				speed_fr = Driving_speed_cal / Speed_ratio;
 1773              	 .loc 6 226 0
 1774 0692 154B     	 ldr r3,.L117+48
 1775 0694 1B68     	 ldr r3,[r3]
 1776 0696 B868     	 ldr r0,[r7,#8]
 1777 0698 191C     	 add r1,r3,#0
 1778 069a FFF7FEFF 	 bl __aeabi_fdiv
 1779 069e 031C     	 add r3,r0,#0
 1780 06a0 1A1C     	 add r2,r3,#0
 1781 06a2 134B     	 ldr r3,.L117+56
 1782 06a4 1A60     	 str r2,[r3]
 227:../main.c     **** 				//speed_rl = Driving_speed_cal * Speed_ratio;
 228:../main.c     **** 				//speed_rr = Driving_speed_cal / Speed_ratio;
 229:../main.c     **** 
 230:../main.c     **** 				speed_rl = speed_fl;
 1783              	 .loc 6 230 0
 1784 06a6 114B     	 ldr r3,.L117+52
 1785 06a8 1A68     	 ldr r2,[r3]
 1786 06aa 124B     	 ldr r3,.L117+60
 1787 06ac 1A60     	 str r2,[r3]
 231:../main.c     **** 				speed_rr = speed_fr;
 1788              	 .loc 6 231 0
 1789 06ae 104B     	 ldr r3,.L117+56
 1790 06b0 1A68     	 ldr r2,[r3]
 1791 06b2 114B     	 ldr r3,.L117+64
 1792 06b4 1A60     	 str r2,[r3]
 1793 06b6 D2E0     	 b .L65
 1794              	.L118:
 1795              	 .align 2
 1796              	.L117:
 1797 06b8 00000000 	 .word R_Turn
 1798 06bc 9A999999 	 .word -1717986918
 1799 06c0 9999A9BF 	 .word -1079404135
 1800 06c4 0000A0C1 	 .word -1046478848
 1801 06c8 77BE9F1A 	 .word 446676599
 1802 06cc 2FDDC43F 	 .word 1069866287
 1803 06d0 79E92631 	 .word 824633721
 1804 06d4 08ACDC3F 	 .word 1071426568
 1805 06d8 D9CEF753 	 .word 1408749273
 1806 06dc E3A54C40 	 .word 1078765027
 1807 06e0 00000000 	 .word angle_fl
 1808 06e4 00000000 	 .word angle_fr
 1809 06e8 00000000 	 .word Speed_ratio
 1810 06ec 00000000 	 .word speed_fl
 1811 06f0 00000000 	 .word speed_fr
 1812 06f4 00000000 	 .word speed_rl
 1813 06f8 00000000 	 .word speed_rr
 1814 06fc 00000000 	 .word angle_rl
 1815 0700 00000000 	 .word angle_rr
 1816 0704 00004842 	 .word 1112014848
 1817 0708 000048C2 	 .word -1035468800
 1818 070c 182D4454 	 .word 1413754136
 1819 0710 FB210940 	 .word 1074340347
 1820 0714 9999A93F 	 .word 1068079513
 1821 0718 0000A041 	 .word 1101004800
 1822 071c E3A54CC0 	 .word -1068718621
 1823              	.L62:
 232:../main.c     **** 			}
 233:../main.c     **** 			else if((- R_TRUN_MIN > R_Turn) && (R_Turn > -R_TRUN_MAX)){
 1824              	 .loc 6 233 0
 1825 0720 DF4B     	 ldr r3,.L119
 1826 0722 1B68     	 ldr r3,[r3]
 1827 0724 181C     	 add r0,r3,#0
 1828 0726 FFF7FEFF 	 bl __aeabi_f2d
 1829 072a 031C     	 mov r3,r0
 1830 072c 0C1C     	 mov r4,r1
 1831 072e 181C     	 mov r0,r3
 1832 0730 211C     	 mov r1,r4
 1833 0732 DC4A     	 ldr r2,.L119+4
 1834 0734 DC4B     	 ldr r3,.L119+8
 1835 0736 FFF7FEFF 	 bl __aeabi_dcmplt
 1836 073a 031E     	 sub r3,r0,#0
 1837 073c 00D1     	 bne .LCB1279
 1838 073e 7CE0     	 b .L66
 1839              	.LCB1279:
 1840              	 .loc 6 233 0 is_stmt 0 discriminator 1
 1841 0740 D74B     	 ldr r3,.L119
 1842 0742 1B68     	 ldr r3,[r3]
 1843 0744 181C     	 add r0,r3,#0
 1844 0746 D949     	 ldr r1,.L119+12
 1845 0748 FFF7FEFF 	 bl __aeabi_fcmpgt
 1846 074c 031E     	 sub r3,r0,#0
 1847 074e 74D0     	 beq .L66
 234:../main.c     **** 				angle_rl = - RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn + HALF_TRACK_WIDTH)); // in wheel
 1848              	 .loc 6 234 0 is_stmt 1
 1849 0750 D34B     	 ldr r3,.L119
 1850 0752 1B68     	 ldr r3,[r3]
 1851 0754 181C     	 add r0,r3,#0
 1852 0756 FFF7FEFF 	 bl __aeabi_f2d
 1853 075a 031C     	 mov r3,r0
 1854 075c 0C1C     	 mov r4,r1
 1855 075e 181C     	 mov r0,r3
 1856 0760 211C     	 mov r1,r4
 1857 0762 D34A     	 ldr r2,.L119+16
 1858 0764 D34B     	 ldr r3,.L119+20
 1859 0766 FFF7FEFF 	 bl __aeabi_dadd
 1860 076a 031C     	 mov r3,r0
 1861 076c 0C1C     	 mov r4,r1
 1862 076e D248     	 ldr r0,.L119+24
 1863 0770 D249     	 ldr r1,.L119+28
 1864 0772 1A1C     	 mov r2,r3
 1865 0774 231C     	 mov r3,r4
 1866 0776 FFF7FEFF 	 bl __aeabi_ddiv
 1867 077a 031C     	 mov r3,r0
 1868 077c 0C1C     	 mov r4,r1
 1869 077e 181C     	 mov r0,r3
 1870 0780 211C     	 mov r1,r4
 1871 0782 FFF7FEFF 	 bl atan
 1872 0786 031C     	 mov r3,r0
 1873 0788 0C1C     	 mov r4,r1
 1874 078a 181C     	 mov r0,r3
 1875 078c 211C     	 mov r1,r4
 1876 078e CC4A     	 ldr r2,.L119+32
 1877 0790 CC4B     	 ldr r3,.L119+36
 1878 0792 FFF7FEFF 	 bl __aeabi_dmul
 1879 0796 031C     	 mov r3,r0
 1880 0798 0C1C     	 mov r4,r1
 1881 079a 181C     	 mov r0,r3
 1882 079c 211C     	 mov r1,r4
 1883 079e FFF7FEFF 	 bl __aeabi_d2f
 1884 07a2 021C     	 add r2,r0,#0
 1885 07a4 C84B     	 ldr r3,.L119+40
 1886 07a6 1A60     	 str r2,[r3]
 235:../main.c     **** 				angle_rr = - RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn - HALF_TRACK_WIDTH)); // out wheel
 1887              	 .loc 6 235 0
 1888 07a8 BD4B     	 ldr r3,.L119
 1889 07aa 1B68     	 ldr r3,[r3]
 1890 07ac 181C     	 add r0,r3,#0
 1891 07ae FFF7FEFF 	 bl __aeabi_f2d
 1892 07b2 031C     	 mov r3,r0
 1893 07b4 0C1C     	 mov r4,r1
 1894 07b6 181C     	 mov r0,r3
 1895 07b8 211C     	 mov r1,r4
 1896 07ba BD4A     	 ldr r2,.L119+16
 1897 07bc BD4B     	 ldr r3,.L119+20
 1898 07be FFF7FEFF 	 bl __aeabi_dsub
 1899 07c2 031C     	 mov r3,r0
 1900 07c4 0C1C     	 mov r4,r1
 1901 07c6 BC48     	 ldr r0,.L119+24
 1902 07c8 BC49     	 ldr r1,.L119+28
 1903 07ca 1A1C     	 mov r2,r3
 1904 07cc 231C     	 mov r3,r4
 1905 07ce FFF7FEFF 	 bl __aeabi_ddiv
 1906 07d2 031C     	 mov r3,r0
 1907 07d4 0C1C     	 mov r4,r1
 1908 07d6 181C     	 mov r0,r3
 1909 07d8 211C     	 mov r1,r4
 1910 07da FFF7FEFF 	 bl atan
 1911 07de 031C     	 mov r3,r0
 1912 07e0 0C1C     	 mov r4,r1
 1913 07e2 181C     	 mov r0,r3
 1914 07e4 211C     	 mov r1,r4
 1915 07e6 B64A     	 ldr r2,.L119+32
 1916 07e8 B64B     	 ldr r3,.L119+36
 1917 07ea FFF7FEFF 	 bl __aeabi_dmul
 1918 07ee 031C     	 mov r3,r0
 1919 07f0 0C1C     	 mov r4,r1
 1920 07f2 181C     	 mov r0,r3
 1921 07f4 211C     	 mov r1,r4
 1922 07f6 FFF7FEFF 	 bl __aeabi_d2f
 1923 07fa 021C     	 add r2,r0,#0
 1924 07fc B34B     	 ldr r3,.L119+44
 1925 07fe 1A60     	 str r2,[r3]
 236:../main.c     **** 
 237:../main.c     **** 				speed_fl = Driving_speed_cal / Speed_ratio;
 1926              	 .loc 6 237 0
 1927 0800 B34B     	 ldr r3,.L119+48
 1928 0802 1B68     	 ldr r3,[r3]
 1929 0804 B868     	 ldr r0,[r7,#8]
 1930 0806 191C     	 add r1,r3,#0
 1931 0808 FFF7FEFF 	 bl __aeabi_fdiv
 1932 080c 031C     	 add r3,r0,#0
 1933 080e 1A1C     	 add r2,r3,#0
 1934 0810 B04B     	 ldr r3,.L119+52
 1935 0812 1A60     	 str r2,[r3]
 238:../main.c     **** 				speed_fr = Driving_speed_cal * Speed_ratio;
 1936              	 .loc 6 238 0
 1937 0814 AE4B     	 ldr r3,.L119+48
 1938 0816 1B68     	 ldr r3,[r3]
 1939 0818 181C     	 add r0,r3,#0
 1940 081a B968     	 ldr r1,[r7,#8]
 1941 081c FFF7FEFF 	 bl __aeabi_fmul
 1942 0820 031C     	 add r3,r0,#0
 1943 0822 1A1C     	 add r2,r3,#0
 1944 0824 AC4B     	 ldr r3,.L119+56
 1945 0826 1A60     	 str r2,[r3]
 239:../main.c     **** 				//speed_rl = Driving_speed_cal / Speed_ratio;
 240:../main.c     **** 				//speed_rr = Driving_speed_cal * Speed_ratio;
 241:../main.c     **** 
 242:../main.c     **** 				speed_rl = speed_fl;
 1946              	 .loc 6 242 0
 1947 0828 AA4B     	 ldr r3,.L119+52
 1948 082a 1A68     	 ldr r2,[r3]
 1949 082c AB4B     	 ldr r3,.L119+60
 1950 082e 1A60     	 str r2,[r3]
 243:../main.c     **** 				speed_rr = speed_fr;
 1951              	 .loc 6 243 0
 1952 0830 A94B     	 ldr r3,.L119+56
 1953 0832 1A68     	 ldr r2,[r3]
 1954 0834 AA4B     	 ldr r3,.L119+64
 1955 0836 1A60     	 str r2,[r3]
 1956 0838 11E0     	 b .L65
 1957              	.L66:
 244:../main.c     **** 			}
 245:../main.c     **** 			else{
 246:../main.c     **** 				angle_rl = 0;
 1958              	 .loc 6 246 0
 1959 083a A34B     	 ldr r3,.L119+40
 1960 083c 0022     	 mov r2,#0
 1961 083e 1A60     	 str r2,[r3]
 247:../main.c     **** 				angle_rr = 0;
 1962              	 .loc 6 247 0
 1963 0840 A24B     	 ldr r3,.L119+44
 1964 0842 0022     	 mov r2,#0
 1965 0844 1A60     	 str r2,[r3]
 248:../main.c     **** 
 249:../main.c     **** 				speed_fl = Driving_speed_cal;
 1966              	 .loc 6 249 0
 1967 0846 A34B     	 ldr r3,.L119+52
 1968 0848 BA68     	 ldr r2,[r7,#8]
 1969 084a 1A60     	 str r2,[r3]
 250:../main.c     **** 				speed_fr = Driving_speed_cal;
 1970              	 .loc 6 250 0
 1971 084c A24B     	 ldr r3,.L119+56
 1972 084e BA68     	 ldr r2,[r7,#8]
 1973 0850 1A60     	 str r2,[r3]
 251:../main.c     **** 				speed_rl = Driving_speed_cal;
 1974              	 .loc 6 251 0
 1975 0852 A24B     	 ldr r3,.L119+60
 1976 0854 BA68     	 ldr r2,[r7,#8]
 1977 0856 1A60     	 str r2,[r3]
 252:../main.c     **** 				speed_rr = Driving_speed_cal;
 1978              	 .loc 6 252 0
 1979 0858 A14B     	 ldr r3,.L119+64
 1980 085a BA68     	 ldr r2,[r7,#8]
 1981 085c 1A60     	 str r2,[r3]
 1982              	.L65:
 253:../main.c     **** 			}
 254:../main.c     **** 
 255:../main.c     **** 			//rear axle
 256:../main.c     **** 			angle_fl = 0;
 1983              	 .loc 6 256 0
 1984 085e A14B     	 ldr r3,.L119+68
 1985 0860 0022     	 mov r2,#0
 1986 0862 1A60     	 str r2,[r3]
 257:../main.c     **** 			angle_fr = 0;
 1987              	 .loc 6 257 0
 1988 0864 A04B     	 ldr r3,.L119+72
 1989 0866 0022     	 mov r2,#0
 1990 0868 1A60     	 str r2,[r3]
 258:../main.c     **** 			break;
 1991              	 .loc 6 258 0
 1992 086a 93E2     	 b .L57
 1993              	.L43:
 259:../main.c     **** 
 260:../main.c     **** 		case 3: // 4 wheel #############################################################
 261:../main.c     **** 			// steering limits
 262:../main.c     **** 			if(Steering_direction_cal > 30) Steering_direction_cal = 30;
 1994              	 .loc 6 262 0
 1995 086c F868     	 ldr r0,[r7,#12]
 1996 086e 9F49     	 ldr r1,.L119+76
 1997 0870 FFF7FEFF 	 bl __aeabi_fcmpgt
 1998 0874 031E     	 sub r3,r0,#0
 1999 0876 01D0     	 beq .L69
 2000              	 .loc 6 262 0 is_stmt 0 discriminator 1
 2001 0878 9C4B     	 ldr r3,.L119+76
 2002 087a FB60     	 str r3,[r7,#12]
 2003              	.L69:
 263:../main.c     **** 			if(Steering_direction_cal < -30) Steering_direction_cal = -30;
 2004              	 .loc 6 263 0 is_stmt 1
 2005 087c F868     	 ldr r0,[r7,#12]
 2006 087e 9C49     	 ldr r1,.L119+80
 2007 0880 FFF7FEFF 	 bl __aeabi_fcmplt
 2008 0884 031E     	 sub r3,r0,#0
 2009 0886 01D0     	 beq .L71
 2010              	 .loc 6 263 0 is_stmt 0 discriminator 1
 2011 0888 994B     	 ldr r3,.L119+80
 2012 088a FB60     	 str r3,[r7,#12]
 2013              	.L71:
 264:../main.c     **** 
 265:../main.c     **** 			// pre calc
 266:../main.c     **** 			R_Turn = HALF_WHEEL_BASE / tan(Steering_direction_cal / RAD_TO_DEG); // to truni graduis convers
 2014              	 .loc 6 266 0 is_stmt 1
 2015 088c F868     	 ldr r0,[r7,#12]
 2016 088e FFF7FEFF 	 bl __aeabi_f2d
 2017 0892 031C     	 mov r3,r0
 2018 0894 0C1C     	 mov r4,r1
 2019 0896 181C     	 mov r0,r3
 2020 0898 211C     	 mov r1,r4
 2021 089a 894A     	 ldr r2,.L119+32
 2022 089c 954B     	 ldr r3,.L119+84
 2023 089e FFF7FEFF 	 bl __aeabi_ddiv
 2024 08a2 031C     	 mov r3,r0
 2025 08a4 0C1C     	 mov r4,r1
 2026 08a6 181C     	 mov r0,r3
 2027 08a8 211C     	 mov r1,r4
 2028 08aa FFF7FEFF 	 bl tan
 2029 08ae 031C     	 mov r3,r0
 2030 08b0 0C1C     	 mov r4,r1
 2031 08b2 9148     	 ldr r0,.L119+88
 2032 08b4 9149     	 ldr r1,.L119+92
 2033 08b6 1A1C     	 mov r2,r3
 2034 08b8 231C     	 mov r3,r4
 2035 08ba FFF7FEFF 	 bl __aeabi_ddiv
 2036 08be 031C     	 mov r3,r0
 2037 08c0 0C1C     	 mov r4,r1
 2038 08c2 181C     	 mov r0,r3
 2039 08c4 211C     	 mov r1,r4
 2040 08c6 FFF7FEFF 	 bl __aeabi_d2f
 2041 08ca 021C     	 add r2,r0,#0
 2042 08cc 744B     	 ldr r3,.L119
 2043 08ce 1A60     	 str r2,[r3]
 267:../main.c     **** 			Speed_ratio = (2 * (copysign(R_Turn,1) + HALF_TRACK_WIDTH) * M_PI) / (2 * copysign(R_Turn,1) * M
 2044              	 .loc 6 267 0
 2045 08d0 734B     	 ldr r3,.L119
 2046 08d2 1B68     	 ldr r3,[r3]
 2047 08d4 5B00     	 lsl r3,r3,#1
 2048 08d6 5B08     	 lsr r3,r3,#1
 2049 08d8 181C     	 add r0,r3,#0
 2050 08da FFF7FEFF 	 bl __aeabi_f2d
 2051 08de 031C     	 mov r3,r0
 2052 08e0 0C1C     	 mov r4,r1
 2053 08e2 181C     	 mov r0,r3
 2054 08e4 211C     	 mov r1,r4
 2055 08e6 724A     	 ldr r2,.L119+16
 2056 08e8 724B     	 ldr r3,.L119+20
 2057 08ea FFF7FEFF 	 bl __aeabi_dadd
 2058 08ee 031C     	 mov r3,r0
 2059 08f0 0C1C     	 mov r4,r1
 2060 08f2 181C     	 mov r0,r3
 2061 08f4 211C     	 mov r1,r4
 2062 08f6 1A1C     	 mov r2,r3
 2063 08f8 231C     	 mov r3,r4
 2064 08fa FFF7FEFF 	 bl __aeabi_dadd
 2065 08fe 031C     	 mov r3,r0
 2066 0900 0C1C     	 mov r4,r1
 2067 0902 181C     	 mov r0,r3
 2068 0904 211C     	 mov r1,r4
 2069 0906 7E4A     	 ldr r2,.L119+96
 2070 0908 7E4B     	 ldr r3,.L119+100
 2071 090a FFF7FEFF 	 bl __aeabi_dmul
 2072 090e 031C     	 mov r3,r0
 2073 0910 0C1C     	 mov r4,r1
 2074 0912 1D1C     	 mov r5,r3
 2075 0914 261C     	 mov r6,r4
 2076 0916 624B     	 ldr r3,.L119
 2077 0918 1B68     	 ldr r3,[r3]
 2078 091a 5B00     	 lsl r3,r3,#1
 2079 091c 5B08     	 lsr r3,r3,#1
 2080 091e 181C     	 add r0,r3,#0
 2081 0920 FFF7FEFF 	 bl __aeabi_f2d
 2082 0924 031C     	 mov r3,r0
 2083 0926 0C1C     	 mov r4,r1
 2084 0928 181C     	 mov r0,r3
 2085 092a 211C     	 mov r1,r4
 2086 092c 1A1C     	 mov r2,r3
 2087 092e 231C     	 mov r3,r4
 2088 0930 FFF7FEFF 	 bl __aeabi_dadd
 2089 0934 031C     	 mov r3,r0
 2090 0936 0C1C     	 mov r4,r1
 2091 0938 181C     	 mov r0,r3
 2092 093a 211C     	 mov r1,r4
 2093 093c 704A     	 ldr r2,.L119+96
 2094 093e 714B     	 ldr r3,.L119+100
 2095 0940 FFF7FEFF 	 bl __aeabi_dmul
 2096 0944 031C     	 mov r3,r0
 2097 0946 0C1C     	 mov r4,r1
 2098 0948 281C     	 mov r0,r5
 2099 094a 311C     	 mov r1,r6
 2100 094c 1A1C     	 mov r2,r3
 2101 094e 231C     	 mov r3,r4
 2102 0950 FFF7FEFF 	 bl __aeabi_ddiv
 2103 0954 031C     	 mov r3,r0
 2104 0956 0C1C     	 mov r4,r1
 2105 0958 181C     	 mov r0,r3
 2106 095a 211C     	 mov r1,r4
 2107 095c FFF7FEFF 	 bl __aeabi_d2f
 2108 0960 021C     	 add r2,r0,#0
 2109 0962 5B4B     	 ldr r3,.L119+48
 2110 0964 1A60     	 str r2,[r3]
 268:../main.c     **** 
 269:../main.c     **** 			if((R_TRUN_MIN < R_Turn) && (R_Turn < R_TRUN_MAX)){ // trun right positive R
 2111              	 .loc 6 269 0
 2112 0966 4E4B     	 ldr r3,.L119
 2113 0968 1B68     	 ldr r3,[r3]
 2114 096a 181C     	 add r0,r3,#0
 2115 096c FFF7FEFF 	 bl __aeabi_f2d
 2116 0970 031C     	 mov r3,r0
 2117 0972 0C1C     	 mov r4,r1
 2118 0974 181C     	 mov r0,r3
 2119 0976 211C     	 mov r1,r4
 2120 0978 4A4A     	 ldr r2,.L119+4
 2121 097a 634B     	 ldr r3,.L119+104
 2122 097c FFF7FEFF 	 bl __aeabi_dcmpgt
 2123 0980 031E     	 sub r3,r0,#0
 2124 0982 00D1     	 bne .LCB1552
 2125 0984 C4E0     	 b .L73
 2126              	.LCB1552:
 2127              	 .loc 6 269 0 is_stmt 0 discriminator 1
 2128 0986 464B     	 ldr r3,.L119
 2129 0988 1B68     	 ldr r3,[r3]
 2130 098a 181C     	 add r0,r3,#0
 2131 098c 5F49     	 ldr r1,.L119+108
 2132 098e FFF7FEFF 	 bl __aeabi_fcmplt
 2133 0992 031E     	 sub r3,r0,#0
 2134 0994 00D1     	 bne .LCB1560
 2135 0996 BBE0     	 b .L73
 2136              	.LCB1560:
 270:../main.c     **** 				angle_fl = RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn + HALF_TRACK_WIDTH)); // out wheel
 2137              	 .loc 6 270 0 is_stmt 1
 2138 0998 414B     	 ldr r3,.L119
 2139 099a 1B68     	 ldr r3,[r3]
 2140 099c 181C     	 add r0,r3,#0
 2141 099e FFF7FEFF 	 bl __aeabi_f2d
 2142 09a2 031C     	 mov r3,r0
 2143 09a4 0C1C     	 mov r4,r1
 2144 09a6 181C     	 mov r0,r3
 2145 09a8 211C     	 mov r1,r4
 2146 09aa 414A     	 ldr r2,.L119+16
 2147 09ac 414B     	 ldr r3,.L119+20
 2148 09ae FFF7FEFF 	 bl __aeabi_dadd
 2149 09b2 031C     	 mov r3,r0
 2150 09b4 0C1C     	 mov r4,r1
 2151 09b6 4048     	 ldr r0,.L119+24
 2152 09b8 4049     	 ldr r1,.L119+28
 2153 09ba 1A1C     	 mov r2,r3
 2154 09bc 231C     	 mov r3,r4
 2155 09be FFF7FEFF 	 bl __aeabi_ddiv
 2156 09c2 031C     	 mov r3,r0
 2157 09c4 0C1C     	 mov r4,r1
 2158 09c6 181C     	 mov r0,r3
 2159 09c8 211C     	 mov r1,r4
 2160 09ca FFF7FEFF 	 bl atan
 2161 09ce 031C     	 mov r3,r0
 2162 09d0 0C1C     	 mov r4,r1
 2163 09d2 181C     	 mov r0,r3
 2164 09d4 211C     	 mov r1,r4
 2165 09d6 3A4A     	 ldr r2,.L119+32
 2166 09d8 464B     	 ldr r3,.L119+84
 2167 09da FFF7FEFF 	 bl __aeabi_dmul
 2168 09de 031C     	 mov r3,r0
 2169 09e0 0C1C     	 mov r4,r1
 2170 09e2 181C     	 mov r0,r3
 2171 09e4 211C     	 mov r1,r4
 2172 09e6 FFF7FEFF 	 bl __aeabi_d2f
 2173 09ea 021C     	 add r2,r0,#0
 2174 09ec 3D4B     	 ldr r3,.L119+68
 2175 09ee 1A60     	 str r2,[r3]
 271:../main.c     **** 				angle_fr = RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn - HALF_TRACK_WIDTH)); // in wheel
 2176              	 .loc 6 271 0
 2177 09f0 2B4B     	 ldr r3,.L119
 2178 09f2 1B68     	 ldr r3,[r3]
 2179 09f4 181C     	 add r0,r3,#0
 2180 09f6 FFF7FEFF 	 bl __aeabi_f2d
 2181 09fa 031C     	 mov r3,r0
 2182 09fc 0C1C     	 mov r4,r1
 2183 09fe 181C     	 mov r0,r3
 2184 0a00 211C     	 mov r1,r4
 2185 0a02 2B4A     	 ldr r2,.L119+16
 2186 0a04 2B4B     	 ldr r3,.L119+20
 2187 0a06 FFF7FEFF 	 bl __aeabi_dsub
 2188 0a0a 031C     	 mov r3,r0
 2189 0a0c 0C1C     	 mov r4,r1
 2190 0a0e 2A48     	 ldr r0,.L119+24
 2191 0a10 2A49     	 ldr r1,.L119+28
 2192 0a12 1A1C     	 mov r2,r3
 2193 0a14 231C     	 mov r3,r4
 2194 0a16 FFF7FEFF 	 bl __aeabi_ddiv
 2195 0a1a 031C     	 mov r3,r0
 2196 0a1c 0C1C     	 mov r4,r1
 2197 0a1e 181C     	 mov r0,r3
 2198 0a20 211C     	 mov r1,r4
 2199 0a22 FFF7FEFF 	 bl atan
 2200 0a26 031C     	 mov r3,r0
 2201 0a28 0C1C     	 mov r4,r1
 2202 0a2a 181C     	 mov r0,r3
 2203 0a2c 211C     	 mov r1,r4
 2204 0a2e 244A     	 ldr r2,.L119+32
 2205 0a30 304B     	 ldr r3,.L119+84
 2206 0a32 FFF7FEFF 	 bl __aeabi_dmul
 2207 0a36 031C     	 mov r3,r0
 2208 0a38 0C1C     	 mov r4,r1
 2209 0a3a 181C     	 mov r0,r3
 2210 0a3c 211C     	 mov r1,r4
 2211 0a3e FFF7FEFF 	 bl __aeabi_d2f
 2212 0a42 021C     	 add r2,r0,#0
 2213 0a44 284B     	 ldr r3,.L119+72
 2214 0a46 1A60     	 str r2,[r3]
 272:../main.c     **** 				//angle_rl = - RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn + HALF_TRACK_WIDTH)); // out wheel
 273:../main.c     **** 				//angle_rr = - RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn - HALF_TRACK_WIDTH)); // in wheel
 274:../main.c     **** 
 275:../main.c     **** 				angle_rl = -angle_fl;
 2215              	 .loc 6 275 0
 2216 0a48 264B     	 ldr r3,.L119+68
 2217 0a4a 1B68     	 ldr r3,[r3]
 2218 0a4c 8022     	 mov r2,#128
 2219 0a4e 1206     	 lsl r2,r2,#24
 2220 0a50 5A40     	 eor r2,r3
 2221 0a52 1D4B     	 ldr r3,.L119+40
 2222 0a54 1A60     	 str r2,[r3]
 276:../main.c     **** 				angle_rr = -angle_fr;
 2223              	 .loc 6 276 0
 2224 0a56 244B     	 ldr r3,.L119+72
 2225 0a58 1B68     	 ldr r3,[r3]
 2226 0a5a 8022     	 mov r2,#128
 2227 0a5c 1206     	 lsl r2,r2,#24
 2228 0a5e 5A40     	 eor r2,r3
 2229 0a60 1A4B     	 ldr r3,.L119+44
 2230 0a62 1A60     	 str r2,[r3]
 277:../main.c     **** 
 278:../main.c     **** 				speed_fl = Driving_speed_cal * Speed_ratio;
 2231              	 .loc 6 278 0
 2232 0a64 1A4B     	 ldr r3,.L119+48
 2233 0a66 1B68     	 ldr r3,[r3]
 2234 0a68 181C     	 add r0,r3,#0
 2235 0a6a B968     	 ldr r1,[r7,#8]
 2236 0a6c FFF7FEFF 	 bl __aeabi_fmul
 2237 0a70 031C     	 add r3,r0,#0
 2238 0a72 1A1C     	 add r2,r3,#0
 2239 0a74 174B     	 ldr r3,.L119+52
 2240 0a76 1A60     	 str r2,[r3]
 279:../main.c     **** 				speed_fr = Driving_speed_cal / Speed_ratio;
 2241              	 .loc 6 279 0
 2242 0a78 154B     	 ldr r3,.L119+48
 2243 0a7a 1B68     	 ldr r3,[r3]
 2244 0a7c B868     	 ldr r0,[r7,#8]
 2245 0a7e 191C     	 add r1,r3,#0
 2246 0a80 FFF7FEFF 	 bl __aeabi_fdiv
 2247 0a84 031C     	 add r3,r0,#0
 2248 0a86 1A1C     	 add r2,r3,#0
 2249 0a88 134B     	 ldr r3,.L119+56
 2250 0a8a 1A60     	 str r2,[r3]
 280:../main.c     **** 				//speed_rl = Driving_speed_cal * Speed_ratio;
 281:../main.c     **** 				//speed_rr = Driving_speed_cal / Speed_ratio;
 282:../main.c     **** 
 283:../main.c     **** 				speed_rl = speed_fl;
 2251              	 .loc 6 283 0
 2252 0a8c 114B     	 ldr r3,.L119+52
 2253 0a8e 1A68     	 ldr r2,[r3]
 2254 0a90 124B     	 ldr r3,.L119+60
 2255 0a92 1A60     	 str r2,[r3]
 284:../main.c     **** 				speed_rr = speed_fr;
 2256              	 .loc 6 284 0
 2257 0a94 104B     	 ldr r3,.L119+56
 2258 0a96 1A68     	 ldr r2,[r3]
 2259 0a98 114B     	 ldr r3,.L119+64
 2260 0a9a 1A60     	 str r2,[r3]
 2261 0a9c EDE0     	 b .L76
 2262              	.L120:
 2263 0a9e C046     	 .align 2
 2264              	.L119:
 2265 0aa0 00000000 	 .word R_Turn
 2266 0aa4 9A999999 	 .word -1717986918
 2267 0aa8 9999A9BF 	 .word -1079404135
 2268 0aac 0000A0C1 	 .word -1046478848
 2269 0ab0 77BE9F1A 	 .word 446676599
 2270 0ab4 2FDDC43F 	 .word 1069866287
 2271 0ab8 79E92631 	 .word 824633721
 2272 0abc 08ACDC3F 	 .word 1071426568
 2273 0ac0 D9CEF753 	 .word 1408749273
 2274 0ac4 E3A54CC0 	 .word -1068718621
 2275 0ac8 00000000 	 .word angle_rl
 2276 0acc 00000000 	 .word angle_rr
 2277 0ad0 00000000 	 .word Speed_ratio
 2278 0ad4 00000000 	 .word speed_fl
 2279 0ad8 00000000 	 .word speed_fr
 2280 0adc 00000000 	 .word speed_rl
 2281 0ae0 00000000 	 .word speed_rr
 2282 0ae4 00000000 	 .word angle_fl
 2283 0ae8 00000000 	 .word angle_fr
 2284 0aec 0000F041 	 .word 1106247680
 2285 0af0 0000F0C1 	 .word -1041235968
 2286 0af4 E3A54C40 	 .word 1078765027
 2287 0af8 295C8FC2 	 .word -1030792151
 2288 0afc F528CC3F 	 .word 1070344437
 2289 0b00 182D4454 	 .word 1413754136
 2290 0b04 FB210940 	 .word 1074340347
 2291 0b08 9999A93F 	 .word 1068079513
 2292 0b0c 0000A041 	 .word 1101004800
 2293              	.L73:
 285:../main.c     **** 			}
 286:../main.c     **** 			else if((- R_TRUN_MIN > R_Turn) && (R_Turn > -R_TRUN_MAX)){ // trun left positive R
 2294              	 .loc 6 286 0
 2295 0b10 B24B     	 ldr r3,.L121
 2296 0b12 1B68     	 ldr r3,[r3]
 2297 0b14 181C     	 add r0,r3,#0
 2298 0b16 FFF7FEFF 	 bl __aeabi_f2d
 2299 0b1a 031C     	 mov r3,r0
 2300 0b1c 0C1C     	 mov r4,r1
 2301 0b1e 181C     	 mov r0,r3
 2302 0b20 211C     	 mov r1,r4
 2303 0b22 AF4A     	 ldr r2,.L121+4
 2304 0b24 AF4B     	 ldr r3,.L121+8
 2305 0b26 FFF7FEFF 	 bl __aeabi_dcmplt
 2306 0b2a 031E     	 sub r3,r0,#0
 2307 0b2c 00D1     	 bne .LCB1727
 2308 0b2e 8BE0     	 b .L77
 2309              	.LCB1727:
 2310              	 .loc 6 286 0 is_stmt 0 discriminator 1
 2311 0b30 AA4B     	 ldr r3,.L121
 2312 0b32 1B68     	 ldr r3,[r3]
 2313 0b34 181C     	 add r0,r3,#0
 2314 0b36 AC49     	 ldr r1,.L121+12
 2315 0b38 FFF7FEFF 	 bl __aeabi_fcmpgt
 2316 0b3c 031E     	 sub r3,r0,#0
 2317 0b3e 00D1     	 bne .LCB1735
 2318 0b40 82E0     	 b .L77
 2319              	.LCB1735:
 287:../main.c     **** 				angle_fl = RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn + HALF_TRACK_WIDTH)); // in wheel
 2320              	 .loc 6 287 0 is_stmt 1
 2321 0b42 A64B     	 ldr r3,.L121
 2322 0b44 1B68     	 ldr r3,[r3]
 2323 0b46 181C     	 add r0,r3,#0
 2324 0b48 FFF7FEFF 	 bl __aeabi_f2d
 2325 0b4c 031C     	 mov r3,r0
 2326 0b4e 0C1C     	 mov r4,r1
 2327 0b50 181C     	 mov r0,r3
 2328 0b52 211C     	 mov r1,r4
 2329 0b54 A54A     	 ldr r2,.L121+16
 2330 0b56 A64B     	 ldr r3,.L121+20
 2331 0b58 FFF7FEFF 	 bl __aeabi_dadd
 2332 0b5c 031C     	 mov r3,r0
 2333 0b5e 0C1C     	 mov r4,r1
 2334 0b60 A448     	 ldr r0,.L121+24
 2335 0b62 A549     	 ldr r1,.L121+28
 2336 0b64 1A1C     	 mov r2,r3
 2337 0b66 231C     	 mov r3,r4
 2338 0b68 FFF7FEFF 	 bl __aeabi_ddiv
 2339 0b6c 031C     	 mov r3,r0
 2340 0b6e 0C1C     	 mov r4,r1
 2341 0b70 181C     	 mov r0,r3
 2342 0b72 211C     	 mov r1,r4
 2343 0b74 FFF7FEFF 	 bl atan
 2344 0b78 031C     	 mov r3,r0
 2345 0b7a 0C1C     	 mov r4,r1
 2346 0b7c 181C     	 mov r0,r3
 2347 0b7e 211C     	 mov r1,r4
 2348 0b80 9E4A     	 ldr r2,.L121+32
 2349 0b82 9F4B     	 ldr r3,.L121+36
 2350 0b84 FFF7FEFF 	 bl __aeabi_dmul
 2351 0b88 031C     	 mov r3,r0
 2352 0b8a 0C1C     	 mov r4,r1
 2353 0b8c 181C     	 mov r0,r3
 2354 0b8e 211C     	 mov r1,r4
 2355 0b90 FFF7FEFF 	 bl __aeabi_d2f
 2356 0b94 021C     	 add r2,r0,#0
 2357 0b96 9B4B     	 ldr r3,.L121+40
 2358 0b98 1A60     	 str r2,[r3]
 288:../main.c     **** 				angle_fr = RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn - HALF_TRACK_WIDTH)); // out wheel
 2359              	 .loc 6 288 0
 2360 0b9a 904B     	 ldr r3,.L121
 2361 0b9c 1B68     	 ldr r3,[r3]
 2362 0b9e 181C     	 add r0,r3,#0
 2363 0ba0 FFF7FEFF 	 bl __aeabi_f2d
 2364 0ba4 031C     	 mov r3,r0
 2365 0ba6 0C1C     	 mov r4,r1
 2366 0ba8 181C     	 mov r0,r3
 2367 0baa 211C     	 mov r1,r4
 2368 0bac 8F4A     	 ldr r2,.L121+16
 2369 0bae 904B     	 ldr r3,.L121+20
 2370 0bb0 FFF7FEFF 	 bl __aeabi_dsub
 2371 0bb4 031C     	 mov r3,r0
 2372 0bb6 0C1C     	 mov r4,r1
 2373 0bb8 8E48     	 ldr r0,.L121+24
 2374 0bba 8F49     	 ldr r1,.L121+28
 2375 0bbc 1A1C     	 mov r2,r3
 2376 0bbe 231C     	 mov r3,r4
 2377 0bc0 FFF7FEFF 	 bl __aeabi_ddiv
 2378 0bc4 031C     	 mov r3,r0
 2379 0bc6 0C1C     	 mov r4,r1
 2380 0bc8 181C     	 mov r0,r3
 2381 0bca 211C     	 mov r1,r4
 2382 0bcc FFF7FEFF 	 bl atan
 2383 0bd0 031C     	 mov r3,r0
 2384 0bd2 0C1C     	 mov r4,r1
 2385 0bd4 181C     	 mov r0,r3
 2386 0bd6 211C     	 mov r1,r4
 2387 0bd8 884A     	 ldr r2,.L121+32
 2388 0bda 894B     	 ldr r3,.L121+36
 2389 0bdc FFF7FEFF 	 bl __aeabi_dmul
 2390 0be0 031C     	 mov r3,r0
 2391 0be2 0C1C     	 mov r4,r1
 2392 0be4 181C     	 mov r0,r3
 2393 0be6 211C     	 mov r1,r4
 2394 0be8 FFF7FEFF 	 bl __aeabi_d2f
 2395 0bec 021C     	 add r2,r0,#0
 2396 0bee 864B     	 ldr r3,.L121+44
 2397 0bf0 1A60     	 str r2,[r3]
 289:../main.c     **** 				//angle_rl = - RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn + HALF_TRACK_WIDTH)); // in wheel
 290:../main.c     **** 				//angle_rr = - RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn - HALF_TRACK_WIDTH)); // in wheel
 291:../main.c     **** 
 292:../main.c     **** 				angle_rl = -angle_fl;
 2398              	 .loc 6 292 0
 2399 0bf2 844B     	 ldr r3,.L121+40
 2400 0bf4 1B68     	 ldr r3,[r3]
 2401 0bf6 8022     	 mov r2,#128
 2402 0bf8 1206     	 lsl r2,r2,#24
 2403 0bfa 5A40     	 eor r2,r3
 2404 0bfc 834B     	 ldr r3,.L121+48
 2405 0bfe 1A60     	 str r2,[r3]
 293:../main.c     **** 				angle_rr = -angle_fr;
 2406              	 .loc 6 293 0
 2407 0c00 814B     	 ldr r3,.L121+44
 2408 0c02 1B68     	 ldr r3,[r3]
 2409 0c04 8022     	 mov r2,#128
 2410 0c06 1206     	 lsl r2,r2,#24
 2411 0c08 5A40     	 eor r2,r3
 2412 0c0a 814B     	 ldr r3,.L121+52
 2413 0c0c 1A60     	 str r2,[r3]
 294:../main.c     **** 
 295:../main.c     **** 				speed_fl = Driving_speed_cal / Speed_ratio;
 2414              	 .loc 6 295 0
 2415 0c0e 814B     	 ldr r3,.L121+56
 2416 0c10 1B68     	 ldr r3,[r3]
 2417 0c12 B868     	 ldr r0,[r7,#8]
 2418 0c14 191C     	 add r1,r3,#0
 2419 0c16 FFF7FEFF 	 bl __aeabi_fdiv
 2420 0c1a 031C     	 add r3,r0,#0
 2421 0c1c 1A1C     	 add r2,r3,#0
 2422 0c1e 7E4B     	 ldr r3,.L121+60
 2423 0c20 1A60     	 str r2,[r3]
 296:../main.c     **** 				speed_fr = Driving_speed_cal * Speed_ratio;
 2424              	 .loc 6 296 0
 2425 0c22 7C4B     	 ldr r3,.L121+56
 2426 0c24 1B68     	 ldr r3,[r3]
 2427 0c26 181C     	 add r0,r3,#0
 2428 0c28 B968     	 ldr r1,[r7,#8]
 2429 0c2a FFF7FEFF 	 bl __aeabi_fmul
 2430 0c2e 031C     	 add r3,r0,#0
 2431 0c30 1A1C     	 add r2,r3,#0
 2432 0c32 7A4B     	 ldr r3,.L121+64
 2433 0c34 1A60     	 str r2,[r3]
 297:../main.c     **** 				//speed_rl = Driving_speed_cal / Speed_ratio;
 298:../main.c     **** 				//speed_rr = Driving_speed_cal * Speed_ratio;
 299:../main.c     **** 
 300:../main.c     **** 				speed_rl = speed_fl;
 2434              	 .loc 6 300 0
 2435 0c36 784B     	 ldr r3,.L121+60
 2436 0c38 1A68     	 ldr r2,[r3]
 2437 0c3a 794B     	 ldr r3,.L121+68
 2438 0c3c 1A60     	 str r2,[r3]
 301:../main.c     **** 				speed_rr = speed_fr;
 2439              	 .loc 6 301 0
 2440 0c3e 774B     	 ldr r3,.L121+64
 2441 0c40 1A68     	 ldr r2,[r3]
 2442 0c42 784B     	 ldr r3,.L121+72
 2443 0c44 1A60     	 str r2,[r3]
 2444 0c46 18E0     	 b .L76
 2445              	.L77:
 302:../main.c     **** 			}
 303:../main.c     **** 			else{// starigt driving
 304:../main.c     **** 				angle_fl = 0;
 2446              	 .loc 6 304 0
 2447 0c48 6E4B     	 ldr r3,.L121+40
 2448 0c4a 0022     	 mov r2,#0
 2449 0c4c 1A60     	 str r2,[r3]
 305:../main.c     **** 				angle_fr = 0;
 2450              	 .loc 6 305 0
 2451 0c4e 6E4B     	 ldr r3,.L121+44
 2452 0c50 0022     	 mov r2,#0
 2453 0c52 1A60     	 str r2,[r3]
 306:../main.c     **** 				angle_rl = 0;
 2454              	 .loc 6 306 0
 2455 0c54 6D4B     	 ldr r3,.L121+48
 2456 0c56 0022     	 mov r2,#0
 2457 0c58 1A60     	 str r2,[r3]
 307:../main.c     **** 				angle_rr = 0;
 2458              	 .loc 6 307 0
 2459 0c5a 6D4B     	 ldr r3,.L121+52
 2460 0c5c 0022     	 mov r2,#0
 2461 0c5e 1A60     	 str r2,[r3]
 308:../main.c     **** 
 309:../main.c     **** 				speed_fl = Driving_speed_cal;
 2462              	 .loc 6 309 0
 2463 0c60 6D4B     	 ldr r3,.L121+60
 2464 0c62 BA68     	 ldr r2,[r7,#8]
 2465 0c64 1A60     	 str r2,[r3]
 310:../main.c     **** 				speed_fr = Driving_speed_cal;
 2466              	 .loc 6 310 0
 2467 0c66 6D4B     	 ldr r3,.L121+64
 2468 0c68 BA68     	 ldr r2,[r7,#8]
 2469 0c6a 1A60     	 str r2,[r3]
 311:../main.c     **** 				speed_rl = Driving_speed_cal;
 2470              	 .loc 6 311 0
 2471 0c6c 6C4B     	 ldr r3,.L121+68
 2472 0c6e BA68     	 ldr r2,[r7,#8]
 2473 0c70 1A60     	 str r2,[r3]
 312:../main.c     **** 				speed_rr = Driving_speed_cal;
 2474              	 .loc 6 312 0
 2475 0c72 6C4B     	 ldr r3,.L121+72
 2476 0c74 BA68     	 ldr r2,[r7,#8]
 2477 0c76 1A60     	 str r2,[r3]
 313:../main.c     **** 			}
 314:../main.c     **** 			break;
 2478              	 .loc 6 314 0
 2479 0c78 8CE0     	 b .L57
 2480              	.L76:
 2481 0c7a 8BE0     	 b .L57
 2482              	.L44:
 315:../main.c     **** 
 316:../main.c     **** 		case 4:  //carb //#############################################################
 317:../main.c     **** 			Steering_direction_cal = Steering_direction_cal * 2; // mach data from remote
 2483              	 .loc 6 317 0
 2484 0c7c FB68     	 ldr r3,[r7,#12]
 2485 0c7e 181C     	 add r0,r3,#0
 2486 0c80 191C     	 add r1,r3,#0
 2487 0c82 FFF7FEFF 	 bl __aeabi_fadd
 2488 0c86 031C     	 add r3,r0,#0
 2489 0c88 FB60     	 str r3,[r7,#12]
 318:../main.c     **** 			if(Steering_direction_cal > 190) Steering_direction_cal = 190;
 2490              	 .loc 6 318 0
 2491 0c8a F868     	 ldr r0,[r7,#12]
 2492 0c8c 6649     	 ldr r1,.L121+76
 2493 0c8e FFF7FEFF 	 bl __aeabi_fcmpgt
 2494 0c92 031E     	 sub r3,r0,#0
 2495 0c94 01D0     	 beq .L80
 2496              	 .loc 6 318 0 is_stmt 0 discriminator 1
 2497 0c96 644B     	 ldr r3,.L121+76
 2498 0c98 FB60     	 str r3,[r7,#12]
 2499              	.L80:
 319:../main.c     **** 			if(Steering_direction_cal < -190) Steering_direction_cal = -190;
 2500              	 .loc 6 319 0 is_stmt 1
 2501 0c9a F868     	 ldr r0,[r7,#12]
 2502 0c9c 6349     	 ldr r1,.L121+80
 2503 0c9e FFF7FEFF 	 bl __aeabi_fcmplt
 2504 0ca2 031E     	 sub r3,r0,#0
 2505 0ca4 01D0     	 beq .L82
 2506              	 .loc 6 319 0 is_stmt 0 discriminator 1
 2507 0ca6 614B     	 ldr r3,.L121+80
 2508 0ca8 FB60     	 str r3,[r7,#12]
 2509              	.L82:
 320:../main.c     **** 			// steering
 321:../main.c     **** 			angle_fl = Steering_direction_cal;
 2510              	 .loc 6 321 0 is_stmt 1
 2511 0caa 564B     	 ldr r3,.L121+40
 2512 0cac FA68     	 ldr r2,[r7,#12]
 2513 0cae 1A60     	 str r2,[r3]
 322:../main.c     **** 			angle_fr = Steering_direction_cal;
 2514              	 .loc 6 322 0
 2515 0cb0 554B     	 ldr r3,.L121+44
 2516 0cb2 FA68     	 ldr r2,[r7,#12]
 2517 0cb4 1A60     	 str r2,[r3]
 323:../main.c     **** 			angle_rl = Steering_direction_cal;
 2518              	 .loc 6 323 0
 2519 0cb6 554B     	 ldr r3,.L121+48
 2520 0cb8 FA68     	 ldr r2,[r7,#12]
 2521 0cba 1A60     	 str r2,[r3]
 324:../main.c     **** 			angle_rr = Steering_direction_cal;
 2522              	 .loc 6 324 0
 2523 0cbc 544B     	 ldr r3,.L121+52
 2524 0cbe FA68     	 ldr r2,[r7,#12]
 2525 0cc0 1A60     	 str r2,[r3]
 325:../main.c     **** 			 // speed
 326:../main.c     **** 			 speed_fl = Driving_speed_cal;
 2526              	 .loc 6 326 0
 2527 0cc2 554B     	 ldr r3,.L121+60
 2528 0cc4 BA68     	 ldr r2,[r7,#8]
 2529 0cc6 1A60     	 str r2,[r3]
 327:../main.c     **** 			 speed_fr = Driving_speed_cal;
 2530              	 .loc 6 327 0
 2531 0cc8 544B     	 ldr r3,.L121+64
 2532 0cca BA68     	 ldr r2,[r7,#8]
 2533 0ccc 1A60     	 str r2,[r3]
 328:../main.c     **** 			 speed_rl = Driving_speed_cal;
 2534              	 .loc 6 328 0
 2535 0cce 544B     	 ldr r3,.L121+68
 2536 0cd0 BA68     	 ldr r2,[r7,#8]
 2537 0cd2 1A60     	 str r2,[r3]
 329:../main.c     **** 			 speed_rr = Driving_speed_cal;
 2538              	 .loc 6 329 0
 2539 0cd4 534B     	 ldr r3,.L121+72
 2540 0cd6 BA68     	 ldr r2,[r7,#8]
 2541 0cd8 1A60     	 str r2,[r3]
 330:../main.c     **** 			break;
 2542              	 .loc 6 330 0
 2543 0cda 5BE0     	 b .L57
 2544              	.L45:
 331:../main.c     **** 
 332:../main.c     **** 		case 5: // rotate #############################################################
 333:../main.c     **** 			// steering agel for turng in place
 334:../main.c     **** 			angle_fl = ROTATION_ANGEL + ROTATION_ANGEL_OFFSET;
 2545              	 .loc 6 334 0
 2546 0cdc 494B     	 ldr r3,.L121+40
 2547 0cde 544A     	 ldr r2,.L121+84
 2548 0ce0 1A60     	 str r2,[r3]
 335:../main.c     **** 			angle_fr = -ROTATION_ANGEL + ROTATION_ANGEL_OFFSET;
 2549              	 .loc 6 335 0
 2550 0ce2 494B     	 ldr r3,.L121+44
 2551 0ce4 534A     	 ldr r2,.L121+88
 2552 0ce6 1A60     	 str r2,[r3]
 336:../main.c     **** 			angle_rl = -ROTATION_ANGEL + ROTATION_ANGEL_OFFSET;
 2553              	 .loc 6 336 0
 2554 0ce8 484B     	 ldr r3,.L121+48
 2555 0cea 524A     	 ldr r2,.L121+88
 2556 0cec 1A60     	 str r2,[r3]
 337:../main.c     **** 			angle_rr = ROTATION_ANGEL + ROTATION_ANGEL_OFFSET;
 2557              	 .loc 6 337 0
 2558 0cee 484B     	 ldr r3,.L121+52
 2559 0cf0 4F4A     	 ldr r2,.L121+84
 2560 0cf2 1A60     	 str r2,[r3]
 338:../main.c     **** 
 339:../main.c     **** 			 // speed
 340:../main.c     **** 			if (Steering_direction_cal > 10){
 2561              	 .loc 6 340 0
 2562 0cf4 F868     	 ldr r0,[r7,#12]
 2563 0cf6 5049     	 ldr r1,.L121+92
 2564 0cf8 FFF7FEFF 	 bl __aeabi_fcmpgt
 2565 0cfc 031E     	 sub r3,r0,#0
 2566 0cfe 0ED0     	 beq .L113
 341:../main.c     **** 				speed_fl = ROTATION_SPEED;
 2567              	 .loc 6 341 0
 2568 0d00 454B     	 ldr r3,.L121+60
 2569 0d02 FA22     	 mov r2,#250
 2570 0d04 9205     	 lsl r2,r2,#22
 2571 0d06 1A60     	 str r2,[r3]
 342:../main.c     **** 				speed_fr = -ROTATION_SPEED;
 2572              	 .loc 6 342 0
 2573 0d08 444B     	 ldr r3,.L121+64
 2574 0d0a 4C4A     	 ldr r2,.L121+96
 2575 0d0c 1A60     	 str r2,[r3]
 343:../main.c     **** 				speed_rl = ROTATION_SPEED;
 2576              	 .loc 6 343 0
 2577 0d0e 444B     	 ldr r3,.L121+68
 2578 0d10 FA22     	 mov r2,#250
 2579 0d12 9205     	 lsl r2,r2,#22
 2580 0d14 1A60     	 str r2,[r3]
 344:../main.c     **** 				speed_rr = -ROTATION_SPEED;
 2581              	 .loc 6 344 0
 2582 0d16 434B     	 ldr r3,.L121+72
 2583 0d18 484A     	 ldr r2,.L121+96
 2584 0d1a 1A60     	 str r2,[r3]
 2585 0d1c 21E0     	 b .L86
 2586              	.L113:
 345:../main.c     **** 			}
 346:../main.c     **** 			else if(Steering_direction_cal < -10){
 2587              	 .loc 6 346 0
 2588 0d1e F868     	 ldr r0,[r7,#12]
 2589 0d20 4749     	 ldr r1,.L121+100
 2590 0d22 FFF7FEFF 	 bl __aeabi_fcmplt
 2591 0d26 031E     	 sub r3,r0,#0
 2592 0d28 0ED0     	 beq .L114
 347:../main.c     **** 				speed_fl = -ROTATION_SPEED;
 2593              	 .loc 6 347 0
 2594 0d2a 3B4B     	 ldr r3,.L121+60
 2595 0d2c 434A     	 ldr r2,.L121+96
 2596 0d2e 1A60     	 str r2,[r3]
 348:../main.c     **** 				speed_fr = ROTATION_SPEED;
 2597              	 .loc 6 348 0
 2598 0d30 3A4B     	 ldr r3,.L121+64
 2599 0d32 FA22     	 mov r2,#250
 2600 0d34 9205     	 lsl r2,r2,#22
 2601 0d36 1A60     	 str r2,[r3]
 349:../main.c     **** 				speed_rl = -ROTATION_SPEED;
 2602              	 .loc 6 349 0
 2603 0d38 394B     	 ldr r3,.L121+68
 2604 0d3a 404A     	 ldr r2,.L121+96
 2605 0d3c 1A60     	 str r2,[r3]
 350:../main.c     **** 				speed_rr = ROTATION_SPEED;
 2606              	 .loc 6 350 0
 2607 0d3e 394B     	 ldr r3,.L121+72
 2608 0d40 FA22     	 mov r2,#250
 2609 0d42 9205     	 lsl r2,r2,#22
 2610 0d44 1A60     	 str r2,[r3]
 2611 0d46 0CE0     	 b .L86
 2612              	.L114:
 351:../main.c     **** 			}
 352:../main.c     **** 			else{
 353:../main.c     **** 				speed_fl = 0;
 2613              	 .loc 6 353 0
 2614 0d48 334B     	 ldr r3,.L121+60
 2615 0d4a 0022     	 mov r2,#0
 2616 0d4c 1A60     	 str r2,[r3]
 354:../main.c     **** 				speed_fr = 0;
 2617              	 .loc 6 354 0
 2618 0d4e 334B     	 ldr r3,.L121+64
 2619 0d50 0022     	 mov r2,#0
 2620 0d52 1A60     	 str r2,[r3]
 355:../main.c     **** 				speed_rl = 0;
 2621              	 .loc 6 355 0
 2622 0d54 324B     	 ldr r3,.L121+68
 2623 0d56 0022     	 mov r2,#0
 2624 0d58 1A60     	 str r2,[r3]
 356:../main.c     **** 				speed_rr = 0;
 2625              	 .loc 6 356 0
 2626 0d5a 324B     	 ldr r3,.L121+72
 2627 0d5c 0022     	 mov r2,#0
 2628 0d5e 1A60     	 str r2,[r3]
 357:../main.c     **** 			}
 358:../main.c     **** 			break;
 2629              	 .loc 6 358 0
 2630 0d60 18E0     	 b .L57
 2631              	.L86:
 2632 0d62 17E0     	 b .L57
 2633              	.L39:
 359:../main.c     **** 
 360:../main.c     **** 		default:
 361:../main.c     **** 			angle_fl = 0;
 2634              	 .loc 6 361 0
 2635 0d64 274B     	 ldr r3,.L121+40
 2636 0d66 0022     	 mov r2,#0
 2637 0d68 1A60     	 str r2,[r3]
 362:../main.c     **** 			angle_fr = 0;
 2638              	 .loc 6 362 0
 2639 0d6a 274B     	 ldr r3,.L121+44
 2640 0d6c 0022     	 mov r2,#0
 2641 0d6e 1A60     	 str r2,[r3]
 363:../main.c     **** 			angle_rl = 0;
 2642              	 .loc 6 363 0
 2643 0d70 264B     	 ldr r3,.L121+48
 2644 0d72 0022     	 mov r2,#0
 2645 0d74 1A60     	 str r2,[r3]
 364:../main.c     **** 			angle_rr = 0;
 2646              	 .loc 6 364 0
 2647 0d76 264B     	 ldr r3,.L121+52
 2648 0d78 0022     	 mov r2,#0
 2649 0d7a 1A60     	 str r2,[r3]
 365:../main.c     **** 
 366:../main.c     **** 			speed_fl = 0;
 2650              	 .loc 6 366 0
 2651 0d7c 264B     	 ldr r3,.L121+60
 2652 0d7e 0022     	 mov r2,#0
 2653 0d80 1A60     	 str r2,[r3]
 367:../main.c     **** 			speed_fr = 0;
 2654              	 .loc 6 367 0
 2655 0d82 264B     	 ldr r3,.L121+64
 2656 0d84 0022     	 mov r2,#0
 2657 0d86 1A60     	 str r2,[r3]
 368:../main.c     **** 			speed_rl = 0;
 2658              	 .loc 6 368 0
 2659 0d88 254B     	 ldr r3,.L121+68
 2660 0d8a 0022     	 mov r2,#0
 2661 0d8c 1A60     	 str r2,[r3]
 369:../main.c     **** 			speed_rr = 0;
 2662              	 .loc 6 369 0
 2663 0d8e 254B     	 ldr r3,.L121+72
 2664 0d90 0022     	 mov r2,#0
 2665 0d92 1A60     	 str r2,[r3]
 2666              	.L57:
 370:../main.c     **** 
 371:../main.c     **** 	}
 372:../main.c     ****   // set gobal vars
 373:../main.c     ****   Steering_Angles[0] = angle_fl;
 2667              	 .loc 6 373 0
 2668 0d94 1B4B     	 ldr r3,.L121+40
 2669 0d96 1A68     	 ldr r2,[r3]
 2670 0d98 2A4B     	 ldr r3,.L121+104
 2671 0d9a 1A60     	 str r2,[r3]
 374:../main.c     ****   Steering_Angles[1] = angle_fr;
 2672              	 .loc 6 374 0
 2673 0d9c 1A4B     	 ldr r3,.L121+44
 2674 0d9e 1A68     	 ldr r2,[r3]
 2675 0da0 284B     	 ldr r3,.L121+104
 2676 0da2 5A60     	 str r2,[r3,#4]
 375:../main.c     ****   Steering_Angles[2] = angle_rl;
 2677              	 .loc 6 375 0
 2678 0da4 194B     	 ldr r3,.L121+48
 2679 0da6 1A68     	 ldr r2,[r3]
 2680 0da8 264B     	 ldr r3,.L121+104
 2681 0daa 9A60     	 str r2,[r3,#8]
 376:../main.c     ****   Steering_Angles[3] = angle_rr;
 2682              	 .loc 6 376 0
 2683 0dac 184B     	 ldr r3,.L121+52
 2684 0dae 1A68     	 ldr r2,[r3]
 2685 0db0 244B     	 ldr r3,.L121+104
 2686 0db2 DA60     	 str r2,[r3,#12]
 377:../main.c     **** 
 378:../main.c     ****   Speeds[0] = speed_fl;
 2687              	 .loc 6 378 0
 2688 0db4 184B     	 ldr r3,.L121+60
 2689 0db6 1A68     	 ldr r2,[r3]
 2690 0db8 234B     	 ldr r3,.L121+108
 2691 0dba 1A60     	 str r2,[r3]
 379:../main.c     ****   Speeds[1] = speed_fr;
 2692              	 .loc 6 379 0
 2693 0dbc 174B     	 ldr r3,.L121+64
 2694 0dbe 1A68     	 ldr r2,[r3]
 2695 0dc0 214B     	 ldr r3,.L121+108
 2696 0dc2 5A60     	 str r2,[r3,#4]
 380:../main.c     ****   Speeds[2] = speed_rl;
 2697              	 .loc 6 380 0
 2698 0dc4 164B     	 ldr r3,.L121+68
 2699 0dc6 1A68     	 ldr r2,[r3]
 2700 0dc8 1F4B     	 ldr r3,.L121+108
 2701 0dca 9A60     	 str r2,[r3,#8]
 381:../main.c     ****   Speeds[3] = speed_rr;
 2702              	 .loc 6 381 0
 2703 0dcc 154B     	 ldr r3,.L121+72
 2704 0dce 1A68     	 ldr r2,[r3]
 2705 0dd0 1D4B     	 ldr r3,.L121+108
 2706 0dd2 DA60     	 str r2,[r3,#12]
 382:../main.c     **** 
 383:../main.c     **** }
 2707              	 .loc 6 383 0
 2708 0dd4 BD46     	 mov sp,r7
 2709 0dd6 05B0     	 add sp,sp,#20
 2710              	 
 2711 0dd8 F0BD     	 pop {r4,r5,r6,r7,pc}
 2712              	.L122:
 2713 0dda C046     	 .align 2
 2714              	.L121:
 2715 0ddc 00000000 	 .word R_Turn
 2716 0de0 9A999999 	 .word -1717986918
 2717 0de4 9999A9BF 	 .word -1079404135
 2718 0de8 0000A0C1 	 .word -1046478848
 2719 0dec 77BE9F1A 	 .word 446676599
 2720 0df0 2FDDC43F 	 .word 1069866287
 2721 0df4 79E92631 	 .word 824633721
 2722 0df8 08ACDC3F 	 .word 1071426568
 2723 0dfc D9CEF753 	 .word 1408749273
 2724 0e00 E3A54C40 	 .word 1078765027
 2725 0e04 00000000 	 .word angle_fl
 2726 0e08 00000000 	 .word angle_fr
 2727 0e0c 00000000 	 .word angle_rl
 2728 0e10 00000000 	 .word angle_rr
 2729 0e14 00000000 	 .word Speed_ratio
 2730 0e18 00000000 	 .word speed_fl
 2731 0e1c 00000000 	 .word speed_fr
 2732 0e20 00000000 	 .word speed_rl
 2733 0e24 00000000 	 .word speed_rr
 2734 0e28 00003E43 	 .word 1128136704
 2735 0e2c 00003EC3 	 .word -1019346944
 2736 0e30 0AD76B42 	 .word 1114363658
 2737 0e34 0AD743C2 	 .word -1035741430
 2738 0e38 00002041 	 .word 1092616192
 2739 0e3c 000080BE 	 .word -1098907648
 2740 0e40 000020C1 	 .word -1054867456
 2741 0e44 00000000 	 .word Steering_Angles
 2742 0e48 00000000 	 .word Speeds
 2743              	 .cfi_endproc
 2744              	.LFE225:
 2746              	 .section .text.IRQ4_Handler,"ax",%progbits
 2747              	 .align 2
 2748              	 .global IRQ4_Handler
 2749              	 .code 16
 2750              	 .thumb_func
 2752              	IRQ4_Handler:
 2753              	.LFB226:
 384:../main.c     **** 
 385:../main.c     **** 
 386:../main.c     **** void CAN_RX_ULTRASONIC_ISR(void) { // recide data
 2754              	 .loc 6 386 0
 2755              	 .cfi_startproc
 2756 0000 80B5     	 push {r7,lr}
 2757              	.LCFI36:
 2758              	 .cfi_def_cfa_offset 8
 2759              	 .cfi_offset 7,-8
 2760              	 .cfi_offset 14,-4
 2761 0002 84B0     	 sub sp,sp,#16
 2762              	.LCFI37:
 2763              	 .cfi_def_cfa_offset 24
 2764 0004 00AF     	 add r7,sp,#0
 2765              	.LCFI38:
 2766              	 .cfi_def_cfa_register 7
 387:../main.c     **** 	XMC_CAN_MO_t* lmsgobjct_ptr_1 = CAN_NODE_0.lmobj_ptr[6]->mo_ptr;
 2767              	 .loc 6 387 0
 2768 0006 2C4B     	 ldr r3,.L126
 2769 0008 5B6A     	 ldr r3,[r3,#36]
 2770 000a 1B68     	 ldr r3,[r3]
 2771 000c BB60     	 str r3,[r7,#8]
 388:../main.c     **** 	CAN_NODE_MO_Receive((void*) CAN_NODE_0.lmobj_ptr[6]);
 2772              	 .loc 6 388 0
 2773 000e 2A4B     	 ldr r3,.L126
 2774 0010 5B6A     	 ldr r3,[r3,#36]
 2775 0012 181C     	 mov r0,r3
 2776 0014 FFF7FEFF 	 bl CAN_NODE_MO_Receive
 389:../main.c     **** 
 390:../main.c     **** 	uint8_t data_RX[8];
 391:../main.c     **** 	uint8_t i;
 392:../main.c     **** 	for(i = 0 ; i < 8 ; i ++){
 2777              	 .loc 6 392 0
 2778 0018 0F23     	 mov r3,#15
 2779 001a FB18     	 add r3,r7,r3
 2780 001c 0022     	 mov r2,#0
 2781 001e 1A70     	 strb r2,[r3]
 2782 0020 11E0     	 b .L124
 2783              	.L125:
 393:../main.c     **** 		 data_RX[i] = lmsgobjct_ptr_1->can_data_byte[i];
 2784              	 .loc 6 393 0 discriminator 3
 2785 0022 0F23     	 mov r3,#15
 2786 0024 FB18     	 add r3,r7,r3
 2787 0026 1B78     	 ldrb r3,[r3]
 2788 0028 0F22     	 mov r2,#15
 2789 002a BA18     	 add r2,r7,r2
 2790 002c 1278     	 ldrb r2,[r2]
 2791 002e B968     	 ldr r1,[r7,#8]
 2792 0030 8A18     	 add r2,r1,r2
 2793 0032 117C     	 ldrb r1,[r2,#16]
 2794 0034 3A1C     	 mov r2,r7
 2795 0036 D154     	 strb r1,[r2,r3]
 392:../main.c     **** 		 data_RX[i] = lmsgobjct_ptr_1->can_data_byte[i];
 2796              	 .loc 6 392 0 discriminator 3
 2797 0038 0F23     	 mov r3,#15
 2798 003a FB18     	 add r3,r7,r3
 2799 003c 1A78     	 ldrb r2,[r3]
 2800 003e 0F23     	 mov r3,#15
 2801 0040 FB18     	 add r3,r7,r3
 2802 0042 0132     	 add r2,r2,#1
 2803 0044 1A70     	 strb r2,[r3]
 2804              	.L124:
 392:../main.c     **** 		 data_RX[i] = lmsgobjct_ptr_1->can_data_byte[i];
 2805              	 .loc 6 392 0 is_stmt 0 discriminator 1
 2806 0046 0F23     	 mov r3,#15
 2807 0048 FB18     	 add r3,r7,r3
 2808 004a 1B78     	 ldrb r3,[r3]
 2809 004c 072B     	 cmp r3,#7
 2810 004e E8D9     	 bls .L125
 394:../main.c     **** 	}
 395:../main.c     **** 
 396:../main.c     **** 	CAN_state_Ultrasonic = (data_RX[0 * 2 + 1] << 8) | data_RX[0 * 2];
 2811              	 .loc 6 396 0 is_stmt 1
 2812 0050 3B1C     	 mov r3,r7
 2813 0052 5B78     	 ldrb r3,[r3,#1]
 2814 0054 1B02     	 lsl r3,r3,#8
 2815 0056 DAB2     	 uxtb r2,r3
 2816 0058 3B1C     	 mov r3,r7
 2817 005a 1B78     	 ldrb r3,[r3]
 2818 005c DBB2     	 uxtb r3,r3
 2819 005e 1343     	 orr r3,r2
 2820 0060 DBB2     	 uxtb r3,r3
 2821 0062 DAB2     	 uxtb r2,r3
 2822 0064 154B     	 ldr r3,.L126+4
 2823 0066 1A70     	 strb r2,[r3]
 397:../main.c     **** 	distance_C = (data_RX[1 * 2 + 1] << 8) | data_RX[1 * 2];
 2824              	 .loc 6 397 0
 2825 0068 3B1C     	 mov r3,r7
 2826 006a DB78     	 ldrb r3,[r3,#3]
 2827 006c 1B02     	 lsl r3,r3,#8
 2828 006e 9AB2     	 uxth r2,r3
 2829 0070 3B1C     	 mov r3,r7
 2830 0072 9B78     	 ldrb r3,[r3,#2]
 2831 0074 9BB2     	 uxth r3,r3
 2832 0076 1343     	 orr r3,r2
 2833 0078 9BB2     	 uxth r3,r3
 2834 007a 9AB2     	 uxth r2,r3
 2835 007c 104B     	 ldr r3,.L126+8
 2836 007e 1A80     	 strh r2,[r3]
 398:../main.c     **** 	distance_L = (data_RX[2 * 2 + 1] << 8) | data_RX[2 * 2];
 2837              	 .loc 6 398 0
 2838 0080 3B1C     	 mov r3,r7
 2839 0082 5B79     	 ldrb r3,[r3,#5]
 2840 0084 1B02     	 lsl r3,r3,#8
 2841 0086 9AB2     	 uxth r2,r3
 2842 0088 3B1C     	 mov r3,r7
 2843 008a 1B79     	 ldrb r3,[r3,#4]
 2844 008c 9BB2     	 uxth r3,r3
 2845 008e 1343     	 orr r3,r2
 2846 0090 9BB2     	 uxth r3,r3
 2847 0092 9AB2     	 uxth r2,r3
 2848 0094 0B4B     	 ldr r3,.L126+12
 2849 0096 1A80     	 strh r2,[r3]
 399:../main.c     **** 	distance_R = (data_RX[3 * 2 + 1] << 8) | data_RX[3 * 2];
 2850              	 .loc 6 399 0
 2851 0098 3B1C     	 mov r3,r7
 2852 009a DB79     	 ldrb r3,[r3,#7]
 2853 009c 1B02     	 lsl r3,r3,#8
 2854 009e 9AB2     	 uxth r2,r3
 2855 00a0 3B1C     	 mov r3,r7
 2856 00a2 9B79     	 ldrb r3,[r3,#6]
 2857 00a4 9BB2     	 uxth r3,r3
 2858 00a6 1343     	 orr r3,r2
 2859 00a8 9BB2     	 uxth r3,r3
 2860 00aa 9AB2     	 uxth r2,r3
 2861 00ac 064B     	 ldr r3,.L126+16
 2862 00ae 1A80     	 strh r2,[r3]
 400:../main.c     **** 
 401:../main.c     **** }
 2863              	 .loc 6 401 0
 2864 00b0 BD46     	 mov sp,r7
 2865 00b2 04B0     	 add sp,sp,#16
 2866              	 
 2867 00b4 80BD     	 pop {r7,pc}
 2868              	.L127:
 2869 00b6 C046     	 .align 2
 2870              	.L126:
 2871 00b8 00000000 	 .word CAN_NODE_0
 2872 00bc 00000000 	 .word CAN_state_Ultrasonic
 2873 00c0 00000000 	 .word distance_C
 2874 00c4 00000000 	 .word distance_L
 2875 00c8 00000000 	 .word distance_R
 2876              	 .cfi_endproc
 2877              	.LFE226:
 2879              	 .section .text.IRQ3_Handler,"ax",%progbits
 2880              	 .align 2
 2881              	 .global IRQ3_Handler
 2882              	 .code 16
 2883              	 .thumb_func
 2885              	IRQ3_Handler:
 2886              	.LFB227:
 402:../main.c     **** 
 403:../main.c     **** void CAN_RX_INVERTER_ISR(void) {
 2887              	 .loc 6 403 0
 2888              	 .cfi_startproc
 2889 0000 80B5     	 push {r7,lr}
 2890              	.LCFI39:
 2891              	 .cfi_def_cfa_offset 8
 2892              	 .cfi_offset 7,-8
 2893              	 .cfi_offset 14,-4
 2894 0002 00AF     	 add r7,sp,#0
 2895              	.LCFI40:
 2896              	 .cfi_def_cfa_register 7
 404:../main.c     **** 	WATCHDOG_Service();
 2897              	 .loc 6 404 0
 2898 0004 FFF7FEFF 	 bl WATCHDOG_Service
 405:../main.c     **** 	DIGITAL_IO_SetOutputLow(&WATCHDOG_LED_BLUE);
 2899              	 .loc 6 405 0
 2900 0008 094B     	 ldr r3,.L130
 2901 000a 181C     	 mov r0,r3
 2902 000c FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 406:../main.c     **** 
 407:../main.c     **** 	CAN_RX_Inverter_count++;
 2903              	 .loc 6 407 0
 2904 0010 084B     	 ldr r3,.L130+4
 2905 0012 1B78     	 ldrb r3,[r3]
 2906 0014 DBB2     	 uxtb r3,r3
 2907 0016 0133     	 add r3,r3,#1
 2908 0018 DAB2     	 uxtb r2,r3
 2909 001a 064B     	 ldr r3,.L130+4
 2910 001c 1A70     	 strb r2,[r3]
 408:../main.c     **** 	if(CAN_RX_Inverter_count == 4) CAN_RX_Inverter_Read_Data(); // read data after all for have revice
 2911              	 .loc 6 408 0
 2912 001e 054B     	 ldr r3,.L130+4
 2913 0020 1B78     	 ldrb r3,[r3]
 2914 0022 DBB2     	 uxtb r3,r3
 2915 0024 042B     	 cmp r3,#4
 2916 0026 01D1     	 bne .L128
 2917              	 .loc 6 408 0 is_stmt 0 discriminator 1
 2918 0028 FFF7FEFF 	 bl CAN_RX_Inverter_Read_Data
 2919              	.L128:
 409:../main.c     **** }
 2920              	 .loc 6 409 0 is_stmt 1
 2921 002c BD46     	 mov sp,r7
 2922              	 
 2923 002e 80BD     	 pop {r7,pc}
 2924              	.L131:
 2925              	 .align 2
 2926              	.L130:
 2927 0030 00000000 	 .word WATCHDOG_LED_BLUE
 2928 0034 00000000 	 .word CAN_RX_Inverter_count
 2929              	 .cfi_endproc
 2930              	.LFE227:
 2932              	 .global __aeabi_i2f
 2933              	 .section .text.CAN_RX_Inverter_Read_Data,"ax",%progbits
 2934              	 .align 2
 2935              	 .global CAN_RX_Inverter_Read_Data
 2936              	 .code 16
 2937              	 .thumb_func
 2939              	CAN_RX_Inverter_Read_Data:
 2940              	.LFB228:
 410:../main.c     **** 
 411:../main.c     **** void CAN_RX_Inverter_Read_Data(){
 2941              	 .loc 6 411 0
 2942              	 .cfi_startproc
 2943 0000 90B5     	 push {r4,r7,lr}
 2944              	.LCFI41:
 2945              	 .cfi_def_cfa_offset 12
 2946              	 .cfi_offset 4,-12
 2947              	 .cfi_offset 7,-8
 2948              	 .cfi_offset 14,-4
 2949 0002 89B0     	 sub sp,sp,#36
 2950              	.LCFI42:
 2951              	 .cfi_def_cfa_offset 48
 2952 0004 00AF     	 add r7,sp,#0
 2953              	.LCFI43:
 2954              	 .cfi_def_cfa_register 7
 412:../main.c     **** 	uint8_t Motor_on_rover;
 413:../main.c     **** 	for(Motor_on_rover = 0; Motor_on_rover < 4; Motor_on_rover ++){
 2955              	 .loc 6 413 0
 2956 0006 1F23     	 mov r3,#31
 2957 0008 FB18     	 add r3,r7,r3
 2958 000a 0022     	 mov r2,#0
 2959 000c 1A70     	 strb r2,[r3]
 2960 000e 03E1     	 b .L133
 2961              	.L143:
 2962              	.LBB2:
 414:../main.c     **** 		XMC_CAN_MO_t* lmsgobjct_ptr_1 = CAN_NODE_0.lmobj_ptr[Motor_on_rover + 2]->mo_ptr;
 2963              	 .loc 6 414 0
 2964 0010 1F23     	 mov r3,#31
 2965 0012 FB18     	 add r3,r7,r3
 2966 0014 1B78     	 ldrb r3,[r3]
 2967 0016 0233     	 add r3,r3,#2
 2968 0018 944A     	 ldr r2,.L144
 2969 001a 0233     	 add r3,r3,#2
 2970 001c 9B00     	 lsl r3,r3,#2
 2971 001e D318     	 add r3,r2,r3
 2972 0020 5B68     	 ldr r3,[r3,#4]
 2973 0022 1B68     	 ldr r3,[r3]
 2974 0024 BB61     	 str r3,[r7,#24]
 415:../main.c     **** 		CAN_NODE_MO_Receive((void*) CAN_NODE_0.lmobj_ptr[Motor_on_rover + 2]);
 2975              	 .loc 6 415 0
 2976 0026 1F23     	 mov r3,#31
 2977 0028 FB18     	 add r3,r7,r3
 2978 002a 1B78     	 ldrb r3,[r3]
 2979 002c 0233     	 add r3,r3,#2
 2980 002e 8F4A     	 ldr r2,.L144
 2981 0030 0233     	 add r3,r3,#2
 2982 0032 9B00     	 lsl r3,r3,#2
 2983 0034 D318     	 add r3,r2,r3
 2984 0036 5B68     	 ldr r3,[r3,#4]
 2985 0038 181C     	 mov r0,r3
 2986 003a FFF7FEFF 	 bl CAN_NODE_MO_Receive
 416:../main.c     **** 
 417:../main.c     **** 		uint8_t data_RX[8];
 418:../main.c     **** 		uint8_t i;
 419:../main.c     **** 		for(i = 0 ; i < 8 ; i ++){
 2987              	 .loc 6 419 0
 2988 003e 1E23     	 mov r3,#30
 2989 0040 FB18     	 add r3,r7,r3
 2990 0042 0022     	 mov r2,#0
 2991 0044 1A70     	 strb r2,[r3]
 2992 0046 12E0     	 b .L134
 2993              	.L135:
 420:../main.c     **** 			 data_RX[i] = lmsgobjct_ptr_1->can_data_byte[i];
 2994              	 .loc 6 420 0 discriminator 3
 2995 0048 1E23     	 mov r3,#30
 2996 004a FB18     	 add r3,r7,r3
 2997 004c 1B78     	 ldrb r3,[r3]
 2998 004e 1E22     	 mov r2,#30
 2999 0050 BA18     	 add r2,r7,r2
 3000 0052 1278     	 ldrb r2,[r2]
 3001 0054 B969     	 ldr r1,[r7,#24]
 3002 0056 8A18     	 add r2,r1,r2
 3003 0058 117C     	 ldrb r1,[r2,#16]
 3004 005a 0C22     	 mov r2,#12
 3005 005c BA18     	 add r2,r7,r2
 3006 005e D154     	 strb r1,[r2,r3]
 419:../main.c     **** 			 data_RX[i] = lmsgobjct_ptr_1->can_data_byte[i];
 3007              	 .loc 6 419 0 discriminator 3
 3008 0060 1E23     	 mov r3,#30
 3009 0062 FB18     	 add r3,r7,r3
 3010 0064 1A78     	 ldrb r2,[r3]
 3011 0066 1E23     	 mov r3,#30
 3012 0068 FB18     	 add r3,r7,r3
 3013 006a 0132     	 add r2,r2,#1
 3014 006c 1A70     	 strb r2,[r3]
 3015              	.L134:
 419:../main.c     **** 			 data_RX[i] = lmsgobjct_ptr_1->can_data_byte[i];
 3016              	 .loc 6 419 0 is_stmt 0 discriminator 1
 3017 006e 1E23     	 mov r3,#30
 3018 0070 FB18     	 add r3,r7,r3
 3019 0072 1B78     	 ldrb r3,[r3]
 3020 0074 072B     	 cmp r3,#7
 3021 0076 E7D9     	 bls .L135
 421:../main.c     **** 		}
 422:../main.c     **** 
 423:../main.c     **** 		uint8_t Motor_on_rover_RX = (data_RX[0 * 2 + 1] << 8) | data_RX[0 * 2];
 3022              	 .loc 6 423 0 is_stmt 1
 3023 0078 0C23     	 mov r3,#12
 3024 007a FB18     	 add r3,r7,r3
 3025 007c 5B78     	 ldrb r3,[r3,#1]
 3026 007e 1B02     	 lsl r3,r3,#8
 3027 0080 DAB2     	 uxtb r2,r3
 3028 0082 0C23     	 mov r3,#12
 3029 0084 FB18     	 add r3,r7,r3
 3030 0086 1B78     	 ldrb r3,[r3]
 3031 0088 DBB2     	 uxtb r3,r3
 3032 008a 1343     	 orr r3,r2
 3033 008c DAB2     	 uxtb r2,r3
 3034 008e 1723     	 mov r3,#23
 3035 0090 FB18     	 add r3,r7,r3
 3036 0092 1A70     	 strb r2,[r3]
 424:../main.c     **** 		if(Motor_on_rover_RX == Motor_on_rover){
 3037              	 .loc 6 424 0
 3038 0094 1723     	 mov r3,#23
 3039 0096 FA18     	 add r2,r7,r3
 3040 0098 1F23     	 mov r3,#31
 3041 009a FB18     	 add r3,r7,r3
 3042 009c 1278     	 ldrb r2,[r2]
 3043 009e 1B78     	 ldrb r3,[r3]
 3044 00a0 9A42     	 cmp r2,r3
 3045 00a2 00D0     	 beq .LCB2395
 3046 00a4 ADE0     	 b .L136
 3047              	.LCB2395:
 3048              	.LBB3:
 425:../main.c     **** 			DIGITAL_IO_SetOutputLow(&LED_CAN_ERROR);
 3049              	 .loc 6 425 0
 3050 00a6 724B     	 ldr r3,.L144+4
 3051 00a8 181C     	 mov r0,r3
 3052 00aa FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 426:../main.c     **** 
 427:../main.c     **** 			uint8_t i;
 428:../main.c     **** 			int16_t Vaules_int16[3] = {0};
 3053              	 .loc 6 428 0
 3054 00ae 3B1D     	 add r3,r7,#4
 3055 00b0 0022     	 mov r2,#0
 3056 00b2 1A60     	 str r2,[r3]
 3057 00b4 0022     	 mov r2,#0
 3058 00b6 9A80     	 strh r2,[r3,#4]
 429:../main.c     **** 			for(i = 1 ; i < 4 ; i ++){
 3059              	 .loc 6 429 0
 3060 00b8 1D23     	 mov r3,#29
 3061 00ba FB18     	 add r3,r7,r3
 3062 00bc 0122     	 mov r2,#1
 3063 00be 1A70     	 strb r2,[r3]
 3064 00c0 6BE0     	 b .L137
 3065              	.L141:
 430:../main.c     **** 				 if(i == 1) Vaules_int16[i - 1] = (data_RX[i * 2 + 1] << 8) | data_RX[i * 2];
 3066              	 .loc 6 430 0
 3067 00c2 1D23     	 mov r3,#29
 3068 00c4 FB18     	 add r3,r7,r3
 3069 00c6 1B78     	 ldrb r3,[r3]
 3070 00c8 012B     	 cmp r3,#1
 3071 00ca 1CD1     	 bne .L138
 3072              	 .loc 6 430 0 is_stmt 0 discriminator 1
 3073 00cc 1D23     	 mov r3,#29
 3074 00ce FB18     	 add r3,r7,r3
 3075 00d0 1B78     	 ldrb r3,[r3]
 3076 00d2 5A1E     	 sub r2,r3,#1
 3077 00d4 1D23     	 mov r3,#29
 3078 00d6 FB18     	 add r3,r7,r3
 3079 00d8 1B78     	 ldrb r3,[r3]
 3080 00da 5B00     	 lsl r3,r3,#1
 3081 00dc 0133     	 add r3,r3,#1
 3082 00de 0C21     	 mov r1,#12
 3083 00e0 7918     	 add r1,r7,r1
 3084 00e2 CB5C     	 ldrb r3,[r1,r3]
 3085 00e4 1B02     	 lsl r3,r3,#8
 3086 00e6 98B2     	 uxth r0,r3
 3087 00e8 1D23     	 mov r3,#29
 3088 00ea FB18     	 add r3,r7,r3
 3089 00ec 1B78     	 ldrb r3,[r3]
 3090 00ee 5B00     	 lsl r3,r3,#1
 3091 00f0 0C21     	 mov r1,#12
 3092 00f2 7918     	 add r1,r7,r1
 3093 00f4 CB5C     	 ldrb r3,[r1,r3]
 3094 00f6 9BB2     	 uxth r3,r3
 3095 00f8 011C     	 add r1,r0,#0
 3096 00fa 0B43     	 orr r3,r1
 3097 00fc 99B2     	 uxth r1,r3
 3098 00fe 3B1D     	 add r3,r7,#4
 3099 0100 5200     	 lsl r2,r2,#1
 3100 0102 D152     	 strh r1,[r2,r3]
 3101 0104 42E0     	 b .L139
 3102              	.L138:
 431:../main.c     **** 				 else if(i == 2) Vaules_int16[i - 1] = (data_RX[i * 2 + 1] << 8) | data_RX[i * 2];
 3103              	 .loc 6 431 0 is_stmt 1
 3104 0106 1D23     	 mov r3,#29
 3105 0108 FB18     	 add r3,r7,r3
 3106 010a 1B78     	 ldrb r3,[r3]
 3107 010c 022B     	 cmp r3,#2
 3108 010e 1CD1     	 bne .L140
 3109              	 .loc 6 431 0 is_stmt 0 discriminator 1
 3110 0110 1D23     	 mov r3,#29
 3111 0112 FB18     	 add r3,r7,r3
 3112 0114 1B78     	 ldrb r3,[r3]
 3113 0116 5A1E     	 sub r2,r3,#1
 3114 0118 1D23     	 mov r3,#29
 3115 011a FB18     	 add r3,r7,r3
 3116 011c 1B78     	 ldrb r3,[r3]
 3117 011e 5B00     	 lsl r3,r3,#1
 3118 0120 0133     	 add r3,r3,#1
 3119 0122 0C21     	 mov r1,#12
 3120 0124 7918     	 add r1,r7,r1
 3121 0126 CB5C     	 ldrb r3,[r1,r3]
 3122 0128 1B02     	 lsl r3,r3,#8
 3123 012a 98B2     	 uxth r0,r3
 3124 012c 1D23     	 mov r3,#29
 3125 012e FB18     	 add r3,r7,r3
 3126 0130 1B78     	 ldrb r3,[r3]
 3127 0132 5B00     	 lsl r3,r3,#1
 3128 0134 0C21     	 mov r1,#12
 3129 0136 7918     	 add r1,r7,r1
 3130 0138 CB5C     	 ldrb r3,[r1,r3]
 3131 013a 9BB2     	 uxth r3,r3
 3132 013c 011C     	 add r1,r0,#0
 3133 013e 0B43     	 orr r3,r1
 3134 0140 99B2     	 uxth r1,r3
 3135 0142 3B1D     	 add r3,r7,#4
 3136 0144 5200     	 lsl r2,r2,#1
 3137 0146 D152     	 strh r1,[r2,r3]
 3138 0148 20E0     	 b .L139
 3139              	.L140:
 432:../main.c     **** 				 else if(i == 3) Vaules_int16[i - 1] = (data_RX[i * 2 + 1] << 8) | data_RX[i * 2];
 3140              	 .loc 6 432 0 is_stmt 1
 3141 014a 1D23     	 mov r3,#29
 3142 014c FB18     	 add r3,r7,r3
 3143 014e 1B78     	 ldrb r3,[r3]
 3144 0150 032B     	 cmp r3,#3
 3145 0152 1BD1     	 bne .L139
 3146              	 .loc 6 432 0 is_stmt 0 discriminator 1
 3147 0154 1D23     	 mov r3,#29
 3148 0156 FB18     	 add r3,r7,r3
 3149 0158 1B78     	 ldrb r3,[r3]
 3150 015a 5A1E     	 sub r2,r3,#1
 3151 015c 1D23     	 mov r3,#29
 3152 015e FB18     	 add r3,r7,r3
 3153 0160 1B78     	 ldrb r3,[r3]
 3154 0162 5B00     	 lsl r3,r3,#1
 3155 0164 0133     	 add r3,r3,#1
 3156 0166 0C21     	 mov r1,#12
 3157 0168 7918     	 add r1,r7,r1
 3158 016a CB5C     	 ldrb r3,[r1,r3]
 3159 016c 1B02     	 lsl r3,r3,#8
 3160 016e 98B2     	 uxth r0,r3
 3161 0170 1D23     	 mov r3,#29
 3162 0172 FB18     	 add r3,r7,r3
 3163 0174 1B78     	 ldrb r3,[r3]
 3164 0176 5B00     	 lsl r3,r3,#1
 3165 0178 0C21     	 mov r1,#12
 3166 017a 7918     	 add r1,r7,r1
 3167 017c CB5C     	 ldrb r3,[r1,r3]
 3168 017e 9BB2     	 uxth r3,r3
 3169 0180 011C     	 add r1,r0,#0
 3170 0182 0B43     	 orr r3,r1
 3171 0184 99B2     	 uxth r1,r3
 3172 0186 3B1D     	 add r3,r7,#4
 3173 0188 5200     	 lsl r2,r2,#1
 3174 018a D152     	 strh r1,[r2,r3]
 3175              	.L139:
 429:../main.c     **** 				 if(i == 1) Vaules_int16[i - 1] = (data_RX[i * 2 + 1] << 8) | data_RX[i * 2];
 3176              	 .loc 6 429 0 is_stmt 1 discriminator 2
 3177 018c 1D23     	 mov r3,#29
 3178 018e FB18     	 add r3,r7,r3
 3179 0190 1A78     	 ldrb r2,[r3]
 3180 0192 1D23     	 mov r3,#29
 3181 0194 FB18     	 add r3,r7,r3
 3182 0196 0132     	 add r2,r2,#1
 3183 0198 1A70     	 strb r2,[r3]
 3184              	.L137:
 429:../main.c     **** 				 if(i == 1) Vaules_int16[i - 1] = (data_RX[i * 2 + 1] << 8) | data_RX[i * 2];
 3185              	 .loc 6 429 0 is_stmt 0 discriminator 1
 3186 019a 1D23     	 mov r3,#29
 3187 019c FB18     	 add r3,r7,r3
 3188 019e 1B78     	 ldrb r3,[r3]
 3189 01a0 032B     	 cmp r3,#3
 3190 01a2 8ED9     	 bls .L141
 433:../main.c     **** 			 }
 434:../main.c     **** 
 435:../main.c     **** 			Inveter_CAN_OK[Motor_on_rover] = Vaules_int16[0];
 3191              	 .loc 6 435 0 is_stmt 1
 3192 01a4 1F23     	 mov r3,#31
 3193 01a6 FB18     	 add r3,r7,r3
 3194 01a8 1B78     	 ldrb r3,[r3]
 3195 01aa 3A1D     	 add r2,r7,#4
 3196 01ac 1288     	 ldrh r2,[r2]
 3197 01ae D1B2     	 uxtb r1,r2
 3198 01b0 304A     	 ldr r2,.L144+8
 3199 01b2 D154     	 strb r1,[r2,r3]
 436:../main.c     **** 			Actual_Speeds[Motor_on_rover] = (float)Vaules_int16[1] / 1000;
 3200              	 .loc 6 436 0
 3201 01b4 1F23     	 mov r3,#31
 3202 01b6 FB18     	 add r3,r7,r3
 3203 01b8 1C78     	 ldrb r4,[r3]
 3204 01ba 3B1D     	 add r3,r7,#4
 3205 01bc 5B88     	 ldrh r3,[r3,#2]
 3206 01be 1BB2     	 sxth r3,r3
 3207 01c0 181C     	 mov r0,r3
 3208 01c2 FFF7FEFF 	 bl __aeabi_i2f
 3209 01c6 031C     	 add r3,r0,#0
 3210 01c8 181C     	 add r0,r3,#0
 3211 01ca 2B49     	 ldr r1,.L144+12
 3212 01cc FFF7FEFF 	 bl __aeabi_fdiv
 3213 01d0 031C     	 add r3,r0,#0
 3214 01d2 191C     	 add r1,r3,#0
 3215 01d4 294B     	 ldr r3,.L144+16
 3216 01d6 A200     	 lsl r2,r4,#2
 3217 01d8 D150     	 str r1,[r2,r3]
 437:../main.c     **** 			Actual_Distance[Motor_on_rover] = (float)Vaules_int16[2] / 1000;
 3218              	 .loc 6 437 0
 3219 01da 1F23     	 mov r3,#31
 3220 01dc FB18     	 add r3,r7,r3
 3221 01de 1C78     	 ldrb r4,[r3]
 3222 01e0 3B1D     	 add r3,r7,#4
 3223 01e2 9B88     	 ldrh r3,[r3,#4]
 3224 01e4 1BB2     	 sxth r3,r3
 3225 01e6 181C     	 mov r0,r3
 3226 01e8 FFF7FEFF 	 bl __aeabi_i2f
 3227 01ec 031C     	 add r3,r0,#0
 3228 01ee 181C     	 add r0,r3,#0
 3229 01f0 2149     	 ldr r1,.L144+12
 3230 01f2 FFF7FEFF 	 bl __aeabi_fdiv
 3231 01f6 031C     	 add r3,r0,#0
 3232 01f8 191C     	 add r1,r3,#0
 3233 01fa 214B     	 ldr r3,.L144+20
 3234 01fc A200     	 lsl r2,r4,#2
 3235 01fe D150     	 str r1,[r2,r3]
 3236              	.LBE3:
 3237 0200 03E0     	 b .L142
 3238              	.L136:
 438:../main.c     **** 
 439:../main.c     **** 
 440:../main.c     **** 			}
 441:../main.c     **** 		else DIGITAL_IO_SetOutputHigh(&LED_CAN_ERROR);
 3239              	 .loc 6 441 0
 3240 0202 1B4B     	 ldr r3,.L144+4
 3241 0204 181C     	 mov r0,r3
 3242 0206 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 3243              	.L142:
 3244              	.LBE2:
 413:../main.c     **** 		XMC_CAN_MO_t* lmsgobjct_ptr_1 = CAN_NODE_0.lmobj_ptr[Motor_on_rover + 2]->mo_ptr;
 3245              	 .loc 6 413 0 discriminator 1
 3246 020a 1F23     	 mov r3,#31
 3247 020c FB18     	 add r3,r7,r3
 3248 020e 1A78     	 ldrb r2,[r3]
 3249 0210 1F23     	 mov r3,#31
 3250 0212 FB18     	 add r3,r7,r3
 3251 0214 0132     	 add r2,r2,#1
 3252 0216 1A70     	 strb r2,[r3]
 3253              	.L133:
 413:../main.c     **** 		XMC_CAN_MO_t* lmsgobjct_ptr_1 = CAN_NODE_0.lmobj_ptr[Motor_on_rover + 2]->mo_ptr;
 3254              	 .loc 6 413 0 is_stmt 0 discriminator 2
 3255 0218 1F23     	 mov r3,#31
 3256 021a FB18     	 add r3,r7,r3
 3257 021c 1B78     	 ldrb r3,[r3]
 3258 021e 032B     	 cmp r3,#3
 3259 0220 00D8     	 bhi .LCB2602
 3260 0222 F5E6     	 b .L143
 3261              	.LCB2602:
 442:../main.c     **** 	}
 443:../main.c     **** 
 444:../main.c     **** 	speed_fl_act = Actual_Speeds[0];
 3262              	 .loc 6 444 0 is_stmt 1
 3263 0224 154B     	 ldr r3,.L144+16
 3264 0226 1A68     	 ldr r2,[r3]
 3265 0228 164B     	 ldr r3,.L144+24
 3266 022a 1A60     	 str r2,[r3]
 445:../main.c     **** 	speed_fr_act = Actual_Speeds[1];
 3267              	 .loc 6 445 0
 3268 022c 134B     	 ldr r3,.L144+16
 3269 022e 5A68     	 ldr r2,[r3,#4]
 3270 0230 154B     	 ldr r3,.L144+28
 3271 0232 1A60     	 str r2,[r3]
 446:../main.c     **** 	speed_rl_act = Actual_Speeds[2];
 3272              	 .loc 6 446 0
 3273 0234 114B     	 ldr r3,.L144+16
 3274 0236 9A68     	 ldr r2,[r3,#8]
 3275 0238 144B     	 ldr r3,.L144+32
 3276 023a 1A60     	 str r2,[r3]
 447:../main.c     **** 	speed_rr_act = Actual_Speeds[3];
 3277              	 .loc 6 447 0
 3278 023c 0F4B     	 ldr r3,.L144+16
 3279 023e DA68     	 ldr r2,[r3,#12]
 3280 0240 134B     	 ldr r3,.L144+36
 3281 0242 1A60     	 str r2,[r3]
 448:../main.c     **** 
 449:../main.c     **** 	distance_fl_act = Actual_Distance[0];
 3282              	 .loc 6 449 0
 3283 0244 0E4B     	 ldr r3,.L144+20
 3284 0246 1A68     	 ldr r2,[r3]
 3285 0248 124B     	 ldr r3,.L144+40
 3286 024a 1A60     	 str r2,[r3]
 450:../main.c     **** 	distance_fr_act = Actual_Distance[1];
 3287              	 .loc 6 450 0
 3288 024c 0C4B     	 ldr r3,.L144+20
 3289 024e 5A68     	 ldr r2,[r3,#4]
 3290 0250 114B     	 ldr r3,.L144+44
 3291 0252 1A60     	 str r2,[r3]
 451:../main.c     **** 	distance_rl_act = Actual_Distance[2];
 3292              	 .loc 6 451 0
 3293 0254 0A4B     	 ldr r3,.L144+20
 3294 0256 9A68     	 ldr r2,[r3,#8]
 3295 0258 104B     	 ldr r3,.L144+48
 3296 025a 1A60     	 str r2,[r3]
 452:../main.c     **** 	distance_rr_act = Actual_Distance[3];
 3297              	 .loc 6 452 0
 3298 025c 084B     	 ldr r3,.L144+20
 3299 025e DA68     	 ldr r2,[r3,#12]
 3300 0260 0F4B     	 ldr r3,.L144+52
 3301 0262 1A60     	 str r2,[r3]
 453:../main.c     **** 
 454:../main.c     **** }
 3302              	 .loc 6 454 0
 3303 0264 BD46     	 mov sp,r7
 3304 0266 09B0     	 add sp,sp,#36
 3305              	 
 3306 0268 90BD     	 pop {r4,r7,pc}
 3307              	.L145:
 3308 026a C046     	 .align 2
 3309              	.L144:
 3310 026c 00000000 	 .word CAN_NODE_0
 3311 0270 00000000 	 .word LED_CAN_ERROR
 3312 0274 00000000 	 .word Inveter_CAN_OK
 3313 0278 00007A44 	 .word 1148846080
 3314 027c 00000000 	 .word Actual_Speeds
 3315 0280 00000000 	 .word Actual_Distance
 3316 0284 00000000 	 .word speed_fl_act
 3317 0288 00000000 	 .word speed_fr_act
 3318 028c 00000000 	 .word speed_rl_act
 3319 0290 00000000 	 .word speed_rr_act
 3320 0294 00000000 	 .word distance_fl_act
 3321 0298 00000000 	 .word distance_fr_act
 3322 029c 00000000 	 .word distance_rl_act
 3323 02a0 00000000 	 .word distance_rr_act
 3324              	 .cfi_endproc
 3325              	.LFE228:
 3327              	 .section .text.Watchdog_Handler,"ax",%progbits
 3328              	 .align 2
 3329              	 .global Watchdog_Handler
 3330              	 .code 16
 3331              	 .thumb_func
 3333              	Watchdog_Handler:
 3334              	.LFB229:
 455:../main.c     **** 
 456:../main.c     **** void Watchdog_Handler(void) // to do restates if can is not working a problem wenn power from the b
 457:../main.c     **** {
 3335              	 .loc 6 457 0
 3336              	 .cfi_startproc
 3337 0000 80B5     	 push {r7,lr}
 3338              	.LCFI44:
 3339              	 .cfi_def_cfa_offset 8
 3340              	 .cfi_offset 7,-8
 3341              	 .cfi_offset 14,-4
 3342 0002 00AF     	 add r7,sp,#0
 3343              	.LCFI45:
 3344              	 .cfi_def_cfa_register 7
 458:../main.c     ****   WATCHDOG_ClearAlarm(); /* Clear the alarm event */
 3345              	 .loc 6 458 0
 3346 0004 FFF7FEFF 	 bl WATCHDOG_ClearAlarm
 459:../main.c     ****   DIGITAL_IO_SetOutputHigh(&WATCHDOG_LED_BLUE);
 3347              	 .loc 6 459 0
 3348 0008 024B     	 ldr r3,.L147
 3349 000a 181C     	 mov r0,r3
 3350 000c FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 460:../main.c     **** }
 3351              	 .loc 6 460 0
 3352 0010 BD46     	 mov sp,r7
 3353              	 
 3354 0012 80BD     	 pop {r7,pc}
 3355              	.L148:
 3356              	 .align 2
 3357              	.L147:
 3358 0014 00000000 	 .word WATCHDOG_LED_BLUE
 3359              	 .cfi_endproc
 3360              	.LFE229:
 3362              	 .section .text.CAN_reset_distance,"ax",%progbits
 3363              	 .align 2
 3364              	 .global CAN_reset_distance
 3365              	 .code 16
 3366              	 .thumb_func
 3368              	CAN_reset_distance:
 3369              	.LFB230:
 461:../main.c     **** 
 462:../main.c     **** void CAN_reset_distance(uint8_t distance_to_reset[4]){
 3370              	 .loc 6 462 0
 3371              	 .cfi_startproc
 3372 0000 80B5     	 push {r7,lr}
 3373              	.LCFI46:
 3374              	 .cfi_def_cfa_offset 8
 3375              	 .cfi_offset 7,-8
 3376              	 .cfi_offset 14,-4
 3377 0002 86B0     	 sub sp,sp,#24
 3378              	.LCFI47:
 3379              	 .cfi_def_cfa_offset 32
 3380 0004 00AF     	 add r7,sp,#0
 3381              	.LCFI48:
 3382              	 .cfi_def_cfa_register 7
 3383 0006 7860     	 str r0,[r7,#4]
 463:../main.c     **** 	uint8_t TX[8] ={0};
 3384              	 .loc 6 463 0
 3385 0008 0C23     	 mov r3,#12
 3386 000a FB18     	 add r3,r7,r3
 3387 000c 0022     	 mov r2,#0
 3388 000e 1A60     	 str r2,[r3]
 3389 0010 0022     	 mov r2,#0
 3390 0012 5A60     	 str r2,[r3,#4]
 464:../main.c     **** 	uint8_t i;
 465:../main.c     **** 	for(i = 0; i < 4; i++){	TX[i] = distance_to_reset[i];}
 3391              	 .loc 6 465 0
 3392 0014 1723     	 mov r3,#23
 3393 0016 FB18     	 add r3,r7,r3
 3394 0018 0022     	 mov r2,#0
 3395 001a 1A70     	 strb r2,[r3]
 3396 001c 12E0     	 b .L150
 3397              	.L151:
 3398              	 .loc 6 465 0 is_stmt 0 discriminator 3
 3399 001e 1723     	 mov r3,#23
 3400 0020 FB18     	 add r3,r7,r3
 3401 0022 1B78     	 ldrb r3,[r3]
 3402 0024 1722     	 mov r2,#23
 3403 0026 BA18     	 add r2,r7,r2
 3404 0028 1278     	 ldrb r2,[r2]
 3405 002a 7968     	 ldr r1,[r7,#4]
 3406 002c 8A18     	 add r2,r1,r2
 3407 002e 1178     	 ldrb r1,[r2]
 3408 0030 0C22     	 mov r2,#12
 3409 0032 BA18     	 add r2,r7,r2
 3410 0034 D154     	 strb r1,[r2,r3]
 3411 0036 1723     	 mov r3,#23
 3412 0038 FB18     	 add r3,r7,r3
 3413 003a 1A78     	 ldrb r2,[r3]
 3414 003c 1723     	 mov r3,#23
 3415 003e FB18     	 add r3,r7,r3
 3416 0040 0132     	 add r2,r2,#1
 3417 0042 1A70     	 strb r2,[r3]
 3418              	.L150:
 3419              	 .loc 6 465 0 discriminator 1
 3420 0044 1723     	 mov r3,#23
 3421 0046 FB18     	 add r3,r7,r3
 3422 0048 1B78     	 ldrb r3,[r3]
 3423 004a 032B     	 cmp r3,#3
 3424 004c E7D9     	 bls .L151
 466:../main.c     **** 
 467:../main.c     **** 	CAN_NODE_MO_UpdateData((void*) CAN_NODE_0.lmobj_ptr[1], (uint8_t*)TX);
 3425              	 .loc 6 467 0 is_stmt 1
 3426 004e 084B     	 ldr r3,.L152
 3427 0050 1A69     	 ldr r2,[r3,#16]
 3428 0052 0C23     	 mov r3,#12
 3429 0054 FB18     	 add r3,r7,r3
 3430 0056 101C     	 mov r0,r2
 3431 0058 191C     	 mov r1,r3
 3432 005a FFF7FEFF 	 bl CAN_NODE_MO_UpdateData
 468:../main.c     **** 	CAN_NODE_MO_Transmit((void*) CAN_NODE_0.lmobj_ptr[1]); //Transmit the data of message object1
 3433              	 .loc 6 468 0
 3434 005e 044B     	 ldr r3,.L152
 3435 0060 1B69     	 ldr r3,[r3,#16]
 3436 0062 181C     	 mov r0,r3
 3437 0064 FFF7FEFF 	 bl CAN_NODE_MO_Transmit
 469:../main.c     **** }
 3438              	 .loc 6 469 0
 3439 0068 BD46     	 mov sp,r7
 3440 006a 06B0     	 add sp,sp,#24
 3441              	 
 3442 006c 80BD     	 pop {r7,pc}
 3443              	.L153:
 3444 006e C046     	 .align 2
 3445              	.L152:
 3446 0070 00000000 	 .word CAN_NODE_0
 3447              	 .cfi_endproc
 3448              	.LFE230:
 3450              	 .global __aeabi_f2iz
 3451              	 .section .text.CAN_send_Speeds,"ax",%progbits
 3452              	 .align 2
 3453              	 .global CAN_send_Speeds
 3454              	 .code 16
 3455              	 .thumb_func
 3457              	CAN_send_Speeds:
 3458              	.LFB231:
 470:../main.c     **** 
 471:../main.c     **** void CAN_send_Speeds(float Speed_data[4]){
 3459              	 .loc 6 471 0
 3460              	 .cfi_startproc
 3461 0000 80B5     	 push {r7,lr}
 3462              	.LCFI49:
 3463              	 .cfi_def_cfa_offset 8
 3464              	 .cfi_offset 7,-8
 3465              	 .cfi_offset 14,-4
 3466 0002 84B0     	 sub sp,sp,#16
 3467              	.LCFI50:
 3468              	 .cfi_def_cfa_offset 24
 3469 0004 00AF     	 add r7,sp,#0
 3470              	.LCFI51:
 3471              	 .cfi_def_cfa_register 7
 3472 0006 7860     	 str r0,[r7,#4]
 472:../main.c     **** 
 473:../main.c     **** 	int16_t Speeds_int16[4] ={Speed_data[0] *1000, Speed_data[1] *1000, Speed_data[2] *1000, Speed_dat
 3473              	 .loc 6 473 0
 3474 0008 7B68     	 ldr r3,[r7,#4]
 3475 000a 1B68     	 ldr r3,[r3]
 3476 000c 181C     	 add r0,r3,#0
 3477 000e 2649     	 ldr r1,.L155
 3478 0010 FFF7FEFF 	 bl __aeabi_fmul
 3479 0014 031C     	 add r3,r0,#0
 3480 0016 181C     	 add r0,r3,#0
 3481 0018 FFF7FEFF 	 bl __aeabi_f2iz
 3482 001c 031C     	 mov r3,r0
 3483 001e 9AB2     	 uxth r2,r3
 3484 0020 0823     	 mov r3,#8
 3485 0022 FB18     	 add r3,r7,r3
 3486 0024 1A80     	 strh r2,[r3]
 3487 0026 7B68     	 ldr r3,[r7,#4]
 3488 0028 0433     	 add r3,r3,#4
 3489 002a 1B68     	 ldr r3,[r3]
 3490 002c 181C     	 add r0,r3,#0
 3491 002e 1E49     	 ldr r1,.L155
 3492 0030 FFF7FEFF 	 bl __aeabi_fmul
 3493 0034 031C     	 add r3,r0,#0
 3494 0036 181C     	 add r0,r3,#0
 3495 0038 FFF7FEFF 	 bl __aeabi_f2iz
 3496 003c 031C     	 mov r3,r0
 3497 003e 9AB2     	 uxth r2,r3
 3498 0040 0823     	 mov r3,#8
 3499 0042 FB18     	 add r3,r7,r3
 3500 0044 5A80     	 strh r2,[r3,#2]
 3501 0046 7B68     	 ldr r3,[r7,#4]
 3502 0048 0833     	 add r3,r3,#8
 3503 004a 1B68     	 ldr r3,[r3]
 3504 004c 181C     	 add r0,r3,#0
 3505 004e 1649     	 ldr r1,.L155
 3506 0050 FFF7FEFF 	 bl __aeabi_fmul
 3507 0054 031C     	 add r3,r0,#0
 3508 0056 181C     	 add r0,r3,#0
 3509 0058 FFF7FEFF 	 bl __aeabi_f2iz
 3510 005c 031C     	 mov r3,r0
 3511 005e 9AB2     	 uxth r2,r3
 3512 0060 0823     	 mov r3,#8
 3513 0062 FB18     	 add r3,r7,r3
 3514 0064 9A80     	 strh r2,[r3,#4]
 3515 0066 7B68     	 ldr r3,[r7,#4]
 3516 0068 0C33     	 add r3,r3,#12
 3517 006a 1B68     	 ldr r3,[r3]
 3518 006c 181C     	 add r0,r3,#0
 3519 006e 0E49     	 ldr r1,.L155
 3520 0070 FFF7FEFF 	 bl __aeabi_fmul
 3521 0074 031C     	 add r3,r0,#0
 3522 0076 181C     	 add r0,r3,#0
 3523 0078 FFF7FEFF 	 bl __aeabi_f2iz
 3524 007c 031C     	 mov r3,r0
 3525 007e 9AB2     	 uxth r2,r3
 3526 0080 0823     	 mov r3,#8
 3527 0082 FB18     	 add r3,r7,r3
 3528 0084 DA80     	 strh r2,[r3,#6]
 474:../main.c     **** 
 475:../main.c     **** 	CAN_NODE_MO_UpdateData((void*) CAN_NODE_0.lmobj_ptr[0], (uint8_t*)Speeds_int16);
 3529              	 .loc 6 475 0
 3530 0086 094B     	 ldr r3,.L155+4
 3531 0088 DA68     	 ldr r2,[r3,#12]
 3532 008a 0823     	 mov r3,#8
 3533 008c FB18     	 add r3,r7,r3
 3534 008e 101C     	 mov r0,r2
 3535 0090 191C     	 mov r1,r3
 3536 0092 FFF7FEFF 	 bl CAN_NODE_MO_UpdateData
 476:../main.c     **** 	CAN_NODE_MO_Transmit((void*) CAN_NODE_0.lmobj_ptr[0]); //Transmit the data of message object1
 3537              	 .loc 6 476 0
 3538 0096 054B     	 ldr r3,.L155+4
 3539 0098 DB68     	 ldr r3,[r3,#12]
 3540 009a 181C     	 mov r0,r3
 3541 009c FFF7FEFF 	 bl CAN_NODE_MO_Transmit
 477:../main.c     **** 
 478:../main.c     **** }
 3542              	 .loc 6 478 0
 3543 00a0 BD46     	 mov sp,r7
 3544 00a2 04B0     	 add sp,sp,#16
 3545              	 
 3546 00a4 80BD     	 pop {r7,pc}
 3547              	.L156:
 3548 00a6 C046     	 .align 2
 3549              	.L155:
 3550 00a8 00007A44 	 .word 1148846080
 3551 00ac 00000000 	 .word CAN_NODE_0
 3552              	 .cfi_endproc
 3553              	.LFE231:
 3555              	 .section .text.IRQ8_Handler,"ax",%progbits
 3556              	 .align 2
 3557              	 .global IRQ8_Handler
 3558              	 .code 16
 3559              	 .thumb_func
 3561              	IRQ8_Handler:
 3562              	.LFB232:
 479:../main.c     **** 
 480:../main.c     **** 
 481:../main.c     **** void INTERRUPT_TIMER_10us_ISR(void){ // every 1ms so 10kHz
 3563              	 .loc 6 481 0
 3564              	 .cfi_startproc
 3565 0000 80B5     	 push {r7,lr}
 3566              	.LCFI52:
 3567              	 .cfi_def_cfa_offset 8
 3568              	 .cfi_offset 7,-8
 3569              	 .cfi_offset 14,-4
 3570 0002 00AF     	 add r7,sp,#0
 3571              	.LCFI53:
 3572              	 .cfi_def_cfa_register 7
 482:../main.c     **** 	if(RC_Gear_state == 1)RC_gear_100us_counter ++;
 3573              	 .loc 6 482 0
 3574 0004 094B     	 ldr r3,.L160
 3575 0006 1B78     	 ldrb r3,[r3]
 3576 0008 012B     	 cmp r3,#1
 3577 000a 04D1     	 bne .L158
 3578              	 .loc 6 482 0 is_stmt 0 discriminator 1
 3579 000c 084B     	 ldr r3,.L160+4
 3580 000e 1B68     	 ldr r3,[r3]
 3581 0010 5A1C     	 add r2,r3,#1
 3582 0012 074B     	 ldr r3,.L160+4
 3583 0014 1A60     	 str r2,[r3]
 3584              	.L158:
 483:../main.c     **** 	if(RC_AUX1_state == 1)RC_AUX1_100us_counter ++;
 3585              	 .loc 6 483 0 is_stmt 1
 3586 0016 074B     	 ldr r3,.L160+8
 3587 0018 1B78     	 ldrb r3,[r3]
 3588 001a 012B     	 cmp r3,#1
 3589 001c 04D1     	 bne .L157
 3590              	 .loc 6 483 0 is_stmt 0 discriminator 1
 3591 001e 064B     	 ldr r3,.L160+12
 3592 0020 1B68     	 ldr r3,[r3]
 3593 0022 5A1C     	 add r2,r3,#1
 3594 0024 044B     	 ldr r3,.L160+12
 3595 0026 1A60     	 str r2,[r3]
 3596              	.L157:
 484:../main.c     **** }
 3597              	 .loc 6 484 0 is_stmt 1
 3598 0028 BD46     	 mov sp,r7
 3599              	 
 3600 002a 80BD     	 pop {r7,pc}
 3601              	.L161:
 3602              	 .align 2
 3603              	.L160:
 3604 002c 00000000 	 .word RC_Gear_state
 3605 0030 00000000 	 .word RC_gear_100us_counter
 3606 0034 00000000 	 .word RC_AUX1_state
 3607 0038 00000000 	 .word RC_AUX1_100us_counter
 3608              	 .cfi_endproc
 3609              	.LFE232:
 3611              	 .global __aeabi_f2uiz
 3612              	 .section .text.Steering_set_Angles,"ax",%progbits
 3613              	 .align 2
 3614              	 .global Steering_set_Angles
 3615              	 .code 16
 3616              	 .thumb_func
 3618              	Steering_set_Angles:
 3619              	.LFB233:
 485:../main.c     **** 
 486:../main.c     **** void Steering_set_Angles(float Angles_data[4]){
 3620              	 .loc 6 486 0
 3621              	 .cfi_startproc
 3622 0000 90B5     	 push {r4,r7,lr}
 3623              	.LCFI54:
 3624              	 .cfi_def_cfa_offset 12
 3625              	 .cfi_offset 4,-12
 3626              	 .cfi_offset 7,-8
 3627              	 .cfi_offset 14,-4
 3628 0002 85B0     	 sub sp,sp,#20
 3629              	.LCFI55:
 3630              	 .cfi_def_cfa_offset 32
 3631 0004 00AF     	 add r7,sp,#0
 3632              	.LCFI56:
 3633              	 .cfi_def_cfa_register 7
 3634 0006 7860     	 str r0,[r7,#4]
 487:../main.c     **** 	float deg_PWM = 0.645; // deg to PWM singlan converstion factor
 3635              	 .loc 6 487 0
 3636 0008 3E4B     	 ldr r3,.L173
 3637 000a BB60     	 str r3,[r7,#8]
 488:../main.c     **** 
 489:../main.c     **** 	// calcuation of PWM for angel on each wheel
 490:../main.c     **** 	int i;
 491:../main.c     **** 	for(i = 0 ; i < 4 ; i ++){
 3638              	 .loc 6 491 0
 3639 000c 0023     	 mov r3,#0
 3640 000e FB60     	 str r3,[r7,#12]
 3641 0010 1FE0     	 b .L163
 3642              	.L164:
 492:../main.c     **** 		Servo_PWMs[i] = Angles_data[i]*deg_PWM + NP[i];
 3643              	 .loc 6 492 0 discriminator 3
 3644 0012 FB68     	 ldr r3,[r7,#12]
 3645 0014 9B00     	 lsl r3,r3,#2
 3646 0016 7A68     	 ldr r2,[r7,#4]
 3647 0018 D318     	 add r3,r2,r3
 3648 001a 1B68     	 ldr r3,[r3]
 3649 001c 181C     	 add r0,r3,#0
 3650 001e B968     	 ldr r1,[r7,#8]
 3651 0020 FFF7FEFF 	 bl __aeabi_fmul
 3652 0024 031C     	 add r3,r0,#0
 3653 0026 1C1C     	 add r4,r3,#0
 3654 0028 374B     	 ldr r3,.L173+4
 3655 002a FA68     	 ldr r2,[r7,#12]
 3656 002c 9200     	 lsl r2,r2,#2
 3657 002e D358     	 ldr r3,[r2,r3]
 3658 0030 181C     	 mov r0,r3
 3659 0032 FFF7FEFF 	 bl __aeabi_i2f
 3660 0036 031C     	 add r3,r0,#0
 3661 0038 201C     	 add r0,r4,#0
 3662 003a 191C     	 add r1,r3,#0
 3663 003c FFF7FEFF 	 bl __aeabi_fadd
 3664 0040 031C     	 add r3,r0,#0
 3665 0042 191C     	 add r1,r3,#0
 3666 0044 314B     	 ldr r3,.L173+8
 3667 0046 FA68     	 ldr r2,[r7,#12]
 3668 0048 9200     	 lsl r2,r2,#2
 3669 004a D150     	 str r1,[r2,r3]
 491:../main.c     **** 		Servo_PWMs[i] = Angles_data[i]*deg_PWM + NP[i];
 3670              	 .loc 6 491 0 discriminator 3
 3671 004c FB68     	 ldr r3,[r7,#12]
 3672 004e 0133     	 add r3,r3,#1
 3673 0050 FB60     	 str r3,[r7,#12]
 3674              	.L163:
 491:../main.c     **** 		Servo_PWMs[i] = Angles_data[i]*deg_PWM + NP[i];
 3675              	 .loc 6 491 0 is_stmt 0 discriminator 1
 3676 0052 FB68     	 ldr r3,[r7,#12]
 3677 0054 032B     	 cmp r3,#3
 3678 0056 DCDD     	 ble .L164
 493:../main.c     **** 		}
 494:../main.c     **** 
 495:../main.c     **** 	//limitinbg max servor angel to 1.75 rot in each dirction
 496:../main.c     **** 	for(i = 0 ; i < 4 ; i ++){
 3679              	 .loc 6 496 0 is_stmt 1
 3680 0058 0023     	 mov r3,#0
 3681 005a FB60     	 str r3,[r7,#12]
 3682 005c 20E0     	 b .L165
 3683              	.L170:
 497:../main.c     **** 		if(Servo_PWMs[i] > 950) { Servo_PWMs[i] = 950;}
 3684              	 .loc 6 497 0
 3685 005e 2B4B     	 ldr r3,.L173+8
 3686 0060 FA68     	 ldr r2,[r7,#12]
 3687 0062 9200     	 lsl r2,r2,#2
 3688 0064 D358     	 ldr r3,[r2,r3]
 3689 0066 181C     	 add r0,r3,#0
 3690 0068 2949     	 ldr r1,.L173+12
 3691 006a FFF7FEFF 	 bl __aeabi_fcmpgt
 3692 006e 031E     	 sub r3,r0,#0
 3693 0070 04D0     	 beq .L166
 3694              	 .loc 6 497 0 is_stmt 0 discriminator 1
 3695 0072 264B     	 ldr r3,.L173+8
 3696 0074 FA68     	 ldr r2,[r7,#12]
 3697 0076 9200     	 lsl r2,r2,#2
 3698 0078 2549     	 ldr r1,.L173+12
 3699 007a D150     	 str r1,[r2,r3]
 3700              	.L166:
 498:../main.c     **** 		if(Servo_PWMs[i] < 550) { Servo_PWMs[i] = 550;}
 3701              	 .loc 6 498 0 is_stmt 1
 3702 007c 234B     	 ldr r3,.L173+8
 3703 007e FA68     	 ldr r2,[r7,#12]
 3704 0080 9200     	 lsl r2,r2,#2
 3705 0082 D358     	 ldr r3,[r2,r3]
 3706 0084 181C     	 add r0,r3,#0
 3707 0086 2349     	 ldr r1,.L173+16
 3708 0088 FFF7FEFF 	 bl __aeabi_fcmplt
 3709 008c 031E     	 sub r3,r0,#0
 3710 008e 04D0     	 beq .L168
 3711              	 .loc 6 498 0 is_stmt 0 discriminator 1
 3712 0090 1E4B     	 ldr r3,.L173+8
 3713 0092 FA68     	 ldr r2,[r7,#12]
 3714 0094 9200     	 lsl r2,r2,#2
 3715 0096 1F49     	 ldr r1,.L173+16
 3716 0098 D150     	 str r1,[r2,r3]
 3717              	.L168:
 496:../main.c     **** 		if(Servo_PWMs[i] > 950) { Servo_PWMs[i] = 950;}
 3718              	 .loc 6 496 0 is_stmt 1 discriminator 2
 3719 009a FB68     	 ldr r3,[r7,#12]
 3720 009c 0133     	 add r3,r3,#1
 3721 009e FB60     	 str r3,[r7,#12]
 3722              	.L165:
 496:../main.c     **** 		if(Servo_PWMs[i] > 950) { Servo_PWMs[i] = 950;}
 3723              	 .loc 6 496 0 is_stmt 0 discriminator 1
 3724 00a0 FB68     	 ldr r3,[r7,#12]
 3725 00a2 032B     	 cmp r3,#3
 3726 00a4 DBDD     	 ble .L170
 499:../main.c     **** 	}
 500:../main.c     **** 
 501:../main.c     **** 	//seting PWM vaules
 502:../main.c     **** 	PWM_SetDutyCycle(&PWM_servo_fl,Servo_PWMs[0]);
 3727              	 .loc 6 502 0 is_stmt 1
 3728 00a6 194B     	 ldr r3,.L173+8
 3729 00a8 1B68     	 ldr r3,[r3]
 3730 00aa 181C     	 add r0,r3,#0
 3731 00ac FFF7FEFF 	 bl __aeabi_f2uiz
 3732 00b0 021C     	 mov r2,r0
 3733 00b2 194B     	 ldr r3,.L173+20
 3734 00b4 181C     	 mov r0,r3
 3735 00b6 111C     	 mov r1,r2
 3736 00b8 FFF7FEFF 	 bl PWM_SetDutyCycle
 503:../main.c     **** 	PWM_SetDutyCycle(&PWM_servo_fr,Servo_PWMs[1]);
 3737              	 .loc 6 503 0
 3738 00bc 134B     	 ldr r3,.L173+8
 3739 00be 5B68     	 ldr r3,[r3,#4]
 3740 00c0 181C     	 add r0,r3,#0
 3741 00c2 FFF7FEFF 	 bl __aeabi_f2uiz
 3742 00c6 021C     	 mov r2,r0
 3743 00c8 144B     	 ldr r3,.L173+24
 3744 00ca 181C     	 mov r0,r3
 3745 00cc 111C     	 mov r1,r2
 3746 00ce FFF7FEFF 	 bl PWM_SetDutyCycle
 504:../main.c     **** 	PWM_SetDutyCycle(&PWM_servo_rl,Servo_PWMs[2]);
 3747              	 .loc 6 504 0
 3748 00d2 0E4B     	 ldr r3,.L173+8
 3749 00d4 9B68     	 ldr r3,[r3,#8]
 3750 00d6 181C     	 add r0,r3,#0
 3751 00d8 FFF7FEFF 	 bl __aeabi_f2uiz
 3752 00dc 021C     	 mov r2,r0
 3753 00de 104B     	 ldr r3,.L173+28
 3754 00e0 181C     	 mov r0,r3
 3755 00e2 111C     	 mov r1,r2
 3756 00e4 FFF7FEFF 	 bl PWM_SetDutyCycle
 505:../main.c     **** 	PWM_SetDutyCycle(&PWM_servo_rr,Servo_PWMs[3]);
 3757              	 .loc 6 505 0
 3758 00e8 084B     	 ldr r3,.L173+8
 3759 00ea DB68     	 ldr r3,[r3,#12]
 3760 00ec 181C     	 add r0,r3,#0
 3761 00ee FFF7FEFF 	 bl __aeabi_f2uiz
 3762 00f2 021C     	 mov r2,r0
 3763 00f4 0B4B     	 ldr r3,.L173+32
 3764 00f6 181C     	 mov r0,r3
 3765 00f8 111C     	 mov r1,r2
 3766 00fa FFF7FEFF 	 bl PWM_SetDutyCycle
 506:../main.c     **** 
 507:../main.c     **** }
 3767              	 .loc 6 507 0
 3768 00fe BD46     	 mov sp,r7
 3769 0100 05B0     	 add sp,sp,#20
 3770              	 
 3771 0102 90BD     	 pop {r4,r7,pc}
 3772              	.L174:
 3773              	 .align 2
 3774              	.L173:
 3775 0104 B81E253F 	 .word 1059397304
 3776 0108 00000000 	 .word NP
 3777 010c 00000000 	 .word Servo_PWMs
 3778 0110 00806D44 	 .word 1148026880
 3779 0114 00800944 	 .word 1141473280
 3780 0118 00000000 	 .word PWM_servo_fl
 3781 011c 00000000 	 .word PWM_servo_fr
 3782 0120 00000000 	 .word PWM_servo_rl
 3783 0124 00000000 	 .word PWM_servo_rr
 3784              	 .cfi_endproc
 3785              	.LFE233:
 3787              	 .global __aeabi_ui2d
 3788              	 .section .text.RC_Recive,"ax",%progbits
 3789              	 .align 2
 3790              	 .global RC_Recive
 3791              	 .code 16
 3792              	 .thumb_func
 3794              	RC_Recive:
 3795              	.LFB234:
 508:../main.c     **** 
 509:../main.c     **** void RC_Recive(void){
 3796              	 .loc 6 509 0
 3797              	 .cfi_startproc
 3798 0000 F8B5     	 push {r3,r4,r5,r6,r7,lr}
 3799              	.LCFI57:
 3800              	 .cfi_def_cfa_offset 24
 3801              	 .cfi_offset 3,-24
 3802              	 .cfi_offset 4,-20
 3803              	 .cfi_offset 5,-16
 3804              	 .cfi_offset 6,-12
 3805              	 .cfi_offset 7,-8
 3806              	 .cfi_offset 14,-4
 3807 0002 00AF     	 add r7,sp,#0
 3808              	.LCFI58:
 3809              	 .cfi_def_cfa_register 7
 510:../main.c     **** 
 511:../main.c     **** 	CAPTURE_Start(&CAPTURE_RC_Steering);
 3810              	 .loc 6 511 0
 3811 0004 784B     	 ldr r3,.L195
 3812 0006 181C     	 mov r0,r3
 3813 0008 FFF7FEFF 	 bl CAPTURE_Start
 512:../main.c     **** 	CAPTURE_Start(&CAPTURE_RC_Speed);
 3814              	 .loc 6 512 0
 3815 000c 774B     	 ldr r3,.L195+4
 3816 000e 181C     	 mov r0,r3
 3817 0010 FFF7FEFF 	 bl CAPTURE_Start
 513:../main.c     **** 
 514:../main.c     **** 	CAPTURE_GetCapturedTimeInNanoSec(&CAPTURE_RC_Steering, &captured_time_Steering);
 3818              	 .loc 6 514 0
 3819 0014 744A     	 ldr r2,.L195
 3820 0016 764B     	 ldr r3,.L195+8
 3821 0018 101C     	 mov r0,r2
 3822 001a 191C     	 mov r1,r3
 3823 001c FFF7FEFF 	 bl CAPTURE_GetCapturedTimeInNanoSec
 515:../main.c     **** 	CAPTURE_GetCapturedTimeInNanoSec(&CAPTURE_RC_Speed, &captured_time_Speed);
 3824              	 .loc 6 515 0
 3825 0020 724A     	 ldr r2,.L195+4
 3826 0022 744B     	 ldr r3,.L195+12
 3827 0024 101C     	 mov r0,r2
 3828 0026 191C     	 mov r1,r3
 3829 0028 FFF7FEFF 	 bl CAPTURE_GetCapturedTimeInNanoSec
 516:../main.c     **** 
 517:../main.c     **** 	if(RC_Speed_Stop == 1){
 3830              	 .loc 6 517 0
 3831 002c 724B     	 ldr r3,.L195+16
 3832 002e 1B78     	 ldrb r3,[r3]
 3833 0030 012B     	 cmp r3,#1
 3834 0032 5CD1     	 bne .L176
 518:../main.c     **** 		if((captured_time_Speed >= 1000000) && (captured_time_Speed <= 2000000)){
 3835              	 .loc 6 518 0
 3836 0034 6F4B     	 ldr r3,.L195+12
 3837 0036 1B68     	 ldr r3,[r3]
 3838 0038 704A     	 ldr r2,.L195+20
 3839 003a 9342     	 cmp r3,r2
 3840 003c 50D9     	 bls .L177
 3841              	 .loc 6 518 0 is_stmt 0 discriminator 1
 3842 003e 6D4B     	 ldr r3,.L195+12
 3843 0040 1B68     	 ldr r3,[r3]
 3844 0042 6F4A     	 ldr r2,.L195+24
 3845 0044 9342     	 cmp r3,r2
 3846 0046 4BD8     	 bhi .L177
 519:../main.c     **** 		  RC_Speed = ((double)captured_time_Speed - RC_NP_SPEED) * RC_Speed_ns_to_mps; // form +-0.6m/s
 3847              	 .loc 6 519 0 is_stmt 1
 3848 0048 6A4B     	 ldr r3,.L195+12
 3849 004a 1B68     	 ldr r3,[r3]
 3850 004c 181C     	 mov r0,r3
 3851 004e FFF7FEFF 	 bl __aeabi_ui2d
 3852 0052 031C     	 mov r3,r0
 3853 0054 0C1C     	 mov r4,r1
 3854 0056 181C     	 mov r0,r3
 3855 0058 211C     	 mov r1,r4
 3856 005a 0022     	 mov r2,#0
 3857 005c 694B     	 ldr r3,.L195+28
 3858 005e FFF7FEFF 	 bl __aeabi_dsub
 3859 0062 031C     	 mov r3,r0
 3860 0064 0C1C     	 mov r4,r1
 3861 0066 1D1C     	 mov r5,r3
 3862 0068 261C     	 mov r6,r4
 3863 006a 674B     	 ldr r3,.L195+32
 3864 006c 1B68     	 ldr r3,[r3]
 3865 006e 181C     	 add r0,r3,#0
 3866 0070 FFF7FEFF 	 bl __aeabi_f2d
 3867 0074 031C     	 mov r3,r0
 3868 0076 0C1C     	 mov r4,r1
 3869 0078 281C     	 mov r0,r5
 3870 007a 311C     	 mov r1,r6
 3871 007c 1A1C     	 mov r2,r3
 3872 007e 231C     	 mov r3,r4
 3873 0080 FFF7FEFF 	 bl __aeabi_dmul
 3874 0084 031C     	 mov r3,r0
 3875 0086 0C1C     	 mov r4,r1
 3876 0088 181C     	 mov r0,r3
 3877 008a 211C     	 mov r1,r4
 3878 008c FFF7FEFF 	 bl __aeabi_d2f
 3879 0090 021C     	 add r2,r0,#0
 3880 0092 5E4B     	 ldr r3,.L195+36
 3881 0094 1A60     	 str r2,[r3]
 520:../main.c     **** 		  if((RC_Speed < 0.1) && (RC_Speed > -0.1)) RC_Speed = 0; // to have accutal 0
 3882              	 .loc 6 520 0
 3883 0096 5D4B     	 ldr r3,.L195+36
 3884 0098 1B68     	 ldr r3,[r3]
 3885 009a 181C     	 add r0,r3,#0
 3886 009c FFF7FEFF 	 bl __aeabi_f2d
 3887 00a0 031C     	 mov r3,r0
 3888 00a2 0C1C     	 mov r4,r1
 3889 00a4 181C     	 mov r0,r3
 3890 00a6 211C     	 mov r1,r4
 3891 00a8 594A     	 ldr r2,.L195+40
 3892 00aa 5A4B     	 ldr r3,.L195+44
 3893 00ac FFF7FEFF 	 bl __aeabi_dcmplt
 3894 00b0 031E     	 sub r3,r0,#0
 3895 00b2 11D0     	 beq .L178
 3896              	 .loc 6 520 0 is_stmt 0 discriminator 1
 3897 00b4 554B     	 ldr r3,.L195+36
 3898 00b6 1B68     	 ldr r3,[r3]
 3899 00b8 181C     	 add r0,r3,#0
 3900 00ba FFF7FEFF 	 bl __aeabi_f2d
 3901 00be 031C     	 mov r3,r0
 3902 00c0 0C1C     	 mov r4,r1
 3903 00c2 181C     	 mov r0,r3
 3904 00c4 211C     	 mov r1,r4
 3905 00c6 524A     	 ldr r2,.L195+40
 3906 00c8 534B     	 ldr r3,.L195+48
 3907 00ca FFF7FEFF 	 bl __aeabi_dcmpgt
 3908 00ce 031E     	 sub r3,r0,#0
 3909 00d0 02D0     	 beq .L178
 3910              	 .loc 6 520 0 discriminator 2
 3911 00d2 4E4B     	 ldr r3,.L195+36
 3912 00d4 0022     	 mov r2,#0
 3913 00d6 1A60     	 str r2,[r3]
 3914              	.L178:
 521:../main.c     **** 		  RC_no_Speed_data_counter = 0;
 3915              	 .loc 6 521 0 is_stmt 1
 3916 00d8 504B     	 ldr r3,.L195+52
 3917 00da 0022     	 mov r2,#0
 3918 00dc 1A70     	 strb r2,[r3]
 3919 00de 09E0     	 b .L182
 3920              	.L177:
 522:../main.c     **** 		}
 523:../main.c     **** 		else{
 524:../main.c     **** 			RC_no_Speed_data_counter ++;
 3921              	 .loc 6 524 0
 3922 00e0 4E4B     	 ldr r3,.L195+52
 3923 00e2 1B78     	 ldrb r3,[r3]
 3924 00e4 0133     	 add r3,r3,#1
 3925 00e6 DAB2     	 uxtb r2,r3
 3926 00e8 4C4B     	 ldr r3,.L195+52
 3927 00ea 1A70     	 strb r2,[r3]
 3928 00ec 02E0     	 b .L182
 3929              	.L176:
 525:../main.c     **** 		}
 526:../main.c     **** 	}
 527:../main.c     **** 	else RC_Speed = 0;
 3930              	 .loc 6 527 0
 3931 00ee 474B     	 ldr r3,.L195+36
 3932 00f0 0022     	 mov r2,#0
 3933 00f2 1A60     	 str r2,[r3]
 3934              	.L182:
 528:../main.c     **** 
 529:../main.c     **** 	if((captured_time_Steering >= 1000000) && (captured_time_Steering <= 2000000)){
 3935              	 .loc 6 529 0
 3936 00f4 3E4B     	 ldr r3,.L195+8
 3937 00f6 1B68     	 ldr r3,[r3]
 3938 00f8 404A     	 ldr r2,.L195+20
 3939 00fa 9342     	 cmp r3,r2
 3940 00fc 44D9     	 bls .L183
 3941              	 .loc 6 529 0 is_stmt 0 discriminator 1
 3942 00fe 3C4B     	 ldr r3,.L195+8
 3943 0100 1B68     	 ldr r3,[r3]
 3944 0102 3F4A     	 ldr r2,.L195+24
 3945 0104 9342     	 cmp r3,r2
 3946 0106 3FD8     	 bhi .L183
 530:../main.c     **** 	  RC_Steering = (((double)captured_time_Steering - RC_NP_STEERING) * RC_Steering_ns_to_deg); // fo
 3947              	 .loc 6 530 0 is_stmt 1
 3948 0108 394B     	 ldr r3,.L195+8
 3949 010a 1B68     	 ldr r3,[r3]
 3950 010c 181C     	 mov r0,r3
 3951 010e FFF7FEFF 	 bl __aeabi_ui2d
 3952 0112 031C     	 mov r3,r0
 3953 0114 0C1C     	 mov r4,r1
 3954 0116 181C     	 mov r0,r3
 3955 0118 211C     	 mov r1,r4
 3956 011a 0022     	 mov r2,#0
 3957 011c 404B     	 ldr r3,.L195+56
 3958 011e FFF7FEFF 	 bl __aeabi_dsub
 3959 0122 031C     	 mov r3,r0
 3960 0124 0C1C     	 mov r4,r1
 3961 0126 1D1C     	 mov r5,r3
 3962 0128 261C     	 mov r6,r4
 3963 012a 3E4B     	 ldr r3,.L195+60
 3964 012c 1B68     	 ldr r3,[r3]
 3965 012e 181C     	 add r0,r3,#0
 3966 0130 FFF7FEFF 	 bl __aeabi_f2d
 3967 0134 031C     	 mov r3,r0
 3968 0136 0C1C     	 mov r4,r1
 3969 0138 281C     	 mov r0,r5
 3970 013a 311C     	 mov r1,r6
 3971 013c 1A1C     	 mov r2,r3
 3972 013e 231C     	 mov r3,r4
 3973 0140 FFF7FEFF 	 bl __aeabi_dmul
 3974 0144 031C     	 mov r3,r0
 3975 0146 0C1C     	 mov r4,r1
 3976 0148 181C     	 mov r0,r3
 3977 014a 211C     	 mov r1,r4
 3978 014c FFF7FEFF 	 bl __aeabi_d2f
 3979 0150 021C     	 add r2,r0,#0
 3980 0152 354B     	 ldr r3,.L195+64
 3981 0154 1A60     	 str r2,[r3]
 531:../main.c     **** 	  if((RC_Steering < 2) && (RC_Steering > -2)) RC_Steering = 0; // to have accutal 0
 3982              	 .loc 6 531 0
 3983 0156 344B     	 ldr r3,.L195+64
 3984 0158 1B68     	 ldr r3,[r3]
 3985 015a 181C     	 add r0,r3,#0
 3986 015c 8021     	 mov r1,#128
 3987 015e C905     	 lsl r1,r1,#23
 3988 0160 FFF7FEFF 	 bl __aeabi_fcmplt
 3989 0164 031E     	 sub r3,r0,#0
 3990 0166 0BD0     	 beq .L184
 3991              	 .loc 6 531 0 is_stmt 0 discriminator 1
 3992 0168 2F4B     	 ldr r3,.L195+64
 3993 016a 1B68     	 ldr r3,[r3]
 3994 016c 181C     	 add r0,r3,#0
 3995 016e C021     	 mov r1,#192
 3996 0170 0906     	 lsl r1,r1,#24
 3997 0172 FFF7FEFF 	 bl __aeabi_fcmpgt
 3998 0176 031E     	 sub r3,r0,#0
 3999 0178 02D0     	 beq .L184
 4000              	 .loc 6 531 0 discriminator 2
 4001 017a 2B4B     	 ldr r3,.L195+64
 4002 017c 0022     	 mov r2,#0
 4003 017e 1A60     	 str r2,[r3]
 4004              	.L184:
 532:../main.c     **** 	  RC_no_Steering_data_counter = 0;
 4005              	 .loc 6 532 0 is_stmt 1
 4006 0180 2A4B     	 ldr r3,.L195+68
 4007 0182 0022     	 mov r2,#0
 4008 0184 1A70     	 strb r2,[r3]
 4009 0186 05E0     	 b .L187
 4010              	.L183:
 533:../main.c     **** 	}
 534:../main.c     **** 	else{
 535:../main.c     **** 	  RC_no_Steering_data_counter ++;
 4011              	 .loc 6 535 0
 4012 0188 284B     	 ldr r3,.L195+68
 4013 018a 1B78     	 ldrb r3,[r3]
 4014 018c 0133     	 add r3,r3,#1
 4015 018e DAB2     	 uxtb r2,r3
 4016 0190 264B     	 ldr r3,.L195+68
 4017 0192 1A70     	 strb r2,[r3]
 4018              	.L187:
 536:../main.c     **** 	}
 537:../main.c     **** 
 538:../main.c     **** 	if(RC_no_Speed_data_counter > 20 || RC_no_Steering_data_counter > 20 ){ // internall vaules not ok
 4019              	 .loc 6 538 0
 4020 0194 214B     	 ldr r3,.L195+52
 4021 0196 1B78     	 ldrb r3,[r3]
 4022 0198 142B     	 cmp r3,#20
 4023 019a 03D8     	 bhi .L188
 4024              	 .loc 6 538 0 is_stmt 0 discriminator 1
 4025 019c 234B     	 ldr r3,.L195+68
 4026 019e 1B78     	 ldrb r3,[r3]
 4027 01a0 142B     	 cmp r3,#20
 4028 01a2 10D9     	 bls .L189
 4029              	.L188:
 539:../main.c     **** 	  DIGITAL_IO_SetOutputLow(&RC_no_data_LED);
 4030              	 .loc 6 539 0 is_stmt 1
 4031 01a4 224B     	 ldr r3,.L195+72
 4032 01a6 181C     	 mov r0,r3
 4033 01a8 FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 540:../main.c     **** 	  RC_no_Speed_data_counter = 20;
 4034              	 .loc 6 540 0
 4035 01ac 1B4B     	 ldr r3,.L195+52
 4036 01ae 1422     	 mov r2,#20
 4037 01b0 1A70     	 strb r2,[r3]
 541:../main.c     **** 	  RC_no_Steering_data_counter = 20;
 4038              	 .loc 6 541 0
 4039 01b2 1E4B     	 ldr r3,.L195+68
 4040 01b4 1422     	 mov r2,#20
 4041 01b6 1A70     	 strb r2,[r3]
 542:../main.c     **** 
 543:../main.c     **** 	  //set gobal vars 0
 544:../main.c     **** 	  Driving_speed = 0;
 4042              	 .loc 6 544 0
 4043 01b8 1E4B     	 ldr r3,.L195+76
 4044 01ba 0022     	 mov r2,#0
 4045 01bc 1A60     	 str r2,[r3]
 545:../main.c     **** 	  Steering_direction = 0;
 4046              	 .loc 6 545 0
 4047 01be 1E4B     	 ldr r3,.L195+80
 4048 01c0 0022     	 mov r2,#0
 4049 01c2 1A60     	 str r2,[r3]
 4050 01c4 0BE0     	 b .L190
 4051              	.L189:
 546:../main.c     **** 	}
 547:../main.c     **** 	else{ // vaules filternig
 548:../main.c     **** 	  DIGITAL_IO_SetOutputHigh(&RC_no_data_LED);
 4052              	 .loc 6 548 0
 4053 01c6 1A4B     	 ldr r3,.L195+72
 4054 01c8 181C     	 mov r0,r3
 4055 01ca FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 549:../main.c     **** 
 550:../main.c     **** 	  //set gobal vars stanart
 551:../main.c     **** 	  Driving_speed = RC_Speed;
 4056              	 .loc 6 551 0
 4057 01ce 0F4B     	 ldr r3,.L195+36
 4058 01d0 1A68     	 ldr r2,[r3]
 4059 01d2 184B     	 ldr r3,.L195+76
 4060 01d4 1A60     	 str r2,[r3]
 552:../main.c     **** 	  Steering_direction = RC_Steering;
 4061              	 .loc 6 552 0
 4062 01d6 144B     	 ldr r3,.L195+64
 4063 01d8 1A68     	 ldr r2,[r3]
 4064 01da 174B     	 ldr r3,.L195+80
 4065 01dc 1A60     	 str r2,[r3]
 4066              	.L190:
 553:../main.c     **** 	}
 554:../main.c     **** 
 555:../main.c     **** 	New_Input = 1; //goalb var to tell it that there in new data to calculate
 4067              	 .loc 6 555 0
 4068 01de 174B     	 ldr r3,.L195+84
 4069 01e0 0122     	 mov r2,#1
 4070 01e2 1A70     	 strb r2,[r3]
 556:../main.c     **** }
 4071              	 .loc 6 556 0
 4072 01e4 BD46     	 mov sp,r7
 4073              	 
 4074 01e6 F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 4075              	.L196:
 4076              	 .align 2
 4077              	.L195:
 4078 01e8 00000000 	 .word CAPTURE_RC_Steering
 4079 01ec 00000000 	 .word CAPTURE_RC_Speed
 4080 01f0 00000000 	 .word captured_time_Steering
 4081 01f4 00000000 	 .word captured_time_Speed
 4082 01f8 00000000 	 .word RC_Speed_Stop
 4083 01fc 3F420F00 	 .word 999999
 4084 0200 80841E00 	 .word 2000000
 4085 0204 60E33641 	 .word 1094116192
 4086 0208 00000000 	 .word RC_Speed_ns_to_mps
 4087 020c 00000000 	 .word RC_Speed
 4088 0210 9A999999 	 .word -1717986918
 4089 0214 9999B93F 	 .word 1069128089
 4090 0218 9999B9BF 	 .word -1078355559
 4091 021c 00000000 	 .word RC_no_Speed_data_counter
 4092 0220 A07F3741 	 .word 1094156192
 4093 0224 00000000 	 .word RC_Steering_ns_to_deg
 4094 0228 00000000 	 .word RC_Steering
 4095 022c 00000000 	 .word RC_no_Steering_data_counter
 4096 0230 00000000 	 .word RC_no_data_LED
 4097 0234 00000000 	 .word Driving_speed
 4098 0238 00000000 	 .word Steering_direction
 4099 023c 00000000 	 .word New_Input
 4100              	 .cfi_endproc
 4101              	.LFE234:
 4103              	 .section .text.IRQ12_Handler,"ax",%progbits
 4104              	 .align 2
 4105              	 .global IRQ12_Handler
 4106              	 .code 16
 4107              	 .thumb_func
 4109              	IRQ12_Handler:
 4110              	.LFB235:
 557:../main.c     **** 
 558:../main.c     **** void RC_Connected_ISR(void){
 4111              	 .loc 6 558 0
 4112              	 .cfi_startproc
 4113 0000 80B5     	 push {r7,lr}
 4114              	.LCFI59:
 4115              	 .cfi_def_cfa_offset 8
 4116              	 .cfi_offset 7,-8
 4117              	 .cfi_offset 14,-4
 4118 0002 82B0     	 sub sp,sp,#8
 4119              	.LCFI60:
 4120              	 .cfi_def_cfa_offset 16
 4121 0004 00AF     	 add r7,sp,#0
 4122              	.LCFI61:
 4123              	 .cfi_def_cfa_register 7
 559:../main.c     **** 
 560:../main.c     **** 	if(RC_controll == 1){
 4124              	 .loc 6 560 0
 4125 0006 254B     	 ldr r3,.L203
 4126 0008 1B78     	 ldrb r3,[r3]
 4127 000a 012B     	 cmp r3,#1
 4128 000c 43D1     	 bne .L197
 561:../main.c     **** 
 562:../main.c     **** 		RC_Gear_state =  PIN_INTERRUPT_GetPinValue(&RC_Connected); // pin haig or low
 4129              	 .loc 6 562 0
 4130 000e 244B     	 ldr r3,.L203+4
 4131 0010 181C     	 mov r0,r3
 4132 0012 FFF7FEFF 	 bl PIN_INTERRUPT_GetPinValue
 4133 0016 031C     	 mov r3,r0
 4134 0018 DAB2     	 uxtb r2,r3
 4135 001a 224B     	 ldr r3,.L203+8
 4136 001c 1A70     	 strb r2,[r3]
 563:../main.c     **** 
 564:../main.c     **** 		if(RC_Gear_state == 0){// do nothing during high
 4137              	 .loc 6 564 0
 4138 001e 214B     	 ldr r3,.L203+8
 4139 0020 1B78     	 ldrb r3,[r3]
 4140 0022 002B     	 cmp r3,#0
 4141 0024 37D1     	 bne .L197
 4142              	.LBB4:
 565:../main.c     **** 
 566:../main.c     **** 			RC_Recive(); // get speed and steering data
 4143              	 .loc 6 566 0
 4144 0026 FFF7FEFF 	 bl RC_Recive
 567:../main.c     **** 
 568:../main.c     **** 			uint32_t RC_Gear_on_time_100us = RC_gear_100us_counter;
 4145              	 .loc 6 568 0
 4146 002a 1F4B     	 ldr r3,.L203+12
 4147 002c 1B68     	 ldr r3,[r3]
 4148 002e 7B60     	 str r3,[r7,#4]
 569:../main.c     **** 			RC_gear_100us_counter = 0;
 4149              	 .loc 6 569 0
 4150 0030 1D4B     	 ldr r3,.L203+12
 4151 0032 0022     	 mov r2,#0
 4152 0034 1A60     	 str r2,[r3]
 570:../main.c     **** 
 571:../main.c     **** 			if((80 < RC_Gear_on_time_100us) && (RC_Gear_on_time_100us < 150)) RC_Gear_duty= 0;
 4153              	 .loc 6 571 0
 4154 0036 7B68     	 ldr r3,[r7,#4]
 4155 0038 502B     	 cmp r3,#80
 4156 003a 06D9     	 bls .L199
 4157              	 .loc 6 571 0 is_stmt 0 discriminator 1
 4158 003c 7B68     	 ldr r3,[r7,#4]
 4159 003e 952B     	 cmp r3,#149
 4160 0040 03D8     	 bhi .L199
 4161              	 .loc 6 571 0 discriminator 2
 4162 0042 1A4B     	 ldr r3,.L203+16
 4163 0044 0022     	 mov r2,#0
 4164 0046 1A70     	 strb r2,[r3]
 4165 0048 0CE0     	 b .L200
 4166              	.L199:
 572:../main.c     **** 			else if ((150 < RC_Gear_on_time_100us) && (RC_Gear_on_time_100us < 210)) RC_Gear_duty = 1;
 4167              	 .loc 6 572 0 is_stmt 1
 4168 004a 7B68     	 ldr r3,[r7,#4]
 4169 004c 962B     	 cmp r3,#150
 4170 004e 06D9     	 bls .L201
 4171              	 .loc 6 572 0 is_stmt 0 discriminator 1
 4172 0050 7B68     	 ldr r3,[r7,#4]
 4173 0052 D12B     	 cmp r3,#209
 4174 0054 03D8     	 bhi .L201
 4175              	 .loc 6 572 0 discriminator 2
 4176 0056 154B     	 ldr r3,.L203+16
 4177 0058 0122     	 mov r2,#1
 4178 005a 1A70     	 strb r2,[r3]
 4179 005c 02E0     	 b .L200
 4180              	.L201:
 573:../main.c     **** 			else RC_Gear_duty = 2;
 4181              	 .loc 6 573 0 is_stmt 1
 4182 005e 134B     	 ldr r3,.L203+16
 4183 0060 0222     	 mov r2,#2
 4184 0062 1A70     	 strb r2,[r3]
 4185              	.L200:
 574:../main.c     **** 
 575:../main.c     **** 			if(RC_Gear_duty == 1 && RC_Gear_duty_OLD == 0){
 4186              	 .loc 6 575 0
 4187 0064 114B     	 ldr r3,.L203+16
 4188 0066 1B78     	 ldrb r3,[r3]
 4189 0068 012B     	 cmp r3,#1
 4190 006a 10D1     	 bne .L202
 4191              	 .loc 6 575 0 is_stmt 0 discriminator 1
 4192 006c 104B     	 ldr r3,.L203+20
 4193 006e 1B78     	 ldrb r3,[r3]
 4194 0070 002B     	 cmp r3,#0
 4195 0072 0CD1     	 bne .L202
 576:../main.c     **** 				Steering_mode ++;
 4196              	 .loc 6 576 0 is_stmt 1
 4197 0074 0F4B     	 ldr r3,.L203+24
 4198 0076 1B78     	 ldrb r3,[r3]
 4199 0078 0133     	 add r3,r3,#1
 4200 007a DAB2     	 uxtb r2,r3
 4201 007c 0D4B     	 ldr r3,.L203+24
 4202 007e 1A70     	 strb r2,[r3]
 577:../main.c     **** 				if(Steering_mode > 5)Steering_mode = 0;
 4203              	 .loc 6 577 0
 4204 0080 0C4B     	 ldr r3,.L203+24
 4205 0082 1B78     	 ldrb r3,[r3]
 4206 0084 052B     	 cmp r3,#5
 4207 0086 02D9     	 bls .L202
 4208              	 .loc 6 577 0 is_stmt 0 discriminator 1
 4209 0088 0A4B     	 ldr r3,.L203+24
 4210 008a 0022     	 mov r2,#0
 4211 008c 1A70     	 strb r2,[r3]
 4212              	.L202:
 578:../main.c     **** 			}
 579:../main.c     **** 		RC_Gear_duty_OLD = RC_Gear_duty;
 4213              	 .loc 6 579 0 is_stmt 1
 4214 008e 074B     	 ldr r3,.L203+16
 4215 0090 1A78     	 ldrb r2,[r3]
 4216 0092 074B     	 ldr r3,.L203+20
 4217 0094 1A70     	 strb r2,[r3]
 4218              	.L197:
 4219              	.LBE4:
 580:../main.c     **** 		}
 581:../main.c     **** 	}
 582:../main.c     **** }
 4220              	 .loc 6 582 0
 4221 0096 BD46     	 mov sp,r7
 4222 0098 02B0     	 add sp,sp,#8
 4223              	 
 4224 009a 80BD     	 pop {r7,pc}
 4225              	.L204:
 4226              	 .align 2
 4227              	.L203:
 4228 009c 00000000 	 .word RC_controll
 4229 00a0 00000000 	 .word RC_Connected
 4230 00a4 00000000 	 .word RC_Gear_state
 4231 00a8 00000000 	 .word RC_gear_100us_counter
 4232 00ac 00000000 	 .word RC_Gear_duty
 4233 00b0 00000000 	 .word RC_Gear_duty_OLD
 4234 00b4 00000000 	 .word Steering_mode
 4235              	 .cfi_endproc
 4236              	.LFE235:
 4238              	 .section .text.IRQ6_Handler,"ax",%progbits
 4239              	 .align 2
 4240              	 .global IRQ6_Handler
 4241              	 .code 16
 4242              	 .thumb_func
 4244              	IRQ6_Handler:
 4245              	.LFB236:
 583:../main.c     **** 
 584:../main.c     **** void RC_AUX1_ISR(void){
 4246              	 .loc 6 584 0
 4247              	 .cfi_startproc
 4248 0000 80B5     	 push {r7,lr}
 4249              	.LCFI62:
 4250              	 .cfi_def_cfa_offset 8
 4251              	 .cfi_offset 7,-8
 4252              	 .cfi_offset 14,-4
 4253 0002 82B0     	 sub sp,sp,#8
 4254              	.LCFI63:
 4255              	 .cfi_def_cfa_offset 16
 4256 0004 00AF     	 add r7,sp,#0
 4257              	.LCFI64:
 4258              	 .cfi_def_cfa_register 7
 585:../main.c     **** 	if(RC_controll == 1){
 4259              	 .loc 6 585 0
 4260 0006 1D4B     	 ldr r3,.L211
 4261 0008 1B78     	 ldrb r3,[r3]
 4262 000a 012B     	 cmp r3,#1
 4263 000c 33D1     	 bne .L205
 586:../main.c     **** 		RC_AUX1_state =  PIN_INTERRUPT_GetPinValue(&RC_AUX1); // pin haig or low
 4264              	 .loc 6 586 0
 4265 000e 1C4B     	 ldr r3,.L211+4
 4266 0010 181C     	 mov r0,r3
 4267 0012 FFF7FEFF 	 bl PIN_INTERRUPT_GetPinValue
 4268 0016 031C     	 mov r3,r0
 4269 0018 DAB2     	 uxtb r2,r3
 4270 001a 1A4B     	 ldr r3,.L211+8
 4271 001c 1A70     	 strb r2,[r3]
 587:../main.c     **** 
 588:../main.c     **** 		if(RC_AUX1_state == 0){// do nothing during high
 4272              	 .loc 6 588 0
 4273 001e 194B     	 ldr r3,.L211+8
 4274 0020 1B78     	 ldrb r3,[r3]
 4275 0022 002B     	 cmp r3,#0
 4276 0024 27D1     	 bne .L205
 4277              	.LBB5:
 589:../main.c     **** 			uint32_t RC_AUX1_on_time_100us = RC_AUX1_100us_counter;
 4278              	 .loc 6 589 0
 4279 0026 184B     	 ldr r3,.L211+12
 4280 0028 1B68     	 ldr r3,[r3]
 4281 002a 7B60     	 str r3,[r7,#4]
 590:../main.c     **** 			RC_AUX1_100us_counter = 0;
 4282              	 .loc 6 590 0
 4283 002c 164B     	 ldr r3,.L211+12
 4284 002e 0022     	 mov r2,#0
 4285 0030 1A60     	 str r2,[r3]
 591:../main.c     **** 
 592:../main.c     **** 			if((80 < RC_AUX1_on_time_100us) && (RC_AUX1_on_time_100us < 150)) RC_AUX1_duty= 0;
 4286              	 .loc 6 592 0
 4287 0032 7B68     	 ldr r3,[r7,#4]
 4288 0034 502B     	 cmp r3,#80
 4289 0036 06D9     	 bls .L207
 4290              	 .loc 6 592 0 is_stmt 0 discriminator 1
 4291 0038 7B68     	 ldr r3,[r7,#4]
 4292 003a 952B     	 cmp r3,#149
 4293 003c 03D8     	 bhi .L207
 4294              	 .loc 6 592 0 discriminator 2
 4295 003e 134B     	 ldr r3,.L211+16
 4296 0040 0022     	 mov r2,#0
 4297 0042 1A70     	 strb r2,[r3]
 4298 0044 0CE0     	 b .L208
 4299              	.L207:
 593:../main.c     **** 			else if ((150 < RC_AUX1_on_time_100us) && (RC_AUX1_on_time_100us < 210)) RC_AUX1_duty = 1;
 4300              	 .loc 6 593 0 is_stmt 1
 4301 0046 7B68     	 ldr r3,[r7,#4]
 4302 0048 962B     	 cmp r3,#150
 4303 004a 06D9     	 bls .L209
 4304              	 .loc 6 593 0 is_stmt 0 discriminator 1
 4305 004c 7B68     	 ldr r3,[r7,#4]
 4306 004e D12B     	 cmp r3,#209
 4307 0050 03D8     	 bhi .L209
 4308              	 .loc 6 593 0 discriminator 2
 4309 0052 0E4B     	 ldr r3,.L211+16
 4310 0054 0122     	 mov r2,#1
 4311 0056 1A70     	 strb r2,[r3]
 4312 0058 02E0     	 b .L208
 4313              	.L209:
 594:../main.c     **** 			else RC_AUX1_duty = 2;
 4314              	 .loc 6 594 0 is_stmt 1
 4315 005a 0C4B     	 ldr r3,.L211+16
 4316 005c 0222     	 mov r2,#2
 4317 005e 1A70     	 strb r2,[r3]
 4318              	.L208:
 595:../main.c     **** 
 596:../main.c     **** 
 597:../main.c     **** 			if(RC_AUX1_duty == 1)RC_Speed_Stop = 1;
 4319              	 .loc 6 597 0
 4320 0060 0A4B     	 ldr r3,.L211+16
 4321 0062 1B78     	 ldrb r3,[r3]
 4322 0064 012B     	 cmp r3,#1
 4323 0066 03D1     	 bne .L210
 4324              	 .loc 6 597 0 is_stmt 0 discriminator 1
 4325 0068 094B     	 ldr r3,.L211+20
 4326 006a 0122     	 mov r2,#1
 4327 006c 1A70     	 strb r2,[r3]
 4328 006e 02E0     	 b .L205
 4329              	.L210:
 598:../main.c     **** 			else RC_Speed_Stop = 0;
 4330              	 .loc 6 598 0 is_stmt 1
 4331 0070 074B     	 ldr r3,.L211+20
 4332 0072 0022     	 mov r2,#0
 4333 0074 1A70     	 strb r2,[r3]
 4334              	.L205:
 4335              	.LBE5:
 599:../main.c     **** 		}
 600:../main.c     **** 	}
 601:../main.c     **** }
 4336              	 .loc 6 601 0
 4337 0076 BD46     	 mov sp,r7
 4338 0078 02B0     	 add sp,sp,#8
 4339              	 
 4340 007a 80BD     	 pop {r7,pc}
 4341              	.L212:
 4342              	 .align 2
 4343              	.L211:
 4344 007c 00000000 	 .word RC_controll
 4345 0080 00000000 	 .word RC_AUX1
 4346 0084 00000000 	 .word RC_AUX1_state
 4347 0088 00000000 	 .word RC_AUX1_100us_counter
 4348 008c 00000000 	 .word RC_AUX1_duty
 4349 0090 00000000 	 .word RC_Speed_Stop
 4350              	 .cfi_endproc
 4351              	.LFE236:
 4353              	 .section .rodata
 4354              	 .align 2
 4355              	.LC0:
 4356 0000 01       	 .byte 1
 4357 0001 01       	 .byte 1
 4358 0002 01       	 .byte 1
 4359 0003 01       	 .byte 1
 4360              	 .section .text.IRQ7_Handler,"ax",%progbits
 4361              	 .align 2
 4362              	 .global IRQ7_Handler
 4363              	 .code 16
 4364              	 .thumb_func
 4366              	IRQ7_Handler:
 4367              	.LFB237:
 602:../main.c     **** 
 603:../main.c     **** void TIMER_CONTROL_ISR(void){
 4368              	 .loc 6 603 0
 4369              	 .cfi_startproc
 4370 0000 80B5     	 push {r7,lr}
 4371              	.LCFI65:
 4372              	 .cfi_def_cfa_offset 8
 4373              	 .cfi_offset 7,-8
 4374              	 .cfi_offset 14,-4
 4375 0002 82B0     	 sub sp,sp,#8
 4376              	.LCFI66:
 4377              	 .cfi_def_cfa_offset 16
 4378 0004 00AF     	 add r7,sp,#0
 4379              	.LCFI67:
 4380              	 .cfi_def_cfa_register 7
 604:../main.c     **** 	DIGITAL_IO_SetOutputHigh(&CALC_TIME_INDICATOR);
 4381              	 .loc 6 604 0
 4382 0006 384B     	 ldr r3,.L218
 4383 0008 181C     	 mov r0,r3
 4384 000a FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 605:../main.c     **** 	mode_led(Steering_mode);
 4385              	 .loc 6 605 0
 4386 000e 374B     	 ldr r3,.L218+4
 4387 0010 1B78     	 ldrb r3,[r3]
 4388 0012 181C     	 mov r0,r3
 4389 0014 FFF7FEFF 	 bl mode_led
 606:../main.c     **** 
 607:../main.c     **** 	if(RC_controll == 1){
 4390              	 .loc 6 607 0
 4391 0018 354B     	 ldr r3,.L218+8
 4392 001a 1B78     	 ldrb r3,[r3]
 4393 001c 012B     	 cmp r3,#1
 4394 001e 07D1     	 bne .L214
 608:../main.c     **** 		if( NO_New_Input_counter > 9){
 4395              	 .loc 6 608 0
 4396 0020 344B     	 ldr r3,.L218+12
 4397 0022 1B68     	 ldr r3,[r3]
 4398 0024 092B     	 cmp r3,#9
 4399 0026 03D9     	 bls .L214
 609:../main.c     **** 			DIGITAL_IO_SetOutputLow(&RC_no_data_LED);
 4400              	 .loc 6 609 0
 4401 0028 334B     	 ldr r3,.L218+16
 4402 002a 181C     	 mov r0,r3
 4403 002c FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 4404              	.L214:
 610:../main.c     **** 		}
 611:../main.c     **** 	}
 612:../main.c     **** 
 613:../main.c     **** 
 614:../main.c     **** 	if(New_Input == 1){
 4405              	 .loc 6 614 0
 4406 0030 324B     	 ldr r3,.L218+20
 4407 0032 1B78     	 ldrb r3,[r3]
 4408 0034 012B     	 cmp r3,#1
 4409 0036 0ED1     	 bne .L215
 615:../main.c     **** 	Steering_Function(Steering_direction, Driving_speed, Steering_mode);
 4410              	 .loc 6 615 0
 4411 0038 314B     	 ldr r3,.L218+24
 4412 003a 1968     	 ldr r1,[r3]
 4413 003c 314B     	 ldr r3,.L218+28
 4414 003e 1A68     	 ldr r2,[r3]
 4415 0040 2A4B     	 ldr r3,.L218+4
 4416 0042 1B78     	 ldrb r3,[r3]
 4417 0044 081C     	 add r0,r1,#0
 4418 0046 111C     	 add r1,r2,#0
 4419 0048 1A1C     	 mov r2,r3
 4420 004a FFF7FEFF 	 bl Steering_Function
 616:../main.c     **** 	NO_New_Input_counter = 0;
 4421              	 .loc 6 616 0
 4422 004e 294B     	 ldr r3,.L218+12
 4423 0050 0022     	 mov r2,#0
 4424 0052 1A60     	 str r2,[r3]
 4425 0054 23E0     	 b .L216
 4426              	.L215:
 617:../main.c     **** 	}
 618:../main.c     **** 	else{
 619:../main.c     **** 		NO_New_Input_counter ++;
 4427              	 .loc 6 619 0
 4428 0056 274B     	 ldr r3,.L218+12
 4429 0058 1B68     	 ldr r3,[r3]
 4430 005a 5A1C     	 add r2,r3,#1
 4431 005c 254B     	 ldr r3,.L218+12
 4432 005e 1A60     	 str r2,[r3]
 620:../main.c     **** 		if( NO_New_Input_counter > 10){
 4433              	 .loc 6 620 0
 4434 0060 244B     	 ldr r3,.L218+12
 4435 0062 1B68     	 ldr r3,[r3]
 4436 0064 0A2B     	 cmp r3,#10
 4437 0066 1AD9     	 bls .L216
 621:../main.c     **** 			NO_New_Input_counter = 10;
 4438              	 .loc 6 621 0
 4439 0068 224B     	 ldr r3,.L218+12
 4440 006a 0A22     	 mov r2,#10
 4441 006c 1A60     	 str r2,[r3]
 622:../main.c     **** 
 623:../main.c     **** 			  Steering_Angles[0] = 0;
 4442              	 .loc 6 623 0
 4443 006e 264B     	 ldr r3,.L218+32
 4444 0070 0022     	 mov r2,#0
 4445 0072 1A60     	 str r2,[r3]
 624:../main.c     **** 			  Steering_Angles[1] = 0;
 4446              	 .loc 6 624 0
 4447 0074 244B     	 ldr r3,.L218+32
 4448 0076 0022     	 mov r2,#0
 4449 0078 5A60     	 str r2,[r3,#4]
 625:../main.c     **** 			  Steering_Angles[2] = 0;
 4450              	 .loc 6 625 0
 4451 007a 234B     	 ldr r3,.L218+32
 4452 007c 0022     	 mov r2,#0
 4453 007e 9A60     	 str r2,[r3,#8]
 626:../main.c     **** 			  Steering_Angles[3] = 0;
 4454              	 .loc 6 626 0
 4455 0080 214B     	 ldr r3,.L218+32
 4456 0082 0022     	 mov r2,#0
 4457 0084 DA60     	 str r2,[r3,#12]
 627:../main.c     **** 
 628:../main.c     **** 			  Speeds[0] = 0;
 4458              	 .loc 6 628 0
 4459 0086 214B     	 ldr r3,.L218+36
 4460 0088 0022     	 mov r2,#0
 4461 008a 1A60     	 str r2,[r3]
 629:../main.c     **** 			  Speeds[1] = 0;
 4462              	 .loc 6 629 0
 4463 008c 1F4B     	 ldr r3,.L218+36
 4464 008e 0022     	 mov r2,#0
 4465 0090 5A60     	 str r2,[r3,#4]
 630:../main.c     **** 			  Speeds[2] = 0;
 4466              	 .loc 6 630 0
 4467 0092 1E4B     	 ldr r3,.L218+36
 4468 0094 0022     	 mov r2,#0
 4469 0096 9A60     	 str r2,[r3,#8]
 631:../main.c     **** 			  Speeds[3] = 0;
 4470              	 .loc 6 631 0
 4471 0098 1C4B     	 ldr r3,.L218+36
 4472 009a 0022     	 mov r2,#0
 4473 009c DA60     	 str r2,[r3,#12]
 4474              	.L216:
 632:../main.c     **** 		}
 633:../main.c     **** 	}
 634:../main.c     **** 
 635:../main.c     **** 	//send traget speeds to inverter
 636:../main.c     **** 	CAN_send_Speeds(Speeds);
 4475              	 .loc 6 636 0
 4476 009e 1B4B     	 ldr r3,.L218+36
 4477 00a0 181C     	 mov r0,r3
 4478 00a2 FFF7FEFF 	 bl CAN_send_Speeds
 637:../main.c     **** 	//set angels PWM
 638:../main.c     **** 	Steering_set_Angles(Steering_Angles);
 4479              	 .loc 6 638 0
 4480 00a6 184B     	 ldr r3,.L218+32
 4481 00a8 181C     	 mov r0,r3
 4482 00aa FFF7FEFF 	 bl Steering_set_Angles
 639:../main.c     **** 
 640:../main.c     **** 	//
 641:../main.c     **** 	if(reset_distance == 1){
 4483              	 .loc 6 641 0
 4484 00ae 184B     	 ldr r3,.L218+40
 4485 00b0 1B78     	 ldrb r3,[r3]
 4486 00b2 012B     	 cmp r3,#1
 4487 00b4 10D1     	 bne .L217
 4488              	.LBB6:
 642:../main.c     **** 		reset_distance = 0;
 4489              	 .loc 6 642 0
 4490 00b6 164B     	 ldr r3,.L218+40
 4491 00b8 0022     	 mov r2,#0
 4492 00ba 1A70     	 strb r2,[r3]
 643:../main.c     **** 		uint8_t all[4] = {1,1,1,1};
 4493              	 .loc 6 643 0
 4494 00bc 3A1D     	 add r2,r7,#4
 4495 00be 154B     	 ldr r3,.L218+44
 4496 00c0 111C     	 mov r1,r2
 4497 00c2 1A1C     	 mov r2,r3
 4498 00c4 0423     	 mov r3,#4
 4499 00c6 081C     	 mov r0,r1
 4500 00c8 111C     	 mov r1,r2
 4501 00ca 1A1C     	 mov r2,r3
 4502 00cc FFF7FEFF 	 bl memcpy
 644:../main.c     **** 		CAN_reset_distance(all);
 4503              	 .loc 6 644 0
 4504 00d0 3B1D     	 add r3,r7,#4
 4505 00d2 181C     	 mov r0,r3
 4506 00d4 FFF7FEFF 	 bl CAN_reset_distance
 4507              	.L217:
 4508              	.LBE6:
 645:../main.c     **** 	}
 646:../main.c     **** 
 647:../main.c     **** 
 648:../main.c     **** 	DIGITAL_IO_SetOutputLow(&CALC_TIME_INDICATOR);
 4509              	 .loc 6 648 0
 4510 00d8 034B     	 ldr r3,.L218
 4511 00da 181C     	 mov r0,r3
 4512 00dc FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 649:../main.c     **** }
 4513              	 .loc 6 649 0
 4514 00e0 BD46     	 mov sp,r7
 4515 00e2 02B0     	 add sp,sp,#8
 4516              	 
 4517 00e4 80BD     	 pop {r7,pc}
 4518              	.L219:
 4519 00e6 C046     	 .align 2
 4520              	.L218:
 4521 00e8 00000000 	 .word CALC_TIME_INDICATOR
 4522 00ec 00000000 	 .word Steering_mode
 4523 00f0 00000000 	 .word RC_controll
 4524 00f4 00000000 	 .word NO_New_Input_counter
 4525 00f8 00000000 	 .word RC_no_data_LED
 4526 00fc 00000000 	 .word New_Input
 4527 0100 00000000 	 .word Steering_direction
 4528 0104 00000000 	 .word Driving_speed
 4529 0108 00000000 	 .word Steering_Angles
 4530 010c 00000000 	 .word Speeds
 4531 0110 00000000 	 .word reset_distance
 4532 0114 00000000 	 .word .LC0
 4533              	 .cfi_endproc
 4534              	.LFE237:
 4536              	 .section .text.Servo_NP_setting,"ax",%progbits
 4537              	 .align 2
 4538              	 .global Servo_NP_setting
 4539              	 .code 16
 4540              	 .thumb_func
 4542              	Servo_NP_setting:
 4543              	.LFB238:
 650:../main.c     **** 
 651:../main.c     **** 
 652:../main.c     **** void Servo_NP_setting(void){
 4544              	 .loc 6 652 0
 4545              	 .cfi_startproc
 4546 0000 80B5     	 push {r7,lr}
 4547              	.LCFI68:
 4548              	 .cfi_def_cfa_offset 8
 4549              	 .cfi_offset 7,-8
 4550              	 .cfi_offset 14,-4
 4551 0002 00AF     	 add r7,sp,#0
 4552              	.LCFI69:
 4553              	 .cfi_def_cfa_register 7
 653:../main.c     **** 	  NP[0] = NPfl;
 4554              	 .loc 6 653 0
 4555 0004 084B     	 ldr r3,.L221
 4556 0006 1A68     	 ldr r2,[r3]
 4557 0008 084B     	 ldr r3,.L221+4
 4558 000a 1A60     	 str r2,[r3]
 654:../main.c     **** 	  NP[1] = NPfr;
 4559              	 .loc 6 654 0
 4560 000c 084B     	 ldr r3,.L221+8
 4561 000e 1A68     	 ldr r2,[r3]
 4562 0010 064B     	 ldr r3,.L221+4
 4563 0012 5A60     	 str r2,[r3,#4]
 655:../main.c     **** 	  NP[2] = NPrl;
 4564              	 .loc 6 655 0
 4565 0014 074B     	 ldr r3,.L221+12
 4566 0016 1A68     	 ldr r2,[r3]
 4567 0018 044B     	 ldr r3,.L221+4
 4568 001a 9A60     	 str r2,[r3,#8]
 656:../main.c     **** 	  NP[3] = NPrr;
 4569              	 .loc 6 656 0
 4570 001c 064B     	 ldr r3,.L221+16
 4571 001e 1A68     	 ldr r2,[r3]
 4572 0020 024B     	 ldr r3,.L221+4
 4573 0022 DA60     	 str r2,[r3,#12]
 657:../main.c     **** }
 4574              	 .loc 6 657 0
 4575 0024 BD46     	 mov sp,r7
 4576              	 
 4577 0026 80BD     	 pop {r7,pc}
 4578              	.L222:
 4579              	 .align 2
 4580              	.L221:
 4581 0028 00000000 	 .word NPfl
 4582 002c 00000000 	 .word NP
 4583 0030 00000000 	 .word NPfr
 4584 0034 00000000 	 .word NPrl
 4585 0038 00000000 	 .word NPrr
 4586              	 .cfi_endproc
 4587              	.LFE238:
 4589              	 .section .text.average,"ax",%progbits
 4590              	 .align 2
 4591              	 .global average
 4592              	 .code 16
 4593              	 .thumb_func
 4595              	average:
 4596              	.LFB239:
 658:../main.c     **** 
 659:../main.c     **** float average(float a[],int num_vaules) {
 4597              	 .loc 6 659 0
 4598              	 .cfi_startproc
 4599 0000 80B5     	 push {r7,lr}
 4600              	.LCFI70:
 4601              	 .cfi_def_cfa_offset 8
 4602              	 .cfi_offset 7,-8
 4603              	 .cfi_offset 14,-4
 4604 0002 84B0     	 sub sp,sp,#16
 4605              	.LCFI71:
 4606              	 .cfi_def_cfa_offset 24
 4607 0004 00AF     	 add r7,sp,#0
 4608              	.LCFI72:
 4609              	 .cfi_def_cfa_register 7
 4610 0006 7860     	 str r0,[r7,#4]
 4611 0008 3960     	 str r1,[r7]
 660:../main.c     ****     float sum = 0;
 4612              	 .loc 6 660 0
 4613 000a 0023     	 mov r3,#0
 4614 000c FB60     	 str r3,[r7,#12]
 661:../main.c     ****     int i;
 662:../main.c     ****     for(i = 0; i < num_vaules; i++){
 4615              	 .loc 6 662 0
 4616 000e 0023     	 mov r3,#0
 4617 0010 BB60     	 str r3,[r7,#8]
 4618 0012 0DE0     	 b .L224
 4619              	.L225:
 663:../main.c     ****         sum += a[i];
 4620              	 .loc 6 663 0 discriminator 3
 4621 0014 BB68     	 ldr r3,[r7,#8]
 4622 0016 9B00     	 lsl r3,r3,#2
 4623 0018 7A68     	 ldr r2,[r7,#4]
 4624 001a D318     	 add r3,r2,r3
 4625 001c 1B68     	 ldr r3,[r3]
 4626 001e F868     	 ldr r0,[r7,#12]
 4627 0020 191C     	 add r1,r3,#0
 4628 0022 FFF7FEFF 	 bl __aeabi_fadd
 4629 0026 031C     	 add r3,r0,#0
 4630 0028 FB60     	 str r3,[r7,#12]
 662:../main.c     ****         sum += a[i];
 4631              	 .loc 6 662 0 discriminator 3
 4632 002a BB68     	 ldr r3,[r7,#8]
 4633 002c 0133     	 add r3,r3,#1
 4634 002e BB60     	 str r3,[r7,#8]
 4635              	.L224:
 662:../main.c     ****         sum += a[i];
 4636              	 .loc 6 662 0 is_stmt 0 discriminator 1
 4637 0030 BA68     	 ldr r2,[r7,#8]
 4638 0032 3B68     	 ldr r3,[r7]
 4639 0034 9A42     	 cmp r2,r3
 4640 0036 EDDB     	 blt .L225
 664:../main.c     ****     }
 665:../main.c     ****     return sum / num_vaules;
 4641              	 .loc 6 665 0 is_stmt 1
 4642 0038 3868     	 ldr r0,[r7]
 4643 003a FFF7FEFF 	 bl __aeabi_i2f
 4644 003e 031C     	 add r3,r0,#0
 4645 0040 F868     	 ldr r0,[r7,#12]
 4646 0042 191C     	 add r1,r3,#0
 4647 0044 FFF7FEFF 	 bl __aeabi_fdiv
 4648 0048 031C     	 add r3,r0,#0
 666:../main.c     **** }
 4649              	 .loc 6 666 0
 4650 004a 181C     	 add r0,r3,#0
 4651 004c BD46     	 mov sp,r7
 4652 004e 04B0     	 add sp,sp,#16
 4653              	 
 4654 0050 80BD     	 pop {r7,pc}
 4655              	 .cfi_endproc
 4656              	.LFE239:
 4658 0052 C046     	 .section .text.mode_led,"ax",%progbits
 4659              	 .align 2
 4660              	 .global mode_led
 4661              	 .code 16
 4662              	 .thumb_func
 4664              	mode_led:
 4665              	.LFB240:
 667:../main.c     **** 
 668:../main.c     **** void mode_led(uint8_t var){
 4666              	 .loc 6 668 0
 4667              	 .cfi_startproc
 4668 0000 80B5     	 push {r7,lr}
 4669              	.LCFI73:
 4670              	 .cfi_def_cfa_offset 8
 4671              	 .cfi_offset 7,-8
 4672              	 .cfi_offset 14,-4
 4673 0002 82B0     	 sub sp,sp,#8
 4674              	.LCFI74:
 4675              	 .cfi_def_cfa_offset 16
 4676 0004 00AF     	 add r7,sp,#0
 4677              	.LCFI75:
 4678              	 .cfi_def_cfa_register 7
 4679 0006 021C     	 mov r2,r0
 4680 0008 FB1D     	 add r3,r7,#7
 4681 000a 1A70     	 strb r2,[r3]
 669:../main.c     **** 	if(CHECK_BIT(var,0)){
 4682              	 .loc 6 669 0
 4683 000c FB1D     	 add r3,r7,#7
 4684 000e 1B78     	 ldrb r3,[r3]
 4685 0010 0122     	 mov r2,#1
 4686 0012 1340     	 and r3,r2
 4687 0014 04D0     	 beq .L228
 670:../main.c     **** 		DIGITAL_IO_SetOutputLow(&MODE_001);
 4688              	 .loc 6 670 0
 4689 0016 174B     	 ldr r3,.L234
 4690 0018 181C     	 mov r0,r3
 4691 001a FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 4692 001e 03E0     	 b .L229
 4693              	.L228:
 671:../main.c     **** 	}
 672:../main.c     **** 	else{
 673:../main.c     **** 		DIGITAL_IO_SetOutputHigh(&MODE_001);
 4694              	 .loc 6 673 0
 4695 0020 144B     	 ldr r3,.L234
 4696 0022 181C     	 mov r0,r3
 4697 0024 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 4698              	.L229:
 674:../main.c     **** 	}
 675:../main.c     **** 
 676:../main.c     **** 	if(CHECK_BIT(var,1)){
 4699              	 .loc 6 676 0
 4700 0028 FB1D     	 add r3,r7,#7
 4701 002a 1B78     	 ldrb r3,[r3]
 4702 002c 5B08     	 lsr r3,r3,#1
 4703 002e DBB2     	 uxtb r3,r3
 4704 0030 1A1C     	 mov r2,r3
 4705 0032 0123     	 mov r3,#1
 4706 0034 1340     	 and r3,r2
 4707 0036 04D0     	 beq .L230
 677:../main.c     **** 		DIGITAL_IO_SetOutputLow(&MODE_010);
 4708              	 .loc 6 677 0
 4709 0038 0F4B     	 ldr r3,.L234+4
 4710 003a 181C     	 mov r0,r3
 4711 003c FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 4712 0040 03E0     	 b .L231
 4713              	.L230:
 678:../main.c     **** 	}
 679:../main.c     **** 	else{
 680:../main.c     **** 		DIGITAL_IO_SetOutputHigh(&MODE_010);
 4714              	 .loc 6 680 0
 4715 0042 0D4B     	 ldr r3,.L234+4
 4716 0044 181C     	 mov r0,r3
 4717 0046 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 4718              	.L231:
 681:../main.c     **** 	}
 682:../main.c     **** 
 683:../main.c     **** 	if(CHECK_BIT(var,2)){
 4719              	 .loc 6 683 0
 4720 004a FB1D     	 add r3,r7,#7
 4721 004c 1B78     	 ldrb r3,[r3]
 4722 004e 9B08     	 lsr r3,r3,#2
 4723 0050 DBB2     	 uxtb r3,r3
 4724 0052 1A1C     	 mov r2,r3
 4725 0054 0123     	 mov r3,#1
 4726 0056 1340     	 and r3,r2
 4727 0058 04D0     	 beq .L232
 684:../main.c     **** 		DIGITAL_IO_SetOutputLow(&MODE_100);
 4728              	 .loc 6 684 0
 4729 005a 084B     	 ldr r3,.L234+8
 4730 005c 181C     	 mov r0,r3
 4731 005e FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 4732 0062 03E0     	 b .L227
 4733              	.L232:
 685:../main.c     **** 	}
 686:../main.c     **** 	else{
 687:../main.c     **** 		DIGITAL_IO_SetOutputHigh(&MODE_100);
 4734              	 .loc 6 687 0
 4735 0064 054B     	 ldr r3,.L234+8
 4736 0066 181C     	 mov r0,r3
 4737 0068 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 4738              	.L227:
 688:../main.c     **** 	}
 689:../main.c     **** }
 4739              	 .loc 6 689 0
 4740 006c BD46     	 mov sp,r7
 4741 006e 02B0     	 add sp,sp,#8
 4742              	 
 4743 0070 80BD     	 pop {r7,pc}
 4744              	.L235:
 4745 0072 C046     	 .align 2
 4746              	.L234:
 4747 0074 00000000 	 .word MODE_001
 4748 0078 00000000 	 .word MODE_010
 4749 007c 00000000 	 .word MODE_100
 4750              	 .cfi_endproc
 4751              	.LFE240:
 4753              	 .text
 4754              	.Letext0:
 4755              	 .file 7 "c:\\dave\\dave-ide-4.4.2-64bit\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 4756              	 .file 8 "c:\\dave\\dave-ide-4.4.2-64bit\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 4757              	 .file 9 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/CMSIS/Infineon/XMC1400_series/Include/XMC1400.h"
 4758              	 .file 10 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc/xmc1_scu.h"
 4759              	 .file 11 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc/xmc_can.h"
 4760              	 .file 12 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/GLOBAL_CAN/global_can.h"
 4761              	 .file 13 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc/xmc1_gpio.h"
 4762              	 .file 14 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/CAN_NODE/can_node.h"
 4763              	 .file 15 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc/xmc_ccu4.h"
 4764              	 .file 16 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/GLOBAL_CCU4/global_ccu4.h"
 4765              	 .file 17 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PWM/pwm.h"
 4766              	 .file 18 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/CAPTURE/capture.h"
 4767              	 .file 19 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc/xmc_eru.h"
 4768              	 .file 20 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DAVE.h"
 4769              	 .file 21 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/CMSIS/Include/cmsis_gcc.h"
 4770              	 .file 22 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/CMSIS/Infineon/XMC1400_series/Include/system_XMC1400.h"
 4771              	 .file 23 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/CAN_NODE/can_node_extern.h"
 4772              	 .file 24 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PWM/PWM_Extern.h"
 4773              	 .file 25 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/CAPTURE/capture_extern.h"
 4774              	 .file 26 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO/digital_io_extern.h"
 4775              	 .file 27 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT/pin_interrupt_extern.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
    {standard input}:18     .text.XMC_GPIO_SetOutputHigh:00000000 $t
    {standard input}:22     .text.XMC_GPIO_SetOutputHigh:00000000 XMC_GPIO_SetOutputHigh
    {standard input}:58     .text.XMC_GPIO_SetOutputLow:00000000 $t
    {standard input}:62     .text.XMC_GPIO_SetOutputLow:00000000 XMC_GPIO_SetOutputLow
    {standard input}:98     .text.XMC_GPIO_GetInput:00000000 $t
    {standard input}:102    .text.XMC_GPIO_GetInput:00000000 XMC_GPIO_GetInput
    {standard input}:140    .text.DIGITAL_IO_SetOutputHigh:00000000 $t
    {standard input}:144    .text.DIGITAL_IO_SetOutputHigh:00000000 DIGITAL_IO_SetOutputHigh
    {standard input}:178    .text.DIGITAL_IO_SetOutputLow:00000000 $t
    {standard input}:182    .text.DIGITAL_IO_SetOutputLow:00000000 DIGITAL_IO_SetOutputLow
    {standard input}:215    .text.PIN_INTERRUPT_GetPinValue:00000000 $t
    {standard input}:219    .text.PIN_INTERRUPT_GetPinValue:00000000 PIN_INTERRUPT_GetPinValue
    {standard input}:255    .text.XMC_WDT_Start:00000000 $t
    {standard input}:259    .text.XMC_WDT_Start:00000000 XMC_WDT_Start
    {standard input}:286    .text.XMC_WDT_Start:00000014 $d
    {standard input}:291    .text.XMC_WDT_Service:00000000 $t
    {standard input}:295    .text.XMC_WDT_Service:00000000 XMC_WDT_Service
    {standard input}:318    .text.XMC_WDT_Service:00000010 $d
    {standard input}:324    .text.XMC_WDT_ClearAlarm:00000000 $t
    {standard input}:328    .text.XMC_WDT_ClearAlarm:00000000 XMC_WDT_ClearAlarm
    {standard input}:351    .text.XMC_WDT_ClearAlarm:00000010 $d
    {standard input}:356    .text.WATCHDOG_Start:00000000 $t
    {standard input}:360    .text.WATCHDOG_Start:00000000 WATCHDOG_Start
    {standard input}:383    .text.WATCHDOG_Service:00000000 $t
    {standard input}:387    .text.WATCHDOG_Service:00000000 WATCHDOG_Service
    {standard input}:409    .text.WATCHDOG_ClearAlarm:00000000 $t
    {standard input}:413    .text.WATCHDOG_ClearAlarm:00000000 WATCHDOG_ClearAlarm
    {standard input}:439    .data.NP:00000000 NP
    {standard input}:436    .data.NP:00000000 $d
    {standard input}:449    .data.NPfl:00000000 NPfl
    {standard input}:446    .data.NPfl:00000000 $d
    {standard input}:456    .data.NPfr:00000000 NPfr
    {standard input}:453    .data.NPfr:00000000 $d
    {standard input}:463    .data.NPrl:00000000 NPrl
    {standard input}:460    .data.NPrl:00000000 $d
    {standard input}:470    .data.NPrr:00000000 NPrr
    {standard input}:467    .data.NPrr:00000000 $d
    {standard input}:476    .data.RC_controll:00000000 RC_controll
    {standard input}:482    .data.Steering_mode:00000000 Steering_mode
    {standard input}:488    .bss.New_Input:00000000 New_Input
    {standard input}:489    .bss.New_Input:00000000 $d
    {standard input}:495    .bss.NO_New_Input_counter:00000000 NO_New_Input_counter
    {standard input}:492    .bss.NO_New_Input_counter:00000000 $d
    {standard input}:502    .bss.Speeds_int16_r:00000000 Speeds_int16_r
    {standard input}:499    .bss.Speeds_int16_r:00000000 $d
    {standard input}:509    .bss.CAN_RX_0:00000000 CAN_RX_0
    {standard input}:506    .bss.CAN_RX_0:00000000 $d
                            *COM*:00000001 init_status
    {standard input}:517    .bss.CAN_OK:00000000 CAN_OK
    {standard input}:514    .bss.CAN_OK:00000000 $d
    {standard input}:524    .bss.Inverters_CAN_state:00000000 Inverters_CAN_state
    {standard input}:521    .bss.Inverters_CAN_state:00000000 $d
    {standard input}:531    .bss.CAN_10ms_counter:00000000 CAN_10ms_counter
    {standard input}:528    .bss.CAN_10ms_counter:00000000 $d
    {standard input}:537    .bss.reset_distance:00000000 reset_distance
    {standard input}:538    .bss.reset_distance:00000000 $d
    {standard input}:544    .bss.speed_fl_act:00000000 speed_fl_act
    {standard input}:541    .bss.speed_fl_act:00000000 $d
    {standard input}:551    .bss.speed_fr_act:00000000 speed_fr_act
    {standard input}:548    .bss.speed_fr_act:00000000 $d
    {standard input}:558    .bss.speed_rl_act:00000000 speed_rl_act
    {standard input}:555    .bss.speed_rl_act:00000000 $d
    {standard input}:565    .bss.speed_rr_act:00000000 speed_rr_act
    {standard input}:562    .bss.speed_rr_act:00000000 $d
    {standard input}:572    .bss.distance_fl_act:00000000 distance_fl_act
    {standard input}:569    .bss.distance_fl_act:00000000 $d
    {standard input}:579    .bss.distance_fr_act:00000000 distance_fr_act
    {standard input}:576    .bss.distance_fr_act:00000000 $d
    {standard input}:586    .bss.distance_rl_act:00000000 distance_rl_act
    {standard input}:583    .bss.distance_rl_act:00000000 $d
    {standard input}:593    .bss.distance_rr_act:00000000 distance_rr_act
    {standard input}:590    .bss.distance_rr_act:00000000 $d
    {standard input}:599    .bss.CAN_RX_Inverter_count:00000000 CAN_RX_Inverter_count
    {standard input}:600    .bss.CAN_RX_Inverter_count:00000000 $d
    {standard input}:605    .bss.CAN_state_Ultrasonic:00000000 CAN_state_Ultrasonic
    {standard input}:606    .bss.CAN_state_Ultrasonic:00000000 $d
    {standard input}:612    .bss.distance_C:00000000 distance_C
    {standard input}:609    .bss.distance_C:00000000 $d
    {standard input}:619    .bss.distance_L:00000000 distance_L
    {standard input}:616    .bss.distance_L:00000000 $d
    {standard input}:626    .bss.distance_R:00000000 distance_R
    {standard input}:623    .bss.distance_R:00000000 $d
    {standard input}:632    .bss.RC_Signal_OK:00000000 RC_Signal_OK
    {standard input}:633    .bss.RC_Signal_OK:00000000 $d
    {standard input}:638    .bss.RC_Signal_not_OK_counter:00000000 RC_Signal_not_OK_counter
    {standard input}:639    .bss.RC_Signal_not_OK_counter:00000000 $d
    {standard input}:645    .bss.captured_time_Steering:00000000 captured_time_Steering
    {standard input}:642    .bss.captured_time_Steering:00000000 $d
    {standard input}:652    .bss.captured_time_Speed:00000000 captured_time_Speed
    {standard input}:649    .bss.captured_time_Speed:00000000 $d
    {standard input}:658    .bss.RC_no_Speed_data_counter:00000000 RC_no_Speed_data_counter
    {standard input}:659    .bss.RC_no_Speed_data_counter:00000000 $d
    {standard input}:664    .bss.RC_no_Steering_data_counter:00000000 RC_no_Steering_data_counter
    {standard input}:665    .bss.RC_no_Steering_data_counter:00000000 $d
    {standard input}:671    .bss.RC_Speed:00000000 RC_Speed
    {standard input}:668    .bss.RC_Speed:00000000 $d
    {standard input}:678    .bss.RC_Steering:00000000 RC_Steering
    {standard input}:675    .bss.RC_Steering:00000000 $d
    {standard input}:685    .data.RC_Speed_ns_to_mps:00000000 RC_Speed_ns_to_mps
    {standard input}:682    .data.RC_Speed_ns_to_mps:00000000 $d
    {standard input}:692    .data.RC_Steering_ns_to_deg:00000000 RC_Steering_ns_to_deg
    {standard input}:689    .data.RC_Steering_ns_to_deg:00000000 $d
    {standard input}:699    .bss.RC_gear_100us_counter:00000000 RC_gear_100us_counter
    {standard input}:696    .bss.RC_gear_100us_counter:00000000 $d
    {standard input}:706    .bss.RC_AUX1_100us_counter:00000000 RC_AUX1_100us_counter
    {standard input}:703    .bss.RC_AUX1_100us_counter:00000000 $d
    {standard input}:712    .data.RC_Gear_state:00000000 RC_Gear_state
    {standard input}:718    .data.RC_AUX1_state:00000000 RC_AUX1_state
    {standard input}:724    .data.RC_Gear_duty:00000000 RC_Gear_duty
    {standard input}:730    .data.RC_Gear_duty_OLD:00000000 RC_Gear_duty_OLD
    {standard input}:736    .data.RC_AUX1_duty:00000000 RC_AUX1_duty
    {standard input}:742    .data.RC_Speed_Stop:00000000 RC_Speed_Stop
    {standard input}:749    .bss.Steering_direction:00000000 Steering_direction
    {standard input}:746    .bss.Steering_direction:00000000 $d
    {standard input}:756    .bss.Driving_speed:00000000 Driving_speed
    {standard input}:753    .bss.Driving_speed:00000000 $d
                            *COM*:00000004 R_Turn
                            *COM*:00000004 Speed_ratio
    {standard input}:765    .bss.speed_fl:00000000 speed_fl
    {standard input}:762    .bss.speed_fl:00000000 $d
    {standard input}:772    .bss.speed_fr:00000000 speed_fr
    {standard input}:769    .bss.speed_fr:00000000 $d
    {standard input}:779    .bss.speed_rl:00000000 speed_rl
    {standard input}:776    .bss.speed_rl:00000000 $d
    {standard input}:786    .bss.speed_rr:00000000 speed_rr
    {standard input}:783    .bss.speed_rr:00000000 $d
    {standard input}:793    .bss.angle_fl:00000000 angle_fl
    {standard input}:790    .bss.angle_fl:00000000 $d
    {standard input}:800    .bss.angle_fr:00000000 angle_fr
    {standard input}:797    .bss.angle_fr:00000000 $d
    {standard input}:807    .bss.angle_rl:00000000 angle_rl
    {standard input}:804    .bss.angle_rl:00000000 $d
    {standard input}:814    .bss.angle_rr:00000000 angle_rr
    {standard input}:811    .bss.angle_rr:00000000 $d
    {standard input}:821    .bss.Speeds:00000000 Speeds
    {standard input}:818    .bss.Speeds:00000000 $d
    {standard input}:828    .bss.Steering_Angles:00000000 Steering_Angles
    {standard input}:825    .bss.Steering_Angles:00000000 $d
    {standard input}:835    .bss.Servo_PWMs:00000000 Servo_PWMs
    {standard input}:832    .bss.Servo_PWMs:00000000 $d
    {standard input}:842    .bss.Inveter_CAN_OK:00000000 Inveter_CAN_OK
    {standard input}:839    .bss.Inveter_CAN_OK:00000000 $d
    {standard input}:849    .bss.Actual_Speeds:00000000 Actual_Speeds
    {standard input}:846    .bss.Actual_Speeds:00000000 $d
    {standard input}:856    .bss.Actual_Distance:00000000 Actual_Distance
    {standard input}:853    .bss.Actual_Distance:00000000 $d
    {standard input}:859    .text.main:00000000 $t
    {standard input}:864    .text.main:00000000 main
    {standard input}:921    .text.main:00000040 $d
    {standard input}:941    .text.Steering_Function:00000000 $t
    {standard input}:946    .text.Steering_Function:00000000 Steering_Function
    {standard input}:1081   .rodata.Steering_Function:00000000 $d
    {standard input}:1346   .text.Steering_Function:000002f0 $d
    {standard input}:1373   .text.Steering_Function:00000354 $t
    {standard input}:1797   .text.Steering_Function:000006b8 $d
    {standard input}:1825   .text.Steering_Function:00000720 $t
    {standard input}:2265   .text.Steering_Function:00000aa0 $d
    {standard input}:2295   .text.Steering_Function:00000b10 $t
    {standard input}:2715   .text.Steering_Function:00000ddc $d
    {standard input}:2747   .text.IRQ4_Handler:00000000 $t
    {standard input}:2752   .text.IRQ4_Handler:00000000 IRQ4_Handler
    {standard input}:2871   .text.IRQ4_Handler:000000b8 $d
    {standard input}:2880   .text.IRQ3_Handler:00000000 $t
    {standard input}:2885   .text.IRQ3_Handler:00000000 IRQ3_Handler
    {standard input}:2939   .text.CAN_RX_Inverter_Read_Data:00000000 CAN_RX_Inverter_Read_Data
    {standard input}:2927   .text.IRQ3_Handler:00000030 $d
    {standard input}:2934   .text.CAN_RX_Inverter_Read_Data:00000000 $t
    {standard input}:3310   .text.CAN_RX_Inverter_Read_Data:0000026c $d
    {standard input}:3328   .text.Watchdog_Handler:00000000 $t
    {standard input}:3333   .text.Watchdog_Handler:00000000 Watchdog_Handler
    {standard input}:3358   .text.Watchdog_Handler:00000014 $d
    {standard input}:3363   .text.CAN_reset_distance:00000000 $t
    {standard input}:3368   .text.CAN_reset_distance:00000000 CAN_reset_distance
    {standard input}:3446   .text.CAN_reset_distance:00000070 $d
    {standard input}:3452   .text.CAN_send_Speeds:00000000 $t
    {standard input}:3457   .text.CAN_send_Speeds:00000000 CAN_send_Speeds
    {standard input}:3550   .text.CAN_send_Speeds:000000a8 $d
    {standard input}:3556   .text.IRQ8_Handler:00000000 $t
    {standard input}:3561   .text.IRQ8_Handler:00000000 IRQ8_Handler
    {standard input}:3604   .text.IRQ8_Handler:0000002c $d
    {standard input}:3613   .text.Steering_set_Angles:00000000 $t
    {standard input}:3618   .text.Steering_set_Angles:00000000 Steering_set_Angles
    {standard input}:3775   .text.Steering_set_Angles:00000104 $d
    {standard input}:3789   .text.RC_Recive:00000000 $t
    {standard input}:3794   .text.RC_Recive:00000000 RC_Recive
    {standard input}:4078   .text.RC_Recive:000001e8 $d
    {standard input}:4104   .text.IRQ12_Handler:00000000 $t
    {standard input}:4109   .text.IRQ12_Handler:00000000 IRQ12_Handler
    {standard input}:4228   .text.IRQ12_Handler:0000009c $d
    {standard input}:4239   .text.IRQ6_Handler:00000000 $t
    {standard input}:4244   .text.IRQ6_Handler:00000000 IRQ6_Handler
    {standard input}:4344   .text.IRQ6_Handler:0000007c $d
    {standard input}:4354   .rodata:00000000 $d
    {standard input}:4361   .text.IRQ7_Handler:00000000 $t
    {standard input}:4366   .text.IRQ7_Handler:00000000 IRQ7_Handler
    {standard input}:4664   .text.mode_led:00000000 mode_led
    {standard input}:4521   .text.IRQ7_Handler:000000e8 $d
    {standard input}:4537   .text.Servo_NP_setting:00000000 $t
    {standard input}:4542   .text.Servo_NP_setting:00000000 Servo_NP_setting
    {standard input}:4581   .text.Servo_NP_setting:00000028 $d
    {standard input}:4590   .text.average:00000000 $t
    {standard input}:4595   .text.average:00000000 average
    {standard input}:4659   .text.mode_led:00000000 $t
    {standard input}:4747   .text.mode_led:00000074 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
DAVE_Init
CAN_NODE_Init
CAN_NODE_0
__aeabi_fcmpgt
__aeabi_fcmplt
__aeabi_f2d
__aeabi_dcmplt
__aeabi_dcmpgt
__aeabi_ddiv
__aeabi_d2f
__aeabi_dadd
__aeabi_dmul
__aeabi_dsub
__aeabi_fmul
__aeabi_fdiv
__aeabi_fadd
tan
atan
CAN_NODE_MO_Receive
WATCHDOG_LED_BLUE
__aeabi_i2f
LED_CAN_ERROR
CAN_NODE_MO_UpdateData
CAN_NODE_MO_Transmit
__aeabi_f2iz
__aeabi_f2uiz
PWM_SetDutyCycle
PWM_servo_fl
PWM_servo_fr
PWM_servo_rl
PWM_servo_rr
__aeabi_ui2d
CAPTURE_Start
CAPTURE_GetCapturedTimeInNanoSec
CAPTURE_RC_Steering
CAPTURE_RC_Speed
RC_no_data_LED
RC_Connected
RC_AUX1
memcpy
CALC_TIME_INDICATOR
MODE_001
MODE_010
MODE_100
