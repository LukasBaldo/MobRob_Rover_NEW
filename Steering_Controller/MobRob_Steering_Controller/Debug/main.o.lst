   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,6
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "main.c"
  14              	 .text
  15              	.Ltext0:
  16              	 .cfi_sections .debug_frame
  17              	 .section .text.XMC_GPIO_SetOutputHigh,"ax",%progbits
  18              	 .align 2
  19              	 .code 16
  20              	 .thumb_func
  22              	XMC_GPIO_SetOutputHigh:
  23              	.LFB122:
  24              	 .file 1 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc/xmc_gpio.h"
   1:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
   2:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @file xmc_gpio.h
   3:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @date 2015-06-20
   4:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   5:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @cond
   6:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *****************************************************************************
   7:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   9:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * All rights reserved.
  11:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  12:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  14:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Permission is hereby granted, free of charge, to any person or organization
  15:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * obtaining a copy of the software and accompanying documentation covered by
  16:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * do so, all subject to the following:
  20:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  21:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * The copyright notices in the Software and this entire statement, including
  22:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * the above license grant, this restriction and the following disclaimer,
  23:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * must be included in all copies of the Software, in whole or in part, and
  24:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * all derivative works of the Software, unless such copies or derivative
  25:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * works are solely in the form of machine-executable object code generated by
  26:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * a source language processor.
  27:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  28:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * DEALINGS IN THE SOFTWARE.
  35:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  36:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * To improve the quality of the software, users are encouraged to share
  37:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * at XMCSupport@infineon.com.
  39:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *****************************************************************************
  40:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  41:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Change History
  42:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * --------------
  43:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  44:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-02-20:
  45:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Initial draft<br>
  46:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Documentation improved <br>
  47:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  48:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-06-20:
  49:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  50:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  51:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @endcond
  52:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  53:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  54:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
  55:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #ifndef XMC_GPIO_H
  56:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_H
  57:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
  58:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  59:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * HEADER FILES
  60:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  61:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
  62:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc_common.h"
  63:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
  64:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  65:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup XMClib XMC Peripheral Library
  66:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @{
  67:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  68:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
  69:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  70:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup GPIO
  71:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @brief General Purpose Input Output (GPIO) driver for the XMC microcontroller family.
  72:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  73:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * GPIO driver provide a generic and very flexible software interface for all standard digital I/O 
  74:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Each port slice has individual interfaces for the operation as General Purpose I/O and it furthe
  75:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * connectivity to the on-chip periphery and the control for the pad characteristics.
  76:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  77:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * The driver is divided into Input and Output mode.
  78:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  79:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Input mode features:
  80:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Configuration structure XMC_GPIO_CONFIG_t and initialization function XMC_GPIO_Init()
  81:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of weak pull-up or pull-down device. Configuration structure XMC_GPIO_MO
  82:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
  83:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of input hysteresis. XMC_GPIO_SetInputHysteresis()
  84:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  85:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  86:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  87:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Output mode features:
  88:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of push pull/open drain and Alternate output. Configuration structure XM
  89:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
  90:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of pad driver strength. Configuration structure XMC_GPIO_OUTPUT_STRENGTH
  91:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  92:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  93:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of initial output level. Configuration structure XMC_GPIO_OUTPUT_LEVEL_t
  94:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  95:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *@{
  96:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  97:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
  98:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  99:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * MACROS
 100:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 101:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 102:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Pos PORT0_IOCR0_PC0_Pos
 103:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Msk PORT0_IOCR0_PC0_Msk
 104:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 105:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Size 				(8U)
 106:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 107:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 108:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_OUTPUT_LEVEL(level) ((level == XMC_GPIO_OUTPUT_LEVEL_LOW) || \
 109:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****                                             (level == XMC_GPIO_OUTPUT_LEVEL_HIGH))
 110:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 111:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_HWCTRL(hwctrl) ((hwctrl == XMC_GPIO_HWCTRL_DISABLED) || \
 112:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL1) || \
 113:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL2))
 114:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 115:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 116:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * ENUMS
 117:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 118:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 119:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 120:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 121:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines output level of a pin. Use type \a XMC_GPIO_OUTPUT_LEVEL_t for this enum.
 122:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 123:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_OUTPUT_LEVEL
 124:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** {
 125:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_LOW  = 0x10000U, /**<  Reset bit */
 126:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_HIGH = 0x1U, 	/**< Set bit  */
 127:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_OUTPUT_LEVEL_t;
 128:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 129:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 130:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines direct hardware control characteristics of the pin . Use type \a XMC_GPIO_HWCTRL_t for t
 131:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 132:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_HWCTRL
 133:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** {
 134:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_DISABLED     = 0x0U, /**<  Software control only */
 135:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL1  = 0x1U, /**<  HWI0/HWO0 control path can override the software confi
 136:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL2  = 0x2U  /**<  HWI1/HWO1 control path can override the software confi
 137:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_HWCTRL_t;
 138:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 139:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 140:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * DEVICE FAMILY EXTENSIONS
 141:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 142:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 143:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #if UC_FAMILY == XMC1
 144:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc1_gpio.h"
 145:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #elif UC_FAMILY == XMC4
 146:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc4_gpio.h"
 147:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #else
 148:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #error "xmc_gpio.h: family device not supported"
 149:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 150:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 151:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 152:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * API PROTOTYPES
 153:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 154:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 155:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #ifdef __cplusplus
 156:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** extern "C" {
 157:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 158:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 159:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 160:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 161:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	  Constant pointer pointing to GPIO port, to access port registers like Pn_OUT,Pn_O
 162:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	  Port pin number.
 163:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  config GPIO configuration data structure. Refer data structure @ref XMC_GPIO_CONFIG_t fo
 164:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 165:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 166:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 167:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 168:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
 169:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,hysteresis, push pull
 170:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for a selected \a po
 171:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \a config provides selected I/O settings. It configures hardware registers Pn_IOCR,Pn_OUT, Pn_OM
 172:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 173:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
 174:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,push pull /open drain
 175:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for selected \a port
 176:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * It configures hardware registers Pn_IOCR,Pn_OUT,Pn_OMR,Pn_PDISC and Pn_PDR.\n
 177:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 178:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 179:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 180:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 181:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 182:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 183:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * This API is called in definition of DAVE_init by code generation and therefore should not be exp
 184:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * for the normal operation. Use other APIs only after DAVE_init is called successfully (returns DA
 185:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 186:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 187:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 188:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 189:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 190:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_Init(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_CONFIG_t *const c
 191:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 192:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 193:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 194:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	Constant pointer pointing to GPIO port, to access hardware register Pn_IOCR.
 195:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 196:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  mode input / output functionality selection. Refer @ref XMC_GPIO_MODE_t for valid values
 197:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 198:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 199:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 200:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 201:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets digital input and output driver functionality and characteristics of a GPIO port pin. It co
 202:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * registers Pn_IOCR. \a mode is initially configured during initialization in XMC_GPIO_Init(). Cal
 203:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * the port direction functionality as needed later in the program.
 204:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 205:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 206:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 207:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 208:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 209:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 210:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_SetMode(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_MODE_t mode);
 211:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 212:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 213:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 214:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 215:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	 Constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 216:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	 Port pin number.
 217:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  level output level selection. Refer @ref XMC_GPIO_OUTPUT_LEVEL_t for valid values.
 218:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 219:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 220:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 221:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 222:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Set port pin output level to high or low.It configures hardware registers Pn_OMR.\a level is ini
 223:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * configured during initialization in XMC_GPIO_Init(). Call this API to alter output level as need
 224:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 225:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 226:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 227:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 228:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 229:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 230:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 231:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 232:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 233:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 234:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLevel(XMC_GPIO_PORT_t *const port, const uint8_t pin, const 
 235:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** {
 236:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 237:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid output level", XMC_GPIO_CHECK_OUTPUT_LEVEL(level));
 238:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 239:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)level << pin;
 240:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** }
 241:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 242:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 243:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 244:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 245:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 246:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 247:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 248:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 249:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 250:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *  Sets port pin output to high. It configures hardware registers Pn_OMR.
 251:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 252:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *  \par<b>Related APIs:</b><BR>
 253:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputLow()
 254:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 255:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 256:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().\n
 257:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 258:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 259:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 260:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 261:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputHigh(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 262:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** {
  25              	 .loc 1 262 0
  26              	 .cfi_startproc
  27 0000 80B5     	 push {r7,lr}
  28              	.LCFI0:
  29              	 .cfi_def_cfa_offset 8
  30              	 .cfi_offset 7,-8
  31              	 .cfi_offset 14,-4
  32 0002 82B0     	 sub sp,sp,#8
  33              	.LCFI1:
  34              	 .cfi_def_cfa_offset 16
  35 0004 00AF     	 add r7,sp,#0
  36              	.LCFI2:
  37              	 .cfi_def_cfa_register 7
  38 0006 7860     	 str r0,[r7,#4]
  39 0008 0A1C     	 mov r2,r1
  40 000a FB1C     	 add r3,r7,#3
  41 000c 1A70     	 strb r2,[r3]
 263:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputHigh: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 264:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 265:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)0x1U << pin;
  42              	 .loc 1 265 0
  43 000e FB1C     	 add r3,r7,#3
  44 0010 1B78     	 ldrb r3,[r3]
  45 0012 0122     	 mov r2,#1
  46 0014 9A40     	 lsl r2,r2,r3
  47 0016 7B68     	 ldr r3,[r7,#4]
  48 0018 5A60     	 str r2,[r3,#4]
 266:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** }
  49              	 .loc 1 266 0
  50 001a BD46     	 mov sp,r7
  51 001c 02B0     	 add sp,sp,#8
  52              	 
  53 001e 80BD     	 pop {r7,pc}
  54              	 .cfi_endproc
  55              	.LFE122:
  57              	 .section .text.XMC_GPIO_SetOutputLow,"ax",%progbits
  58              	 .align 2
  59              	 .code 16
  60              	 .thumb_func
  62              	XMC_GPIO_SetOutputLow:
  63              	.LFB123:
 267:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 268:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 269:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 270:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 271:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	port pin number.
 272:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 273:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return  None
 274:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 275:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Description:</b><br>
 276:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets port pin output to low. It configures hardware registers Pn_OMR.\n
 277:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 278:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>>
 279:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh()
 280:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 281:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Note:</b><br>
 282:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 283:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 284:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 285:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 286:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 287:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLow(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 288:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** {
  64              	 .loc 1 288 0
  65              	 .cfi_startproc
  66 0000 80B5     	 push {r7,lr}
  67              	.LCFI3:
  68              	 .cfi_def_cfa_offset 8
  69              	 .cfi_offset 7,-8
  70              	 .cfi_offset 14,-4
  71 0002 82B0     	 sub sp,sp,#8
  72              	.LCFI4:
  73              	 .cfi_def_cfa_offset 16
  74 0004 00AF     	 add r7,sp,#0
  75              	.LCFI5:
  76              	 .cfi_def_cfa_register 7
  77 0006 7860     	 str r0,[r7,#4]
  78 0008 0A1C     	 mov r2,r1
  79 000a FB1C     	 add r3,r7,#3
  80 000c 1A70     	 strb r2,[r3]
 289:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLow: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 290:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 291:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10000U << pin;
  81              	 .loc 1 291 0
  82 000e FB1C     	 add r3,r7,#3
  83 0010 1B78     	 ldrb r3,[r3]
  84 0012 8022     	 mov r2,#128
  85 0014 5202     	 lsl r2,r2,#9
  86 0016 9A40     	 lsl r2,r2,r3
  87 0018 7B68     	 ldr r3,[r7,#4]
  88 001a 5A60     	 str r2,[r3,#4]
 292:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** }
  89              	 .loc 1 292 0
  90 001c BD46     	 mov sp,r7
  91 001e 02B0     	 add sp,sp,#8
  92              	 
  93 0020 80BD     	 pop {r7,pc}
  94              	 .cfi_endproc
  95              	.LFE123:
  97 0022 C046     	 .section .text.XMC_GPIO_GetInput,"ax",%progbits
  98              	 .align 2
  99              	 .code 16
 100              	 .thumb_func
 102              	XMC_GPIO_GetInput:
 103              	.LFB125:
 293:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 294:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 295:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 296:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 297:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param pin  port pin number.
 298:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 299:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 300:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 301:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 302:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Configures port pin output to Toggle. It configures hardware registers Pn_OMR.
 303:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 304:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 305:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 306:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 307:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 308:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode(). Regis
 309:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * and does not contain any flip-flop. A read action delivers the value of 0.
 310:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 311:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 312:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 313:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_ToggleOutput(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 314:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** {
 315:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_ToggleOutput: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 316:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 317:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10001U << pin;
 318:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** }
 319:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 320:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 321:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 322:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param port constant pointer pointing to GPIO port, to access hardware register Pn_IN.
 323:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param pin  Port pin number.
 324:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 325:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return uint32_t pin logic level status.
 326:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 327:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Description:</b><br>
 328:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Reads the Pn_IN register and returns the current logical value at the GPIO pin.
 329:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 330:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 331:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * None
 332:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 333:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 334:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to input mode using XMC_GPIO_SetMode().
 335:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 336:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 337:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 338:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE uint32_t XMC_GPIO_GetInput(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 339:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** {
 104              	 .loc 1 339 0
 105              	 .cfi_startproc
 106 0000 80B5     	 push {r7,lr}
 107              	.LCFI6:
 108              	 .cfi_def_cfa_offset 8
 109              	 .cfi_offset 7,-8
 110              	 .cfi_offset 14,-4
 111 0002 82B0     	 sub sp,sp,#8
 112              	.LCFI7:
 113              	 .cfi_def_cfa_offset 16
 114 0004 00AF     	 add r7,sp,#0
 115              	.LCFI8:
 116              	 .cfi_def_cfa_register 7
 117 0006 7860     	 str r0,[r7,#4]
 118 0008 0A1C     	 mov r2,r1
 119 000a FB1C     	 add r3,r7,#3
 120 000c 1A70     	 strb r2,[r3]
 340:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_GetInput: Invalid port", XMC_GPIO_CHECK_PORT(port));
 341:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 342:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   return (((port->IN) >> pin) & 0x1U);
 121              	 .loc 1 342 0
 122 000e 7B68     	 ldr r3,[r7,#4]
 123 0010 5A6A     	 ldr r2,[r3,#36]
 124 0012 FB1C     	 add r3,r7,#3
 125 0014 1B78     	 ldrb r3,[r3]
 126 0016 DA40     	 lsr r2,r2,r3
 127 0018 131C     	 mov r3,r2
 128 001a 0122     	 mov r2,#1
 129 001c 1340     	 and r3,r2
 343:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** }
 130              	 .loc 1 343 0
 131 001e 181C     	 mov r0,r3
 132 0020 BD46     	 mov sp,r7
 133 0022 02B0     	 add sp,sp,#8
 134              	 
 135 0024 80BD     	 pop {r7,pc}
 136              	 .cfi_endproc
 137              	.LFE125:
 139 0026 C046     	 .section .text.DIGITAL_IO_SetOutputHigh,"ax",%progbits
 140              	 .align 2
 141              	 .code 16
 142              	 .thumb_func
 144              	DIGITAL_IO_SetOutputHigh:
 145              	.LFB195:
 146              	 .file 2 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO/digital_io.h"
   1:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /*
   2:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   3:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @file digital_io.h
   4:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @date 2021-01-08
   5:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   6:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * NOTE:
   7:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   8:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   9:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @cond
  10:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  11:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DIGITAL_IO v4.0.18 - The DIGITAL_IO APP is used to configure a port pin as digital Input/Output.
  12:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  13:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  14:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * All rights reserved.
  15:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  16:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  17:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * following conditions are met:
  18:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  19:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  20:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   disclaimer.
  21:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  22:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  23:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  24:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  25:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  26:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   products derived from this software without specific prior written permission.
  27:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  28:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  29:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  30:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  31:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  32:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  33:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  34:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  36:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  37:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * with Infineon Technologies AG (dave@infineon.com).
  38:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  39:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  40:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Change History
  41:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * --------------
  42:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  43:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-02-16
  44:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Initial version
  45:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  46:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-04-22
  47:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - XMC_ASSERT is added in static inline functions.<br>
  48:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  49:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-06-20
  50:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Version check added for XMCLib dependency.<br>
  51:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  52:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-12-22
  53:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Added hardware controlled IO feature.
  54:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2016-07-08:
  55:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Fixed incorrect case for an included header.<br>
  56:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2021-01-08:
  57:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Modified check for minimum XMCLib version
  58:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  59:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @endcond
  60:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  61:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  */
  62:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  63:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
  64:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * HEADER FILES
  65:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  66:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  67:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #ifndef DIGITAL_IO_H
  68:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #define DIGITAL_IO_H
  69:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  70:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #include "xmc_gpio.h"
  71:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #include "DAVE_Common.h"
  72:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #include "digital_io_conf.h"
  73:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  74:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
  75:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * MACROS
  76:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  77:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #define DIGITAL_IO_XMC_LIB_MAJOR_VERSION 2
  78:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #define DIGITAL_IO_XMC_LIB_MINOR_VERSION 0
  79:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #define DIGITAL_IO_XMC_LIB_PATCH_VERSION 0
  80:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  81:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #if !((XMC_LIB_MAJOR_VERSION > DIGITAL_IO_XMC_LIB_MAJOR_VERSION) ||\
  82:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****       ((XMC_LIB_MAJOR_VERSION == DIGITAL_IO_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION > DIGI
  83:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****       ((XMC_LIB_MAJOR_VERSION == DIGITAL_IO_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION == DIG
  84:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #error "DIGITAL_IO requires XMC Peripheral Library v2.0.0 or higher"
  85:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #endif
  86:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  87:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  /*************************************************************************************************
  88:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * ENUMS
  89:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  90:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  91:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
  92:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_enumerations
  93:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
  94:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
  95:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  96:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
  97:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Initialization status of DIGITAL_IO APP.
  98:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
  99:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** typedef enum DIGITAL_IO_STATUS
 100:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 101:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   DIGITAL_IO_STATUS_OK = 0U,/**< 0=Status OK */
 102:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   DIGITAL_IO_STATUS_FAILURE = 1U/**< 1=Status Failed */
 103:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** } DIGITAL_IO_STATUS_t;
 104:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 105:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 106:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @}
 107:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 108:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 109:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
 110:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DATA STRUCTURES
 111:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
 112:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 113:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_datastructures
 114:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
 115:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 116:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 117:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 118:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Initialization data structure of DIGITAL_IO APP
 119:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 120:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** typedef struct DIGITAL_IO
 121:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 122:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_PORT_t *const gpio_port;             /**< port number */
 123:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   const XMC_GPIO_CONFIG_t gpio_config;          /**< mode, initial output level and pad driver stre
 124:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   const uint8_t gpio_pin;                       /**< pin number */
 125:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   const XMC_GPIO_HWCTRL_t hwctrl;               /**< Hardware port control */
 126:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** } DIGITAL_IO_t;
 127:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 128:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 129:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 130:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @}
 131:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 132:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 133:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 134:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
 135:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * API Prototypes
 136:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
 137:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 138:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 139:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #ifdef __cplusplus
 140:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** extern "C" {
 141:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #endif
 142:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 143:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 144:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_apidoc
 145:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
 146:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 147:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 148:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 149:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 150:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 151:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Get DIGITAL_IO APP version
 152:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return DAVE_APP_VERSION_t APP version information (major, minor and patch number)
 153:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 154:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description: </b><br>
 155:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * The function can be used to check application software compatibility with a
 156:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * specific version of the APP.
 157:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 158:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 159:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 160:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 161:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include "DAVE.h"
 162:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 163:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 164:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 165:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t init_status;
 166:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_APP_VERSION_t version;
 167:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 168:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   // Initialize DIGITAL_IO APP:
 169:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   // DIGITAL_IO_Init() is called from within DAVE_Init().
 170:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   init_status = DAVE_Init();
 171:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(init_status == DAVE_STATUS_SUCCESS)
 172:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 173:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     version = DIGITAL_IO_GetAppVersion();
 174:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     if (version.major != 4U) {
 175:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // Probably, not the right version.
 176:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 177:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 178:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 179:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // More code here
 180:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1) {
 181:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 182:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 183:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     return (1);
 184:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  }
 185:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @endcode<BR>
 186:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 187:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 188:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** DAVE_APP_VERSION_t DIGITAL_IO_GetAppVersion(void);
 189:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 190:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 191:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 192:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to initialize the port pin as per UI settings.
 193:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 194:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return DIGITAL_IO_STATUS_t DIGITAL_IO APP status. Refer @ref DIGITAL_IO_STATUS_t structure for d
 195:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 196:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 197:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function initializes GPIO port registers IOCR,PDISC,OMR,PDR/PHCR to configure pin direction,
 198:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * and pad driver strength/hysteresis.
 199:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 200:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 201:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * None
 202:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 203:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 204:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 205:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include "DAVE.h" //Declarations from DAVE Code Generation (includes SFR declaration)
 206:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 207:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 208:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 209:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 210:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 211:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 212:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 213:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 214:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 215:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 216:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 217:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 218:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1U)
 219:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 220:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 221:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 222:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 223:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 224:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 225:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 226:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return 1U;
 227:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  }
 228:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 229:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 230:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 231:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** DIGITAL_IO_STATUS_t DIGITAL_IO_Init(const DIGITAL_IO_t *const handler);
 232:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 233:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 234:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 235:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to set port pin high.
 236:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 237:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return None
 238:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 239:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 240:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to make port pin to high level
 241:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 242:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 243:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  DIGITAL_IO_SetOutputLow()
 244:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 245:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 246:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 247:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include "DAVE.h" //Declarations from DAVE Code Generation (includes SFR declaration)
 248:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 249:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 250:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 251:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 252:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 253:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 254:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 255:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 256:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 257:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 258:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 259:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 260:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1U)
 261:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 262:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 263:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 264:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 265:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DIGITAL_IO_SetOutputHigh(&DIGITAL_IO_0);
 266:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 267:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 268:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // Add application code here
 269:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 270:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 271:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 272:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 273:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 274:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 275:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 276:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_SetOutputHigh(const DIGITAL_IO_t *const handler)
 277:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 147              	 .loc 2 277 0
 148              	 .cfi_startproc
 149 0000 80B5     	 push {r7,lr}
 150              	.LCFI9:
 151              	 .cfi_def_cfa_offset 8
 152              	 .cfi_offset 7,-8
 153              	 .cfi_offset 14,-4
 154 0002 82B0     	 sub sp,sp,#8
 155              	.LCFI10:
 156              	 .cfi_def_cfa_offset 16
 157 0004 00AF     	 add r7,sp,#0
 158              	.LCFI11:
 159              	 .cfi_def_cfa_register 7
 160 0006 7860     	 str r0,[r7,#4]
 278:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_SetOutputHigh: handler null pointer", handler != NULL);
 279:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_SetOutputHigh(handler->gpio_port, handler->gpio_pin);
 161              	 .loc 2 279 0
 162 0008 7B68     	 ldr r3,[r7,#4]
 163 000a 1A68     	 ldr r2,[r3]
 164 000c 7B68     	 ldr r3,[r7,#4]
 165 000e 1B7B     	 ldrb r3,[r3,#12]
 166 0010 101C     	 mov r0,r2
 167 0012 191C     	 mov r1,r3
 168 0014 FFF7FEFF 	 bl XMC_GPIO_SetOutputHigh
 280:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 169              	 .loc 2 280 0
 170 0018 BD46     	 mov sp,r7
 171 001a 02B0     	 add sp,sp,#8
 172              	 
 173 001c 80BD     	 pop {r7,pc}
 174              	 .cfi_endproc
 175              	.LFE195:
 177 001e C046     	 .section .text.DIGITAL_IO_SetOutputLow,"ax",%progbits
 178              	 .align 2
 179              	 .code 16
 180              	 .thumb_func
 182              	DIGITAL_IO_SetOutputLow:
 183              	.LFB196:
 281:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 282:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 283:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to reset port pin.
 284:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 285:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return None
 286:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 287:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 288:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to make port pin to low level.
 289:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 290:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 291:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * DIGITAL_IO_SetOutputHigh()
 292:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 293:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 294:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 295:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  #include "DAVE.h" //Declarations from DAVE Code Generation (includes SFR declaration)
 296:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 297:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  int main(void)
 298:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  {
 299:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    DAVE_STATUS_t status;
 300:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_I
 301:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    if(status == DAVE_STATUS_SUCCESS)
 302:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 303:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG("DAVE Apps initialization success\n");
 304:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 305:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    else
 306:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 307:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 308:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *      while(1U)
 309:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *      {
 310:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *      }
 311:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 312:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    //Placeholder for user application code. The while loop below can be replaced with user applic
 313:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    DIGITAL_IO_SetOutputLow(&DIGITAL_IO_0);
 314:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    while(1U)
 315:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 316:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *      // Add application code here
 317:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 318:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 319:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 320:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 321:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 322:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 323:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 324:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_SetOutputLow(const DIGITAL_IO_t *const handler)
 325:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 184              	 .loc 2 325 0
 185              	 .cfi_startproc
 186 0000 80B5     	 push {r7,lr}
 187              	.LCFI12:
 188              	 .cfi_def_cfa_offset 8
 189              	 .cfi_offset 7,-8
 190              	 .cfi_offset 14,-4
 191 0002 82B0     	 sub sp,sp,#8
 192              	.LCFI13:
 193              	 .cfi_def_cfa_offset 16
 194 0004 00AF     	 add r7,sp,#0
 195              	.LCFI14:
 196              	 .cfi_def_cfa_register 7
 197 0006 7860     	 str r0,[r7,#4]
 326:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_SetOutputLow: handler null pointer", handler != NULL);
 327:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_SetOutputLow(handler->gpio_port,handler->gpio_pin);
 198              	 .loc 2 327 0
 199 0008 7B68     	 ldr r3,[r7,#4]
 200 000a 1A68     	 ldr r2,[r3]
 201 000c 7B68     	 ldr r3,[r7,#4]
 202 000e 1B7B     	 ldrb r3,[r3,#12]
 203 0010 101C     	 mov r0,r2
 204 0012 191C     	 mov r1,r3
 205 0014 FFF7FEFF 	 bl XMC_GPIO_SetOutputLow
 328:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 206              	 .loc 2 328 0
 207 0018 BD46     	 mov sp,r7
 208 001a 02B0     	 add sp,sp,#8
 209              	 
 210 001c 80BD     	 pop {r7,pc}
 211              	 .cfi_endproc
 212              	.LFE196:
 214 001e C046     	 .section .text.PIN_INTERRUPT_GetPinValue,"ax",%progbits
 215              	 .align 2
 216              	 .code 16
 217              	 .thumb_func
 219              	PIN_INTERRUPT_GetPinValue:
 220              	.LFB205:
 221              	 .file 3 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT/pin_interrupt.h"
   1:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
   2:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @file pin_interrupt.h
   3:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @date 2021-01-08
   4:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
   5:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * NOTE:
   6:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
   8:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @cond
   9:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
  10:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * PIN_INTERRUPT v4.0.4 - The PIN_INTERRUPT APP invokes user interrupt handler in a response to ris
  11:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                        edge event signal on a pin.
  12:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
  13:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * Copyright (c) 2016-2020, Infineon Technologies AG
  14:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * All rights reserved.                        
  15:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                                             
  16:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  17:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * following conditions are met:   
  18:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                                                                              
  19:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  20:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   disclaimer.                        
  21:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * 
  22:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  23:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   disclaimer in the documentation and/or other materials provided with the distribution.     
  24:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                         
  25:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  26:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   products derived from this software without specific prior written permission. 
  27:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                                             
  28:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  29:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  30:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  31:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  32:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  33:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  34:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.    
  35:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                                                                              
  36:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  37:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * with Infineon Technologies AG (dave@infineon.com).         
  38:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
  39:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
  40:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * Change History
  41:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * --------------
  42:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * 2015-12-03:
  43:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     - Initial version for DAVEv4. <BR>
  44:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * 
  45:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * 2021-01-08:
  46:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     - Modified check for minimum XMCLib version
  47:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
  48:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @endcond 
  49:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
  50:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
  51:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  52:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #ifndef PIN_INTERRUPT_H
  53:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #define PIN_INTERRUPT_H
  54:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  55:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**************************************************************************************************
  56:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * HEADER FILES                                                                                    
  57:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
  58:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #if (UC_SERIES == XMC14)
  59:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #include "xmc_scu.h"
  60:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #endif
  61:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #include "xmc_gpio.h"
  62:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #include "xmc_eru.h"
  63:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  64:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #include "DAVE_Common.h"
  65:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #include "pin_interrupt_conf.h"
  66:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  67:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**************************************************************************************************
  68:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * MACROS                                                                                          
  69:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
  70:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #define PIN_INTERRUPT_XMC_LIB_MAJOR_VERSION 2
  71:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #define PIN_INTERRUPT_XMC_LIB_MINOR_VERSION 1
  72:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #define PIN_INTERRUPT_XMC_LIB_PATCH_VERSION 6
  73:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  74:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #if !((XMC_LIB_MAJOR_VERSION > PIN_INTERRUPT_XMC_LIB_MAJOR_VERSION) ||\
  75:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****       ((XMC_LIB_MAJOR_VERSION == PIN_INTERRUPT_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION > P
  76:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****       ((XMC_LIB_MAJOR_VERSION == PIN_INTERRUPT_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION == 
  77:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #error "PIN_INTERRUPT requires XMC Peripheral Library v2.1.6 or higher"
  78:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #endif
  79:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  80:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
  81:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @ingroup App_publicparam
  82:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @{
  83:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
  84:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
  85:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  @brief Initialization data structure for PIN_INTERRUPT APP
  86:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
  87:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  88:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
  89:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @}
  90:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
  91:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  92:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  /*************************************************************************************************
  93:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * ENUMS
  94:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
  95:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
  96:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @ingroup PIN_INTERRUPT_enumerations
  97:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @{
  98:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
  99:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /*
 100:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief enumeration for PIN_INTERRUPT APP
 101:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 102:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** typedef enum PIN_INTERRUPT_STATUS
 103:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
 104:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_STATUS_SUCCESS = 0U,        /**<APP initialization is success */
 105:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_STATUS_FAILURE = 1U         /**<APP initialization is failure */
 106:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** } PIN_INTERRUPT_STATUS_t;
 107:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 108:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 109:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 110:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * Defines trigger edge for the event generation by ETLx (Event Trigger Logic, x = [0 to 3]) unit, 
 111:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * from ERSx(Event request source, x = [0 to 3]) unit.
 112:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 113:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** typedef enum PIN_INTERRUPT_EDGE
 114:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
 115:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_EDGE_NONE = 0U, /**< no event enabled */
 116:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_EDGE_RISING = 1U,   /**< detection of rising edge generates the event */
 117:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_EDGE_FALLING = 2U,  /**< detection of falling edge generates the event */
 118:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_EDGE_BOTH = 3U      /**< detection of either edges generates the event */
 119:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** } PIN_INTERRUPT_EDGE_t;
 120:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 121:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @}
 122:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 123:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 124:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**************************************************************************************************
 125:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * DATA STRUCTURES
 126:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** ***************************************************************************************************
 127:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 128:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @ingroup PIN_INTERRUPT_datastructures
 129:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @{
 130:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 131:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 132:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 133:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief Configuration structure for PIN_INTERRUPT APP
 134:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 135:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** typedef struct PIN_INTERRUPT
 136:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
 137:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_ERU_t *eru;  /**< Mapped ERU module */
 138:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_GPIO_PORT_t *port;  /**< Mapped port number */
 139:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_GPIO_CONFIG_t gpio_config;   /**< Initializes the input pin characteristics */
 140:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_ERU_ETL_CONFIG_t etl_config;  /**< reference to ERUx_ETLy (x = [0..1], y = [0..4])
 141:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****                                                       module configuration */
 142:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #if (UC_SERIES == XMC14)
 143:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_SCU_IRQCTRL_t irqctrl;  /**< selects the interrupt source for a NVIC interrupt node*/
 144:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #endif
 145:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   IRQn_Type IRQn;       /**< Mapped NVIC Node */
 146:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   uint8_t irq_priority; 	  /**< Node Interrupt Priority */
 147:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #if (UC_FAMILY == XMC4)
 148:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   uint8_t irq_subpriority;  /**< Node Interrupt SubPriority only valid for XMC4x */
 149:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #endif
 150:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   uint8_t etl; /*< ETLx channel (x = [0..3])*/
 151:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   uint8_t ogu; /*< OGUy channel (y = [0..3])*/
 152:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   uint8_t pin; /*< Mapped pin number */
 153:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   bool enable_at_init;  /**< Interrupt enable for Node at initialization*/
 154:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** } PIN_INTERRUPT_t;
 155:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 156:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @}
 157:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 158:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 159:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #ifdef __cplusplus
 160:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** extern "C" {
 161:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #endif
 162:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**************************************************************************************************
 163:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * API Prototypes
 164:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
 165:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 166:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @ingroup PIN_INTERRUPT_apidoc
 167:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @{
 168:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 169:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 170:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief Get PIN_INTERRUPT APP version
 171:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @return DAVE_APP_VERSION_t APP version information (major, minor and patch number)
 172:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 173:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * \par<b>Description: </b><br>
 174:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * The function can be used to check application software compatibility with a
 175:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * specific version of the APP.
 176:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 177:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * \par<b>Example Usage:</b><br>
 178:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 179:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @code
 180:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * #include "DAVE.h"
 181:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 182:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * int main(void) 
 183:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * {
 184:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   DAVE_STATUS_t init_status;
 185:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   DAVE_APP_VERSION_t version;
 186:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 187:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   // Initialize PIN_INTERRUPT APP:
 188:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   // PIN_INTERRUPT_Init() is called from within DAVE_Init().
 189:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   init_status = DAVE_Init();
 190:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 191:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   if (DAVE_STATUS_SUCCESS == init_status)
 192:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   {
 193:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     version = PIN_INTERRUPT_GetAppVersion();
 194:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     if (version.major != 4U) {
 195:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *       // Probably, not the right version.
 196:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     }
 197:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   }
 198:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 199:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   // More code here
 200:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   while(1)
 201:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   {
 202:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   }
 203:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   return (1);
 204:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * }
 205:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @endcode<BR>
 206:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 207:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** DAVE_APP_VERSION_t PIN_INTERRUPT_GetAppVersion(void);
 208:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 209:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 210:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief Initializes a PIN_INTERRUPT APP instance
 211:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @param handle Pointer pointing to APP data structure. Refer @ref PIN_INTERRUPT_t for details.
 212:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @return
 213:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *            PIN_INTERRUPT_STATUS_SUCCESS             : if initialization is successful\n
 214:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *            PIN_INTERRUPT_STATUS_FAILURE             : if initialization is failed
 215:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 216:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * \par<b>Description:</b><br>
 217:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * PIN_INTERRUPT_Init API is called during initialization of DAVE APPS. This API Initializes input 
 218:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * ERU and OGU hardware module initialization, Configures NVIC node and its priority in order to ge
 219:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 220:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * \par<b>Example Usage:</b><br>
 221:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 222:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @code
 223:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * #include "DAVE.h"
 224:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 225:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * int main(void)
 226:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * {
 227:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   DAVE_STATUS_t status;
 228:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 229:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   status = DAVE_Init();  //  PIN_INTERRUPT_Init API is called during initialization of DAVE APPS
 230:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   if (DAVE_STATUS_SUCCESS == status)
 231:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   {
 232:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     // user code
 233:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 234:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     while(1)
 235:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     {
 236:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 237:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     }
 238:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   }
 239:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   return (1);
 240:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * }
 241:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 242:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @endcode<BR>
 243:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 244:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** PIN_INTERRUPT_STATUS_t PIN_INTERRUPT_Init(const PIN_INTERRUPT_t *const handle);
 245:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 246:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 247:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief Enables the IRQ.
 248:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @param handle Pointer pointing to APP data structure. Refer @ref PIN_INTERRUPT_t for details.
 249:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @return None
 250:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * <BR><P ALIGN="LEFT"><B>Example:</B>
 251:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 252:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @code
 253:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  #include "DAVE.h"
 254:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 255:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  int main(void)
 256:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  {
 257:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    DAVE_STATUS_t status;
 258:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 259:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    status = DAVE_Init();  //  PIN_INTERRUPT_Init API is called during initialization of DAVE APP
 260:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    if (DAVE_STATUS_SUCCESS == status)
 261:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    {
 262:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *      // user code
 263:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 264:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *      PIN_INTERRUPT_Enable(&PIN_INTERRUPT_0);
 265:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *      while(1)
 266:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *      {}
 267:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    }
 268:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 269:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    return (1);
 270:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  }
 271:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @endcode<BR> </p>
 272:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 273:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** __STATIC_INLINE void PIN_INTERRUPT_Enable(const PIN_INTERRUPT_t *const handle)
 274:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
 275:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_ASSERT("PIN_INTERRUPT_Enable: Handler null pointer", handle != NULL);
 276:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   NVIC_EnableIRQ(handle->IRQn);
 277:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** }
 278:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 279:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 280:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief Disables the IRQ.
 281:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @param handle Pointer pointing to APP data structure. Refer @ref PIN_INTERRUPT_t for details.
 282:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @return None
 283:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * <BR><P ALIGN="LEFT"><B>Example:</B>
 284:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 285:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @code
 286:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  #include "DAVE.h"
 287:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 288:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  int main(void)
 289:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  {
 290:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 291:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    DAVE_STATUS_t status;
 292:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 293:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    status = DAVE_Init();  //  PIN_INTERRUPT_Init API is called during initialization of DAVE APP
 294:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    if(DAVE_STATUS_SUCCESS == status)
 295:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    {
 296:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *      // user code
 297:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 298:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *      PIN_INTERRUPT_Disable(&PIN_INTERRUPT_0);
 299:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *      while(1)
 300:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *      {}
 301:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    }
 302:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 303:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    return (1);
 304:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 305:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  }
 306:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @endcode<BR> </p>
 307:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 308:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** __STATIC_INLINE void PIN_INTERRUPT_Disable(const PIN_INTERRUPT_t *const handle)
 309:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
 310:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_ASSERT("PIN_INTERRUPT_Disable: Handler null pointer", handle != NULL);
 311:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   NVIC_DisableIRQ(handle->IRQn);
 312:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** }
 313:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 314:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 315:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * @brief Read input level of port pin.
 316:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * @param handle Pointer pointing to APP data structure. Refer @ref PIN_INTERRUPT_t for details.
 317:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * @return uint32_t input logic level. Range:0-1
 318:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *
 319:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * \par<b>Description:</b><br>
 320:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * This function reads the Pn_IN register and returns the current logical value at the GPIO pin.
 321:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *
 322:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *
 323:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * Example Usage:
 324:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * @code
 325:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * #include "DAVE.h"//Declarations from DAVE Code Generation (includes SFR declaration)
 326:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *
 327:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * int main(void)
 328:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * {
 329:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   DAVE_STATUS_t status;
 330:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   uint32_t pin_status;
 331:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   status = DAVE_Init();   // (DAVE_STATUS_t)PIN_INTERRUPT_Init(&PIN_INTERRUPT_0) is called within
 332:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   
 333:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   if (status == DAVE_STATUS_SUCCESS)
 334:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   {
 335:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 336:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   }
 337:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   else
 338:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   {
 339:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 340:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     while(1U)
 341:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     {
 342:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     }
 343:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   }
 344:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 345:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   while(1U)
 346:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   {
 347:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     pin_status = PIN_INTERRUPT_GetPinValue(&PIN_INTERRUPT_0);
 348:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     if (pin_status == 1)
 349:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     {
 350:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *       // Add application code here
 351:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     }
 352:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     else
 353:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     {
 354:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *       // Add application code here
 355:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     }
 356:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   }
 357:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   return (1);
 358:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * }
 359:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *  @endcode
 360:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** */
 361:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** __STATIC_INLINE uint32_t PIN_INTERRUPT_GetPinValue(const PIN_INTERRUPT_t *const handle)
 362:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
 222              	 .loc 3 362 0
 223              	 .cfi_startproc
 224 0000 80B5     	 push {r7,lr}
 225              	.LCFI15:
 226              	 .cfi_def_cfa_offset 8
 227              	 .cfi_offset 7,-8
 228              	 .cfi_offset 14,-4
 229 0002 82B0     	 sub sp,sp,#8
 230              	.LCFI16:
 231              	 .cfi_def_cfa_offset 16
 232 0004 00AF     	 add r7,sp,#0
 233              	.LCFI17:
 234              	 .cfi_def_cfa_register 7
 235 0006 7860     	 str r0,[r7,#4]
 363:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_ASSERT("PIN_INTERRUPT_GetPinValue: Handler null pointer", handle != NULL);
 364:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   return (XMC_GPIO_GetInput(handle->port, handle->pin));
 236              	 .loc 3 364 0
 237 0008 7B68     	 ldr r3,[r7,#4]
 238 000a 5A68     	 ldr r2,[r3,#4]
 239 000c 7B68     	 ldr r3,[r7,#4]
 240 000e 9B7F     	 ldrb r3,[r3,#30]
 241 0010 101C     	 mov r0,r2
 242 0012 191C     	 mov r1,r3
 243 0014 FFF7FEFF 	 bl XMC_GPIO_GetInput
 244 0018 031C     	 mov r3,r0
 365:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** }
 245              	 .loc 3 365 0
 246 001a 181C     	 mov r0,r3
 247 001c BD46     	 mov sp,r7
 248 001e 02B0     	 add sp,sp,#8
 249              	 
 250 0020 80BD     	 pop {r7,pc}
 251              	 .cfi_endproc
 252              	.LFE205:
 254 0022 C046     	 .section .text.XMC_WDT_Start,"ax",%progbits
 255              	 .align 2
 256              	 .code 16
 257              	 .thumb_func
 259              	XMC_WDT_Start:
 260              	.LFB214:
 261              	 .file 4 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc/xmc_wdt.h"
   1:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
   2:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @file xmc_wdt.h
   3:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @date 2015-08-06
   4:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
   5:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @cond
   6:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *****************************************************************************
   7:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
   9:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * All rights reserved.
  11:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
  12:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
  14:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Permission is hereby granted, free of charge, to any person or organization
  15:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * obtaining a copy of the software and accompanying documentation covered by
  16:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * do so, all subject to the following:
  20:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
  21:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * The copyright notices in the Software and this entire statement, including
  22:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * the above license grant, this restriction and the following disclaimer,
  23:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * must be included in all copies of the Software, in whole or in part, and
  24:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * all derivative works of the Software, unless such copies or derivative
  25:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * works are solely in the form of machine-executable object code generated by
  26:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * a source language processor.
  27:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
  28:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * DEALINGS IN THE SOFTWARE.
  35:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
  36:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * To improve the quality of the software, users are encouraged to share
  37:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * at XMCSupport@infineon.com.
  39:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *****************************************************************************
  40:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
  41:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Change History
  42:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * --------------
  43:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
  44:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * 2015-02-20:
  45:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *     - Initial <br>
  46:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *     - Documentation updates <br>
  47:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
  48:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * 2015-06-20:
  49:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  50:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
  51:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * 2015-08-06:
  52:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *     - Bug fix in XMC_WDT_SetDebugMode() API, Wrong register is being configured.<br>
  53:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @endcond
  54:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
  55:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
  56:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #ifndef XMC_WDT_H
  57:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #define XMC_WDT_H
  58:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
  59:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**************************************************************************************************
  60:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * HEADER FILES
  61:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  **************************************************************************************************
  62:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
  63:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #include "xmc_common.h"
  64:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #include "xmc_scu.h"
  65:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
  66:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @addtogroup XMClib XMC Peripheral Library
  67:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @{
  68:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
  69:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
  70:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
  71:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @addtogroup WDT
  72:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @brief Watchdog driver for the XMC microcontroller family.
  73:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
  74:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * The watchdog unit (WDT) improves the system integrity, by triggering the system reset request to
  75:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * back from the unresponsive state to normal operation.
  76:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
  77:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * This LLD provides the Configuration structure XMC_WDT_CONFIG_t and initialization function XMC_W
  78:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * It can be used to:
  79:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * -# Start or Stop the watchdog timer. (XMC_WDT_Start() and XMC_WDT_Stop())
  80:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * -# Service the watchdog timer. (XMC_WDT_Service())
  81:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * -# Configure the service window upper bound and lower bound timing values. (XMC_WDT_SetWindowBou
  82:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * -# Enable the generation of the pre-warning event for the first overflow of the timer. (XMC_WDT_
  83:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * -# Clear the pre-warning alarm event. It is mandatory to clear the flag during pre-warning alarm
  84:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****       generating reset request for the second overflow of the timer. (XMC_WDT_ClearAlarm())
  85:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * -# Suspend the watchdog timer during Debug HALT mode. (XMC_WDT_SetDebugMode())
  86:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * -# Configure service indication pulse width.(XMC_WDT_SetServicePulseWidth())
  87:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
  88:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @{
  89:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
  90:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
  91:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**************************************************************************************************
  92:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * MACROS
  93:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   *************************************************************************************************
  94:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
  95:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #define XMC_WDT_MAGIC_WORD             (0xABADCAFEU) /* Magic word to be written in Service Registe
  96:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****                                                           to service or feed the watchdog. */
  97:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
  98:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**************************************************************************************************
  99:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * ENUMS
 100:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   *************************************************************************************************
 101:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 102:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 103:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *  Defines working modes for watchdog. Use type XMC_WDT_MODE_t for this enum.
 104:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 105:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** typedef enum XMC_WDT_MODE
 106:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** {
 107:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   XMC_WDT_MODE_TIMEOUT    = (uint32_t)0x0 << WDT_CTR_PRE_Pos, /**< Generates reset request as soon 
 108:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****                                                                    occurs. */
 109:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   XMC_WDT_MODE_PREWARNING = (uint32_t)0x1 << WDT_CTR_PRE_Pos  /**< Generates an alarm event for the
 110:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****                                                                    reset request after subsequent o
 111:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****                                                                    serviced after first overflow. *
 112:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** } XMC_WDT_MODE_t;
 113:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 114:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 115:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *  Defines debug behaviour of watchdog when the CPU enters HALT mode. Use type XMC_WDT_DEBUG_MODE_
 116:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 117:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** typedef enum XMC_WDT_DEBUG_MODE
 118:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** {
 119:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   XMC_WDT_DEBUG_MODE_STOP = (uint32_t)0x0 << WDT_CTR_DSP_Pos, /**< Watchdog counter is paused durin
 120:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   XMC_WDT_DEBUG_MODE_RUN  = (uint32_t)0x1 << WDT_CTR_DSP_Pos  /**< Watchdog counter is not paused d
 121:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** } XMC_WDT_DEBUG_MODE_t;
 122:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 123:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**************************************************************************************************
 124:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * DATA STRUCTURES
 125:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   *************************************************************************************************
 126:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /* Anonymous structure/union guard start */
 127:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #if defined(__CC_ARM)
 128:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #pragma push
 129:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #pragma anon_unions
 130:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #elif defined(__TASKING__)
 131:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #pragma warning 586
 132:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #endif
 133:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 134:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 135:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Structure for initializing watchdog timer. Use type XMC_WDT_CONFIG_t for this structure.
 136:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 137:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** typedef struct XMC_WDT_CONFIG
 138:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** {
 139:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   uint32_t window_upper_bound; /**< Upper bound for service window (WUB). Reset request is generate
 140:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****                                     timer. ALways upper bound value has to be more than lower bound
 141:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****                                     lower than WLB, triggers a system reset after timer crossed upp
 142:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****                                     Range: [0H to FFFFFFFFH] */
 143:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   uint32_t window_lower_bound; /**< Lower bound for servicing window (WLB). Setting the lower bound
 144:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****                                     window mechanism.\n
 145:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****                                     Range: [0H to FFFFFFFFH] */
 146:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   union
 147:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   {
 148:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****     struct
 149:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****     {
 150:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****       uint32_t : 1;
 151:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****       uint32_t prewarn_mode : 1;        /**< Pre-warning mode (PRE). This accepts boolean values as
 152:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****       uint32_t : 2;
 153:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****       uint32_t run_in_debug_mode : 1;   /**< Watchdog timer behaviour during debug (DSP). This acce
 154:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****       uint32_t : 3;
 155:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****       uint32_t service_pulse_width : 8; /**< Service Indication Pulse Width (SPW). Generated Pulse 
 156:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****                                              in fwdt cycles.\n
 157:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****                                              Range: [0H to FFH] */
 158:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****       uint32_t : 16;
 159:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****     };
 160:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****     uint32_t wdt_ctr; /* Value of operation mode control register (CTR). It’s bit fields are repr
 161:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****                            union members. */
 162:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   };
 163:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** } XMC_WDT_CONFIG_t;
 164:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /* Anonymous structure/union guard end */
 165:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #if defined(__CC_ARM)
 166:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #pragma pop
 167:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #elif defined(__TASKING__)
 168:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #pragma warning restore
 169:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #endif
 170:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**************************************************************************************************
 171:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * API PROTOTYPES
 172:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   *************************************************************************************************
 173:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 174:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #ifdef __cplusplus
 175:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** extern "C" {
 176:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #endif
 177:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 178:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 179:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param None
 180:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 181:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @return None
 182:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 183:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Description:</b><br>
 184:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \if XMC4
 185:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Enables watchdog clock and releases watchdog reset.\n
 186:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \endif
 187:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \if XMC1
 188:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Enables watchdog clock.\n
 189:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \endif
 190:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par
 191:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * This API is invoked by XMC_WDT_Init() and therefore no need to call it explicitly during watchdo
 192:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * sequence. Invoke this API to enable watchdog once again if the watchdog is disabled by invoking 
 193:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 194:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Note:</b><br>
 195:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \if XMC4
 196:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * 1. It is required to configure the watchdog, again after invoking XMC_WDT_Disable(). Since all t
 197:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *    reset with default values.
 198:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \endif
 199:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \if XMC1
 200:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * 1. Not required to configure the watchdog again after invoking XMC_WDT_Disable(). Since the regi
 201:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *    the configured values.
 202:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \endif
 203:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Related APIs:</b><BR>
 204:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * XMC_WDT_Init(), XMC_WDT_Disable()
 205:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 206:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** void XMC_WDT_Enable(void);
 207:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 208:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 209:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param None
 210:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 211:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @return None
 212:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 213:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Description:</b><br>
 214:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \if XMC4
 215:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Disables the clock and resets watchdog timer.\n
 216:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \endif
 217:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \if XMC1
 218:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Disables the clock to the watchdog timer.\n
 219:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \endif
 220:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 221:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Note:</b><br>
 222:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \if XMC4
 223:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * 1. Resets the registers with default values. So XMC_WDT_Init() has to be invoked again to config
 224:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \endif
 225:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \if XMC1
 226:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * 1. After invoking XMC_WDT_Disable(), all register values are displayed with 0F in debugger. Once
 227:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****       calling XMC_WDT_Enable(), previous configured register values are displayed. No need to invok
 228:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****       again.
 229:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \endif
 230:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Related APIs:</b><BR>
 231:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * XMC_WDT_Enable()
 232:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 233:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** void XMC_WDT_Disable(void);
 234:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 235:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 236:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param config pointer to a constant watchdog configuration data structure. Refer data structure 
 237:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *               for detail.
 238:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 239:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @return None
 240:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 241:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Description:</b><br>
 242:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Initializes and configures watchdog with configuration data pointed by \a config.\n
 243:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par
 244:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * It invokes XMC_WDT_Enable() to enable clock and release reset. Then configures the lower and upp
 245:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * working mode (timeout/pre-warning), debug behaviour and service request indication pulse width.
 246:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 247:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Note:</b><br>
 248:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * 1. With out invoking this XMC_WDT_Init() or XMC_WDT_Enable(), invocation of other APIs like XMC_
 249:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *    XMC_WDT_SetMode(), XMC_WDT_SetServicePulseWidth(), XMC_WDT_SetDebugMode(), XMC_WDT_Start(), X
 250:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *    XMC_WDT_Service(), XMC_WDT_ClearAlarm() has no affect.
 251:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 252:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** void XMC_WDT_Init(const XMC_WDT_CONFIG_t *const config);
 253:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 254:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 255:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param lower_bound specifies watchdog window lower bound in terms of watchdog clock (fWDT) cycle
 256:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *                    Range: [0H to FFFFFFFFH].
 257:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param upper_bound specifies watchdog window upper bound in terms of watchdog clock (fWDT) cycle
 258:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *                    Range: [0H to FFFFFFFFH].
 259:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 260:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @return None
 261:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 262:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Description:</b><br>
 263:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Sets watchdog window lower and upper bounds by updating WLB and WUB registers.\n
 264:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par
 265:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Window lower and upper bounds are set during initialization in XMC_WDT_Init(). Invoke this API t
 266:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * needed later in the program. This upper bound and lower bound can be calculated by using the bel
 267:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *       upper_bound or lower_bound = desired_boundary_time(sec) * fwdt(hz)
 268:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 269:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Note:</b>
 270:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * 1. Always ensure that upper_bound is greater than the lower_bound value. If not, whenever timer 
 271:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *    upper_bound value it triggers the reset(wdt_rst_req) of the controller.
 272:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 273:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** __STATIC_INLINE void XMC_WDT_SetWindowBounds(uint32_t lower_bound, uint32_t upper_bound)
 274:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** {
 275:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   WDT->WLB = lower_bound;
 276:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   WDT->WUB = upper_bound;
 277:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** }
 278:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 279:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 280:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param mode is one of the working modes of the watchdog timer, i.e timeout or pre-warning. Refer
 281:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *             for valid values.
 282:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 283:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @return None
 284:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 285:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Description:</b><br>
 286:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Sets watchdog working mode (timeout or pre-warning) by updating PRE bit of CTR register.\n
 287:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par
 288:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * The working mode is set during initialization in XMC_WDT_Init(). Invoke this API to alter the mo
 289:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * the program.
 290:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 291:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** __STATIC_INLINE void XMC_WDT_SetMode(XMC_WDT_MODE_t mode)
 292:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** {
 293:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   WDT->CTR = (WDT->CTR & (uint32_t)~WDT_CTR_PRE_Msk) | (uint32_t)mode;
 294:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** }
 295:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 296:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 297:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param service_pulse_width specifies Service indication pulse width in terms of fwdt.
 298:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *                            Range: [0H – FFH].
 299:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @return None
 300:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 301:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Description:</b><br>
 302:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Sets service indication pulse width by updating SPW bit field of CTR register.\n
 303:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par
 304:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * The service indication pulse (with width service_pulse_width + 1 in fwdt cycles) is generated on
 305:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * or feeding of watchdog. The pulse width is initially set during initialization in XMC_WDT_Init()
 306:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * alter the width as needed later in the program.
 307:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 308:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** __STATIC_INLINE void XMC_WDT_SetServicePulseWidth(uint8_t service_pulse_width)
 309:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** {
 310:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   WDT->CTR = (WDT->CTR & (uint32_t)~WDT_CTR_SPW_Msk) | ((uint32_t)service_pulse_width << WDT_CTR_SP
 311:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** }
 312:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 313:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 314:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param debug_mode running state of watchdog during debug halt mode. Refer @ref XMC_WDT_DEBUG_MOD
 315:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *                   valid values.
 316:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 317:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @return None
 318:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 319:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Description:</b><br>
 320:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Sets debug behaviour of watchdog by modifying DSP bit of CTR register.\n
 321:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par
 322:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Depending upon DSP bit, the watchdog timer stops when CPU is in HALT mode. The debug behaviour i
 323:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * XMC_WDT_DEBUG_MODE_STOP during initialization in XMC_WDT_Init(). Invoke this API to change the d
 324:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * needed later in the program.
 325:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 326:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** __STATIC_INLINE void XMC_WDT_SetDebugMode(const XMC_WDT_DEBUG_MODE_t debug_mode)
 327:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** {
 328:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   WDT->CTR = (WDT->CTR & (uint32_t)~WDT_CTR_DSP_Msk) | (uint32_t)debug_mode;
 329:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** }
 330:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 331:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 332:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param None
 333:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 334:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @return None
 335:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 336:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Description:</b><br>
 337:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Start the watchdog timer by setting ENB bit of CTR register.\n
 338:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par
 339:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Invoke this API to start the watchdog after initialization, or to resume the watchdog when
 340:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * paused by invoking XMC_WDT_Stop().
 341:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 342:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Related APIs:</b><BR>
 343:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * XMC_WDT_Init(), XMC_WDT_Stop()
 344:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 345:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** __STATIC_INLINE void XMC_WDT_Start(void)
 346:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** {
 262              	 .loc 4 346 0
 263              	 .cfi_startproc
 264 0000 80B5     	 push {r7,lr}
 265              	.LCFI18:
 266              	 .cfi_def_cfa_offset 8
 267              	 .cfi_offset 7,-8
 268              	 .cfi_offset 14,-4
 269 0002 00AF     	 add r7,sp,#0
 270              	.LCFI19:
 271              	 .cfi_def_cfa_register 7
 347:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   WDT->CTR |= (uint32_t)WDT_CTR_ENB_Msk;
 272              	 .loc 4 347 0
 273 0004 034B     	 ldr r3,.L10
 274 0006 034A     	 ldr r2,.L10
 275 0008 5268     	 ldr r2,[r2,#4]
 276 000a 0121     	 mov r1,#1
 277 000c 0A43     	 orr r2,r1
 278 000e 5A60     	 str r2,[r3,#4]
 348:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** }
 279              	 .loc 4 348 0
 280 0010 BD46     	 mov sp,r7
 281              	 
 282 0012 80BD     	 pop {r7,pc}
 283              	.L11:
 284              	 .align 2
 285              	.L10:
 286 0014 00000240 	 .word 1073872896
 287              	 .cfi_endproc
 288              	.LFE214:
 290              	 .section .text.XMC_WDT_Service,"ax",%progbits
 291              	 .align 2
 292              	 .code 16
 293              	 .thumb_func
 295              	XMC_WDT_Service:
 296              	.LFB217:
 349:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 350:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 351:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param None
 352:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 353:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @return None
 354:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 355:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Description:</b><br>
 356:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Pauses watchdog timer by resetting ENB bit of CTR register.\n
 357:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par
 358:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Invoke this API to pause the watchdog as needed in the program e.g. debugging through software c
 359:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 360:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Related APIs:</b><BR>
 361:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * XMC_WDT_Init(), XMC_WDT_Stop()
 362:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 363:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** __STATIC_INLINE void XMC_WDT_Stop(void)
 364:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** {
 365:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   WDT->CTR &= (uint32_t)~WDT_CTR_ENB_Msk;
 366:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** }
 367:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 368:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 369:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param None
 370:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 371:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @return uint32_t Current count value of watchdog timer register (TIM).
 372:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *                  Range: [0H to FFFFFFFFH]
 373:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 374:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Description:</b><br>
 375:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Reads current count of timer register (TIM).\n
 376:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par
 377:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Invoke this API before servicing or feeding the watchdog to check whether count is between lower
 378:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * window bounds.
 379:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 380:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Related APIs:</b><BR>
 381:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * XMC_WDT_Service()
 382:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 383:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** __STATIC_INLINE uint32_t XMC_WDT_GetCounter(void)
 384:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** {
 385:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   return WDT->TIM;
 386:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** }
 387:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 388:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 389:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param None
 390:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 391:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @return None
 392:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 393:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Description:</b><br>
 394:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Services or feeds the watchdog by writing the Magic word in SRV register.\n
 395:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par
 396:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Service watchdog when count value of watchdog timer is between lower and upper window bounds. Su
 397:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * will reset watchdog timer (TIM register) to 0H and generate service indication pulse.
 398:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 399:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Note:</b><br>
 400:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * 1. invoking this API when count value of watchdog timer is less than window lower bound results
 401:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *    wrong servicing and immediately triggers reset request.
 402:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 403:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Related APIs:</b><BR>
 404:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * XMC_WDT_GetCounter(), XMC_WDT_SetWindowBounds(), XMC_WDT_SetServicePulseWidth()
 405:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 406:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** __STATIC_INLINE void XMC_WDT_Service(void)
 407:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** {
 297              	 .loc 4 407 0
 298              	 .cfi_startproc
 299 0000 80B5     	 push {r7,lr}
 300              	.LCFI20:
 301              	 .cfi_def_cfa_offset 8
 302              	 .cfi_offset 7,-8
 303              	 .cfi_offset 14,-4
 304 0002 00AF     	 add r7,sp,#0
 305              	.LCFI21:
 306              	 .cfi_def_cfa_register 7
 408:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   WDT->SRV = XMC_WDT_MAGIC_WORD;
 307              	 .loc 4 408 0
 308 0004 024B     	 ldr r3,.L13
 309 0006 034A     	 ldr r2,.L13+4
 310 0008 9A60     	 str r2,[r3,#8]
 409:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** }
 311              	 .loc 4 409 0
 312 000a BD46     	 mov sp,r7
 313              	 
 314 000c 80BD     	 pop {r7,pc}
 315              	.L14:
 316 000e C046     	 .align 2
 317              	.L13:
 318 0010 00000240 	 .word 1073872896
 319 0014 FECAADAB 	 .word -1414673666
 320              	 .cfi_endproc
 321              	.LFE217:
 323              	 .section .text.XMC_WDT_ClearAlarm,"ax",%progbits
 324              	 .align 2
 325              	 .code 16
 326              	 .thumb_func
 328              	XMC_WDT_ClearAlarm:
 329              	.LFB218:
 410:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 411:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 412:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param None
 413:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 414:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @return None
 415:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 416:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Description:</b><br>
 417:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Clears pre-warning alarm by setting ALMC bit in WDTCLR register.\n
 418:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par
 419:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * In pre-warning mode, first overflow of the timer upper window bound fires the pre-warning alarm.
 420:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * must be invoked to clear the alarm alarm. After clearing of the alarm, watchdog timer must be se
 421:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * time window. Otherwise watchdog timer triggers the reset request up on crossing the upper bound 
 422:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * cycle.
 423:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 424:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Related APIs:</b><BR>
 425:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * XMC_WDT_Service(), XMC_WDT_SetMode()
 426:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 427:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** __STATIC_INLINE void XMC_WDT_ClearAlarm(void)
 428:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** {
 330              	 .loc 4 428 0
 331              	 .cfi_startproc
 332 0000 80B5     	 push {r7,lr}
 333              	.LCFI22:
 334              	 .cfi_def_cfa_offset 8
 335              	 .cfi_offset 7,-8
 336              	 .cfi_offset 14,-4
 337 0002 00AF     	 add r7,sp,#0
 338              	.LCFI23:
 339              	 .cfi_def_cfa_register 7
 429:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   WDT->WDTCLR = WDT_WDTCLR_ALMC_Msk;
 340              	 .loc 4 429 0
 341 0004 024B     	 ldr r3,.L16
 342 0006 0122     	 mov r2,#1
 343 0008 DA61     	 str r2,[r3,#28]
 430:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** }
 344              	 .loc 4 430 0
 345 000a BD46     	 mov sp,r7
 346              	 
 347 000c 80BD     	 pop {r7,pc}
 348              	.L17:
 349 000e C046     	 .align 2
 350              	.L16:
 351 0010 00000240 	 .word 1073872896
 352              	 .cfi_endproc
 353              	.LFE218:
 355              	 .section .text.WATCHDOG_Start,"ax",%progbits
 356              	 .align 2
 357              	 .code 16
 358              	 .thumb_func
 360              	WATCHDOG_Start:
 361              	.LFB219:
 362              	 .file 5 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG/watchdog.h"
   1:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
   2:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @file watchdog.h
   3:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @date 2016-02-09
   4:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
   5:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * NOTE:
   6:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
   8:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @cond
   9:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  **************************************************************************************************
  10:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * WATCHDOG v4.0.16 - Configures the watchdog peripheral instance.
  11:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  12:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * Copyright (c) 2016-2020, Infineon Technologies AG
  13:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * All rights reserved.
  14:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  15:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  16:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * following conditions are met:
  17:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  18:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  19:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   disclaimer.
  20:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  21:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  22:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  23:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  24:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  25:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   products derived from this software without specific prior written permission.
  26:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  27:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  28:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  29:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  30:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  31:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  32:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  33:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  34:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  35:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  36:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * with Infineon Technologies AG (dave@infineon.com).
  37:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  **************************************************************************************************
  38:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  39:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * Change History
  40:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * --------------
  41:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  42:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * 2015-02-16:
  43:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *     - Initial version<br>
  44:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  45:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * 2015-05-08:
  46:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *     - C++ guard applied to only API section<br>
  47:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *     - File guard updated according to the guidelines<br>
  48:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *     - Enum items of "WATCHDOG_EVENT_MODE" are changed to follow coding guidelines<br>
  49:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  50:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * 2015-06-20:
  51:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *     - "callback_func_ptr" in APP config structure is updated according to the GLOBAL_SCU APP.
  52:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  53:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * 2015-06-20:
  54:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *     - macro WATCHDOG_EVENT_CONFIGURATION is replaced with WATCHDOG_EVENT_VIA_SCU.
  55:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  56:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * 2016-02-09:
  57:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *     - Added a check for XMC4 devices, to verify that WATCHDOG clock is enabled or not in CLOCK_X
  58:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  59:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @endcond
  60:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  61:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
  62:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
  63:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #ifndef WATCHDOG_H
  64:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #define WATCHDOG_H
  65:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**************************************************************************************************
  66:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * HEADER FILES
  67:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  **************************************************************************************************
  68:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #include "xmc_wdt.h"
  69:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #if(UC_FAMILY == XMC4)
  70:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #include "CLOCK_XMC4/clock_xmc4.h"
  71:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #else
  72:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #include "CLOCK_XMC1/clock_xmc1.h"
  73:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #endif
  74:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #include "watchdog_conf.h"
  75:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #include "DAVE_Common.h"
  76:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
  77:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**************************************************************************************************
  78:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * MACROS
  79:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  **************************************************************************************************
  80:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #define WATCHDOG_XMC_LIB_MAJOR_VERSION 2
  81:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #define WATCHDOG_XMC_LIB_MINOR_VERSION 0
  82:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #define WATCHDOG_XMC_LIB_PATCH_VERSION 0
  83:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
  84:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #if !((XMC_LIB_MAJOR_VERSION > WATCHDOG_XMC_LIB_MAJOR_VERSION) ||\
  85:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****       ((XMC_LIB_MAJOR_VERSION == WATCHDOG_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION > WATCHD
  86:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****       ((XMC_LIB_MAJOR_VERSION == WATCHDOG_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION == WATCH
  87:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #error "WATCHDOG requires XMC Peripheral Library v2.0.0 or higher"
  88:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #endif
  89:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
  90:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**************************************************************************************************
  91:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * ENUMS
  92:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  **************************************************************************************************
  93:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
  94:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @ingroup WATCHDOG_enumerations
  95:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @{
  96:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
  97:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
  98:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
  99:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *  @brief In case of XMC4000 devices, WatchDog event can be generated as  Regular Interrupt or can
 100:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *         NMI Request. Where as in case of XMC1000 device, it can be generated as Regular Interrup
 101:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
 102:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** typedef enum WATCHDOG_EVENT_MODE
 103:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** {
 104:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****     WATCHDOG_EVENT_MODE_INTERRUPT   = 0U, /**< Regular Interrupt */
 105:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****     WATCHDOG_EVENT_MODE_NMI_REQUEST = 1U /**< Promoted to NMI */
 106:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** } WATCHDOG_EVENT_MODE_t;
 107:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
 108:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
 109:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *  @brief Initialization status.
 110:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
 111:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** typedef enum WATCHDOG_STATUS
 112:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** {
 113:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   WATCHDOG_STATUS_SUCCESS = 0U, /**< Status success */
 114:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   WATCHDOG_STATUS_FAILURE, /**< Status failure */
 115:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** } WATCHDOG_STATUS_t;
 116:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
 117:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** * @}
 118:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** */
 119:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
 120:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**************************************************************************************************
 121:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** * DATA STRUCTURES
 122:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** ***************************************************************************************************
 123:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
 124:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @ingroup WATCHDOG_datastructures
 125:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @{
 126:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
 127:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
 128:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
 129:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @brief WATCHDOG_HandleType is  data structure for storing the GUI configured values of a WATCHDO
 130:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
 131:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** typedef struct WATCHDOG
 132:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** {
 133:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   const XMC_WDT_CONFIG_t* const config; /**< Configuration of WDT */
 134:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   #if ((WATCHDOG_PREWARNING_CHECK == 1U) && (WATCHDOG_EVENT_VIA_SCU == 1U))
 135:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   #if(UC_FAMILY == XMC4)
 136:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   GLOBAL_SCU_XMC4_t* const scu_global_handler; /**< pointer to SCU_GLOBAL APP instance*/
 137:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   GLOBAL_SCU_XMC4_EVENT_HANDLER_t callback_func_ptr; /**< Callback function pointer */
 138:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   #else
 139:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   GLOBAL_SCU_XMC1_t* const scu_global_handler; /**< pointer to SCU_GLOBAL APP instance*/
 140:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   GLOBAL_SCU_XMC1_EVENT_HANDLER_t callback_func_ptr; /**< Callback function pointer */
 141:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   #endif
 142:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   #endif
 143:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   bool  initialized; /**< Holds the initialization status */
 144:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** } WATCHDOG_t;
 145:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
 146:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
 147:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** * @}
 148:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** */
 149:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**************************************************************************************************
 150:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** * API Prototypes
 151:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** ***************************************************************************************************
 152:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #ifdef __cplusplus
 153:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** extern "C" {
 154:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #endif
 155:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
 156:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @brief Get WATCHDOG APP version
 157:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @return DAVE_APP_VERSION_t APP version information (major, minor and patch number)
 158:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * <BR>
 159:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * \par<b>Description:</b><br>
 160:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * The function can be used to check application software compatibility with a
 161:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * specific version of the APP.
 162:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 163:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * Example Usage:
 164:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 165:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @code
 166:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * #include "DAVE.h"
 167:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * int main(void)
 168:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * {
 169:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   DAVE_STATUS_t status;
 170:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   DAVE_APP_VERSION_t app_version;
 171:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 172:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   status = DAVE_Init();    // WATCHDOG_Init() is called from DAVE_Init()
 173:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 174:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   app_version = WATCHDOG_GetAppVersion();
 175:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 176:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   if (app_version.major != 4U)
 177:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   {
 178:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *     // Probably, not the right version.
 179:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   }
 180:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 181:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   while(1U)
 182:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   {
 183:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   }
 184:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   return 1;
 185:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * }
 186:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @endcode<BR>
 187:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
 188:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
 189:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** DAVE_APP_VERSION_t WATCHDOG_GetAppVersion(void);
 190:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
 191:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
 192:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @ingroup WATCHDOG_apidoc
 193:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @{
 194:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
 195:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
 196:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
 197:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @brief Initializes a WATCHDOG with generated configuration.
 198:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 199:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @param handle pointer to the WATCHDOG APP handle structure.
 200:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @return WATCHDOG_STATUS_t\n
 201:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *         WATCHDOG_STATUS_SUCCESS : if initialization is successful\n
 202:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *         WATCHDOG_STATUS_FAILURE : if initialization is failed
 203:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * <BR>
 204:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * \par<b>Description:</b><br>
 205:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * <ul>
 206:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * <li>Enable the WDT module.</li>
 207:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * <li>Configure the service upper and lower bound settings</li>
 208:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * <li>Configure the Pre-warning alarm event, if enabled</li>
 209:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * </ul>
 210:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 211:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * Example Usage:
 212:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 213:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @code
 214:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * #include "DAVE.h"
 215:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * int main(void)
 216:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * {
 217:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   // ... Initializes Apps configurations ...
 218:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   DAVE_Init(); // WATCHDOG_Init(&WATCHDOG_0) will be called from DAVE_Init()
 219:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 220:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   while(1U)
 221:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   {
 222:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   }
 223:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 224:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   return 1;
 225:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * }
 226:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 227:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @endcode<BR> </p>
 228:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
 229:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** WATCHDOG_STATUS_t WATCHDOG_Init(WATCHDOG_t *handle);
 230:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
 231:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
 232:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @brief Starts the WATCHDOG timer.
 233:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 234:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @return None
 235:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * <BR>
 236:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * 
 237:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * \par<b>Description:</b><br>
 238:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * After starting, WDT has to be serviced with in the specified service window boundary.
 239:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * This can done by invoking WATCHDOG_Service(). If failed service, leads to system reset.
 240:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 241:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * Example Usage:
 242:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 243:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @code
 244:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * #include "DAVE.h"
 245:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * int main(void)
 246:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * {
 247:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   DAVE_STATUS_t status;
 248:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 249:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   status = DAVE_Init();        // Initialization of DAVE Apps
 250:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 251:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   if(status == DAVE_STATUS_SUCCESS)
 252:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   {
 253:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *     WATCHDOG_Start(); // Start the watchdog timer
 254:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   }
 255:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 256:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   while(1U)
 257:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   {
 258:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   }
 259:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 260:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   return 1;
 261:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * }
 262:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 263:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * void Watchdog_Handler(void)
 264:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * {
 265:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   WATCHDOG_Service(); //service the watchdog timer.
 266:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   WATCHDOG_Stop();
 267:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * }
 268:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 269:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @endcode<BR> </p>
 270:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
 271:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** __STATIC_INLINE void WATCHDOG_Start(void)
 272:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** {
 363              	 .loc 5 272 0
 364              	 .cfi_startproc
 365 0000 80B5     	 push {r7,lr}
 366              	.LCFI24:
 367              	 .cfi_def_cfa_offset 8
 368              	 .cfi_offset 7,-8
 369              	 .cfi_offset 14,-4
 370 0002 00AF     	 add r7,sp,#0
 371              	.LCFI25:
 372              	 .cfi_def_cfa_register 7
 273:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   XMC_WDT_Start();
 373              	 .loc 5 273 0
 374 0004 FFF7FEFF 	 bl XMC_WDT_Start
 274:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** }
 375              	 .loc 5 274 0
 376 0008 BD46     	 mov sp,r7
 377              	 
 378 000a 80BD     	 pop {r7,pc}
 379              	 .cfi_endproc
 380              	.LFE219:
 382              	 .section .text.WATCHDOG_Service,"ax",%progbits
 383              	 .align 2
 384              	 .code 16
 385              	 .thumb_func
 387              	WATCHDOG_Service:
 388              	.LFB221:
 275:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
 276:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
 277:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @brief Stops the WATCHDOG timer.
 278:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 279:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @return None
 280:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *            <BR>
 281:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 282:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * \par<b>Description:</b><br>
 283:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * WATCHDOG_Stop() can be used to pause the watchog timer as needed. To resume invoke WATCHDOG_Star
 284:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * 
 285:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * Example Usage:
 286:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 287:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @code
 288:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * #include "DAVE.h"
 289:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * int main(void)
 290:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * {
 291:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   DAVE_STATUS_t status;
 292:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 293:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   status = DAVE_Init();        // Initialization of DAVE Apps
 294:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 295:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   if(status == DAVE_STATUS_SUCCESS)
 296:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   {
 297:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *     WATCHDOG_Start(); // Start the watchdog timer
 298:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   }
 299:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 300:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   while(1U)
 301:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   {
 302:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   }
 303:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 304:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   return 1;
 305:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * }
 306:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 307:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * void Watchdog_Handler(void)
 308:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * {
 309:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   WATCHDOG_ClearAlarm(); //clears the alarm flag
 310:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   WATCHDOG_Service(); //service the watchdog timer.
 311:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   WATCHDOG_Stop(); //Stop the watchdog timer
 312:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * }
 313:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 314:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @endcode<BR> </p>
 315:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
 316:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** __STATIC_INLINE void WATCHDOG_Stop(void)
 317:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** {
 318:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   XMC_WDT_Stop();
 319:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** }
 320:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
 321:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
 322:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @brief Service the WATCHDOG timer.
 323:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 324:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @return    None                           
 325:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *            <BR>
 326:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 327:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * \par<b>Description:</b><br>
 328:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * WATCHDOG_Service() will reset the watchdog timer.
 329:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 330:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * Example Usage:
 331:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * 
 332:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @code
 333:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * #include "DAVE.h"
 334:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * int main(void)
 335:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * {
 336:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   DAVE_STATUS_t status;
 337:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 338:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   status = DAVE_Init();        // Initialization of DAVE Apps
 339:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 340:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   if(status == DAVE_STATUS_SUCCESS)
 341:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   {
 342:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *     WATCHDOG_Start(); // Start the watchdog timer
 343:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   }
 344:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 345:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   while(1U)
 346:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   {
 347:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   }
 348:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 349:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   return 1;
 350:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * }
 351:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 352:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * void Watchdog_Handler(void)
 353:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * {
 354:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   WATCHDOG_ClearAlarm(); //clears the alarm flag
 355:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   WATCHDOG_Service(); //service the watchdog timer.
 356:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   WATCHDOG_Stop();
 357:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * }
 358:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 359:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @endcode<BR> </p>
 360:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
 361:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** __STATIC_INLINE void WATCHDOG_Service(void)
 362:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** {
 389              	 .loc 5 362 0
 390              	 .cfi_startproc
 391 0000 80B5     	 push {r7,lr}
 392              	.LCFI26:
 393              	 .cfi_def_cfa_offset 8
 394              	 .cfi_offset 7,-8
 395              	 .cfi_offset 14,-4
 396 0002 00AF     	 add r7,sp,#0
 397              	.LCFI27:
 398              	 .cfi_def_cfa_register 7
 363:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   XMC_WDT_Service();
 399              	 .loc 5 363 0
 400 0004 FFF7FEFF 	 bl XMC_WDT_Service
 364:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** }
 401              	 .loc 5 364 0
 402 0008 BD46     	 mov sp,r7
 403              	 
 404 000a 80BD     	 pop {r7,pc}
 405              	 .cfi_endproc
 406              	.LFE221:
 408              	 .section .text.WATCHDOG_ClearAlarm,"ax",%progbits
 409              	 .align 2
 410              	 .code 16
 411              	 .thumb_func
 413              	WATCHDOG_ClearAlarm:
 414              	.LFB222:
 365:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
 366:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
 367:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @brief Clears the alarm flag.
 368:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 369:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @return None
 370:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * <BR>
 371:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * \par<b>Description:</b><br>
 372:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * After occurrence of Pre-warning alarm event, the timer has to be serviced with in second over fl
 373:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * clearing the alarm flag. Otherwise it will lead to system reset.
 374:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 375:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * Example Usage:
 376:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 377:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @code
 378:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * #include "DAVE.h"
 379:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * int main(void)
 380:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * {
 381:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   DAVE_STATUS_t status;
 382:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 383:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   status = DAVE_Init();        // Initialization of DAVE Apps
 384:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 385:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   if(status == DAVE_STATUS_SUCCESS)
 386:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   {
 387:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *     WATCHDOG_Start(); // Start the watchdog timer
 388:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   }
 389:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 390:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   while(1U)
 391:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   {
 392:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   }
 393:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 394:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   return 1;
 395:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * }
 396:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 397:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * void Watchdog_Handler(void)
 398:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * {
 399:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   WATCHDOG_ClearAlarm(); //clears the alarm flag
 400:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   WATCHDOG_Service(); //service the watchdog timer.
 401:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * }
 402:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 403:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @endcode<BR> </p>
 404:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
 405:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** __STATIC_INLINE void WATCHDOG_ClearAlarm(void)
 406:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** {
 415              	 .loc 5 406 0
 416              	 .cfi_startproc
 417 0000 80B5     	 push {r7,lr}
 418              	.LCFI28:
 419              	 .cfi_def_cfa_offset 8
 420              	 .cfi_offset 7,-8
 421              	 .cfi_offset 14,-4
 422 0002 00AF     	 add r7,sp,#0
 423              	.LCFI29:
 424              	 .cfi_def_cfa_register 7
 407:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   XMC_WDT_ClearAlarm();
 425              	 .loc 5 407 0
 426 0004 FFF7FEFF 	 bl XMC_WDT_ClearAlarm
 408:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** }
 427              	 .loc 5 408 0
 428 0008 BD46     	 mov sp,r7
 429              	 
 430 000a 80BD     	 pop {r7,pc}
 431              	 .cfi_endproc
 432              	.LFE222:
 434              	 .global NP
 435              	 .section .data.NP,"aw",%progbits
 436              	 .align 2
 439              	NP:
 440 0000 36030000 	 .word 822
 441 0004 DC020000 	 .word 732
 442 0008 1B030000 	 .word 795
 443 000c BC020000 	 .word 700
 444              	 .global NPfl
 445              	 .section .data.NPfl,"aw",%progbits
 446              	 .align 2
 449              	NPfl:
 450 0000 D2020000 	 .word 722
 451              	 .global NPfr
 452              	 .section .data.NPfr,"aw",%progbits
 453              	 .align 2
 456              	NPfr:
 457 0000 DF020000 	 .word 735
 458              	 .global NPrl
 459              	 .section .data.NPrl,"aw",%progbits
 460              	 .align 2
 463              	NPrl:
 464 0000 4B000000 	 .word 75
 465              	 .global NPrr
 466              	 .section .data.NPrr,"aw",%progbits
 467              	 .align 2
 470              	NPrr:
 471 0000 BC020000 	 .word 700
 472              	 .global RC_controll
 473              	 .section .data.RC_controll,"aw",%progbits
 476              	RC_controll:
 477 0000 01       	 .byte 1
 478              	 .global Steering_mode
 479              	 .section .data.Steering_mode,"aw",%progbits
 482              	Steering_mode:
 483 0000 03       	 .byte 3
 484              	 .global New_Input
 485              	 .section .bss.New_Input,"aw",%nobits
 488              	New_Input:
 489 0000 00       	 .space 1
 490              	 .global NO_New_Input_counter
 491              	 .section .bss.NO_New_Input_counter,"aw",%nobits
 492              	 .align 2
 495              	NO_New_Input_counter:
 496 0000 00000000 	 .space 4
 497              	 .global Speeds_int16_r
 498              	 .section .bss.Speeds_int16_r,"aw",%nobits
 499              	 .align 2
 502              	Speeds_int16_r:
 503 0000 00000000 	 .space 8
 503      00000000 
 504              	 .global CAN_RX_0
 505              	 .section .bss.CAN_RX_0,"aw",%nobits
 506              	 .align 1
 509              	CAN_RX_0:
 510 0000 0000     	 .space 2
 511              	 .comm init_status,1,1
 512              	 .global CAN_OK
 513              	 .section .bss.CAN_OK,"aw",%nobits
 514              	 .align 2
 517              	CAN_OK:
 518 0000 00000000 	 .space 4
 519              	 .global Inverters_CAN_state
 520              	 .section .bss.Inverters_CAN_state,"aw",%nobits
 521              	 .align 2
 524              	Inverters_CAN_state:
 525 0000 00000000 	 .space 4
 526              	 .global CAN_10ms_counter
 527              	 .section .bss.CAN_10ms_counter,"aw",%nobits
 528              	 .align 2
 531              	CAN_10ms_counter:
 532 0000 00000000 	 .space 4
 533              	 .global reset_distance
 534              	 .section .bss.reset_distance,"aw",%nobits
 537              	reset_distance:
 538 0000 00       	 .space 1
 539              	 .global speed_fl_act
 540              	 .section .bss.speed_fl_act,"aw",%nobits
 541              	 .align 2
 544              	speed_fl_act:
 545 0000 00000000 	 .space 4
 546              	 .global speed_fr_act
 547              	 .section .bss.speed_fr_act,"aw",%nobits
 548              	 .align 2
 551              	speed_fr_act:
 552 0000 00000000 	 .space 4
 553              	 .global speed_rl_act
 554              	 .section .bss.speed_rl_act,"aw",%nobits
 555              	 .align 2
 558              	speed_rl_act:
 559 0000 00000000 	 .space 4
 560              	 .global speed_rr_act
 561              	 .section .bss.speed_rr_act,"aw",%nobits
 562              	 .align 2
 565              	speed_rr_act:
 566 0000 00000000 	 .space 4
 567              	 .global distance_fl_act
 568              	 .section .bss.distance_fl_act,"aw",%nobits
 569              	 .align 2
 572              	distance_fl_act:
 573 0000 00000000 	 .space 4
 574              	 .global distance_fr_act
 575              	 .section .bss.distance_fr_act,"aw",%nobits
 576              	 .align 2
 579              	distance_fr_act:
 580 0000 00000000 	 .space 4
 581              	 .global distance_rl_act
 582              	 .section .bss.distance_rl_act,"aw",%nobits
 583              	 .align 2
 586              	distance_rl_act:
 587 0000 00000000 	 .space 4
 588              	 .global distance_rr_act
 589              	 .section .bss.distance_rr_act,"aw",%nobits
 590              	 .align 2
 593              	distance_rr_act:
 594 0000 00000000 	 .space 4
 595              	 .global CAN_RX_Inverter_count
 596              	 .section .bss.CAN_RX_Inverter_count,"aw",%nobits
 599              	CAN_RX_Inverter_count:
 600 0000 00       	 .space 1
 601              	 .global CAN_state_Ultrasonic
 602              	 .section .bss.CAN_state_Ultrasonic,"aw",%nobits
 605              	CAN_state_Ultrasonic:
 606 0000 00       	 .space 1
 607              	 .global Ultrasonic_cm_C
 608              	 .section .bss.Ultrasonic_cm_C,"aw",%nobits
 609              	 .align 1
 612              	Ultrasonic_cm_C:
 613 0000 0000     	 .space 2
 614              	 .global Ultrasonic_cm_L
 615              	 .section .bss.Ultrasonic_cm_L,"aw",%nobits
 616              	 .align 1
 619              	Ultrasonic_cm_L:
 620 0000 0000     	 .space 2
 621              	 .global Ultrasonic_cm_R
 622              	 .section .bss.Ultrasonic_cm_R,"aw",%nobits
 623              	 .align 1
 626              	Ultrasonic_cm_R:
 627 0000 0000     	 .space 2
 628              	 .global ALPHA_ULTARSONIC
 629              	 .section .data.ALPHA_ULTARSONIC,"aw",%progbits
 630              	 .align 2
 633              	ALPHA_ULTARSONIC:
 634 0000 0000003F 	 .word 1056964608
 635              	 .global obstructed_L
 636              	 .section .bss.obstructed_L,"aw",%nobits
 639              	obstructed_L:
 640 0000 00       	 .space 1
 641              	 .global obstructed_R
 642              	 .section .bss.obstructed_R,"aw",%nobits
 645              	obstructed_R:
 646 0000 00       	 .space 1
 647              	 .global Fil_Ultrasonic_m_C
 648              	 .section .data.Fil_Ultrasonic_m_C,"aw",%progbits
 649              	 .align 2
 652              	Fil_Ultrasonic_m_C:
 653 0000 00008040 	 .word 1082130432
 654              	 .global Fil_Ultrasonic_m_L
 655              	 .section .data.Fil_Ultrasonic_m_L,"aw",%progbits
 656              	 .align 2
 659              	Fil_Ultrasonic_m_L:
 660 0000 00008040 	 .word 1082130432
 661              	 .global Fil_Ultrasonic_m_R
 662              	 .section .data.Fil_Ultrasonic_m_R,"aw",%progbits
 663              	 .align 2
 666              	Fil_Ultrasonic_m_R:
 667 0000 00008040 	 .word 1082130432
 668              	 .global Ultrsonic_data_invaildcounter
 669              	 .section .data.Ultrsonic_data_invaildcounter,"aw",%progbits
 670              	 .align 2
 673              	Ultrsonic_data_invaildcounter:
 674 0000 28       	 .byte 40
 675 0001 28       	 .byte 40
 676 0002 28       	 .byte 40
 677              	 .global Obstacel_F
 678 0003 00       	 .section .data.Obstacel_F,"aw",%progbits
 679              	 .align 2
 682              	Obstacel_F:
 683 0000 00008040 	 .word 1082130432
 684 0004 00000000 	 .word 0
 685              	 .global Obstacel_L
 686              	 .section .data.Obstacel_L,"aw",%progbits
 687              	 .align 2
 690              	Obstacel_L:
 691 0000 00008040 	 .word 1082130432
 692 0004 000080C0 	 .word -1065353216
 693              	 .global Obstacel_R
 694              	 .section .data.Obstacel_R,"aw",%progbits
 695              	 .align 2
 698              	Obstacel_R:
 699 0000 00008040 	 .word 1082130432
 700 0004 00008040 	 .word 1082130432
 701              	 .global obstacel_F_x
 702              	 .section .bss.obstacel_F_x,"aw",%nobits
 703              	 .align 2
 706              	obstacel_F_x:
 707 0000 00000000 	 .space 4
 708              	 .global obstacel_L_x
 709              	 .section .bss.obstacel_L_x,"aw",%nobits
 710              	 .align 2
 713              	obstacel_L_x:
 714 0000 00000000 	 .space 4
 715              	 .global obstacel_L_y
 716              	 .section .bss.obstacel_L_y,"aw",%nobits
 717              	 .align 2
 720              	obstacel_L_y:
 721 0000 00000000 	 .space 4
 722              	 .global obstacel_R_x
 723              	 .section .bss.obstacel_R_x,"aw",%nobits
 724              	 .align 2
 727              	obstacel_R_x:
 728 0000 00000000 	 .space 4
 729              	 .global obstacel_R_y
 730              	 .section .bss.obstacel_R_y,"aw",%nobits
 731              	 .align 2
 734              	obstacel_R_y:
 735 0000 00000000 	 .space 4
 736              	 .global Obstacel_valid
 737              	 .section .bss.Obstacel_valid,"aw",%nobits
 738              	 .align 2
 741              	Obstacel_valid:
 742 0000 000000   	 .space 3
 743              	 .global avg_Speeds
 744 0003 00       	 .section .bss.avg_Speeds,"aw",%nobits
 745              	 .align 2
 748              	avg_Speeds:
 749 0000 00000000 	 .space 4
 750              	 .global act_trajctory_x
 751              	 .section .bss.act_trajctory_x,"aw",%nobits
 752              	 .align 2
 755              	act_trajctory_x:
 756 0000 00000000 	 .space 4
 757              	 .global act_trajctory_y
 758              	 .section .bss.act_trajctory_y,"aw",%nobits
 759              	 .align 2
 762              	act_trajctory_y:
 763 0000 00000000 	 .space 4
 764              	 .global RC_Signal_OK
 765              	 .section .bss.RC_Signal_OK,"aw",%nobits
 768              	RC_Signal_OK:
 769 0000 00       	 .space 1
 770              	 .global RC_Signal_not_OK_counter
 771              	 .section .bss.RC_Signal_not_OK_counter,"aw",%nobits
 774              	RC_Signal_not_OK_counter:
 775 0000 00       	 .space 1
 776              	 .global captured_time_Steering
 777              	 .section .bss.captured_time_Steering,"aw",%nobits
 778              	 .align 2
 781              	captured_time_Steering:
 782 0000 00000000 	 .space 4
 783              	 .global captured_time_Speed
 784              	 .section .bss.captured_time_Speed,"aw",%nobits
 785              	 .align 2
 788              	captured_time_Speed:
 789 0000 00000000 	 .space 4
 790              	 .global RC_no_Speed_data_counter
 791              	 .section .bss.RC_no_Speed_data_counter,"aw",%nobits
 794              	RC_no_Speed_data_counter:
 795 0000 00       	 .space 1
 796              	 .global RC_no_Steering_data_counter
 797              	 .section .bss.RC_no_Steering_data_counter,"aw",%nobits
 800              	RC_no_Steering_data_counter:
 801 0000 00       	 .space 1
 802              	 .global RC_Speed
 803              	 .section .bss.RC_Speed,"aw",%nobits
 804              	 .align 2
 807              	RC_Speed:
 808 0000 00000000 	 .space 4
 809              	 .global RC_Steering
 810              	 .section .bss.RC_Steering,"aw",%nobits
 811              	 .align 2
 814              	RC_Steering:
 815 0000 00000000 	 .space 4
 816              	 .global RC_Speed_ns_to_mps
 817              	 .section .data.RC_Speed_ns_to_mps,"aw",%progbits
 818              	 .align 2
 821              	RC_Speed_ns_to_mps:
 822 0000 ACC5A735 	 .word 900187564
 823              	 .global RC_Steering_ns_to_deg
 824              	 .section .data.RC_Steering_ns_to_deg,"aw",%progbits
 825              	 .align 2
 828              	RC_Steering_ns_to_deg:
 829 0000 72335C39 	 .word 962343794
 830              	 .global RC_gear_100us_counter
 831              	 .section .bss.RC_gear_100us_counter,"aw",%nobits
 832              	 .align 2
 835              	RC_gear_100us_counter:
 836 0000 00000000 	 .space 4
 837              	 .global RC_AUX1_100us_counter
 838              	 .section .bss.RC_AUX1_100us_counter,"aw",%nobits
 839              	 .align 2
 842              	RC_AUX1_100us_counter:
 843 0000 00000000 	 .space 4
 844              	 .global RC_Gear_state
 845              	 .section .data.RC_Gear_state,"aw",%progbits
 848              	RC_Gear_state:
 849 0000 02       	 .byte 2
 850              	 .global RC_AUX1_state
 851              	 .section .data.RC_AUX1_state,"aw",%progbits
 854              	RC_AUX1_state:
 855 0000 02       	 .byte 2
 856              	 .global RC_Gear_duty
 857              	 .section .data.RC_Gear_duty,"aw",%progbits
 860              	RC_Gear_duty:
 861 0000 02       	 .byte 2
 862              	 .global RC_Gear_duty_OLD
 863              	 .section .data.RC_Gear_duty_OLD,"aw",%progbits
 866              	RC_Gear_duty_OLD:
 867 0000 02       	 .byte 2
 868              	 .global RC_AUX1_duty
 869              	 .section .data.RC_AUX1_duty,"aw",%progbits
 872              	RC_AUX1_duty:
 873 0000 02       	 .byte 2
 874              	 .global RC_Speed_Stop
 875              	 .section .data.RC_Speed_Stop,"aw",%progbits
 878              	RC_Speed_Stop:
 879 0000 01       	 .byte 1
 880              	 .global Steering_direction
 881              	 .section .bss.Steering_direction,"aw",%nobits
 882              	 .align 2
 885              	Steering_direction:
 886 0000 00000000 	 .space 4
 887              	 .global Driving_speed
 888              	 .section .bss.Driving_speed,"aw",%nobits
 889              	 .align 2
 892              	Driving_speed:
 893 0000 00000000 	 .space 4
 894              	 .comm R_Turn,4,4
 895              	 .comm Speed_ratio,4,4
 896              	 .global speed_fl
 897              	 .section .bss.speed_fl,"aw",%nobits
 898              	 .align 2
 901              	speed_fl:
 902 0000 00000000 	 .space 4
 903              	 .global speed_fr
 904              	 .section .bss.speed_fr,"aw",%nobits
 905              	 .align 2
 908              	speed_fr:
 909 0000 00000000 	 .space 4
 910              	 .global speed_rl
 911              	 .section .bss.speed_rl,"aw",%nobits
 912              	 .align 2
 915              	speed_rl:
 916 0000 00000000 	 .space 4
 917              	 .global speed_rr
 918              	 .section .bss.speed_rr,"aw",%nobits
 919              	 .align 2
 922              	speed_rr:
 923 0000 00000000 	 .space 4
 924              	 .global angle_fl
 925              	 .section .bss.angle_fl,"aw",%nobits
 926              	 .align 2
 929              	angle_fl:
 930 0000 00000000 	 .space 4
 931              	 .global angle_fr
 932              	 .section .bss.angle_fr,"aw",%nobits
 933              	 .align 2
 936              	angle_fr:
 937 0000 00000000 	 .space 4
 938              	 .global angle_rl
 939              	 .section .bss.angle_rl,"aw",%nobits
 940              	 .align 2
 943              	angle_rl:
 944 0000 00000000 	 .space 4
 945              	 .global angle_rr
 946              	 .section .bss.angle_rr,"aw",%nobits
 947              	 .align 2
 950              	angle_rr:
 951 0000 00000000 	 .space 4
 952              	 .global Speeds
 953              	 .section .bss.Speeds,"aw",%nobits
 954              	 .align 2
 957              	Speeds:
 958 0000 00000000 	 .space 16
 958      00000000 
 958      00000000 
 958      00000000 
 959              	 .global Steering_Angles
 960              	 .section .bss.Steering_Angles,"aw",%nobits
 961              	 .align 2
 964              	Steering_Angles:
 965 0000 00000000 	 .space 16
 965      00000000 
 965      00000000 
 965      00000000 
 966              	 .global Servo_PWMs
 967              	 .section .bss.Servo_PWMs,"aw",%nobits
 968              	 .align 2
 971              	Servo_PWMs:
 972 0000 00000000 	 .space 16
 972      00000000 
 972      00000000 
 972      00000000 
 973              	 .global Inveter_CAN_OK
 974              	 .section .bss.Inveter_CAN_OK,"aw",%nobits
 975              	 .align 2
 978              	Inveter_CAN_OK:
 979 0000 00000000 	 .space 4
 980              	 .global Actual_Speeds
 981              	 .section .bss.Actual_Speeds,"aw",%nobits
 982              	 .align 2
 985              	Actual_Speeds:
 986 0000 00000000 	 .space 16
 986      00000000 
 986      00000000 
 986      00000000 
 987              	 .global Actual_Distance
 988              	 .section .bss.Actual_Distance,"aw",%nobits
 989              	 .align 2
 992              	Actual_Distance:
 993 0000 00000000 	 .space 16
 993      00000000 
 993      00000000 
 993      00000000 
 994              	 .section .text.main,"ax",%progbits
 995              	 .align 2
 996              	 .global main
 997              	 .code 16
 998              	 .thumb_func
 1000              	main:
 1001              	.LFB224:
 1002              	 .file 6 "../main.c"
   1:../main.c     **** /*
   2:../main.c     ****  * main.c
   3:../main.c     ****  *
   4:../main.c     ****  *  Created on: 2022 Apr 25 09:31:37
   5:../main.c     ****  *  Author: lukas
   6:../main.c     ****  */
   7:../main.c     **** #include "DAVE.h"                 //Declarations from DAVE Code Generation (includes SFR declaratio
   8:../main.c     **** #include <math.h>
   9:../main.c     **** 
  10:../main.c     **** #define CHECK_BIT(var,pos) (((var)>>(pos)) & 1)
  11:../main.c     **** 
  12:../main.c     **** //constant
  13:../main.c     **** int NP[4] = {822, 732, 795, 700}; //servo nutral points PWM duty values
  14:../main.c     **** int NPfl = 722; int NPfr = 735; int NPrl = 75; int NPrr = 700; // serov defalut 750
  15:../main.c     **** #define MIN_Speed  0.05
  16:../main.c     **** #define MAX_Speed  1
  17:../main.c     **** 
  18:../main.c     **** #define ROTATION_ANGLE 53.96
  19:../main.c     **** #define ROTATION_ANGLE_OFFSET 5
  20:../main.c     **** #define ROTATION_SPEED  0.25
  21:../main.c     **** 
  22:../main.c     **** #define PI180 0.01745329
  23:../main.c     **** #define PI 3.14
  24:../main.c     **** #define HALF_PI 1.57
  25:../main.c     **** #define RAD_TO_DEG 57.296
  26:../main.c     **** 
  27:../main.c     **** // steering parameter
  28:../main.c     **** //const float WHEEL_BASE = 0.448;
  29:../main.c     **** #define WHEEL_BASE 0.448
  30:../main.c     **** #define	HALF_WHEEL_BASE 			0.22				// halfbase of mobrob
  31:../main.c     **** //#define 	HALFBASEPOW2 		(HALFBASE*HALFBASE)		// halfbase of mobrob to the power of two
  32:../main.c     **** #define	HALF_TRACK_WIDTH		0.163					// halftrack of mobrob
  33:../main.c     **** #define 	R_WHEEL				0.067			// wheel radius of mobrob
  34:../main.c     **** #define	R_TRUN_MAX				20.000				// maximum corner radius (before straight)
  35:../main.c     **** #define 	R_TRUN_MIN				0.05				// minimum corner/reorientation radius
  36:../main.c     **** //#define		P_RO_VEL			0.500					// reduction factor for reorientation velocity
  37:../main.c     **** //#define		CWHEEL				(2.000*M_PI*RWHEEL)		// wheel circumference of mobrob
  38:../main.c     **** 
  39:../main.c     **** 
  40:../main.c     **** // Var MODES
  41:../main.c     **** volatile uint8_t RC_controll = 1; // if 1 RC controll
  42:../main.c     **** //uint8_t Steering_mode = 3; // otions 1 'Front';  2'Rear'; 3 '4_Wheel'; 4 'Carb'; 5 'Rotate' 0 not
  43:../main.c     **** enum STEERING_MODES{
  44:../main.c     **** 	ZERO = 0,
  45:../main.c     **** 	FRONT = 1,
  46:../main.c     **** 	BACK = 2,
  47:../main.c     **** 	ALL_WHEEL = 3,
  48:../main.c     **** 	CRAB = 4,
  49:../main.c     **** 	ROTATE =5
  50:../main.c     **** };
  51:../main.c     **** volatile enum STEERING_MODES Steering_mode = ALL_WHEEL;
  52:../main.c     **** volatile uint8_t New_Input = 0;
  53:../main.c     **** volatile uint32_t NO_New_Input_counter = 0;
  54:../main.c     **** 
  55:../main.c     **** 
  56:../main.c     **** //VAR CAN
  57:../main.c     **** int16_t Speeds_int16_r[4] = {0};
  58:../main.c     **** int16_t CAN_RX_0 = 0;
  59:../main.c     **** CAN_NODE_STATUS_t init_status;
  60:../main.c     **** int CAN_OK = 0;
  61:../main.c     **** uint8_t Inverters_CAN_state[4] = {0};
  62:../main.c     **** uint32_t CAN_10ms_counter = 0; // to send ever 10ms
  63:../main.c     **** 
  64:../main.c     **** volatile uint8_t reset_distance = 0;// reste from mircum by setting 1
  65:../main.c     **** float speed_fl_act = 0;float speed_fr_act = 0;float speed_rl_act = 0;float speed_rr_act = 0; // in 
  66:../main.c     **** float distance_fl_act = 0;float distance_fr_act = 0;float distance_rl_act = 0;float distance_rr_act
  67:../main.c     **** 
  68:../main.c     **** volatile uint8_t CAN_RX_Inverter_count = 0;
  69:../main.c     **** 
  70:../main.c     **** //ULTRASOCNIC
  71:../main.c     **** // reciving
  72:../main.c     **** volatile uint8_t CAN_state_Ultrasonic = 0;
  73:../main.c     **** volatile uint16_t Ultrasonic_cm_C = 0;
  74:../main.c     **** volatile uint16_t Ultrasonic_cm_L = 0;
  75:../main.c     **** volatile uint16_t Ultrasonic_cm_R = 0;
  76:../main.c     **** // filtering
  77:../main.c     **** float ALPHA_ULTARSONIC = 0.5; // giltering prameter for the Exponential moving average
  78:../main.c     **** #define POS_OBSTRUCTED_ANGLE_MIN 50
  79:../main.c     **** #define POS_OBSTRUCTED_ANGLE_MAX 210
  80:../main.c     **** #define NEG_OBSTRUCTED_ANGLE_MIN -150
  81:../main.c     **** #define NEG_OBSTRUCTED_ANGLE_MAX -310
  82:../main.c     **** uint8_t obstructed_L = 0, obstructed_R = 0;
  83:../main.c     **** float Fil_Ultrasonic_m_C = 4;
  84:../main.c     **** float Fil_Ultrasonic_m_L = 4;
  85:../main.c     **** float Fil_Ultrasonic_m_R = 4;
  86:../main.c     **** 
  87:../main.c     **** #define ULRTA_NUM_NO_DATA_INVALID 40
  88:../main.c     **** uint8_t Ultrsonic_data_invaildcounter[3] = {ULRTA_NUM_NO_DATA_INVALID, ULRTA_NUM_NO_DATA_INVALID, U
  89:../main.c     **** 
  90:../main.c     **** // obstacels
  91:../main.c     **** float Obstacel_F[2] = {4, 0};
  92:../main.c     **** float Obstacel_L[2] = {4, -4};
  93:../main.c     **** float Obstacel_R[2] = {4, 4};
  94:../main.c     **** 
  95:../main.c     **** float obstacel_F_x = 0, obstacel_L_x = 0, obstacel_L_y = 0, obstacel_R_x = 0, obstacel_R_y = 0;
  96:../main.c     **** uint8_t Obstacel_valid[3] = {0, 0, 0};
  97:../main.c     **** 
  98:../main.c     **** // collison avdoidance
  99:../main.c     **** #define COLLISION_ADOIVANCE_START 0.5
 100:../main.c     **** float avg_Speeds = 0;
 101:../main.c     **** float act_trajctory_x = 0, act_trajctory_y = 0;
 102:../main.c     **** 
 103:../main.c     **** 
 104:../main.c     **** // Var RC
 105:../main.c     **** uint8_t RC_Signal_OK = 0, RC_Signal_not_OK_counter = 0; // 0 no ok 1 OK
 106:../main.c     **** uint32_t  captured_time_Steering=0, captured_time_Speed=0;
 107:../main.c     **** uint8_t RC_no_Speed_data_counter = 0, RC_no_Steering_data_counter = 0;
 108:../main.c     **** float RC_Speed = 0, RC_Steering = 0;
 109:../main.c     **** #define RC_NP_SPEED  1500000
 110:../main.c     **** #define RC_NP_STEERING  1540000
 111:../main.c     **** float RC_Speed_ns_to_mps = 0.00000125;
 112:../main.c     **** float RC_Steering_ns_to_deg = 0.00021;
 113:../main.c     **** 
 114:../main.c     **** volatile uint32_t RC_gear_100us_counter = 0, RC_AUX1_100us_counter = 0;
 115:../main.c     **** volatile uint8_t RC_Gear_state = 2, RC_AUX1_state = 2;
 116:../main.c     **** volatile uint8_t RC_Gear_duty = 2, RC_Gear_duty_OLD =2, RC_AUX1_duty = 2;
 117:../main.c     **** uint8_t RC_Speed_Stop = 1;
 118:../main.c     **** 
 119:../main.c     **** //VAR general
 120:../main.c     **** float Steering_direction = 0; // steering Angle
 121:../main.c     **** float Driving_speed = 0;
 122:../main.c     **** 
 123:../main.c     **** float R_Turn;
 124:../main.c     **** float Speed_ratio;
 125:../main.c     **** 
 126:../main.c     **** float speed_fl = 0;float speed_fr = 0;float speed_rl = 0;float speed_rr = 0; // in m/s
 127:../main.c     **** float angle_fl = 0;float angle_fr = 0;float angle_rl = 0;float angle_rr = 0; // in deg  0 straing a
 128:../main.c     **** 
 129:../main.c     **** volatile float Speeds[4] = {0, 0, 0, 0};
 130:../main.c     **** volatile float Steering_Angles[4] = {0, 0, 0, 0};
 131:../main.c     **** float Servo_PWMs[4] = {0, 0, 0, 0};
 132:../main.c     **** 
 133:../main.c     **** //values form inveter bioard over CAN
 134:../main.c     **** uint8_t Inveter_CAN_OK[4] = {0};
 135:../main.c     **** float Actual_Speeds[4] = {0};
 136:../main.c     **** float Actual_Distance[4] = {0};
 137:../main.c     **** 
 138:../main.c     **** // FUNCTIONS
 139:../main.c     **** void CAN_send_Speeds(float Speed_data[4]);
 140:../main.c     **** void CAN_reset_distance(uint8_t distance_to_reset[4]);
 141:../main.c     **** void Steering_set_Angles(float Angles_data_int[4]);
 142:../main.c     **** void Steering_Function(float Steering_direction_cal, float Driving_speed_cal, uint8_t Steering_mode
 143:../main.c     **** void RC_Recive(void);
 144:../main.c     **** void Servo_NP_setting(void);
 145:../main.c     **** void mode_led(uint8_t var);
 146:../main.c     **** float average(float a[],int num_values);
 147:../main.c     **** void CAN_Inveter_RX_Interperter(uint8_t data_RX[8], uint8_t Motor_on_rover);
 148:../main.c     **** void CAN_RX_Inverter_Read_Data();
 149:../main.c     **** void Ultra_sonic_filter(int16_t Ultrasonic_cm_C_clc, int16_t Ultrasonic_cm_L_clc, int16_t Ultrasoni
 150:../main.c     **** float Exp_moving_average(float new_value, float value, float ALPHA);
 151:../main.c     **** uint8_t Ultrasoinc_Obstructet_Test(float Angle);
 152:../main.c     **** void Collision_voidance();
 153:../main.c     **** 
 154:../main.c     **** 
 155:../main.c     **** int main(void)
 156:../main.c     **** {
 1003              	 .loc 6 156 0
 1004              	 .cfi_startproc
 1005 0000 90B5     	 push {r4,r7,lr}
 1006              	.LCFI30:
 1007              	 .cfi_def_cfa_offset 12
 1008              	 .cfi_offset 4,-12
 1009              	 .cfi_offset 7,-8
 1010              	 .cfi_offset 14,-4
 1011 0002 83B0     	 sub sp,sp,#12
 1012              	.LCFI31:
 1013              	 .cfi_def_cfa_offset 24
 1014 0004 00AF     	 add r7,sp,#0
 1015              	.LCFI32:
 1016              	 .cfi_def_cfa_register 7
 157:../main.c     ****   DAVE_STATUS_t status;
 158:../main.c     **** 
 159:../main.c     ****   status = DAVE_Init();           /* Initialization of DAVE APPs  */
 1017              	 .loc 6 159 0
 1018 0006 FC1D     	 add r4,r7,#7
 1019 0008 FFF7FEFF 	 bl DAVE_Init
 1020 000c 031C     	 mov r3,r0
 1021 000e 2370     	 strb r3,[r4]
 160:../main.c     **** 
 161:../main.c     ****   if (status != DAVE_STATUS_SUCCESS)
 1022              	 .loc 6 161 0
 1023 0010 FB1D     	 add r3,r7,#7
 1024 0012 1B78     	 ldrb r3,[r3]
 1025 0014 002B     	 cmp r3,#0
 1026 0016 00D0     	 beq .L22
 1027              	.L23:
 162:../main.c     ****   {
 163:../main.c     ****     /* Placeholder for error handler code. The while loop below can be replaced with an user error 
 164:../main.c     ****     XMC_DEBUG("DAVE APPs initialization failed\n");
 165:../main.c     **** 
 166:../main.c     ****     while(1U)
 167:../main.c     ****     {
 168:../main.c     **** 
 169:../main.c     ****     }
 1028              	 .loc 6 169 0 discriminator 1
 1029 0018 FEE7     	 b .L23
 1030              	.L22:
 170:../main.c     ****   }
 171:../main.c     **** 
 172:../main.c     ****   //Initialization of CAN
 173:../main.c     ****   	//CAN_NODE_STATUS_t init_status;
 174:../main.c     ****   	init_status = CAN_NODE_Init(&CAN_NODE_0);
 1031              	 .loc 6 174 0
 1032 001a 094B     	 ldr r3,.L26
 1033 001c 181C     	 mov r0,r3
 1034 001e FFF7FEFF 	 bl CAN_NODE_Init
 1035 0022 031C     	 mov r3,r0
 1036 0024 1A1C     	 mov r2,r3
 1037 0026 074B     	 ldr r3,.L26+4
 1038 0028 1A70     	 strb r2,[r3]
 175:../main.c     **** 
 176:../main.c     ****   	if (init_status != CAN_NODE_STATUS_SUCCESS) {
 1039              	 .loc 6 176 0
 1040 002a 064B     	 ldr r3,.L26+4
 1041 002c 1B78     	 ldrb r3,[r3]
 1042 002e 002B     	 cmp r3,#0
 1043 0030 02D1     	 bne .L24
 177:../main.c     ****   		XMC_DEBUG("CAN initialization failed\n");
 178:../main.c     ****   	}
 179:../main.c     ****   	else{
 180:../main.c     ****   		CAN_OK = 1;
 1044              	 .loc 6 180 0
 1045 0032 054B     	 ldr r3,.L26+8
 1046 0034 0122     	 mov r2,#1
 1047 0036 1A60     	 str r2,[r3]
 1048              	.L24:
 181:../main.c     ****   	}
 182:../main.c     **** 
 183:../main.c     ****   	// watchdog
 184:../main.c     ****   	WATCHDOG_Start();
 1049              	 .loc 6 184 0
 1050 0038 FFF7FEFF 	 bl WATCHDOG_Start
 1051              	.L25:
 185:../main.c     **** 
 186:../main.c     ****   /* Placeholder for user application code. The while loop below can be replaced with user applicat
 187:../main.c     ****   while(1U)
 188:../main.c     ****   {
 189:../main.c     **** 	// Servo_NP_setting();	  // nutral point servo setting
 190:../main.c     ****   }
 1052              	 .loc 6 190 0 discriminator 2
 1053 003c FEE7     	 b .L25
 1054              	.L27:
 1055 003e C046     	 .align 2
 1056              	.L26:
 1057 0040 00000000 	 .word CAN_NODE_0
 1058 0044 00000000 	 .word init_status
 1059 0048 00000000 	 .word CAN_OK
 1060              	 .cfi_endproc
 1061              	.LFE224:
 1063              	 .global __aeabi_fcmpgt
 1064              	 .global __aeabi_fcmplt
 1065              	 .global __aeabi_f2d
 1066              	 .global __aeabi_dcmplt
 1067              	 .global __aeabi_dcmpgt
 1068              	 .global __aeabi_ddiv
 1069              	 .global __aeabi_d2f
 1070              	 .global __aeabi_dadd
 1071              	 .global __aeabi_dmul
 1072              	 .global __aeabi_dsub
 1073              	 .global __aeabi_fmul
 1074              	 .global __aeabi_fdiv
 1075              	 .section .text.Steering_Function,"ax",%progbits
 1076              	 .align 2
 1077              	 .global Steering_Function
 1078              	 .code 16
 1079              	 .thumb_func
 1081              	Steering_Function:
 1082              	.LFB225:
 191:../main.c     **** }
 192:../main.c     **** 
 193:../main.c     **** 
 194:../main.c     **** void Steering_Function(float Steering_direction_cal, float Driving_speed_cal, uint8_t Steering_mode
 1083              	 .loc 6 194 0
 1084              	 .cfi_startproc
 1085 0000 F0B5     	 push {r4,r5,r6,r7,lr}
 1086              	.LCFI33:
 1087              	 .cfi_def_cfa_offset 20
 1088              	 .cfi_offset 4,-20
 1089              	 .cfi_offset 5,-16
 1090              	 .cfi_offset 6,-12
 1091              	 .cfi_offset 7,-8
 1092              	 .cfi_offset 14,-4
 1093 0002 85B0     	 sub sp,sp,#20
 1094              	.LCFI34:
 1095              	 .cfi_def_cfa_offset 40
 1096 0004 00AF     	 add r7,sp,#0
 1097              	.LCFI35:
 1098              	 .cfi_def_cfa_register 7
 1099 0006 F860     	 str r0,[r7,#12]
 1100 0008 B960     	 str r1,[r7,#8]
 1101 000a FB1D     	 add r3,r7,#7
 1102 000c 1A70     	 strb r2,[r3]
 195:../main.c     **** 	New_Input = 0;
 1103              	 .loc 6 195 0
 1104 000e B84B     	 ldr r3,.L115
 1105 0010 0022     	 mov r2,#0
 1106 0012 1A70     	 strb r2,[r3]
 196:../main.c     **** 
 197:../main.c     **** 	if(Driving_speed_cal > MAX_Speed) Driving_speed_cal = MAX_Speed;
 1107              	 .loc 6 197 0
 1108 0014 B868     	 ldr r0,[r7,#8]
 1109 0016 FE21     	 mov r1,#254
 1110 0018 8905     	 lsl r1,r1,#22
 1111 001a FFF7FEFF 	 bl __aeabi_fcmpgt
 1112 001e 031E     	 sub r3,r0,#0
 1113 0020 02D0     	 beq .L29
 1114              	 .loc 6 197 0 is_stmt 0 discriminator 1
 1115 0022 FE23     	 mov r3,#254
 1116 0024 9B05     	 lsl r3,r3,#22
 1117 0026 BB60     	 str r3,[r7,#8]
 1118              	.L29:
 198:../main.c     **** 	if(Driving_speed_cal < -MAX_Speed) Driving_speed_cal = -MAX_Speed;
 1119              	 .loc 6 198 0 is_stmt 1
 1120 0028 B868     	 ldr r0,[r7,#8]
 1121 002a B249     	 ldr r1,.L115+4
 1122 002c FFF7FEFF 	 bl __aeabi_fcmplt
 1123 0030 031E     	 sub r3,r0,#0
 1124 0032 01D0     	 beq .L31
 1125              	 .loc 6 198 0 is_stmt 0 discriminator 1
 1126 0034 AF4B     	 ldr r3,.L115+4
 1127 0036 BB60     	 str r3,[r7,#8]
 1128              	.L31:
 199:../main.c     **** 	if((0 < Driving_speed_cal) & (Driving_speed_cal < MIN_Speed)) Driving_speed_cal = 0;
 1129              	 .loc 6 199 0 is_stmt 1
 1130 0038 0123     	 mov r3,#1
 1131 003a 1C1C     	 add r4,r3,#0
 1132 003c B868     	 ldr r0,[r7,#8]
 1133 003e 0021     	 mov r1,#0
 1134 0040 FFF7FEFF 	 bl __aeabi_fcmpgt
 1135 0044 031E     	 sub r3,r0,#0
 1136 0046 01D1     	 bne .L33
 1137 0048 0023     	 mov r3,#0
 1138 004a 1C1C     	 add r4,r3,#0
 1139              	.L33:
 1140 004c E4B2     	 uxtb r4,r4
 1141 004e B868     	 ldr r0,[r7,#8]
 1142 0050 FFF7FEFF 	 bl __aeabi_f2d
 1143 0054 0A1C     	 mov r2,r1
 1144 0056 011C     	 mov r1,r0
 1145 0058 0123     	 mov r3,#1
 1146 005a 1D1C     	 add r5,r3,#0
 1147 005c 081C     	 mov r0,r1
 1148 005e 111C     	 mov r1,r2
 1149 0060 A54A     	 ldr r2,.L115+8
 1150 0062 A64B     	 ldr r3,.L115+12
 1151 0064 FFF7FEFF 	 bl __aeabi_dcmplt
 1152 0068 031E     	 sub r3,r0,#0
 1153 006a 01D1     	 bne .L34
 1154 006c 0023     	 mov r3,#0
 1155 006e 1D1C     	 add r5,r3,#0
 1156              	.L34:
 1157 0070 EBB2     	 uxtb r3,r5
 1158 0072 2340     	 and r3,r4
 1159 0074 DBB2     	 uxtb r3,r3
 1160 0076 002B     	 cmp r3,#0
 1161 0078 01D0     	 beq .L35
 1162              	 .loc 6 199 0 is_stmt 0 discriminator 1
 1163 007a 0023     	 mov r3,#0
 1164 007c BB60     	 str r3,[r7,#8]
 1165              	.L35:
 200:../main.c     **** 	if((0 > Driving_speed_cal) & (Driving_speed_cal > -MIN_Speed)) Driving_speed_cal = 0;
 1166              	 .loc 6 200 0 is_stmt 1
 1167 007e 0123     	 mov r3,#1
 1168 0080 1C1C     	 add r4,r3,#0
 1169 0082 B868     	 ldr r0,[r7,#8]
 1170 0084 0021     	 mov r1,#0
 1171 0086 FFF7FEFF 	 bl __aeabi_fcmplt
 1172 008a 031E     	 sub r3,r0,#0
 1173 008c 01D1     	 bne .L36
 1174 008e 0023     	 mov r3,#0
 1175 0090 1C1C     	 add r4,r3,#0
 1176              	.L36:
 1177 0092 E4B2     	 uxtb r4,r4
 1178 0094 B868     	 ldr r0,[r7,#8]
 1179 0096 FFF7FEFF 	 bl __aeabi_f2d
 1180 009a 0A1C     	 mov r2,r1
 1181 009c 011C     	 mov r1,r0
 1182 009e 0123     	 mov r3,#1
 1183 00a0 1D1C     	 add r5,r3,#0
 1184 00a2 081C     	 mov r0,r1
 1185 00a4 111C     	 mov r1,r2
 1186 00a6 944A     	 ldr r2,.L115+8
 1187 00a8 954B     	 ldr r3,.L115+16
 1188 00aa FFF7FEFF 	 bl __aeabi_dcmpgt
 1189 00ae 031E     	 sub r3,r0,#0
 1190 00b0 01D1     	 bne .L37
 1191 00b2 0023     	 mov r3,#0
 1192 00b4 1D1C     	 add r5,r3,#0
 1193              	.L37:
 1194 00b6 EBB2     	 uxtb r3,r5
 1195 00b8 2340     	 and r3,r4
 1196 00ba DBB2     	 uxtb r3,r3
 1197 00bc 002B     	 cmp r3,#0
 1198 00be 01D0     	 beq .L38
 1199              	 .loc 6 200 0 is_stmt 0 discriminator 1
 1200 00c0 0023     	 mov r3,#0
 1201 00c2 BB60     	 str r3,[r7,#8]
 1202              	.L38:
 201:../main.c     **** 
 202:../main.c     **** 	switch(Steering_mode_cal) // options 'Front'; 'Rear'; '4_Wheel'; 'Carb'; 'Rotate'
 1203              	 .loc 6 202 0 is_stmt 1
 1204 00c4 FB1D     	 add r3,r7,#7
 1205 00c6 1B78     	 ldrb r3,[r3]
 1206 00c8 052B     	 cmp r3,#5
 1207 00ca 01D9     	 bls .LCB549
 1208 00cc 00F04AFE 	 bl .L39
 1209              	.LCB549:
 1210 00d0 9A00     	 lsl r2,r3,#2
 1211 00d2 8C4B     	 ldr r3,.L115+20
 1212 00d4 D318     	 add r3,r2,r3
 1213 00d6 1B68     	 ldr r3,[r3]
 1214 00d8 9F46     	 mov pc,r3
 1215              	 .section .rodata.Steering_Function,"a",%progbits
 1216              	 .align 2
 1217              	.L41:
 1218 0000 640D0000 	 .word .L39
 1219 0004 DA000000 	 .word .L40
 1220 0008 A2040000 	 .word .L42
 1221 000c 6C080000 	 .word .L43
 1222 0010 7C0C0000 	 .word .L44
 1223 0014 DC0C0000 	 .word .L45
 1224              	 .section .text.Steering_Function
 1225              	.L40:
 203:../main.c     **** 	{
 204:../main.c     **** 		case FRONT://#############################################################
 205:../main.c     **** 			// steering limits
 206:../main.c     **** 			if(Steering_direction_cal > 50) Steering_direction_cal = 50;
 1226              	 .loc 6 206 0
 1227 00da F868     	 ldr r0,[r7,#12]
 1228 00dc 8A49     	 ldr r1,.L115+24
 1229 00de FFF7FEFF 	 bl __aeabi_fcmpgt
 1230 00e2 031E     	 sub r3,r0,#0
 1231 00e4 01D0     	 beq .L46
 1232              	 .loc 6 206 0 is_stmt 0 discriminator 1
 1233 00e6 884B     	 ldr r3,.L115+24
 1234 00e8 FB60     	 str r3,[r7,#12]
 1235              	.L46:
 207:../main.c     **** 			if(Steering_direction_cal < -50) Steering_direction_cal = -50;
 1236              	 .loc 6 207 0 is_stmt 1
 1237 00ea F868     	 ldr r0,[r7,#12]
 1238 00ec 8749     	 ldr r1,.L115+28
 1239 00ee FFF7FEFF 	 bl __aeabi_fcmplt
 1240 00f2 031E     	 sub r3,r0,#0
 1241 00f4 01D0     	 beq .L48
 1242              	 .loc 6 207 0 is_stmt 0 discriminator 1
 1243 00f6 854B     	 ldr r3,.L115+28
 1244 00f8 FB60     	 str r3,[r7,#12]
 1245              	.L48:
 208:../main.c     **** 
 209:../main.c     **** 			// pre calc
 210:../main.c     **** 			R_Turn = WHEEL_BASE / tan(Steering_direction_cal / RAD_TO_DEG); // to truni graduis converstion
 1246              	 .loc 6 210 0 is_stmt 1
 1247 00fa F868     	 ldr r0,[r7,#12]
 1248 00fc FFF7FEFF 	 bl __aeabi_f2d
 1249 0100 031C     	 mov r3,r0
 1250 0102 0C1C     	 mov r4,r1
 1251 0104 181C     	 mov r0,r3
 1252 0106 211C     	 mov r1,r4
 1253 0108 814A     	 ldr r2,.L115+32
 1254 010a 824B     	 ldr r3,.L115+36
 1255 010c FFF7FEFF 	 bl __aeabi_ddiv
 1256 0110 031C     	 mov r3,r0
 1257 0112 0C1C     	 mov r4,r1
 1258 0114 181C     	 mov r0,r3
 1259 0116 211C     	 mov r1,r4
 1260 0118 FFF7FEFF 	 bl tan
 1261 011c 031C     	 mov r3,r0
 1262 011e 0C1C     	 mov r4,r1
 1263 0120 7D48     	 ldr r0,.L115+40
 1264 0122 7E49     	 ldr r1,.L115+44
 1265 0124 1A1C     	 mov r2,r3
 1266 0126 231C     	 mov r3,r4
 1267 0128 FFF7FEFF 	 bl __aeabi_ddiv
 1268 012c 031C     	 mov r3,r0
 1269 012e 0C1C     	 mov r4,r1
 1270 0130 181C     	 mov r0,r3
 1271 0132 211C     	 mov r1,r4
 1272 0134 FFF7FEFF 	 bl __aeabi_d2f
 1273 0138 021C     	 add r2,r0,#0
 1274 013a 794B     	 ldr r3,.L115+48
 1275 013c 1A60     	 str r2,[r3]
 211:../main.c     **** 			Speed_ratio = (2 * (copysign(R_Turn,1) + HALF_TRACK_WIDTH) * M_PI) / (2 * copysign(R_Turn,1) * M
 1276              	 .loc 6 211 0
 1277 013e 784B     	 ldr r3,.L115+48
 1278 0140 1B68     	 ldr r3,[r3]
 1279 0142 5B00     	 lsl r3,r3,#1
 1280 0144 5B08     	 lsr r3,r3,#1
 1281 0146 181C     	 add r0,r3,#0
 1282 0148 FFF7FEFF 	 bl __aeabi_f2d
 1283 014c 031C     	 mov r3,r0
 1284 014e 0C1C     	 mov r4,r1
 1285 0150 181C     	 mov r0,r3
 1286 0152 211C     	 mov r1,r4
 1287 0154 734A     	 ldr r2,.L115+52
 1288 0156 744B     	 ldr r3,.L115+56
 1289 0158 FFF7FEFF 	 bl __aeabi_dadd
 1290 015c 031C     	 mov r3,r0
 1291 015e 0C1C     	 mov r4,r1
 1292 0160 181C     	 mov r0,r3
 1293 0162 211C     	 mov r1,r4
 1294 0164 1A1C     	 mov r2,r3
 1295 0166 231C     	 mov r3,r4
 1296 0168 FFF7FEFF 	 bl __aeabi_dadd
 1297 016c 031C     	 mov r3,r0
 1298 016e 0C1C     	 mov r4,r1
 1299 0170 181C     	 mov r0,r3
 1300 0172 211C     	 mov r1,r4
 1301 0174 6D4A     	 ldr r2,.L115+60
 1302 0176 6E4B     	 ldr r3,.L115+64
 1303 0178 FFF7FEFF 	 bl __aeabi_dmul
 1304 017c 031C     	 mov r3,r0
 1305 017e 0C1C     	 mov r4,r1
 1306 0180 1D1C     	 mov r5,r3
 1307 0182 261C     	 mov r6,r4
 1308 0184 664B     	 ldr r3,.L115+48
 1309 0186 1B68     	 ldr r3,[r3]
 1310 0188 5B00     	 lsl r3,r3,#1
 1311 018a 5B08     	 lsr r3,r3,#1
 1312 018c 181C     	 add r0,r3,#0
 1313 018e FFF7FEFF 	 bl __aeabi_f2d
 1314 0192 031C     	 mov r3,r0
 1315 0194 0C1C     	 mov r4,r1
 1316 0196 181C     	 mov r0,r3
 1317 0198 211C     	 mov r1,r4
 1318 019a 1A1C     	 mov r2,r3
 1319 019c 231C     	 mov r3,r4
 1320 019e FFF7FEFF 	 bl __aeabi_dadd
 1321 01a2 031C     	 mov r3,r0
 1322 01a4 0C1C     	 mov r4,r1
 1323 01a6 181C     	 mov r0,r3
 1324 01a8 211C     	 mov r1,r4
 1325 01aa 604A     	 ldr r2,.L115+60
 1326 01ac 604B     	 ldr r3,.L115+64
 1327 01ae FFF7FEFF 	 bl __aeabi_dmul
 1328 01b2 031C     	 mov r3,r0
 1329 01b4 0C1C     	 mov r4,r1
 1330 01b6 281C     	 mov r0,r5
 1331 01b8 311C     	 mov r1,r6
 1332 01ba 1A1C     	 mov r2,r3
 1333 01bc 231C     	 mov r3,r4
 1334 01be FFF7FEFF 	 bl __aeabi_ddiv
 1335 01c2 031C     	 mov r3,r0
 1336 01c4 0C1C     	 mov r4,r1
 1337 01c6 181C     	 mov r0,r3
 1338 01c8 211C     	 mov r1,r4
 1339 01ca FFF7FEFF 	 bl __aeabi_d2f
 1340 01ce 021C     	 add r2,r0,#0
 1341 01d0 584B     	 ldr r3,.L115+68
 1342 01d2 1A60     	 str r2,[r3]
 212:../main.c     **** 
 213:../main.c     **** 			if((R_TRUN_MIN < R_Turn) && (R_Turn < R_TRUN_MAX)){
 1343              	 .loc 6 213 0
 1344 01d4 524B     	 ldr r3,.L115+48
 1345 01d6 1B68     	 ldr r3,[r3]
 1346 01d8 181C     	 add r0,r3,#0
 1347 01da FFF7FEFF 	 bl __aeabi_f2d
 1348 01de 031C     	 mov r3,r0
 1349 01e0 0C1C     	 mov r4,r1
 1350 01e2 181C     	 mov r0,r3
 1351 01e4 211C     	 mov r1,r4
 1352 01e6 444A     	 ldr r2,.L115+8
 1353 01e8 444B     	 ldr r3,.L115+12
 1354 01ea FFF7FEFF 	 bl __aeabi_dcmpgt
 1355 01ee 031E     	 sub r3,r0,#0
 1356 01f0 00D1     	 bne .LCB689
 1357 01f2 AFE0     	 b .L50
 1358              	.LCB689:
 1359              	 .loc 6 213 0 is_stmt 0 discriminator 1
 1360 01f4 4A4B     	 ldr r3,.L115+48
 1361 01f6 1B68     	 ldr r3,[r3]
 1362 01f8 181C     	 add r0,r3,#0
 1363 01fa 4F49     	 ldr r1,.L115+72
 1364 01fc FFF7FEFF 	 bl __aeabi_fcmplt
 1365 0200 031E     	 sub r3,r0,#0
 1366 0202 00D1     	 bne .LCB697
 1367 0204 A6E0     	 b .L50
 1368              	.LCB697:
 214:../main.c     **** 				angle_fl = RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn + HALF_TRACK_WIDTH)); // out wheel
 1369              	 .loc 6 214 0 is_stmt 1
 1370 0206 464B     	 ldr r3,.L115+48
 1371 0208 1B68     	 ldr r3,[r3]
 1372 020a 181C     	 add r0,r3,#0
 1373 020c FFF7FEFF 	 bl __aeabi_f2d
 1374 0210 031C     	 mov r3,r0
 1375 0212 0C1C     	 mov r4,r1
 1376 0214 181C     	 mov r0,r3
 1377 0216 211C     	 mov r1,r4
 1378 0218 424A     	 ldr r2,.L115+52
 1379 021a 434B     	 ldr r3,.L115+56
 1380 021c FFF7FEFF 	 bl __aeabi_dadd
 1381 0220 031C     	 mov r3,r0
 1382 0222 0C1C     	 mov r4,r1
 1383 0224 3C48     	 ldr r0,.L115+40
 1384 0226 3D49     	 ldr r1,.L115+44
 1385 0228 1A1C     	 mov r2,r3
 1386 022a 231C     	 mov r3,r4
 1387 022c FFF7FEFF 	 bl __aeabi_ddiv
 1388 0230 031C     	 mov r3,r0
 1389 0232 0C1C     	 mov r4,r1
 1390 0234 181C     	 mov r0,r3
 1391 0236 211C     	 mov r1,r4
 1392 0238 FFF7FEFF 	 bl atan
 1393 023c 031C     	 mov r3,r0
 1394 023e 0C1C     	 mov r4,r1
 1395 0240 181C     	 mov r0,r3
 1396 0242 211C     	 mov r1,r4
 1397 0244 324A     	 ldr r2,.L115+32
 1398 0246 334B     	 ldr r3,.L115+36
 1399 0248 FFF7FEFF 	 bl __aeabi_dmul
 1400 024c 031C     	 mov r3,r0
 1401 024e 0C1C     	 mov r4,r1
 1402 0250 181C     	 mov r0,r3
 1403 0252 211C     	 mov r1,r4
 1404 0254 FFF7FEFF 	 bl __aeabi_d2f
 1405 0258 021C     	 add r2,r0,#0
 1406 025a 384B     	 ldr r3,.L115+76
 1407 025c 1A60     	 str r2,[r3]
 215:../main.c     **** 				angle_fr = RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn - HALF_TRACK_WIDTH)); // in wheel
 1408              	 .loc 6 215 0
 1409 025e 304B     	 ldr r3,.L115+48
 1410 0260 1B68     	 ldr r3,[r3]
 1411 0262 181C     	 add r0,r3,#0
 1412 0264 FFF7FEFF 	 bl __aeabi_f2d
 1413 0268 031C     	 mov r3,r0
 1414 026a 0C1C     	 mov r4,r1
 1415 026c 181C     	 mov r0,r3
 1416 026e 211C     	 mov r1,r4
 1417 0270 2C4A     	 ldr r2,.L115+52
 1418 0272 2D4B     	 ldr r3,.L115+56
 1419 0274 FFF7FEFF 	 bl __aeabi_dsub
 1420 0278 031C     	 mov r3,r0
 1421 027a 0C1C     	 mov r4,r1
 1422 027c 2648     	 ldr r0,.L115+40
 1423 027e 2749     	 ldr r1,.L115+44
 1424 0280 1A1C     	 mov r2,r3
 1425 0282 231C     	 mov r3,r4
 1426 0284 FFF7FEFF 	 bl __aeabi_ddiv
 1427 0288 031C     	 mov r3,r0
 1428 028a 0C1C     	 mov r4,r1
 1429 028c 181C     	 mov r0,r3
 1430 028e 211C     	 mov r1,r4
 1431 0290 FFF7FEFF 	 bl atan
 1432 0294 031C     	 mov r3,r0
 1433 0296 0C1C     	 mov r4,r1
 1434 0298 181C     	 mov r0,r3
 1435 029a 211C     	 mov r1,r4
 1436 029c 1C4A     	 ldr r2,.L115+32
 1437 029e 1D4B     	 ldr r3,.L115+36
 1438 02a0 FFF7FEFF 	 bl __aeabi_dmul
 1439 02a4 031C     	 mov r3,r0
 1440 02a6 0C1C     	 mov r4,r1
 1441 02a8 181C     	 mov r0,r3
 1442 02aa 211C     	 mov r1,r4
 1443 02ac FFF7FEFF 	 bl __aeabi_d2f
 1444 02b0 021C     	 add r2,r0,#0
 1445 02b2 234B     	 ldr r3,.L115+80
 1446 02b4 1A60     	 str r2,[r3]
 216:../main.c     **** 
 217:../main.c     **** 				speed_fl = Driving_speed_cal * Speed_ratio;
 1447              	 .loc 6 217 0
 1448 02b6 1F4B     	 ldr r3,.L115+68
 1449 02b8 1B68     	 ldr r3,[r3]
 1450 02ba 181C     	 add r0,r3,#0
 1451 02bc B968     	 ldr r1,[r7,#8]
 1452 02be FFF7FEFF 	 bl __aeabi_fmul
 1453 02c2 031C     	 add r3,r0,#0
 1454 02c4 1A1C     	 add r2,r3,#0
 1455 02c6 1F4B     	 ldr r3,.L115+84
 1456 02c8 1A60     	 str r2,[r3]
 218:../main.c     **** 				speed_fr = Driving_speed_cal / Speed_ratio;
 1457              	 .loc 6 218 0
 1458 02ca 1A4B     	 ldr r3,.L115+68
 1459 02cc 1B68     	 ldr r3,[r3]
 1460 02ce B868     	 ldr r0,[r7,#8]
 1461 02d0 191C     	 add r1,r3,#0
 1462 02d2 FFF7FEFF 	 bl __aeabi_fdiv
 1463 02d6 031C     	 add r3,r0,#0
 1464 02d8 1A1C     	 add r2,r3,#0
 1465 02da 1B4B     	 ldr r3,.L115+88
 1466 02dc 1A60     	 str r2,[r3]
 219:../main.c     **** 				//speed_rl = Driving_speed_cal * Speed_ratio;
 220:../main.c     **** 				//speed_rr = Driving_speed_cal / Speed_ratio;
 221:../main.c     **** 
 222:../main.c     **** 				speed_rl = speed_fl;
 1467              	 .loc 6 222 0
 1468 02de 194B     	 ldr r3,.L115+84
 1469 02e0 1A68     	 ldr r2,[r3]
 1470 02e2 1A4B     	 ldr r3,.L115+92
 1471 02e4 1A60     	 str r2,[r3]
 223:../main.c     **** 				speed_rr = speed_fr;
 1472              	 .loc 6 223 0
 1473 02e6 184B     	 ldr r3,.L115+88
 1474 02e8 1A68     	 ldr r2,[r3]
 1475 02ea 194B     	 ldr r3,.L115+96
 1476 02ec 1A60     	 str r2,[r3]
 1477 02ee D0E0     	 b .L53
 1478              	.L116:
 1479              	 .align 2
 1480              	.L115:
 1481 02f0 00000000 	 .word New_Input
 1482 02f4 000080BF 	 .word -1082130432
 1483 02f8 9A999999 	 .word -1717986918
 1484 02fc 9999A93F 	 .word 1068079513
 1485 0300 9999A9BF 	 .word -1079404135
 1486 0304 00000000 	 .word .L41
 1487 0308 00004842 	 .word 1112014848
 1488 030c 000048C2 	 .word -1035468800
 1489 0310 D9CEF753 	 .word 1408749273
 1490 0314 E3A54C40 	 .word 1078765027
 1491 0318 79E92631 	 .word 824633721
 1492 031c 08ACDC3F 	 .word 1071426568
 1493 0320 00000000 	 .word R_Turn
 1494 0324 77BE9F1A 	 .word 446676599
 1495 0328 2FDDC43F 	 .word 1069866287
 1496 032c 182D4454 	 .word 1413754136
 1497 0330 FB210940 	 .word 1074340347
 1498 0334 00000000 	 .word Speed_ratio
 1499 0338 0000A041 	 .word 1101004800
 1500 033c 00000000 	 .word angle_fl
 1501 0340 00000000 	 .word angle_fr
 1502 0344 00000000 	 .word speed_fl
 1503 0348 00000000 	 .word speed_fr
 1504 034c 00000000 	 .word speed_rl
 1505 0350 00000000 	 .word speed_rr
 1506              	.L50:
 224:../main.c     **** 			}
 225:../main.c     **** 			else if((- R_TRUN_MIN > R_Turn) && (R_Turn > -R_TRUN_MAX)){
 1507              	 .loc 6 225 0
 1508 0354 D84B     	 ldr r3,.L117
 1509 0356 1B68     	 ldr r3,[r3]
 1510 0358 181C     	 add r0,r3,#0
 1511 035a FFF7FEFF 	 bl __aeabi_f2d
 1512 035e 031C     	 mov r3,r0
 1513 0360 0C1C     	 mov r4,r1
 1514 0362 181C     	 mov r0,r3
 1515 0364 211C     	 mov r1,r4
 1516 0366 D54A     	 ldr r2,.L117+4
 1517 0368 D54B     	 ldr r3,.L117+8
 1518 036a FFF7FEFF 	 bl __aeabi_dcmplt
 1519 036e 031E     	 sub r3,r0,#0
 1520 0370 00D1     	 bne .LCB847
 1521 0372 7CE0     	 b .L54
 1522              	.LCB847:
 1523              	 .loc 6 225 0 is_stmt 0 discriminator 1
 1524 0374 D04B     	 ldr r3,.L117
 1525 0376 1B68     	 ldr r3,[r3]
 1526 0378 181C     	 add r0,r3,#0
 1527 037a D249     	 ldr r1,.L117+12
 1528 037c FFF7FEFF 	 bl __aeabi_fcmpgt
 1529 0380 031E     	 sub r3,r0,#0
 1530 0382 74D0     	 beq .L54
 226:../main.c     **** 				angle_fl = RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn + HALF_TRACK_WIDTH)); // in wheel
 1531              	 .loc 6 226 0 is_stmt 1
 1532 0384 CC4B     	 ldr r3,.L117
 1533 0386 1B68     	 ldr r3,[r3]
 1534 0388 181C     	 add r0,r3,#0
 1535 038a FFF7FEFF 	 bl __aeabi_f2d
 1536 038e 031C     	 mov r3,r0
 1537 0390 0C1C     	 mov r4,r1
 1538 0392 181C     	 mov r0,r3
 1539 0394 211C     	 mov r1,r4
 1540 0396 CC4A     	 ldr r2,.L117+16
 1541 0398 CC4B     	 ldr r3,.L117+20
 1542 039a FFF7FEFF 	 bl __aeabi_dadd
 1543 039e 031C     	 mov r3,r0
 1544 03a0 0C1C     	 mov r4,r1
 1545 03a2 CB48     	 ldr r0,.L117+24
 1546 03a4 CB49     	 ldr r1,.L117+28
 1547 03a6 1A1C     	 mov r2,r3
 1548 03a8 231C     	 mov r3,r4
 1549 03aa FFF7FEFF 	 bl __aeabi_ddiv
 1550 03ae 031C     	 mov r3,r0
 1551 03b0 0C1C     	 mov r4,r1
 1552 03b2 181C     	 mov r0,r3
 1553 03b4 211C     	 mov r1,r4
 1554 03b6 FFF7FEFF 	 bl atan
 1555 03ba 031C     	 mov r3,r0
 1556 03bc 0C1C     	 mov r4,r1
 1557 03be 181C     	 mov r0,r3
 1558 03c0 211C     	 mov r1,r4
 1559 03c2 C54A     	 ldr r2,.L117+32
 1560 03c4 C54B     	 ldr r3,.L117+36
 1561 03c6 FFF7FEFF 	 bl __aeabi_dmul
 1562 03ca 031C     	 mov r3,r0
 1563 03cc 0C1C     	 mov r4,r1
 1564 03ce 181C     	 mov r0,r3
 1565 03d0 211C     	 mov r1,r4
 1566 03d2 FFF7FEFF 	 bl __aeabi_d2f
 1567 03d6 021C     	 add r2,r0,#0
 1568 03d8 C14B     	 ldr r3,.L117+40
 1569 03da 1A60     	 str r2,[r3]
 227:../main.c     **** 				angle_fr = RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn - HALF_TRACK_WIDTH)); // out wheel
 1570              	 .loc 6 227 0
 1571 03dc B64B     	 ldr r3,.L117
 1572 03de 1B68     	 ldr r3,[r3]
 1573 03e0 181C     	 add r0,r3,#0
 1574 03e2 FFF7FEFF 	 bl __aeabi_f2d
 1575 03e6 031C     	 mov r3,r0
 1576 03e8 0C1C     	 mov r4,r1
 1577 03ea 181C     	 mov r0,r3
 1578 03ec 211C     	 mov r1,r4
 1579 03ee B64A     	 ldr r2,.L117+16
 1580 03f0 B64B     	 ldr r3,.L117+20
 1581 03f2 FFF7FEFF 	 bl __aeabi_dsub
 1582 03f6 031C     	 mov r3,r0
 1583 03f8 0C1C     	 mov r4,r1
 1584 03fa B548     	 ldr r0,.L117+24
 1585 03fc B549     	 ldr r1,.L117+28
 1586 03fe 1A1C     	 mov r2,r3
 1587 0400 231C     	 mov r3,r4
 1588 0402 FFF7FEFF 	 bl __aeabi_ddiv
 1589 0406 031C     	 mov r3,r0
 1590 0408 0C1C     	 mov r4,r1
 1591 040a 181C     	 mov r0,r3
 1592 040c 211C     	 mov r1,r4
 1593 040e FFF7FEFF 	 bl atan
 1594 0412 031C     	 mov r3,r0
 1595 0414 0C1C     	 mov r4,r1
 1596 0416 181C     	 mov r0,r3
 1597 0418 211C     	 mov r1,r4
 1598 041a AF4A     	 ldr r2,.L117+32
 1599 041c AF4B     	 ldr r3,.L117+36
 1600 041e FFF7FEFF 	 bl __aeabi_dmul
 1601 0422 031C     	 mov r3,r0
 1602 0424 0C1C     	 mov r4,r1
 1603 0426 181C     	 mov r0,r3
 1604 0428 211C     	 mov r1,r4
 1605 042a FFF7FEFF 	 bl __aeabi_d2f
 1606 042e 021C     	 add r2,r0,#0
 1607 0430 AC4B     	 ldr r3,.L117+44
 1608 0432 1A60     	 str r2,[r3]
 228:../main.c     **** 
 229:../main.c     **** 				speed_fl = Driving_speed_cal / Speed_ratio;
 1609              	 .loc 6 229 0
 1610 0434 AC4B     	 ldr r3,.L117+48
 1611 0436 1B68     	 ldr r3,[r3]
 1612 0438 B868     	 ldr r0,[r7,#8]
 1613 043a 191C     	 add r1,r3,#0
 1614 043c FFF7FEFF 	 bl __aeabi_fdiv
 1615 0440 031C     	 add r3,r0,#0
 1616 0442 1A1C     	 add r2,r3,#0
 1617 0444 A94B     	 ldr r3,.L117+52
 1618 0446 1A60     	 str r2,[r3]
 230:../main.c     **** 				speed_fr = Driving_speed_cal * Speed_ratio;
 1619              	 .loc 6 230 0
 1620 0448 A74B     	 ldr r3,.L117+48
 1621 044a 1B68     	 ldr r3,[r3]
 1622 044c 181C     	 add r0,r3,#0
 1623 044e B968     	 ldr r1,[r7,#8]
 1624 0450 FFF7FEFF 	 bl __aeabi_fmul
 1625 0454 031C     	 add r3,r0,#0
 1626 0456 1A1C     	 add r2,r3,#0
 1627 0458 A54B     	 ldr r3,.L117+56
 1628 045a 1A60     	 str r2,[r3]
 231:../main.c     **** 				//speed_rl = Driving_speed_cal / Speed_ratio;
 232:../main.c     **** 				//speed_rr = Driving_speed_cal * Speed_ratio;
 233:../main.c     **** 
 234:../main.c     **** 				speed_rl = speed_fl;
 1629              	 .loc 6 234 0
 1630 045c A34B     	 ldr r3,.L117+52
 1631 045e 1A68     	 ldr r2,[r3]
 1632 0460 A44B     	 ldr r3,.L117+60
 1633 0462 1A60     	 str r2,[r3]
 235:../main.c     **** 				speed_rr = speed_fr;
 1634              	 .loc 6 235 0
 1635 0464 A24B     	 ldr r3,.L117+56
 1636 0466 1A68     	 ldr r2,[r3]
 1637 0468 A34B     	 ldr r3,.L117+64
 1638 046a 1A60     	 str r2,[r3]
 1639 046c 11E0     	 b .L53
 1640              	.L54:
 236:../main.c     **** 			}
 237:../main.c     **** 			else{
 238:../main.c     **** 				angle_fl = 0;
 1641              	 .loc 6 238 0
 1642 046e 9C4B     	 ldr r3,.L117+40
 1643 0470 0022     	 mov r2,#0
 1644 0472 1A60     	 str r2,[r3]
 239:../main.c     **** 				angle_fr = 0;
 1645              	 .loc 6 239 0
 1646 0474 9B4B     	 ldr r3,.L117+44
 1647 0476 0022     	 mov r2,#0
 1648 0478 1A60     	 str r2,[r3]
 240:../main.c     **** 
 241:../main.c     **** 				speed_fl = Driving_speed_cal;
 1649              	 .loc 6 241 0
 1650 047a 9C4B     	 ldr r3,.L117+52
 1651 047c BA68     	 ldr r2,[r7,#8]
 1652 047e 1A60     	 str r2,[r3]
 242:../main.c     **** 				speed_fr = Driving_speed_cal;
 1653              	 .loc 6 242 0
 1654 0480 9B4B     	 ldr r3,.L117+56
 1655 0482 BA68     	 ldr r2,[r7,#8]
 1656 0484 1A60     	 str r2,[r3]
 243:../main.c     **** 				speed_rl = Driving_speed_cal;
 1657              	 .loc 6 243 0
 1658 0486 9B4B     	 ldr r3,.L117+60
 1659 0488 BA68     	 ldr r2,[r7,#8]
 1660 048a 1A60     	 str r2,[r3]
 244:../main.c     **** 				speed_rr = Driving_speed_cal;
 1661              	 .loc 6 244 0
 1662 048c 9A4B     	 ldr r3,.L117+64
 1663 048e BA68     	 ldr r2,[r7,#8]
 1664 0490 1A60     	 str r2,[r3]
 1665              	.L53:
 245:../main.c     **** 			}
 246:../main.c     **** 
 247:../main.c     **** 			//rear axle
 248:../main.c     **** 			angle_rl = 0;
 1666              	 .loc 6 248 0
 1667 0492 9A4B     	 ldr r3,.L117+68
 1668 0494 0022     	 mov r2,#0
 1669 0496 1A60     	 str r2,[r3]
 249:../main.c     **** 			angle_rr = 0;
 1670              	 .loc 6 249 0
 1671 0498 994B     	 ldr r3,.L117+72
 1672 049a 0022     	 mov r2,#0
 1673 049c 1A60     	 str r2,[r3]
 250:../main.c     **** 			break;
 1674              	 .loc 6 250 0
 1675 049e 00F079FC 	 bl .L57
 1676              	.L42:
 251:../main.c     **** 
 252:../main.c     **** 		case BACK:// rear #############################################################
 253:../main.c     **** 			// steering limits
 254:../main.c     **** 			if(Steering_direction_cal > 50) Steering_direction_cal = 50;
 1677              	 .loc 6 254 0
 1678 04a2 F868     	 ldr r0,[r7,#12]
 1679 04a4 9749     	 ldr r1,.L117+76
 1680 04a6 FFF7FEFF 	 bl __aeabi_fcmpgt
 1681 04aa 031E     	 sub r3,r0,#0
 1682 04ac 01D0     	 beq .L58
 1683              	 .loc 6 254 0 is_stmt 0 discriminator 1
 1684 04ae 954B     	 ldr r3,.L117+76
 1685 04b0 FB60     	 str r3,[r7,#12]
 1686              	.L58:
 255:../main.c     **** 			if(Steering_direction_cal < -50) Steering_direction_cal = -50;
 1687              	 .loc 6 255 0 is_stmt 1
 1688 04b2 F868     	 ldr r0,[r7,#12]
 1689 04b4 9449     	 ldr r1,.L117+80
 1690 04b6 FFF7FEFF 	 bl __aeabi_fcmplt
 1691 04ba 031E     	 sub r3,r0,#0
 1692 04bc 01D0     	 beq .L60
 1693              	 .loc 6 255 0 is_stmt 0 discriminator 1
 1694 04be 924B     	 ldr r3,.L117+80
 1695 04c0 FB60     	 str r3,[r7,#12]
 1696              	.L60:
 256:../main.c     **** 
 257:../main.c     **** 			// pre calc
 258:../main.c     **** 			R_Turn = WHEEL_BASE / tan(Steering_direction_cal / RAD_TO_DEG); // to truni graduis converstion
 1697              	 .loc 6 258 0 is_stmt 1
 1698 04c2 F868     	 ldr r0,[r7,#12]
 1699 04c4 FFF7FEFF 	 bl __aeabi_f2d
 1700 04c8 031C     	 mov r3,r0
 1701 04ca 0C1C     	 mov r4,r1
 1702 04cc 181C     	 mov r0,r3
 1703 04ce 211C     	 mov r1,r4
 1704 04d0 814A     	 ldr r2,.L117+32
 1705 04d2 824B     	 ldr r3,.L117+36
 1706 04d4 FFF7FEFF 	 bl __aeabi_ddiv
 1707 04d8 031C     	 mov r3,r0
 1708 04da 0C1C     	 mov r4,r1
 1709 04dc 181C     	 mov r0,r3
 1710 04de 211C     	 mov r1,r4
 1711 04e0 FFF7FEFF 	 bl tan
 1712 04e4 031C     	 mov r3,r0
 1713 04e6 0C1C     	 mov r4,r1
 1714 04e8 7948     	 ldr r0,.L117+24
 1715 04ea 7A49     	 ldr r1,.L117+28
 1716 04ec 1A1C     	 mov r2,r3
 1717 04ee 231C     	 mov r3,r4
 1718 04f0 FFF7FEFF 	 bl __aeabi_ddiv
 1719 04f4 031C     	 mov r3,r0
 1720 04f6 0C1C     	 mov r4,r1
 1721 04f8 181C     	 mov r0,r3
 1722 04fa 211C     	 mov r1,r4
 1723 04fc FFF7FEFF 	 bl __aeabi_d2f
 1724 0500 021C     	 add r2,r0,#0
 1725 0502 6D4B     	 ldr r3,.L117
 1726 0504 1A60     	 str r2,[r3]
 259:../main.c     **** 			Speed_ratio = (2 * (copysign(R_Turn,1) + HALF_TRACK_WIDTH) * M_PI) / (2 * copysign(R_Turn,1) * M
 1727              	 .loc 6 259 0
 1728 0506 6C4B     	 ldr r3,.L117
 1729 0508 1B68     	 ldr r3,[r3]
 1730 050a 5B00     	 lsl r3,r3,#1
 1731 050c 5B08     	 lsr r3,r3,#1
 1732 050e 181C     	 add r0,r3,#0
 1733 0510 FFF7FEFF 	 bl __aeabi_f2d
 1734 0514 031C     	 mov r3,r0
 1735 0516 0C1C     	 mov r4,r1
 1736 0518 181C     	 mov r0,r3
 1737 051a 211C     	 mov r1,r4
 1738 051c 6A4A     	 ldr r2,.L117+16
 1739 051e 6B4B     	 ldr r3,.L117+20
 1740 0520 FFF7FEFF 	 bl __aeabi_dadd
 1741 0524 031C     	 mov r3,r0
 1742 0526 0C1C     	 mov r4,r1
 1743 0528 181C     	 mov r0,r3
 1744 052a 211C     	 mov r1,r4
 1745 052c 1A1C     	 mov r2,r3
 1746 052e 231C     	 mov r3,r4
 1747 0530 FFF7FEFF 	 bl __aeabi_dadd
 1748 0534 031C     	 mov r3,r0
 1749 0536 0C1C     	 mov r4,r1
 1750 0538 181C     	 mov r0,r3
 1751 053a 211C     	 mov r1,r4
 1752 053c 734A     	 ldr r2,.L117+84
 1753 053e 744B     	 ldr r3,.L117+88
 1754 0540 FFF7FEFF 	 bl __aeabi_dmul
 1755 0544 031C     	 mov r3,r0
 1756 0546 0C1C     	 mov r4,r1
 1757 0548 1D1C     	 mov r5,r3
 1758 054a 261C     	 mov r6,r4
 1759 054c 5A4B     	 ldr r3,.L117
 1760 054e 1B68     	 ldr r3,[r3]
 1761 0550 5B00     	 lsl r3,r3,#1
 1762 0552 5B08     	 lsr r3,r3,#1
 1763 0554 181C     	 add r0,r3,#0
 1764 0556 FFF7FEFF 	 bl __aeabi_f2d
 1765 055a 031C     	 mov r3,r0
 1766 055c 0C1C     	 mov r4,r1
 1767 055e 181C     	 mov r0,r3
 1768 0560 211C     	 mov r1,r4
 1769 0562 1A1C     	 mov r2,r3
 1770 0564 231C     	 mov r3,r4
 1771 0566 FFF7FEFF 	 bl __aeabi_dadd
 1772 056a 031C     	 mov r3,r0
 1773 056c 0C1C     	 mov r4,r1
 1774 056e 181C     	 mov r0,r3
 1775 0570 211C     	 mov r1,r4
 1776 0572 664A     	 ldr r2,.L117+84
 1777 0574 664B     	 ldr r3,.L117+88
 1778 0576 FFF7FEFF 	 bl __aeabi_dmul
 1779 057a 031C     	 mov r3,r0
 1780 057c 0C1C     	 mov r4,r1
 1781 057e 281C     	 mov r0,r5
 1782 0580 311C     	 mov r1,r6
 1783 0582 1A1C     	 mov r2,r3
 1784 0584 231C     	 mov r3,r4
 1785 0586 FFF7FEFF 	 bl __aeabi_ddiv
 1786 058a 031C     	 mov r3,r0
 1787 058c 0C1C     	 mov r4,r1
 1788 058e 181C     	 mov r0,r3
 1789 0590 211C     	 mov r1,r4
 1790 0592 FFF7FEFF 	 bl __aeabi_d2f
 1791 0596 021C     	 add r2,r0,#0
 1792 0598 534B     	 ldr r3,.L117+48
 1793 059a 1A60     	 str r2,[r3]
 260:../main.c     **** 
 261:../main.c     **** 			if((R_TRUN_MIN < R_Turn) && (R_Turn < R_TRUN_MAX)){
 1794              	 .loc 6 261 0
 1795 059c 464B     	 ldr r3,.L117
 1796 059e 1B68     	 ldr r3,[r3]
 1797 05a0 181C     	 add r0,r3,#0
 1798 05a2 FFF7FEFF 	 bl __aeabi_f2d
 1799 05a6 031C     	 mov r3,r0
 1800 05a8 0C1C     	 mov r4,r1
 1801 05aa 181C     	 mov r0,r3
 1802 05ac 211C     	 mov r1,r4
 1803 05ae 434A     	 ldr r2,.L117+4
 1804 05b0 584B     	 ldr r3,.L117+92
 1805 05b2 FFF7FEFF 	 bl __aeabi_dcmpgt
 1806 05b6 031E     	 sub r3,r0,#0
 1807 05b8 00D1     	 bne .LCB1120
 1808 05ba B1E0     	 b .L62
 1809              	.LCB1120:
 1810              	 .loc 6 261 0 is_stmt 0 discriminator 1
 1811 05bc 3E4B     	 ldr r3,.L117
 1812 05be 1B68     	 ldr r3,[r3]
 1813 05c0 181C     	 add r0,r3,#0
 1814 05c2 5549     	 ldr r1,.L117+96
 1815 05c4 FFF7FEFF 	 bl __aeabi_fcmplt
 1816 05c8 031E     	 sub r3,r0,#0
 1817 05ca 00D1     	 bne .LCB1128
 1818 05cc A8E0     	 b .L62
 1819              	.LCB1128:
 262:../main.c     **** 				angle_rl = - RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn + HALF_TRACK_WIDTH)); // out wheel
 1820              	 .loc 6 262 0 is_stmt 1
 1821 05ce 3A4B     	 ldr r3,.L117
 1822 05d0 1B68     	 ldr r3,[r3]
 1823 05d2 181C     	 add r0,r3,#0
 1824 05d4 FFF7FEFF 	 bl __aeabi_f2d
 1825 05d8 031C     	 mov r3,r0
 1826 05da 0C1C     	 mov r4,r1
 1827 05dc 181C     	 mov r0,r3
 1828 05de 211C     	 mov r1,r4
 1829 05e0 394A     	 ldr r2,.L117+16
 1830 05e2 3A4B     	 ldr r3,.L117+20
 1831 05e4 FFF7FEFF 	 bl __aeabi_dadd
 1832 05e8 031C     	 mov r3,r0
 1833 05ea 0C1C     	 mov r4,r1
 1834 05ec 3848     	 ldr r0,.L117+24
 1835 05ee 3949     	 ldr r1,.L117+28
 1836 05f0 1A1C     	 mov r2,r3
 1837 05f2 231C     	 mov r3,r4
 1838 05f4 FFF7FEFF 	 bl __aeabi_ddiv
 1839 05f8 031C     	 mov r3,r0
 1840 05fa 0C1C     	 mov r4,r1
 1841 05fc 181C     	 mov r0,r3
 1842 05fe 211C     	 mov r1,r4
 1843 0600 FFF7FEFF 	 bl atan
 1844 0604 031C     	 mov r3,r0
 1845 0606 0C1C     	 mov r4,r1
 1846 0608 181C     	 mov r0,r3
 1847 060a 211C     	 mov r1,r4
 1848 060c 324A     	 ldr r2,.L117+32
 1849 060e 434B     	 ldr r3,.L117+100
 1850 0610 FFF7FEFF 	 bl __aeabi_dmul
 1851 0614 031C     	 mov r3,r0
 1852 0616 0C1C     	 mov r4,r1
 1853 0618 181C     	 mov r0,r3
 1854 061a 211C     	 mov r1,r4
 1855 061c FFF7FEFF 	 bl __aeabi_d2f
 1856 0620 021C     	 add r2,r0,#0
 1857 0622 364B     	 ldr r3,.L117+68
 1858 0624 1A60     	 str r2,[r3]
 263:../main.c     **** 				angle_rr = - RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn - HALF_TRACK_WIDTH)); // in wheel
 1859              	 .loc 6 263 0
 1860 0626 244B     	 ldr r3,.L117
 1861 0628 1B68     	 ldr r3,[r3]
 1862 062a 181C     	 add r0,r3,#0
 1863 062c FFF7FEFF 	 bl __aeabi_f2d
 1864 0630 031C     	 mov r3,r0
 1865 0632 0C1C     	 mov r4,r1
 1866 0634 181C     	 mov r0,r3
 1867 0636 211C     	 mov r1,r4
 1868 0638 234A     	 ldr r2,.L117+16
 1869 063a 244B     	 ldr r3,.L117+20
 1870 063c FFF7FEFF 	 bl __aeabi_dsub
 1871 0640 031C     	 mov r3,r0
 1872 0642 0C1C     	 mov r4,r1
 1873 0644 2248     	 ldr r0,.L117+24
 1874 0646 2349     	 ldr r1,.L117+28
 1875 0648 1A1C     	 mov r2,r3
 1876 064a 231C     	 mov r3,r4
 1877 064c FFF7FEFF 	 bl __aeabi_ddiv
 1878 0650 031C     	 mov r3,r0
 1879 0652 0C1C     	 mov r4,r1
 1880 0654 181C     	 mov r0,r3
 1881 0656 211C     	 mov r1,r4
 1882 0658 FFF7FEFF 	 bl atan
 1883 065c 031C     	 mov r3,r0
 1884 065e 0C1C     	 mov r4,r1
 1885 0660 181C     	 mov r0,r3
 1886 0662 211C     	 mov r1,r4
 1887 0664 1C4A     	 ldr r2,.L117+32
 1888 0666 2D4B     	 ldr r3,.L117+100
 1889 0668 FFF7FEFF 	 bl __aeabi_dmul
 1890 066c 031C     	 mov r3,r0
 1891 066e 0C1C     	 mov r4,r1
 1892 0670 181C     	 mov r0,r3
 1893 0672 211C     	 mov r1,r4
 1894 0674 FFF7FEFF 	 bl __aeabi_d2f
 1895 0678 021C     	 add r2,r0,#0
 1896 067a 214B     	 ldr r3,.L117+72
 1897 067c 1A60     	 str r2,[r3]
 264:../main.c     **** 
 265:../main.c     **** 
 266:../main.c     **** 				speed_fl = Driving_speed_cal * Speed_ratio;
 1898              	 .loc 6 266 0
 1899 067e 1A4B     	 ldr r3,.L117+48
 1900 0680 1B68     	 ldr r3,[r3]
 1901 0682 181C     	 add r0,r3,#0
 1902 0684 B968     	 ldr r1,[r7,#8]
 1903 0686 FFF7FEFF 	 bl __aeabi_fmul
 1904 068a 031C     	 add r3,r0,#0
 1905 068c 1A1C     	 add r2,r3,#0
 1906 068e 174B     	 ldr r3,.L117+52
 1907 0690 1A60     	 str r2,[r3]
 267:../main.c     **** 				speed_fr = Driving_speed_cal / Speed_ratio;
 1908              	 .loc 6 267 0
 1909 0692 154B     	 ldr r3,.L117+48
 1910 0694 1B68     	 ldr r3,[r3]
 1911 0696 B868     	 ldr r0,[r7,#8]
 1912 0698 191C     	 add r1,r3,#0
 1913 069a FFF7FEFF 	 bl __aeabi_fdiv
 1914 069e 031C     	 add r3,r0,#0
 1915 06a0 1A1C     	 add r2,r3,#0
 1916 06a2 134B     	 ldr r3,.L117+56
 1917 06a4 1A60     	 str r2,[r3]
 268:../main.c     **** 				//speed_rl = Driving_speed_cal * Speed_ratio;
 269:../main.c     **** 				//speed_rr = Driving_speed_cal / Speed_ratio;
 270:../main.c     **** 
 271:../main.c     **** 				speed_rl = speed_fl;
 1918              	 .loc 6 271 0
 1919 06a6 114B     	 ldr r3,.L117+52
 1920 06a8 1A68     	 ldr r2,[r3]
 1921 06aa 124B     	 ldr r3,.L117+60
 1922 06ac 1A60     	 str r2,[r3]
 272:../main.c     **** 				speed_rr = speed_fr;
 1923              	 .loc 6 272 0
 1924 06ae 104B     	 ldr r3,.L117+56
 1925 06b0 1A68     	 ldr r2,[r3]
 1926 06b2 114B     	 ldr r3,.L117+64
 1927 06b4 1A60     	 str r2,[r3]
 1928 06b6 D2E0     	 b .L65
 1929              	.L118:
 1930              	 .align 2
 1931              	.L117:
 1932 06b8 00000000 	 .word R_Turn
 1933 06bc 9A999999 	 .word -1717986918
 1934 06c0 9999A9BF 	 .word -1079404135
 1935 06c4 0000A0C1 	 .word -1046478848
 1936 06c8 77BE9F1A 	 .word 446676599
 1937 06cc 2FDDC43F 	 .word 1069866287
 1938 06d0 79E92631 	 .word 824633721
 1939 06d4 08ACDC3F 	 .word 1071426568
 1940 06d8 D9CEF753 	 .word 1408749273
 1941 06dc E3A54C40 	 .word 1078765027
 1942 06e0 00000000 	 .word angle_fl
 1943 06e4 00000000 	 .word angle_fr
 1944 06e8 00000000 	 .word Speed_ratio
 1945 06ec 00000000 	 .word speed_fl
 1946 06f0 00000000 	 .word speed_fr
 1947 06f4 00000000 	 .word speed_rl
 1948 06f8 00000000 	 .word speed_rr
 1949 06fc 00000000 	 .word angle_rl
 1950 0700 00000000 	 .word angle_rr
 1951 0704 00004842 	 .word 1112014848
 1952 0708 000048C2 	 .word -1035468800
 1953 070c 182D4454 	 .word 1413754136
 1954 0710 FB210940 	 .word 1074340347
 1955 0714 9999A93F 	 .word 1068079513
 1956 0718 0000A041 	 .word 1101004800
 1957 071c E3A54CC0 	 .word -1068718621
 1958              	.L62:
 273:../main.c     **** 			}
 274:../main.c     **** 			else if((- R_TRUN_MIN > R_Turn) && (R_Turn > -R_TRUN_MAX)){
 1959              	 .loc 6 274 0
 1960 0720 DF4B     	 ldr r3,.L119
 1961 0722 1B68     	 ldr r3,[r3]
 1962 0724 181C     	 add r0,r3,#0
 1963 0726 FFF7FEFF 	 bl __aeabi_f2d
 1964 072a 031C     	 mov r3,r0
 1965 072c 0C1C     	 mov r4,r1
 1966 072e 181C     	 mov r0,r3
 1967 0730 211C     	 mov r1,r4
 1968 0732 DC4A     	 ldr r2,.L119+4
 1969 0734 DC4B     	 ldr r3,.L119+8
 1970 0736 FFF7FEFF 	 bl __aeabi_dcmplt
 1971 073a 031E     	 sub r3,r0,#0
 1972 073c 00D1     	 bne .LCB1279
 1973 073e 7CE0     	 b .L66
 1974              	.LCB1279:
 1975              	 .loc 6 274 0 is_stmt 0 discriminator 1
 1976 0740 D74B     	 ldr r3,.L119
 1977 0742 1B68     	 ldr r3,[r3]
 1978 0744 181C     	 add r0,r3,#0
 1979 0746 D949     	 ldr r1,.L119+12
 1980 0748 FFF7FEFF 	 bl __aeabi_fcmpgt
 1981 074c 031E     	 sub r3,r0,#0
 1982 074e 74D0     	 beq .L66
 275:../main.c     **** 				angle_rl = - RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn + HALF_TRACK_WIDTH)); // in wheel
 1983              	 .loc 6 275 0 is_stmt 1
 1984 0750 D34B     	 ldr r3,.L119
 1985 0752 1B68     	 ldr r3,[r3]
 1986 0754 181C     	 add r0,r3,#0
 1987 0756 FFF7FEFF 	 bl __aeabi_f2d
 1988 075a 031C     	 mov r3,r0
 1989 075c 0C1C     	 mov r4,r1
 1990 075e 181C     	 mov r0,r3
 1991 0760 211C     	 mov r1,r4
 1992 0762 D34A     	 ldr r2,.L119+16
 1993 0764 D34B     	 ldr r3,.L119+20
 1994 0766 FFF7FEFF 	 bl __aeabi_dadd
 1995 076a 031C     	 mov r3,r0
 1996 076c 0C1C     	 mov r4,r1
 1997 076e D248     	 ldr r0,.L119+24
 1998 0770 D249     	 ldr r1,.L119+28
 1999 0772 1A1C     	 mov r2,r3
 2000 0774 231C     	 mov r3,r4
 2001 0776 FFF7FEFF 	 bl __aeabi_ddiv
 2002 077a 031C     	 mov r3,r0
 2003 077c 0C1C     	 mov r4,r1
 2004 077e 181C     	 mov r0,r3
 2005 0780 211C     	 mov r1,r4
 2006 0782 FFF7FEFF 	 bl atan
 2007 0786 031C     	 mov r3,r0
 2008 0788 0C1C     	 mov r4,r1
 2009 078a 181C     	 mov r0,r3
 2010 078c 211C     	 mov r1,r4
 2011 078e CC4A     	 ldr r2,.L119+32
 2012 0790 CC4B     	 ldr r3,.L119+36
 2013 0792 FFF7FEFF 	 bl __aeabi_dmul
 2014 0796 031C     	 mov r3,r0
 2015 0798 0C1C     	 mov r4,r1
 2016 079a 181C     	 mov r0,r3
 2017 079c 211C     	 mov r1,r4
 2018 079e FFF7FEFF 	 bl __aeabi_d2f
 2019 07a2 021C     	 add r2,r0,#0
 2020 07a4 C84B     	 ldr r3,.L119+40
 2021 07a6 1A60     	 str r2,[r3]
 276:../main.c     **** 				angle_rr = - RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn - HALF_TRACK_WIDTH)); // out wheel
 2022              	 .loc 6 276 0
 2023 07a8 BD4B     	 ldr r3,.L119
 2024 07aa 1B68     	 ldr r3,[r3]
 2025 07ac 181C     	 add r0,r3,#0
 2026 07ae FFF7FEFF 	 bl __aeabi_f2d
 2027 07b2 031C     	 mov r3,r0
 2028 07b4 0C1C     	 mov r4,r1
 2029 07b6 181C     	 mov r0,r3
 2030 07b8 211C     	 mov r1,r4
 2031 07ba BD4A     	 ldr r2,.L119+16
 2032 07bc BD4B     	 ldr r3,.L119+20
 2033 07be FFF7FEFF 	 bl __aeabi_dsub
 2034 07c2 031C     	 mov r3,r0
 2035 07c4 0C1C     	 mov r4,r1
 2036 07c6 BC48     	 ldr r0,.L119+24
 2037 07c8 BC49     	 ldr r1,.L119+28
 2038 07ca 1A1C     	 mov r2,r3
 2039 07cc 231C     	 mov r3,r4
 2040 07ce FFF7FEFF 	 bl __aeabi_ddiv
 2041 07d2 031C     	 mov r3,r0
 2042 07d4 0C1C     	 mov r4,r1
 2043 07d6 181C     	 mov r0,r3
 2044 07d8 211C     	 mov r1,r4
 2045 07da FFF7FEFF 	 bl atan
 2046 07de 031C     	 mov r3,r0
 2047 07e0 0C1C     	 mov r4,r1
 2048 07e2 181C     	 mov r0,r3
 2049 07e4 211C     	 mov r1,r4
 2050 07e6 B64A     	 ldr r2,.L119+32
 2051 07e8 B64B     	 ldr r3,.L119+36
 2052 07ea FFF7FEFF 	 bl __aeabi_dmul
 2053 07ee 031C     	 mov r3,r0
 2054 07f0 0C1C     	 mov r4,r1
 2055 07f2 181C     	 mov r0,r3
 2056 07f4 211C     	 mov r1,r4
 2057 07f6 FFF7FEFF 	 bl __aeabi_d2f
 2058 07fa 021C     	 add r2,r0,#0
 2059 07fc B34B     	 ldr r3,.L119+44
 2060 07fe 1A60     	 str r2,[r3]
 277:../main.c     **** 
 278:../main.c     **** 				speed_fl = Driving_speed_cal / Speed_ratio;
 2061              	 .loc 6 278 0
 2062 0800 B34B     	 ldr r3,.L119+48
 2063 0802 1B68     	 ldr r3,[r3]
 2064 0804 B868     	 ldr r0,[r7,#8]
 2065 0806 191C     	 add r1,r3,#0
 2066 0808 FFF7FEFF 	 bl __aeabi_fdiv
 2067 080c 031C     	 add r3,r0,#0
 2068 080e 1A1C     	 add r2,r3,#0
 2069 0810 B04B     	 ldr r3,.L119+52
 2070 0812 1A60     	 str r2,[r3]
 279:../main.c     **** 				speed_fr = Driving_speed_cal * Speed_ratio;
 2071              	 .loc 6 279 0
 2072 0814 AE4B     	 ldr r3,.L119+48
 2073 0816 1B68     	 ldr r3,[r3]
 2074 0818 181C     	 add r0,r3,#0
 2075 081a B968     	 ldr r1,[r7,#8]
 2076 081c FFF7FEFF 	 bl __aeabi_fmul
 2077 0820 031C     	 add r3,r0,#0
 2078 0822 1A1C     	 add r2,r3,#0
 2079 0824 AC4B     	 ldr r3,.L119+56
 2080 0826 1A60     	 str r2,[r3]
 280:../main.c     **** 				//speed_rl = Driving_speed_cal / Speed_ratio;
 281:../main.c     **** 				//speed_rr = Driving_speed_cal * Speed_ratio;
 282:../main.c     **** 
 283:../main.c     **** 				speed_rl = speed_fl;
 2081              	 .loc 6 283 0
 2082 0828 AA4B     	 ldr r3,.L119+52
 2083 082a 1A68     	 ldr r2,[r3]
 2084 082c AB4B     	 ldr r3,.L119+60
 2085 082e 1A60     	 str r2,[r3]
 284:../main.c     **** 				speed_rr = speed_fr;
 2086              	 .loc 6 284 0
 2087 0830 A94B     	 ldr r3,.L119+56
 2088 0832 1A68     	 ldr r2,[r3]
 2089 0834 AA4B     	 ldr r3,.L119+64
 2090 0836 1A60     	 str r2,[r3]
 2091 0838 11E0     	 b .L65
 2092              	.L66:
 285:../main.c     **** 			}
 286:../main.c     **** 			else{
 287:../main.c     **** 				angle_rl = 0;
 2093              	 .loc 6 287 0
 2094 083a A34B     	 ldr r3,.L119+40
 2095 083c 0022     	 mov r2,#0
 2096 083e 1A60     	 str r2,[r3]
 288:../main.c     **** 				angle_rr = 0;
 2097              	 .loc 6 288 0
 2098 0840 A24B     	 ldr r3,.L119+44
 2099 0842 0022     	 mov r2,#0
 2100 0844 1A60     	 str r2,[r3]
 289:../main.c     **** 
 290:../main.c     **** 				speed_fl = Driving_speed_cal;
 2101              	 .loc 6 290 0
 2102 0846 A34B     	 ldr r3,.L119+52
 2103 0848 BA68     	 ldr r2,[r7,#8]
 2104 084a 1A60     	 str r2,[r3]
 291:../main.c     **** 				speed_fr = Driving_speed_cal;
 2105              	 .loc 6 291 0
 2106 084c A24B     	 ldr r3,.L119+56
 2107 084e BA68     	 ldr r2,[r7,#8]
 2108 0850 1A60     	 str r2,[r3]
 292:../main.c     **** 				speed_rl = Driving_speed_cal;
 2109              	 .loc 6 292 0
 2110 0852 A24B     	 ldr r3,.L119+60
 2111 0854 BA68     	 ldr r2,[r7,#8]
 2112 0856 1A60     	 str r2,[r3]
 293:../main.c     **** 				speed_rr = Driving_speed_cal;
 2113              	 .loc 6 293 0
 2114 0858 A14B     	 ldr r3,.L119+64
 2115 085a BA68     	 ldr r2,[r7,#8]
 2116 085c 1A60     	 str r2,[r3]
 2117              	.L65:
 294:../main.c     **** 			}
 295:../main.c     **** 
 296:../main.c     **** 			//rear axle
 297:../main.c     **** 			angle_fl = 0;
 2118              	 .loc 6 297 0
 2119 085e A14B     	 ldr r3,.L119+68
 2120 0860 0022     	 mov r2,#0
 2121 0862 1A60     	 str r2,[r3]
 298:../main.c     **** 			angle_fr = 0;
 2122              	 .loc 6 298 0
 2123 0864 A04B     	 ldr r3,.L119+72
 2124 0866 0022     	 mov r2,#0
 2125 0868 1A60     	 str r2,[r3]
 299:../main.c     **** 			break;
 2126              	 .loc 6 299 0
 2127 086a 93E2     	 b .L57
 2128              	.L43:
 300:../main.c     **** 
 301:../main.c     **** 		case ALL_WHEEL: // 4 wheel #############################################################
 302:../main.c     **** 			// steering limits
 303:../main.c     **** 			if(Steering_direction_cal > 30) Steering_direction_cal = 30;
 2129              	 .loc 6 303 0
 2130 086c F868     	 ldr r0,[r7,#12]
 2131 086e 9F49     	 ldr r1,.L119+76
 2132 0870 FFF7FEFF 	 bl __aeabi_fcmpgt
 2133 0874 031E     	 sub r3,r0,#0
 2134 0876 01D0     	 beq .L69
 2135              	 .loc 6 303 0 is_stmt 0 discriminator 1
 2136 0878 9C4B     	 ldr r3,.L119+76
 2137 087a FB60     	 str r3,[r7,#12]
 2138              	.L69:
 304:../main.c     **** 			if(Steering_direction_cal < -30) Steering_direction_cal = -30;
 2139              	 .loc 6 304 0 is_stmt 1
 2140 087c F868     	 ldr r0,[r7,#12]
 2141 087e 9C49     	 ldr r1,.L119+80
 2142 0880 FFF7FEFF 	 bl __aeabi_fcmplt
 2143 0884 031E     	 sub r3,r0,#0
 2144 0886 01D0     	 beq .L71
 2145              	 .loc 6 304 0 is_stmt 0 discriminator 1
 2146 0888 994B     	 ldr r3,.L119+80
 2147 088a FB60     	 str r3,[r7,#12]
 2148              	.L71:
 305:../main.c     **** 
 306:../main.c     **** 			// pre calc
 307:../main.c     **** 			R_Turn = HALF_WHEEL_BASE / tan(Steering_direction_cal / RAD_TO_DEG); // to truni graduis convers
 2149              	 .loc 6 307 0 is_stmt 1
 2150 088c F868     	 ldr r0,[r7,#12]
 2151 088e FFF7FEFF 	 bl __aeabi_f2d
 2152 0892 031C     	 mov r3,r0
 2153 0894 0C1C     	 mov r4,r1
 2154 0896 181C     	 mov r0,r3
 2155 0898 211C     	 mov r1,r4
 2156 089a 894A     	 ldr r2,.L119+32
 2157 089c 954B     	 ldr r3,.L119+84
 2158 089e FFF7FEFF 	 bl __aeabi_ddiv
 2159 08a2 031C     	 mov r3,r0
 2160 08a4 0C1C     	 mov r4,r1
 2161 08a6 181C     	 mov r0,r3
 2162 08a8 211C     	 mov r1,r4
 2163 08aa FFF7FEFF 	 bl tan
 2164 08ae 031C     	 mov r3,r0
 2165 08b0 0C1C     	 mov r4,r1
 2166 08b2 9148     	 ldr r0,.L119+88
 2167 08b4 9149     	 ldr r1,.L119+92
 2168 08b6 1A1C     	 mov r2,r3
 2169 08b8 231C     	 mov r3,r4
 2170 08ba FFF7FEFF 	 bl __aeabi_ddiv
 2171 08be 031C     	 mov r3,r0
 2172 08c0 0C1C     	 mov r4,r1
 2173 08c2 181C     	 mov r0,r3
 2174 08c4 211C     	 mov r1,r4
 2175 08c6 FFF7FEFF 	 bl __aeabi_d2f
 2176 08ca 021C     	 add r2,r0,#0
 2177 08cc 744B     	 ldr r3,.L119
 2178 08ce 1A60     	 str r2,[r3]
 308:../main.c     **** 			Speed_ratio = (2 * (copysign(R_Turn,1) + HALF_TRACK_WIDTH) * M_PI) / (2 * copysign(R_Turn,1) * M
 2179              	 .loc 6 308 0
 2180 08d0 734B     	 ldr r3,.L119
 2181 08d2 1B68     	 ldr r3,[r3]
 2182 08d4 5B00     	 lsl r3,r3,#1
 2183 08d6 5B08     	 lsr r3,r3,#1
 2184 08d8 181C     	 add r0,r3,#0
 2185 08da FFF7FEFF 	 bl __aeabi_f2d
 2186 08de 031C     	 mov r3,r0
 2187 08e0 0C1C     	 mov r4,r1
 2188 08e2 181C     	 mov r0,r3
 2189 08e4 211C     	 mov r1,r4
 2190 08e6 724A     	 ldr r2,.L119+16
 2191 08e8 724B     	 ldr r3,.L119+20
 2192 08ea FFF7FEFF 	 bl __aeabi_dadd
 2193 08ee 031C     	 mov r3,r0
 2194 08f0 0C1C     	 mov r4,r1
 2195 08f2 181C     	 mov r0,r3
 2196 08f4 211C     	 mov r1,r4
 2197 08f6 1A1C     	 mov r2,r3
 2198 08f8 231C     	 mov r3,r4
 2199 08fa FFF7FEFF 	 bl __aeabi_dadd
 2200 08fe 031C     	 mov r3,r0
 2201 0900 0C1C     	 mov r4,r1
 2202 0902 181C     	 mov r0,r3
 2203 0904 211C     	 mov r1,r4
 2204 0906 7E4A     	 ldr r2,.L119+96
 2205 0908 7E4B     	 ldr r3,.L119+100
 2206 090a FFF7FEFF 	 bl __aeabi_dmul
 2207 090e 031C     	 mov r3,r0
 2208 0910 0C1C     	 mov r4,r1
 2209 0912 1D1C     	 mov r5,r3
 2210 0914 261C     	 mov r6,r4
 2211 0916 624B     	 ldr r3,.L119
 2212 0918 1B68     	 ldr r3,[r3]
 2213 091a 5B00     	 lsl r3,r3,#1
 2214 091c 5B08     	 lsr r3,r3,#1
 2215 091e 181C     	 add r0,r3,#0
 2216 0920 FFF7FEFF 	 bl __aeabi_f2d
 2217 0924 031C     	 mov r3,r0
 2218 0926 0C1C     	 mov r4,r1
 2219 0928 181C     	 mov r0,r3
 2220 092a 211C     	 mov r1,r4
 2221 092c 1A1C     	 mov r2,r3
 2222 092e 231C     	 mov r3,r4
 2223 0930 FFF7FEFF 	 bl __aeabi_dadd
 2224 0934 031C     	 mov r3,r0
 2225 0936 0C1C     	 mov r4,r1
 2226 0938 181C     	 mov r0,r3
 2227 093a 211C     	 mov r1,r4
 2228 093c 704A     	 ldr r2,.L119+96
 2229 093e 714B     	 ldr r3,.L119+100
 2230 0940 FFF7FEFF 	 bl __aeabi_dmul
 2231 0944 031C     	 mov r3,r0
 2232 0946 0C1C     	 mov r4,r1
 2233 0948 281C     	 mov r0,r5
 2234 094a 311C     	 mov r1,r6
 2235 094c 1A1C     	 mov r2,r3
 2236 094e 231C     	 mov r3,r4
 2237 0950 FFF7FEFF 	 bl __aeabi_ddiv
 2238 0954 031C     	 mov r3,r0
 2239 0956 0C1C     	 mov r4,r1
 2240 0958 181C     	 mov r0,r3
 2241 095a 211C     	 mov r1,r4
 2242 095c FFF7FEFF 	 bl __aeabi_d2f
 2243 0960 021C     	 add r2,r0,#0
 2244 0962 5B4B     	 ldr r3,.L119+48
 2245 0964 1A60     	 str r2,[r3]
 309:../main.c     **** 
 310:../main.c     **** 			if((R_TRUN_MIN < R_Turn) && (R_Turn < R_TRUN_MAX)){ // trun right positive R
 2246              	 .loc 6 310 0
 2247 0966 4E4B     	 ldr r3,.L119
 2248 0968 1B68     	 ldr r3,[r3]
 2249 096a 181C     	 add r0,r3,#0
 2250 096c FFF7FEFF 	 bl __aeabi_f2d
 2251 0970 031C     	 mov r3,r0
 2252 0972 0C1C     	 mov r4,r1
 2253 0974 181C     	 mov r0,r3
 2254 0976 211C     	 mov r1,r4
 2255 0978 4A4A     	 ldr r2,.L119+4
 2256 097a 634B     	 ldr r3,.L119+104
 2257 097c FFF7FEFF 	 bl __aeabi_dcmpgt
 2258 0980 031E     	 sub r3,r0,#0
 2259 0982 00D1     	 bne .LCB1552
 2260 0984 C4E0     	 b .L73
 2261              	.LCB1552:
 2262              	 .loc 6 310 0 is_stmt 0 discriminator 1
 2263 0986 464B     	 ldr r3,.L119
 2264 0988 1B68     	 ldr r3,[r3]
 2265 098a 181C     	 add r0,r3,#0
 2266 098c 5F49     	 ldr r1,.L119+108
 2267 098e FFF7FEFF 	 bl __aeabi_fcmplt
 2268 0992 031E     	 sub r3,r0,#0
 2269 0994 00D1     	 bne .LCB1560
 2270 0996 BBE0     	 b .L73
 2271              	.LCB1560:
 311:../main.c     **** 				angle_fl = RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn + HALF_TRACK_WIDTH)); // out wheel
 2272              	 .loc 6 311 0 is_stmt 1
 2273 0998 414B     	 ldr r3,.L119
 2274 099a 1B68     	 ldr r3,[r3]
 2275 099c 181C     	 add r0,r3,#0
 2276 099e FFF7FEFF 	 bl __aeabi_f2d
 2277 09a2 031C     	 mov r3,r0
 2278 09a4 0C1C     	 mov r4,r1
 2279 09a6 181C     	 mov r0,r3
 2280 09a8 211C     	 mov r1,r4
 2281 09aa 414A     	 ldr r2,.L119+16
 2282 09ac 414B     	 ldr r3,.L119+20
 2283 09ae FFF7FEFF 	 bl __aeabi_dadd
 2284 09b2 031C     	 mov r3,r0
 2285 09b4 0C1C     	 mov r4,r1
 2286 09b6 4048     	 ldr r0,.L119+24
 2287 09b8 4049     	 ldr r1,.L119+28
 2288 09ba 1A1C     	 mov r2,r3
 2289 09bc 231C     	 mov r3,r4
 2290 09be FFF7FEFF 	 bl __aeabi_ddiv
 2291 09c2 031C     	 mov r3,r0
 2292 09c4 0C1C     	 mov r4,r1
 2293 09c6 181C     	 mov r0,r3
 2294 09c8 211C     	 mov r1,r4
 2295 09ca FFF7FEFF 	 bl atan
 2296 09ce 031C     	 mov r3,r0
 2297 09d0 0C1C     	 mov r4,r1
 2298 09d2 181C     	 mov r0,r3
 2299 09d4 211C     	 mov r1,r4
 2300 09d6 3A4A     	 ldr r2,.L119+32
 2301 09d8 464B     	 ldr r3,.L119+84
 2302 09da FFF7FEFF 	 bl __aeabi_dmul
 2303 09de 031C     	 mov r3,r0
 2304 09e0 0C1C     	 mov r4,r1
 2305 09e2 181C     	 mov r0,r3
 2306 09e4 211C     	 mov r1,r4
 2307 09e6 FFF7FEFF 	 bl __aeabi_d2f
 2308 09ea 021C     	 add r2,r0,#0
 2309 09ec 3D4B     	 ldr r3,.L119+68
 2310 09ee 1A60     	 str r2,[r3]
 312:../main.c     **** 				angle_fr = RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn - HALF_TRACK_WIDTH)); // in wheel
 2311              	 .loc 6 312 0
 2312 09f0 2B4B     	 ldr r3,.L119
 2313 09f2 1B68     	 ldr r3,[r3]
 2314 09f4 181C     	 add r0,r3,#0
 2315 09f6 FFF7FEFF 	 bl __aeabi_f2d
 2316 09fa 031C     	 mov r3,r0
 2317 09fc 0C1C     	 mov r4,r1
 2318 09fe 181C     	 mov r0,r3
 2319 0a00 211C     	 mov r1,r4
 2320 0a02 2B4A     	 ldr r2,.L119+16
 2321 0a04 2B4B     	 ldr r3,.L119+20
 2322 0a06 FFF7FEFF 	 bl __aeabi_dsub
 2323 0a0a 031C     	 mov r3,r0
 2324 0a0c 0C1C     	 mov r4,r1
 2325 0a0e 2A48     	 ldr r0,.L119+24
 2326 0a10 2A49     	 ldr r1,.L119+28
 2327 0a12 1A1C     	 mov r2,r3
 2328 0a14 231C     	 mov r3,r4
 2329 0a16 FFF7FEFF 	 bl __aeabi_ddiv
 2330 0a1a 031C     	 mov r3,r0
 2331 0a1c 0C1C     	 mov r4,r1
 2332 0a1e 181C     	 mov r0,r3
 2333 0a20 211C     	 mov r1,r4
 2334 0a22 FFF7FEFF 	 bl atan
 2335 0a26 031C     	 mov r3,r0
 2336 0a28 0C1C     	 mov r4,r1
 2337 0a2a 181C     	 mov r0,r3
 2338 0a2c 211C     	 mov r1,r4
 2339 0a2e 244A     	 ldr r2,.L119+32
 2340 0a30 304B     	 ldr r3,.L119+84
 2341 0a32 FFF7FEFF 	 bl __aeabi_dmul
 2342 0a36 031C     	 mov r3,r0
 2343 0a38 0C1C     	 mov r4,r1
 2344 0a3a 181C     	 mov r0,r3
 2345 0a3c 211C     	 mov r1,r4
 2346 0a3e FFF7FEFF 	 bl __aeabi_d2f
 2347 0a42 021C     	 add r2,r0,#0
 2348 0a44 284B     	 ldr r3,.L119+72
 2349 0a46 1A60     	 str r2,[r3]
 313:../main.c     **** 				//angle_rl = - RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn + HALF_TRACK_WIDTH)); // out wheel
 314:../main.c     **** 				//angle_rr = - RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn - HALF_TRACK_WIDTH)); // in wheel
 315:../main.c     **** 
 316:../main.c     **** 				angle_rl = -angle_fl;
 2350              	 .loc 6 316 0
 2351 0a48 264B     	 ldr r3,.L119+68
 2352 0a4a 1B68     	 ldr r3,[r3]
 2353 0a4c 8022     	 mov r2,#128
 2354 0a4e 1206     	 lsl r2,r2,#24
 2355 0a50 5A40     	 eor r2,r3
 2356 0a52 1D4B     	 ldr r3,.L119+40
 2357 0a54 1A60     	 str r2,[r3]
 317:../main.c     **** 				angle_rr = -angle_fr;
 2358              	 .loc 6 317 0
 2359 0a56 244B     	 ldr r3,.L119+72
 2360 0a58 1B68     	 ldr r3,[r3]
 2361 0a5a 8022     	 mov r2,#128
 2362 0a5c 1206     	 lsl r2,r2,#24
 2363 0a5e 5A40     	 eor r2,r3
 2364 0a60 1A4B     	 ldr r3,.L119+44
 2365 0a62 1A60     	 str r2,[r3]
 318:../main.c     **** 
 319:../main.c     **** 				speed_fl = Driving_speed_cal * Speed_ratio;
 2366              	 .loc 6 319 0
 2367 0a64 1A4B     	 ldr r3,.L119+48
 2368 0a66 1B68     	 ldr r3,[r3]
 2369 0a68 181C     	 add r0,r3,#0
 2370 0a6a B968     	 ldr r1,[r7,#8]
 2371 0a6c FFF7FEFF 	 bl __aeabi_fmul
 2372 0a70 031C     	 add r3,r0,#0
 2373 0a72 1A1C     	 add r2,r3,#0
 2374 0a74 174B     	 ldr r3,.L119+52
 2375 0a76 1A60     	 str r2,[r3]
 320:../main.c     **** 				speed_fr = Driving_speed_cal / Speed_ratio;
 2376              	 .loc 6 320 0
 2377 0a78 154B     	 ldr r3,.L119+48
 2378 0a7a 1B68     	 ldr r3,[r3]
 2379 0a7c B868     	 ldr r0,[r7,#8]
 2380 0a7e 191C     	 add r1,r3,#0
 2381 0a80 FFF7FEFF 	 bl __aeabi_fdiv
 2382 0a84 031C     	 add r3,r0,#0
 2383 0a86 1A1C     	 add r2,r3,#0
 2384 0a88 134B     	 ldr r3,.L119+56
 2385 0a8a 1A60     	 str r2,[r3]
 321:../main.c     **** 				//speed_rl = Driving_speed_cal * Speed_ratio;
 322:../main.c     **** 				//speed_rr = Driving_speed_cal / Speed_ratio;
 323:../main.c     **** 
 324:../main.c     **** 				speed_rl = speed_fl;
 2386              	 .loc 6 324 0
 2387 0a8c 114B     	 ldr r3,.L119+52
 2388 0a8e 1A68     	 ldr r2,[r3]
 2389 0a90 124B     	 ldr r3,.L119+60
 2390 0a92 1A60     	 str r2,[r3]
 325:../main.c     **** 				speed_rr = speed_fr;
 2391              	 .loc 6 325 0
 2392 0a94 104B     	 ldr r3,.L119+56
 2393 0a96 1A68     	 ldr r2,[r3]
 2394 0a98 114B     	 ldr r3,.L119+64
 2395 0a9a 1A60     	 str r2,[r3]
 2396 0a9c EDE0     	 b .L76
 2397              	.L120:
 2398 0a9e C046     	 .align 2
 2399              	.L119:
 2400 0aa0 00000000 	 .word R_Turn
 2401 0aa4 9A999999 	 .word -1717986918
 2402 0aa8 9999A9BF 	 .word -1079404135
 2403 0aac 0000A0C1 	 .word -1046478848
 2404 0ab0 77BE9F1A 	 .word 446676599
 2405 0ab4 2FDDC43F 	 .word 1069866287
 2406 0ab8 79E92631 	 .word 824633721
 2407 0abc 08ACDC3F 	 .word 1071426568
 2408 0ac0 D9CEF753 	 .word 1408749273
 2409 0ac4 E3A54CC0 	 .word -1068718621
 2410 0ac8 00000000 	 .word angle_rl
 2411 0acc 00000000 	 .word angle_rr
 2412 0ad0 00000000 	 .word Speed_ratio
 2413 0ad4 00000000 	 .word speed_fl
 2414 0ad8 00000000 	 .word speed_fr
 2415 0adc 00000000 	 .word speed_rl
 2416 0ae0 00000000 	 .word speed_rr
 2417 0ae4 00000000 	 .word angle_fl
 2418 0ae8 00000000 	 .word angle_fr
 2419 0aec 0000F041 	 .word 1106247680
 2420 0af0 0000F0C1 	 .word -1041235968
 2421 0af4 E3A54C40 	 .word 1078765027
 2422 0af8 295C8FC2 	 .word -1030792151
 2423 0afc F528CC3F 	 .word 1070344437
 2424 0b00 182D4454 	 .word 1413754136
 2425 0b04 FB210940 	 .word 1074340347
 2426 0b08 9999A93F 	 .word 1068079513
 2427 0b0c 0000A041 	 .word 1101004800
 2428              	.L73:
 326:../main.c     **** 			}
 327:../main.c     **** 			else if((- R_TRUN_MIN > R_Turn) && (R_Turn > -R_TRUN_MAX)){ // trun left positive R
 2429              	 .loc 6 327 0
 2430 0b10 B24B     	 ldr r3,.L121
 2431 0b12 1B68     	 ldr r3,[r3]
 2432 0b14 181C     	 add r0,r3,#0
 2433 0b16 FFF7FEFF 	 bl __aeabi_f2d
 2434 0b1a 031C     	 mov r3,r0
 2435 0b1c 0C1C     	 mov r4,r1
 2436 0b1e 181C     	 mov r0,r3
 2437 0b20 211C     	 mov r1,r4
 2438 0b22 AF4A     	 ldr r2,.L121+4
 2439 0b24 AF4B     	 ldr r3,.L121+8
 2440 0b26 FFF7FEFF 	 bl __aeabi_dcmplt
 2441 0b2a 031E     	 sub r3,r0,#0
 2442 0b2c 00D1     	 bne .LCB1727
 2443 0b2e 8BE0     	 b .L77
 2444              	.LCB1727:
 2445              	 .loc 6 327 0 is_stmt 0 discriminator 1
 2446 0b30 AA4B     	 ldr r3,.L121
 2447 0b32 1B68     	 ldr r3,[r3]
 2448 0b34 181C     	 add r0,r3,#0
 2449 0b36 AC49     	 ldr r1,.L121+12
 2450 0b38 FFF7FEFF 	 bl __aeabi_fcmpgt
 2451 0b3c 031E     	 sub r3,r0,#0
 2452 0b3e 00D1     	 bne .LCB1735
 2453 0b40 82E0     	 b .L77
 2454              	.LCB1735:
 328:../main.c     **** 				angle_fl = RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn + HALF_TRACK_WIDTH)); // in wheel
 2455              	 .loc 6 328 0 is_stmt 1
 2456 0b42 A64B     	 ldr r3,.L121
 2457 0b44 1B68     	 ldr r3,[r3]
 2458 0b46 181C     	 add r0,r3,#0
 2459 0b48 FFF7FEFF 	 bl __aeabi_f2d
 2460 0b4c 031C     	 mov r3,r0
 2461 0b4e 0C1C     	 mov r4,r1
 2462 0b50 181C     	 mov r0,r3
 2463 0b52 211C     	 mov r1,r4
 2464 0b54 A54A     	 ldr r2,.L121+16
 2465 0b56 A64B     	 ldr r3,.L121+20
 2466 0b58 FFF7FEFF 	 bl __aeabi_dadd
 2467 0b5c 031C     	 mov r3,r0
 2468 0b5e 0C1C     	 mov r4,r1
 2469 0b60 A448     	 ldr r0,.L121+24
 2470 0b62 A549     	 ldr r1,.L121+28
 2471 0b64 1A1C     	 mov r2,r3
 2472 0b66 231C     	 mov r3,r4
 2473 0b68 FFF7FEFF 	 bl __aeabi_ddiv
 2474 0b6c 031C     	 mov r3,r0
 2475 0b6e 0C1C     	 mov r4,r1
 2476 0b70 181C     	 mov r0,r3
 2477 0b72 211C     	 mov r1,r4
 2478 0b74 FFF7FEFF 	 bl atan
 2479 0b78 031C     	 mov r3,r0
 2480 0b7a 0C1C     	 mov r4,r1
 2481 0b7c 181C     	 mov r0,r3
 2482 0b7e 211C     	 mov r1,r4
 2483 0b80 9E4A     	 ldr r2,.L121+32
 2484 0b82 9F4B     	 ldr r3,.L121+36
 2485 0b84 FFF7FEFF 	 bl __aeabi_dmul
 2486 0b88 031C     	 mov r3,r0
 2487 0b8a 0C1C     	 mov r4,r1
 2488 0b8c 181C     	 mov r0,r3
 2489 0b8e 211C     	 mov r1,r4
 2490 0b90 FFF7FEFF 	 bl __aeabi_d2f
 2491 0b94 021C     	 add r2,r0,#0
 2492 0b96 9B4B     	 ldr r3,.L121+40
 2493 0b98 1A60     	 str r2,[r3]
 329:../main.c     **** 				angle_fr = RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn - HALF_TRACK_WIDTH)); // out wheel
 2494              	 .loc 6 329 0
 2495 0b9a 904B     	 ldr r3,.L121
 2496 0b9c 1B68     	 ldr r3,[r3]
 2497 0b9e 181C     	 add r0,r3,#0
 2498 0ba0 FFF7FEFF 	 bl __aeabi_f2d
 2499 0ba4 031C     	 mov r3,r0
 2500 0ba6 0C1C     	 mov r4,r1
 2501 0ba8 181C     	 mov r0,r3
 2502 0baa 211C     	 mov r1,r4
 2503 0bac 8F4A     	 ldr r2,.L121+16
 2504 0bae 904B     	 ldr r3,.L121+20
 2505 0bb0 FFF7FEFF 	 bl __aeabi_dsub
 2506 0bb4 031C     	 mov r3,r0
 2507 0bb6 0C1C     	 mov r4,r1
 2508 0bb8 8E48     	 ldr r0,.L121+24
 2509 0bba 8F49     	 ldr r1,.L121+28
 2510 0bbc 1A1C     	 mov r2,r3
 2511 0bbe 231C     	 mov r3,r4
 2512 0bc0 FFF7FEFF 	 bl __aeabi_ddiv
 2513 0bc4 031C     	 mov r3,r0
 2514 0bc6 0C1C     	 mov r4,r1
 2515 0bc8 181C     	 mov r0,r3
 2516 0bca 211C     	 mov r1,r4
 2517 0bcc FFF7FEFF 	 bl atan
 2518 0bd0 031C     	 mov r3,r0
 2519 0bd2 0C1C     	 mov r4,r1
 2520 0bd4 181C     	 mov r0,r3
 2521 0bd6 211C     	 mov r1,r4
 2522 0bd8 884A     	 ldr r2,.L121+32
 2523 0bda 894B     	 ldr r3,.L121+36
 2524 0bdc FFF7FEFF 	 bl __aeabi_dmul
 2525 0be0 031C     	 mov r3,r0
 2526 0be2 0C1C     	 mov r4,r1
 2527 0be4 181C     	 mov r0,r3
 2528 0be6 211C     	 mov r1,r4
 2529 0be8 FFF7FEFF 	 bl __aeabi_d2f
 2530 0bec 021C     	 add r2,r0,#0
 2531 0bee 864B     	 ldr r3,.L121+44
 2532 0bf0 1A60     	 str r2,[r3]
 330:../main.c     **** 				//angle_rl = - RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn + HALF_TRACK_WIDTH)); // in wheel
 331:../main.c     **** 				//angle_rr = - RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn - HALF_TRACK_WIDTH)); // in wheel
 332:../main.c     **** 
 333:../main.c     **** 				angle_rl = -angle_fl;
 2533              	 .loc 6 333 0
 2534 0bf2 844B     	 ldr r3,.L121+40
 2535 0bf4 1B68     	 ldr r3,[r3]
 2536 0bf6 8022     	 mov r2,#128
 2537 0bf8 1206     	 lsl r2,r2,#24
 2538 0bfa 5A40     	 eor r2,r3
 2539 0bfc 834B     	 ldr r3,.L121+48
 2540 0bfe 1A60     	 str r2,[r3]
 334:../main.c     **** 				angle_rr = -angle_fr;
 2541              	 .loc 6 334 0
 2542 0c00 814B     	 ldr r3,.L121+44
 2543 0c02 1B68     	 ldr r3,[r3]
 2544 0c04 8022     	 mov r2,#128
 2545 0c06 1206     	 lsl r2,r2,#24
 2546 0c08 5A40     	 eor r2,r3
 2547 0c0a 814B     	 ldr r3,.L121+52
 2548 0c0c 1A60     	 str r2,[r3]
 335:../main.c     **** 
 336:../main.c     **** 				speed_fl = Driving_speed_cal / Speed_ratio;
 2549              	 .loc 6 336 0
 2550 0c0e 814B     	 ldr r3,.L121+56
 2551 0c10 1B68     	 ldr r3,[r3]
 2552 0c12 B868     	 ldr r0,[r7,#8]
 2553 0c14 191C     	 add r1,r3,#0
 2554 0c16 FFF7FEFF 	 bl __aeabi_fdiv
 2555 0c1a 031C     	 add r3,r0,#0
 2556 0c1c 1A1C     	 add r2,r3,#0
 2557 0c1e 7E4B     	 ldr r3,.L121+60
 2558 0c20 1A60     	 str r2,[r3]
 337:../main.c     **** 				speed_fr = Driving_speed_cal * Speed_ratio;
 2559              	 .loc 6 337 0
 2560 0c22 7C4B     	 ldr r3,.L121+56
 2561 0c24 1B68     	 ldr r3,[r3]
 2562 0c26 181C     	 add r0,r3,#0
 2563 0c28 B968     	 ldr r1,[r7,#8]
 2564 0c2a FFF7FEFF 	 bl __aeabi_fmul
 2565 0c2e 031C     	 add r3,r0,#0
 2566 0c30 1A1C     	 add r2,r3,#0
 2567 0c32 7A4B     	 ldr r3,.L121+64
 2568 0c34 1A60     	 str r2,[r3]
 338:../main.c     **** 				//speed_rl = Driving_speed_cal / Speed_ratio;
 339:../main.c     **** 				//speed_rr = Driving_speed_cal * Speed_ratio;
 340:../main.c     **** 
 341:../main.c     **** 				speed_rl = speed_fl;
 2569              	 .loc 6 341 0
 2570 0c36 784B     	 ldr r3,.L121+60
 2571 0c38 1A68     	 ldr r2,[r3]
 2572 0c3a 794B     	 ldr r3,.L121+68
 2573 0c3c 1A60     	 str r2,[r3]
 342:../main.c     **** 				speed_rr = speed_fr;
 2574              	 .loc 6 342 0
 2575 0c3e 774B     	 ldr r3,.L121+64
 2576 0c40 1A68     	 ldr r2,[r3]
 2577 0c42 784B     	 ldr r3,.L121+72
 2578 0c44 1A60     	 str r2,[r3]
 2579 0c46 18E0     	 b .L76
 2580              	.L77:
 343:../main.c     **** 			}
 344:../main.c     **** 			else{// starigt driving
 345:../main.c     **** 				angle_fl = 0;
 2581              	 .loc 6 345 0
 2582 0c48 6E4B     	 ldr r3,.L121+40
 2583 0c4a 0022     	 mov r2,#0
 2584 0c4c 1A60     	 str r2,[r3]
 346:../main.c     **** 				angle_fr = 0;
 2585              	 .loc 6 346 0
 2586 0c4e 6E4B     	 ldr r3,.L121+44
 2587 0c50 0022     	 mov r2,#0
 2588 0c52 1A60     	 str r2,[r3]
 347:../main.c     **** 				angle_rl = 0;
 2589              	 .loc 6 347 0
 2590 0c54 6D4B     	 ldr r3,.L121+48
 2591 0c56 0022     	 mov r2,#0
 2592 0c58 1A60     	 str r2,[r3]
 348:../main.c     **** 				angle_rr = 0;
 2593              	 .loc 6 348 0
 2594 0c5a 6D4B     	 ldr r3,.L121+52
 2595 0c5c 0022     	 mov r2,#0
 2596 0c5e 1A60     	 str r2,[r3]
 349:../main.c     **** 
 350:../main.c     **** 				speed_fl = Driving_speed_cal;
 2597              	 .loc 6 350 0
 2598 0c60 6D4B     	 ldr r3,.L121+60
 2599 0c62 BA68     	 ldr r2,[r7,#8]
 2600 0c64 1A60     	 str r2,[r3]
 351:../main.c     **** 				speed_fr = Driving_speed_cal;
 2601              	 .loc 6 351 0
 2602 0c66 6D4B     	 ldr r3,.L121+64
 2603 0c68 BA68     	 ldr r2,[r7,#8]
 2604 0c6a 1A60     	 str r2,[r3]
 352:../main.c     **** 				speed_rl = Driving_speed_cal;
 2605              	 .loc 6 352 0
 2606 0c6c 6C4B     	 ldr r3,.L121+68
 2607 0c6e BA68     	 ldr r2,[r7,#8]
 2608 0c70 1A60     	 str r2,[r3]
 353:../main.c     **** 				speed_rr = Driving_speed_cal;
 2609              	 .loc 6 353 0
 2610 0c72 6C4B     	 ldr r3,.L121+72
 2611 0c74 BA68     	 ldr r2,[r7,#8]
 2612 0c76 1A60     	 str r2,[r3]
 354:../main.c     **** 			}
 355:../main.c     **** 			break;
 2613              	 .loc 6 355 0
 2614 0c78 8CE0     	 b .L57
 2615              	.L76:
 2616 0c7a 8BE0     	 b .L57
 2617              	.L44:
 356:../main.c     **** 
 357:../main.c     **** 		case CRAB:  //carb //#############################################################
 358:../main.c     **** 			Steering_direction_cal = Steering_direction_cal * 4; // mach data from remote
 2618              	 .loc 6 358 0
 2619 0c7c F868     	 ldr r0,[r7,#12]
 2620 0c7e 8121     	 mov r1,#129
 2621 0c80 C905     	 lsl r1,r1,#23
 2622 0c82 FFF7FEFF 	 bl __aeabi_fmul
 2623 0c86 031C     	 add r3,r0,#0
 2624 0c88 FB60     	 str r3,[r7,#12]
 359:../main.c     **** 			if(Steering_direction_cal > 190) Steering_direction_cal = 190;
 2625              	 .loc 6 359 0
 2626 0c8a F868     	 ldr r0,[r7,#12]
 2627 0c8c 6649     	 ldr r1,.L121+76
 2628 0c8e FFF7FEFF 	 bl __aeabi_fcmpgt
 2629 0c92 031E     	 sub r3,r0,#0
 2630 0c94 01D0     	 beq .L80
 2631              	 .loc 6 359 0 is_stmt 0 discriminator 1
 2632 0c96 644B     	 ldr r3,.L121+76
 2633 0c98 FB60     	 str r3,[r7,#12]
 2634              	.L80:
 360:../main.c     **** 			if(Steering_direction_cal < -190) Steering_direction_cal = -190;
 2635              	 .loc 6 360 0 is_stmt 1
 2636 0c9a F868     	 ldr r0,[r7,#12]
 2637 0c9c 6349     	 ldr r1,.L121+80
 2638 0c9e FFF7FEFF 	 bl __aeabi_fcmplt
 2639 0ca2 031E     	 sub r3,r0,#0
 2640 0ca4 01D0     	 beq .L82
 2641              	 .loc 6 360 0 is_stmt 0 discriminator 1
 2642 0ca6 614B     	 ldr r3,.L121+80
 2643 0ca8 FB60     	 str r3,[r7,#12]
 2644              	.L82:
 361:../main.c     **** 			// steering
 362:../main.c     **** 			angle_fl = Steering_direction_cal;
 2645              	 .loc 6 362 0 is_stmt 1
 2646 0caa 564B     	 ldr r3,.L121+40
 2647 0cac FA68     	 ldr r2,[r7,#12]
 2648 0cae 1A60     	 str r2,[r3]
 363:../main.c     **** 			angle_fr = Steering_direction_cal;
 2649              	 .loc 6 363 0
 2650 0cb0 554B     	 ldr r3,.L121+44
 2651 0cb2 FA68     	 ldr r2,[r7,#12]
 2652 0cb4 1A60     	 str r2,[r3]
 364:../main.c     **** 			angle_rl = Steering_direction_cal;
 2653              	 .loc 6 364 0
 2654 0cb6 554B     	 ldr r3,.L121+48
 2655 0cb8 FA68     	 ldr r2,[r7,#12]
 2656 0cba 1A60     	 str r2,[r3]
 365:../main.c     **** 			angle_rr = Steering_direction_cal;
 2657              	 .loc 6 365 0
 2658 0cbc 544B     	 ldr r3,.L121+52
 2659 0cbe FA68     	 ldr r2,[r7,#12]
 2660 0cc0 1A60     	 str r2,[r3]
 366:../main.c     **** 			 // speed
 367:../main.c     **** 			 speed_fl = Driving_speed_cal;
 2661              	 .loc 6 367 0
 2662 0cc2 554B     	 ldr r3,.L121+60
 2663 0cc4 BA68     	 ldr r2,[r7,#8]
 2664 0cc6 1A60     	 str r2,[r3]
 368:../main.c     **** 			 speed_fr = Driving_speed_cal;
 2665              	 .loc 6 368 0
 2666 0cc8 544B     	 ldr r3,.L121+64
 2667 0cca BA68     	 ldr r2,[r7,#8]
 2668 0ccc 1A60     	 str r2,[r3]
 369:../main.c     **** 			 speed_rl = Driving_speed_cal;
 2669              	 .loc 6 369 0
 2670 0cce 544B     	 ldr r3,.L121+68
 2671 0cd0 BA68     	 ldr r2,[r7,#8]
 2672 0cd2 1A60     	 str r2,[r3]
 370:../main.c     **** 			 speed_rr = Driving_speed_cal;
 2673              	 .loc 6 370 0
 2674 0cd4 534B     	 ldr r3,.L121+72
 2675 0cd6 BA68     	 ldr r2,[r7,#8]
 2676 0cd8 1A60     	 str r2,[r3]
 371:../main.c     **** 			break;
 2677              	 .loc 6 371 0
 2678 0cda 5BE0     	 b .L57
 2679              	.L45:
 372:../main.c     **** 
 373:../main.c     **** 		case ROTATE: // rotate #############################################################
 374:../main.c     **** 			// steering agel for turng in place
 375:../main.c     **** 			angle_fl = ROTATION_ANGLE + ROTATION_ANGLE_OFFSET;
 2680              	 .loc 6 375 0
 2681 0cdc 494B     	 ldr r3,.L121+40
 2682 0cde 544A     	 ldr r2,.L121+84
 2683 0ce0 1A60     	 str r2,[r3]
 376:../main.c     **** 			angle_fr = -ROTATION_ANGLE + ROTATION_ANGLE_OFFSET;
 2684              	 .loc 6 376 0
 2685 0ce2 494B     	 ldr r3,.L121+44
 2686 0ce4 534A     	 ldr r2,.L121+88
 2687 0ce6 1A60     	 str r2,[r3]
 377:../main.c     **** 			angle_rl = -ROTATION_ANGLE + ROTATION_ANGLE_OFFSET;
 2688              	 .loc 6 377 0
 2689 0ce8 484B     	 ldr r3,.L121+48
 2690 0cea 524A     	 ldr r2,.L121+88
 2691 0cec 1A60     	 str r2,[r3]
 378:../main.c     **** 			angle_rr = ROTATION_ANGLE + ROTATION_ANGLE_OFFSET;
 2692              	 .loc 6 378 0
 2693 0cee 484B     	 ldr r3,.L121+52
 2694 0cf0 4F4A     	 ldr r2,.L121+84
 2695 0cf2 1A60     	 str r2,[r3]
 379:../main.c     **** 
 380:../main.c     **** 			 // speed
 381:../main.c     **** 			if (Steering_direction_cal > 10){
 2696              	 .loc 6 381 0
 2697 0cf4 F868     	 ldr r0,[r7,#12]
 2698 0cf6 5049     	 ldr r1,.L121+92
 2699 0cf8 FFF7FEFF 	 bl __aeabi_fcmpgt
 2700 0cfc 031E     	 sub r3,r0,#0
 2701 0cfe 0ED0     	 beq .L113
 382:../main.c     **** 				speed_fl = ROTATION_SPEED;
 2702              	 .loc 6 382 0
 2703 0d00 454B     	 ldr r3,.L121+60
 2704 0d02 FA22     	 mov r2,#250
 2705 0d04 9205     	 lsl r2,r2,#22
 2706 0d06 1A60     	 str r2,[r3]
 383:../main.c     **** 				speed_fr = -ROTATION_SPEED;
 2707              	 .loc 6 383 0
 2708 0d08 444B     	 ldr r3,.L121+64
 2709 0d0a 4C4A     	 ldr r2,.L121+96
 2710 0d0c 1A60     	 str r2,[r3]
 384:../main.c     **** 				speed_rl = ROTATION_SPEED;
 2711              	 .loc 6 384 0
 2712 0d0e 444B     	 ldr r3,.L121+68
 2713 0d10 FA22     	 mov r2,#250
 2714 0d12 9205     	 lsl r2,r2,#22
 2715 0d14 1A60     	 str r2,[r3]
 385:../main.c     **** 				speed_rr = -ROTATION_SPEED;
 2716              	 .loc 6 385 0
 2717 0d16 434B     	 ldr r3,.L121+72
 2718 0d18 484A     	 ldr r2,.L121+96
 2719 0d1a 1A60     	 str r2,[r3]
 2720 0d1c 21E0     	 b .L86
 2721              	.L113:
 386:../main.c     **** 			}
 387:../main.c     **** 			else if(Steering_direction_cal < -10){
 2722              	 .loc 6 387 0
 2723 0d1e F868     	 ldr r0,[r7,#12]
 2724 0d20 4749     	 ldr r1,.L121+100
 2725 0d22 FFF7FEFF 	 bl __aeabi_fcmplt
 2726 0d26 031E     	 sub r3,r0,#0
 2727 0d28 0ED0     	 beq .L114
 388:../main.c     **** 				speed_fl = -ROTATION_SPEED;
 2728              	 .loc 6 388 0
 2729 0d2a 3B4B     	 ldr r3,.L121+60
 2730 0d2c 434A     	 ldr r2,.L121+96
 2731 0d2e 1A60     	 str r2,[r3]
 389:../main.c     **** 				speed_fr = ROTATION_SPEED;
 2732              	 .loc 6 389 0
 2733 0d30 3A4B     	 ldr r3,.L121+64
 2734 0d32 FA22     	 mov r2,#250
 2735 0d34 9205     	 lsl r2,r2,#22
 2736 0d36 1A60     	 str r2,[r3]
 390:../main.c     **** 				speed_rl = -ROTATION_SPEED;
 2737              	 .loc 6 390 0
 2738 0d38 394B     	 ldr r3,.L121+68
 2739 0d3a 404A     	 ldr r2,.L121+96
 2740 0d3c 1A60     	 str r2,[r3]
 391:../main.c     **** 				speed_rr = ROTATION_SPEED;
 2741              	 .loc 6 391 0
 2742 0d3e 394B     	 ldr r3,.L121+72
 2743 0d40 FA22     	 mov r2,#250
 2744 0d42 9205     	 lsl r2,r2,#22
 2745 0d44 1A60     	 str r2,[r3]
 2746 0d46 0CE0     	 b .L86
 2747              	.L114:
 392:../main.c     **** 			}
 393:../main.c     **** 			else{
 394:../main.c     **** 				speed_fl = 0;
 2748              	 .loc 6 394 0
 2749 0d48 334B     	 ldr r3,.L121+60
 2750 0d4a 0022     	 mov r2,#0
 2751 0d4c 1A60     	 str r2,[r3]
 395:../main.c     **** 				speed_fr = 0;
 2752              	 .loc 6 395 0
 2753 0d4e 334B     	 ldr r3,.L121+64
 2754 0d50 0022     	 mov r2,#0
 2755 0d52 1A60     	 str r2,[r3]
 396:../main.c     **** 				speed_rl = 0;
 2756              	 .loc 6 396 0
 2757 0d54 324B     	 ldr r3,.L121+68
 2758 0d56 0022     	 mov r2,#0
 2759 0d58 1A60     	 str r2,[r3]
 397:../main.c     **** 				speed_rr = 0;
 2760              	 .loc 6 397 0
 2761 0d5a 324B     	 ldr r3,.L121+72
 2762 0d5c 0022     	 mov r2,#0
 2763 0d5e 1A60     	 str r2,[r3]
 398:../main.c     **** 			}
 399:../main.c     **** 			break;
 2764              	 .loc 6 399 0
 2765 0d60 18E0     	 b .L57
 2766              	.L86:
 2767 0d62 17E0     	 b .L57
 2768              	.L39:
 400:../main.c     **** 
 401:../main.c     **** 		default:
 402:../main.c     **** 			angle_fl = 0;
 2769              	 .loc 6 402 0
 2770 0d64 274B     	 ldr r3,.L121+40
 2771 0d66 0022     	 mov r2,#0
 2772 0d68 1A60     	 str r2,[r3]
 403:../main.c     **** 			angle_fr = 0;
 2773              	 .loc 6 403 0
 2774 0d6a 274B     	 ldr r3,.L121+44
 2775 0d6c 0022     	 mov r2,#0
 2776 0d6e 1A60     	 str r2,[r3]
 404:../main.c     **** 			angle_rl = 0;
 2777              	 .loc 6 404 0
 2778 0d70 264B     	 ldr r3,.L121+48
 2779 0d72 0022     	 mov r2,#0
 2780 0d74 1A60     	 str r2,[r3]
 405:../main.c     **** 			angle_rr = 0;
 2781              	 .loc 6 405 0
 2782 0d76 264B     	 ldr r3,.L121+52
 2783 0d78 0022     	 mov r2,#0
 2784 0d7a 1A60     	 str r2,[r3]
 406:../main.c     **** 
 407:../main.c     **** 			speed_fl = 0;
 2785              	 .loc 6 407 0
 2786 0d7c 264B     	 ldr r3,.L121+60
 2787 0d7e 0022     	 mov r2,#0
 2788 0d80 1A60     	 str r2,[r3]
 408:../main.c     **** 			speed_fr = 0;
 2789              	 .loc 6 408 0
 2790 0d82 264B     	 ldr r3,.L121+64
 2791 0d84 0022     	 mov r2,#0
 2792 0d86 1A60     	 str r2,[r3]
 409:../main.c     **** 			speed_rl = 0;
 2793              	 .loc 6 409 0
 2794 0d88 254B     	 ldr r3,.L121+68
 2795 0d8a 0022     	 mov r2,#0
 2796 0d8c 1A60     	 str r2,[r3]
 410:../main.c     **** 			speed_rr = 0;
 2797              	 .loc 6 410 0
 2798 0d8e 254B     	 ldr r3,.L121+72
 2799 0d90 0022     	 mov r2,#0
 2800 0d92 1A60     	 str r2,[r3]
 2801              	.L57:
 411:../main.c     **** 
 412:../main.c     **** 	}
 413:../main.c     ****   // set gobal vars
 414:../main.c     ****   Steering_Angles[0] = angle_fl;
 2802              	 .loc 6 414 0
 2803 0d94 1B4B     	 ldr r3,.L121+40
 2804 0d96 1A68     	 ldr r2,[r3]
 2805 0d98 2A4B     	 ldr r3,.L121+104
 2806 0d9a 1A60     	 str r2,[r3]
 415:../main.c     ****   Steering_Angles[1] = angle_fr;
 2807              	 .loc 6 415 0
 2808 0d9c 1A4B     	 ldr r3,.L121+44
 2809 0d9e 1A68     	 ldr r2,[r3]
 2810 0da0 284B     	 ldr r3,.L121+104
 2811 0da2 5A60     	 str r2,[r3,#4]
 416:../main.c     ****   Steering_Angles[2] = angle_rl;
 2812              	 .loc 6 416 0
 2813 0da4 194B     	 ldr r3,.L121+48
 2814 0da6 1A68     	 ldr r2,[r3]
 2815 0da8 264B     	 ldr r3,.L121+104
 2816 0daa 9A60     	 str r2,[r3,#8]
 417:../main.c     ****   Steering_Angles[3] = angle_rr;
 2817              	 .loc 6 417 0
 2818 0dac 184B     	 ldr r3,.L121+52
 2819 0dae 1A68     	 ldr r2,[r3]
 2820 0db0 244B     	 ldr r3,.L121+104
 2821 0db2 DA60     	 str r2,[r3,#12]
 418:../main.c     **** 
 419:../main.c     ****   Speeds[0] = speed_fl;
 2822              	 .loc 6 419 0
 2823 0db4 184B     	 ldr r3,.L121+60
 2824 0db6 1A68     	 ldr r2,[r3]
 2825 0db8 234B     	 ldr r3,.L121+108
 2826 0dba 1A60     	 str r2,[r3]
 420:../main.c     ****   Speeds[1] = speed_fr;
 2827              	 .loc 6 420 0
 2828 0dbc 174B     	 ldr r3,.L121+64
 2829 0dbe 1A68     	 ldr r2,[r3]
 2830 0dc0 214B     	 ldr r3,.L121+108
 2831 0dc2 5A60     	 str r2,[r3,#4]
 421:../main.c     ****   Speeds[2] = speed_rl;
 2832              	 .loc 6 421 0
 2833 0dc4 164B     	 ldr r3,.L121+68
 2834 0dc6 1A68     	 ldr r2,[r3]
 2835 0dc8 1F4B     	 ldr r3,.L121+108
 2836 0dca 9A60     	 str r2,[r3,#8]
 422:../main.c     ****   Speeds[3] = speed_rr;
 2837              	 .loc 6 422 0
 2838 0dcc 154B     	 ldr r3,.L121+72
 2839 0dce 1A68     	 ldr r2,[r3]
 2840 0dd0 1D4B     	 ldr r3,.L121+108
 2841 0dd2 DA60     	 str r2,[r3,#12]
 423:../main.c     **** 
 424:../main.c     **** }
 2842              	 .loc 6 424 0
 2843 0dd4 BD46     	 mov sp,r7
 2844 0dd6 05B0     	 add sp,sp,#20
 2845              	 
 2846 0dd8 F0BD     	 pop {r4,r5,r6,r7,pc}
 2847              	.L122:
 2848 0dda C046     	 .align 2
 2849              	.L121:
 2850 0ddc 00000000 	 .word R_Turn
 2851 0de0 9A999999 	 .word -1717986918
 2852 0de4 9999A9BF 	 .word -1079404135
 2853 0de8 0000A0C1 	 .word -1046478848
 2854 0dec 77BE9F1A 	 .word 446676599
 2855 0df0 2FDDC43F 	 .word 1069866287
 2856 0df4 79E92631 	 .word 824633721
 2857 0df8 08ACDC3F 	 .word 1071426568
 2858 0dfc D9CEF753 	 .word 1408749273
 2859 0e00 E3A54C40 	 .word 1078765027
 2860 0e04 00000000 	 .word angle_fl
 2861 0e08 00000000 	 .word angle_fr
 2862 0e0c 00000000 	 .word angle_rl
 2863 0e10 00000000 	 .word angle_rr
 2864 0e14 00000000 	 .word Speed_ratio
 2865 0e18 00000000 	 .word speed_fl
 2866 0e1c 00000000 	 .word speed_fr
 2867 0e20 00000000 	 .word speed_rl
 2868 0e24 00000000 	 .word speed_rr
 2869 0e28 00003E43 	 .word 1128136704
 2870 0e2c 00003EC3 	 .word -1019346944
 2871 0e30 0AD76B42 	 .word 1114363658
 2872 0e34 0AD743C2 	 .word -1035741430
 2873 0e38 00002041 	 .word 1092616192
 2874 0e3c 000080BE 	 .word -1098907648
 2875 0e40 000020C1 	 .word -1054867456
 2876 0e44 00000000 	 .word Steering_Angles
 2877 0e48 00000000 	 .word Speeds
 2878              	 .cfi_endproc
 2879              	.LFE225:
 2881              	 .section .text.IRQ4_Handler,"ax",%progbits
 2882              	 .align 2
 2883              	 .global IRQ4_Handler
 2884              	 .code 16
 2885              	 .thumb_func
 2887              	IRQ4_Handler:
 2888              	.LFB226:
 425:../main.c     **** 
 426:../main.c     **** void CAN_RX_ULTRASONIC_ISR(void) { // recide data
 2889              	 .loc 6 426 0
 2890              	 .cfi_startproc
 2891 0000 90B5     	 push {r4,r7,lr}
 2892              	.LCFI36:
 2893              	 .cfi_def_cfa_offset 12
 2894              	 .cfi_offset 4,-12
 2895              	 .cfi_offset 7,-8
 2896              	 .cfi_offset 14,-4
 2897 0002 87B0     	 sub sp,sp,#28
 2898              	.LCFI37:
 2899              	 .cfi_def_cfa_offset 40
 2900 0004 02AF     	 add r7,sp,#8
 2901              	.LCFI38:
 2902              	 .cfi_def_cfa 7,32
 427:../main.c     **** 	XMC_CAN_MO_t* lmsgobjct_ptr_1 = CAN_NODE_0.lmobj_ptr[6]->mo_ptr;
 2903              	 .loc 6 427 0
 2904 0006 374B     	 ldr r3,.L126
 2905 0008 5B6A     	 ldr r3,[r3,#36]
 2906 000a 1B68     	 ldr r3,[r3]
 2907 000c BB60     	 str r3,[r7,#8]
 428:../main.c     **** 	CAN_NODE_MO_Receive((void*) CAN_NODE_0.lmobj_ptr[6]);
 2908              	 .loc 6 428 0
 2909 000e 354B     	 ldr r3,.L126
 2910 0010 5B6A     	 ldr r3,[r3,#36]
 2911 0012 181C     	 mov r0,r3
 2912 0014 FFF7FEFF 	 bl CAN_NODE_MO_Receive
 429:../main.c     **** 
 430:../main.c     **** 	uint8_t data_RX[8];
 431:../main.c     **** 	uint8_t i;
 432:../main.c     **** 	for(i = 0 ; i < 8 ; i ++){
 2913              	 .loc 6 432 0
 2914 0018 0F23     	 mov r3,#15
 2915 001a FB18     	 add r3,r7,r3
 2916 001c 0022     	 mov r2,#0
 2917 001e 1A70     	 strb r2,[r3]
 2918 0020 11E0     	 b .L124
 2919              	.L125:
 433:../main.c     **** 		 data_RX[i] = lmsgobjct_ptr_1->can_data_byte[i];
 2920              	 .loc 6 433 0 discriminator 3
 2921 0022 0F23     	 mov r3,#15
 2922 0024 FB18     	 add r3,r7,r3
 2923 0026 1B78     	 ldrb r3,[r3]
 2924 0028 0F22     	 mov r2,#15
 2925 002a BA18     	 add r2,r7,r2
 2926 002c 1278     	 ldrb r2,[r2]
 2927 002e B968     	 ldr r1,[r7,#8]
 2928 0030 8A18     	 add r2,r1,r2
 2929 0032 117C     	 ldrb r1,[r2,#16]
 2930 0034 3A1C     	 mov r2,r7
 2931 0036 D154     	 strb r1,[r2,r3]
 432:../main.c     **** 		 data_RX[i] = lmsgobjct_ptr_1->can_data_byte[i];
 2932              	 .loc 6 432 0 discriminator 3
 2933 0038 0F23     	 mov r3,#15
 2934 003a FB18     	 add r3,r7,r3
 2935 003c 1A78     	 ldrb r2,[r3]
 2936 003e 0F23     	 mov r3,#15
 2937 0040 FB18     	 add r3,r7,r3
 2938 0042 0132     	 add r2,r2,#1
 2939 0044 1A70     	 strb r2,[r3]
 2940              	.L124:
 432:../main.c     **** 		 data_RX[i] = lmsgobjct_ptr_1->can_data_byte[i];
 2941              	 .loc 6 432 0 is_stmt 0 discriminator 1
 2942 0046 0F23     	 mov r3,#15
 2943 0048 FB18     	 add r3,r7,r3
 2944 004a 1B78     	 ldrb r3,[r3]
 2945 004c 072B     	 cmp r3,#7
 2946 004e E8D9     	 bls .L125
 434:../main.c     **** 	}
 435:../main.c     **** 
 436:../main.c     **** 	CAN_state_Ultrasonic = (data_RX[0 * 2 + 1] << 8) | data_RX[0 * 2];
 2947              	 .loc 6 436 0 is_stmt 1
 2948 0050 3B1C     	 mov r3,r7
 2949 0052 5B78     	 ldrb r3,[r3,#1]
 2950 0054 1B02     	 lsl r3,r3,#8
 2951 0056 DAB2     	 uxtb r2,r3
 2952 0058 3B1C     	 mov r3,r7
 2953 005a 1B78     	 ldrb r3,[r3]
 2954 005c DBB2     	 uxtb r3,r3
 2955 005e 1343     	 orr r3,r2
 2956 0060 DBB2     	 uxtb r3,r3
 2957 0062 DAB2     	 uxtb r2,r3
 2958 0064 204B     	 ldr r3,.L126+4
 2959 0066 1A70     	 strb r2,[r3]
 437:../main.c     **** 	Ultrasonic_cm_C = (data_RX[1 * 2 + 1] << 8) | data_RX[1 * 2];
 2960              	 .loc 6 437 0
 2961 0068 3B1C     	 mov r3,r7
 2962 006a DB78     	 ldrb r3,[r3,#3]
 2963 006c 1B02     	 lsl r3,r3,#8
 2964 006e 9AB2     	 uxth r2,r3
 2965 0070 3B1C     	 mov r3,r7
 2966 0072 9B78     	 ldrb r3,[r3,#2]
 2967 0074 9BB2     	 uxth r3,r3
 2968 0076 1343     	 orr r3,r2
 2969 0078 9BB2     	 uxth r3,r3
 2970 007a 9AB2     	 uxth r2,r3
 2971 007c 1B4B     	 ldr r3,.L126+8
 2972 007e 1A80     	 strh r2,[r3]
 438:../main.c     **** 	Ultrasonic_cm_L = (data_RX[2 * 2 + 1] << 8) | data_RX[2 * 2];
 2973              	 .loc 6 438 0
 2974 0080 3B1C     	 mov r3,r7
 2975 0082 5B79     	 ldrb r3,[r3,#5]
 2976 0084 1B02     	 lsl r3,r3,#8
 2977 0086 9AB2     	 uxth r2,r3
 2978 0088 3B1C     	 mov r3,r7
 2979 008a 1B79     	 ldrb r3,[r3,#4]
 2980 008c 9BB2     	 uxth r3,r3
 2981 008e 1343     	 orr r3,r2
 2982 0090 9BB2     	 uxth r3,r3
 2983 0092 9AB2     	 uxth r2,r3
 2984 0094 164B     	 ldr r3,.L126+12
 2985 0096 1A80     	 strh r2,[r3]
 439:../main.c     **** 	Ultrasonic_cm_R = (data_RX[3 * 2 + 1] << 8) | data_RX[3 * 2];
 2986              	 .loc 6 439 0
 2987 0098 3B1C     	 mov r3,r7
 2988 009a DB79     	 ldrb r3,[r3,#7]
 2989 009c 1B02     	 lsl r3,r3,#8
 2990 009e 9AB2     	 uxth r2,r3
 2991 00a0 3B1C     	 mov r3,r7
 2992 00a2 9B79     	 ldrb r3,[r3,#6]
 2993 00a4 9BB2     	 uxth r3,r3
 2994 00a6 1343     	 orr r3,r2
 2995 00a8 9BB2     	 uxth r3,r3
 2996 00aa 9AB2     	 uxth r2,r3
 2997 00ac 114B     	 ldr r3,.L126+16
 2998 00ae 1A80     	 strh r2,[r3]
 440:../main.c     **** 
 441:../main.c     **** 	Ultra_sonic_filter(Ultrasonic_cm_C,  Ultrasonic_cm_L,  Ultrasonic_cm_R,  Steering_Angles,  ALPHA_U
 2999              	 .loc 6 441 0
 3000 00b0 0E4B     	 ldr r3,.L126+8
 3001 00b2 1B88     	 ldrh r3,[r3]
 3002 00b4 9BB2     	 uxth r3,r3
 3003 00b6 98B2     	 uxth r0,r3
 3004 00b8 0D4B     	 ldr r3,.L126+12
 3005 00ba 1B88     	 ldrh r3,[r3]
 3006 00bc 9BB2     	 uxth r3,r3
 3007 00be 99B2     	 uxth r1,r3
 3008 00c0 0C4B     	 ldr r3,.L126+16
 3009 00c2 1B88     	 ldrh r3,[r3]
 3010 00c4 9BB2     	 uxth r3,r3
 3011 00c6 9AB2     	 uxth r2,r3
 3012 00c8 0B4B     	 ldr r3,.L126+20
 3013 00ca 1B68     	 ldr r3,[r3]
 3014 00cc 00B2     	 sxth r0,r0
 3015 00ce 09B2     	 sxth r1,r1
 3016 00d0 12B2     	 sxth r2,r2
 3017 00d2 0A4C     	 ldr r4,.L126+24
 3018 00d4 0093     	 str r3,[sp]
 3019 00d6 231C     	 mov r3,r4
 3020 00d8 FFF7FEFF 	 bl Ultra_sonic_filter
 442:../main.c     **** }
 3021              	 .loc 6 442 0
 3022 00dc BD46     	 mov sp,r7
 3023 00de 05B0     	 add sp,sp,#20
 3024              	 
 3025 00e0 90BD     	 pop {r4,r7,pc}
 3026              	.L127:
 3027 00e2 C046     	 .align 2
 3028              	.L126:
 3029 00e4 00000000 	 .word CAN_NODE_0
 3030 00e8 00000000 	 .word CAN_state_Ultrasonic
 3031 00ec 00000000 	 .word Ultrasonic_cm_C
 3032 00f0 00000000 	 .word Ultrasonic_cm_L
 3033 00f4 00000000 	 .word Ultrasonic_cm_R
 3034 00f8 00000000 	 .word ALPHA_ULTARSONIC
 3035 00fc 00000000 	 .word Steering_Angles
 3036              	 .cfi_endproc
 3037              	.LFE226:
 3039              	 .global __aeabi_i2f
 3040              	 .section .text.Ultra_sonic_filter,"ax",%progbits
 3041              	 .align 2
 3042              	 .global Ultra_sonic_filter
 3043              	 .code 16
 3044              	 .thumb_func
 3046              	Ultra_sonic_filter:
 3047              	.LFB227:
 443:../main.c     **** 
 444:../main.c     **** void Ultra_sonic_filter(int16_t Ultrasonic_cm_C_clc, int16_t Ultrasonic_cm_L_clc, int16_t Ultrasoni
 3048              	 .loc 6 444 0
 3049              	 .cfi_startproc
 3050 0000 F0B5     	 push {r4,r5,r6,r7,lr}
 3051              	.LCFI39:
 3052              	 .cfi_def_cfa_offset 20
 3053              	 .cfi_offset 4,-20
 3054              	 .cfi_offset 5,-16
 3055              	 .cfi_offset 6,-12
 3056              	 .cfi_offset 7,-8
 3057              	 .cfi_offset 14,-4
 3058 0002 87B0     	 sub sp,sp,#28
 3059              	.LCFI40:
 3060              	 .cfi_def_cfa_offset 48
 3061 0004 00AF     	 add r7,sp,#0
 3062              	.LCFI41:
 3063              	 .cfi_def_cfa_register 7
 3064 0006 041C     	 mov r4,r0
 3065 0008 081C     	 mov r0,r1
 3066 000a 111C     	 mov r1,r2
 3067 000c 7B60     	 str r3,[r7,#4]
 3068 000e 0E23     	 mov r3,#14
 3069 0010 FB18     	 add r3,r7,r3
 3070 0012 221C     	 add r2,r4,#0
 3071 0014 1A80     	 strh r2,[r3]
 3072 0016 0C23     	 mov r3,#12
 3073 0018 FB18     	 add r3,r7,r3
 3074 001a 021C     	 add r2,r0,#0
 3075 001c 1A80     	 strh r2,[r3]
 3076 001e 0A23     	 mov r3,#10
 3077 0020 FB18     	 add r3,r7,r3
 3078 0022 0A1C     	 add r2,r1,#0
 3079 0024 1A80     	 strh r2,[r3]
 445:../main.c     **** 
 446:../main.c     **** 	if(Ultrasonic_cm_C_clc != 0){
 3080              	 .loc 6 446 0
 3081 0026 0E23     	 mov r3,#14
 3082 0028 FB18     	 add r3,r7,r3
 3083 002a 0022     	 mov r2,#0
 3084 002c 9B5E     	 ldrsh r3,[r3,r2]
 3085 002e 002B     	 cmp r3,#0
 3086 0030 1CD0     	 beq .L129
 447:../main.c     **** 		Ultrsonic_data_invaildcounter[0] = 0;
 3087              	 .loc 6 447 0
 3088 0032 C84B     	 ldr r3,.L146
 3089 0034 0022     	 mov r2,#0
 3090 0036 1A70     	 strb r2,[r3]
 448:../main.c     **** 		Fil_Ultrasonic_m_C = Exp_moving_average((float)Ultrasonic_cm_C_clc / 100 , Fil_Ultrasonic_m_C, AL
 3091              	 .loc 6 448 0
 3092 0038 0E23     	 mov r3,#14
 3093 003a FB18     	 add r3,r7,r3
 3094 003c 0022     	 mov r2,#0
 3095 003e 9B5E     	 ldrsh r3,[r3,r2]
 3096 0040 181C     	 mov r0,r3
 3097 0042 FFF7FEFF 	 bl __aeabi_i2f
 3098 0046 031C     	 add r3,r0,#0
 3099 0048 181C     	 add r0,r3,#0
 3100 004a C349     	 ldr r1,.L146+4
 3101 004c FFF7FEFF 	 bl __aeabi_fdiv
 3102 0050 031C     	 add r3,r0,#0
 3103 0052 191C     	 add r1,r3,#0
 3104 0054 C14B     	 ldr r3,.L146+8
 3105 0056 1A68     	 ldr r2,[r3]
 3106 0058 3B6B     	 ldr r3,[r7,#48]
 3107 005a 081C     	 add r0,r1,#0
 3108 005c 111C     	 add r1,r2,#0
 3109 005e 1A1C     	 add r2,r3,#0
 3110 0060 FFF7FEFF 	 bl Exp_moving_average
 3111 0064 021C     	 add r2,r0,#0
 3112 0066 BD4B     	 ldr r3,.L146+8
 3113 0068 1A60     	 str r2,[r3]
 3114 006a 05E0     	 b .L130
 3115              	.L129:
 449:../main.c     **** 		//Fil_Ultrasonic_m_C = (float)Ultrasonic_cm_C_clc /100;
 450:../main.c     **** 	}
 451:../main.c     **** 	else Ultrsonic_data_invaildcounter[0]++;
 3116              	 .loc 6 451 0
 3117 006c B94B     	 ldr r3,.L146
 3118 006e 1B78     	 ldrb r3,[r3]
 3119 0070 0133     	 add r3,r3,#1
 3120 0072 DAB2     	 uxtb r2,r3
 3121 0074 B74B     	 ldr r3,.L146
 3122 0076 1A70     	 strb r2,[r3]
 3123              	.L130:
 452:../main.c     **** 
 453:../main.c     **** 	if(Ultrasonic_cm_L_clc != 0){
 3124              	 .loc 6 453 0
 3125 0078 0C23     	 mov r3,#12
 3126 007a FB18     	 add r3,r7,r3
 3127 007c 0022     	 mov r2,#0
 3128 007e 9B5E     	 ldrsh r3,[r3,r2]
 3129 0080 002B     	 cmp r3,#0
 3130 0082 20D0     	 beq .L131
 454:../main.c     **** 		obstructed_L = Ultrasoinc_Obstructet_Test(Steering_Angles_clc[0]);
 3131              	 .loc 6 454 0
 3132 0084 7B68     	 ldr r3,[r7,#4]
 3133 0086 1B68     	 ldr r3,[r3]
 3134 0088 181C     	 add r0,r3,#0
 3135 008a FFF7FEFF 	 bl Ultrasoinc_Obstructet_Test
 3136 008e 031C     	 mov r3,r0
 3137 0090 1A1C     	 mov r2,r3
 3138 0092 B34B     	 ldr r3,.L146+12
 3139 0094 1A70     	 strb r2,[r3]
 455:../main.c     **** 		if(obstructed_L == 0) {
 3140              	 .loc 6 455 0
 3141 0096 B24B     	 ldr r3,.L146+12
 3142 0098 1B78     	 ldrb r3,[r3]
 3143 009a 002B     	 cmp r3,#0
 3144 009c 19D1     	 bne .L133
 456:../main.c     **** 			Ultrsonic_data_invaildcounter[1] = 0;
 3145              	 .loc 6 456 0
 3146 009e AD4B     	 ldr r3,.L146
 3147 00a0 0022     	 mov r2,#0
 3148 00a2 5A70     	 strb r2,[r3,#1]
 457:../main.c     **** 			//Fil_Ultrasonic_m_L = Exp_moving_average(Ultrasonic_cm_L_clc, Fil_Ultrasonic_m_L, ALPHA_ULTARSO
 458:../main.c     **** 			Fil_Ultrasonic_m_L = (float)Ultrasonic_cm_L_clc /100;
 3149              	 .loc 6 458 0
 3150 00a4 0C23     	 mov r3,#12
 3151 00a6 FB18     	 add r3,r7,r3
 3152 00a8 0022     	 mov r2,#0
 3153 00aa 9B5E     	 ldrsh r3,[r3,r2]
 3154 00ac 181C     	 mov r0,r3
 3155 00ae FFF7FEFF 	 bl __aeabi_i2f
 3156 00b2 031C     	 add r3,r0,#0
 3157 00b4 181C     	 add r0,r3,#0
 3158 00b6 A849     	 ldr r1,.L146+4
 3159 00b8 FFF7FEFF 	 bl __aeabi_fdiv
 3160 00bc 031C     	 add r3,r0,#0
 3161 00be 1A1C     	 add r2,r3,#0
 3162 00c0 A84B     	 ldr r3,.L146+16
 3163 00c2 1A60     	 str r2,[r3]
 3164 00c4 05E0     	 b .L133
 3165              	.L131:
 459:../main.c     **** 		}
 460:../main.c     **** 	}
 461:../main.c     **** 	else Ultrsonic_data_invaildcounter[1]++;
 3166              	 .loc 6 461 0
 3167 00c6 A34B     	 ldr r3,.L146
 3168 00c8 5B78     	 ldrb r3,[r3,#1]
 3169 00ca 0133     	 add r3,r3,#1
 3170 00cc DAB2     	 uxtb r2,r3
 3171 00ce A14B     	 ldr r3,.L146
 3172 00d0 5A70     	 strb r2,[r3,#1]
 3173              	.L133:
 462:../main.c     **** 
 463:../main.c     **** 	if(Ultrasonic_cm_R_clc != 0){
 3174              	 .loc 6 463 0
 3175 00d2 0A23     	 mov r3,#10
 3176 00d4 FB18     	 add r3,r7,r3
 3177 00d6 0022     	 mov r2,#0
 3178 00d8 9B5E     	 ldrsh r3,[r3,r2]
 3179 00da 002B     	 cmp r3,#0
 3180 00dc 2DD0     	 beq .L134
 464:../main.c     **** 		obstructed_R = Ultrasoinc_Obstructet_Test( - Steering_Angles_clc[1]); // neagtiv becasue right wh
 3181              	 .loc 6 464 0
 3182 00de 7B68     	 ldr r3,[r7,#4]
 3183 00e0 0433     	 add r3,r3,#4
 3184 00e2 1B68     	 ldr r3,[r3]
 3185 00e4 8022     	 mov r2,#128
 3186 00e6 1206     	 lsl r2,r2,#24
 3187 00e8 5340     	 eor r3,r2
 3188 00ea 181C     	 add r0,r3,#0
 3189 00ec FFF7FEFF 	 bl Ultrasoinc_Obstructet_Test
 3190 00f0 031C     	 mov r3,r0
 3191 00f2 1A1C     	 mov r2,r3
 3192 00f4 9C4B     	 ldr r3,.L146+20
 3193 00f6 1A70     	 strb r2,[r3]
 465:../main.c     **** 		if(obstructed_R == 0){
 3194              	 .loc 6 465 0
 3195 00f8 9B4B     	 ldr r3,.L146+20
 3196 00fa 1B78     	 ldrb r3,[r3]
 3197 00fc 002B     	 cmp r3,#0
 3198 00fe 22D1     	 bne .L136
 466:../main.c     **** 			Fil_Ultrasonic_m_R = Exp_moving_average(Ultrasonic_cm_R_clc, Fil_Ultrasonic_m_R, ALPHA_ULTARSONI
 3199              	 .loc 6 466 0
 3200 0100 0A23     	 mov r3,#10
 3201 0102 FB18     	 add r3,r7,r3
 3202 0104 0022     	 mov r2,#0
 3203 0106 9B5E     	 ldrsh r3,[r3,r2]
 3204 0108 181C     	 mov r0,r3
 3205 010a FFF7FEFF 	 bl __aeabi_i2f
 3206 010e 011C     	 add r1,r0,#0
 3207 0110 964B     	 ldr r3,.L146+24
 3208 0112 1A68     	 ldr r2,[r3]
 3209 0114 3B6B     	 ldr r3,[r7,#48]
 3210 0116 081C     	 add r0,r1,#0
 3211 0118 111C     	 add r1,r2,#0
 3212 011a 1A1C     	 add r2,r3,#0
 3213 011c FFF7FEFF 	 bl Exp_moving_average
 3214 0120 031C     	 add r3,r0,#0
 3215 0122 181C     	 add r0,r3,#0
 3216 0124 8C49     	 ldr r1,.L146+4
 3217 0126 FFF7FEFF 	 bl __aeabi_fdiv
 3218 012a 031C     	 add r3,r0,#0
 3219 012c 1A1C     	 add r2,r3,#0
 3220 012e 8F4B     	 ldr r3,.L146+24
 3221 0130 1A60     	 str r2,[r3]
 467:../main.c     **** 			Ultrsonic_data_invaildcounter[2] = 1;
 3222              	 .loc 6 467 0
 3223 0132 884B     	 ldr r3,.L146
 3224 0134 0122     	 mov r2,#1
 3225 0136 9A70     	 strb r2,[r3,#2]
 3226 0138 05E0     	 b .L136
 3227              	.L134:
 468:../main.c     **** 		}
 469:../main.c     **** 	}
 470:../main.c     **** 	else Ultrsonic_data_invaildcounter[2]++;
 3228              	 .loc 6 470 0
 3229 013a 864B     	 ldr r3,.L146
 3230 013c 9B78     	 ldrb r3,[r3,#2]
 3231 013e 0133     	 add r3,r3,#1
 3232 0140 DAB2     	 uxtb r2,r3
 3233 0142 844B     	 ldr r3,.L146
 3234 0144 9A70     	 strb r2,[r3,#2]
 3235              	.L136:
 471:../main.c     **** 
 472:../main.c     **** 	uint8_t i;
 473:../main.c     **** 	for(i = 0; i < 3; i++){
 3236              	 .loc 6 473 0
 3237 0146 1723     	 mov r3,#23
 3238 0148 FB18     	 add r3,r7,r3
 3239 014a 0022     	 mov r2,#0
 3240 014c 1A70     	 strb r2,[r3]
 3241 014e 13E0     	 b .L137
 3242              	.L139:
 474:../main.c     **** 		if( Ultrsonic_data_invaildcounter[i] > ULRTA_NUM_NO_DATA_INVALID) Ultrsonic_data_invaildcounter[i
 3243              	 .loc 6 474 0
 3244 0150 1723     	 mov r3,#23
 3245 0152 FB18     	 add r3,r7,r3
 3246 0154 1B78     	 ldrb r3,[r3]
 3247 0156 7F4A     	 ldr r2,.L146
 3248 0158 D35C     	 ldrb r3,[r2,r3]
 3249 015a 282B     	 cmp r3,#40
 3250 015c 05D9     	 bls .L138
 3251              	 .loc 6 474 0 is_stmt 0 discriminator 1
 3252 015e 1723     	 mov r3,#23
 3253 0160 FB18     	 add r3,r7,r3
 3254 0162 1B78     	 ldrb r3,[r3]
 3255 0164 7B4A     	 ldr r2,.L146
 3256 0166 2821     	 mov r1,#40
 3257 0168 D154     	 strb r1,[r2,r3]
 3258              	.L138:
 473:../main.c     **** 		if( Ultrsonic_data_invaildcounter[i] > ULRTA_NUM_NO_DATA_INVALID) Ultrsonic_data_invaildcounter[i
 3259              	 .loc 6 473 0 is_stmt 1 discriminator 2
 3260 016a 1723     	 mov r3,#23
 3261 016c FB18     	 add r3,r7,r3
 3262 016e 1A78     	 ldrb r2,[r3]
 3263 0170 1723     	 mov r3,#23
 3264 0172 FB18     	 add r3,r7,r3
 3265 0174 0132     	 add r2,r2,#1
 3266 0176 1A70     	 strb r2,[r3]
 3267              	.L137:
 473:../main.c     **** 		if( Ultrsonic_data_invaildcounter[i] > ULRTA_NUM_NO_DATA_INVALID) Ultrsonic_data_invaildcounter[i
 3268              	 .loc 6 473 0 is_stmt 0 discriminator 1
 3269 0178 1723     	 mov r3,#23
 3270 017a FB18     	 add r3,r7,r3
 3271 017c 1B78     	 ldrb r3,[r3]
 3272 017e 022B     	 cmp r3,#2
 3273 0180 E6D9     	 bls .L139
 475:../main.c     **** 	}
 476:../main.c     **** 
 477:../main.c     **** 	// front obstacel
 478:../main.c     **** 	if(Ultrsonic_data_invaildcounter[0] < ULRTA_NUM_NO_DATA_INVALID ){
 3274              	 .loc 6 478 0 is_stmt 1
 3275 0182 744B     	 ldr r3,.L146
 3276 0184 1B78     	 ldrb r3,[r3]
 3277 0186 272B     	 cmp r3,#39
 3278 0188 07D8     	 bhi .L140
 479:../main.c     **** 		Obstacel_F[0] = Fil_Ultrasonic_m_C;
 3279              	 .loc 6 479 0
 3280 018a 744B     	 ldr r3,.L146+8
 3281 018c 1A68     	 ldr r2,[r3]
 3282 018e 784B     	 ldr r3,.L146+28
 3283 0190 1A60     	 str r2,[r3]
 480:../main.c     **** 		Obstacel_valid[0] = 1;
 3284              	 .loc 6 480 0
 3285 0192 784B     	 ldr r3,.L146+32
 3286 0194 0122     	 mov r2,#1
 3287 0196 1A70     	 strb r2,[r3]
 3288 0198 02E0     	 b .L141
 3289              	.L140:
 481:../main.c     **** 	}
 482:../main.c     **** 	else Obstacel_valid[0] = 0;
 3290              	 .loc 6 482 0
 3291 019a 764B     	 ldr r3,.L146+32
 3292 019c 0022     	 mov r2,#0
 3293 019e 1A70     	 strb r2,[r3]
 3294              	.L141:
 483:../main.c     **** 
 484:../main.c     **** 	if(Ultrsonic_data_invaildcounter[1] < ULRTA_NUM_NO_DATA_INVALID ){
 3295              	 .loc 6 484 0
 3296 01a0 6C4B     	 ldr r3,.L146
 3297 01a2 5B78     	 ldrb r3,[r3,#1]
 3298 01a4 272B     	 cmp r3,#39
 3299 01a6 59D8     	 bhi .L142
 485:../main.c     **** 		Obstacel_L[0] = Fil_Ultrasonic_m_L * cos(Steering_Angles[0] / RAD_TO_DEG);
 3300              	 .loc 6 485 0
 3301 01a8 6E4B     	 ldr r3,.L146+16
 3302 01aa 1B68     	 ldr r3,[r3]
 3303 01ac 181C     	 add r0,r3,#0
 3304 01ae FFF7FEFF 	 bl __aeabi_f2d
 3305 01b2 051C     	 mov r5,r0
 3306 01b4 0E1C     	 mov r6,r1
 3307 01b6 704B     	 ldr r3,.L146+36
 3308 01b8 1B68     	 ldr r3,[r3]
 3309 01ba 181C     	 add r0,r3,#0
 3310 01bc FFF7FEFF 	 bl __aeabi_f2d
 3311 01c0 031C     	 mov r3,r0
 3312 01c2 0C1C     	 mov r4,r1
 3313 01c4 181C     	 mov r0,r3
 3314 01c6 211C     	 mov r1,r4
 3315 01c8 6C4A     	 ldr r2,.L146+40
 3316 01ca 6D4B     	 ldr r3,.L146+44
 3317 01cc FFF7FEFF 	 bl __aeabi_ddiv
 3318 01d0 031C     	 mov r3,r0
 3319 01d2 0C1C     	 mov r4,r1
 3320 01d4 181C     	 mov r0,r3
 3321 01d6 211C     	 mov r1,r4
 3322 01d8 FFF7FEFF 	 bl cos
 3323 01dc 031C     	 mov r3,r0
 3324 01de 0C1C     	 mov r4,r1
 3325 01e0 281C     	 mov r0,r5
 3326 01e2 311C     	 mov r1,r6
 3327 01e4 1A1C     	 mov r2,r3
 3328 01e6 231C     	 mov r3,r4
 3329 01e8 FFF7FEFF 	 bl __aeabi_dmul
 3330 01ec 031C     	 mov r3,r0
 3331 01ee 0C1C     	 mov r4,r1
 3332 01f0 181C     	 mov r0,r3
 3333 01f2 211C     	 mov r1,r4
 3334 01f4 FFF7FEFF 	 bl __aeabi_d2f
 3335 01f8 021C     	 add r2,r0,#0
 3336 01fa 624B     	 ldr r3,.L146+48
 3337 01fc 1A60     	 str r2,[r3]
 486:../main.c     **** 		Obstacel_L[1] = Fil_Ultrasonic_m_L * sin(Steering_Angles[0] / RAD_TO_DEG);
 3338              	 .loc 6 486 0
 3339 01fe 594B     	 ldr r3,.L146+16
 3340 0200 1B68     	 ldr r3,[r3]
 3341 0202 181C     	 add r0,r3,#0
 3342 0204 FFF7FEFF 	 bl __aeabi_f2d
 3343 0208 051C     	 mov r5,r0
 3344 020a 0E1C     	 mov r6,r1
 3345 020c 5A4B     	 ldr r3,.L146+36
 3346 020e 1B68     	 ldr r3,[r3]
 3347 0210 181C     	 add r0,r3,#0
 3348 0212 FFF7FEFF 	 bl __aeabi_f2d
 3349 0216 031C     	 mov r3,r0
 3350 0218 0C1C     	 mov r4,r1
 3351 021a 181C     	 mov r0,r3
 3352 021c 211C     	 mov r1,r4
 3353 021e 574A     	 ldr r2,.L146+40
 3354 0220 574B     	 ldr r3,.L146+44
 3355 0222 FFF7FEFF 	 bl __aeabi_ddiv
 3356 0226 031C     	 mov r3,r0
 3357 0228 0C1C     	 mov r4,r1
 3358 022a 181C     	 mov r0,r3
 3359 022c 211C     	 mov r1,r4
 3360 022e FFF7FEFF 	 bl sin
 3361 0232 031C     	 mov r3,r0
 3362 0234 0C1C     	 mov r4,r1
 3363 0236 281C     	 mov r0,r5
 3364 0238 311C     	 mov r1,r6
 3365 023a 1A1C     	 mov r2,r3
 3366 023c 231C     	 mov r3,r4
 3367 023e FFF7FEFF 	 bl __aeabi_dmul
 3368 0242 031C     	 mov r3,r0
 3369 0244 0C1C     	 mov r4,r1
 3370 0246 181C     	 mov r0,r3
 3371 0248 211C     	 mov r1,r4
 3372 024a FFF7FEFF 	 bl __aeabi_d2f
 3373 024e 021C     	 add r2,r0,#0
 3374 0250 4C4B     	 ldr r3,.L146+48
 3375 0252 5A60     	 str r2,[r3,#4]
 487:../main.c     **** 		Obstacel_valid[1] = 1;
 3376              	 .loc 6 487 0
 3377 0254 474B     	 ldr r3,.L146+32
 3378 0256 0122     	 mov r2,#1
 3379 0258 5A70     	 strb r2,[r3,#1]
 3380 025a 02E0     	 b .L143
 3381              	.L142:
 488:../main.c     **** 	}
 489:../main.c     **** 	else Obstacel_valid[1] = 0;
 3382              	 .loc 6 489 0
 3383 025c 454B     	 ldr r3,.L146+32
 3384 025e 0022     	 mov r2,#0
 3385 0260 5A70     	 strb r2,[r3,#1]
 3386              	.L143:
 490:../main.c     **** 
 491:../main.c     **** 	if(Ultrsonic_data_invaildcounter[2]  < ULRTA_NUM_NO_DATA_INVALID ){
 3387              	 .loc 6 491 0
 3388 0262 3C4B     	 ldr r3,.L146
 3389 0264 9B78     	 ldrb r3,[r3,#2]
 3390 0266 272B     	 cmp r3,#39
 3391 0268 59D8     	 bhi .L144
 492:../main.c     **** 		Obstacel_R[0] = Fil_Ultrasonic_m_R * cos(Steering_Angles[1] / RAD_TO_DEG);
 3392              	 .loc 6 492 0
 3393 026a 404B     	 ldr r3,.L146+24
 3394 026c 1B68     	 ldr r3,[r3]
 3395 026e 181C     	 add r0,r3,#0
 3396 0270 FFF7FEFF 	 bl __aeabi_f2d
 3397 0274 051C     	 mov r5,r0
 3398 0276 0E1C     	 mov r6,r1
 3399 0278 3F4B     	 ldr r3,.L146+36
 3400 027a 5B68     	 ldr r3,[r3,#4]
 3401 027c 181C     	 add r0,r3,#0
 3402 027e FFF7FEFF 	 bl __aeabi_f2d
 3403 0282 031C     	 mov r3,r0
 3404 0284 0C1C     	 mov r4,r1
 3405 0286 181C     	 mov r0,r3
 3406 0288 211C     	 mov r1,r4
 3407 028a 3C4A     	 ldr r2,.L146+40
 3408 028c 3C4B     	 ldr r3,.L146+44
 3409 028e FFF7FEFF 	 bl __aeabi_ddiv
 3410 0292 031C     	 mov r3,r0
 3411 0294 0C1C     	 mov r4,r1
 3412 0296 181C     	 mov r0,r3
 3413 0298 211C     	 mov r1,r4
 3414 029a FFF7FEFF 	 bl cos
 3415 029e 031C     	 mov r3,r0
 3416 02a0 0C1C     	 mov r4,r1
 3417 02a2 281C     	 mov r0,r5
 3418 02a4 311C     	 mov r1,r6
 3419 02a6 1A1C     	 mov r2,r3
 3420 02a8 231C     	 mov r3,r4
 3421 02aa FFF7FEFF 	 bl __aeabi_dmul
 3422 02ae 031C     	 mov r3,r0
 3423 02b0 0C1C     	 mov r4,r1
 3424 02b2 181C     	 mov r0,r3
 3425 02b4 211C     	 mov r1,r4
 3426 02b6 FFF7FEFF 	 bl __aeabi_d2f
 3427 02ba 021C     	 add r2,r0,#0
 3428 02bc 324B     	 ldr r3,.L146+52
 3429 02be 1A60     	 str r2,[r3]
 493:../main.c     **** 		Obstacel_R[1] = Fil_Ultrasonic_m_R * sin(Steering_Angles[1] / RAD_TO_DEG);
 3430              	 .loc 6 493 0
 3431 02c0 2A4B     	 ldr r3,.L146+24
 3432 02c2 1B68     	 ldr r3,[r3]
 3433 02c4 181C     	 add r0,r3,#0
 3434 02c6 FFF7FEFF 	 bl __aeabi_f2d
 3435 02ca 051C     	 mov r5,r0
 3436 02cc 0E1C     	 mov r6,r1
 3437 02ce 2A4B     	 ldr r3,.L146+36
 3438 02d0 5B68     	 ldr r3,[r3,#4]
 3439 02d2 181C     	 add r0,r3,#0
 3440 02d4 FFF7FEFF 	 bl __aeabi_f2d
 3441 02d8 031C     	 mov r3,r0
 3442 02da 0C1C     	 mov r4,r1
 3443 02dc 181C     	 mov r0,r3
 3444 02de 211C     	 mov r1,r4
 3445 02e0 264A     	 ldr r2,.L146+40
 3446 02e2 274B     	 ldr r3,.L146+44
 3447 02e4 FFF7FEFF 	 bl __aeabi_ddiv
 3448 02e8 031C     	 mov r3,r0
 3449 02ea 0C1C     	 mov r4,r1
 3450 02ec 181C     	 mov r0,r3
 3451 02ee 211C     	 mov r1,r4
 3452 02f0 FFF7FEFF 	 bl sin
 3453 02f4 031C     	 mov r3,r0
 3454 02f6 0C1C     	 mov r4,r1
 3455 02f8 281C     	 mov r0,r5
 3456 02fa 311C     	 mov r1,r6
 3457 02fc 1A1C     	 mov r2,r3
 3458 02fe 231C     	 mov r3,r4
 3459 0300 FFF7FEFF 	 bl __aeabi_dmul
 3460 0304 031C     	 mov r3,r0
 3461 0306 0C1C     	 mov r4,r1
 3462 0308 181C     	 mov r0,r3
 3463 030a 211C     	 mov r1,r4
 3464 030c FFF7FEFF 	 bl __aeabi_d2f
 3465 0310 021C     	 add r2,r0,#0
 3466 0312 1D4B     	 ldr r3,.L146+52
 3467 0314 5A60     	 str r2,[r3,#4]
 494:../main.c     **** 		Obstacel_valid[2] = 1;
 3468              	 .loc 6 494 0
 3469 0316 174B     	 ldr r3,.L146+32
 3470 0318 0122     	 mov r2,#1
 3471 031a 9A70     	 strb r2,[r3,#2]
 3472 031c 02E0     	 b .L145
 3473              	.L144:
 495:../main.c     **** 	}
 496:../main.c     **** 	else Obstacel_valid[2] = 0;
 3474              	 .loc 6 496 0
 3475 031e 154B     	 ldr r3,.L146+32
 3476 0320 0022     	 mov r2,#0
 3477 0322 9A70     	 strb r2,[r3,#2]
 3478              	.L145:
 497:../main.c     **** 
 498:../main.c     **** 	obstacel_F_x = Obstacel_F[0];
 3479              	 .loc 6 498 0
 3480 0324 124B     	 ldr r3,.L146+28
 3481 0326 1A68     	 ldr r2,[r3]
 3482 0328 184B     	 ldr r3,.L146+56
 3483 032a 1A60     	 str r2,[r3]
 499:../main.c     **** 	obstacel_L_x = Obstacel_L[0];
 3484              	 .loc 6 499 0
 3485 032c 154B     	 ldr r3,.L146+48
 3486 032e 1A68     	 ldr r2,[r3]
 3487 0330 174B     	 ldr r3,.L146+60
 3488 0332 1A60     	 str r2,[r3]
 500:../main.c     **** 	obstacel_L_y = Obstacel_L[1];
 3489              	 .loc 6 500 0
 3490 0334 134B     	 ldr r3,.L146+48
 3491 0336 5A68     	 ldr r2,[r3,#4]
 3492 0338 164B     	 ldr r3,.L146+64
 3493 033a 1A60     	 str r2,[r3]
 501:../main.c     **** 	obstacel_R_x = Obstacel_R[0];
 3494              	 .loc 6 501 0
 3495 033c 124B     	 ldr r3,.L146+52
 3496 033e 1A68     	 ldr r2,[r3]
 3497 0340 154B     	 ldr r3,.L146+68
 3498 0342 1A60     	 str r2,[r3]
 502:../main.c     **** 	obstacel_R_y = Obstacel_R[1];
 3499              	 .loc 6 502 0
 3500 0344 104B     	 ldr r3,.L146+52
 3501 0346 5A68     	 ldr r2,[r3,#4]
 3502 0348 144B     	 ldr r3,.L146+72
 3503 034a 1A60     	 str r2,[r3]
 503:../main.c     **** 
 504:../main.c     **** 
 505:../main.c     **** }
 3504              	 .loc 6 505 0
 3505 034c BD46     	 mov sp,r7
 3506 034e 07B0     	 add sp,sp,#28
 3507              	 
 3508 0350 F0BD     	 pop {r4,r5,r6,r7,pc}
 3509              	.L147:
 3510 0352 C046     	 .align 2
 3511              	.L146:
 3512 0354 00000000 	 .word Ultrsonic_data_invaildcounter
 3513 0358 0000C842 	 .word 1120403456
 3514 035c 00000000 	 .word Fil_Ultrasonic_m_C
 3515 0360 00000000 	 .word obstructed_L
 3516 0364 00000000 	 .word Fil_Ultrasonic_m_L
 3517 0368 00000000 	 .word obstructed_R
 3518 036c 00000000 	 .word Fil_Ultrasonic_m_R
 3519 0370 00000000 	 .word Obstacel_F
 3520 0374 00000000 	 .word Obstacel_valid
 3521 0378 00000000 	 .word Steering_Angles
 3522 037c D9CEF753 	 .word 1408749273
 3523 0380 E3A54C40 	 .word 1078765027
 3524 0384 00000000 	 .word Obstacel_L
 3525 0388 00000000 	 .word Obstacel_R
 3526 038c 00000000 	 .word obstacel_F_x
 3527 0390 00000000 	 .word obstacel_L_x
 3528 0394 00000000 	 .word obstacel_L_y
 3529 0398 00000000 	 .word obstacel_R_x
 3530 039c 00000000 	 .word obstacel_R_y
 3531              	 .cfi_endproc
 3532              	.LFE227:
 3534              	 .global __aeabi_fsub
 3535              	 .global __aeabi_fcmple
 3536              	 .section .text.Ultrasoinc_Obstructet_Test,"ax",%progbits
 3537              	 .align 2
 3538              	 .global Ultrasoinc_Obstructet_Test
 3539              	 .code 16
 3540              	 .thumb_func
 3542              	Ultrasoinc_Obstructet_Test:
 3543              	.LFB228:
 506:../main.c     **** 
 507:../main.c     **** uint8_t Ultrasoinc_Obstructet_Test(float Angle){
 3544              	 .loc 6 507 0
 3545              	 .cfi_startproc
 3546 0000 90B5     	 push {r4,r7,lr}
 3547              	.LCFI42:
 3548              	 .cfi_def_cfa_offset 12
 3549              	 .cfi_offset 4,-12
 3550              	 .cfi_offset 7,-8
 3551              	 .cfi_offset 14,-4
 3552 0002 85B0     	 sub sp,sp,#20
 3553              	.LCFI43:
 3554              	 .cfi_def_cfa_offset 32
 3555 0004 00AF     	 add r7,sp,#0
 3556              	.LCFI44:
 3557              	 .cfi_def_cfa_register 7
 3558 0006 7860     	 str r0,[r7,#4]
 508:../main.c     **** 	uint8_t i;
 509:../main.c     **** 	for(i = 0; i < 3; i++){ // if rotate around multipel times
 3559              	 .loc 6 509 0
 3560 0008 0F23     	 mov r3,#15
 3561 000a FB18     	 add r3,r7,r3
 3562 000c 0022     	 mov r2,#0
 3563 000e 1A70     	 strb r2,[r3]
 3564 0010 6DE0     	 b .L149
 3565              	.L157:
 510:../main.c     **** 		if(Angle > 0){
 3566              	 .loc 6 510 0
 3567 0012 7868     	 ldr r0,[r7,#4]
 3568 0014 0021     	 mov r1,#0
 3569 0016 FFF7FEFF 	 bl __aeabi_fcmpgt
 3570 001a 031E     	 sub r3,r0,#0
 3571 001c 2DD0     	 beq .L150
 511:../main.c     **** 			if((Angle - (POS_OBSTRUCTED_ANGLE_MIN + (i * 360))) * (Angle - (POS_OBSTRUCTED_ANGLE_MAX + (i * 
 3572              	 .loc 6 511 0
 3573 001e 0F23     	 mov r3,#15
 3574 0020 FB18     	 add r3,r7,r3
 3575 0022 1B78     	 ldrb r3,[r3]
 3576 0024 B422     	 mov r2,#180
 3577 0026 5200     	 lsl r2,r2,#1
 3578 0028 5343     	 mul r3,r2
 3579 002a 3233     	 add r3,r3,#50
 3580 002c 181C     	 mov r0,r3
 3581 002e FFF7FEFF 	 bl __aeabi_i2f
 3582 0032 031C     	 add r3,r0,#0
 3583 0034 7868     	 ldr r0,[r7,#4]
 3584 0036 191C     	 add r1,r3,#0
 3585 0038 FFF7FEFF 	 bl __aeabi_fsub
 3586 003c 031C     	 add r3,r0,#0
 3587 003e 1C1C     	 add r4,r3,#0
 3588 0040 0F23     	 mov r3,#15
 3589 0042 FB18     	 add r3,r7,r3
 3590 0044 1B78     	 ldrb r3,[r3]
 3591 0046 B422     	 mov r2,#180
 3592 0048 5200     	 lsl r2,r2,#1
 3593 004a 5343     	 mul r3,r2
 3594 004c D233     	 add r3,r3,#210
 3595 004e 181C     	 mov r0,r3
 3596 0050 FFF7FEFF 	 bl __aeabi_i2f
 3597 0054 031C     	 add r3,r0,#0
 3598 0056 7868     	 ldr r0,[r7,#4]
 3599 0058 191C     	 add r1,r3,#0
 3600 005a FFF7FEFF 	 bl __aeabi_fsub
 3601 005e 031C     	 add r3,r0,#0
 3602 0060 201C     	 add r0,r4,#0
 3603 0062 191C     	 add r1,r3,#0
 3604 0064 FFF7FEFF 	 bl __aeabi_fmul
 3605 0068 031C     	 add r3,r0,#0
 3606 006a 181C     	 add r0,r3,#0
 3607 006c 0021     	 mov r1,#0
 3608 006e FFF7FEFF 	 bl __aeabi_fcmple
 3609 0072 031E     	 sub r3,r0,#0
 3610 0074 01D0     	 beq .L150
 512:../main.c     **** 				return 1;
 3611              	 .loc 6 512 0
 3612 0076 0123     	 mov r3,#1
 3613 0078 3FE0     	 b .L153
 3614              	.L150:
 513:../main.c     **** 			}
 514:../main.c     **** 		}
 515:../main.c     **** 
 516:../main.c     **** 		if(Angle < 0){
 3615              	 .loc 6 516 0
 3616 007a 7868     	 ldr r0,[r7,#4]
 3617 007c 0021     	 mov r1,#0
 3618 007e FFF7FEFF 	 bl __aeabi_fcmplt
 3619 0082 031E     	 sub r3,r0,#0
 3620 0084 2CD0     	 beq .L154
 517:../main.c     **** 			if((Angle - (NEG_OBSTRUCTED_ANGLE_MIN - (i * 360))) * (Angle - (NEG_OBSTRUCTED_ANGLE_MAX - (i * 
 3621              	 .loc 6 517 0
 3622 0086 0F23     	 mov r3,#15
 3623 0088 FB18     	 add r3,r7,r3
 3624 008a 1B78     	 ldrb r3,[r3]
 3625 008c 1D4A     	 ldr r2,.L162
 3626 008e 5343     	 mul r3,r2
 3627 0090 963B     	 sub r3,r3,#150
 3628 0092 181C     	 mov r0,r3
 3629 0094 FFF7FEFF 	 bl __aeabi_i2f
 3630 0098 031C     	 add r3,r0,#0
 3631 009a 7868     	 ldr r0,[r7,#4]
 3632 009c 191C     	 add r1,r3,#0
 3633 009e FFF7FEFF 	 bl __aeabi_fsub
 3634 00a2 031C     	 add r3,r0,#0
 3635 00a4 1C1C     	 add r4,r3,#0
 3636 00a6 0F23     	 mov r3,#15
 3637 00a8 FB18     	 add r3,r7,r3
 3638 00aa 1B78     	 ldrb r3,[r3]
 3639 00ac 154A     	 ldr r2,.L162
 3640 00ae 5343     	 mul r3,r2
 3641 00b0 373B     	 sub r3,r3,#55
 3642 00b2 FF3B     	 sub r3,r3,#255
 3643 00b4 181C     	 mov r0,r3
 3644 00b6 FFF7FEFF 	 bl __aeabi_i2f
 3645 00ba 031C     	 add r3,r0,#0
 3646 00bc 7868     	 ldr r0,[r7,#4]
 3647 00be 191C     	 add r1,r3,#0
 3648 00c0 FFF7FEFF 	 bl __aeabi_fsub
 3649 00c4 031C     	 add r3,r0,#0
 3650 00c6 201C     	 add r0,r4,#0
 3651 00c8 191C     	 add r1,r3,#0
 3652 00ca FFF7FEFF 	 bl __aeabi_fmul
 3653 00ce 031C     	 add r3,r0,#0
 3654 00d0 181C     	 add r0,r3,#0
 3655 00d2 0021     	 mov r1,#0
 3656 00d4 FFF7FEFF 	 bl __aeabi_fcmple
 3657 00d8 031E     	 sub r3,r0,#0
 3658 00da 01D0     	 beq .L154
 518:../main.c     **** 						return 1;
 3659              	 .loc 6 518 0
 3660 00dc 0123     	 mov r3,#1
 3661 00de 0CE0     	 b .L153
 3662              	.L154:
 509:../main.c     **** 		if(Angle > 0){
 3663              	 .loc 6 509 0 discriminator 2
 3664 00e0 0F23     	 mov r3,#15
 3665 00e2 FB18     	 add r3,r7,r3
 3666 00e4 1A78     	 ldrb r2,[r3]
 3667 00e6 0F23     	 mov r3,#15
 3668 00e8 FB18     	 add r3,r7,r3
 3669 00ea 0132     	 add r2,r2,#1
 3670 00ec 1A70     	 strb r2,[r3]
 3671              	.L149:
 509:../main.c     **** 		if(Angle > 0){
 3672              	 .loc 6 509 0 is_stmt 0 discriminator 1
 3673 00ee 0F23     	 mov r3,#15
 3674 00f0 FB18     	 add r3,r7,r3
 3675 00f2 1B78     	 ldrb r3,[r3]
 3676 00f4 022B     	 cmp r3,#2
 3677 00f6 8CD9     	 bls .L157
 519:../main.c     **** 			}
 520:../main.c     **** 		}
 521:../main.c     **** 	}
 522:../main.c     **** 
 523:../main.c     **** 	return 0;
 3678              	 .loc 6 523 0 is_stmt 1
 3679 00f8 0023     	 mov r3,#0
 3680              	.L153:
 524:../main.c     **** }
 3681              	 .loc 6 524 0
 3682 00fa 181C     	 mov r0,r3
 3683 00fc BD46     	 mov sp,r7
 3684 00fe 05B0     	 add sp,sp,#20
 3685              	 
 3686 0100 90BD     	 pop {r4,r7,pc}
 3687              	.L163:
 3688 0102 C046     	 .align 2
 3689              	.L162:
 3690 0104 98FEFFFF 	 .word -360
 3691              	 .cfi_endproc
 3692              	.LFE228:
 3694              	 .global __aeabi_fadd
 3695              	 .section .text.Exp_moving_average,"ax",%progbits
 3696              	 .align 2
 3697              	 .global Exp_moving_average
 3698              	 .code 16
 3699              	 .thumb_func
 3701              	Exp_moving_average:
 3702              	.LFB229:
 525:../main.c     **** 
 526:../main.c     **** float Exp_moving_average(float new_value, float value, float ALPHA){
 3703              	 .loc 6 526 0
 3704              	 .cfi_startproc
 3705 0000 90B5     	 push {r4,r7,lr}
 3706              	.LCFI45:
 3707              	 .cfi_def_cfa_offset 12
 3708              	 .cfi_offset 4,-12
 3709              	 .cfi_offset 7,-8
 3710              	 .cfi_offset 14,-4
 3711 0002 85B0     	 sub sp,sp,#20
 3712              	.LCFI46:
 3713              	 .cfi_def_cfa_offset 32
 3714 0004 00AF     	 add r7,sp,#0
 3715              	.LCFI47:
 3716              	 .cfi_def_cfa_register 7
 3717 0006 F860     	 str r0,[r7,#12]
 3718 0008 B960     	 str r1,[r7,#8]
 3719 000a 7A60     	 str r2,[r7,#4]
 527:../main.c     **** 	return ((new_value * ALPHA) + ((1 - ALPHA) * value));
 3720              	 .loc 6 527 0
 3721 000c F868     	 ldr r0,[r7,#12]
 3722 000e 7968     	 ldr r1,[r7,#4]
 3723 0010 FFF7FEFF 	 bl __aeabi_fmul
 3724 0014 031C     	 add r3,r0,#0
 3725 0016 1C1C     	 add r4,r3,#0
 3726 0018 FE20     	 mov r0,#254
 3727 001a 8005     	 lsl r0,r0,#22
 3728 001c 7968     	 ldr r1,[r7,#4]
 3729 001e FFF7FEFF 	 bl __aeabi_fsub
 3730 0022 031C     	 add r3,r0,#0
 3731 0024 181C     	 add r0,r3,#0
 3732 0026 B968     	 ldr r1,[r7,#8]
 3733 0028 FFF7FEFF 	 bl __aeabi_fmul
 3734 002c 031C     	 add r3,r0,#0
 3735 002e 201C     	 add r0,r4,#0
 3736 0030 191C     	 add r1,r3,#0
 3737 0032 FFF7FEFF 	 bl __aeabi_fadd
 3738 0036 031C     	 add r3,r0,#0
 528:../main.c     **** }
 3739              	 .loc 6 528 0
 3740 0038 181C     	 add r0,r3,#0
 3741 003a BD46     	 mov sp,r7
 3742 003c 05B0     	 add sp,sp,#20
 3743              	 
 3744 003e 90BD     	 pop {r4,r7,pc}
 3745              	 .cfi_endproc
 3746              	.LFE229:
 3748              	 .section .text.IRQ3_Handler,"ax",%progbits
 3749              	 .align 2
 3750              	 .global IRQ3_Handler
 3751              	 .code 16
 3752              	 .thumb_func
 3754              	IRQ3_Handler:
 3755              	.LFB230:
 529:../main.c     **** 
 530:../main.c     **** void CAN_RX_INVERTER_ISR(void) {
 3756              	 .loc 6 530 0
 3757              	 .cfi_startproc
 3758 0000 80B5     	 push {r7,lr}
 3759              	.LCFI48:
 3760              	 .cfi_def_cfa_offset 8
 3761              	 .cfi_offset 7,-8
 3762              	 .cfi_offset 14,-4
 3763 0002 00AF     	 add r7,sp,#0
 3764              	.LCFI49:
 3765              	 .cfi_def_cfa_register 7
 531:../main.c     **** 	WATCHDOG_Service();
 3766              	 .loc 6 531 0
 3767 0004 FFF7FEFF 	 bl WATCHDOG_Service
 532:../main.c     **** 	DIGITAL_IO_SetOutputLow(&WATCHDOG_LED_BLUE);
 3768              	 .loc 6 532 0
 3769 0008 094B     	 ldr r3,.L168
 3770 000a 181C     	 mov r0,r3
 3771 000c FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 533:../main.c     **** 
 534:../main.c     **** 	CAN_RX_Inverter_count++;
 3772              	 .loc 6 534 0
 3773 0010 084B     	 ldr r3,.L168+4
 3774 0012 1B78     	 ldrb r3,[r3]
 3775 0014 DBB2     	 uxtb r3,r3
 3776 0016 0133     	 add r3,r3,#1
 3777 0018 DAB2     	 uxtb r2,r3
 3778 001a 064B     	 ldr r3,.L168+4
 3779 001c 1A70     	 strb r2,[r3]
 535:../main.c     **** 	if(CAN_RX_Inverter_count == 4) CAN_RX_Inverter_Read_Data(); // read data after all for have revice
 3780              	 .loc 6 535 0
 3781 001e 054B     	 ldr r3,.L168+4
 3782 0020 1B78     	 ldrb r3,[r3]
 3783 0022 DBB2     	 uxtb r3,r3
 3784 0024 042B     	 cmp r3,#4
 3785 0026 01D1     	 bne .L166
 3786              	 .loc 6 535 0 is_stmt 0 discriminator 1
 3787 0028 FFF7FEFF 	 bl CAN_RX_Inverter_Read_Data
 3788              	.L166:
 536:../main.c     **** }
 3789              	 .loc 6 536 0 is_stmt 1
 3790 002c BD46     	 mov sp,r7
 3791              	 
 3792 002e 80BD     	 pop {r7,pc}
 3793              	.L169:
 3794              	 .align 2
 3795              	.L168:
 3796 0030 00000000 	 .word WATCHDOG_LED_BLUE
 3797 0034 00000000 	 .word CAN_RX_Inverter_count
 3798              	 .cfi_endproc
 3799              	.LFE230:
 3801              	 .section .text.CAN_RX_Inverter_Read_Data,"ax",%progbits
 3802              	 .align 2
 3803              	 .global CAN_RX_Inverter_Read_Data
 3804              	 .code 16
 3805              	 .thumb_func
 3807              	CAN_RX_Inverter_Read_Data:
 3808              	.LFB231:
 537:../main.c     **** 
 538:../main.c     **** void CAN_RX_Inverter_Read_Data(){
 3809              	 .loc 6 538 0
 3810              	 .cfi_startproc
 3811 0000 90B5     	 push {r4,r7,lr}
 3812              	.LCFI50:
 3813              	 .cfi_def_cfa_offset 12
 3814              	 .cfi_offset 4,-12
 3815              	 .cfi_offset 7,-8
 3816              	 .cfi_offset 14,-4
 3817 0002 89B0     	 sub sp,sp,#36
 3818              	.LCFI51:
 3819              	 .cfi_def_cfa_offset 48
 3820 0004 00AF     	 add r7,sp,#0
 3821              	.LCFI52:
 3822              	 .cfi_def_cfa_register 7
 539:../main.c     **** 	uint8_t Motor_on_rover;
 540:../main.c     **** 	for(Motor_on_rover = 0; Motor_on_rover < 4; Motor_on_rover ++){
 3823              	 .loc 6 540 0
 3824 0006 1F23     	 mov r3,#31
 3825 0008 FB18     	 add r3,r7,r3
 3826 000a 0022     	 mov r2,#0
 3827 000c 1A70     	 strb r2,[r3]
 3828 000e 03E1     	 b .L171
 3829              	.L181:
 3830              	.LBB2:
 541:../main.c     **** 		XMC_CAN_MO_t* lmsgobjct_ptr_1 = CAN_NODE_0.lmobj_ptr[Motor_on_rover + 2]->mo_ptr;
 3831              	 .loc 6 541 0
 3832 0010 1F23     	 mov r3,#31
 3833 0012 FB18     	 add r3,r7,r3
 3834 0014 1B78     	 ldrb r3,[r3]
 3835 0016 0233     	 add r3,r3,#2
 3836 0018 944A     	 ldr r2,.L182
 3837 001a 0233     	 add r3,r3,#2
 3838 001c 9B00     	 lsl r3,r3,#2
 3839 001e D318     	 add r3,r2,r3
 3840 0020 5B68     	 ldr r3,[r3,#4]
 3841 0022 1B68     	 ldr r3,[r3]
 3842 0024 BB61     	 str r3,[r7,#24]
 542:../main.c     **** 		CAN_NODE_MO_Receive((void*) CAN_NODE_0.lmobj_ptr[Motor_on_rover + 2]);
 3843              	 .loc 6 542 0
 3844 0026 1F23     	 mov r3,#31
 3845 0028 FB18     	 add r3,r7,r3
 3846 002a 1B78     	 ldrb r3,[r3]
 3847 002c 0233     	 add r3,r3,#2
 3848 002e 8F4A     	 ldr r2,.L182
 3849 0030 0233     	 add r3,r3,#2
 3850 0032 9B00     	 lsl r3,r3,#2
 3851 0034 D318     	 add r3,r2,r3
 3852 0036 5B68     	 ldr r3,[r3,#4]
 3853 0038 181C     	 mov r0,r3
 3854 003a FFF7FEFF 	 bl CAN_NODE_MO_Receive
 543:../main.c     **** 
 544:../main.c     **** 		uint8_t data_RX[8];
 545:../main.c     **** 		uint8_t i;
 546:../main.c     **** 		for(i = 0 ; i < 8 ; i ++){
 3855              	 .loc 6 546 0
 3856 003e 1E23     	 mov r3,#30
 3857 0040 FB18     	 add r3,r7,r3
 3858 0042 0022     	 mov r2,#0
 3859 0044 1A70     	 strb r2,[r3]
 3860 0046 12E0     	 b .L172
 3861              	.L173:
 547:../main.c     **** 			 data_RX[i] = lmsgobjct_ptr_1->can_data_byte[i];
 3862              	 .loc 6 547 0 discriminator 3
 3863 0048 1E23     	 mov r3,#30
 3864 004a FB18     	 add r3,r7,r3
 3865 004c 1B78     	 ldrb r3,[r3]
 3866 004e 1E22     	 mov r2,#30
 3867 0050 BA18     	 add r2,r7,r2
 3868 0052 1278     	 ldrb r2,[r2]
 3869 0054 B969     	 ldr r1,[r7,#24]
 3870 0056 8A18     	 add r2,r1,r2
 3871 0058 117C     	 ldrb r1,[r2,#16]
 3872 005a 0C22     	 mov r2,#12
 3873 005c BA18     	 add r2,r7,r2
 3874 005e D154     	 strb r1,[r2,r3]
 546:../main.c     **** 			 data_RX[i] = lmsgobjct_ptr_1->can_data_byte[i];
 3875              	 .loc 6 546 0 discriminator 3
 3876 0060 1E23     	 mov r3,#30
 3877 0062 FB18     	 add r3,r7,r3
 3878 0064 1A78     	 ldrb r2,[r3]
 3879 0066 1E23     	 mov r3,#30
 3880 0068 FB18     	 add r3,r7,r3
 3881 006a 0132     	 add r2,r2,#1
 3882 006c 1A70     	 strb r2,[r3]
 3883              	.L172:
 546:../main.c     **** 			 data_RX[i] = lmsgobjct_ptr_1->can_data_byte[i];
 3884              	 .loc 6 546 0 is_stmt 0 discriminator 1
 3885 006e 1E23     	 mov r3,#30
 3886 0070 FB18     	 add r3,r7,r3
 3887 0072 1B78     	 ldrb r3,[r3]
 3888 0074 072B     	 cmp r3,#7
 3889 0076 E7D9     	 bls .L173
 548:../main.c     **** 		}
 549:../main.c     **** 
 550:../main.c     **** 		uint8_t Motor_on_rover_RX = (data_RX[0 * 2 + 1] << 8) | data_RX[0 * 2];
 3890              	 .loc 6 550 0 is_stmt 1
 3891 0078 0C23     	 mov r3,#12
 3892 007a FB18     	 add r3,r7,r3
 3893 007c 5B78     	 ldrb r3,[r3,#1]
 3894 007e 1B02     	 lsl r3,r3,#8
 3895 0080 DAB2     	 uxtb r2,r3
 3896 0082 0C23     	 mov r3,#12
 3897 0084 FB18     	 add r3,r7,r3
 3898 0086 1B78     	 ldrb r3,[r3]
 3899 0088 DBB2     	 uxtb r3,r3
 3900 008a 1343     	 orr r3,r2
 3901 008c DAB2     	 uxtb r2,r3
 3902 008e 1723     	 mov r3,#23
 3903 0090 FB18     	 add r3,r7,r3
 3904 0092 1A70     	 strb r2,[r3]
 551:../main.c     **** 		if(Motor_on_rover_RX == Motor_on_rover){
 3905              	 .loc 6 551 0
 3906 0094 1723     	 mov r3,#23
 3907 0096 FA18     	 add r2,r7,r3
 3908 0098 1F23     	 mov r3,#31
 3909 009a FB18     	 add r3,r7,r3
 3910 009c 1278     	 ldrb r2,[r2]
 3911 009e 1B78     	 ldrb r3,[r3]
 3912 00a0 9A42     	 cmp r2,r3
 3913 00a2 00D0     	 beq .LCB3098
 3914 00a4 ADE0     	 b .L174
 3915              	.LCB3098:
 3916              	.LBB3:
 552:../main.c     **** 			DIGITAL_IO_SetOutputLow(&LED_CAN_ERROR);
 3917              	 .loc 6 552 0
 3918 00a6 724B     	 ldr r3,.L182+4
 3919 00a8 181C     	 mov r0,r3
 3920 00aa FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 553:../main.c     **** 
 554:../main.c     **** 			uint8_t i;
 555:../main.c     **** 			int16_t values_int16[3] = {0};
 3921              	 .loc 6 555 0
 3922 00ae 3B1D     	 add r3,r7,#4
 3923 00b0 0022     	 mov r2,#0
 3924 00b2 1A60     	 str r2,[r3]
 3925 00b4 0022     	 mov r2,#0
 3926 00b6 9A80     	 strh r2,[r3,#4]
 556:../main.c     **** 			for(i = 1 ; i < 4 ; i ++){
 3927              	 .loc 6 556 0
 3928 00b8 1D23     	 mov r3,#29
 3929 00ba FB18     	 add r3,r7,r3
 3930 00bc 0122     	 mov r2,#1
 3931 00be 1A70     	 strb r2,[r3]
 3932 00c0 6BE0     	 b .L175
 3933              	.L179:
 557:../main.c     **** 				 if(i == 1) values_int16[i - 1] = (data_RX[i * 2 + 1] << 8) | data_RX[i * 2];
 3934              	 .loc 6 557 0
 3935 00c2 1D23     	 mov r3,#29
 3936 00c4 FB18     	 add r3,r7,r3
 3937 00c6 1B78     	 ldrb r3,[r3]
 3938 00c8 012B     	 cmp r3,#1
 3939 00ca 1CD1     	 bne .L176
 3940              	 .loc 6 557 0 is_stmt 0 discriminator 1
 3941 00cc 1D23     	 mov r3,#29
 3942 00ce FB18     	 add r3,r7,r3
 3943 00d0 1B78     	 ldrb r3,[r3]
 3944 00d2 5A1E     	 sub r2,r3,#1
 3945 00d4 1D23     	 mov r3,#29
 3946 00d6 FB18     	 add r3,r7,r3
 3947 00d8 1B78     	 ldrb r3,[r3]
 3948 00da 5B00     	 lsl r3,r3,#1
 3949 00dc 0133     	 add r3,r3,#1
 3950 00de 0C21     	 mov r1,#12
 3951 00e0 7918     	 add r1,r7,r1
 3952 00e2 CB5C     	 ldrb r3,[r1,r3]
 3953 00e4 1B02     	 lsl r3,r3,#8
 3954 00e6 98B2     	 uxth r0,r3
 3955 00e8 1D23     	 mov r3,#29
 3956 00ea FB18     	 add r3,r7,r3
 3957 00ec 1B78     	 ldrb r3,[r3]
 3958 00ee 5B00     	 lsl r3,r3,#1
 3959 00f0 0C21     	 mov r1,#12
 3960 00f2 7918     	 add r1,r7,r1
 3961 00f4 CB5C     	 ldrb r3,[r1,r3]
 3962 00f6 9BB2     	 uxth r3,r3
 3963 00f8 011C     	 add r1,r0,#0
 3964 00fa 0B43     	 orr r3,r1
 3965 00fc 99B2     	 uxth r1,r3
 3966 00fe 3B1D     	 add r3,r7,#4
 3967 0100 5200     	 lsl r2,r2,#1
 3968 0102 D152     	 strh r1,[r2,r3]
 3969 0104 42E0     	 b .L177
 3970              	.L176:
 558:../main.c     **** 				 else if(i == 2) values_int16[i - 1] = (data_RX[i * 2 + 1] << 8) | data_RX[i * 2];
 3971              	 .loc 6 558 0 is_stmt 1
 3972 0106 1D23     	 mov r3,#29
 3973 0108 FB18     	 add r3,r7,r3
 3974 010a 1B78     	 ldrb r3,[r3]
 3975 010c 022B     	 cmp r3,#2
 3976 010e 1CD1     	 bne .L178
 3977              	 .loc 6 558 0 is_stmt 0 discriminator 1
 3978 0110 1D23     	 mov r3,#29
 3979 0112 FB18     	 add r3,r7,r3
 3980 0114 1B78     	 ldrb r3,[r3]
 3981 0116 5A1E     	 sub r2,r3,#1
 3982 0118 1D23     	 mov r3,#29
 3983 011a FB18     	 add r3,r7,r3
 3984 011c 1B78     	 ldrb r3,[r3]
 3985 011e 5B00     	 lsl r3,r3,#1
 3986 0120 0133     	 add r3,r3,#1
 3987 0122 0C21     	 mov r1,#12
 3988 0124 7918     	 add r1,r7,r1
 3989 0126 CB5C     	 ldrb r3,[r1,r3]
 3990 0128 1B02     	 lsl r3,r3,#8
 3991 012a 98B2     	 uxth r0,r3
 3992 012c 1D23     	 mov r3,#29
 3993 012e FB18     	 add r3,r7,r3
 3994 0130 1B78     	 ldrb r3,[r3]
 3995 0132 5B00     	 lsl r3,r3,#1
 3996 0134 0C21     	 mov r1,#12
 3997 0136 7918     	 add r1,r7,r1
 3998 0138 CB5C     	 ldrb r3,[r1,r3]
 3999 013a 9BB2     	 uxth r3,r3
 4000 013c 011C     	 add r1,r0,#0
 4001 013e 0B43     	 orr r3,r1
 4002 0140 99B2     	 uxth r1,r3
 4003 0142 3B1D     	 add r3,r7,#4
 4004 0144 5200     	 lsl r2,r2,#1
 4005 0146 D152     	 strh r1,[r2,r3]
 4006 0148 20E0     	 b .L177
 4007              	.L178:
 559:../main.c     **** 				 else if(i == 3) values_int16[i - 1] = (data_RX[i * 2 + 1] << 8) | data_RX[i * 2];
 4008              	 .loc 6 559 0 is_stmt 1
 4009 014a 1D23     	 mov r3,#29
 4010 014c FB18     	 add r3,r7,r3
 4011 014e 1B78     	 ldrb r3,[r3]
 4012 0150 032B     	 cmp r3,#3
 4013 0152 1BD1     	 bne .L177
 4014              	 .loc 6 559 0 is_stmt 0 discriminator 1
 4015 0154 1D23     	 mov r3,#29
 4016 0156 FB18     	 add r3,r7,r3
 4017 0158 1B78     	 ldrb r3,[r3]
 4018 015a 5A1E     	 sub r2,r3,#1
 4019 015c 1D23     	 mov r3,#29
 4020 015e FB18     	 add r3,r7,r3
 4021 0160 1B78     	 ldrb r3,[r3]
 4022 0162 5B00     	 lsl r3,r3,#1
 4023 0164 0133     	 add r3,r3,#1
 4024 0166 0C21     	 mov r1,#12
 4025 0168 7918     	 add r1,r7,r1
 4026 016a CB5C     	 ldrb r3,[r1,r3]
 4027 016c 1B02     	 lsl r3,r3,#8
 4028 016e 98B2     	 uxth r0,r3
 4029 0170 1D23     	 mov r3,#29
 4030 0172 FB18     	 add r3,r7,r3
 4031 0174 1B78     	 ldrb r3,[r3]
 4032 0176 5B00     	 lsl r3,r3,#1
 4033 0178 0C21     	 mov r1,#12
 4034 017a 7918     	 add r1,r7,r1
 4035 017c CB5C     	 ldrb r3,[r1,r3]
 4036 017e 9BB2     	 uxth r3,r3
 4037 0180 011C     	 add r1,r0,#0
 4038 0182 0B43     	 orr r3,r1
 4039 0184 99B2     	 uxth r1,r3
 4040 0186 3B1D     	 add r3,r7,#4
 4041 0188 5200     	 lsl r2,r2,#1
 4042 018a D152     	 strh r1,[r2,r3]
 4043              	.L177:
 556:../main.c     **** 				 if(i == 1) values_int16[i - 1] = (data_RX[i * 2 + 1] << 8) | data_RX[i * 2];
 4044              	 .loc 6 556 0 is_stmt 1 discriminator 2
 4045 018c 1D23     	 mov r3,#29
 4046 018e FB18     	 add r3,r7,r3
 4047 0190 1A78     	 ldrb r2,[r3]
 4048 0192 1D23     	 mov r3,#29
 4049 0194 FB18     	 add r3,r7,r3
 4050 0196 0132     	 add r2,r2,#1
 4051 0198 1A70     	 strb r2,[r3]
 4052              	.L175:
 556:../main.c     **** 				 if(i == 1) values_int16[i - 1] = (data_RX[i * 2 + 1] << 8) | data_RX[i * 2];
 4053              	 .loc 6 556 0 is_stmt 0 discriminator 1
 4054 019a 1D23     	 mov r3,#29
 4055 019c FB18     	 add r3,r7,r3
 4056 019e 1B78     	 ldrb r3,[r3]
 4057 01a0 032B     	 cmp r3,#3
 4058 01a2 8ED9     	 bls .L179
 560:../main.c     **** 			 }
 561:../main.c     **** 
 562:../main.c     **** 			Inveter_CAN_OK[Motor_on_rover] = values_int16[0];
 4059              	 .loc 6 562 0 is_stmt 1
 4060 01a4 1F23     	 mov r3,#31
 4061 01a6 FB18     	 add r3,r7,r3
 4062 01a8 1B78     	 ldrb r3,[r3]
 4063 01aa 3A1D     	 add r2,r7,#4
 4064 01ac 1288     	 ldrh r2,[r2]
 4065 01ae D1B2     	 uxtb r1,r2
 4066 01b0 304A     	 ldr r2,.L182+8
 4067 01b2 D154     	 strb r1,[r2,r3]
 563:../main.c     **** 			Actual_Speeds[Motor_on_rover] = (float)values_int16[1] / 1000;
 4068              	 .loc 6 563 0
 4069 01b4 1F23     	 mov r3,#31
 4070 01b6 FB18     	 add r3,r7,r3
 4071 01b8 1C78     	 ldrb r4,[r3]
 4072 01ba 3B1D     	 add r3,r7,#4
 4073 01bc 5B88     	 ldrh r3,[r3,#2]
 4074 01be 1BB2     	 sxth r3,r3
 4075 01c0 181C     	 mov r0,r3
 4076 01c2 FFF7FEFF 	 bl __aeabi_i2f
 4077 01c6 031C     	 add r3,r0,#0
 4078 01c8 181C     	 add r0,r3,#0
 4079 01ca 2B49     	 ldr r1,.L182+12
 4080 01cc FFF7FEFF 	 bl __aeabi_fdiv
 4081 01d0 031C     	 add r3,r0,#0
 4082 01d2 191C     	 add r1,r3,#0
 4083 01d4 294B     	 ldr r3,.L182+16
 4084 01d6 A200     	 lsl r2,r4,#2
 4085 01d8 D150     	 str r1,[r2,r3]
 564:../main.c     **** 			Actual_Distance[Motor_on_rover] = (float)values_int16[2] / 1000;
 4086              	 .loc 6 564 0
 4087 01da 1F23     	 mov r3,#31
 4088 01dc FB18     	 add r3,r7,r3
 4089 01de 1C78     	 ldrb r4,[r3]
 4090 01e0 3B1D     	 add r3,r7,#4
 4091 01e2 9B88     	 ldrh r3,[r3,#4]
 4092 01e4 1BB2     	 sxth r3,r3
 4093 01e6 181C     	 mov r0,r3
 4094 01e8 FFF7FEFF 	 bl __aeabi_i2f
 4095 01ec 031C     	 add r3,r0,#0
 4096 01ee 181C     	 add r0,r3,#0
 4097 01f0 2149     	 ldr r1,.L182+12
 4098 01f2 FFF7FEFF 	 bl __aeabi_fdiv
 4099 01f6 031C     	 add r3,r0,#0
 4100 01f8 191C     	 add r1,r3,#0
 4101 01fa 214B     	 ldr r3,.L182+20
 4102 01fc A200     	 lsl r2,r4,#2
 4103 01fe D150     	 str r1,[r2,r3]
 4104              	.LBE3:
 4105 0200 03E0     	 b .L180
 4106              	.L174:
 565:../main.c     **** 
 566:../main.c     **** 
 567:../main.c     **** 			}
 568:../main.c     **** 		else DIGITAL_IO_SetOutputHigh(&LED_CAN_ERROR);
 4107              	 .loc 6 568 0
 4108 0202 1B4B     	 ldr r3,.L182+4
 4109 0204 181C     	 mov r0,r3
 4110 0206 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 4111              	.L180:
 4112              	.LBE2:
 540:../main.c     **** 		XMC_CAN_MO_t* lmsgobjct_ptr_1 = CAN_NODE_0.lmobj_ptr[Motor_on_rover + 2]->mo_ptr;
 4113              	 .loc 6 540 0 discriminator 1
 4114 020a 1F23     	 mov r3,#31
 4115 020c FB18     	 add r3,r7,r3
 4116 020e 1A78     	 ldrb r2,[r3]
 4117 0210 1F23     	 mov r3,#31
 4118 0212 FB18     	 add r3,r7,r3
 4119 0214 0132     	 add r2,r2,#1
 4120 0216 1A70     	 strb r2,[r3]
 4121              	.L171:
 540:../main.c     **** 		XMC_CAN_MO_t* lmsgobjct_ptr_1 = CAN_NODE_0.lmobj_ptr[Motor_on_rover + 2]->mo_ptr;
 4122              	 .loc 6 540 0 is_stmt 0 discriminator 2
 4123 0218 1F23     	 mov r3,#31
 4124 021a FB18     	 add r3,r7,r3
 4125 021c 1B78     	 ldrb r3,[r3]
 4126 021e 032B     	 cmp r3,#3
 4127 0220 00D8     	 bhi .LCB3305
 4128 0222 F5E6     	 b .L181
 4129              	.LCB3305:
 569:../main.c     **** 	}
 570:../main.c     **** 
 571:../main.c     **** 	speed_fl_act = Actual_Speeds[0];
 4130              	 .loc 6 571 0 is_stmt 1
 4131 0224 154B     	 ldr r3,.L182+16
 4132 0226 1A68     	 ldr r2,[r3]
 4133 0228 164B     	 ldr r3,.L182+24
 4134 022a 1A60     	 str r2,[r3]
 572:../main.c     **** 	speed_fr_act = Actual_Speeds[1];
 4135              	 .loc 6 572 0
 4136 022c 134B     	 ldr r3,.L182+16
 4137 022e 5A68     	 ldr r2,[r3,#4]
 4138 0230 154B     	 ldr r3,.L182+28
 4139 0232 1A60     	 str r2,[r3]
 573:../main.c     **** 	speed_rl_act = Actual_Speeds[2];
 4140              	 .loc 6 573 0
 4141 0234 114B     	 ldr r3,.L182+16
 4142 0236 9A68     	 ldr r2,[r3,#8]
 4143 0238 144B     	 ldr r3,.L182+32
 4144 023a 1A60     	 str r2,[r3]
 574:../main.c     **** 	speed_rr_act = Actual_Speeds[3];
 4145              	 .loc 6 574 0
 4146 023c 0F4B     	 ldr r3,.L182+16
 4147 023e DA68     	 ldr r2,[r3,#12]
 4148 0240 134B     	 ldr r3,.L182+36
 4149 0242 1A60     	 str r2,[r3]
 575:../main.c     **** 
 576:../main.c     **** 	distance_fl_act = Actual_Distance[0];
 4150              	 .loc 6 576 0
 4151 0244 0E4B     	 ldr r3,.L182+20
 4152 0246 1A68     	 ldr r2,[r3]
 4153 0248 124B     	 ldr r3,.L182+40
 4154 024a 1A60     	 str r2,[r3]
 577:../main.c     **** 	distance_fr_act = Actual_Distance[1];
 4155              	 .loc 6 577 0
 4156 024c 0C4B     	 ldr r3,.L182+20
 4157 024e 5A68     	 ldr r2,[r3,#4]
 4158 0250 114B     	 ldr r3,.L182+44
 4159 0252 1A60     	 str r2,[r3]
 578:../main.c     **** 	distance_rl_act = Actual_Distance[2];
 4160              	 .loc 6 578 0
 4161 0254 0A4B     	 ldr r3,.L182+20
 4162 0256 9A68     	 ldr r2,[r3,#8]
 4163 0258 104B     	 ldr r3,.L182+48
 4164 025a 1A60     	 str r2,[r3]
 579:../main.c     **** 	distance_rr_act = Actual_Distance[3];
 4165              	 .loc 6 579 0
 4166 025c 084B     	 ldr r3,.L182+20
 4167 025e DA68     	 ldr r2,[r3,#12]
 4168 0260 0F4B     	 ldr r3,.L182+52
 4169 0262 1A60     	 str r2,[r3]
 580:../main.c     **** 
 581:../main.c     **** }
 4170              	 .loc 6 581 0
 4171 0264 BD46     	 mov sp,r7
 4172 0266 09B0     	 add sp,sp,#36
 4173              	 
 4174 0268 90BD     	 pop {r4,r7,pc}
 4175              	.L183:
 4176 026a C046     	 .align 2
 4177              	.L182:
 4178 026c 00000000 	 .word CAN_NODE_0
 4179 0270 00000000 	 .word LED_CAN_ERROR
 4180 0274 00000000 	 .word Inveter_CAN_OK
 4181 0278 00007A44 	 .word 1148846080
 4182 027c 00000000 	 .word Actual_Speeds
 4183 0280 00000000 	 .word Actual_Distance
 4184 0284 00000000 	 .word speed_fl_act
 4185 0288 00000000 	 .word speed_fr_act
 4186 028c 00000000 	 .word speed_rl_act
 4187 0290 00000000 	 .word speed_rr_act
 4188 0294 00000000 	 .word distance_fl_act
 4189 0298 00000000 	 .word distance_fr_act
 4190 029c 00000000 	 .word distance_rl_act
 4191 02a0 00000000 	 .word distance_rr_act
 4192              	 .cfi_endproc
 4193              	.LFE231:
 4195              	 .section .text.Watchdog_Handler,"ax",%progbits
 4196              	 .align 2
 4197              	 .global Watchdog_Handler
 4198              	 .code 16
 4199              	 .thumb_func
 4201              	Watchdog_Handler:
 4202              	.LFB232:
 582:../main.c     **** 
 583:../main.c     **** void Watchdog_Handler(void) // to do restates if can is not working a problem wenn power from the b
 584:../main.c     **** {
 4203              	 .loc 6 584 0
 4204              	 .cfi_startproc
 4205 0000 80B5     	 push {r7,lr}
 4206              	.LCFI53:
 4207              	 .cfi_def_cfa_offset 8
 4208              	 .cfi_offset 7,-8
 4209              	 .cfi_offset 14,-4
 4210 0002 00AF     	 add r7,sp,#0
 4211              	.LCFI54:
 4212              	 .cfi_def_cfa_register 7
 585:../main.c     ****   WATCHDOG_ClearAlarm(); /* Clear the alarm event */
 4213              	 .loc 6 585 0
 4214 0004 FFF7FEFF 	 bl WATCHDOG_ClearAlarm
 586:../main.c     ****   DIGITAL_IO_SetOutputHigh(&WATCHDOG_LED_BLUE);
 4215              	 .loc 6 586 0
 4216 0008 024B     	 ldr r3,.L185
 4217 000a 181C     	 mov r0,r3
 4218 000c FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 587:../main.c     **** }
 4219              	 .loc 6 587 0
 4220 0010 BD46     	 mov sp,r7
 4221              	 
 4222 0012 80BD     	 pop {r7,pc}
 4223              	.L186:
 4224              	 .align 2
 4225              	.L185:
 4226 0014 00000000 	 .word WATCHDOG_LED_BLUE
 4227              	 .cfi_endproc
 4228              	.LFE232:
 4230              	 .section .text.CAN_reset_distance,"ax",%progbits
 4231              	 .align 2
 4232              	 .global CAN_reset_distance
 4233              	 .code 16
 4234              	 .thumb_func
 4236              	CAN_reset_distance:
 4237              	.LFB233:
 588:../main.c     **** 
 589:../main.c     **** void CAN_reset_distance(uint8_t distance_to_reset[4]){
 4238              	 .loc 6 589 0
 4239              	 .cfi_startproc
 4240 0000 80B5     	 push {r7,lr}
 4241              	.LCFI55:
 4242              	 .cfi_def_cfa_offset 8
 4243              	 .cfi_offset 7,-8
 4244              	 .cfi_offset 14,-4
 4245 0002 86B0     	 sub sp,sp,#24
 4246              	.LCFI56:
 4247              	 .cfi_def_cfa_offset 32
 4248 0004 00AF     	 add r7,sp,#0
 4249              	.LCFI57:
 4250              	 .cfi_def_cfa_register 7
 4251 0006 7860     	 str r0,[r7,#4]
 590:../main.c     **** 	uint8_t TX[8] ={0};
 4252              	 .loc 6 590 0
 4253 0008 0C23     	 mov r3,#12
 4254 000a FB18     	 add r3,r7,r3
 4255 000c 0022     	 mov r2,#0
 4256 000e 1A60     	 str r2,[r3]
 4257 0010 0022     	 mov r2,#0
 4258 0012 5A60     	 str r2,[r3,#4]
 591:../main.c     **** 	uint8_t i;
 592:../main.c     **** 	for(i = 0; i < 4; i++){	TX[i] = distance_to_reset[i];}
 4259              	 .loc 6 592 0
 4260 0014 1723     	 mov r3,#23
 4261 0016 FB18     	 add r3,r7,r3
 4262 0018 0022     	 mov r2,#0
 4263 001a 1A70     	 strb r2,[r3]
 4264 001c 12E0     	 b .L188
 4265              	.L189:
 4266              	 .loc 6 592 0 is_stmt 0 discriminator 3
 4267 001e 1723     	 mov r3,#23
 4268 0020 FB18     	 add r3,r7,r3
 4269 0022 1B78     	 ldrb r3,[r3]
 4270 0024 1722     	 mov r2,#23
 4271 0026 BA18     	 add r2,r7,r2
 4272 0028 1278     	 ldrb r2,[r2]
 4273 002a 7968     	 ldr r1,[r7,#4]
 4274 002c 8A18     	 add r2,r1,r2
 4275 002e 1178     	 ldrb r1,[r2]
 4276 0030 0C22     	 mov r2,#12
 4277 0032 BA18     	 add r2,r7,r2
 4278 0034 D154     	 strb r1,[r2,r3]
 4279 0036 1723     	 mov r3,#23
 4280 0038 FB18     	 add r3,r7,r3
 4281 003a 1A78     	 ldrb r2,[r3]
 4282 003c 1723     	 mov r3,#23
 4283 003e FB18     	 add r3,r7,r3
 4284 0040 0132     	 add r2,r2,#1
 4285 0042 1A70     	 strb r2,[r3]
 4286              	.L188:
 4287              	 .loc 6 592 0 discriminator 1
 4288 0044 1723     	 mov r3,#23
 4289 0046 FB18     	 add r3,r7,r3
 4290 0048 1B78     	 ldrb r3,[r3]
 4291 004a 032B     	 cmp r3,#3
 4292 004c E7D9     	 bls .L189
 593:../main.c     **** 
 594:../main.c     **** 	CAN_NODE_MO_UpdateData((void*) CAN_NODE_0.lmobj_ptr[1], (uint8_t*)TX);
 4293              	 .loc 6 594 0 is_stmt 1
 4294 004e 084B     	 ldr r3,.L190
 4295 0050 1A69     	 ldr r2,[r3,#16]
 4296 0052 0C23     	 mov r3,#12
 4297 0054 FB18     	 add r3,r7,r3
 4298 0056 101C     	 mov r0,r2
 4299 0058 191C     	 mov r1,r3
 4300 005a FFF7FEFF 	 bl CAN_NODE_MO_UpdateData
 595:../main.c     **** 	CAN_NODE_MO_Transmit((void*) CAN_NODE_0.lmobj_ptr[1]); //Transmit the data of message object1
 4301              	 .loc 6 595 0
 4302 005e 044B     	 ldr r3,.L190
 4303 0060 1B69     	 ldr r3,[r3,#16]
 4304 0062 181C     	 mov r0,r3
 4305 0064 FFF7FEFF 	 bl CAN_NODE_MO_Transmit
 596:../main.c     **** }
 4306              	 .loc 6 596 0
 4307 0068 BD46     	 mov sp,r7
 4308 006a 06B0     	 add sp,sp,#24
 4309              	 
 4310 006c 80BD     	 pop {r7,pc}
 4311              	.L191:
 4312 006e C046     	 .align 2
 4313              	.L190:
 4314 0070 00000000 	 .word CAN_NODE_0
 4315              	 .cfi_endproc
 4316              	.LFE233:
 4318              	 .global __aeabi_f2iz
 4319              	 .section .text.CAN_send_Speeds,"ax",%progbits
 4320              	 .align 2
 4321              	 .global CAN_send_Speeds
 4322              	 .code 16
 4323              	 .thumb_func
 4325              	CAN_send_Speeds:
 4326              	.LFB234:
 597:../main.c     **** 
 598:../main.c     **** void CAN_send_Speeds(float Speed_data[4]){
 4327              	 .loc 6 598 0
 4328              	 .cfi_startproc
 4329 0000 80B5     	 push {r7,lr}
 4330              	.LCFI58:
 4331              	 .cfi_def_cfa_offset 8
 4332              	 .cfi_offset 7,-8
 4333              	 .cfi_offset 14,-4
 4334 0002 84B0     	 sub sp,sp,#16
 4335              	.LCFI59:
 4336              	 .cfi_def_cfa_offset 24
 4337 0004 00AF     	 add r7,sp,#0
 4338              	.LCFI60:
 4339              	 .cfi_def_cfa_register 7
 4340 0006 7860     	 str r0,[r7,#4]
 599:../main.c     **** 
 600:../main.c     **** 	int16_t Speeds_int16[4] ={Speed_data[0] *1000, Speed_data[1] *1000, Speed_data[2] *1000, Speed_dat
 4341              	 .loc 6 600 0
 4342 0008 7B68     	 ldr r3,[r7,#4]
 4343 000a 1B68     	 ldr r3,[r3]
 4344 000c 181C     	 add r0,r3,#0
 4345 000e 2649     	 ldr r1,.L193
 4346 0010 FFF7FEFF 	 bl __aeabi_fmul
 4347 0014 031C     	 add r3,r0,#0
 4348 0016 181C     	 add r0,r3,#0
 4349 0018 FFF7FEFF 	 bl __aeabi_f2iz
 4350 001c 031C     	 mov r3,r0
 4351 001e 9AB2     	 uxth r2,r3
 4352 0020 0823     	 mov r3,#8
 4353 0022 FB18     	 add r3,r7,r3
 4354 0024 1A80     	 strh r2,[r3]
 4355 0026 7B68     	 ldr r3,[r7,#4]
 4356 0028 0433     	 add r3,r3,#4
 4357 002a 1B68     	 ldr r3,[r3]
 4358 002c 181C     	 add r0,r3,#0
 4359 002e 1E49     	 ldr r1,.L193
 4360 0030 FFF7FEFF 	 bl __aeabi_fmul
 4361 0034 031C     	 add r3,r0,#0
 4362 0036 181C     	 add r0,r3,#0
 4363 0038 FFF7FEFF 	 bl __aeabi_f2iz
 4364 003c 031C     	 mov r3,r0
 4365 003e 9AB2     	 uxth r2,r3
 4366 0040 0823     	 mov r3,#8
 4367 0042 FB18     	 add r3,r7,r3
 4368 0044 5A80     	 strh r2,[r3,#2]
 4369 0046 7B68     	 ldr r3,[r7,#4]
 4370 0048 0833     	 add r3,r3,#8
 4371 004a 1B68     	 ldr r3,[r3]
 4372 004c 181C     	 add r0,r3,#0
 4373 004e 1649     	 ldr r1,.L193
 4374 0050 FFF7FEFF 	 bl __aeabi_fmul
 4375 0054 031C     	 add r3,r0,#0
 4376 0056 181C     	 add r0,r3,#0
 4377 0058 FFF7FEFF 	 bl __aeabi_f2iz
 4378 005c 031C     	 mov r3,r0
 4379 005e 9AB2     	 uxth r2,r3
 4380 0060 0823     	 mov r3,#8
 4381 0062 FB18     	 add r3,r7,r3
 4382 0064 9A80     	 strh r2,[r3,#4]
 4383 0066 7B68     	 ldr r3,[r7,#4]
 4384 0068 0C33     	 add r3,r3,#12
 4385 006a 1B68     	 ldr r3,[r3]
 4386 006c 181C     	 add r0,r3,#0
 4387 006e 0E49     	 ldr r1,.L193
 4388 0070 FFF7FEFF 	 bl __aeabi_fmul
 4389 0074 031C     	 add r3,r0,#0
 4390 0076 181C     	 add r0,r3,#0
 4391 0078 FFF7FEFF 	 bl __aeabi_f2iz
 4392 007c 031C     	 mov r3,r0
 4393 007e 9AB2     	 uxth r2,r3
 4394 0080 0823     	 mov r3,#8
 4395 0082 FB18     	 add r3,r7,r3
 4396 0084 DA80     	 strh r2,[r3,#6]
 601:../main.c     **** 
 602:../main.c     **** 	CAN_NODE_MO_UpdateData((void*) CAN_NODE_0.lmobj_ptr[0], (uint8_t*)Speeds_int16);
 4397              	 .loc 6 602 0
 4398 0086 094B     	 ldr r3,.L193+4
 4399 0088 DA68     	 ldr r2,[r3,#12]
 4400 008a 0823     	 mov r3,#8
 4401 008c FB18     	 add r3,r7,r3
 4402 008e 101C     	 mov r0,r2
 4403 0090 191C     	 mov r1,r3
 4404 0092 FFF7FEFF 	 bl CAN_NODE_MO_UpdateData
 603:../main.c     **** 	CAN_NODE_MO_Transmit((void*) CAN_NODE_0.lmobj_ptr[0]); //Transmit the data of message object1
 4405              	 .loc 6 603 0
 4406 0096 054B     	 ldr r3,.L193+4
 4407 0098 DB68     	 ldr r3,[r3,#12]
 4408 009a 181C     	 mov r0,r3
 4409 009c FFF7FEFF 	 bl CAN_NODE_MO_Transmit
 604:../main.c     **** 
 605:../main.c     **** }
 4410              	 .loc 6 605 0
 4411 00a0 BD46     	 mov sp,r7
 4412 00a2 04B0     	 add sp,sp,#16
 4413              	 
 4414 00a4 80BD     	 pop {r7,pc}
 4415              	.L194:
 4416 00a6 C046     	 .align 2
 4417              	.L193:
 4418 00a8 00007A44 	 .word 1148846080
 4419 00ac 00000000 	 .word CAN_NODE_0
 4420              	 .cfi_endproc
 4421              	.LFE234:
 4423              	 .section .text.IRQ8_Handler,"ax",%progbits
 4424              	 .align 2
 4425              	 .global IRQ8_Handler
 4426              	 .code 16
 4427              	 .thumb_func
 4429              	IRQ8_Handler:
 4430              	.LFB235:
 606:../main.c     **** 
 607:../main.c     **** void INTERRUPT_TIMER_10us_ISR(void){ // every 1ms so 10kHz
 4431              	 .loc 6 607 0
 4432              	 .cfi_startproc
 4433 0000 80B5     	 push {r7,lr}
 4434              	.LCFI61:
 4435              	 .cfi_def_cfa_offset 8
 4436              	 .cfi_offset 7,-8
 4437              	 .cfi_offset 14,-4
 4438 0002 00AF     	 add r7,sp,#0
 4439              	.LCFI62:
 4440              	 .cfi_def_cfa_register 7
 608:../main.c     **** 	if(RC_Gear_state == 1)RC_gear_100us_counter ++;
 4441              	 .loc 6 608 0
 4442 0004 0A4B     	 ldr r3,.L198
 4443 0006 1B78     	 ldrb r3,[r3]
 4444 0008 DBB2     	 uxtb r3,r3
 4445 000a 012B     	 cmp r3,#1
 4446 000c 04D1     	 bne .L196
 4447              	 .loc 6 608 0 is_stmt 0 discriminator 1
 4448 000e 094B     	 ldr r3,.L198+4
 4449 0010 1B68     	 ldr r3,[r3]
 4450 0012 5A1C     	 add r2,r3,#1
 4451 0014 074B     	 ldr r3,.L198+4
 4452 0016 1A60     	 str r2,[r3]
 4453              	.L196:
 609:../main.c     **** 	if(RC_AUX1_state == 1)RC_AUX1_100us_counter ++;
 4454              	 .loc 6 609 0 is_stmt 1
 4455 0018 074B     	 ldr r3,.L198+8
 4456 001a 1B78     	 ldrb r3,[r3]
 4457 001c DBB2     	 uxtb r3,r3
 4458 001e 012B     	 cmp r3,#1
 4459 0020 04D1     	 bne .L195
 4460              	 .loc 6 609 0 is_stmt 0 discriminator 1
 4461 0022 064B     	 ldr r3,.L198+12
 4462 0024 1B68     	 ldr r3,[r3]
 4463 0026 5A1C     	 add r2,r3,#1
 4464 0028 044B     	 ldr r3,.L198+12
 4465 002a 1A60     	 str r2,[r3]
 4466              	.L195:
 610:../main.c     **** }
 4467              	 .loc 6 610 0 is_stmt 1
 4468 002c BD46     	 mov sp,r7
 4469              	 
 4470 002e 80BD     	 pop {r7,pc}
 4471              	.L199:
 4472              	 .align 2
 4473              	.L198:
 4474 0030 00000000 	 .word RC_Gear_state
 4475 0034 00000000 	 .word RC_gear_100us_counter
 4476 0038 00000000 	 .word RC_AUX1_state
 4477 003c 00000000 	 .word RC_AUX1_100us_counter
 4478              	 .cfi_endproc
 4479              	.LFE235:
 4481              	 .global __aeabi_f2uiz
 4482              	 .section .text.Steering_set_Angles,"ax",%progbits
 4483              	 .align 2
 4484              	 .global Steering_set_Angles
 4485              	 .code 16
 4486              	 .thumb_func
 4488              	Steering_set_Angles:
 4489              	.LFB236:
 611:../main.c     **** 
 612:../main.c     **** void Steering_set_Angles(float Angles_data[4]){
 4490              	 .loc 6 612 0
 4491              	 .cfi_startproc
 4492 0000 90B5     	 push {r4,r7,lr}
 4493              	.LCFI63:
 4494              	 .cfi_def_cfa_offset 12
 4495              	 .cfi_offset 4,-12
 4496              	 .cfi_offset 7,-8
 4497              	 .cfi_offset 14,-4
 4498 0002 85B0     	 sub sp,sp,#20
 4499              	.LCFI64:
 4500              	 .cfi_def_cfa_offset 32
 4501 0004 00AF     	 add r7,sp,#0
 4502              	.LCFI65:
 4503              	 .cfi_def_cfa_register 7
 4504 0006 7860     	 str r0,[r7,#4]
 613:../main.c     **** 	float deg_PWM = 0.645; // deg to PWM singlan converstion factor
 4505              	 .loc 6 613 0
 4506 0008 3E4B     	 ldr r3,.L211
 4507 000a BB60     	 str r3,[r7,#8]
 614:../main.c     **** 
 615:../main.c     **** 	// calcuation of PWM for Angle on each wheel
 616:../main.c     **** 	int i;
 617:../main.c     **** 	for(i = 0 ; i < 4 ; i ++){
 4508              	 .loc 6 617 0
 4509 000c 0023     	 mov r3,#0
 4510 000e FB60     	 str r3,[r7,#12]
 4511 0010 1FE0     	 b .L201
 4512              	.L202:
 618:../main.c     **** 		Servo_PWMs[i] = Angles_data[i]*deg_PWM + NP[i];
 4513              	 .loc 6 618 0 discriminator 3
 4514 0012 FB68     	 ldr r3,[r7,#12]
 4515 0014 9B00     	 lsl r3,r3,#2
 4516 0016 7A68     	 ldr r2,[r7,#4]
 4517 0018 D318     	 add r3,r2,r3
 4518 001a 1B68     	 ldr r3,[r3]
 4519 001c 181C     	 add r0,r3,#0
 4520 001e B968     	 ldr r1,[r7,#8]
 4521 0020 FFF7FEFF 	 bl __aeabi_fmul
 4522 0024 031C     	 add r3,r0,#0
 4523 0026 1C1C     	 add r4,r3,#0
 4524 0028 374B     	 ldr r3,.L211+4
 4525 002a FA68     	 ldr r2,[r7,#12]
 4526 002c 9200     	 lsl r2,r2,#2
 4527 002e D358     	 ldr r3,[r2,r3]
 4528 0030 181C     	 mov r0,r3
 4529 0032 FFF7FEFF 	 bl __aeabi_i2f
 4530 0036 031C     	 add r3,r0,#0
 4531 0038 201C     	 add r0,r4,#0
 4532 003a 191C     	 add r1,r3,#0
 4533 003c FFF7FEFF 	 bl __aeabi_fadd
 4534 0040 031C     	 add r3,r0,#0
 4535 0042 191C     	 add r1,r3,#0
 4536 0044 314B     	 ldr r3,.L211+8
 4537 0046 FA68     	 ldr r2,[r7,#12]
 4538 0048 9200     	 lsl r2,r2,#2
 4539 004a D150     	 str r1,[r2,r3]
 617:../main.c     **** 		Servo_PWMs[i] = Angles_data[i]*deg_PWM + NP[i];
 4540              	 .loc 6 617 0 discriminator 3
 4541 004c FB68     	 ldr r3,[r7,#12]
 4542 004e 0133     	 add r3,r3,#1
 4543 0050 FB60     	 str r3,[r7,#12]
 4544              	.L201:
 617:../main.c     **** 		Servo_PWMs[i] = Angles_data[i]*deg_PWM + NP[i];
 4545              	 .loc 6 617 0 is_stmt 0 discriminator 1
 4546 0052 FB68     	 ldr r3,[r7,#12]
 4547 0054 032B     	 cmp r3,#3
 4548 0056 DCDD     	 ble .L202
 619:../main.c     **** 		}
 620:../main.c     **** 
 621:../main.c     **** 	//limitinbg max servor Angle to 1.75 rot in each dirction
 622:../main.c     **** 	for(i = 0 ; i < 4 ; i ++){
 4549              	 .loc 6 622 0 is_stmt 1
 4550 0058 0023     	 mov r3,#0
 4551 005a FB60     	 str r3,[r7,#12]
 4552 005c 20E0     	 b .L203
 4553              	.L208:
 623:../main.c     **** 		if(Servo_PWMs[i] > 950) { Servo_PWMs[i] = 950;}
 4554              	 .loc 6 623 0
 4555 005e 2B4B     	 ldr r3,.L211+8
 4556 0060 FA68     	 ldr r2,[r7,#12]
 4557 0062 9200     	 lsl r2,r2,#2
 4558 0064 D358     	 ldr r3,[r2,r3]
 4559 0066 181C     	 add r0,r3,#0
 4560 0068 2949     	 ldr r1,.L211+12
 4561 006a FFF7FEFF 	 bl __aeabi_fcmpgt
 4562 006e 031E     	 sub r3,r0,#0
 4563 0070 04D0     	 beq .L204
 4564              	 .loc 6 623 0 is_stmt 0 discriminator 1
 4565 0072 264B     	 ldr r3,.L211+8
 4566 0074 FA68     	 ldr r2,[r7,#12]
 4567 0076 9200     	 lsl r2,r2,#2
 4568 0078 2549     	 ldr r1,.L211+12
 4569 007a D150     	 str r1,[r2,r3]
 4570              	.L204:
 624:../main.c     **** 		if(Servo_PWMs[i] < 550) { Servo_PWMs[i] = 550;}
 4571              	 .loc 6 624 0 is_stmt 1
 4572 007c 234B     	 ldr r3,.L211+8
 4573 007e FA68     	 ldr r2,[r7,#12]
 4574 0080 9200     	 lsl r2,r2,#2
 4575 0082 D358     	 ldr r3,[r2,r3]
 4576 0084 181C     	 add r0,r3,#0
 4577 0086 2349     	 ldr r1,.L211+16
 4578 0088 FFF7FEFF 	 bl __aeabi_fcmplt
 4579 008c 031E     	 sub r3,r0,#0
 4580 008e 04D0     	 beq .L206
 4581              	 .loc 6 624 0 is_stmt 0 discriminator 1
 4582 0090 1E4B     	 ldr r3,.L211+8
 4583 0092 FA68     	 ldr r2,[r7,#12]
 4584 0094 9200     	 lsl r2,r2,#2
 4585 0096 1F49     	 ldr r1,.L211+16
 4586 0098 D150     	 str r1,[r2,r3]
 4587              	.L206:
 622:../main.c     **** 		if(Servo_PWMs[i] > 950) { Servo_PWMs[i] = 950;}
 4588              	 .loc 6 622 0 is_stmt 1 discriminator 2
 4589 009a FB68     	 ldr r3,[r7,#12]
 4590 009c 0133     	 add r3,r3,#1
 4591 009e FB60     	 str r3,[r7,#12]
 4592              	.L203:
 622:../main.c     **** 		if(Servo_PWMs[i] > 950) { Servo_PWMs[i] = 950;}
 4593              	 .loc 6 622 0 is_stmt 0 discriminator 1
 4594 00a0 FB68     	 ldr r3,[r7,#12]
 4595 00a2 032B     	 cmp r3,#3
 4596 00a4 DBDD     	 ble .L208
 625:../main.c     **** 	}
 626:../main.c     **** 
 627:../main.c     **** 	//seting PWM values
 628:../main.c     **** 	PWM_SetDutyCycle(&PWM_servo_fl,Servo_PWMs[0]);
 4597              	 .loc 6 628 0 is_stmt 1
 4598 00a6 194B     	 ldr r3,.L211+8
 4599 00a8 1B68     	 ldr r3,[r3]
 4600 00aa 181C     	 add r0,r3,#0
 4601 00ac FFF7FEFF 	 bl __aeabi_f2uiz
 4602 00b0 021C     	 mov r2,r0
 4603 00b2 194B     	 ldr r3,.L211+20
 4604 00b4 181C     	 mov r0,r3
 4605 00b6 111C     	 mov r1,r2
 4606 00b8 FFF7FEFF 	 bl PWM_SetDutyCycle
 629:../main.c     **** 	PWM_SetDutyCycle(&PWM_servo_fr,Servo_PWMs[1]);
 4607              	 .loc 6 629 0
 4608 00bc 134B     	 ldr r3,.L211+8
 4609 00be 5B68     	 ldr r3,[r3,#4]
 4610 00c0 181C     	 add r0,r3,#0
 4611 00c2 FFF7FEFF 	 bl __aeabi_f2uiz
 4612 00c6 021C     	 mov r2,r0
 4613 00c8 144B     	 ldr r3,.L211+24
 4614 00ca 181C     	 mov r0,r3
 4615 00cc 111C     	 mov r1,r2
 4616 00ce FFF7FEFF 	 bl PWM_SetDutyCycle
 630:../main.c     **** 	PWM_SetDutyCycle(&PWM_servo_rl,Servo_PWMs[2]);
 4617              	 .loc 6 630 0
 4618 00d2 0E4B     	 ldr r3,.L211+8
 4619 00d4 9B68     	 ldr r3,[r3,#8]
 4620 00d6 181C     	 add r0,r3,#0
 4621 00d8 FFF7FEFF 	 bl __aeabi_f2uiz
 4622 00dc 021C     	 mov r2,r0
 4623 00de 104B     	 ldr r3,.L211+28
 4624 00e0 181C     	 mov r0,r3
 4625 00e2 111C     	 mov r1,r2
 4626 00e4 FFF7FEFF 	 bl PWM_SetDutyCycle
 631:../main.c     **** 	PWM_SetDutyCycle(&PWM_servo_rr,Servo_PWMs[3]);
 4627              	 .loc 6 631 0
 4628 00e8 084B     	 ldr r3,.L211+8
 4629 00ea DB68     	 ldr r3,[r3,#12]
 4630 00ec 181C     	 add r0,r3,#0
 4631 00ee FFF7FEFF 	 bl __aeabi_f2uiz
 4632 00f2 021C     	 mov r2,r0
 4633 00f4 0B4B     	 ldr r3,.L211+32
 4634 00f6 181C     	 mov r0,r3
 4635 00f8 111C     	 mov r1,r2
 4636 00fa FFF7FEFF 	 bl PWM_SetDutyCycle
 632:../main.c     **** 
 633:../main.c     **** }
 4637              	 .loc 6 633 0
 4638 00fe BD46     	 mov sp,r7
 4639 0100 05B0     	 add sp,sp,#20
 4640              	 
 4641 0102 90BD     	 pop {r4,r7,pc}
 4642              	.L212:
 4643              	 .align 2
 4644              	.L211:
 4645 0104 B81E253F 	 .word 1059397304
 4646 0108 00000000 	 .word NP
 4647 010c 00000000 	 .word Servo_PWMs
 4648 0110 00806D44 	 .word 1148026880
 4649 0114 00800944 	 .word 1141473280
 4650 0118 00000000 	 .word PWM_servo_fl
 4651 011c 00000000 	 .word PWM_servo_fr
 4652 0120 00000000 	 .word PWM_servo_rl
 4653 0124 00000000 	 .word PWM_servo_rr
 4654              	 .cfi_endproc
 4655              	.LFE236:
 4657              	 .global __aeabi_ui2d
 4658              	 .section .text.RC_Recive,"ax",%progbits
 4659              	 .align 2
 4660              	 .global RC_Recive
 4661              	 .code 16
 4662              	 .thumb_func
 4664              	RC_Recive:
 4665              	.LFB237:
 634:../main.c     **** 
 635:../main.c     **** void RC_Recive(void){
 4666              	 .loc 6 635 0
 4667              	 .cfi_startproc
 4668 0000 F8B5     	 push {r3,r4,r5,r6,r7,lr}
 4669              	.LCFI66:
 4670              	 .cfi_def_cfa_offset 24
 4671              	 .cfi_offset 3,-24
 4672              	 .cfi_offset 4,-20
 4673              	 .cfi_offset 5,-16
 4674              	 .cfi_offset 6,-12
 4675              	 .cfi_offset 7,-8
 4676              	 .cfi_offset 14,-4
 4677 0002 00AF     	 add r7,sp,#0
 4678              	.LCFI67:
 4679              	 .cfi_def_cfa_register 7
 636:../main.c     **** 
 637:../main.c     **** 	CAPTURE_Start(&CAPTURE_RC_Steering);
 4680              	 .loc 6 637 0
 4681 0004 784B     	 ldr r3,.L233
 4682 0006 181C     	 mov r0,r3
 4683 0008 FFF7FEFF 	 bl CAPTURE_Start
 638:../main.c     **** 	CAPTURE_Start(&CAPTURE_RC_Speed);
 4684              	 .loc 6 638 0
 4685 000c 774B     	 ldr r3,.L233+4
 4686 000e 181C     	 mov r0,r3
 4687 0010 FFF7FEFF 	 bl CAPTURE_Start
 639:../main.c     **** 
 640:../main.c     **** 	CAPTURE_GetCapturedTimeInNanoSec(&CAPTURE_RC_Steering, &captured_time_Steering);
 4688              	 .loc 6 640 0
 4689 0014 744A     	 ldr r2,.L233
 4690 0016 764B     	 ldr r3,.L233+8
 4691 0018 101C     	 mov r0,r2
 4692 001a 191C     	 mov r1,r3
 4693 001c FFF7FEFF 	 bl CAPTURE_GetCapturedTimeInNanoSec
 641:../main.c     **** 	CAPTURE_GetCapturedTimeInNanoSec(&CAPTURE_RC_Speed, &captured_time_Speed);
 4694              	 .loc 6 641 0
 4695 0020 724A     	 ldr r2,.L233+4
 4696 0022 744B     	 ldr r3,.L233+12
 4697 0024 101C     	 mov r0,r2
 4698 0026 191C     	 mov r1,r3
 4699 0028 FFF7FEFF 	 bl CAPTURE_GetCapturedTimeInNanoSec
 642:../main.c     **** 
 643:../main.c     **** 	if(RC_Speed_Stop == 1){
 4700              	 .loc 6 643 0
 4701 002c 724B     	 ldr r3,.L233+16
 4702 002e 1B78     	 ldrb r3,[r3]
 4703 0030 012B     	 cmp r3,#1
 4704 0032 5CD1     	 bne .L214
 644:../main.c     **** 		if((captured_time_Speed >= 1000000) && (captured_time_Speed <= 2000000)){
 4705              	 .loc 6 644 0
 4706 0034 6F4B     	 ldr r3,.L233+12
 4707 0036 1B68     	 ldr r3,[r3]
 4708 0038 704A     	 ldr r2,.L233+20
 4709 003a 9342     	 cmp r3,r2
 4710 003c 50D9     	 bls .L215
 4711              	 .loc 6 644 0 is_stmt 0 discriminator 1
 4712 003e 6D4B     	 ldr r3,.L233+12
 4713 0040 1B68     	 ldr r3,[r3]
 4714 0042 6F4A     	 ldr r2,.L233+24
 4715 0044 9342     	 cmp r3,r2
 4716 0046 4BD8     	 bhi .L215
 645:../main.c     **** 		  RC_Speed = ((double)captured_time_Speed - RC_NP_SPEED) * RC_Speed_ns_to_mps; // form +-0.6m/s
 4717              	 .loc 6 645 0 is_stmt 1
 4718 0048 6A4B     	 ldr r3,.L233+12
 4719 004a 1B68     	 ldr r3,[r3]
 4720 004c 181C     	 mov r0,r3
 4721 004e FFF7FEFF 	 bl __aeabi_ui2d
 4722 0052 031C     	 mov r3,r0
 4723 0054 0C1C     	 mov r4,r1
 4724 0056 181C     	 mov r0,r3
 4725 0058 211C     	 mov r1,r4
 4726 005a 0022     	 mov r2,#0
 4727 005c 694B     	 ldr r3,.L233+28
 4728 005e FFF7FEFF 	 bl __aeabi_dsub
 4729 0062 031C     	 mov r3,r0
 4730 0064 0C1C     	 mov r4,r1
 4731 0066 1D1C     	 mov r5,r3
 4732 0068 261C     	 mov r6,r4
 4733 006a 674B     	 ldr r3,.L233+32
 4734 006c 1B68     	 ldr r3,[r3]
 4735 006e 181C     	 add r0,r3,#0
 4736 0070 FFF7FEFF 	 bl __aeabi_f2d
 4737 0074 031C     	 mov r3,r0
 4738 0076 0C1C     	 mov r4,r1
 4739 0078 281C     	 mov r0,r5
 4740 007a 311C     	 mov r1,r6
 4741 007c 1A1C     	 mov r2,r3
 4742 007e 231C     	 mov r3,r4
 4743 0080 FFF7FEFF 	 bl __aeabi_dmul
 4744 0084 031C     	 mov r3,r0
 4745 0086 0C1C     	 mov r4,r1
 4746 0088 181C     	 mov r0,r3
 4747 008a 211C     	 mov r1,r4
 4748 008c FFF7FEFF 	 bl __aeabi_d2f
 4749 0090 021C     	 add r2,r0,#0
 4750 0092 5E4B     	 ldr r3,.L233+36
 4751 0094 1A60     	 str r2,[r3]
 646:../main.c     **** 		  if((RC_Speed < 0.1) && (RC_Speed > -0.1)) RC_Speed = 0; // to have accutal 0
 4752              	 .loc 6 646 0
 4753 0096 5D4B     	 ldr r3,.L233+36
 4754 0098 1B68     	 ldr r3,[r3]
 4755 009a 181C     	 add r0,r3,#0
 4756 009c FFF7FEFF 	 bl __aeabi_f2d
 4757 00a0 031C     	 mov r3,r0
 4758 00a2 0C1C     	 mov r4,r1
 4759 00a4 181C     	 mov r0,r3
 4760 00a6 211C     	 mov r1,r4
 4761 00a8 594A     	 ldr r2,.L233+40
 4762 00aa 5A4B     	 ldr r3,.L233+44
 4763 00ac FFF7FEFF 	 bl __aeabi_dcmplt
 4764 00b0 031E     	 sub r3,r0,#0
 4765 00b2 11D0     	 beq .L216
 4766              	 .loc 6 646 0 is_stmt 0 discriminator 1
 4767 00b4 554B     	 ldr r3,.L233+36
 4768 00b6 1B68     	 ldr r3,[r3]
 4769 00b8 181C     	 add r0,r3,#0
 4770 00ba FFF7FEFF 	 bl __aeabi_f2d
 4771 00be 031C     	 mov r3,r0
 4772 00c0 0C1C     	 mov r4,r1
 4773 00c2 181C     	 mov r0,r3
 4774 00c4 211C     	 mov r1,r4
 4775 00c6 524A     	 ldr r2,.L233+40
 4776 00c8 534B     	 ldr r3,.L233+48
 4777 00ca FFF7FEFF 	 bl __aeabi_dcmpgt
 4778 00ce 031E     	 sub r3,r0,#0
 4779 00d0 02D0     	 beq .L216
 4780              	 .loc 6 646 0 discriminator 2
 4781 00d2 4E4B     	 ldr r3,.L233+36
 4782 00d4 0022     	 mov r2,#0
 4783 00d6 1A60     	 str r2,[r3]
 4784              	.L216:
 647:../main.c     **** 		  RC_no_Speed_data_counter = 0;
 4785              	 .loc 6 647 0 is_stmt 1
 4786 00d8 504B     	 ldr r3,.L233+52
 4787 00da 0022     	 mov r2,#0
 4788 00dc 1A70     	 strb r2,[r3]
 4789 00de 09E0     	 b .L220
 4790              	.L215:
 648:../main.c     **** 		}
 649:../main.c     **** 		else{
 650:../main.c     **** 			RC_no_Speed_data_counter ++;
 4791              	 .loc 6 650 0
 4792 00e0 4E4B     	 ldr r3,.L233+52
 4793 00e2 1B78     	 ldrb r3,[r3]
 4794 00e4 0133     	 add r3,r3,#1
 4795 00e6 DAB2     	 uxtb r2,r3
 4796 00e8 4C4B     	 ldr r3,.L233+52
 4797 00ea 1A70     	 strb r2,[r3]
 4798 00ec 02E0     	 b .L220
 4799              	.L214:
 651:../main.c     **** 		}
 652:../main.c     **** 	}
 653:../main.c     **** 	else RC_Speed = 0;
 4800              	 .loc 6 653 0
 4801 00ee 474B     	 ldr r3,.L233+36
 4802 00f0 0022     	 mov r2,#0
 4803 00f2 1A60     	 str r2,[r3]
 4804              	.L220:
 654:../main.c     **** 
 655:../main.c     **** 	if((captured_time_Steering >= 1000000) && (captured_time_Steering <= 2000000)){
 4805              	 .loc 6 655 0
 4806 00f4 3E4B     	 ldr r3,.L233+8
 4807 00f6 1B68     	 ldr r3,[r3]
 4808 00f8 404A     	 ldr r2,.L233+20
 4809 00fa 9342     	 cmp r3,r2
 4810 00fc 44D9     	 bls .L221
 4811              	 .loc 6 655 0 is_stmt 0 discriminator 1
 4812 00fe 3C4B     	 ldr r3,.L233+8
 4813 0100 1B68     	 ldr r3,[r3]
 4814 0102 3F4A     	 ldr r2,.L233+24
 4815 0104 9342     	 cmp r3,r2
 4816 0106 3FD8     	 bhi .L221
 656:../main.c     **** 	  RC_Steering = (((double)captured_time_Steering - RC_NP_STEERING) * RC_Steering_ns_to_deg); // fo
 4817              	 .loc 6 656 0 is_stmt 1
 4818 0108 394B     	 ldr r3,.L233+8
 4819 010a 1B68     	 ldr r3,[r3]
 4820 010c 181C     	 mov r0,r3
 4821 010e FFF7FEFF 	 bl __aeabi_ui2d
 4822 0112 031C     	 mov r3,r0
 4823 0114 0C1C     	 mov r4,r1
 4824 0116 181C     	 mov r0,r3
 4825 0118 211C     	 mov r1,r4
 4826 011a 0022     	 mov r2,#0
 4827 011c 404B     	 ldr r3,.L233+56
 4828 011e FFF7FEFF 	 bl __aeabi_dsub
 4829 0122 031C     	 mov r3,r0
 4830 0124 0C1C     	 mov r4,r1
 4831 0126 1D1C     	 mov r5,r3
 4832 0128 261C     	 mov r6,r4
 4833 012a 3E4B     	 ldr r3,.L233+60
 4834 012c 1B68     	 ldr r3,[r3]
 4835 012e 181C     	 add r0,r3,#0
 4836 0130 FFF7FEFF 	 bl __aeabi_f2d
 4837 0134 031C     	 mov r3,r0
 4838 0136 0C1C     	 mov r4,r1
 4839 0138 281C     	 mov r0,r5
 4840 013a 311C     	 mov r1,r6
 4841 013c 1A1C     	 mov r2,r3
 4842 013e 231C     	 mov r3,r4
 4843 0140 FFF7FEFF 	 bl __aeabi_dmul
 4844 0144 031C     	 mov r3,r0
 4845 0146 0C1C     	 mov r4,r1
 4846 0148 181C     	 mov r0,r3
 4847 014a 211C     	 mov r1,r4
 4848 014c FFF7FEFF 	 bl __aeabi_d2f
 4849 0150 021C     	 add r2,r0,#0
 4850 0152 354B     	 ldr r3,.L233+64
 4851 0154 1A60     	 str r2,[r3]
 657:../main.c     **** 	  if((RC_Steering < 2) && (RC_Steering > -2)) RC_Steering = 0; // to have accutal 0
 4852              	 .loc 6 657 0
 4853 0156 344B     	 ldr r3,.L233+64
 4854 0158 1B68     	 ldr r3,[r3]
 4855 015a 181C     	 add r0,r3,#0
 4856 015c 8021     	 mov r1,#128
 4857 015e C905     	 lsl r1,r1,#23
 4858 0160 FFF7FEFF 	 bl __aeabi_fcmplt
 4859 0164 031E     	 sub r3,r0,#0
 4860 0166 0BD0     	 beq .L222
 4861              	 .loc 6 657 0 is_stmt 0 discriminator 1
 4862 0168 2F4B     	 ldr r3,.L233+64
 4863 016a 1B68     	 ldr r3,[r3]
 4864 016c 181C     	 add r0,r3,#0
 4865 016e C021     	 mov r1,#192
 4866 0170 0906     	 lsl r1,r1,#24
 4867 0172 FFF7FEFF 	 bl __aeabi_fcmpgt
 4868 0176 031E     	 sub r3,r0,#0
 4869 0178 02D0     	 beq .L222
 4870              	 .loc 6 657 0 discriminator 2
 4871 017a 2B4B     	 ldr r3,.L233+64
 4872 017c 0022     	 mov r2,#0
 4873 017e 1A60     	 str r2,[r3]
 4874              	.L222:
 658:../main.c     **** 	  RC_no_Steering_data_counter = 0;
 4875              	 .loc 6 658 0 is_stmt 1
 4876 0180 2A4B     	 ldr r3,.L233+68
 4877 0182 0022     	 mov r2,#0
 4878 0184 1A70     	 strb r2,[r3]
 4879 0186 05E0     	 b .L225
 4880              	.L221:
 659:../main.c     **** 	}
 660:../main.c     **** 	else{
 661:../main.c     **** 	  RC_no_Steering_data_counter ++;
 4881              	 .loc 6 661 0
 4882 0188 284B     	 ldr r3,.L233+68
 4883 018a 1B78     	 ldrb r3,[r3]
 4884 018c 0133     	 add r3,r3,#1
 4885 018e DAB2     	 uxtb r2,r3
 4886 0190 264B     	 ldr r3,.L233+68
 4887 0192 1A70     	 strb r2,[r3]
 4888              	.L225:
 662:../main.c     **** 	}
 663:../main.c     **** 
 664:../main.c     **** 	if(RC_no_Speed_data_counter > 20 || RC_no_Steering_data_counter > 20 ){ // internall values not ok
 4889              	 .loc 6 664 0
 4890 0194 214B     	 ldr r3,.L233+52
 4891 0196 1B78     	 ldrb r3,[r3]
 4892 0198 142B     	 cmp r3,#20
 4893 019a 03D8     	 bhi .L226
 4894              	 .loc 6 664 0 is_stmt 0 discriminator 1
 4895 019c 234B     	 ldr r3,.L233+68
 4896 019e 1B78     	 ldrb r3,[r3]
 4897 01a0 142B     	 cmp r3,#20
 4898 01a2 10D9     	 bls .L227
 4899              	.L226:
 665:../main.c     **** 	  DIGITAL_IO_SetOutputLow(&RC_no_data_LED);
 4900              	 .loc 6 665 0 is_stmt 1
 4901 01a4 224B     	 ldr r3,.L233+72
 4902 01a6 181C     	 mov r0,r3
 4903 01a8 FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 666:../main.c     **** 	  RC_no_Speed_data_counter = 20;
 4904              	 .loc 6 666 0
 4905 01ac 1B4B     	 ldr r3,.L233+52
 4906 01ae 1422     	 mov r2,#20
 4907 01b0 1A70     	 strb r2,[r3]
 667:../main.c     **** 	  RC_no_Steering_data_counter = 20;
 4908              	 .loc 6 667 0
 4909 01b2 1E4B     	 ldr r3,.L233+68
 4910 01b4 1422     	 mov r2,#20
 4911 01b6 1A70     	 strb r2,[r3]
 668:../main.c     **** 
 669:../main.c     **** 	  //set gobal vars 0
 670:../main.c     **** 	  Driving_speed = 0;
 4912              	 .loc 6 670 0
 4913 01b8 1E4B     	 ldr r3,.L233+76
 4914 01ba 0022     	 mov r2,#0
 4915 01bc 1A60     	 str r2,[r3]
 671:../main.c     **** 	  Steering_direction = 0;
 4916              	 .loc 6 671 0
 4917 01be 1E4B     	 ldr r3,.L233+80
 4918 01c0 0022     	 mov r2,#0
 4919 01c2 1A60     	 str r2,[r3]
 4920 01c4 0BE0     	 b .L228
 4921              	.L227:
 672:../main.c     **** 	}
 673:../main.c     **** 	else{ // values filternig
 674:../main.c     **** 	  DIGITAL_IO_SetOutputHigh(&RC_no_data_LED);
 4922              	 .loc 6 674 0
 4923 01c6 1A4B     	 ldr r3,.L233+72
 4924 01c8 181C     	 mov r0,r3
 4925 01ca FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 675:../main.c     **** 
 676:../main.c     **** 	  //set gobal vars stanart
 677:../main.c     **** 	  Driving_speed = RC_Speed;
 4926              	 .loc 6 677 0
 4927 01ce 0F4B     	 ldr r3,.L233+36
 4928 01d0 1A68     	 ldr r2,[r3]
 4929 01d2 184B     	 ldr r3,.L233+76
 4930 01d4 1A60     	 str r2,[r3]
 678:../main.c     **** 	  Steering_direction = RC_Steering;
 4931              	 .loc 6 678 0
 4932 01d6 144B     	 ldr r3,.L233+64
 4933 01d8 1A68     	 ldr r2,[r3]
 4934 01da 174B     	 ldr r3,.L233+80
 4935 01dc 1A60     	 str r2,[r3]
 4936              	.L228:
 679:../main.c     **** 	}
 680:../main.c     **** 
 681:../main.c     **** 	New_Input = 1; //goalb var to tell it that there in new data to calculate
 4937              	 .loc 6 681 0
 4938 01de 174B     	 ldr r3,.L233+84
 4939 01e0 0122     	 mov r2,#1
 4940 01e2 1A70     	 strb r2,[r3]
 682:../main.c     **** }
 4941              	 .loc 6 682 0
 4942 01e4 BD46     	 mov sp,r7
 4943              	 
 4944 01e6 F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 4945              	.L234:
 4946              	 .align 2
 4947              	.L233:
 4948 01e8 00000000 	 .word CAPTURE_RC_Steering
 4949 01ec 00000000 	 .word CAPTURE_RC_Speed
 4950 01f0 00000000 	 .word captured_time_Steering
 4951 01f4 00000000 	 .word captured_time_Speed
 4952 01f8 00000000 	 .word RC_Speed_Stop
 4953 01fc 3F420F00 	 .word 999999
 4954 0200 80841E00 	 .word 2000000
 4955 0204 60E33641 	 .word 1094116192
 4956 0208 00000000 	 .word RC_Speed_ns_to_mps
 4957 020c 00000000 	 .word RC_Speed
 4958 0210 9A999999 	 .word -1717986918
 4959 0214 9999B93F 	 .word 1069128089
 4960 0218 9999B9BF 	 .word -1078355559
 4961 021c 00000000 	 .word RC_no_Speed_data_counter
 4962 0220 A07F3741 	 .word 1094156192
 4963 0224 00000000 	 .word RC_Steering_ns_to_deg
 4964 0228 00000000 	 .word RC_Steering
 4965 022c 00000000 	 .word RC_no_Steering_data_counter
 4966 0230 00000000 	 .word RC_no_data_LED
 4967 0234 00000000 	 .word Driving_speed
 4968 0238 00000000 	 .word Steering_direction
 4969 023c 00000000 	 .word New_Input
 4970              	 .cfi_endproc
 4971              	.LFE237:
 4973              	 .section .text.IRQ12_Handler,"ax",%progbits
 4974              	 .align 2
 4975              	 .global IRQ12_Handler
 4976              	 .code 16
 4977              	 .thumb_func
 4979              	IRQ12_Handler:
 4980              	.LFB238:
 683:../main.c     **** 
 684:../main.c     **** void RC_Connected_ISR(void){
 4981              	 .loc 6 684 0
 4982              	 .cfi_startproc
 4983 0000 80B5     	 push {r7,lr}
 4984              	.LCFI68:
 4985              	 .cfi_def_cfa_offset 8
 4986              	 .cfi_offset 7,-8
 4987              	 .cfi_offset 14,-4
 4988 0002 82B0     	 sub sp,sp,#8
 4989              	.LCFI69:
 4990              	 .cfi_def_cfa_offset 16
 4991 0004 00AF     	 add r7,sp,#0
 4992              	.LCFI70:
 4993              	 .cfi_def_cfa_register 7
 685:../main.c     **** 
 686:../main.c     **** 	if(RC_controll == 1){
 4994              	 .loc 6 686 0
 4995 0006 294B     	 ldr r3,.L241
 4996 0008 1B78     	 ldrb r3,[r3]
 4997 000a DBB2     	 uxtb r3,r3
 4998 000c 012B     	 cmp r3,#1
 4999 000e 49D1     	 bne .L235
 687:../main.c     **** 
 688:../main.c     **** 		RC_Gear_state =  PIN_INTERRUPT_GetPinValue(&RC_Connected); // pin haig or low
 5000              	 .loc 6 688 0
 5001 0010 274B     	 ldr r3,.L241+4
 5002 0012 181C     	 mov r0,r3
 5003 0014 FFF7FEFF 	 bl PIN_INTERRUPT_GetPinValue
 5004 0018 031C     	 mov r3,r0
 5005 001a DAB2     	 uxtb r2,r3
 5006 001c 254B     	 ldr r3,.L241+8
 5007 001e 1A70     	 strb r2,[r3]
 689:../main.c     **** 
 690:../main.c     **** 		if(RC_Gear_state == 0){// do nothing during high
 5008              	 .loc 6 690 0
 5009 0020 244B     	 ldr r3,.L241+8
 5010 0022 1B78     	 ldrb r3,[r3]
 5011 0024 DBB2     	 uxtb r3,r3
 5012 0026 002B     	 cmp r3,#0
 5013 0028 3CD1     	 bne .L235
 5014              	.LBB4:
 691:../main.c     **** 
 692:../main.c     **** 			RC_Recive(); // get speed and steering data
 5015              	 .loc 6 692 0
 5016 002a FFF7FEFF 	 bl RC_Recive
 693:../main.c     **** 
 694:../main.c     **** 			uint32_t RC_Gear_on_time_100us = RC_gear_100us_counter;
 5017              	 .loc 6 694 0
 5018 002e 224B     	 ldr r3,.L241+12
 5019 0030 1B68     	 ldr r3,[r3]
 5020 0032 7B60     	 str r3,[r7,#4]
 695:../main.c     **** 			RC_gear_100us_counter = 0;
 5021              	 .loc 6 695 0
 5022 0034 204B     	 ldr r3,.L241+12
 5023 0036 0022     	 mov r2,#0
 5024 0038 1A60     	 str r2,[r3]
 696:../main.c     **** 
 697:../main.c     **** 			if((80 < RC_Gear_on_time_100us) && (RC_Gear_on_time_100us < 150)) RC_Gear_duty= 0;
 5025              	 .loc 6 697 0
 5026 003a 7B68     	 ldr r3,[r7,#4]
 5027 003c 502B     	 cmp r3,#80
 5028 003e 06D9     	 bls .L237
 5029              	 .loc 6 697 0 is_stmt 0 discriminator 1
 5030 0040 7B68     	 ldr r3,[r7,#4]
 5031 0042 952B     	 cmp r3,#149
 5032 0044 03D8     	 bhi .L237
 5033              	 .loc 6 697 0 discriminator 2
 5034 0046 1D4B     	 ldr r3,.L241+16
 5035 0048 0022     	 mov r2,#0
 5036 004a 1A70     	 strb r2,[r3]
 5037 004c 0CE0     	 b .L238
 5038              	.L237:
 698:../main.c     **** 			else if ((150 < RC_Gear_on_time_100us) && (RC_Gear_on_time_100us < 210)) RC_Gear_duty = 1;
 5039              	 .loc 6 698 0 is_stmt 1
 5040 004e 7B68     	 ldr r3,[r7,#4]
 5041 0050 962B     	 cmp r3,#150
 5042 0052 06D9     	 bls .L239
 5043              	 .loc 6 698 0 is_stmt 0 discriminator 1
 5044 0054 7B68     	 ldr r3,[r7,#4]
 5045 0056 D12B     	 cmp r3,#209
 5046 0058 03D8     	 bhi .L239
 5047              	 .loc 6 698 0 discriminator 2
 5048 005a 184B     	 ldr r3,.L241+16
 5049 005c 0122     	 mov r2,#1
 5050 005e 1A70     	 strb r2,[r3]
 5051 0060 02E0     	 b .L238
 5052              	.L239:
 699:../main.c     **** 			else RC_Gear_duty = 2;
 5053              	 .loc 6 699 0 is_stmt 1
 5054 0062 164B     	 ldr r3,.L241+16
 5055 0064 0222     	 mov r2,#2
 5056 0066 1A70     	 strb r2,[r3]
 5057              	.L238:
 700:../main.c     **** 
 701:../main.c     **** 			if(RC_Gear_duty == 1 && RC_Gear_duty_OLD == 0){
 5058              	 .loc 6 701 0
 5059 0068 144B     	 ldr r3,.L241+16
 5060 006a 1B78     	 ldrb r3,[r3]
 5061 006c DBB2     	 uxtb r3,r3
 5062 006e 012B     	 cmp r3,#1
 5063 0070 13D1     	 bne .L240
 5064              	 .loc 6 701 0 is_stmt 0 discriminator 1
 5065 0072 134B     	 ldr r3,.L241+20
 5066 0074 1B78     	 ldrb r3,[r3]
 5067 0076 DBB2     	 uxtb r3,r3
 5068 0078 002B     	 cmp r3,#0
 5069 007a 0ED1     	 bne .L240
 702:../main.c     **** 				Steering_mode ++;
 5070              	 .loc 6 702 0 is_stmt 1
 5071 007c 114B     	 ldr r3,.L241+24
 5072 007e 1B78     	 ldrb r3,[r3]
 5073 0080 DBB2     	 uxtb r3,r3
 5074 0082 0133     	 add r3,r3,#1
 5075 0084 DAB2     	 uxtb r2,r3
 5076 0086 0F4B     	 ldr r3,.L241+24
 5077 0088 1A70     	 strb r2,[r3]
 703:../main.c     **** 				if(Steering_mode > 5)Steering_mode = 0;
 5078              	 .loc 6 703 0
 5079 008a 0E4B     	 ldr r3,.L241+24
 5080 008c 1B78     	 ldrb r3,[r3]
 5081 008e DBB2     	 uxtb r3,r3
 5082 0090 052B     	 cmp r3,#5
 5083 0092 02D9     	 bls .L240
 5084              	 .loc 6 703 0 is_stmt 0 discriminator 1
 5085 0094 0B4B     	 ldr r3,.L241+24
 5086 0096 0022     	 mov r2,#0
 5087 0098 1A70     	 strb r2,[r3]
 5088              	.L240:
 704:../main.c     **** 			}
 705:../main.c     **** 		RC_Gear_duty_OLD = RC_Gear_duty;
 5089              	 .loc 6 705 0 is_stmt 1
 5090 009a 084B     	 ldr r3,.L241+16
 5091 009c 1B78     	 ldrb r3,[r3]
 5092 009e DAB2     	 uxtb r2,r3
 5093 00a0 074B     	 ldr r3,.L241+20
 5094 00a2 1A70     	 strb r2,[r3]
 5095              	.L235:
 5096              	.LBE4:
 706:../main.c     **** 		}
 707:../main.c     **** 	}
 708:../main.c     **** }
 5097              	 .loc 6 708 0
 5098 00a4 BD46     	 mov sp,r7
 5099 00a6 02B0     	 add sp,sp,#8
 5100              	 
 5101 00a8 80BD     	 pop {r7,pc}
 5102              	.L242:
 5103 00aa C046     	 .align 2
 5104              	.L241:
 5105 00ac 00000000 	 .word RC_controll
 5106 00b0 00000000 	 .word RC_Connected
 5107 00b4 00000000 	 .word RC_Gear_state
 5108 00b8 00000000 	 .word RC_gear_100us_counter
 5109 00bc 00000000 	 .word RC_Gear_duty
 5110 00c0 00000000 	 .word RC_Gear_duty_OLD
 5111 00c4 00000000 	 .word Steering_mode
 5112              	 .cfi_endproc
 5113              	.LFE238:
 5115              	 .section .text.IRQ6_Handler,"ax",%progbits
 5116              	 .align 2
 5117              	 .global IRQ6_Handler
 5118              	 .code 16
 5119              	 .thumb_func
 5121              	IRQ6_Handler:
 5122              	.LFB239:
 709:../main.c     **** 
 710:../main.c     **** void RC_AUX1_ISR(void){
 5123              	 .loc 6 710 0
 5124              	 .cfi_startproc
 5125 0000 80B5     	 push {r7,lr}
 5126              	.LCFI71:
 5127              	 .cfi_def_cfa_offset 8
 5128              	 .cfi_offset 7,-8
 5129              	 .cfi_offset 14,-4
 5130 0002 82B0     	 sub sp,sp,#8
 5131              	.LCFI72:
 5132              	 .cfi_def_cfa_offset 16
 5133 0004 00AF     	 add r7,sp,#0
 5134              	.LCFI73:
 5135              	 .cfi_def_cfa_register 7
 711:../main.c     **** 	if(RC_controll == 1){
 5136              	 .loc 6 711 0
 5137 0006 1F4B     	 ldr r3,.L249
 5138 0008 1B78     	 ldrb r3,[r3]
 5139 000a DBB2     	 uxtb r3,r3
 5140 000c 012B     	 cmp r3,#1
 5141 000e 35D1     	 bne .L243
 712:../main.c     **** 		RC_AUX1_state =  PIN_INTERRUPT_GetPinValue(&RC_AUX1); // pin haig or low
 5142              	 .loc 6 712 0
 5143 0010 1D4B     	 ldr r3,.L249+4
 5144 0012 181C     	 mov r0,r3
 5145 0014 FFF7FEFF 	 bl PIN_INTERRUPT_GetPinValue
 5146 0018 031C     	 mov r3,r0
 5147 001a DAB2     	 uxtb r2,r3
 5148 001c 1B4B     	 ldr r3,.L249+8
 5149 001e 1A70     	 strb r2,[r3]
 713:../main.c     **** 
 714:../main.c     **** 		if(RC_AUX1_state == 0){// do nothing during high
 5150              	 .loc 6 714 0
 5151 0020 1A4B     	 ldr r3,.L249+8
 5152 0022 1B78     	 ldrb r3,[r3]
 5153 0024 DBB2     	 uxtb r3,r3
 5154 0026 002B     	 cmp r3,#0
 5155 0028 28D1     	 bne .L243
 5156              	.LBB5:
 715:../main.c     **** 			uint32_t RC_AUX1_on_time_100us = RC_AUX1_100us_counter;
 5157              	 .loc 6 715 0
 5158 002a 194B     	 ldr r3,.L249+12
 5159 002c 1B68     	 ldr r3,[r3]
 5160 002e 7B60     	 str r3,[r7,#4]
 716:../main.c     **** 			RC_AUX1_100us_counter = 0;
 5161              	 .loc 6 716 0
 5162 0030 174B     	 ldr r3,.L249+12
 5163 0032 0022     	 mov r2,#0
 5164 0034 1A60     	 str r2,[r3]
 717:../main.c     **** 
 718:../main.c     **** 			if((80 < RC_AUX1_on_time_100us) && (RC_AUX1_on_time_100us < 150)) RC_AUX1_duty= 0;
 5165              	 .loc 6 718 0
 5166 0036 7B68     	 ldr r3,[r7,#4]
 5167 0038 502B     	 cmp r3,#80
 5168 003a 06D9     	 bls .L245
 5169              	 .loc 6 718 0 is_stmt 0 discriminator 1
 5170 003c 7B68     	 ldr r3,[r7,#4]
 5171 003e 952B     	 cmp r3,#149
 5172 0040 03D8     	 bhi .L245
 5173              	 .loc 6 718 0 discriminator 2
 5174 0042 144B     	 ldr r3,.L249+16
 5175 0044 0022     	 mov r2,#0
 5176 0046 1A70     	 strb r2,[r3]
 5177 0048 0CE0     	 b .L246
 5178              	.L245:
 719:../main.c     **** 			else if ((150 < RC_AUX1_on_time_100us) && (RC_AUX1_on_time_100us < 210)) RC_AUX1_duty = 1;
 5179              	 .loc 6 719 0 is_stmt 1
 5180 004a 7B68     	 ldr r3,[r7,#4]
 5181 004c 962B     	 cmp r3,#150
 5182 004e 06D9     	 bls .L247
 5183              	 .loc 6 719 0 is_stmt 0 discriminator 1
 5184 0050 7B68     	 ldr r3,[r7,#4]
 5185 0052 D12B     	 cmp r3,#209
 5186 0054 03D8     	 bhi .L247
 5187              	 .loc 6 719 0 discriminator 2
 5188 0056 0F4B     	 ldr r3,.L249+16
 5189 0058 0122     	 mov r2,#1
 5190 005a 1A70     	 strb r2,[r3]
 5191 005c 02E0     	 b .L246
 5192              	.L247:
 720:../main.c     **** 			else RC_AUX1_duty = 2;
 5193              	 .loc 6 720 0 is_stmt 1
 5194 005e 0D4B     	 ldr r3,.L249+16
 5195 0060 0222     	 mov r2,#2
 5196 0062 1A70     	 strb r2,[r3]
 5197              	.L246:
 721:../main.c     **** 
 722:../main.c     **** 
 723:../main.c     **** 			if(RC_AUX1_duty == 1)RC_Speed_Stop = 1;
 5198              	 .loc 6 723 0
 5199 0064 0B4B     	 ldr r3,.L249+16
 5200 0066 1B78     	 ldrb r3,[r3]
 5201 0068 DBB2     	 uxtb r3,r3
 5202 006a 012B     	 cmp r3,#1
 5203 006c 03D1     	 bne .L248
 5204              	 .loc 6 723 0 is_stmt 0 discriminator 1
 5205 006e 0A4B     	 ldr r3,.L249+20
 5206 0070 0122     	 mov r2,#1
 5207 0072 1A70     	 strb r2,[r3]
 5208 0074 02E0     	 b .L243
 5209              	.L248:
 724:../main.c     **** 			else RC_Speed_Stop = 0;
 5210              	 .loc 6 724 0 is_stmt 1
 5211 0076 084B     	 ldr r3,.L249+20
 5212 0078 0022     	 mov r2,#0
 5213 007a 1A70     	 strb r2,[r3]
 5214              	.L243:
 5215              	.LBE5:
 725:../main.c     **** 		}
 726:../main.c     **** 	}
 727:../main.c     **** }
 5216              	 .loc 6 727 0
 5217 007c BD46     	 mov sp,r7
 5218 007e 02B0     	 add sp,sp,#8
 5219              	 
 5220 0080 80BD     	 pop {r7,pc}
 5221              	.L250:
 5222 0082 C046     	 .align 2
 5223              	.L249:
 5224 0084 00000000 	 .word RC_controll
 5225 0088 00000000 	 .word RC_AUX1
 5226 008c 00000000 	 .word RC_AUX1_state
 5227 0090 00000000 	 .word RC_AUX1_100us_counter
 5228 0094 00000000 	 .word RC_AUX1_duty
 5229 0098 00000000 	 .word RC_Speed_Stop
 5230              	 .cfi_endproc
 5231              	.LFE239:
 5233              	 .section .rodata
 5234              	 .align 2
 5235              	.LC0:
 5236 0000 01       	 .byte 1
 5237 0001 01       	 .byte 1
 5238 0002 01       	 .byte 1
 5239 0003 01       	 .byte 1
 5240              	 .section .text.IRQ7_Handler,"ax",%progbits
 5241              	 .align 2
 5242              	 .global IRQ7_Handler
 5243              	 .code 16
 5244              	 .thumb_func
 5246              	IRQ7_Handler:
 5247              	.LFB240:
 728:../main.c     **** 
 729:../main.c     **** void TIMER_CONTROL_ISR(void){
 5248              	 .loc 6 729 0
 5249              	 .cfi_startproc
 5250 0000 80B5     	 push {r7,lr}
 5251              	.LCFI74:
 5252              	 .cfi_def_cfa_offset 8
 5253              	 .cfi_offset 7,-8
 5254              	 .cfi_offset 14,-4
 5255 0002 82B0     	 sub sp,sp,#8
 5256              	.LCFI75:
 5257              	 .cfi_def_cfa_offset 16
 5258 0004 00AF     	 add r7,sp,#0
 5259              	.LCFI76:
 5260              	 .cfi_def_cfa_register 7
 730:../main.c     **** 	DIGITAL_IO_SetOutputHigh(&CALC_TIME_INDICATOR);
 5261              	 .loc 6 730 0
 5262 0006 394B     	 ldr r3,.L256
 5263 0008 181C     	 mov r0,r3
 5264 000a FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 731:../main.c     **** 	mode_led(Steering_mode);
 5265              	 .loc 6 731 0
 5266 000e 384B     	 ldr r3,.L256+4
 5267 0010 1B78     	 ldrb r3,[r3]
 5268 0012 DBB2     	 uxtb r3,r3
 5269 0014 181C     	 mov r0,r3
 5270 0016 FFF7FEFF 	 bl mode_led
 732:../main.c     **** 
 733:../main.c     **** 	if(RC_controll == 1){
 5271              	 .loc 6 733 0
 5272 001a 364B     	 ldr r3,.L256+8
 5273 001c 1B78     	 ldrb r3,[r3]
 5274 001e DBB2     	 uxtb r3,r3
 5275 0020 012B     	 cmp r3,#1
 5276 0022 07D1     	 bne .L252
 734:../main.c     **** 		if( NO_New_Input_counter > 9){
 5277              	 .loc 6 734 0
 5278 0024 344B     	 ldr r3,.L256+12
 5279 0026 1B68     	 ldr r3,[r3]
 5280 0028 092B     	 cmp r3,#9
 5281 002a 03D9     	 bls .L252
 735:../main.c     **** 			DIGITAL_IO_SetOutputLow(&RC_no_data_LED);
 5282              	 .loc 6 735 0
 5283 002c 334B     	 ldr r3,.L256+16
 5284 002e 181C     	 mov r0,r3
 5285 0030 FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 5286              	.L252:
 736:../main.c     **** 		}
 737:../main.c     **** 	}
 738:../main.c     **** 
 739:../main.c     **** 
 740:../main.c     **** 	if(New_Input == 1){
 5287              	 .loc 6 740 0
 5288 0034 324B     	 ldr r3,.L256+20
 5289 0036 1B78     	 ldrb r3,[r3]
 5290 0038 DBB2     	 uxtb r3,r3
 5291 003a 012B     	 cmp r3,#1
 5292 003c 0FD1     	 bne .L253
 741:../main.c     **** 	Steering_Function(Steering_direction, Driving_speed, Steering_mode);
 5293              	 .loc 6 741 0
 5294 003e 314B     	 ldr r3,.L256+24
 5295 0040 1968     	 ldr r1,[r3]
 5296 0042 314B     	 ldr r3,.L256+28
 5297 0044 1A68     	 ldr r2,[r3]
 5298 0046 2A4B     	 ldr r3,.L256+4
 5299 0048 1B78     	 ldrb r3,[r3]
 5300 004a DBB2     	 uxtb r3,r3
 5301 004c 081C     	 add r0,r1,#0
 5302 004e 111C     	 add r1,r2,#0
 5303 0050 1A1C     	 mov r2,r3
 5304 0052 FFF7FEFF 	 bl Steering_Function
 742:../main.c     **** 	NO_New_Input_counter = 0;
 5305              	 .loc 6 742 0
 5306 0056 284B     	 ldr r3,.L256+12
 5307 0058 0022     	 mov r2,#0
 5308 005a 1A60     	 str r2,[r3]
 5309 005c 23E0     	 b .L254
 5310              	.L253:
 743:../main.c     **** 
 744:../main.c     **** 	}
 745:../main.c     **** 	else{
 746:../main.c     **** 		NO_New_Input_counter ++;
 5311              	 .loc 6 746 0
 5312 005e 264B     	 ldr r3,.L256+12
 5313 0060 1B68     	 ldr r3,[r3]
 5314 0062 5A1C     	 add r2,r3,#1
 5315 0064 244B     	 ldr r3,.L256+12
 5316 0066 1A60     	 str r2,[r3]
 747:../main.c     **** 		if( NO_New_Input_counter > 10){
 5317              	 .loc 6 747 0
 5318 0068 234B     	 ldr r3,.L256+12
 5319 006a 1B68     	 ldr r3,[r3]
 5320 006c 0A2B     	 cmp r3,#10
 5321 006e 1AD9     	 bls .L254
 748:../main.c     **** 			NO_New_Input_counter = 10;
 5322              	 .loc 6 748 0
 5323 0070 214B     	 ldr r3,.L256+12
 5324 0072 0A22     	 mov r2,#10
 5325 0074 1A60     	 str r2,[r3]
 749:../main.c     **** 
 750:../main.c     **** 			  Steering_Angles[0] = 0;
 5326              	 .loc 6 750 0
 5327 0076 254B     	 ldr r3,.L256+32
 5328 0078 0022     	 mov r2,#0
 5329 007a 1A60     	 str r2,[r3]
 751:../main.c     **** 			  Steering_Angles[1] = 0;
 5330              	 .loc 6 751 0
 5331 007c 234B     	 ldr r3,.L256+32
 5332 007e 0022     	 mov r2,#0
 5333 0080 5A60     	 str r2,[r3,#4]
 752:../main.c     **** 			  Steering_Angles[2] = 0;
 5334              	 .loc 6 752 0
 5335 0082 224B     	 ldr r3,.L256+32
 5336 0084 0022     	 mov r2,#0
 5337 0086 9A60     	 str r2,[r3,#8]
 753:../main.c     **** 			  Steering_Angles[3] = 0;
 5338              	 .loc 6 753 0
 5339 0088 204B     	 ldr r3,.L256+32
 5340 008a 0022     	 mov r2,#0
 5341 008c DA60     	 str r2,[r3,#12]
 754:../main.c     **** 
 755:../main.c     **** 			  Speeds[0] = 0;
 5342              	 .loc 6 755 0
 5343 008e 204B     	 ldr r3,.L256+36
 5344 0090 0022     	 mov r2,#0
 5345 0092 1A60     	 str r2,[r3]
 756:../main.c     **** 			  Speeds[1] = 0;
 5346              	 .loc 6 756 0
 5347 0094 1E4B     	 ldr r3,.L256+36
 5348 0096 0022     	 mov r2,#0
 5349 0098 5A60     	 str r2,[r3,#4]
 757:../main.c     **** 			  Speeds[2] = 0;
 5350              	 .loc 6 757 0
 5351 009a 1D4B     	 ldr r3,.L256+36
 5352 009c 0022     	 mov r2,#0
 5353 009e 9A60     	 str r2,[r3,#8]
 758:../main.c     **** 			  Speeds[3] = 0;
 5354              	 .loc 6 758 0
 5355 00a0 1B4B     	 ldr r3,.L256+36
 5356 00a2 0022     	 mov r2,#0
 5357 00a4 DA60     	 str r2,[r3,#12]
 5358              	.L254:
 759:../main.c     **** 		}
 760:../main.c     **** 	}
 761:../main.c     **** 
 762:../main.c     **** 	//set Angles PWM
 763:../main.c     **** 	Steering_set_Angles(Steering_Angles);
 5359              	 .loc 6 763 0
 5360 00a6 194B     	 ldr r3,.L256+32
 5361 00a8 181C     	 mov r0,r3
 5362 00aa FFF7FEFF 	 bl Steering_set_Angles
 764:../main.c     **** 
 765:../main.c     **** 	Collision_voidance();
 5363              	 .loc 6 765 0
 5364 00ae FFF7FEFF 	 bl Collision_voidance
 766:../main.c     **** 
 767:../main.c     **** 	//send traget speeds to inverter
 768:../main.c     **** 	//CAN_send_Speeds(Speeds);
 769:../main.c     **** 
 770:../main.c     **** 	//
 771:../main.c     **** 	if(reset_distance == 1){
 5365              	 .loc 6 771 0
 5366 00b2 184B     	 ldr r3,.L256+40
 5367 00b4 1B78     	 ldrb r3,[r3]
 5368 00b6 DBB2     	 uxtb r3,r3
 5369 00b8 012B     	 cmp r3,#1
 5370 00ba 10D1     	 bne .L255
 5371              	.LBB6:
 772:../main.c     **** 		reset_distance = 0;
 5372              	 .loc 6 772 0
 5373 00bc 154B     	 ldr r3,.L256+40
 5374 00be 0022     	 mov r2,#0
 5375 00c0 1A70     	 strb r2,[r3]
 773:../main.c     **** 		uint8_t all[4] = {1,1,1,1};
 5376              	 .loc 6 773 0
 5377 00c2 3A1D     	 add r2,r7,#4
 5378 00c4 144B     	 ldr r3,.L256+44
 5379 00c6 111C     	 mov r1,r2
 5380 00c8 1A1C     	 mov r2,r3
 5381 00ca 0423     	 mov r3,#4
 5382 00cc 081C     	 mov r0,r1
 5383 00ce 111C     	 mov r1,r2
 5384 00d0 1A1C     	 mov r2,r3
 5385 00d2 FFF7FEFF 	 bl memcpy
 774:../main.c     **** 		CAN_reset_distance(all);
 5386              	 .loc 6 774 0
 5387 00d6 3B1D     	 add r3,r7,#4
 5388 00d8 181C     	 mov r0,r3
 5389 00da FFF7FEFF 	 bl CAN_reset_distance
 5390              	.L255:
 5391              	.LBE6:
 775:../main.c     **** 	}
 776:../main.c     **** 
 777:../main.c     **** 
 778:../main.c     **** 	DIGITAL_IO_SetOutputLow(&CALC_TIME_INDICATOR);
 5392              	 .loc 6 778 0
 5393 00de 034B     	 ldr r3,.L256
 5394 00e0 181C     	 mov r0,r3
 5395 00e2 FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 779:../main.c     **** }
 5396              	 .loc 6 779 0
 5397 00e6 BD46     	 mov sp,r7
 5398 00e8 02B0     	 add sp,sp,#8
 5399              	 
 5400 00ea 80BD     	 pop {r7,pc}
 5401              	.L257:
 5402              	 .align 2
 5403              	.L256:
 5404 00ec 00000000 	 .word CALC_TIME_INDICATOR
 5405 00f0 00000000 	 .word Steering_mode
 5406 00f4 00000000 	 .word RC_controll
 5407 00f8 00000000 	 .word NO_New_Input_counter
 5408 00fc 00000000 	 .word RC_no_data_LED
 5409 0100 00000000 	 .word New_Input
 5410 0104 00000000 	 .word Steering_direction
 5411 0108 00000000 	 .word Driving_speed
 5412 010c 00000000 	 .word Steering_Angles
 5413 0110 00000000 	 .word Speeds
 5414 0114 00000000 	 .word reset_distance
 5415 0118 00000000 	 .word .LC0
 5416              	 .cfi_endproc
 5417              	.LFE240:
 5419              	 .section .text.Collision_voidance,"ax",%progbits
 5420              	 .align 2
 5421              	 .global Collision_voidance
 5422              	 .code 16
 5423              	 .thumb_func
 5425              	Collision_voidance:
 5426              	.LFB241:
 780:../main.c     **** 
 781:../main.c     **** void Collision_voidance(){
 5427              	 .loc 6 781 0
 5428              	 .cfi_startproc
 5429 0000 F0B5     	 push {r4,r5,r6,r7,lr}
 5430              	.LCFI77:
 5431              	 .cfi_def_cfa_offset 20
 5432              	 .cfi_offset 4,-20
 5433              	 .cfi_offset 5,-16
 5434              	 .cfi_offset 6,-12
 5435              	 .cfi_offset 7,-8
 5436              	 .cfi_offset 14,-4
 5437 0002 83B0     	 sub sp,sp,#12
 5438              	.LCFI78:
 5439              	 .cfi_def_cfa_offset 32
 5440 0004 00AF     	 add r7,sp,#0
 5441              	.LCFI79:
 5442              	 .cfi_def_cfa_register 7
 782:../main.c     **** 	DIGITAL_IO_SetOutputLow(&LED_COLLISION_AVOID);
 5443              	 .loc 6 782 0
 5444 0006 684B     	 ldr r3,.L279
 5445 0008 181C     	 mov r0,r3
 5446 000a FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 783:../main.c     **** 	avg_Speeds = average(Speeds,4);
 5447              	 .loc 6 783 0
 5448 000e 674B     	 ldr r3,.L279+4
 5449 0010 181C     	 mov r0,r3
 5450 0012 0421     	 mov r1,#4
 5451 0014 FFF7FEFF 	 bl average
 5452 0018 021C     	 add r2,r0,#0
 5453 001a 654B     	 ldr r3,.L279+8
 5454 001c 1A60     	 str r2,[r3]
 784:../main.c     **** 
 785:../main.c     **** 	switch(Steering_mode) // options 'Front'; 'Rear'; '4_Wheel'; 'Carb'; 'Rotate'
 5455              	 .loc 6 785 0
 5456 001e 654B     	 ldr r3,.L279+12
 5457 0020 1B78     	 ldrb r3,[r3]
 5458 0022 DBB2     	 uxtb r3,r3
 5459 0024 052B     	 cmp r3,#5
 5460 0026 4BD8     	 bhi .L259
 5461 0028 9A00     	 lsl r2,r3,#2
 5462 002a 634B     	 ldr r3,.L279+16
 5463 002c D318     	 add r3,r2,r3
 5464 002e 1B68     	 ldr r3,[r3]
 5465 0030 9F46     	 mov pc,r3
 5466              	 .section .rodata.Collision_voidance,"a",%progbits
 5467              	 .align 2
 5468              	.L261:
 5469 0000 C0000000 	 .word .L259
 5470 0004 CE000000 	 .word .L278
 5471 0008 CE000000 	 .word .L278
 5472 000c CE000000 	 .word .L278
 5473 0010 32000000 	 .word .L263
 5474 0014 CE000000 	 .word .L278
 5475              	 .section .text.Collision_voidance
 5476              	.L263:
 786:../main.c     **** 		{
 787:../main.c     **** 			case FRONT://#############################################################
 788:../main.c     **** 				//act_trajctory_x =
 789:../main.c     **** 				break;
 790:../main.c     **** 
 791:../main.c     **** 			case BACK:// rear #############################################################
 792:../main.c     **** 
 793:../main.c     **** 
 794:../main.c     **** 			case ALL_WHEEL: // 4 wheel #############################################################
 795:../main.c     **** 
 796:../main.c     **** 				break;
 797:../main.c     **** 
 798:../main.c     **** 			case CRAB:  //carb //#############################################################
 799:../main.c     **** 				act_trajctory_x = avg_Speeds * cos(Steering_Angles[0]);
 5477              	 .loc 6 799 0
 5478 0032 5F4B     	 ldr r3,.L279+8
 5479 0034 1B68     	 ldr r3,[r3]
 5480 0036 181C     	 add r0,r3,#0
 5481 0038 FFF7FEFF 	 bl __aeabi_f2d
 5482 003c 051C     	 mov r5,r0
 5483 003e 0E1C     	 mov r6,r1
 5484 0040 5E4B     	 ldr r3,.L279+20
 5485 0042 1B68     	 ldr r3,[r3]
 5486 0044 181C     	 add r0,r3,#0
 5487 0046 FFF7FEFF 	 bl __aeabi_f2d
 5488 004a 031C     	 mov r3,r0
 5489 004c 0C1C     	 mov r4,r1
 5490 004e 181C     	 mov r0,r3
 5491 0050 211C     	 mov r1,r4
 5492 0052 FFF7FEFF 	 bl cos
 5493 0056 031C     	 mov r3,r0
 5494 0058 0C1C     	 mov r4,r1
 5495 005a 281C     	 mov r0,r5
 5496 005c 311C     	 mov r1,r6
 5497 005e 1A1C     	 mov r2,r3
 5498 0060 231C     	 mov r3,r4
 5499 0062 FFF7FEFF 	 bl __aeabi_dmul
 5500 0066 031C     	 mov r3,r0
 5501 0068 0C1C     	 mov r4,r1
 5502 006a 181C     	 mov r0,r3
 5503 006c 211C     	 mov r1,r4
 5504 006e FFF7FEFF 	 bl __aeabi_d2f
 5505 0072 021C     	 add r2,r0,#0
 5506 0074 524B     	 ldr r3,.L279+24
 5507 0076 1A60     	 str r2,[r3]
 800:../main.c     **** 				act_trajctory_y = avg_Speeds * sin(Steering_Angles[0]);
 5508              	 .loc 6 800 0
 5509 0078 4D4B     	 ldr r3,.L279+8
 5510 007a 1B68     	 ldr r3,[r3]
 5511 007c 181C     	 add r0,r3,#0
 5512 007e FFF7FEFF 	 bl __aeabi_f2d
 5513 0082 051C     	 mov r5,r0
 5514 0084 0E1C     	 mov r6,r1
 5515 0086 4D4B     	 ldr r3,.L279+20
 5516 0088 1B68     	 ldr r3,[r3]
 5517 008a 181C     	 add r0,r3,#0
 5518 008c FFF7FEFF 	 bl __aeabi_f2d
 5519 0090 031C     	 mov r3,r0
 5520 0092 0C1C     	 mov r4,r1
 5521 0094 181C     	 mov r0,r3
 5522 0096 211C     	 mov r1,r4
 5523 0098 FFF7FEFF 	 bl sin
 5524 009c 031C     	 mov r3,r0
 5525 009e 0C1C     	 mov r4,r1
 5526 00a0 281C     	 mov r0,r5
 5527 00a2 311C     	 mov r1,r6
 5528 00a4 1A1C     	 mov r2,r3
 5529 00a6 231C     	 mov r3,r4
 5530 00a8 FFF7FEFF 	 bl __aeabi_dmul
 5531 00ac 031C     	 mov r3,r0
 5532 00ae 0C1C     	 mov r4,r1
 5533 00b0 181C     	 mov r0,r3
 5534 00b2 211C     	 mov r1,r4
 5535 00b4 FFF7FEFF 	 bl __aeabi_d2f
 5536 00b8 021C     	 add r2,r0,#0
 5537 00ba 424B     	 ldr r3,.L279+28
 5538 00bc 1A60     	 str r2,[r3]
 801:../main.c     **** 
 802:../main.c     **** 				break;
 5539              	 .loc 6 802 0
 5540 00be 07E0     	 b .L265
 5541              	.L259:
 803:../main.c     **** 
 804:../main.c     **** 			case ROTATE: // rotate ############################################################
 805:../main.c     **** 
 806:../main.c     **** 				break;
 807:../main.c     **** 
 808:../main.c     **** 			default :
 809:../main.c     **** 
 810:../main.c     **** 			act_trajctory_x = 0;
 5542              	 .loc 6 810 0
 5543 00c0 3F4B     	 ldr r3,.L279+24
 5544 00c2 0022     	 mov r2,#0
 5545 00c4 1A60     	 str r2,[r3]
 811:../main.c     **** 			act_trajctory_y = 0;
 5546              	 .loc 6 811 0
 5547 00c6 3F4B     	 ldr r3,.L279+28
 5548 00c8 0022     	 mov r2,#0
 5549 00ca 1A60     	 str r2,[r3]
 5550 00cc 00E0     	 b .L265
 5551              	.L278:
 789:../main.c     **** 
 5552              	 .loc 6 789 0
 5553 00ce C046     	 mov r8,r8
 5554              	.L265:
 812:../main.c     **** 		}
 813:../main.c     **** 
 814:../main.c     **** 		//if(Obstacel_valid[0]){
 815:../main.c     **** 			if(Obstacel_F[0] < COLLISION_ADOIVANCE_START){
 5555              	 .loc 6 815 0
 5556 00d0 3D4B     	 ldr r3,.L279+32
 5557 00d2 1B68     	 ldr r3,[r3]
 5558 00d4 181C     	 add r0,r3,#0
 5559 00d6 FC21     	 mov r1,#252
 5560 00d8 8905     	 lsl r1,r1,#22
 5561 00da FFF7FEFF 	 bl __aeabi_fcmplt
 5562 00de 031E     	 sub r3,r0,#0
 5563 00e0 4AD0     	 beq .L266
 816:../main.c     **** 				if(act_trajctory_x > Obstacel_F[0]){
 5564              	 .loc 6 816 0
 5565 00e2 394B     	 ldr r3,.L279+32
 5566 00e4 1A68     	 ldr r2,[r3]
 5567 00e6 364B     	 ldr r3,.L279+24
 5568 00e8 1B68     	 ldr r3,[r3]
 5569 00ea 101C     	 add r0,r2,#0
 5570 00ec 191C     	 add r1,r3,#0
 5571 00ee FFF7FEFF 	 bl __aeabi_fcmplt
 5572 00f2 031E     	 sub r3,r0,#0
 5573 00f4 40D0     	 beq .L266
 5574              	.LBB7:
 817:../main.c     **** 					DIGITAL_IO_SetOutputHigh(&LED_COLLISION_AVOID);
 5575              	 .loc 6 817 0
 5576 00f6 2C4B     	 ldr r3,.L279
 5577 00f8 181C     	 mov r0,r3
 5578 00fa FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 818:../main.c     **** 					uint8_t i;
 819:../main.c     **** 					for(i = 0; i < 4; i ++){
 5579              	 .loc 6 819 0
 5580 00fe FB1D     	 add r3,r7,#7
 5581 0100 0022     	 mov r2,#0
 5582 0102 1A70     	 strb r2,[r3]
 5583 0104 34E0     	 b .L269
 5584              	.L273:
 820:../main.c     **** 						if(Obstacel_F[0] < 0.02) Speeds[i] = 0;
 5585              	 .loc 6 820 0
 5586 0106 304B     	 ldr r3,.L279+32
 5587 0108 1B68     	 ldr r3,[r3]
 5588 010a 181C     	 add r0,r3,#0
 5589 010c FFF7FEFF 	 bl __aeabi_f2d
 5590 0110 031C     	 mov r3,r0
 5591 0112 0C1C     	 mov r4,r1
 5592 0114 181C     	 mov r0,r3
 5593 0116 211C     	 mov r1,r4
 5594 0118 2C4A     	 ldr r2,.L279+36
 5595 011a 2D4B     	 ldr r3,.L279+40
 5596 011c FFF7FEFF 	 bl __aeabi_dcmplt
 5597 0120 031E     	 sub r3,r0,#0
 5598 0122 06D0     	 beq .L277
 5599              	 .loc 6 820 0 is_stmt 0 discriminator 1
 5600 0124 FB1D     	 add r3,r7,#7
 5601 0126 1A78     	 ldrb r2,[r3]
 5602 0128 204B     	 ldr r3,.L279+4
 5603 012a 9200     	 lsl r2,r2,#2
 5604 012c 0021     	 mov r1,#0
 5605 012e D150     	 str r1,[r2,r3]
 5606 0130 19E0     	 b .L272
 5607              	.L277:
 821:../main.c     **** 						else Speeds[i] = Speeds[i] * 2 * copysign(Obstacel_F[0],1);
 5608              	 .loc 6 821 0 is_stmt 1
 5609 0132 FB1D     	 add r3,r7,#7
 5610 0134 1C78     	 ldrb r4,[r3]
 5611 0136 FB1D     	 add r3,r7,#7
 5612 0138 1A78     	 ldrb r2,[r3]
 5613 013a 1C4B     	 ldr r3,.L279+4
 5614 013c 9200     	 lsl r2,r2,#2
 5615 013e D358     	 ldr r3,[r2,r3]
 5616 0140 181C     	 add r0,r3,#0
 5617 0142 191C     	 add r1,r3,#0
 5618 0144 FFF7FEFF 	 bl __aeabi_fadd
 5619 0148 031C     	 add r3,r0,#0
 5620 014a 1A1C     	 add r2,r3,#0
 5621 014c 1E4B     	 ldr r3,.L279+32
 5622 014e 1B68     	 ldr r3,[r3]
 5623 0150 5B00     	 lsl r3,r3,#1
 5624 0152 5B08     	 lsr r3,r3,#1
 5625 0154 101C     	 add r0,r2,#0
 5626 0156 191C     	 add r1,r3,#0
 5627 0158 FFF7FEFF 	 bl __aeabi_fmul
 5628 015c 031C     	 add r3,r0,#0
 5629 015e 191C     	 add r1,r3,#0
 5630 0160 124B     	 ldr r3,.L279+4
 5631 0162 A200     	 lsl r2,r4,#2
 5632 0164 D150     	 str r1,[r2,r3]
 5633              	.L272:
 819:../main.c     **** 						if(Obstacel_F[0] < 0.02) Speeds[i] = 0;
 5634              	 .loc 6 819 0 discriminator 2
 5635 0166 FB1D     	 add r3,r7,#7
 5636 0168 1A78     	 ldrb r2,[r3]
 5637 016a FB1D     	 add r3,r7,#7
 5638 016c 0132     	 add r2,r2,#1
 5639 016e 1A70     	 strb r2,[r3]
 5640              	.L269:
 819:../main.c     **** 						if(Obstacel_F[0] < 0.02) Speeds[i] = 0;
 5641              	 .loc 6 819 0 is_stmt 0 discriminator 1
 5642 0170 FB1D     	 add r3,r7,#7
 5643 0172 1B78     	 ldrb r3,[r3]
 5644 0174 032B     	 cmp r3,#3
 5645 0176 C6D9     	 bls .L273
 5646              	.L266:
 5647              	.LBE7:
 822:../main.c     **** 					}
 823:../main.c     **** 
 824:../main.c     **** 				}
 825:../main.c     **** 			}
 826:../main.c     **** 
 827:../main.c     **** 		//}
 828:../main.c     **** 
 829:../main.c     **** 
 830:../main.c     **** 	speed_fl = Speeds[0];
 5648              	 .loc 6 830 0 is_stmt 1
 5649 0178 0C4B     	 ldr r3,.L279+4
 5650 017a 1A68     	 ldr r2,[r3]
 5651 017c 154B     	 ldr r3,.L279+44
 5652 017e 1A60     	 str r2,[r3]
 831:../main.c     **** 	speed_fr = Speeds[1];
 5653              	 .loc 6 831 0
 5654 0180 0A4B     	 ldr r3,.L279+4
 5655 0182 5A68     	 ldr r2,[r3,#4]
 5656 0184 144B     	 ldr r3,.L279+48
 5657 0186 1A60     	 str r2,[r3]
 832:../main.c     **** 	speed_rl = Speeds[2];
 5658              	 .loc 6 832 0
 5659 0188 084B     	 ldr r3,.L279+4
 5660 018a 9A68     	 ldr r2,[r3,#8]
 5661 018c 134B     	 ldr r3,.L279+52
 5662 018e 1A60     	 str r2,[r3]
 833:../main.c     **** 	speed_rr = Speeds[3];
 5663              	 .loc 6 833 0
 5664 0190 064B     	 ldr r3,.L279+4
 5665 0192 DA68     	 ldr r2,[r3,#12]
 5666 0194 124B     	 ldr r3,.L279+56
 5667 0196 1A60     	 str r2,[r3]
 834:../main.c     **** 
 835:../main.c     **** 	CAN_send_Speeds(Speeds);
 5668              	 .loc 6 835 0
 5669 0198 044B     	 ldr r3,.L279+4
 5670 019a 181C     	 mov r0,r3
 5671 019c FFF7FEFF 	 bl CAN_send_Speeds
 836:../main.c     **** }
 5672              	 .loc 6 836 0
 5673 01a0 BD46     	 mov sp,r7
 5674 01a2 03B0     	 add sp,sp,#12
 5675              	 
 5676 01a4 F0BD     	 pop {r4,r5,r6,r7,pc}
 5677              	.L280:
 5678 01a6 C046     	 .align 2
 5679              	.L279:
 5680 01a8 00000000 	 .word LED_COLLISION_AVOID
 5681 01ac 00000000 	 .word Speeds
 5682 01b0 00000000 	 .word avg_Speeds
 5683 01b4 00000000 	 .word Steering_mode
 5684 01b8 00000000 	 .word .L261
 5685 01bc 00000000 	 .word Steering_Angles
 5686 01c0 00000000 	 .word act_trajctory_x
 5687 01c4 00000000 	 .word act_trajctory_y
 5688 01c8 00000000 	 .word Obstacel_F
 5689 01cc 7B14AE47 	 .word 1202590843
 5690 01d0 E17A943F 	 .word 1066695393
 5691 01d4 00000000 	 .word speed_fl
 5692 01d8 00000000 	 .word speed_fr
 5693 01dc 00000000 	 .word speed_rl
 5694 01e0 00000000 	 .word speed_rr
 5695              	 .cfi_endproc
 5696              	.LFE241:
 5698              	 .section .text.Servo_NP_setting,"ax",%progbits
 5699              	 .align 2
 5700              	 .global Servo_NP_setting
 5701              	 .code 16
 5702              	 .thumb_func
 5704              	Servo_NP_setting:
 5705              	.LFB242:
 837:../main.c     **** 
 838:../main.c     **** 
 839:../main.c     **** void Servo_NP_setting(void){
 5706              	 .loc 6 839 0
 5707              	 .cfi_startproc
 5708 0000 80B5     	 push {r7,lr}
 5709              	.LCFI80:
 5710              	 .cfi_def_cfa_offset 8
 5711              	 .cfi_offset 7,-8
 5712              	 .cfi_offset 14,-4
 5713 0002 00AF     	 add r7,sp,#0
 5714              	.LCFI81:
 5715              	 .cfi_def_cfa_register 7
 840:../main.c     **** 	  NP[0] = NPfl;
 5716              	 .loc 6 840 0
 5717 0004 084B     	 ldr r3,.L282
 5718 0006 1A68     	 ldr r2,[r3]
 5719 0008 084B     	 ldr r3,.L282+4
 5720 000a 1A60     	 str r2,[r3]
 841:../main.c     **** 	  NP[1] = NPfr;
 5721              	 .loc 6 841 0
 5722 000c 084B     	 ldr r3,.L282+8
 5723 000e 1A68     	 ldr r2,[r3]
 5724 0010 064B     	 ldr r3,.L282+4
 5725 0012 5A60     	 str r2,[r3,#4]
 842:../main.c     **** 	  NP[2] = NPrl;
 5726              	 .loc 6 842 0
 5727 0014 074B     	 ldr r3,.L282+12
 5728 0016 1A68     	 ldr r2,[r3]
 5729 0018 044B     	 ldr r3,.L282+4
 5730 001a 9A60     	 str r2,[r3,#8]
 843:../main.c     **** 	  NP[3] = NPrr;
 5731              	 .loc 6 843 0
 5732 001c 064B     	 ldr r3,.L282+16
 5733 001e 1A68     	 ldr r2,[r3]
 5734 0020 024B     	 ldr r3,.L282+4
 5735 0022 DA60     	 str r2,[r3,#12]
 844:../main.c     **** }
 5736              	 .loc 6 844 0
 5737 0024 BD46     	 mov sp,r7
 5738              	 
 5739 0026 80BD     	 pop {r7,pc}
 5740              	.L283:
 5741              	 .align 2
 5742              	.L282:
 5743 0028 00000000 	 .word NPfl
 5744 002c 00000000 	 .word NP
 5745 0030 00000000 	 .word NPfr
 5746 0034 00000000 	 .word NPrl
 5747 0038 00000000 	 .word NPrr
 5748              	 .cfi_endproc
 5749              	.LFE242:
 5751              	 .section .text.average,"ax",%progbits
 5752              	 .align 2
 5753              	 .global average
 5754              	 .code 16
 5755              	 .thumb_func
 5757              	average:
 5758              	.LFB243:
 845:../main.c     **** 
 846:../main.c     **** float average(float a[],int num_values) {
 5759              	 .loc 6 846 0
 5760              	 .cfi_startproc
 5761 0000 80B5     	 push {r7,lr}
 5762              	.LCFI82:
 5763              	 .cfi_def_cfa_offset 8
 5764              	 .cfi_offset 7,-8
 5765              	 .cfi_offset 14,-4
 5766 0002 84B0     	 sub sp,sp,#16
 5767              	.LCFI83:
 5768              	 .cfi_def_cfa_offset 24
 5769 0004 00AF     	 add r7,sp,#0
 5770              	.LCFI84:
 5771              	 .cfi_def_cfa_register 7
 5772 0006 7860     	 str r0,[r7,#4]
 5773 0008 3960     	 str r1,[r7]
 847:../main.c     ****     float sum = 0;
 5774              	 .loc 6 847 0
 5775 000a 0023     	 mov r3,#0
 5776 000c FB60     	 str r3,[r7,#12]
 848:../main.c     ****     int i;
 849:../main.c     ****     for(i = 0; i < num_values; i++){
 5777              	 .loc 6 849 0
 5778 000e 0023     	 mov r3,#0
 5779 0010 BB60     	 str r3,[r7,#8]
 5780 0012 0DE0     	 b .L285
 5781              	.L286:
 850:../main.c     ****         sum += a[i];
 5782              	 .loc 6 850 0 discriminator 3
 5783 0014 BB68     	 ldr r3,[r7,#8]
 5784 0016 9B00     	 lsl r3,r3,#2
 5785 0018 7A68     	 ldr r2,[r7,#4]
 5786 001a D318     	 add r3,r2,r3
 5787 001c 1B68     	 ldr r3,[r3]
 5788 001e F868     	 ldr r0,[r7,#12]
 5789 0020 191C     	 add r1,r3,#0
 5790 0022 FFF7FEFF 	 bl __aeabi_fadd
 5791 0026 031C     	 add r3,r0,#0
 5792 0028 FB60     	 str r3,[r7,#12]
 849:../main.c     ****         sum += a[i];
 5793              	 .loc 6 849 0 discriminator 3
 5794 002a BB68     	 ldr r3,[r7,#8]
 5795 002c 0133     	 add r3,r3,#1
 5796 002e BB60     	 str r3,[r7,#8]
 5797              	.L285:
 849:../main.c     ****         sum += a[i];
 5798              	 .loc 6 849 0 is_stmt 0 discriminator 1
 5799 0030 BA68     	 ldr r2,[r7,#8]
 5800 0032 3B68     	 ldr r3,[r7]
 5801 0034 9A42     	 cmp r2,r3
 5802 0036 EDDB     	 blt .L286
 851:../main.c     ****     }
 852:../main.c     ****     return sum / num_values;
 5803              	 .loc 6 852 0 is_stmt 1
 5804 0038 3868     	 ldr r0,[r7]
 5805 003a FFF7FEFF 	 bl __aeabi_i2f
 5806 003e 031C     	 add r3,r0,#0
 5807 0040 F868     	 ldr r0,[r7,#12]
 5808 0042 191C     	 add r1,r3,#0
 5809 0044 FFF7FEFF 	 bl __aeabi_fdiv
 5810 0048 031C     	 add r3,r0,#0
 853:../main.c     **** }
 5811              	 .loc 6 853 0
 5812 004a 181C     	 add r0,r3,#0
 5813 004c BD46     	 mov sp,r7
 5814 004e 04B0     	 add sp,sp,#16
 5815              	 
 5816 0050 80BD     	 pop {r7,pc}
 5817              	 .cfi_endproc
 5818              	.LFE243:
 5820 0052 C046     	 .section .text.mode_led,"ax",%progbits
 5821              	 .align 2
 5822              	 .global mode_led
 5823              	 .code 16
 5824              	 .thumb_func
 5826              	mode_led:
 5827              	.LFB244:
 854:../main.c     **** 
 855:../main.c     **** void mode_led(uint8_t var){
 5828              	 .loc 6 855 0
 5829              	 .cfi_startproc
 5830 0000 80B5     	 push {r7,lr}
 5831              	.LCFI85:
 5832              	 .cfi_def_cfa_offset 8
 5833              	 .cfi_offset 7,-8
 5834              	 .cfi_offset 14,-4
 5835 0002 82B0     	 sub sp,sp,#8
 5836              	.LCFI86:
 5837              	 .cfi_def_cfa_offset 16
 5838 0004 00AF     	 add r7,sp,#0
 5839              	.LCFI87:
 5840              	 .cfi_def_cfa_register 7
 5841 0006 021C     	 mov r2,r0
 5842 0008 FB1D     	 add r3,r7,#7
 5843 000a 1A70     	 strb r2,[r3]
 856:../main.c     **** 	if(CHECK_BIT(var,0)){
 5844              	 .loc 6 856 0
 5845 000c FB1D     	 add r3,r7,#7
 5846 000e 1B78     	 ldrb r3,[r3]
 5847 0010 0122     	 mov r2,#1
 5848 0012 1340     	 and r3,r2
 5849 0014 04D0     	 beq .L289
 857:../main.c     **** 		DIGITAL_IO_SetOutputLow(&MODE_001);
 5850              	 .loc 6 857 0
 5851 0016 174B     	 ldr r3,.L295
 5852 0018 181C     	 mov r0,r3
 5853 001a FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 5854 001e 03E0     	 b .L290
 5855              	.L289:
 858:../main.c     **** 	}
 859:../main.c     **** 	else{
 860:../main.c     **** 		DIGITAL_IO_SetOutputHigh(&MODE_001);
 5856              	 .loc 6 860 0
 5857 0020 144B     	 ldr r3,.L295
 5858 0022 181C     	 mov r0,r3
 5859 0024 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 5860              	.L290:
 861:../main.c     **** 	}
 862:../main.c     **** 
 863:../main.c     **** 	if(CHECK_BIT(var,1)){
 5861              	 .loc 6 863 0
 5862 0028 FB1D     	 add r3,r7,#7
 5863 002a 1B78     	 ldrb r3,[r3]
 5864 002c 5B08     	 lsr r3,r3,#1
 5865 002e DBB2     	 uxtb r3,r3
 5866 0030 1A1C     	 mov r2,r3
 5867 0032 0123     	 mov r3,#1
 5868 0034 1340     	 and r3,r2
 5869 0036 04D0     	 beq .L291
 864:../main.c     **** 		DIGITAL_IO_SetOutputLow(&MODE_010);
 5870              	 .loc 6 864 0
 5871 0038 0F4B     	 ldr r3,.L295+4
 5872 003a 181C     	 mov r0,r3
 5873 003c FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 5874 0040 03E0     	 b .L292
 5875              	.L291:
 865:../main.c     **** 	}
 866:../main.c     **** 	else{
 867:../main.c     **** 		DIGITAL_IO_SetOutputHigh(&MODE_010);
 5876              	 .loc 6 867 0
 5877 0042 0D4B     	 ldr r3,.L295+4
 5878 0044 181C     	 mov r0,r3
 5879 0046 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 5880              	.L292:
 868:../main.c     **** 	}
 869:../main.c     **** 
 870:../main.c     **** 	if(CHECK_BIT(var,2)){
 5881              	 .loc 6 870 0
 5882 004a FB1D     	 add r3,r7,#7
 5883 004c 1B78     	 ldrb r3,[r3]
 5884 004e 9B08     	 lsr r3,r3,#2
 5885 0050 DBB2     	 uxtb r3,r3
 5886 0052 1A1C     	 mov r2,r3
 5887 0054 0123     	 mov r3,#1
 5888 0056 1340     	 and r3,r2
 5889 0058 04D0     	 beq .L293
 871:../main.c     **** 		DIGITAL_IO_SetOutputLow(&MODE_100);
 5890              	 .loc 6 871 0
 5891 005a 084B     	 ldr r3,.L295+8
 5892 005c 181C     	 mov r0,r3
 5893 005e FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 5894 0062 03E0     	 b .L288
 5895              	.L293:
 872:../main.c     **** 	}
 873:../main.c     **** 	else{
 874:../main.c     **** 		DIGITAL_IO_SetOutputHigh(&MODE_100);
 5896              	 .loc 6 874 0
 5897 0064 054B     	 ldr r3,.L295+8
 5898 0066 181C     	 mov r0,r3
 5899 0068 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 5900              	.L288:
 875:../main.c     **** 	}
 876:../main.c     **** }
 5901              	 .loc 6 876 0
 5902 006c BD46     	 mov sp,r7
 5903 006e 02B0     	 add sp,sp,#8
 5904              	 
 5905 0070 80BD     	 pop {r7,pc}
 5906              	.L296:
 5907 0072 C046     	 .align 2
 5908              	.L295:
 5909 0074 00000000 	 .word MODE_001
 5910 0078 00000000 	 .word MODE_010
 5911 007c 00000000 	 .word MODE_100
 5912              	 .cfi_endproc
 5913              	.LFE244:
 5915              	 .text
 5916              	.Letext0:
 5917              	 .file 7 "c:\\dave\\dave-ide-4.4.2-64bit\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 5918              	 .file 8 "c:\\dave\\dave-ide-4.4.2-64bit\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 5919              	 .file 9 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/CMSIS/Infineon/XMC1400_series/Include/XMC1400.h"
 5920              	 .file 10 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc/xmc1_scu.h"
 5921              	 .file 11 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc/xmc_can.h"
 5922              	 .file 12 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/GLOBAL_CAN/global_can.h"
 5923              	 .file 13 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc/xmc1_gpio.h"
 5924              	 .file 14 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/CAN_NODE/can_node.h"
 5925              	 .file 15 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc/xmc_ccu4.h"
 5926              	 .file 16 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/GLOBAL_CCU4/global_ccu4.h"
 5927              	 .file 17 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PWM/pwm.h"
 5928              	 .file 18 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/CAPTURE/capture.h"
 5929              	 .file 19 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc/xmc_eru.h"
 5930              	 .file 20 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DAVE.h"
 5931              	 .file 21 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/CMSIS/Include/cmsis_gcc.h"
 5932              	 .file 22 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/CMSIS/Infineon/XMC1400_series/Include/system_XMC1400.h"
 5933              	 .file 23 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/CAN_NODE/can_node_extern.h"
 5934              	 .file 24 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PWM/PWM_Extern.h"
 5935              	 .file 25 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/CAPTURE/capture_extern.h"
 5936              	 .file 26 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO/digital_io_extern.h"
 5937              	 .file 27 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT/pin_interrupt_extern.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
    {standard input}:18     .text.XMC_GPIO_SetOutputHigh:00000000 $t
    {standard input}:22     .text.XMC_GPIO_SetOutputHigh:00000000 XMC_GPIO_SetOutputHigh
    {standard input}:58     .text.XMC_GPIO_SetOutputLow:00000000 $t
    {standard input}:62     .text.XMC_GPIO_SetOutputLow:00000000 XMC_GPIO_SetOutputLow
    {standard input}:98     .text.XMC_GPIO_GetInput:00000000 $t
    {standard input}:102    .text.XMC_GPIO_GetInput:00000000 XMC_GPIO_GetInput
    {standard input}:140    .text.DIGITAL_IO_SetOutputHigh:00000000 $t
    {standard input}:144    .text.DIGITAL_IO_SetOutputHigh:00000000 DIGITAL_IO_SetOutputHigh
    {standard input}:178    .text.DIGITAL_IO_SetOutputLow:00000000 $t
    {standard input}:182    .text.DIGITAL_IO_SetOutputLow:00000000 DIGITAL_IO_SetOutputLow
    {standard input}:215    .text.PIN_INTERRUPT_GetPinValue:00000000 $t
    {standard input}:219    .text.PIN_INTERRUPT_GetPinValue:00000000 PIN_INTERRUPT_GetPinValue
    {standard input}:255    .text.XMC_WDT_Start:00000000 $t
    {standard input}:259    .text.XMC_WDT_Start:00000000 XMC_WDT_Start
    {standard input}:286    .text.XMC_WDT_Start:00000014 $d
    {standard input}:291    .text.XMC_WDT_Service:00000000 $t
    {standard input}:295    .text.XMC_WDT_Service:00000000 XMC_WDT_Service
    {standard input}:318    .text.XMC_WDT_Service:00000010 $d
    {standard input}:324    .text.XMC_WDT_ClearAlarm:00000000 $t
    {standard input}:328    .text.XMC_WDT_ClearAlarm:00000000 XMC_WDT_ClearAlarm
    {standard input}:351    .text.XMC_WDT_ClearAlarm:00000010 $d
    {standard input}:356    .text.WATCHDOG_Start:00000000 $t
    {standard input}:360    .text.WATCHDOG_Start:00000000 WATCHDOG_Start
    {standard input}:383    .text.WATCHDOG_Service:00000000 $t
    {standard input}:387    .text.WATCHDOG_Service:00000000 WATCHDOG_Service
    {standard input}:409    .text.WATCHDOG_ClearAlarm:00000000 $t
    {standard input}:413    .text.WATCHDOG_ClearAlarm:00000000 WATCHDOG_ClearAlarm
    {standard input}:439    .data.NP:00000000 NP
    {standard input}:436    .data.NP:00000000 $d
    {standard input}:449    .data.NPfl:00000000 NPfl
    {standard input}:446    .data.NPfl:00000000 $d
    {standard input}:456    .data.NPfr:00000000 NPfr
    {standard input}:453    .data.NPfr:00000000 $d
    {standard input}:463    .data.NPrl:00000000 NPrl
    {standard input}:460    .data.NPrl:00000000 $d
    {standard input}:470    .data.NPrr:00000000 NPrr
    {standard input}:467    .data.NPrr:00000000 $d
    {standard input}:476    .data.RC_controll:00000000 RC_controll
    {standard input}:482    .data.Steering_mode:00000000 Steering_mode
    {standard input}:488    .bss.New_Input:00000000 New_Input
    {standard input}:489    .bss.New_Input:00000000 $d
    {standard input}:495    .bss.NO_New_Input_counter:00000000 NO_New_Input_counter
    {standard input}:492    .bss.NO_New_Input_counter:00000000 $d
    {standard input}:502    .bss.Speeds_int16_r:00000000 Speeds_int16_r
    {standard input}:499    .bss.Speeds_int16_r:00000000 $d
    {standard input}:509    .bss.CAN_RX_0:00000000 CAN_RX_0
    {standard input}:506    .bss.CAN_RX_0:00000000 $d
                            *COM*:00000001 init_status
    {standard input}:517    .bss.CAN_OK:00000000 CAN_OK
    {standard input}:514    .bss.CAN_OK:00000000 $d
    {standard input}:524    .bss.Inverters_CAN_state:00000000 Inverters_CAN_state
    {standard input}:521    .bss.Inverters_CAN_state:00000000 $d
    {standard input}:531    .bss.CAN_10ms_counter:00000000 CAN_10ms_counter
    {standard input}:528    .bss.CAN_10ms_counter:00000000 $d
    {standard input}:537    .bss.reset_distance:00000000 reset_distance
    {standard input}:538    .bss.reset_distance:00000000 $d
    {standard input}:544    .bss.speed_fl_act:00000000 speed_fl_act
    {standard input}:541    .bss.speed_fl_act:00000000 $d
    {standard input}:551    .bss.speed_fr_act:00000000 speed_fr_act
    {standard input}:548    .bss.speed_fr_act:00000000 $d
    {standard input}:558    .bss.speed_rl_act:00000000 speed_rl_act
    {standard input}:555    .bss.speed_rl_act:00000000 $d
    {standard input}:565    .bss.speed_rr_act:00000000 speed_rr_act
    {standard input}:562    .bss.speed_rr_act:00000000 $d
    {standard input}:572    .bss.distance_fl_act:00000000 distance_fl_act
    {standard input}:569    .bss.distance_fl_act:00000000 $d
    {standard input}:579    .bss.distance_fr_act:00000000 distance_fr_act
    {standard input}:576    .bss.distance_fr_act:00000000 $d
    {standard input}:586    .bss.distance_rl_act:00000000 distance_rl_act
    {standard input}:583    .bss.distance_rl_act:00000000 $d
    {standard input}:593    .bss.distance_rr_act:00000000 distance_rr_act
    {standard input}:590    .bss.distance_rr_act:00000000 $d
    {standard input}:599    .bss.CAN_RX_Inverter_count:00000000 CAN_RX_Inverter_count
    {standard input}:600    .bss.CAN_RX_Inverter_count:00000000 $d
    {standard input}:605    .bss.CAN_state_Ultrasonic:00000000 CAN_state_Ultrasonic
    {standard input}:606    .bss.CAN_state_Ultrasonic:00000000 $d
    {standard input}:612    .bss.Ultrasonic_cm_C:00000000 Ultrasonic_cm_C
    {standard input}:609    .bss.Ultrasonic_cm_C:00000000 $d
    {standard input}:619    .bss.Ultrasonic_cm_L:00000000 Ultrasonic_cm_L
    {standard input}:616    .bss.Ultrasonic_cm_L:00000000 $d
    {standard input}:626    .bss.Ultrasonic_cm_R:00000000 Ultrasonic_cm_R
    {standard input}:623    .bss.Ultrasonic_cm_R:00000000 $d
    {standard input}:633    .data.ALPHA_ULTARSONIC:00000000 ALPHA_ULTARSONIC
    {standard input}:630    .data.ALPHA_ULTARSONIC:00000000 $d
    {standard input}:639    .bss.obstructed_L:00000000 obstructed_L
    {standard input}:640    .bss.obstructed_L:00000000 $d
    {standard input}:645    .bss.obstructed_R:00000000 obstructed_R
    {standard input}:646    .bss.obstructed_R:00000000 $d
    {standard input}:652    .data.Fil_Ultrasonic_m_C:00000000 Fil_Ultrasonic_m_C
    {standard input}:649    .data.Fil_Ultrasonic_m_C:00000000 $d
    {standard input}:659    .data.Fil_Ultrasonic_m_L:00000000 Fil_Ultrasonic_m_L
    {standard input}:656    .data.Fil_Ultrasonic_m_L:00000000 $d
    {standard input}:666    .data.Fil_Ultrasonic_m_R:00000000 Fil_Ultrasonic_m_R
    {standard input}:663    .data.Fil_Ultrasonic_m_R:00000000 $d
    {standard input}:673    .data.Ultrsonic_data_invaildcounter:00000000 Ultrsonic_data_invaildcounter
    {standard input}:670    .data.Ultrsonic_data_invaildcounter:00000000 $d
    {standard input}:682    .data.Obstacel_F:00000000 Obstacel_F
    {standard input}:679    .data.Obstacel_F:00000000 $d
    {standard input}:690    .data.Obstacel_L:00000000 Obstacel_L
    {standard input}:687    .data.Obstacel_L:00000000 $d
    {standard input}:698    .data.Obstacel_R:00000000 Obstacel_R
    {standard input}:695    .data.Obstacel_R:00000000 $d
    {standard input}:706    .bss.obstacel_F_x:00000000 obstacel_F_x
    {standard input}:703    .bss.obstacel_F_x:00000000 $d
    {standard input}:713    .bss.obstacel_L_x:00000000 obstacel_L_x
    {standard input}:710    .bss.obstacel_L_x:00000000 $d
    {standard input}:720    .bss.obstacel_L_y:00000000 obstacel_L_y
    {standard input}:717    .bss.obstacel_L_y:00000000 $d
    {standard input}:727    .bss.obstacel_R_x:00000000 obstacel_R_x
    {standard input}:724    .bss.obstacel_R_x:00000000 $d
    {standard input}:734    .bss.obstacel_R_y:00000000 obstacel_R_y
    {standard input}:731    .bss.obstacel_R_y:00000000 $d
    {standard input}:741    .bss.Obstacel_valid:00000000 Obstacel_valid
    {standard input}:738    .bss.Obstacel_valid:00000000 $d
    {standard input}:748    .bss.avg_Speeds:00000000 avg_Speeds
    {standard input}:745    .bss.avg_Speeds:00000000 $d
    {standard input}:755    .bss.act_trajctory_x:00000000 act_trajctory_x
    {standard input}:752    .bss.act_trajctory_x:00000000 $d
    {standard input}:762    .bss.act_trajctory_y:00000000 act_trajctory_y
    {standard input}:759    .bss.act_trajctory_y:00000000 $d
    {standard input}:768    .bss.RC_Signal_OK:00000000 RC_Signal_OK
    {standard input}:769    .bss.RC_Signal_OK:00000000 $d
    {standard input}:774    .bss.RC_Signal_not_OK_counter:00000000 RC_Signal_not_OK_counter
    {standard input}:775    .bss.RC_Signal_not_OK_counter:00000000 $d
    {standard input}:781    .bss.captured_time_Steering:00000000 captured_time_Steering
    {standard input}:778    .bss.captured_time_Steering:00000000 $d
    {standard input}:788    .bss.captured_time_Speed:00000000 captured_time_Speed
    {standard input}:785    .bss.captured_time_Speed:00000000 $d
    {standard input}:794    .bss.RC_no_Speed_data_counter:00000000 RC_no_Speed_data_counter
    {standard input}:795    .bss.RC_no_Speed_data_counter:00000000 $d
    {standard input}:800    .bss.RC_no_Steering_data_counter:00000000 RC_no_Steering_data_counter
    {standard input}:801    .bss.RC_no_Steering_data_counter:00000000 $d
    {standard input}:807    .bss.RC_Speed:00000000 RC_Speed
    {standard input}:804    .bss.RC_Speed:00000000 $d
    {standard input}:814    .bss.RC_Steering:00000000 RC_Steering
    {standard input}:811    .bss.RC_Steering:00000000 $d
    {standard input}:821    .data.RC_Speed_ns_to_mps:00000000 RC_Speed_ns_to_mps
    {standard input}:818    .data.RC_Speed_ns_to_mps:00000000 $d
    {standard input}:828    .data.RC_Steering_ns_to_deg:00000000 RC_Steering_ns_to_deg
    {standard input}:825    .data.RC_Steering_ns_to_deg:00000000 $d
    {standard input}:835    .bss.RC_gear_100us_counter:00000000 RC_gear_100us_counter
    {standard input}:832    .bss.RC_gear_100us_counter:00000000 $d
    {standard input}:842    .bss.RC_AUX1_100us_counter:00000000 RC_AUX1_100us_counter
    {standard input}:839    .bss.RC_AUX1_100us_counter:00000000 $d
    {standard input}:848    .data.RC_Gear_state:00000000 RC_Gear_state
    {standard input}:854    .data.RC_AUX1_state:00000000 RC_AUX1_state
    {standard input}:860    .data.RC_Gear_duty:00000000 RC_Gear_duty
    {standard input}:866    .data.RC_Gear_duty_OLD:00000000 RC_Gear_duty_OLD
    {standard input}:872    .data.RC_AUX1_duty:00000000 RC_AUX1_duty
    {standard input}:878    .data.RC_Speed_Stop:00000000 RC_Speed_Stop
    {standard input}:885    .bss.Steering_direction:00000000 Steering_direction
    {standard input}:882    .bss.Steering_direction:00000000 $d
    {standard input}:892    .bss.Driving_speed:00000000 Driving_speed
    {standard input}:889    .bss.Driving_speed:00000000 $d
                            *COM*:00000004 R_Turn
                            *COM*:00000004 Speed_ratio
    {standard input}:901    .bss.speed_fl:00000000 speed_fl
    {standard input}:898    .bss.speed_fl:00000000 $d
    {standard input}:908    .bss.speed_fr:00000000 speed_fr
    {standard input}:905    .bss.speed_fr:00000000 $d
    {standard input}:915    .bss.speed_rl:00000000 speed_rl
    {standard input}:912    .bss.speed_rl:00000000 $d
    {standard input}:922    .bss.speed_rr:00000000 speed_rr
    {standard input}:919    .bss.speed_rr:00000000 $d
    {standard input}:929    .bss.angle_fl:00000000 angle_fl
    {standard input}:926    .bss.angle_fl:00000000 $d
    {standard input}:936    .bss.angle_fr:00000000 angle_fr
    {standard input}:933    .bss.angle_fr:00000000 $d
    {standard input}:943    .bss.angle_rl:00000000 angle_rl
    {standard input}:940    .bss.angle_rl:00000000 $d
    {standard input}:950    .bss.angle_rr:00000000 angle_rr
    {standard input}:947    .bss.angle_rr:00000000 $d
    {standard input}:957    .bss.Speeds:00000000 Speeds
    {standard input}:954    .bss.Speeds:00000000 $d
    {standard input}:964    .bss.Steering_Angles:00000000 Steering_Angles
    {standard input}:961    .bss.Steering_Angles:00000000 $d
    {standard input}:971    .bss.Servo_PWMs:00000000 Servo_PWMs
    {standard input}:968    .bss.Servo_PWMs:00000000 $d
    {standard input}:978    .bss.Inveter_CAN_OK:00000000 Inveter_CAN_OK
    {standard input}:975    .bss.Inveter_CAN_OK:00000000 $d
    {standard input}:985    .bss.Actual_Speeds:00000000 Actual_Speeds
    {standard input}:982    .bss.Actual_Speeds:00000000 $d
    {standard input}:992    .bss.Actual_Distance:00000000 Actual_Distance
    {standard input}:989    .bss.Actual_Distance:00000000 $d
    {standard input}:995    .text.main:00000000 $t
    {standard input}:1000   .text.main:00000000 main
    {standard input}:1057   .text.main:00000040 $d
    {standard input}:1076   .text.Steering_Function:00000000 $t
    {standard input}:1081   .text.Steering_Function:00000000 Steering_Function
    {standard input}:1216   .rodata.Steering_Function:00000000 $d
    {standard input}:1481   .text.Steering_Function:000002f0 $d
    {standard input}:1508   .text.Steering_Function:00000354 $t
    {standard input}:1932   .text.Steering_Function:000006b8 $d
    {standard input}:1960   .text.Steering_Function:00000720 $t
    {standard input}:2400   .text.Steering_Function:00000aa0 $d
    {standard input}:2430   .text.Steering_Function:00000b10 $t
    {standard input}:2850   .text.Steering_Function:00000ddc $d
    {standard input}:2882   .text.IRQ4_Handler:00000000 $t
    {standard input}:2887   .text.IRQ4_Handler:00000000 IRQ4_Handler
    {standard input}:3046   .text.Ultra_sonic_filter:00000000 Ultra_sonic_filter
    {standard input}:3029   .text.IRQ4_Handler:000000e4 $d
    {standard input}:3041   .text.Ultra_sonic_filter:00000000 $t
    {standard input}:3701   .text.Exp_moving_average:00000000 Exp_moving_average
    {standard input}:3542   .text.Ultrasoinc_Obstructet_Test:00000000 Ultrasoinc_Obstructet_Test
    {standard input}:3512   .text.Ultra_sonic_filter:00000354 $d
    {standard input}:3537   .text.Ultrasoinc_Obstructet_Test:00000000 $t
    {standard input}:3690   .text.Ultrasoinc_Obstructet_Test:00000104 $d
    {standard input}:3696   .text.Exp_moving_average:00000000 $t
    {standard input}:3749   .text.IRQ3_Handler:00000000 $t
    {standard input}:3754   .text.IRQ3_Handler:00000000 IRQ3_Handler
    {standard input}:3807   .text.CAN_RX_Inverter_Read_Data:00000000 CAN_RX_Inverter_Read_Data
    {standard input}:3796   .text.IRQ3_Handler:00000030 $d
    {standard input}:3802   .text.CAN_RX_Inverter_Read_Data:00000000 $t
    {standard input}:4178   .text.CAN_RX_Inverter_Read_Data:0000026c $d
    {standard input}:4196   .text.Watchdog_Handler:00000000 $t
    {standard input}:4201   .text.Watchdog_Handler:00000000 Watchdog_Handler
    {standard input}:4226   .text.Watchdog_Handler:00000014 $d
    {standard input}:4231   .text.CAN_reset_distance:00000000 $t
    {standard input}:4236   .text.CAN_reset_distance:00000000 CAN_reset_distance
    {standard input}:4314   .text.CAN_reset_distance:00000070 $d
    {standard input}:4320   .text.CAN_send_Speeds:00000000 $t
    {standard input}:4325   .text.CAN_send_Speeds:00000000 CAN_send_Speeds
    {standard input}:4418   .text.CAN_send_Speeds:000000a8 $d
    {standard input}:4424   .text.IRQ8_Handler:00000000 $t
    {standard input}:4429   .text.IRQ8_Handler:00000000 IRQ8_Handler
    {standard input}:4474   .text.IRQ8_Handler:00000030 $d
    {standard input}:4483   .text.Steering_set_Angles:00000000 $t
    {standard input}:4488   .text.Steering_set_Angles:00000000 Steering_set_Angles
    {standard input}:4645   .text.Steering_set_Angles:00000104 $d
    {standard input}:4659   .text.RC_Recive:00000000 $t
    {standard input}:4664   .text.RC_Recive:00000000 RC_Recive
    {standard input}:4948   .text.RC_Recive:000001e8 $d
    {standard input}:4974   .text.IRQ12_Handler:00000000 $t
    {standard input}:4979   .text.IRQ12_Handler:00000000 IRQ12_Handler
    {standard input}:5105   .text.IRQ12_Handler:000000ac $d
    {standard input}:5116   .text.IRQ6_Handler:00000000 $t
    {standard input}:5121   .text.IRQ6_Handler:00000000 IRQ6_Handler
    {standard input}:5224   .text.IRQ6_Handler:00000084 $d
    {standard input}:5234   .rodata:00000000 $d
    {standard input}:5241   .text.IRQ7_Handler:00000000 $t
    {standard input}:5246   .text.IRQ7_Handler:00000000 IRQ7_Handler
    {standard input}:5826   .text.mode_led:00000000 mode_led
    {standard input}:5425   .text.Collision_voidance:00000000 Collision_voidance
    {standard input}:5404   .text.IRQ7_Handler:000000ec $d
    {standard input}:5420   .text.Collision_voidance:00000000 $t
    {standard input}:5757   .text.average:00000000 average
    {standard input}:5467   .rodata.Collision_voidance:00000000 $d
    {standard input}:5680   .text.Collision_voidance:000001a8 $d
    {standard input}:5699   .text.Servo_NP_setting:00000000 $t
    {standard input}:5704   .text.Servo_NP_setting:00000000 Servo_NP_setting
    {standard input}:5743   .text.Servo_NP_setting:00000028 $d
    {standard input}:5752   .text.average:00000000 $t
    {standard input}:5821   .text.mode_led:00000000 $t
    {standard input}:5909   .text.mode_led:00000074 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
DAVE_Init
CAN_NODE_Init
CAN_NODE_0
__aeabi_fcmpgt
__aeabi_fcmplt
__aeabi_f2d
__aeabi_dcmplt
__aeabi_dcmpgt
__aeabi_ddiv
__aeabi_d2f
__aeabi_dadd
__aeabi_dmul
__aeabi_dsub
__aeabi_fmul
__aeabi_fdiv
tan
atan
CAN_NODE_MO_Receive
__aeabi_i2f
cos
sin
__aeabi_fsub
__aeabi_fcmple
__aeabi_fadd
WATCHDOG_LED_BLUE
LED_CAN_ERROR
CAN_NODE_MO_UpdateData
CAN_NODE_MO_Transmit
__aeabi_f2iz
__aeabi_f2uiz
PWM_SetDutyCycle
PWM_servo_fl
PWM_servo_fr
PWM_servo_rl
PWM_servo_rr
__aeabi_ui2d
CAPTURE_Start
CAPTURE_GetCapturedTimeInNanoSec
CAPTURE_RC_Steering
CAPTURE_RC_Speed
RC_no_data_LED
RC_Connected
RC_AUX1
memcpy
CALC_TIME_INDICATOR
LED_COLLISION_AVOID
MODE_001
MODE_010
MODE_100
