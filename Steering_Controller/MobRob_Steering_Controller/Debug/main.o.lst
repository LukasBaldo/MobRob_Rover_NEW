   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,6
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "main.c"
  14              	 .text
  15              	.Ltext0:
  16              	 .cfi_sections .debug_frame
  17              	 .section .text.XMC_GPIO_SetOutputHigh,"ax",%progbits
  18              	 .align 2
  19              	 .code 16
  20              	 .thumb_func
  22              	XMC_GPIO_SetOutputHigh:
  23              	.LFB122:
  24              	 .file 1 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc/xmc_gpio.h"
   1:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
   2:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @file xmc_gpio.h
   3:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @date 2015-06-20
   4:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   5:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @cond
   6:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *****************************************************************************
   7:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   9:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * All rights reserved.
  11:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  12:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  14:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Permission is hereby granted, free of charge, to any person or organization
  15:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * obtaining a copy of the software and accompanying documentation covered by
  16:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * do so, all subject to the following:
  20:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  21:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * The copyright notices in the Software and this entire statement, including
  22:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * the above license grant, this restriction and the following disclaimer,
  23:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * must be included in all copies of the Software, in whole or in part, and
  24:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * all derivative works of the Software, unless such copies or derivative
  25:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * works are solely in the form of machine-executable object code generated by
  26:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * a source language processor.
  27:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  28:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * DEALINGS IN THE SOFTWARE.
  35:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  36:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * To improve the quality of the software, users are encouraged to share
  37:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * at XMCSupport@infineon.com.
  39:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *****************************************************************************
  40:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  41:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Change History
  42:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * --------------
  43:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  44:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-02-20:
  45:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Initial draft<br>
  46:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Documentation improved <br>
  47:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  48:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-06-20:
  49:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  50:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  51:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @endcond
  52:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  53:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  54:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
  55:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #ifndef XMC_GPIO_H
  56:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_H
  57:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
  58:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  59:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * HEADER FILES
  60:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  61:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
  62:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc_common.h"
  63:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
  64:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  65:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup XMClib XMC Peripheral Library
  66:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @{
  67:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  68:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
  69:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  70:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup GPIO
  71:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @brief General Purpose Input Output (GPIO) driver for the XMC microcontroller family.
  72:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  73:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * GPIO driver provide a generic and very flexible software interface for all standard digital I/O 
  74:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Each port slice has individual interfaces for the operation as General Purpose I/O and it furthe
  75:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * connectivity to the on-chip periphery and the control for the pad characteristics.
  76:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  77:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * The driver is divided into Input and Output mode.
  78:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  79:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Input mode features:
  80:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Configuration structure XMC_GPIO_CONFIG_t and initialization function XMC_GPIO_Init()
  81:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of weak pull-up or pull-down device. Configuration structure XMC_GPIO_MO
  82:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
  83:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of input hysteresis. XMC_GPIO_SetInputHysteresis()
  84:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  85:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  86:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  87:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Output mode features:
  88:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of push pull/open drain and Alternate output. Configuration structure XM
  89:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
  90:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of pad driver strength. Configuration structure XMC_GPIO_OUTPUT_STRENGTH
  91:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  92:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  93:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of initial output level. Configuration structure XMC_GPIO_OUTPUT_LEVEL_t
  94:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  95:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *@{
  96:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  97:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
  98:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  99:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * MACROS
 100:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 101:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 102:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Pos PORT0_IOCR0_PC0_Pos
 103:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Msk PORT0_IOCR0_PC0_Msk
 104:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 105:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Size 				(8U)
 106:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 107:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 108:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_OUTPUT_LEVEL(level) ((level == XMC_GPIO_OUTPUT_LEVEL_LOW) || \
 109:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****                                             (level == XMC_GPIO_OUTPUT_LEVEL_HIGH))
 110:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 111:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_HWCTRL(hwctrl) ((hwctrl == XMC_GPIO_HWCTRL_DISABLED) || \
 112:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL1) || \
 113:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL2))
 114:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 115:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 116:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * ENUMS
 117:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 118:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 119:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 120:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 121:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines output level of a pin. Use type \a XMC_GPIO_OUTPUT_LEVEL_t for this enum.
 122:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 123:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_OUTPUT_LEVEL
 124:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** {
 125:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_LOW  = 0x10000U, /**<  Reset bit */
 126:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_HIGH = 0x1U, 	/**< Set bit  */
 127:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_OUTPUT_LEVEL_t;
 128:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 129:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 130:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines direct hardware control characteristics of the pin . Use type \a XMC_GPIO_HWCTRL_t for t
 131:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 132:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_HWCTRL
 133:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** {
 134:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_DISABLED     = 0x0U, /**<  Software control only */
 135:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL1  = 0x1U, /**<  HWI0/HWO0 control path can override the software confi
 136:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL2  = 0x2U  /**<  HWI1/HWO1 control path can override the software confi
 137:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_HWCTRL_t;
 138:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 139:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 140:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * DEVICE FAMILY EXTENSIONS
 141:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 142:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 143:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #if UC_FAMILY == XMC1
 144:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc1_gpio.h"
 145:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #elif UC_FAMILY == XMC4
 146:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc4_gpio.h"
 147:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #else
 148:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #error "xmc_gpio.h: family device not supported"
 149:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 150:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 151:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 152:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * API PROTOTYPES
 153:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 154:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 155:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #ifdef __cplusplus
 156:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** extern "C" {
 157:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 158:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 159:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 160:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 161:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	  Constant pointer pointing to GPIO port, to access port registers like Pn_OUT,Pn_O
 162:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	  Port pin number.
 163:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  config GPIO configuration data structure. Refer data structure @ref XMC_GPIO_CONFIG_t fo
 164:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 165:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 166:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 167:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 168:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
 169:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,hysteresis, push pull
 170:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for a selected \a po
 171:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \a config provides selected I/O settings. It configures hardware registers Pn_IOCR,Pn_OUT, Pn_OM
 172:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 173:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
 174:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,push pull /open drain
 175:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for selected \a port
 176:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * It configures hardware registers Pn_IOCR,Pn_OUT,Pn_OMR,Pn_PDISC and Pn_PDR.\n
 177:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 178:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 179:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 180:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 181:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 182:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 183:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * This API is called in definition of DAVE_init by code generation and therefore should not be exp
 184:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * for the normal operation. Use other APIs only after DAVE_init is called successfully (returns DA
 185:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 186:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 187:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 188:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 189:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 190:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_Init(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_CONFIG_t *const c
 191:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 192:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 193:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 194:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	Constant pointer pointing to GPIO port, to access hardware register Pn_IOCR.
 195:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 196:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  mode input / output functionality selection. Refer @ref XMC_GPIO_MODE_t for valid values
 197:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 198:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 199:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 200:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 201:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets digital input and output driver functionality and characteristics of a GPIO port pin. It co
 202:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * registers Pn_IOCR. \a mode is initially configured during initialization in XMC_GPIO_Init(). Cal
 203:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * the port direction functionality as needed later in the program.
 204:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 205:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 206:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 207:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 208:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 209:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 210:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_SetMode(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_MODE_t mode);
 211:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 212:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 213:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 214:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 215:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	 Constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 216:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	 Port pin number.
 217:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  level output level selection. Refer @ref XMC_GPIO_OUTPUT_LEVEL_t for valid values.
 218:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 219:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 220:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 221:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 222:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Set port pin output level to high or low.It configures hardware registers Pn_OMR.\a level is ini
 223:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * configured during initialization in XMC_GPIO_Init(). Call this API to alter output level as need
 224:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 225:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 226:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 227:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 228:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 229:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 230:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 231:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 232:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 233:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 234:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLevel(XMC_GPIO_PORT_t *const port, const uint8_t pin, const 
 235:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** {
 236:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 237:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid output level", XMC_GPIO_CHECK_OUTPUT_LEVEL(level));
 238:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 239:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)level << pin;
 240:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** }
 241:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 242:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 243:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 244:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 245:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 246:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 247:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 248:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 249:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 250:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *  Sets port pin output to high. It configures hardware registers Pn_OMR.
 251:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 252:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *  \par<b>Related APIs:</b><BR>
 253:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputLow()
 254:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 255:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 256:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().\n
 257:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 258:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 259:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 260:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 261:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputHigh(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 262:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** {
  25              	 .loc 1 262 0
  26              	 .cfi_startproc
  27 0000 80B5     	 push {r7,lr}
  28              	.LCFI0:
  29              	 .cfi_def_cfa_offset 8
  30              	 .cfi_offset 7,-8
  31              	 .cfi_offset 14,-4
  32 0002 82B0     	 sub sp,sp,#8
  33              	.LCFI1:
  34              	 .cfi_def_cfa_offset 16
  35 0004 00AF     	 add r7,sp,#0
  36              	.LCFI2:
  37              	 .cfi_def_cfa_register 7
  38 0006 7860     	 str r0,[r7,#4]
  39 0008 0A1C     	 mov r2,r1
  40 000a FB1C     	 add r3,r7,#3
  41 000c 1A70     	 strb r2,[r3]
 263:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputHigh: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 264:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 265:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)0x1U << pin;
  42              	 .loc 1 265 0
  43 000e FB1C     	 add r3,r7,#3
  44 0010 1B78     	 ldrb r3,[r3]
  45 0012 0122     	 mov r2,#1
  46 0014 9A40     	 lsl r2,r2,r3
  47 0016 7B68     	 ldr r3,[r7,#4]
  48 0018 5A60     	 str r2,[r3,#4]
 266:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** }
  49              	 .loc 1 266 0
  50 001a BD46     	 mov sp,r7
  51 001c 02B0     	 add sp,sp,#8
  52              	 
  53 001e 80BD     	 pop {r7,pc}
  54              	 .cfi_endproc
  55              	.LFE122:
  57              	 .section .text.XMC_GPIO_SetOutputLow,"ax",%progbits
  58              	 .align 2
  59              	 .code 16
  60              	 .thumb_func
  62              	XMC_GPIO_SetOutputLow:
  63              	.LFB123:
 267:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 268:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 269:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 270:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 271:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	port pin number.
 272:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 273:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return  None
 274:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 275:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Description:</b><br>
 276:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets port pin output to low. It configures hardware registers Pn_OMR.\n
 277:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 278:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>>
 279:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh()
 280:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 281:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Note:</b><br>
 282:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 283:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 284:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 285:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 286:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 287:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLow(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 288:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** {
  64              	 .loc 1 288 0
  65              	 .cfi_startproc
  66 0000 80B5     	 push {r7,lr}
  67              	.LCFI3:
  68              	 .cfi_def_cfa_offset 8
  69              	 .cfi_offset 7,-8
  70              	 .cfi_offset 14,-4
  71 0002 82B0     	 sub sp,sp,#8
  72              	.LCFI4:
  73              	 .cfi_def_cfa_offset 16
  74 0004 00AF     	 add r7,sp,#0
  75              	.LCFI5:
  76              	 .cfi_def_cfa_register 7
  77 0006 7860     	 str r0,[r7,#4]
  78 0008 0A1C     	 mov r2,r1
  79 000a FB1C     	 add r3,r7,#3
  80 000c 1A70     	 strb r2,[r3]
 289:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLow: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 290:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 291:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10000U << pin;
  81              	 .loc 1 291 0
  82 000e FB1C     	 add r3,r7,#3
  83 0010 1B78     	 ldrb r3,[r3]
  84 0012 8022     	 mov r2,#128
  85 0014 5202     	 lsl r2,r2,#9
  86 0016 9A40     	 lsl r2,r2,r3
  87 0018 7B68     	 ldr r3,[r7,#4]
  88 001a 5A60     	 str r2,[r3,#4]
 292:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** }
  89              	 .loc 1 292 0
  90 001c BD46     	 mov sp,r7
  91 001e 02B0     	 add sp,sp,#8
  92              	 
  93 0020 80BD     	 pop {r7,pc}
  94              	 .cfi_endproc
  95              	.LFE123:
  97 0022 C046     	 .section .text.XMC_GPIO_GetInput,"ax",%progbits
  98              	 .align 2
  99              	 .code 16
 100              	 .thumb_func
 102              	XMC_GPIO_GetInput:
 103              	.LFB125:
 293:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 294:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 295:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 296:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 297:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param pin  port pin number.
 298:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 299:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 300:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 301:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 302:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Configures port pin output to Toggle. It configures hardware registers Pn_OMR.
 303:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 304:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 305:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 306:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 307:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 308:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode(). Regis
 309:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * and does not contain any flip-flop. A read action delivers the value of 0.
 310:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 311:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 312:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 313:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_ToggleOutput(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 314:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** {
 315:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_ToggleOutput: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 316:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 317:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10001U << pin;
 318:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** }
 319:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 320:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 321:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 322:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param port constant pointer pointing to GPIO port, to access hardware register Pn_IN.
 323:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param pin  Port pin number.
 324:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 325:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return uint32_t pin logic level status.
 326:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 327:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Description:</b><br>
 328:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Reads the Pn_IN register and returns the current logical value at the GPIO pin.
 329:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 330:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 331:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * None
 332:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 333:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 334:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to input mode using XMC_GPIO_SetMode().
 335:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 336:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 337:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 338:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE uint32_t XMC_GPIO_GetInput(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 339:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** {
 104              	 .loc 1 339 0
 105              	 .cfi_startproc
 106 0000 80B5     	 push {r7,lr}
 107              	.LCFI6:
 108              	 .cfi_def_cfa_offset 8
 109              	 .cfi_offset 7,-8
 110              	 .cfi_offset 14,-4
 111 0002 82B0     	 sub sp,sp,#8
 112              	.LCFI7:
 113              	 .cfi_def_cfa_offset 16
 114 0004 00AF     	 add r7,sp,#0
 115              	.LCFI8:
 116              	 .cfi_def_cfa_register 7
 117 0006 7860     	 str r0,[r7,#4]
 118 0008 0A1C     	 mov r2,r1
 119 000a FB1C     	 add r3,r7,#3
 120 000c 1A70     	 strb r2,[r3]
 340:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_GetInput: Invalid port", XMC_GPIO_CHECK_PORT(port));
 341:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 342:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   return (((port->IN) >> pin) & 0x1U);
 121              	 .loc 1 342 0
 122 000e 7B68     	 ldr r3,[r7,#4]
 123 0010 5A6A     	 ldr r2,[r3,#36]
 124 0012 FB1C     	 add r3,r7,#3
 125 0014 1B78     	 ldrb r3,[r3]
 126 0016 DA40     	 lsr r2,r2,r3
 127 0018 131C     	 mov r3,r2
 128 001a 0122     	 mov r2,#1
 129 001c 1340     	 and r3,r2
 343:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** }
 130              	 .loc 1 343 0
 131 001e 181C     	 mov r0,r3
 132 0020 BD46     	 mov sp,r7
 133 0022 02B0     	 add sp,sp,#8
 134              	 
 135 0024 80BD     	 pop {r7,pc}
 136              	 .cfi_endproc
 137              	.LFE125:
 139 0026 C046     	 .section .text.DIGITAL_IO_SetOutputHigh,"ax",%progbits
 140              	 .align 2
 141              	 .code 16
 142              	 .thumb_func
 144              	DIGITAL_IO_SetOutputHigh:
 145              	.LFB195:
 146              	 .file 2 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO/digital_io.h"
   1:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /*
   2:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   3:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @file digital_io.h
   4:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @date 2021-01-08
   5:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   6:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * NOTE:
   7:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   8:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   9:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @cond
  10:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  11:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DIGITAL_IO v4.0.18 - The DIGITAL_IO APP is used to configure a port pin as digital Input/Output.
  12:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  13:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  14:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * All rights reserved.
  15:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  16:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  17:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * following conditions are met:
  18:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  19:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  20:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   disclaimer.
  21:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  22:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  23:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  24:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  25:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  26:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   products derived from this software without specific prior written permission.
  27:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  28:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  29:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  30:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  31:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  32:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  33:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  34:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  36:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  37:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * with Infineon Technologies AG (dave@infineon.com).
  38:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  39:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  40:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Change History
  41:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * --------------
  42:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  43:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-02-16
  44:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Initial version
  45:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  46:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-04-22
  47:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - XMC_ASSERT is added in static inline functions.<br>
  48:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  49:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-06-20
  50:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Version check added for XMCLib dependency.<br>
  51:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  52:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-12-22
  53:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Added hardware controlled IO feature.
  54:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2016-07-08:
  55:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Fixed incorrect case for an included header.<br>
  56:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2021-01-08:
  57:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Modified check for minimum XMCLib version
  58:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  59:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @endcond
  60:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  61:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  */
  62:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  63:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
  64:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * HEADER FILES
  65:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  66:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  67:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #ifndef DIGITAL_IO_H
  68:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #define DIGITAL_IO_H
  69:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  70:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #include "xmc_gpio.h"
  71:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #include "DAVE_Common.h"
  72:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #include "digital_io_conf.h"
  73:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  74:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
  75:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * MACROS
  76:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  77:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #define DIGITAL_IO_XMC_LIB_MAJOR_VERSION 2
  78:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #define DIGITAL_IO_XMC_LIB_MINOR_VERSION 0
  79:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #define DIGITAL_IO_XMC_LIB_PATCH_VERSION 0
  80:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  81:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #if !((XMC_LIB_MAJOR_VERSION > DIGITAL_IO_XMC_LIB_MAJOR_VERSION) ||\
  82:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****       ((XMC_LIB_MAJOR_VERSION == DIGITAL_IO_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION > DIGI
  83:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****       ((XMC_LIB_MAJOR_VERSION == DIGITAL_IO_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION == DIG
  84:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #error "DIGITAL_IO requires XMC Peripheral Library v2.0.0 or higher"
  85:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #endif
  86:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  87:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  /*************************************************************************************************
  88:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * ENUMS
  89:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  90:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  91:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
  92:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_enumerations
  93:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
  94:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
  95:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  96:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
  97:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Initialization status of DIGITAL_IO APP.
  98:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
  99:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** typedef enum DIGITAL_IO_STATUS
 100:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 101:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   DIGITAL_IO_STATUS_OK = 0U,/**< 0=Status OK */
 102:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   DIGITAL_IO_STATUS_FAILURE = 1U/**< 1=Status Failed */
 103:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** } DIGITAL_IO_STATUS_t;
 104:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 105:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 106:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @}
 107:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 108:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 109:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
 110:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DATA STRUCTURES
 111:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
 112:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 113:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_datastructures
 114:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
 115:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 116:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 117:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 118:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Initialization data structure of DIGITAL_IO APP
 119:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 120:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** typedef struct DIGITAL_IO
 121:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 122:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_PORT_t *const gpio_port;             /**< port number */
 123:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   const XMC_GPIO_CONFIG_t gpio_config;          /**< mode, initial output level and pad driver stre
 124:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   const uint8_t gpio_pin;                       /**< pin number */
 125:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   const XMC_GPIO_HWCTRL_t hwctrl;               /**< Hardware port control */
 126:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** } DIGITAL_IO_t;
 127:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 128:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 129:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 130:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @}
 131:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 132:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 133:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 134:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
 135:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * API Prototypes
 136:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
 137:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 138:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 139:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #ifdef __cplusplus
 140:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** extern "C" {
 141:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #endif
 142:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 143:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 144:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_apidoc
 145:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
 146:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 147:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 148:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 149:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 150:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 151:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Get DIGITAL_IO APP version
 152:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return DAVE_APP_VERSION_t APP version information (major, minor and patch number)
 153:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 154:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description: </b><br>
 155:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * The function can be used to check application software compatibility with a
 156:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * specific version of the APP.
 157:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 158:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 159:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 160:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 161:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include "DAVE.h"
 162:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 163:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 164:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 165:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t init_status;
 166:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_APP_VERSION_t version;
 167:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 168:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   // Initialize DIGITAL_IO APP:
 169:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   // DIGITAL_IO_Init() is called from within DAVE_Init().
 170:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   init_status = DAVE_Init();
 171:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(init_status == DAVE_STATUS_SUCCESS)
 172:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 173:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     version = DIGITAL_IO_GetAppVersion();
 174:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     if (version.major != 4U) {
 175:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // Probably, not the right version.
 176:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 177:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 178:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 179:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // More code here
 180:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1) {
 181:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 182:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 183:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     return (1);
 184:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  }
 185:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @endcode<BR>
 186:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 187:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 188:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** DAVE_APP_VERSION_t DIGITAL_IO_GetAppVersion(void);
 189:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 190:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 191:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 192:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to initialize the port pin as per UI settings.
 193:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 194:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return DIGITAL_IO_STATUS_t DIGITAL_IO APP status. Refer @ref DIGITAL_IO_STATUS_t structure for d
 195:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 196:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 197:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function initializes GPIO port registers IOCR,PDISC,OMR,PDR/PHCR to configure pin direction,
 198:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * and pad driver strength/hysteresis.
 199:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 200:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 201:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * None
 202:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 203:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 204:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 205:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include "DAVE.h" //Declarations from DAVE Code Generation (includes SFR declaration)
 206:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 207:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 208:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 209:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 210:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 211:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 212:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 213:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 214:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 215:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 216:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 217:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 218:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1U)
 219:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 220:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 221:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 222:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 223:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 224:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 225:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 226:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return 1U;
 227:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  }
 228:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 229:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 230:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 231:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** DIGITAL_IO_STATUS_t DIGITAL_IO_Init(const DIGITAL_IO_t *const handler);
 232:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 233:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 234:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 235:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to set port pin high.
 236:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 237:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return None
 238:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 239:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 240:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to make port pin to high level
 241:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 242:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 243:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  DIGITAL_IO_SetOutputLow()
 244:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 245:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 246:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 247:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include "DAVE.h" //Declarations from DAVE Code Generation (includes SFR declaration)
 248:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 249:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 250:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 251:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 252:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 253:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 254:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 255:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 256:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 257:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 258:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 259:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 260:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1U)
 261:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 262:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 263:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 264:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 265:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DIGITAL_IO_SetOutputHigh(&DIGITAL_IO_0);
 266:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 267:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 268:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // Add application code here
 269:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 270:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 271:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 272:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 273:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 274:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 275:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 276:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_SetOutputHigh(const DIGITAL_IO_t *const handler)
 277:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 147              	 .loc 2 277 0
 148              	 .cfi_startproc
 149 0000 80B5     	 push {r7,lr}
 150              	.LCFI9:
 151              	 .cfi_def_cfa_offset 8
 152              	 .cfi_offset 7,-8
 153              	 .cfi_offset 14,-4
 154 0002 82B0     	 sub sp,sp,#8
 155              	.LCFI10:
 156              	 .cfi_def_cfa_offset 16
 157 0004 00AF     	 add r7,sp,#0
 158              	.LCFI11:
 159              	 .cfi_def_cfa_register 7
 160 0006 7860     	 str r0,[r7,#4]
 278:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_SetOutputHigh: handler null pointer", handler != NULL);
 279:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_SetOutputHigh(handler->gpio_port, handler->gpio_pin);
 161              	 .loc 2 279 0
 162 0008 7B68     	 ldr r3,[r7,#4]
 163 000a 1A68     	 ldr r2,[r3]
 164 000c 7B68     	 ldr r3,[r7,#4]
 165 000e 1B7B     	 ldrb r3,[r3,#12]
 166 0010 101C     	 mov r0,r2
 167 0012 191C     	 mov r1,r3
 168 0014 FFF7FEFF 	 bl XMC_GPIO_SetOutputHigh
 280:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 169              	 .loc 2 280 0
 170 0018 BD46     	 mov sp,r7
 171 001a 02B0     	 add sp,sp,#8
 172              	 
 173 001c 80BD     	 pop {r7,pc}
 174              	 .cfi_endproc
 175              	.LFE195:
 177 001e C046     	 .section .text.DIGITAL_IO_SetOutputLow,"ax",%progbits
 178              	 .align 2
 179              	 .code 16
 180              	 .thumb_func
 182              	DIGITAL_IO_SetOutputLow:
 183              	.LFB196:
 281:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 282:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 283:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to reset port pin.
 284:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 285:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return None
 286:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 287:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 288:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to make port pin to low level.
 289:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 290:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 291:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * DIGITAL_IO_SetOutputHigh()
 292:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 293:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 294:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 295:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  #include "DAVE.h" //Declarations from DAVE Code Generation (includes SFR declaration)
 296:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 297:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  int main(void)
 298:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  {
 299:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    DAVE_STATUS_t status;
 300:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_I
 301:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    if(status == DAVE_STATUS_SUCCESS)
 302:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 303:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG("DAVE Apps initialization success\n");
 304:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 305:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    else
 306:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 307:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 308:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *      while(1U)
 309:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *      {
 310:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *      }
 311:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 312:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    //Placeholder for user application code. The while loop below can be replaced with user applic
 313:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    DIGITAL_IO_SetOutputLow(&DIGITAL_IO_0);
 314:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    while(1U)
 315:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 316:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *      // Add application code here
 317:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 318:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 319:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 320:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 321:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 322:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 323:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 324:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_SetOutputLow(const DIGITAL_IO_t *const handler)
 325:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 184              	 .loc 2 325 0
 185              	 .cfi_startproc
 186 0000 80B5     	 push {r7,lr}
 187              	.LCFI12:
 188              	 .cfi_def_cfa_offset 8
 189              	 .cfi_offset 7,-8
 190              	 .cfi_offset 14,-4
 191 0002 82B0     	 sub sp,sp,#8
 192              	.LCFI13:
 193              	 .cfi_def_cfa_offset 16
 194 0004 00AF     	 add r7,sp,#0
 195              	.LCFI14:
 196              	 .cfi_def_cfa_register 7
 197 0006 7860     	 str r0,[r7,#4]
 326:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_SetOutputLow: handler null pointer", handler != NULL);
 327:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_SetOutputLow(handler->gpio_port,handler->gpio_pin);
 198              	 .loc 2 327 0
 199 0008 7B68     	 ldr r3,[r7,#4]
 200 000a 1A68     	 ldr r2,[r3]
 201 000c 7B68     	 ldr r3,[r7,#4]
 202 000e 1B7B     	 ldrb r3,[r3,#12]
 203 0010 101C     	 mov r0,r2
 204 0012 191C     	 mov r1,r3
 205 0014 FFF7FEFF 	 bl XMC_GPIO_SetOutputLow
 328:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 206              	 .loc 2 328 0
 207 0018 BD46     	 mov sp,r7
 208 001a 02B0     	 add sp,sp,#8
 209              	 
 210 001c 80BD     	 pop {r7,pc}
 211              	 .cfi_endproc
 212              	.LFE196:
 214 001e C046     	 .section .text.PIN_INTERRUPT_GetPinValue,"ax",%progbits
 215              	 .align 2
 216              	 .code 16
 217              	 .thumb_func
 219              	PIN_INTERRUPT_GetPinValue:
 220              	.LFB205:
 221              	 .file 3 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT/pin_interrupt.h"
   1:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
   2:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @file pin_interrupt.h
   3:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @date 2021-01-08
   4:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
   5:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * NOTE:
   6:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
   8:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @cond
   9:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
  10:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * PIN_INTERRUPT v4.0.4 - The PIN_INTERRUPT APP invokes user interrupt handler in a response to ris
  11:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                        edge event signal on a pin.
  12:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
  13:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * Copyright (c) 2016-2020, Infineon Technologies AG
  14:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * All rights reserved.                        
  15:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                                             
  16:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  17:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * following conditions are met:   
  18:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                                                                              
  19:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  20:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   disclaimer.                        
  21:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * 
  22:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  23:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   disclaimer in the documentation and/or other materials provided with the distribution.     
  24:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                         
  25:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  26:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   products derived from this software without specific prior written permission. 
  27:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                                             
  28:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  29:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  30:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  31:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  32:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  33:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  34:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.    
  35:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                                                                              
  36:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  37:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * with Infineon Technologies AG (dave@infineon.com).         
  38:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
  39:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
  40:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * Change History
  41:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * --------------
  42:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * 2015-12-03:
  43:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     - Initial version for DAVEv4. <BR>
  44:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * 
  45:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * 2021-01-08:
  46:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     - Modified check for minimum XMCLib version
  47:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
  48:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @endcond 
  49:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
  50:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
  51:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  52:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #ifndef PIN_INTERRUPT_H
  53:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #define PIN_INTERRUPT_H
  54:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  55:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**************************************************************************************************
  56:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * HEADER FILES                                                                                    
  57:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
  58:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #if (UC_SERIES == XMC14)
  59:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #include "xmc_scu.h"
  60:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #endif
  61:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #include "xmc_gpio.h"
  62:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #include "xmc_eru.h"
  63:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  64:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #include "DAVE_Common.h"
  65:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #include "pin_interrupt_conf.h"
  66:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  67:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**************************************************************************************************
  68:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * MACROS                                                                                          
  69:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
  70:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #define PIN_INTERRUPT_XMC_LIB_MAJOR_VERSION 2
  71:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #define PIN_INTERRUPT_XMC_LIB_MINOR_VERSION 1
  72:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #define PIN_INTERRUPT_XMC_LIB_PATCH_VERSION 6
  73:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  74:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #if !((XMC_LIB_MAJOR_VERSION > PIN_INTERRUPT_XMC_LIB_MAJOR_VERSION) ||\
  75:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****       ((XMC_LIB_MAJOR_VERSION == PIN_INTERRUPT_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION > P
  76:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****       ((XMC_LIB_MAJOR_VERSION == PIN_INTERRUPT_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION == 
  77:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #error "PIN_INTERRUPT requires XMC Peripheral Library v2.1.6 or higher"
  78:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #endif
  79:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  80:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
  81:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @ingroup App_publicparam
  82:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @{
  83:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
  84:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
  85:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  @brief Initialization data structure for PIN_INTERRUPT APP
  86:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
  87:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  88:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
  89:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @}
  90:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
  91:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  92:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  /*************************************************************************************************
  93:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * ENUMS
  94:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
  95:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
  96:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @ingroup PIN_INTERRUPT_enumerations
  97:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @{
  98:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
  99:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /*
 100:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief enumeration for PIN_INTERRUPT APP
 101:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 102:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** typedef enum PIN_INTERRUPT_STATUS
 103:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
 104:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_STATUS_SUCCESS = 0U,        /**<APP initialization is success */
 105:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_STATUS_FAILURE = 1U         /**<APP initialization is failure */
 106:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** } PIN_INTERRUPT_STATUS_t;
 107:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 108:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 109:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 110:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * Defines trigger edge for the event generation by ETLx (Event Trigger Logic, x = [0 to 3]) unit, 
 111:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * from ERSx(Event request source, x = [0 to 3]) unit.
 112:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 113:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** typedef enum PIN_INTERRUPT_EDGE
 114:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
 115:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_EDGE_NONE = 0U, /**< no event enabled */
 116:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_EDGE_RISING = 1U,   /**< detection of rising edge generates the event */
 117:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_EDGE_FALLING = 2U,  /**< detection of falling edge generates the event */
 118:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_EDGE_BOTH = 3U      /**< detection of either edges generates the event */
 119:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** } PIN_INTERRUPT_EDGE_t;
 120:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 121:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @}
 122:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 123:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 124:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**************************************************************************************************
 125:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * DATA STRUCTURES
 126:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** ***************************************************************************************************
 127:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 128:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @ingroup PIN_INTERRUPT_datastructures
 129:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @{
 130:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 131:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 132:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 133:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief Configuration structure for PIN_INTERRUPT APP
 134:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 135:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** typedef struct PIN_INTERRUPT
 136:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
 137:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_ERU_t *eru;  /**< Mapped ERU module */
 138:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_GPIO_PORT_t *port;  /**< Mapped port number */
 139:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_GPIO_CONFIG_t gpio_config;   /**< Initializes the input pin characteristics */
 140:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_ERU_ETL_CONFIG_t etl_config;  /**< reference to ERUx_ETLy (x = [0..1], y = [0..4])
 141:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****                                                       module configuration */
 142:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #if (UC_SERIES == XMC14)
 143:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_SCU_IRQCTRL_t irqctrl;  /**< selects the interrupt source for a NVIC interrupt node*/
 144:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #endif
 145:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   IRQn_Type IRQn;       /**< Mapped NVIC Node */
 146:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   uint8_t irq_priority; 	  /**< Node Interrupt Priority */
 147:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #if (UC_FAMILY == XMC4)
 148:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   uint8_t irq_subpriority;  /**< Node Interrupt SubPriority only valid for XMC4x */
 149:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #endif
 150:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   uint8_t etl; /*< ETLx channel (x = [0..3])*/
 151:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   uint8_t ogu; /*< OGUy channel (y = [0..3])*/
 152:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   uint8_t pin; /*< Mapped pin number */
 153:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   bool enable_at_init;  /**< Interrupt enable for Node at initialization*/
 154:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** } PIN_INTERRUPT_t;
 155:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 156:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @}
 157:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 158:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 159:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #ifdef __cplusplus
 160:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** extern "C" {
 161:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #endif
 162:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**************************************************************************************************
 163:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * API Prototypes
 164:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
 165:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 166:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @ingroup PIN_INTERRUPT_apidoc
 167:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @{
 168:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 169:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 170:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief Get PIN_INTERRUPT APP version
 171:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @return DAVE_APP_VERSION_t APP version information (major, minor and patch number)
 172:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 173:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * \par<b>Description: </b><br>
 174:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * The function can be used to check application software compatibility with a
 175:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * specific version of the APP.
 176:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 177:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * \par<b>Example Usage:</b><br>
 178:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 179:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @code
 180:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * #include "DAVE.h"
 181:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 182:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * int main(void) 
 183:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * {
 184:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   DAVE_STATUS_t init_status;
 185:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   DAVE_APP_VERSION_t version;
 186:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 187:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   // Initialize PIN_INTERRUPT APP:
 188:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   // PIN_INTERRUPT_Init() is called from within DAVE_Init().
 189:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   init_status = DAVE_Init();
 190:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 191:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   if (DAVE_STATUS_SUCCESS == init_status)
 192:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   {
 193:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     version = PIN_INTERRUPT_GetAppVersion();
 194:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     if (version.major != 4U) {
 195:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *       // Probably, not the right version.
 196:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     }
 197:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   }
 198:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 199:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   // More code here
 200:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   while(1)
 201:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   {
 202:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   }
 203:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   return (1);
 204:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * }
 205:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @endcode<BR>
 206:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 207:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** DAVE_APP_VERSION_t PIN_INTERRUPT_GetAppVersion(void);
 208:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 209:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 210:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief Initializes a PIN_INTERRUPT APP instance
 211:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @param handle Pointer pointing to APP data structure. Refer @ref PIN_INTERRUPT_t for details.
 212:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @return
 213:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *            PIN_INTERRUPT_STATUS_SUCCESS             : if initialization is successful\n
 214:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *            PIN_INTERRUPT_STATUS_FAILURE             : if initialization is failed
 215:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 216:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * \par<b>Description:</b><br>
 217:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * PIN_INTERRUPT_Init API is called during initialization of DAVE APPS. This API Initializes input 
 218:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * ERU and OGU hardware module initialization, Configures NVIC node and its priority in order to ge
 219:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 220:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * \par<b>Example Usage:</b><br>
 221:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 222:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @code
 223:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * #include "DAVE.h"
 224:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 225:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * int main(void)
 226:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * {
 227:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   DAVE_STATUS_t status;
 228:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 229:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   status = DAVE_Init();  //  PIN_INTERRUPT_Init API is called during initialization of DAVE APPS
 230:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   if (DAVE_STATUS_SUCCESS == status)
 231:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   {
 232:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     // user code
 233:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 234:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     while(1)
 235:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     {
 236:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 237:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     }
 238:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   }
 239:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   return (1);
 240:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * }
 241:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 242:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @endcode<BR>
 243:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 244:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** PIN_INTERRUPT_STATUS_t PIN_INTERRUPT_Init(const PIN_INTERRUPT_t *const handle);
 245:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 246:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 247:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief Enables the IRQ.
 248:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @param handle Pointer pointing to APP data structure. Refer @ref PIN_INTERRUPT_t for details.
 249:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @return None
 250:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * <BR><P ALIGN="LEFT"><B>Example:</B>
 251:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 252:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @code
 253:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  #include "DAVE.h"
 254:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 255:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  int main(void)
 256:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  {
 257:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    DAVE_STATUS_t status;
 258:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 259:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    status = DAVE_Init();  //  PIN_INTERRUPT_Init API is called during initialization of DAVE APP
 260:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    if (DAVE_STATUS_SUCCESS == status)
 261:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    {
 262:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *      // user code
 263:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 264:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *      PIN_INTERRUPT_Enable(&PIN_INTERRUPT_0);
 265:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *      while(1)
 266:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *      {}
 267:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    }
 268:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 269:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    return (1);
 270:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  }
 271:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @endcode<BR> </p>
 272:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 273:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** __STATIC_INLINE void PIN_INTERRUPT_Enable(const PIN_INTERRUPT_t *const handle)
 274:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
 275:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_ASSERT("PIN_INTERRUPT_Enable: Handler null pointer", handle != NULL);
 276:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   NVIC_EnableIRQ(handle->IRQn);
 277:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** }
 278:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 279:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 280:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief Disables the IRQ.
 281:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @param handle Pointer pointing to APP data structure. Refer @ref PIN_INTERRUPT_t for details.
 282:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @return None
 283:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * <BR><P ALIGN="LEFT"><B>Example:</B>
 284:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 285:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @code
 286:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  #include "DAVE.h"
 287:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 288:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  int main(void)
 289:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  {
 290:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 291:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    DAVE_STATUS_t status;
 292:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 293:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    status = DAVE_Init();  //  PIN_INTERRUPT_Init API is called during initialization of DAVE APP
 294:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    if(DAVE_STATUS_SUCCESS == status)
 295:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    {
 296:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *      // user code
 297:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 298:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *      PIN_INTERRUPT_Disable(&PIN_INTERRUPT_0);
 299:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *      while(1)
 300:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *      {}
 301:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    }
 302:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 303:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    return (1);
 304:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 305:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  }
 306:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @endcode<BR> </p>
 307:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 308:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** __STATIC_INLINE void PIN_INTERRUPT_Disable(const PIN_INTERRUPT_t *const handle)
 309:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
 310:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_ASSERT("PIN_INTERRUPT_Disable: Handler null pointer", handle != NULL);
 311:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   NVIC_DisableIRQ(handle->IRQn);
 312:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** }
 313:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 314:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 315:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * @brief Read input level of port pin.
 316:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * @param handle Pointer pointing to APP data structure. Refer @ref PIN_INTERRUPT_t for details.
 317:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * @return uint32_t input logic level. Range:0-1
 318:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *
 319:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * \par<b>Description:</b><br>
 320:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * This function reads the Pn_IN register and returns the current logical value at the GPIO pin.
 321:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *
 322:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *
 323:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * Example Usage:
 324:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * @code
 325:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * #include "DAVE.h"//Declarations from DAVE Code Generation (includes SFR declaration)
 326:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *
 327:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * int main(void)
 328:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * {
 329:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   DAVE_STATUS_t status;
 330:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   uint32_t pin_status;
 331:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   status = DAVE_Init();   // (DAVE_STATUS_t)PIN_INTERRUPT_Init(&PIN_INTERRUPT_0) is called within
 332:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   
 333:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   if (status == DAVE_STATUS_SUCCESS)
 334:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   {
 335:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 336:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   }
 337:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   else
 338:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   {
 339:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 340:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     while(1U)
 341:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     {
 342:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     }
 343:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   }
 344:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 345:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   while(1U)
 346:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   {
 347:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     pin_status = PIN_INTERRUPT_GetPinValue(&PIN_INTERRUPT_0);
 348:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     if (pin_status == 1)
 349:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     {
 350:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *       // Add application code here
 351:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     }
 352:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     else
 353:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     {
 354:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *       // Add application code here
 355:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     }
 356:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   }
 357:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   return (1);
 358:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * }
 359:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *  @endcode
 360:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** */
 361:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** __STATIC_INLINE uint32_t PIN_INTERRUPT_GetPinValue(const PIN_INTERRUPT_t *const handle)
 362:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
 222              	 .loc 3 362 0
 223              	 .cfi_startproc
 224 0000 80B5     	 push {r7,lr}
 225              	.LCFI15:
 226              	 .cfi_def_cfa_offset 8
 227              	 .cfi_offset 7,-8
 228              	 .cfi_offset 14,-4
 229 0002 82B0     	 sub sp,sp,#8
 230              	.LCFI16:
 231              	 .cfi_def_cfa_offset 16
 232 0004 00AF     	 add r7,sp,#0
 233              	.LCFI17:
 234              	 .cfi_def_cfa_register 7
 235 0006 7860     	 str r0,[r7,#4]
 363:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_ASSERT("PIN_INTERRUPT_GetPinValue: Handler null pointer", handle != NULL);
 364:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   return (XMC_GPIO_GetInput(handle->port, handle->pin));
 236              	 .loc 3 364 0
 237 0008 7B68     	 ldr r3,[r7,#4]
 238 000a 5A68     	 ldr r2,[r3,#4]
 239 000c 7B68     	 ldr r3,[r7,#4]
 240 000e 9B7F     	 ldrb r3,[r3,#30]
 241 0010 101C     	 mov r0,r2
 242 0012 191C     	 mov r1,r3
 243 0014 FFF7FEFF 	 bl XMC_GPIO_GetInput
 244 0018 031C     	 mov r3,r0
 365:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** }
 245              	 .loc 3 365 0
 246 001a 181C     	 mov r0,r3
 247 001c BD46     	 mov sp,r7
 248 001e 02B0     	 add sp,sp,#8
 249              	 
 250 0020 80BD     	 pop {r7,pc}
 251              	 .cfi_endproc
 252              	.LFE205:
 254 0022 C046     	 .section .text.XMC_WDT_Start,"ax",%progbits
 255              	 .align 2
 256              	 .code 16
 257              	 .thumb_func
 259              	XMC_WDT_Start:
 260              	.LFB214:
 261              	 .file 4 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc/xmc_wdt.h"
   1:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
   2:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @file xmc_wdt.h
   3:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @date 2015-08-06
   4:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
   5:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @cond
   6:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *****************************************************************************
   7:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
   9:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * All rights reserved.
  11:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
  12:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
  14:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Permission is hereby granted, free of charge, to any person or organization
  15:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * obtaining a copy of the software and accompanying documentation covered by
  16:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * do so, all subject to the following:
  20:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
  21:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * The copyright notices in the Software and this entire statement, including
  22:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * the above license grant, this restriction and the following disclaimer,
  23:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * must be included in all copies of the Software, in whole or in part, and
  24:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * all derivative works of the Software, unless such copies or derivative
  25:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * works are solely in the form of machine-executable object code generated by
  26:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * a source language processor.
  27:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
  28:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * DEALINGS IN THE SOFTWARE.
  35:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
  36:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * To improve the quality of the software, users are encouraged to share
  37:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * at XMCSupport@infineon.com.
  39:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *****************************************************************************
  40:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
  41:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Change History
  42:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * --------------
  43:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
  44:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * 2015-02-20:
  45:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *     - Initial <br>
  46:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *     - Documentation updates <br>
  47:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
  48:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * 2015-06-20:
  49:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  50:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
  51:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * 2015-08-06:
  52:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *     - Bug fix in XMC_WDT_SetDebugMode() API, Wrong register is being configured.<br>
  53:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @endcond
  54:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
  55:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
  56:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #ifndef XMC_WDT_H
  57:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #define XMC_WDT_H
  58:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
  59:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**************************************************************************************************
  60:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * HEADER FILES
  61:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  **************************************************************************************************
  62:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
  63:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #include "xmc_common.h"
  64:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #include "xmc_scu.h"
  65:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
  66:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @addtogroup XMClib XMC Peripheral Library
  67:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @{
  68:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
  69:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
  70:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
  71:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @addtogroup WDT
  72:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @brief Watchdog driver for the XMC microcontroller family.
  73:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
  74:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * The watchdog unit (WDT) improves the system integrity, by triggering the system reset request to
  75:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * back from the unresponsive state to normal operation.
  76:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
  77:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * This LLD provides the Configuration structure XMC_WDT_CONFIG_t and initialization function XMC_W
  78:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * It can be used to:
  79:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * -# Start or Stop the watchdog timer. (XMC_WDT_Start() and XMC_WDT_Stop())
  80:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * -# Service the watchdog timer. (XMC_WDT_Service())
  81:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * -# Configure the service window upper bound and lower bound timing values. (XMC_WDT_SetWindowBou
  82:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * -# Enable the generation of the pre-warning event for the first overflow of the timer. (XMC_WDT_
  83:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * -# Clear the pre-warning alarm event. It is mandatory to clear the flag during pre-warning alarm
  84:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****       generating reset request for the second overflow of the timer. (XMC_WDT_ClearAlarm())
  85:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * -# Suspend the watchdog timer during Debug HALT mode. (XMC_WDT_SetDebugMode())
  86:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * -# Configure service indication pulse width.(XMC_WDT_SetServicePulseWidth())
  87:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
  88:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @{
  89:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
  90:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
  91:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**************************************************************************************************
  92:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * MACROS
  93:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   *************************************************************************************************
  94:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
  95:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #define XMC_WDT_MAGIC_WORD             (0xABADCAFEU) /* Magic word to be written in Service Registe
  96:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****                                                           to service or feed the watchdog. */
  97:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
  98:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**************************************************************************************************
  99:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * ENUMS
 100:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   *************************************************************************************************
 101:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 102:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 103:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *  Defines working modes for watchdog. Use type XMC_WDT_MODE_t for this enum.
 104:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 105:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** typedef enum XMC_WDT_MODE
 106:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** {
 107:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   XMC_WDT_MODE_TIMEOUT    = (uint32_t)0x0 << WDT_CTR_PRE_Pos, /**< Generates reset request as soon 
 108:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****                                                                    occurs. */
 109:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   XMC_WDT_MODE_PREWARNING = (uint32_t)0x1 << WDT_CTR_PRE_Pos  /**< Generates an alarm event for the
 110:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****                                                                    reset request after subsequent o
 111:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****                                                                    serviced after first overflow. *
 112:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** } XMC_WDT_MODE_t;
 113:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 114:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 115:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *  Defines debug behaviour of watchdog when the CPU enters HALT mode. Use type XMC_WDT_DEBUG_MODE_
 116:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 117:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** typedef enum XMC_WDT_DEBUG_MODE
 118:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** {
 119:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   XMC_WDT_DEBUG_MODE_STOP = (uint32_t)0x0 << WDT_CTR_DSP_Pos, /**< Watchdog counter is paused durin
 120:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   XMC_WDT_DEBUG_MODE_RUN  = (uint32_t)0x1 << WDT_CTR_DSP_Pos  /**< Watchdog counter is not paused d
 121:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** } XMC_WDT_DEBUG_MODE_t;
 122:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 123:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**************************************************************************************************
 124:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * DATA STRUCTURES
 125:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   *************************************************************************************************
 126:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /* Anonymous structure/union guard start */
 127:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #if defined(__CC_ARM)
 128:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #pragma push
 129:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #pragma anon_unions
 130:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #elif defined(__TASKING__)
 131:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #pragma warning 586
 132:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #endif
 133:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 134:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 135:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Structure for initializing watchdog timer. Use type XMC_WDT_CONFIG_t for this structure.
 136:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 137:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** typedef struct XMC_WDT_CONFIG
 138:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** {
 139:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   uint32_t window_upper_bound; /**< Upper bound for service window (WUB). Reset request is generate
 140:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****                                     timer. ALways upper bound value has to be more than lower bound
 141:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****                                     lower than WLB, triggers a system reset after timer crossed upp
 142:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****                                     Range: [0H to FFFFFFFFH] */
 143:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   uint32_t window_lower_bound; /**< Lower bound for servicing window (WLB). Setting the lower bound
 144:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****                                     window mechanism.\n
 145:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****                                     Range: [0H to FFFFFFFFH] */
 146:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   union
 147:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   {
 148:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****     struct
 149:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****     {
 150:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****       uint32_t : 1;
 151:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****       uint32_t prewarn_mode : 1;        /**< Pre-warning mode (PRE). This accepts boolean values as
 152:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****       uint32_t : 2;
 153:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****       uint32_t run_in_debug_mode : 1;   /**< Watchdog timer behaviour during debug (DSP). This acce
 154:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****       uint32_t : 3;
 155:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****       uint32_t service_pulse_width : 8; /**< Service Indication Pulse Width (SPW). Generated Pulse 
 156:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****                                              in fwdt cycles.\n
 157:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****                                              Range: [0H to FFH] */
 158:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****       uint32_t : 16;
 159:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****     };
 160:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****     uint32_t wdt_ctr; /* Value of operation mode control register (CTR). It’s bit fields are repr
 161:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****                            union members. */
 162:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   };
 163:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** } XMC_WDT_CONFIG_t;
 164:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /* Anonymous structure/union guard end */
 165:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #if defined(__CC_ARM)
 166:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #pragma pop
 167:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #elif defined(__TASKING__)
 168:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #pragma warning restore
 169:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #endif
 170:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**************************************************************************************************
 171:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * API PROTOTYPES
 172:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   *************************************************************************************************
 173:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 174:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #ifdef __cplusplus
 175:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** extern "C" {
 176:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #endif
 177:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 178:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 179:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param None
 180:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 181:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @return None
 182:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 183:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Description:</b><br>
 184:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \if XMC4
 185:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Enables watchdog clock and releases watchdog reset.\n
 186:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \endif
 187:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \if XMC1
 188:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Enables watchdog clock.\n
 189:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \endif
 190:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par
 191:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * This API is invoked by XMC_WDT_Init() and therefore no need to call it explicitly during watchdo
 192:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * sequence. Invoke this API to enable watchdog once again if the watchdog is disabled by invoking 
 193:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 194:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Note:</b><br>
 195:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \if XMC4
 196:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * 1. It is required to configure the watchdog, again after invoking XMC_WDT_Disable(). Since all t
 197:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *    reset with default values.
 198:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \endif
 199:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \if XMC1
 200:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * 1. Not required to configure the watchdog again after invoking XMC_WDT_Disable(). Since the regi
 201:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *    the configured values.
 202:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \endif
 203:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Related APIs:</b><BR>
 204:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * XMC_WDT_Init(), XMC_WDT_Disable()
 205:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 206:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** void XMC_WDT_Enable(void);
 207:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 208:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 209:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param None
 210:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 211:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @return None
 212:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 213:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Description:</b><br>
 214:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \if XMC4
 215:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Disables the clock and resets watchdog timer.\n
 216:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \endif
 217:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \if XMC1
 218:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Disables the clock to the watchdog timer.\n
 219:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \endif
 220:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 221:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Note:</b><br>
 222:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \if XMC4
 223:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * 1. Resets the registers with default values. So XMC_WDT_Init() has to be invoked again to config
 224:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \endif
 225:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \if XMC1
 226:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * 1. After invoking XMC_WDT_Disable(), all register values are displayed with 0F in debugger. Once
 227:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****       calling XMC_WDT_Enable(), previous configured register values are displayed. No need to invok
 228:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****       again.
 229:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \endif
 230:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Related APIs:</b><BR>
 231:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * XMC_WDT_Enable()
 232:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 233:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** void XMC_WDT_Disable(void);
 234:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 235:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 236:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param config pointer to a constant watchdog configuration data structure. Refer data structure 
 237:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *               for detail.
 238:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 239:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @return None
 240:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 241:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Description:</b><br>
 242:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Initializes and configures watchdog with configuration data pointed by \a config.\n
 243:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par
 244:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * It invokes XMC_WDT_Enable() to enable clock and release reset. Then configures the lower and upp
 245:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * working mode (timeout/pre-warning), debug behaviour and service request indication pulse width.
 246:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 247:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Note:</b><br>
 248:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * 1. With out invoking this XMC_WDT_Init() or XMC_WDT_Enable(), invocation of other APIs like XMC_
 249:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *    XMC_WDT_SetMode(), XMC_WDT_SetServicePulseWidth(), XMC_WDT_SetDebugMode(), XMC_WDT_Start(), X
 250:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *    XMC_WDT_Service(), XMC_WDT_ClearAlarm() has no affect.
 251:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 252:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** void XMC_WDT_Init(const XMC_WDT_CONFIG_t *const config);
 253:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 254:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 255:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param lower_bound specifies watchdog window lower bound in terms of watchdog clock (fWDT) cycle
 256:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *                    Range: [0H to FFFFFFFFH].
 257:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param upper_bound specifies watchdog window upper bound in terms of watchdog clock (fWDT) cycle
 258:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *                    Range: [0H to FFFFFFFFH].
 259:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 260:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @return None
 261:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 262:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Description:</b><br>
 263:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Sets watchdog window lower and upper bounds by updating WLB and WUB registers.\n
 264:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par
 265:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Window lower and upper bounds are set during initialization in XMC_WDT_Init(). Invoke this API t
 266:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * needed later in the program. This upper bound and lower bound can be calculated by using the bel
 267:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *       upper_bound or lower_bound = desired_boundary_time(sec) * fwdt(hz)
 268:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 269:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Note:</b>
 270:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * 1. Always ensure that upper_bound is greater than the lower_bound value. If not, whenever timer 
 271:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *    upper_bound value it triggers the reset(wdt_rst_req) of the controller.
 272:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 273:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** __STATIC_INLINE void XMC_WDT_SetWindowBounds(uint32_t lower_bound, uint32_t upper_bound)
 274:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** {
 275:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   WDT->WLB = lower_bound;
 276:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   WDT->WUB = upper_bound;
 277:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** }
 278:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 279:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 280:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param mode is one of the working modes of the watchdog timer, i.e timeout or pre-warning. Refer
 281:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *             for valid values.
 282:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 283:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @return None
 284:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 285:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Description:</b><br>
 286:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Sets watchdog working mode (timeout or pre-warning) by updating PRE bit of CTR register.\n
 287:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par
 288:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * The working mode is set during initialization in XMC_WDT_Init(). Invoke this API to alter the mo
 289:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * the program.
 290:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 291:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** __STATIC_INLINE void XMC_WDT_SetMode(XMC_WDT_MODE_t mode)
 292:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** {
 293:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   WDT->CTR = (WDT->CTR & (uint32_t)~WDT_CTR_PRE_Msk) | (uint32_t)mode;
 294:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** }
 295:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 296:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 297:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param service_pulse_width specifies Service indication pulse width in terms of fwdt.
 298:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *                            Range: [0H – FFH].
 299:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @return None
 300:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 301:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Description:</b><br>
 302:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Sets service indication pulse width by updating SPW bit field of CTR register.\n
 303:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par
 304:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * The service indication pulse (with width service_pulse_width + 1 in fwdt cycles) is generated on
 305:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * or feeding of watchdog. The pulse width is initially set during initialization in XMC_WDT_Init()
 306:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * alter the width as needed later in the program.
 307:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 308:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** __STATIC_INLINE void XMC_WDT_SetServicePulseWidth(uint8_t service_pulse_width)
 309:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** {
 310:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   WDT->CTR = (WDT->CTR & (uint32_t)~WDT_CTR_SPW_Msk) | ((uint32_t)service_pulse_width << WDT_CTR_SP
 311:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** }
 312:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 313:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 314:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param debug_mode running state of watchdog during debug halt mode. Refer @ref XMC_WDT_DEBUG_MOD
 315:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *                   valid values.
 316:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 317:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @return None
 318:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 319:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Description:</b><br>
 320:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Sets debug behaviour of watchdog by modifying DSP bit of CTR register.\n
 321:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par
 322:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Depending upon DSP bit, the watchdog timer stops when CPU is in HALT mode. The debug behaviour i
 323:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * XMC_WDT_DEBUG_MODE_STOP during initialization in XMC_WDT_Init(). Invoke this API to change the d
 324:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * needed later in the program.
 325:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 326:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** __STATIC_INLINE void XMC_WDT_SetDebugMode(const XMC_WDT_DEBUG_MODE_t debug_mode)
 327:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** {
 328:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   WDT->CTR = (WDT->CTR & (uint32_t)~WDT_CTR_DSP_Msk) | (uint32_t)debug_mode;
 329:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** }
 330:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 331:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 332:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param None
 333:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 334:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @return None
 335:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 336:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Description:</b><br>
 337:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Start the watchdog timer by setting ENB bit of CTR register.\n
 338:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par
 339:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Invoke this API to start the watchdog after initialization, or to resume the watchdog when
 340:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * paused by invoking XMC_WDT_Stop().
 341:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 342:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Related APIs:</b><BR>
 343:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * XMC_WDT_Init(), XMC_WDT_Stop()
 344:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 345:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** __STATIC_INLINE void XMC_WDT_Start(void)
 346:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** {
 262              	 .loc 4 346 0
 263              	 .cfi_startproc
 264 0000 80B5     	 push {r7,lr}
 265              	.LCFI18:
 266              	 .cfi_def_cfa_offset 8
 267              	 .cfi_offset 7,-8
 268              	 .cfi_offset 14,-4
 269 0002 00AF     	 add r7,sp,#0
 270              	.LCFI19:
 271              	 .cfi_def_cfa_register 7
 347:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   WDT->CTR |= (uint32_t)WDT_CTR_ENB_Msk;
 272              	 .loc 4 347 0
 273 0004 034B     	 ldr r3,.L10
 274 0006 034A     	 ldr r2,.L10
 275 0008 5268     	 ldr r2,[r2,#4]
 276 000a 0121     	 mov r1,#1
 277 000c 0A43     	 orr r2,r1
 278 000e 5A60     	 str r2,[r3,#4]
 348:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** }
 279              	 .loc 4 348 0
 280 0010 BD46     	 mov sp,r7
 281              	 
 282 0012 80BD     	 pop {r7,pc}
 283              	.L11:
 284              	 .align 2
 285              	.L10:
 286 0014 00000240 	 .word 1073872896
 287              	 .cfi_endproc
 288              	.LFE214:
 290              	 .section .text.XMC_WDT_Service,"ax",%progbits
 291              	 .align 2
 292              	 .code 16
 293              	 .thumb_func
 295              	XMC_WDT_Service:
 296              	.LFB217:
 349:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 350:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 351:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param None
 352:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 353:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @return None
 354:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 355:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Description:</b><br>
 356:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Pauses watchdog timer by resetting ENB bit of CTR register.\n
 357:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par
 358:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Invoke this API to pause the watchdog as needed in the program e.g. debugging through software c
 359:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 360:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Related APIs:</b><BR>
 361:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * XMC_WDT_Init(), XMC_WDT_Stop()
 362:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 363:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** __STATIC_INLINE void XMC_WDT_Stop(void)
 364:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** {
 365:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   WDT->CTR &= (uint32_t)~WDT_CTR_ENB_Msk;
 366:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** }
 367:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 368:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 369:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param None
 370:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 371:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @return uint32_t Current count value of watchdog timer register (TIM).
 372:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *                  Range: [0H to FFFFFFFFH]
 373:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 374:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Description:</b><br>
 375:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Reads current count of timer register (TIM).\n
 376:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par
 377:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Invoke this API before servicing or feeding the watchdog to check whether count is between lower
 378:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * window bounds.
 379:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 380:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Related APIs:</b><BR>
 381:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * XMC_WDT_Service()
 382:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 383:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** __STATIC_INLINE uint32_t XMC_WDT_GetCounter(void)
 384:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** {
 385:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   return WDT->TIM;
 386:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** }
 387:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 388:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 389:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param None
 390:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 391:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @return None
 392:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 393:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Description:</b><br>
 394:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Services or feeds the watchdog by writing the Magic word in SRV register.\n
 395:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par
 396:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Service watchdog when count value of watchdog timer is between lower and upper window bounds. Su
 397:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * will reset watchdog timer (TIM register) to 0H and generate service indication pulse.
 398:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 399:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Note:</b><br>
 400:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * 1. invoking this API when count value of watchdog timer is less than window lower bound results
 401:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *    wrong servicing and immediately triggers reset request.
 402:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 403:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Related APIs:</b><BR>
 404:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * XMC_WDT_GetCounter(), XMC_WDT_SetWindowBounds(), XMC_WDT_SetServicePulseWidth()
 405:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 406:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** __STATIC_INLINE void XMC_WDT_Service(void)
 407:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** {
 297              	 .loc 4 407 0
 298              	 .cfi_startproc
 299 0000 80B5     	 push {r7,lr}
 300              	.LCFI20:
 301              	 .cfi_def_cfa_offset 8
 302              	 .cfi_offset 7,-8
 303              	 .cfi_offset 14,-4
 304 0002 00AF     	 add r7,sp,#0
 305              	.LCFI21:
 306              	 .cfi_def_cfa_register 7
 408:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   WDT->SRV = XMC_WDT_MAGIC_WORD;
 307              	 .loc 4 408 0
 308 0004 024B     	 ldr r3,.L13
 309 0006 034A     	 ldr r2,.L13+4
 310 0008 9A60     	 str r2,[r3,#8]
 409:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** }
 311              	 .loc 4 409 0
 312 000a BD46     	 mov sp,r7
 313              	 
 314 000c 80BD     	 pop {r7,pc}
 315              	.L14:
 316 000e C046     	 .align 2
 317              	.L13:
 318 0010 00000240 	 .word 1073872896
 319 0014 FECAADAB 	 .word -1414673666
 320              	 .cfi_endproc
 321              	.LFE217:
 323              	 .section .text.XMC_WDT_ClearAlarm,"ax",%progbits
 324              	 .align 2
 325              	 .code 16
 326              	 .thumb_func
 328              	XMC_WDT_ClearAlarm:
 329              	.LFB218:
 410:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 411:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 412:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param None
 413:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 414:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @return None
 415:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 416:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Description:</b><br>
 417:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Clears pre-warning alarm by setting ALMC bit in WDTCLR register.\n
 418:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par
 419:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * In pre-warning mode, first overflow of the timer upper window bound fires the pre-warning alarm.
 420:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * must be invoked to clear the alarm alarm. After clearing of the alarm, watchdog timer must be se
 421:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * time window. Otherwise watchdog timer triggers the reset request up on crossing the upper bound 
 422:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * cycle.
 423:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 424:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Related APIs:</b><BR>
 425:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * XMC_WDT_Service(), XMC_WDT_SetMode()
 426:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 427:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** __STATIC_INLINE void XMC_WDT_ClearAlarm(void)
 428:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** {
 330              	 .loc 4 428 0
 331              	 .cfi_startproc
 332 0000 80B5     	 push {r7,lr}
 333              	.LCFI22:
 334              	 .cfi_def_cfa_offset 8
 335              	 .cfi_offset 7,-8
 336              	 .cfi_offset 14,-4
 337 0002 00AF     	 add r7,sp,#0
 338              	.LCFI23:
 339              	 .cfi_def_cfa_register 7
 429:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   WDT->WDTCLR = WDT_WDTCLR_ALMC_Msk;
 340              	 .loc 4 429 0
 341 0004 024B     	 ldr r3,.L16
 342 0006 0122     	 mov r2,#1
 343 0008 DA61     	 str r2,[r3,#28]
 430:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** }
 344              	 .loc 4 430 0
 345 000a BD46     	 mov sp,r7
 346              	 
 347 000c 80BD     	 pop {r7,pc}
 348              	.L17:
 349 000e C046     	 .align 2
 350              	.L16:
 351 0010 00000240 	 .word 1073872896
 352              	 .cfi_endproc
 353              	.LFE218:
 355              	 .section .text.WATCHDOG_Start,"ax",%progbits
 356              	 .align 2
 357              	 .code 16
 358              	 .thumb_func
 360              	WATCHDOG_Start:
 361              	.LFB219:
 362              	 .file 5 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG/watchdog.h"
   1:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
   2:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @file watchdog.h
   3:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @date 2016-02-09
   4:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
   5:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * NOTE:
   6:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
   8:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @cond
   9:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  **************************************************************************************************
  10:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * WATCHDOG v4.0.16 - Configures the watchdog peripheral instance.
  11:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  12:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * Copyright (c) 2016-2020, Infineon Technologies AG
  13:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * All rights reserved.
  14:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  15:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  16:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * following conditions are met:
  17:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  18:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  19:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   disclaimer.
  20:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  21:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  22:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  23:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  24:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  25:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   products derived from this software without specific prior written permission.
  26:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  27:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  28:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  29:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  30:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  31:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  32:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  33:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  34:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  35:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  36:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * with Infineon Technologies AG (dave@infineon.com).
  37:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  **************************************************************************************************
  38:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  39:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * Change History
  40:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * --------------
  41:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  42:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * 2015-02-16:
  43:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *     - Initial version<br>
  44:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  45:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * 2015-05-08:
  46:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *     - C++ guard applied to only API section<br>
  47:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *     - File guard updated according to the guidelines<br>
  48:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *     - Enum items of "WATCHDOG_EVENT_MODE" are changed to follow coding guidelines<br>
  49:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  50:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * 2015-06-20:
  51:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *     - "callback_func_ptr" in APP config structure is updated according to the GLOBAL_SCU APP.
  52:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  53:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * 2015-06-20:
  54:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *     - macro WATCHDOG_EVENT_CONFIGURATION is replaced with WATCHDOG_EVENT_VIA_SCU.
  55:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  56:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * 2016-02-09:
  57:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *     - Added a check for XMC4 devices, to verify that WATCHDOG clock is enabled or not in CLOCK_X
  58:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  59:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @endcond
  60:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  61:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
  62:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
  63:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #ifndef WATCHDOG_H
  64:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #define WATCHDOG_H
  65:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**************************************************************************************************
  66:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * HEADER FILES
  67:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  **************************************************************************************************
  68:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #include "xmc_wdt.h"
  69:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #if(UC_FAMILY == XMC4)
  70:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #include "CLOCK_XMC4/clock_xmc4.h"
  71:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #else
  72:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #include "CLOCK_XMC1/clock_xmc1.h"
  73:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #endif
  74:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #include "watchdog_conf.h"
  75:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #include "DAVE_Common.h"
  76:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
  77:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**************************************************************************************************
  78:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * MACROS
  79:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  **************************************************************************************************
  80:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #define WATCHDOG_XMC_LIB_MAJOR_VERSION 2
  81:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #define WATCHDOG_XMC_LIB_MINOR_VERSION 0
  82:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #define WATCHDOG_XMC_LIB_PATCH_VERSION 0
  83:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
  84:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #if !((XMC_LIB_MAJOR_VERSION > WATCHDOG_XMC_LIB_MAJOR_VERSION) ||\
  85:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****       ((XMC_LIB_MAJOR_VERSION == WATCHDOG_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION > WATCHD
  86:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****       ((XMC_LIB_MAJOR_VERSION == WATCHDOG_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION == WATCH
  87:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #error "WATCHDOG requires XMC Peripheral Library v2.0.0 or higher"
  88:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #endif
  89:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
  90:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**************************************************************************************************
  91:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * ENUMS
  92:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  **************************************************************************************************
  93:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
  94:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @ingroup WATCHDOG_enumerations
  95:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @{
  96:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
  97:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
  98:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
  99:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *  @brief In case of XMC4000 devices, WatchDog event can be generated as  Regular Interrupt or can
 100:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *         NMI Request. Where as in case of XMC1000 device, it can be generated as Regular Interrup
 101:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
 102:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** typedef enum WATCHDOG_EVENT_MODE
 103:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** {
 104:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****     WATCHDOG_EVENT_MODE_INTERRUPT   = 0U, /**< Regular Interrupt */
 105:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****     WATCHDOG_EVENT_MODE_NMI_REQUEST = 1U /**< Promoted to NMI */
 106:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** } WATCHDOG_EVENT_MODE_t;
 107:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
 108:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
 109:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *  @brief Initialization status.
 110:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
 111:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** typedef enum WATCHDOG_STATUS
 112:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** {
 113:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   WATCHDOG_STATUS_SUCCESS = 0U, /**< Status success */
 114:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   WATCHDOG_STATUS_FAILURE, /**< Status failure */
 115:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** } WATCHDOG_STATUS_t;
 116:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
 117:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** * @}
 118:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** */
 119:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
 120:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**************************************************************************************************
 121:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** * DATA STRUCTURES
 122:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** ***************************************************************************************************
 123:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
 124:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @ingroup WATCHDOG_datastructures
 125:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @{
 126:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
 127:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
 128:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
 129:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @brief WATCHDOG_HandleType is  data structure for storing the GUI configured values of a WATCHDO
 130:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
 131:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** typedef struct WATCHDOG
 132:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** {
 133:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   const XMC_WDT_CONFIG_t* const config; /**< Configuration of WDT */
 134:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   #if ((WATCHDOG_PREWARNING_CHECK == 1U) && (WATCHDOG_EVENT_VIA_SCU == 1U))
 135:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   #if(UC_FAMILY == XMC4)
 136:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   GLOBAL_SCU_XMC4_t* const scu_global_handler; /**< pointer to SCU_GLOBAL APP instance*/
 137:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   GLOBAL_SCU_XMC4_EVENT_HANDLER_t callback_func_ptr; /**< Callback function pointer */
 138:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   #else
 139:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   GLOBAL_SCU_XMC1_t* const scu_global_handler; /**< pointer to SCU_GLOBAL APP instance*/
 140:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   GLOBAL_SCU_XMC1_EVENT_HANDLER_t callback_func_ptr; /**< Callback function pointer */
 141:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   #endif
 142:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   #endif
 143:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   bool  initialized; /**< Holds the initialization status */
 144:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** } WATCHDOG_t;
 145:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
 146:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
 147:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** * @}
 148:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** */
 149:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**************************************************************************************************
 150:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** * API Prototypes
 151:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** ***************************************************************************************************
 152:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #ifdef __cplusplus
 153:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** extern "C" {
 154:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #endif
 155:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
 156:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @brief Get WATCHDOG APP version
 157:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @return DAVE_APP_VERSION_t APP version information (major, minor and patch number)
 158:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * <BR>
 159:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * \par<b>Description:</b><br>
 160:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * The function can be used to check application software compatibility with a
 161:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * specific version of the APP.
 162:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 163:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * Example Usage:
 164:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 165:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @code
 166:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * #include "DAVE.h"
 167:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * int main(void)
 168:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * {
 169:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   DAVE_STATUS_t status;
 170:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   DAVE_APP_VERSION_t app_version;
 171:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 172:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   status = DAVE_Init();    // WATCHDOG_Init() is called from DAVE_Init()
 173:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 174:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   app_version = WATCHDOG_GetAppVersion();
 175:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 176:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   if (app_version.major != 4U)
 177:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   {
 178:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *     // Probably, not the right version.
 179:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   }
 180:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 181:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   while(1U)
 182:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   {
 183:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   }
 184:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   return 1;
 185:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * }
 186:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @endcode<BR>
 187:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
 188:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
 189:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** DAVE_APP_VERSION_t WATCHDOG_GetAppVersion(void);
 190:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
 191:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
 192:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @ingroup WATCHDOG_apidoc
 193:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @{
 194:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
 195:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
 196:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
 197:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @brief Initializes a WATCHDOG with generated configuration.
 198:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 199:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @param handle pointer to the WATCHDOG APP handle structure.
 200:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @return WATCHDOG_STATUS_t\n
 201:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *         WATCHDOG_STATUS_SUCCESS : if initialization is successful\n
 202:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *         WATCHDOG_STATUS_FAILURE : if initialization is failed
 203:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * <BR>
 204:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * \par<b>Description:</b><br>
 205:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * <ul>
 206:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * <li>Enable the WDT module.</li>
 207:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * <li>Configure the service upper and lower bound settings</li>
 208:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * <li>Configure the Pre-warning alarm event, if enabled</li>
 209:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * </ul>
 210:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 211:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * Example Usage:
 212:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 213:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @code
 214:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * #include "DAVE.h"
 215:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * int main(void)
 216:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * {
 217:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   // ... Initializes Apps configurations ...
 218:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   DAVE_Init(); // WATCHDOG_Init(&WATCHDOG_0) will be called from DAVE_Init()
 219:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 220:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   while(1U)
 221:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   {
 222:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   }
 223:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 224:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   return 1;
 225:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * }
 226:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 227:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @endcode<BR> </p>
 228:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
 229:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** WATCHDOG_STATUS_t WATCHDOG_Init(WATCHDOG_t *handle);
 230:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
 231:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
 232:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @brief Starts the WATCHDOG timer.
 233:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 234:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @return None
 235:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * <BR>
 236:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * 
 237:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * \par<b>Description:</b><br>
 238:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * After starting, WDT has to be serviced with in the specified service window boundary.
 239:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * This can done by invoking WATCHDOG_Service(). If failed service, leads to system reset.
 240:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 241:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * Example Usage:
 242:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 243:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @code
 244:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * #include "DAVE.h"
 245:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * int main(void)
 246:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * {
 247:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   DAVE_STATUS_t status;
 248:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 249:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   status = DAVE_Init();        // Initialization of DAVE Apps
 250:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 251:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   if(status == DAVE_STATUS_SUCCESS)
 252:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   {
 253:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *     WATCHDOG_Start(); // Start the watchdog timer
 254:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   }
 255:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 256:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   while(1U)
 257:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   {
 258:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   }
 259:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 260:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   return 1;
 261:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * }
 262:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 263:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * void Watchdog_Handler(void)
 264:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * {
 265:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   WATCHDOG_Service(); //service the watchdog timer.
 266:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   WATCHDOG_Stop();
 267:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * }
 268:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 269:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @endcode<BR> </p>
 270:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
 271:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** __STATIC_INLINE void WATCHDOG_Start(void)
 272:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** {
 363              	 .loc 5 272 0
 364              	 .cfi_startproc
 365 0000 80B5     	 push {r7,lr}
 366              	.LCFI24:
 367              	 .cfi_def_cfa_offset 8
 368              	 .cfi_offset 7,-8
 369              	 .cfi_offset 14,-4
 370 0002 00AF     	 add r7,sp,#0
 371              	.LCFI25:
 372              	 .cfi_def_cfa_register 7
 273:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   XMC_WDT_Start();
 373              	 .loc 5 273 0
 374 0004 FFF7FEFF 	 bl XMC_WDT_Start
 274:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** }
 375              	 .loc 5 274 0
 376 0008 BD46     	 mov sp,r7
 377              	 
 378 000a 80BD     	 pop {r7,pc}
 379              	 .cfi_endproc
 380              	.LFE219:
 382              	 .section .text.WATCHDOG_Service,"ax",%progbits
 383              	 .align 2
 384              	 .code 16
 385              	 .thumb_func
 387              	WATCHDOG_Service:
 388              	.LFB221:
 275:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
 276:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
 277:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @brief Stops the WATCHDOG timer.
 278:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 279:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @return None
 280:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *            <BR>
 281:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 282:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * \par<b>Description:</b><br>
 283:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * WATCHDOG_Stop() can be used to pause the watchog timer as needed. To resume invoke WATCHDOG_Star
 284:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * 
 285:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * Example Usage:
 286:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 287:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @code
 288:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * #include "DAVE.h"
 289:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * int main(void)
 290:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * {
 291:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   DAVE_STATUS_t status;
 292:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 293:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   status = DAVE_Init();        // Initialization of DAVE Apps
 294:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 295:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   if(status == DAVE_STATUS_SUCCESS)
 296:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   {
 297:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *     WATCHDOG_Start(); // Start the watchdog timer
 298:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   }
 299:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 300:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   while(1U)
 301:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   {
 302:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   }
 303:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 304:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   return 1;
 305:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * }
 306:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 307:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * void Watchdog_Handler(void)
 308:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * {
 309:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   WATCHDOG_ClearAlarm(); //clears the alarm flag
 310:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   WATCHDOG_Service(); //service the watchdog timer.
 311:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   WATCHDOG_Stop(); //Stop the watchdog timer
 312:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * }
 313:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 314:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @endcode<BR> </p>
 315:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
 316:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** __STATIC_INLINE void WATCHDOG_Stop(void)
 317:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** {
 318:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   XMC_WDT_Stop();
 319:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** }
 320:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
 321:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
 322:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @brief Service the WATCHDOG timer.
 323:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 324:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @return    None                           
 325:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *            <BR>
 326:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 327:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * \par<b>Description:</b><br>
 328:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * WATCHDOG_Service() will reset the watchdog timer.
 329:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 330:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * Example Usage:
 331:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * 
 332:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @code
 333:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * #include "DAVE.h"
 334:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * int main(void)
 335:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * {
 336:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   DAVE_STATUS_t status;
 337:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 338:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   status = DAVE_Init();        // Initialization of DAVE Apps
 339:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 340:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   if(status == DAVE_STATUS_SUCCESS)
 341:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   {
 342:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *     WATCHDOG_Start(); // Start the watchdog timer
 343:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   }
 344:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 345:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   while(1U)
 346:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   {
 347:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   }
 348:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 349:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   return 1;
 350:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * }
 351:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 352:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * void Watchdog_Handler(void)
 353:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * {
 354:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   WATCHDOG_ClearAlarm(); //clears the alarm flag
 355:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   WATCHDOG_Service(); //service the watchdog timer.
 356:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   WATCHDOG_Stop();
 357:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * }
 358:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 359:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @endcode<BR> </p>
 360:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
 361:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** __STATIC_INLINE void WATCHDOG_Service(void)
 362:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** {
 389              	 .loc 5 362 0
 390              	 .cfi_startproc
 391 0000 80B5     	 push {r7,lr}
 392              	.LCFI26:
 393              	 .cfi_def_cfa_offset 8
 394              	 .cfi_offset 7,-8
 395              	 .cfi_offset 14,-4
 396 0002 00AF     	 add r7,sp,#0
 397              	.LCFI27:
 398              	 .cfi_def_cfa_register 7
 363:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   XMC_WDT_Service();
 399              	 .loc 5 363 0
 400 0004 FFF7FEFF 	 bl XMC_WDT_Service
 364:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** }
 401              	 .loc 5 364 0
 402 0008 BD46     	 mov sp,r7
 403              	 
 404 000a 80BD     	 pop {r7,pc}
 405              	 .cfi_endproc
 406              	.LFE221:
 408              	 .section .text.WATCHDOG_ClearAlarm,"ax",%progbits
 409              	 .align 2
 410              	 .code 16
 411              	 .thumb_func
 413              	WATCHDOG_ClearAlarm:
 414              	.LFB222:
 365:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
 366:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
 367:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @brief Clears the alarm flag.
 368:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 369:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @return None
 370:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * <BR>
 371:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * \par<b>Description:</b><br>
 372:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * After occurrence of Pre-warning alarm event, the timer has to be serviced with in second over fl
 373:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * clearing the alarm flag. Otherwise it will lead to system reset.
 374:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 375:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * Example Usage:
 376:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 377:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @code
 378:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * #include "DAVE.h"
 379:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * int main(void)
 380:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * {
 381:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   DAVE_STATUS_t status;
 382:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 383:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   status = DAVE_Init();        // Initialization of DAVE Apps
 384:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 385:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   if(status == DAVE_STATUS_SUCCESS)
 386:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   {
 387:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *     WATCHDOG_Start(); // Start the watchdog timer
 388:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   }
 389:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 390:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   while(1U)
 391:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   {
 392:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   }
 393:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 394:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   return 1;
 395:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * }
 396:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 397:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * void Watchdog_Handler(void)
 398:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * {
 399:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   WATCHDOG_ClearAlarm(); //clears the alarm flag
 400:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   WATCHDOG_Service(); //service the watchdog timer.
 401:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * }
 402:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 403:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @endcode<BR> </p>
 404:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
 405:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** __STATIC_INLINE void WATCHDOG_ClearAlarm(void)
 406:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** {
 415              	 .loc 5 406 0
 416              	 .cfi_startproc
 417 0000 80B5     	 push {r7,lr}
 418              	.LCFI28:
 419              	 .cfi_def_cfa_offset 8
 420              	 .cfi_offset 7,-8
 421              	 .cfi_offset 14,-4
 422 0002 00AF     	 add r7,sp,#0
 423              	.LCFI29:
 424              	 .cfi_def_cfa_register 7
 407:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   XMC_WDT_ClearAlarm();
 425              	 .loc 5 407 0
 426 0004 FFF7FEFF 	 bl XMC_WDT_ClearAlarm
 408:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** }
 427              	 .loc 5 408 0
 428 0008 BD46     	 mov sp,r7
 429              	 
 430 000a 80BD     	 pop {r7,pc}
 431              	 .cfi_endproc
 432              	.LFE222:
 434              	 .global NP
 435              	 .section .data.NP,"aw",%progbits
 436              	 .align 2
 439              	NP:
 440 0000 36030000 	 .word 822
 441 0004 DC020000 	 .word 732
 442 0008 1B030000 	 .word 795
 443 000c BC020000 	 .word 700
 444              	 .global NPfl
 445              	 .section .data.NPfl,"aw",%progbits
 446              	 .align 2
 449              	NPfl:
 450 0000 D2020000 	 .word 722
 451              	 .global NPfr
 452              	 .section .data.NPfr,"aw",%progbits
 453              	 .align 2
 456              	NPfr:
 457 0000 DF020000 	 .word 735
 458              	 .global NPrl
 459              	 .section .data.NPrl,"aw",%progbits
 460              	 .align 2
 463              	NPrl:
 464 0000 4B000000 	 .word 75
 465              	 .global NPrr
 466              	 .section .data.NPrr,"aw",%progbits
 467              	 .align 2
 470              	NPrr:
 471 0000 BC020000 	 .word 700
 472              	 .global RC_controll
 473              	 .section .data.RC_controll,"aw",%progbits
 476              	RC_controll:
 477 0000 01       	 .byte 1
 478              	 .global Steering_mode
 479              	 .section .data.Steering_mode,"aw",%progbits
 482              	Steering_mode:
 483 0000 03       	 .byte 3
 484              	 .global New_Input
 485              	 .section .bss.New_Input,"aw",%nobits
 488              	New_Input:
 489 0000 00       	 .space 1
 490              	 .global NO_New_Input_counter
 491              	 .section .bss.NO_New_Input_counter,"aw",%nobits
 492              	 .align 2
 495              	NO_New_Input_counter:
 496 0000 00000000 	 .space 4
 497              	 .global Speeds_int16_r
 498              	 .section .bss.Speeds_int16_r,"aw",%nobits
 499              	 .align 2
 502              	Speeds_int16_r:
 503 0000 00000000 	 .space 8
 503      00000000 
 504              	 .global CAN_RX_0
 505              	 .section .bss.CAN_RX_0,"aw",%nobits
 506              	 .align 1
 509              	CAN_RX_0:
 510 0000 0000     	 .space 2
 511              	 .comm init_status,1,1
 512              	 .global CAN_OK
 513              	 .section .bss.CAN_OK,"aw",%nobits
 514              	 .align 2
 517              	CAN_OK:
 518 0000 00000000 	 .space 4
 519              	 .global Inverters_CAN_state
 520              	 .section .bss.Inverters_CAN_state,"aw",%nobits
 521              	 .align 2
 524              	Inverters_CAN_state:
 525 0000 00000000 	 .space 4
 526              	 .global CAN_10ms_counter
 527              	 .section .bss.CAN_10ms_counter,"aw",%nobits
 528              	 .align 2
 531              	CAN_10ms_counter:
 532 0000 00000000 	 .space 4
 533              	 .global reset_distance
 534              	 .section .bss.reset_distance,"aw",%nobits
 537              	reset_distance:
 538 0000 00       	 .space 1
 539              	 .global speed_fl_act
 540              	 .section .bss.speed_fl_act,"aw",%nobits
 541              	 .align 2
 544              	speed_fl_act:
 545 0000 00000000 	 .space 4
 546              	 .global speed_fr_act
 547              	 .section .bss.speed_fr_act,"aw",%nobits
 548              	 .align 2
 551              	speed_fr_act:
 552 0000 00000000 	 .space 4
 553              	 .global speed_rl_act
 554              	 .section .bss.speed_rl_act,"aw",%nobits
 555              	 .align 2
 558              	speed_rl_act:
 559 0000 00000000 	 .space 4
 560              	 .global speed_rr_act
 561              	 .section .bss.speed_rr_act,"aw",%nobits
 562              	 .align 2
 565              	speed_rr_act:
 566 0000 00000000 	 .space 4
 567              	 .global distance_fl_act
 568              	 .section .bss.distance_fl_act,"aw",%nobits
 569              	 .align 2
 572              	distance_fl_act:
 573 0000 00000000 	 .space 4
 574              	 .global distance_fr_act
 575              	 .section .bss.distance_fr_act,"aw",%nobits
 576              	 .align 2
 579              	distance_fr_act:
 580 0000 00000000 	 .space 4
 581              	 .global distance_rl_act
 582              	 .section .bss.distance_rl_act,"aw",%nobits
 583              	 .align 2
 586              	distance_rl_act:
 587 0000 00000000 	 .space 4
 588              	 .global distance_rr_act
 589              	 .section .bss.distance_rr_act,"aw",%nobits
 590              	 .align 2
 593              	distance_rr_act:
 594 0000 00000000 	 .space 4
 595              	 .global CAN_RX_Inverter_count
 596              	 .section .bss.CAN_RX_Inverter_count,"aw",%nobits
 599              	CAN_RX_Inverter_count:
 600 0000 00       	 .space 1
 601              	 .global CAN_Ultrasonic_No_messasge_count
 602              	 .section .data.CAN_Ultrasonic_No_messasge_count,"aw",%progbits
 605              	CAN_Ultrasonic_No_messasge_count:
 606 0000 64       	 .byte 100
 607              	 .global CAN_state_Ultrasonic
 608              	 .section .bss.CAN_state_Ultrasonic,"aw",%nobits
 611              	CAN_state_Ultrasonic:
 612 0000 00       	 .space 1
 613              	 .global Ultrasonic_cm_C
 614              	 .section .bss.Ultrasonic_cm_C,"aw",%nobits
 615              	 .align 1
 618              	Ultrasonic_cm_C:
 619 0000 0000     	 .space 2
 620              	 .global Ultrasonic_cm_L
 621              	 .section .bss.Ultrasonic_cm_L,"aw",%nobits
 622              	 .align 1
 625              	Ultrasonic_cm_L:
 626 0000 0000     	 .space 2
 627              	 .global Ultrasonic_cm_R
 628              	 .section .bss.Ultrasonic_cm_R,"aw",%nobits
 629              	 .align 1
 632              	Ultrasonic_cm_R:
 633 0000 0000     	 .space 2
 634              	 .global ALPHA_ULTARSONIC
 635              	 .section .data.ALPHA_ULTARSONIC,"aw",%progbits
 636              	 .align 2
 639              	ALPHA_ULTARSONIC:
 640 0000 0000003F 	 .word 1056964608
 641              	 .global obstructed_L
 642              	 .section .bss.obstructed_L,"aw",%nobits
 645              	obstructed_L:
 646 0000 00       	 .space 1
 647              	 .global obstructed_R
 648              	 .section .bss.obstructed_R,"aw",%nobits
 651              	obstructed_R:
 652 0000 00       	 .space 1
 653              	 .global Fil_Ultrasonic_m_C
 654              	 .section .data.Fil_Ultrasonic_m_C,"aw",%progbits
 655              	 .align 2
 658              	Fil_Ultrasonic_m_C:
 659 0000 00008040 	 .word 1082130432
 660              	 .global Fil_Ultrasonic_m_L
 661              	 .section .data.Fil_Ultrasonic_m_L,"aw",%progbits
 662              	 .align 2
 665              	Fil_Ultrasonic_m_L:
 666 0000 00008040 	 .word 1082130432
 667              	 .global Fil_Ultrasonic_m_R
 668              	 .section .data.Fil_Ultrasonic_m_R,"aw",%progbits
 669              	 .align 2
 672              	Fil_Ultrasonic_m_R:
 673 0000 00008040 	 .word 1082130432
 674              	 .global Ultrsonic_data_invaildcounter
 675              	 .section .data.Ultrsonic_data_invaildcounter,"aw",%progbits
 676              	 .align 2
 679              	Ultrsonic_data_invaildcounter:
 680 0000 28       	 .byte 40
 681 0001 28       	 .byte 40
 682 0002 28       	 .byte 40
 683              	 .global Obstacel_F
 684 0003 00       	 .section .data.Obstacel_F,"aw",%progbits
 685              	 .align 2
 688              	Obstacel_F:
 689 0000 00008040 	 .word 1082130432
 690 0004 00000000 	 .word 0
 691              	 .global Obstacel_L
 692              	 .section .data.Obstacel_L,"aw",%progbits
 693              	 .align 2
 696              	Obstacel_L:
 697 0000 00008040 	 .word 1082130432
 698 0004 000080C0 	 .word -1065353216
 699              	 .global Obstacel_R
 700              	 .section .data.Obstacel_R,"aw",%progbits
 701              	 .align 2
 704              	Obstacel_R:
 705 0000 00008040 	 .word 1082130432
 706 0004 00008040 	 .word 1082130432
 707              	 .global obstacel_F_x
 708              	 .section .bss.obstacel_F_x,"aw",%nobits
 709              	 .align 2
 712              	obstacel_F_x:
 713 0000 00000000 	 .space 4
 714              	 .global obstacel_L_x
 715              	 .section .bss.obstacel_L_x,"aw",%nobits
 716              	 .align 2
 719              	obstacel_L_x:
 720 0000 00000000 	 .space 4
 721              	 .global obstacel_L_y
 722              	 .section .bss.obstacel_L_y,"aw",%nobits
 723              	 .align 2
 726              	obstacel_L_y:
 727 0000 00000000 	 .space 4
 728              	 .global obstacel_R_x
 729              	 .section .bss.obstacel_R_x,"aw",%nobits
 730              	 .align 2
 733              	obstacel_R_x:
 734 0000 00000000 	 .space 4
 735              	 .global obstacel_R_y
 736              	 .section .bss.obstacel_R_y,"aw",%nobits
 737              	 .align 2
 740              	obstacel_R_y:
 741 0000 00000000 	 .space 4
 742              	 .global Obstacel_valid
 743              	 .section .bss.Obstacel_valid,"aw",%nobits
 744              	 .align 2
 747              	Obstacel_valid:
 748 0000 000000   	 .space 3
 749              	 .global avg_Speeds
 750 0003 00       	 .section .bss.avg_Speeds,"aw",%nobits
 751              	 .align 2
 754              	avg_Speeds:
 755 0000 00000000 	 .space 4
 756              	 .global act_trajctory_x
 757              	 .section .bss.act_trajctory_x,"aw",%nobits
 758              	 .align 2
 761              	act_trajctory_x:
 762 0000 00000000 	 .space 4
 763              	 .global act_trajctory_y
 764              	 .section .bss.act_trajctory_y,"aw",%nobits
 765              	 .align 2
 768              	act_trajctory_y:
 769 0000 00000000 	 .space 4
 770              	 .global RC_Signal_OK
 771              	 .section .bss.RC_Signal_OK,"aw",%nobits
 774              	RC_Signal_OK:
 775 0000 00       	 .space 1
 776              	 .global RC_Signal_not_OK_counter
 777              	 .section .bss.RC_Signal_not_OK_counter,"aw",%nobits
 780              	RC_Signal_not_OK_counter:
 781 0000 00       	 .space 1
 782              	 .global captured_time_Steering
 783              	 .section .bss.captured_time_Steering,"aw",%nobits
 784              	 .align 2
 787              	captured_time_Steering:
 788 0000 00000000 	 .space 4
 789              	 .global captured_time_Speed
 790              	 .section .bss.captured_time_Speed,"aw",%nobits
 791              	 .align 2
 794              	captured_time_Speed:
 795 0000 00000000 	 .space 4
 796              	 .global RC_no_Speed_data_counter
 797              	 .section .bss.RC_no_Speed_data_counter,"aw",%nobits
 800              	RC_no_Speed_data_counter:
 801 0000 00       	 .space 1
 802              	 .global RC_no_Steering_data_counter
 803              	 .section .bss.RC_no_Steering_data_counter,"aw",%nobits
 806              	RC_no_Steering_data_counter:
 807 0000 00       	 .space 1
 808              	 .global RC_Speed
 809              	 .section .bss.RC_Speed,"aw",%nobits
 810              	 .align 2
 813              	RC_Speed:
 814 0000 00000000 	 .space 4
 815              	 .global RC_Steering
 816              	 .section .bss.RC_Steering,"aw",%nobits
 817              	 .align 2
 820              	RC_Steering:
 821 0000 00000000 	 .space 4
 822              	 .global RC_Speed_ns_to_mps
 823              	 .section .data.RC_Speed_ns_to_mps,"aw",%progbits
 824              	 .align 2
 827              	RC_Speed_ns_to_mps:
 828 0000 ACC5A735 	 .word 900187564
 829              	 .global RC_Steering_ns_to_deg
 830              	 .section .data.RC_Steering_ns_to_deg,"aw",%progbits
 831              	 .align 2
 834              	RC_Steering_ns_to_deg:
 835 0000 72335C39 	 .word 962343794
 836              	 .global RC_gear_100us_counter
 837              	 .section .bss.RC_gear_100us_counter,"aw",%nobits
 838              	 .align 2
 841              	RC_gear_100us_counter:
 842 0000 00000000 	 .space 4
 843              	 .global RC_AUX1_100us_counter
 844              	 .section .bss.RC_AUX1_100us_counter,"aw",%nobits
 845              	 .align 2
 848              	RC_AUX1_100us_counter:
 849 0000 00000000 	 .space 4
 850              	 .global RC_Gear_state
 851              	 .section .data.RC_Gear_state,"aw",%progbits
 854              	RC_Gear_state:
 855 0000 02       	 .byte 2
 856              	 .global RC_AUX1_state
 857              	 .section .data.RC_AUX1_state,"aw",%progbits
 860              	RC_AUX1_state:
 861 0000 02       	 .byte 2
 862              	 .global RC_Gear_duty
 863              	 .section .data.RC_Gear_duty,"aw",%progbits
 866              	RC_Gear_duty:
 867 0000 02       	 .byte 2
 868              	 .global RC_Gear_duty_OLD
 869              	 .section .data.RC_Gear_duty_OLD,"aw",%progbits
 872              	RC_Gear_duty_OLD:
 873 0000 02       	 .byte 2
 874              	 .global RC_AUX1_duty
 875              	 .section .data.RC_AUX1_duty,"aw",%progbits
 878              	RC_AUX1_duty:
 879 0000 02       	 .byte 2
 880              	 .global RC_Speed_Stop
 881              	 .section .data.RC_Speed_Stop,"aw",%progbits
 884              	RC_Speed_Stop:
 885 0000 01       	 .byte 1
 886              	 .global Steering_direction
 887              	 .section .bss.Steering_direction,"aw",%nobits
 888              	 .align 2
 891              	Steering_direction:
 892 0000 00000000 	 .space 4
 893              	 .global Driving_speed
 894              	 .section .bss.Driving_speed,"aw",%nobits
 895              	 .align 2
 898              	Driving_speed:
 899 0000 00000000 	 .space 4
 900              	 .comm R_Turn,4,4
 901              	 .comm Speed_ratio,4,4
 902              	 .global speed_fl
 903              	 .section .bss.speed_fl,"aw",%nobits
 904              	 .align 2
 907              	speed_fl:
 908 0000 00000000 	 .space 4
 909              	 .global speed_fr
 910              	 .section .bss.speed_fr,"aw",%nobits
 911              	 .align 2
 914              	speed_fr:
 915 0000 00000000 	 .space 4
 916              	 .global speed_rl
 917              	 .section .bss.speed_rl,"aw",%nobits
 918              	 .align 2
 921              	speed_rl:
 922 0000 00000000 	 .space 4
 923              	 .global speed_rr
 924              	 .section .bss.speed_rr,"aw",%nobits
 925              	 .align 2
 928              	speed_rr:
 929 0000 00000000 	 .space 4
 930              	 .global angle_fl
 931              	 .section .bss.angle_fl,"aw",%nobits
 932              	 .align 2
 935              	angle_fl:
 936 0000 00000000 	 .space 4
 937              	 .global angle_fr
 938              	 .section .bss.angle_fr,"aw",%nobits
 939              	 .align 2
 942              	angle_fr:
 943 0000 00000000 	 .space 4
 944              	 .global angle_rl
 945              	 .section .bss.angle_rl,"aw",%nobits
 946              	 .align 2
 949              	angle_rl:
 950 0000 00000000 	 .space 4
 951              	 .global angle_rr
 952              	 .section .bss.angle_rr,"aw",%nobits
 953              	 .align 2
 956              	angle_rr:
 957 0000 00000000 	 .space 4
 958              	 .global Speeds
 959              	 .section .bss.Speeds,"aw",%nobits
 960              	 .align 2
 963              	Speeds:
 964 0000 00000000 	 .space 16
 964      00000000 
 964      00000000 
 964      00000000 
 965              	 .global Steering_Angles
 966              	 .section .bss.Steering_Angles,"aw",%nobits
 967              	 .align 2
 970              	Steering_Angles:
 971 0000 00000000 	 .space 16
 971      00000000 
 971      00000000 
 971      00000000 
 972              	 .global Servo_PWMs
 973              	 .section .bss.Servo_PWMs,"aw",%nobits
 974              	 .align 2
 977              	Servo_PWMs:
 978 0000 00000000 	 .space 16
 978      00000000 
 978      00000000 
 978      00000000 
 979              	 .global Inveter_CAN_OK
 980              	 .section .bss.Inveter_CAN_OK,"aw",%nobits
 981              	 .align 2
 984              	Inveter_CAN_OK:
 985 0000 00000000 	 .space 4
 986              	 .global Actual_Speeds
 987              	 .section .bss.Actual_Speeds,"aw",%nobits
 988              	 .align 2
 991              	Actual_Speeds:
 992 0000 00000000 	 .space 16
 992      00000000 
 992      00000000 
 992      00000000 
 993              	 .global Actual_Distance
 994              	 .section .bss.Actual_Distance,"aw",%nobits
 995              	 .align 2
 998              	Actual_Distance:
 999 0000 00000000 	 .space 16
 999      00000000 
 999      00000000 
 999      00000000 
 1000              	 .section .text.main,"ax",%progbits
 1001              	 .align 2
 1002              	 .global main
 1003              	 .code 16
 1004              	 .thumb_func
 1006              	main:
 1007              	.LFB224:
 1008              	 .file 6 "../main.c"
   1:../main.c     **** /*
   2:../main.c     ****  * main.c
   3:../main.c     ****  *
   4:../main.c     ****  *  Created on: 2022 Apr 25 09:31:37
   5:../main.c     ****  *  Author: lukas
   6:../main.c     ****  */
   7:../main.c     **** #include "DAVE.h"                 //Declarations from DAVE Code Generation (includes SFR declaratio
   8:../main.c     **** #include <math.h>
   9:../main.c     **** 
  10:../main.c     **** #define CHECK_BIT(var,pos) (((var)>>(pos)) & 1)
  11:../main.c     **** 
  12:../main.c     **** //constant
  13:../main.c     **** int NP[4] = {822, 732, 795, 700}; //servo nutral points PWM duty values
  14:../main.c     **** int NPfl = 722; int NPfr = 735; int NPrl = 75; int NPrr = 700; // serov defalut 750
  15:../main.c     **** #define MIN_Speed  0.05
  16:../main.c     **** #define MAX_Speed  1
  17:../main.c     **** 
  18:../main.c     **** #define ROTATION_ANGLE 53.96
  19:../main.c     **** #define ROTATION_ANGLE_OFFSET 5
  20:../main.c     **** #define ROTATION_SPEED  0.25
  21:../main.c     **** 
  22:../main.c     **** #define PI180 0.01745329
  23:../main.c     **** #define PI 3.14
  24:../main.c     **** #define HALF_PI 1.57
  25:../main.c     **** #define RAD_TO_DEG 57.296
  26:../main.c     **** 
  27:../main.c     **** // steering parameter
  28:../main.c     **** //const float WHEEL_BASE = 0.448;
  29:../main.c     **** #define WHEEL_BASE 0.448
  30:../main.c     **** #define	HALF_WHEEL_BASE 			0.22				// halfbase of mobrob
  31:../main.c     **** //#define 	HALFBASEPOW2 		(HALFBASE*HALFBASE)		// halfbase of mobrob to the power of two
  32:../main.c     **** #define	HALF_TRACK_WIDTH		0.163					// halftrack of mobrob
  33:../main.c     **** #define 	R_WHEEL				0.067			// wheel radius of mobrob
  34:../main.c     **** #define	R_TRUN_MAX				20.000				// maximum corner radius (before straight)
  35:../main.c     **** #define 	R_TRUN_MIN				0.05				// minimum corner/reorientation radius
  36:../main.c     **** //#define		P_RO_VEL			0.500					// reduction factor for reorientation velocity
  37:../main.c     **** //#define		CWHEEL				(2.000*M_PI*RWHEEL)		// wheel circumference of mobrob
  38:../main.c     **** 
  39:../main.c     **** 
  40:../main.c     **** // Var MODES
  41:../main.c     **** volatile uint8_t RC_controll = 1; // if 1 RC controll
  42:../main.c     **** //uint8_t Steering_mode = 3; // otions 1 'Front';  2'Rear'; 3 '4_Wheel'; 4 'Carb'; 5 'Rotate' 0 not
  43:../main.c     **** enum STEERING_MODES{
  44:../main.c     **** 	ZERO = 0,
  45:../main.c     **** 	FRONT = 1,
  46:../main.c     **** 	BACK = 2,
  47:../main.c     **** 	ALL_WHEEL = 3,
  48:../main.c     **** 	CRAB = 4,
  49:../main.c     **** 	ROTATE =5
  50:../main.c     **** };
  51:../main.c     **** volatile enum STEERING_MODES Steering_mode = ALL_WHEEL;
  52:../main.c     **** volatile uint8_t New_Input = 0;
  53:../main.c     **** volatile uint32_t NO_New_Input_counter = 0;
  54:../main.c     **** 
  55:../main.c     **** 
  56:../main.c     **** //VAR CAN
  57:../main.c     **** int16_t Speeds_int16_r[4] = {0};
  58:../main.c     **** int16_t CAN_RX_0 = 0;
  59:../main.c     **** CAN_NODE_STATUS_t init_status;
  60:../main.c     **** int CAN_OK = 0;
  61:../main.c     **** uint8_t Inverters_CAN_state[4] = {0};
  62:../main.c     **** uint32_t CAN_10ms_counter = 0; // to send ever 10ms
  63:../main.c     **** 
  64:../main.c     **** volatile uint8_t reset_distance = 0;// reste from mircum by setting 1
  65:../main.c     **** float speed_fl_act = 0;float speed_fr_act = 0;float speed_rl_act = 0;float speed_rr_act = 0; // in 
  66:../main.c     **** float distance_fl_act = 0;float distance_fr_act = 0;float distance_rl_act = 0;float distance_rr_act
  67:../main.c     **** 
  68:../main.c     **** volatile uint8_t CAN_RX_Inverter_count = 0;
  69:../main.c     **** 
  70:../main.c     **** //ULTRASOCNIC
  71:../main.c     **** // reciving
  72:../main.c     **** volatile uint8_t CAN_Ultrasonic_No_messasge_count = 100;
  73:../main.c     **** volatile uint8_t CAN_state_Ultrasonic = 0;
  74:../main.c     **** volatile uint16_t Ultrasonic_cm_C = 0;
  75:../main.c     **** volatile uint16_t Ultrasonic_cm_L = 0;
  76:../main.c     **** volatile uint16_t Ultrasonic_cm_R = 0;
  77:../main.c     **** // filtering
  78:../main.c     **** float ALPHA_ULTARSONIC = 0.5; // giltering prameter for the Exponential moving average
  79:../main.c     **** #define POS_OBSTRUCTED_ANGLE_MIN 50
  80:../main.c     **** #define POS_OBSTRUCTED_ANGLE_MAX 210
  81:../main.c     **** #define NEG_OBSTRUCTED_ANGLE_MIN -150
  82:../main.c     **** #define NEG_OBSTRUCTED_ANGLE_MAX -310
  83:../main.c     **** uint8_t obstructed_L = 0, obstructed_R = 0;
  84:../main.c     **** float Fil_Ultrasonic_m_C = 4;
  85:../main.c     **** float Fil_Ultrasonic_m_L = 4;
  86:../main.c     **** float Fil_Ultrasonic_m_R = 4;
  87:../main.c     **** 
  88:../main.c     **** #define ULRTA_NUM_NO_DATA_INVALID 40
  89:../main.c     **** uint8_t Ultrsonic_data_invaildcounter[3] = {ULRTA_NUM_NO_DATA_INVALID, ULRTA_NUM_NO_DATA_INVALID, U
  90:../main.c     **** 
  91:../main.c     **** // obstacels
  92:../main.c     **** float Obstacel_F[2] = {4, 0};
  93:../main.c     **** float Obstacel_L[2] = {4, -4};
  94:../main.c     **** float Obstacel_R[2] = {4, 4};
  95:../main.c     **** 
  96:../main.c     **** float obstacel_F_x = 0, obstacel_L_x = 0, obstacel_L_y = 0, obstacel_R_x = 0, obstacel_R_y = 0;
  97:../main.c     **** uint8_t Obstacel_valid[3] = {0, 0, 0};
  98:../main.c     **** 
  99:../main.c     **** // collison avdoidance
 100:../main.c     **** #define CA_START 1
 101:../main.c     **** #define CA_STOP 0.2
 102:../main.c     **** float avg_Speeds = 0;
 103:../main.c     **** float act_trajctory_x = 0, act_trajctory_y = 0;
 104:../main.c     **** 
 105:../main.c     **** 
 106:../main.c     **** // Var RC
 107:../main.c     **** uint8_t RC_Signal_OK = 0, RC_Signal_not_OK_counter = 0; // 0 no ok 1 OK
 108:../main.c     **** uint32_t  captured_time_Steering=0, captured_time_Speed=0;
 109:../main.c     **** uint8_t RC_no_Speed_data_counter = 0, RC_no_Steering_data_counter = 0;
 110:../main.c     **** float RC_Speed = 0, RC_Steering = 0;
 111:../main.c     **** #define RC_NP_SPEED  1500000
 112:../main.c     **** #define RC_NP_STEERING  1540000
 113:../main.c     **** float RC_Speed_ns_to_mps = 0.00000125;
 114:../main.c     **** float RC_Steering_ns_to_deg = 0.00021;
 115:../main.c     **** 
 116:../main.c     **** volatile uint32_t RC_gear_100us_counter = 0, RC_AUX1_100us_counter = 0;
 117:../main.c     **** volatile uint8_t RC_Gear_state = 2, RC_AUX1_state = 2;
 118:../main.c     **** volatile uint8_t RC_Gear_duty = 2, RC_Gear_duty_OLD =2, RC_AUX1_duty = 2;
 119:../main.c     **** uint8_t RC_Speed_Stop = 1;
 120:../main.c     **** 
 121:../main.c     **** //VAR general
 122:../main.c     **** float Steering_direction = 0; // steering Angle
 123:../main.c     **** float Driving_speed = 0;
 124:../main.c     **** 
 125:../main.c     **** float R_Turn;
 126:../main.c     **** float Speed_ratio;
 127:../main.c     **** 
 128:../main.c     **** float speed_fl = 0;float speed_fr = 0;float speed_rl = 0;float speed_rr = 0; // in m/s
 129:../main.c     **** float angle_fl = 0;float angle_fr = 0;float angle_rl = 0;float angle_rr = 0; // in deg  0 straing a
 130:../main.c     **** 
 131:../main.c     **** volatile float Speeds[4] = {0, 0, 0, 0};
 132:../main.c     **** volatile float Steering_Angles[4] = {0, 0, 0, 0};
 133:../main.c     **** float Servo_PWMs[4] = {0, 0, 0, 0};
 134:../main.c     **** 
 135:../main.c     **** //values form inveter bioard over CAN
 136:../main.c     **** uint8_t Inveter_CAN_OK[4] = {0};
 137:../main.c     **** float Actual_Speeds[4] = {0};
 138:../main.c     **** float Actual_Distance[4] = {0};
 139:../main.c     **** 
 140:../main.c     **** // FUNCTIONS
 141:../main.c     **** void CAN_send_Speeds(float Speed_data[4]);
 142:../main.c     **** void CAN_reset_distance(uint8_t distance_to_reset[4]);
 143:../main.c     **** void Steering_set_Angles(float Angles_data_int[4]);
 144:../main.c     **** void Steering_Function(float Steering_direction_cal, float Driving_speed_cal, uint8_t Steering_mode
 145:../main.c     **** void RC_Recive(void);
 146:../main.c     **** void Servo_NP_setting(void);
 147:../main.c     **** void mode_led(uint8_t var);
 148:../main.c     **** float average(float a[],int num_values);
 149:../main.c     **** void CAN_Inveter_RX_Interperter(uint8_t data_RX[8], uint8_t Motor_on_rover);
 150:../main.c     **** void CAN_RX_Inverter_Read_Data();
 151:../main.c     **** void Ultra_sonic_filter(int16_t Ultrasonic_cm_C_clc, int16_t Ultrasonic_cm_L_clc, int16_t Ultrasoni
 152:../main.c     **** float Exp_moving_average(float new_value, float value, float ALPHA);
 153:../main.c     **** uint8_t Ultrasoinc_Obstructet_Test(float Angle);
 154:../main.c     **** void Collision_voidance();
 155:../main.c     **** 
 156:../main.c     **** 
 157:../main.c     **** int main(void)
 158:../main.c     **** {
 1009              	 .loc 6 158 0
 1010              	 .cfi_startproc
 1011 0000 90B5     	 push {r4,r7,lr}
 1012              	.LCFI30:
 1013              	 .cfi_def_cfa_offset 12
 1014              	 .cfi_offset 4,-12
 1015              	 .cfi_offset 7,-8
 1016              	 .cfi_offset 14,-4
 1017 0002 83B0     	 sub sp,sp,#12
 1018              	.LCFI31:
 1019              	 .cfi_def_cfa_offset 24
 1020 0004 00AF     	 add r7,sp,#0
 1021              	.LCFI32:
 1022              	 .cfi_def_cfa_register 7
 159:../main.c     ****   DAVE_STATUS_t status;
 160:../main.c     **** 
 161:../main.c     ****   status = DAVE_Init();           /* Initialization of DAVE APPs  */
 1023              	 .loc 6 161 0
 1024 0006 FC1D     	 add r4,r7,#7
 1025 0008 FFF7FEFF 	 bl DAVE_Init
 1026 000c 031C     	 mov r3,r0
 1027 000e 2370     	 strb r3,[r4]
 162:../main.c     **** 
 163:../main.c     ****   if (status != DAVE_STATUS_SUCCESS)
 1028              	 .loc 6 163 0
 1029 0010 FB1D     	 add r3,r7,#7
 1030 0012 1B78     	 ldrb r3,[r3]
 1031 0014 002B     	 cmp r3,#0
 1032 0016 00D0     	 beq .L22
 1033              	.L23:
 164:../main.c     ****   {
 165:../main.c     ****     /* Placeholder for error handler code. The while loop below can be replaced with an user error 
 166:../main.c     ****     XMC_DEBUG("DAVE APPs initialization failed\n");
 167:../main.c     **** 
 168:../main.c     ****     while(1U)
 169:../main.c     ****     {
 170:../main.c     **** 
 171:../main.c     ****     }
 1034              	 .loc 6 171 0 discriminator 1
 1035 0018 FEE7     	 b .L23
 1036              	.L22:
 172:../main.c     ****   }
 173:../main.c     **** 
 174:../main.c     ****   //Initialization of CAN
 175:../main.c     ****   	//CAN_NODE_STATUS_t init_status;
 176:../main.c     ****   	init_status = CAN_NODE_Init(&CAN_NODE_0);
 1037              	 .loc 6 176 0
 1038 001a 094B     	 ldr r3,.L26
 1039 001c 181C     	 mov r0,r3
 1040 001e FFF7FEFF 	 bl CAN_NODE_Init
 1041 0022 031C     	 mov r3,r0
 1042 0024 1A1C     	 mov r2,r3
 1043 0026 074B     	 ldr r3,.L26+4
 1044 0028 1A70     	 strb r2,[r3]
 177:../main.c     **** 
 178:../main.c     ****   	if (init_status != CAN_NODE_STATUS_SUCCESS) {
 1045              	 .loc 6 178 0
 1046 002a 064B     	 ldr r3,.L26+4
 1047 002c 1B78     	 ldrb r3,[r3]
 1048 002e 002B     	 cmp r3,#0
 1049 0030 02D1     	 bne .L24
 179:../main.c     ****   		XMC_DEBUG("CAN initialization failed\n");
 180:../main.c     ****   	}
 181:../main.c     ****   	else{
 182:../main.c     ****   		CAN_OK = 1;
 1050              	 .loc 6 182 0
 1051 0032 054B     	 ldr r3,.L26+8
 1052 0034 0122     	 mov r2,#1
 1053 0036 1A60     	 str r2,[r3]
 1054              	.L24:
 183:../main.c     ****   	}
 184:../main.c     **** 
 185:../main.c     ****   	// watchdog
 186:../main.c     ****   	WATCHDOG_Start();
 1055              	 .loc 6 186 0
 1056 0038 FFF7FEFF 	 bl WATCHDOG_Start
 1057              	.L25:
 187:../main.c     **** 
 188:../main.c     ****   /* Placeholder for user application code. The while loop below can be replaced with user applicat
 189:../main.c     ****   while(1U)
 190:../main.c     ****   {
 191:../main.c     **** 	// Servo_NP_setting();	  // nutral point servo setting
 192:../main.c     ****   }
 1058              	 .loc 6 192 0 discriminator 2
 1059 003c FEE7     	 b .L25
 1060              	.L27:
 1061 003e C046     	 .align 2
 1062              	.L26:
 1063 0040 00000000 	 .word CAN_NODE_0
 1064 0044 00000000 	 .word init_status
 1065 0048 00000000 	 .word CAN_OK
 1066              	 .cfi_endproc
 1067              	.LFE224:
 1069              	 .global __aeabi_fcmpgt
 1070              	 .global __aeabi_fcmplt
 1071              	 .global __aeabi_f2d
 1072              	 .global __aeabi_dcmplt
 1073              	 .global __aeabi_dcmpgt
 1074              	 .global __aeabi_ddiv
 1075              	 .global __aeabi_d2f
 1076              	 .global __aeabi_dadd
 1077              	 .global __aeabi_dmul
 1078              	 .global __aeabi_dsub
 1079              	 .global __aeabi_fmul
 1080              	 .global __aeabi_fdiv
 1081              	 .section .text.Steering_Function,"ax",%progbits
 1082              	 .align 2
 1083              	 .global Steering_Function
 1084              	 .code 16
 1085              	 .thumb_func
 1087              	Steering_Function:
 1088              	.LFB225:
 193:../main.c     **** }
 194:../main.c     **** 
 195:../main.c     **** 
 196:../main.c     **** void Steering_Function(float Steering_direction_cal, float Driving_speed_cal, uint8_t Steering_mode
 1089              	 .loc 6 196 0
 1090              	 .cfi_startproc
 1091 0000 F0B5     	 push {r4,r5,r6,r7,lr}
 1092              	.LCFI33:
 1093              	 .cfi_def_cfa_offset 20
 1094              	 .cfi_offset 4,-20
 1095              	 .cfi_offset 5,-16
 1096              	 .cfi_offset 6,-12
 1097              	 .cfi_offset 7,-8
 1098              	 .cfi_offset 14,-4
 1099 0002 85B0     	 sub sp,sp,#20
 1100              	.LCFI34:
 1101              	 .cfi_def_cfa_offset 40
 1102 0004 00AF     	 add r7,sp,#0
 1103              	.LCFI35:
 1104              	 .cfi_def_cfa_register 7
 1105 0006 F860     	 str r0,[r7,#12]
 1106 0008 B960     	 str r1,[r7,#8]
 1107 000a FB1D     	 add r3,r7,#7
 1108 000c 1A70     	 strb r2,[r3]
 197:../main.c     **** 	New_Input = 0;
 1109              	 .loc 6 197 0
 1110 000e B84B     	 ldr r3,.L115
 1111 0010 0022     	 mov r2,#0
 1112 0012 1A70     	 strb r2,[r3]
 198:../main.c     **** 
 199:../main.c     **** 	if(Driving_speed_cal > MAX_Speed) Driving_speed_cal = MAX_Speed;
 1113              	 .loc 6 199 0
 1114 0014 B868     	 ldr r0,[r7,#8]
 1115 0016 FE21     	 mov r1,#254
 1116 0018 8905     	 lsl r1,r1,#22
 1117 001a FFF7FEFF 	 bl __aeabi_fcmpgt
 1118 001e 031E     	 sub r3,r0,#0
 1119 0020 02D0     	 beq .L29
 1120              	 .loc 6 199 0 is_stmt 0 discriminator 1
 1121 0022 FE23     	 mov r3,#254
 1122 0024 9B05     	 lsl r3,r3,#22
 1123 0026 BB60     	 str r3,[r7,#8]
 1124              	.L29:
 200:../main.c     **** 	if(Driving_speed_cal < -MAX_Speed) Driving_speed_cal = -MAX_Speed;
 1125              	 .loc 6 200 0 is_stmt 1
 1126 0028 B868     	 ldr r0,[r7,#8]
 1127 002a B249     	 ldr r1,.L115+4
 1128 002c FFF7FEFF 	 bl __aeabi_fcmplt
 1129 0030 031E     	 sub r3,r0,#0
 1130 0032 01D0     	 beq .L31
 1131              	 .loc 6 200 0 is_stmt 0 discriminator 1
 1132 0034 AF4B     	 ldr r3,.L115+4
 1133 0036 BB60     	 str r3,[r7,#8]
 1134              	.L31:
 201:../main.c     **** 	if((0 < Driving_speed_cal) & (Driving_speed_cal < MIN_Speed)) Driving_speed_cal = 0;
 1135              	 .loc 6 201 0 is_stmt 1
 1136 0038 0123     	 mov r3,#1
 1137 003a 1C1C     	 add r4,r3,#0
 1138 003c B868     	 ldr r0,[r7,#8]
 1139 003e 0021     	 mov r1,#0
 1140 0040 FFF7FEFF 	 bl __aeabi_fcmpgt
 1141 0044 031E     	 sub r3,r0,#0
 1142 0046 01D1     	 bne .L33
 1143 0048 0023     	 mov r3,#0
 1144 004a 1C1C     	 add r4,r3,#0
 1145              	.L33:
 1146 004c E4B2     	 uxtb r4,r4
 1147 004e B868     	 ldr r0,[r7,#8]
 1148 0050 FFF7FEFF 	 bl __aeabi_f2d
 1149 0054 0A1C     	 mov r2,r1
 1150 0056 011C     	 mov r1,r0
 1151 0058 0123     	 mov r3,#1
 1152 005a 1D1C     	 add r5,r3,#0
 1153 005c 081C     	 mov r0,r1
 1154 005e 111C     	 mov r1,r2
 1155 0060 A54A     	 ldr r2,.L115+8
 1156 0062 A64B     	 ldr r3,.L115+12
 1157 0064 FFF7FEFF 	 bl __aeabi_dcmplt
 1158 0068 031E     	 sub r3,r0,#0
 1159 006a 01D1     	 bne .L34
 1160 006c 0023     	 mov r3,#0
 1161 006e 1D1C     	 add r5,r3,#0
 1162              	.L34:
 1163 0070 EBB2     	 uxtb r3,r5
 1164 0072 2340     	 and r3,r4
 1165 0074 DBB2     	 uxtb r3,r3
 1166 0076 002B     	 cmp r3,#0
 1167 0078 01D0     	 beq .L35
 1168              	 .loc 6 201 0 is_stmt 0 discriminator 1
 1169 007a 0023     	 mov r3,#0
 1170 007c BB60     	 str r3,[r7,#8]
 1171              	.L35:
 202:../main.c     **** 	if((0 > Driving_speed_cal) & (Driving_speed_cal > -MIN_Speed)) Driving_speed_cal = 0;
 1172              	 .loc 6 202 0 is_stmt 1
 1173 007e 0123     	 mov r3,#1
 1174 0080 1C1C     	 add r4,r3,#0
 1175 0082 B868     	 ldr r0,[r7,#8]
 1176 0084 0021     	 mov r1,#0
 1177 0086 FFF7FEFF 	 bl __aeabi_fcmplt
 1178 008a 031E     	 sub r3,r0,#0
 1179 008c 01D1     	 bne .L36
 1180 008e 0023     	 mov r3,#0
 1181 0090 1C1C     	 add r4,r3,#0
 1182              	.L36:
 1183 0092 E4B2     	 uxtb r4,r4
 1184 0094 B868     	 ldr r0,[r7,#8]
 1185 0096 FFF7FEFF 	 bl __aeabi_f2d
 1186 009a 0A1C     	 mov r2,r1
 1187 009c 011C     	 mov r1,r0
 1188 009e 0123     	 mov r3,#1
 1189 00a0 1D1C     	 add r5,r3,#0
 1190 00a2 081C     	 mov r0,r1
 1191 00a4 111C     	 mov r1,r2
 1192 00a6 944A     	 ldr r2,.L115+8
 1193 00a8 954B     	 ldr r3,.L115+16
 1194 00aa FFF7FEFF 	 bl __aeabi_dcmpgt
 1195 00ae 031E     	 sub r3,r0,#0
 1196 00b0 01D1     	 bne .L37
 1197 00b2 0023     	 mov r3,#0
 1198 00b4 1D1C     	 add r5,r3,#0
 1199              	.L37:
 1200 00b6 EBB2     	 uxtb r3,r5
 1201 00b8 2340     	 and r3,r4
 1202 00ba DBB2     	 uxtb r3,r3
 1203 00bc 002B     	 cmp r3,#0
 1204 00be 01D0     	 beq .L38
 1205              	 .loc 6 202 0 is_stmt 0 discriminator 1
 1206 00c0 0023     	 mov r3,#0
 1207 00c2 BB60     	 str r3,[r7,#8]
 1208              	.L38:
 203:../main.c     **** 
 204:../main.c     **** 	switch(Steering_mode_cal) // options 'Front'; 'Rear'; '4_Wheel'; 'Carb'; 'Rotate'
 1209              	 .loc 6 204 0 is_stmt 1
 1210 00c4 FB1D     	 add r3,r7,#7
 1211 00c6 1B78     	 ldrb r3,[r3]
 1212 00c8 052B     	 cmp r3,#5
 1213 00ca 01D9     	 bls .LCB549
 1214 00cc 00F04AFE 	 bl .L39
 1215              	.LCB549:
 1216 00d0 9A00     	 lsl r2,r3,#2
 1217 00d2 8C4B     	 ldr r3,.L115+20
 1218 00d4 D318     	 add r3,r2,r3
 1219 00d6 1B68     	 ldr r3,[r3]
 1220 00d8 9F46     	 mov pc,r3
 1221              	 .section .rodata.Steering_Function,"a",%progbits
 1222              	 .align 2
 1223              	.L41:
 1224 0000 640D0000 	 .word .L39
 1225 0004 DA000000 	 .word .L40
 1226 0008 A2040000 	 .word .L42
 1227 000c 6C080000 	 .word .L43
 1228 0010 7C0C0000 	 .word .L44
 1229 0014 DC0C0000 	 .word .L45
 1230              	 .section .text.Steering_Function
 1231              	.L40:
 205:../main.c     **** 	{
 206:../main.c     **** 		case FRONT://#############################################################
 207:../main.c     **** 			// steering limits
 208:../main.c     **** 			if(Steering_direction_cal > 50) Steering_direction_cal = 50;
 1232              	 .loc 6 208 0
 1233 00da F868     	 ldr r0,[r7,#12]
 1234 00dc 8A49     	 ldr r1,.L115+24
 1235 00de FFF7FEFF 	 bl __aeabi_fcmpgt
 1236 00e2 031E     	 sub r3,r0,#0
 1237 00e4 01D0     	 beq .L46
 1238              	 .loc 6 208 0 is_stmt 0 discriminator 1
 1239 00e6 884B     	 ldr r3,.L115+24
 1240 00e8 FB60     	 str r3,[r7,#12]
 1241              	.L46:
 209:../main.c     **** 			if(Steering_direction_cal < -50) Steering_direction_cal = -50;
 1242              	 .loc 6 209 0 is_stmt 1
 1243 00ea F868     	 ldr r0,[r7,#12]
 1244 00ec 8749     	 ldr r1,.L115+28
 1245 00ee FFF7FEFF 	 bl __aeabi_fcmplt
 1246 00f2 031E     	 sub r3,r0,#0
 1247 00f4 01D0     	 beq .L48
 1248              	 .loc 6 209 0 is_stmt 0 discriminator 1
 1249 00f6 854B     	 ldr r3,.L115+28
 1250 00f8 FB60     	 str r3,[r7,#12]
 1251              	.L48:
 210:../main.c     **** 
 211:../main.c     **** 			// pre calc
 212:../main.c     **** 			R_Turn = WHEEL_BASE / tan(Steering_direction_cal / RAD_TO_DEG); // to truni graduis converstion
 1252              	 .loc 6 212 0 is_stmt 1
 1253 00fa F868     	 ldr r0,[r7,#12]
 1254 00fc FFF7FEFF 	 bl __aeabi_f2d
 1255 0100 031C     	 mov r3,r0
 1256 0102 0C1C     	 mov r4,r1
 1257 0104 181C     	 mov r0,r3
 1258 0106 211C     	 mov r1,r4
 1259 0108 814A     	 ldr r2,.L115+32
 1260 010a 824B     	 ldr r3,.L115+36
 1261 010c FFF7FEFF 	 bl __aeabi_ddiv
 1262 0110 031C     	 mov r3,r0
 1263 0112 0C1C     	 mov r4,r1
 1264 0114 181C     	 mov r0,r3
 1265 0116 211C     	 mov r1,r4
 1266 0118 FFF7FEFF 	 bl tan
 1267 011c 031C     	 mov r3,r0
 1268 011e 0C1C     	 mov r4,r1
 1269 0120 7D48     	 ldr r0,.L115+40
 1270 0122 7E49     	 ldr r1,.L115+44
 1271 0124 1A1C     	 mov r2,r3
 1272 0126 231C     	 mov r3,r4
 1273 0128 FFF7FEFF 	 bl __aeabi_ddiv
 1274 012c 031C     	 mov r3,r0
 1275 012e 0C1C     	 mov r4,r1
 1276 0130 181C     	 mov r0,r3
 1277 0132 211C     	 mov r1,r4
 1278 0134 FFF7FEFF 	 bl __aeabi_d2f
 1279 0138 021C     	 add r2,r0,#0
 1280 013a 794B     	 ldr r3,.L115+48
 1281 013c 1A60     	 str r2,[r3]
 213:../main.c     **** 			Speed_ratio = (2 * (copysign(R_Turn,1) + HALF_TRACK_WIDTH) * M_PI) / (2 * copysign(R_Turn,1) * M
 1282              	 .loc 6 213 0
 1283 013e 784B     	 ldr r3,.L115+48
 1284 0140 1B68     	 ldr r3,[r3]
 1285 0142 5B00     	 lsl r3,r3,#1
 1286 0144 5B08     	 lsr r3,r3,#1
 1287 0146 181C     	 add r0,r3,#0
 1288 0148 FFF7FEFF 	 bl __aeabi_f2d
 1289 014c 031C     	 mov r3,r0
 1290 014e 0C1C     	 mov r4,r1
 1291 0150 181C     	 mov r0,r3
 1292 0152 211C     	 mov r1,r4
 1293 0154 734A     	 ldr r2,.L115+52
 1294 0156 744B     	 ldr r3,.L115+56
 1295 0158 FFF7FEFF 	 bl __aeabi_dadd
 1296 015c 031C     	 mov r3,r0
 1297 015e 0C1C     	 mov r4,r1
 1298 0160 181C     	 mov r0,r3
 1299 0162 211C     	 mov r1,r4
 1300 0164 1A1C     	 mov r2,r3
 1301 0166 231C     	 mov r3,r4
 1302 0168 FFF7FEFF 	 bl __aeabi_dadd
 1303 016c 031C     	 mov r3,r0
 1304 016e 0C1C     	 mov r4,r1
 1305 0170 181C     	 mov r0,r3
 1306 0172 211C     	 mov r1,r4
 1307 0174 6D4A     	 ldr r2,.L115+60
 1308 0176 6E4B     	 ldr r3,.L115+64
 1309 0178 FFF7FEFF 	 bl __aeabi_dmul
 1310 017c 031C     	 mov r3,r0
 1311 017e 0C1C     	 mov r4,r1
 1312 0180 1D1C     	 mov r5,r3
 1313 0182 261C     	 mov r6,r4
 1314 0184 664B     	 ldr r3,.L115+48
 1315 0186 1B68     	 ldr r3,[r3]
 1316 0188 5B00     	 lsl r3,r3,#1
 1317 018a 5B08     	 lsr r3,r3,#1
 1318 018c 181C     	 add r0,r3,#0
 1319 018e FFF7FEFF 	 bl __aeabi_f2d
 1320 0192 031C     	 mov r3,r0
 1321 0194 0C1C     	 mov r4,r1
 1322 0196 181C     	 mov r0,r3
 1323 0198 211C     	 mov r1,r4
 1324 019a 1A1C     	 mov r2,r3
 1325 019c 231C     	 mov r3,r4
 1326 019e FFF7FEFF 	 bl __aeabi_dadd
 1327 01a2 031C     	 mov r3,r0
 1328 01a4 0C1C     	 mov r4,r1
 1329 01a6 181C     	 mov r0,r3
 1330 01a8 211C     	 mov r1,r4
 1331 01aa 604A     	 ldr r2,.L115+60
 1332 01ac 604B     	 ldr r3,.L115+64
 1333 01ae FFF7FEFF 	 bl __aeabi_dmul
 1334 01b2 031C     	 mov r3,r0
 1335 01b4 0C1C     	 mov r4,r1
 1336 01b6 281C     	 mov r0,r5
 1337 01b8 311C     	 mov r1,r6
 1338 01ba 1A1C     	 mov r2,r3
 1339 01bc 231C     	 mov r3,r4
 1340 01be FFF7FEFF 	 bl __aeabi_ddiv
 1341 01c2 031C     	 mov r3,r0
 1342 01c4 0C1C     	 mov r4,r1
 1343 01c6 181C     	 mov r0,r3
 1344 01c8 211C     	 mov r1,r4
 1345 01ca FFF7FEFF 	 bl __aeabi_d2f
 1346 01ce 021C     	 add r2,r0,#0
 1347 01d0 584B     	 ldr r3,.L115+68
 1348 01d2 1A60     	 str r2,[r3]
 214:../main.c     **** 
 215:../main.c     **** 			if((R_TRUN_MIN < R_Turn) && (R_Turn < R_TRUN_MAX)){
 1349              	 .loc 6 215 0
 1350 01d4 524B     	 ldr r3,.L115+48
 1351 01d6 1B68     	 ldr r3,[r3]
 1352 01d8 181C     	 add r0,r3,#0
 1353 01da FFF7FEFF 	 bl __aeabi_f2d
 1354 01de 031C     	 mov r3,r0
 1355 01e0 0C1C     	 mov r4,r1
 1356 01e2 181C     	 mov r0,r3
 1357 01e4 211C     	 mov r1,r4
 1358 01e6 444A     	 ldr r2,.L115+8
 1359 01e8 444B     	 ldr r3,.L115+12
 1360 01ea FFF7FEFF 	 bl __aeabi_dcmpgt
 1361 01ee 031E     	 sub r3,r0,#0
 1362 01f0 00D1     	 bne .LCB689
 1363 01f2 AFE0     	 b .L50
 1364              	.LCB689:
 1365              	 .loc 6 215 0 is_stmt 0 discriminator 1
 1366 01f4 4A4B     	 ldr r3,.L115+48
 1367 01f6 1B68     	 ldr r3,[r3]
 1368 01f8 181C     	 add r0,r3,#0
 1369 01fa 4F49     	 ldr r1,.L115+72
 1370 01fc FFF7FEFF 	 bl __aeabi_fcmplt
 1371 0200 031E     	 sub r3,r0,#0
 1372 0202 00D1     	 bne .LCB697
 1373 0204 A6E0     	 b .L50
 1374              	.LCB697:
 216:../main.c     **** 				angle_fl = RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn + HALF_TRACK_WIDTH)); // out wheel
 1375              	 .loc 6 216 0 is_stmt 1
 1376 0206 464B     	 ldr r3,.L115+48
 1377 0208 1B68     	 ldr r3,[r3]
 1378 020a 181C     	 add r0,r3,#0
 1379 020c FFF7FEFF 	 bl __aeabi_f2d
 1380 0210 031C     	 mov r3,r0
 1381 0212 0C1C     	 mov r4,r1
 1382 0214 181C     	 mov r0,r3
 1383 0216 211C     	 mov r1,r4
 1384 0218 424A     	 ldr r2,.L115+52
 1385 021a 434B     	 ldr r3,.L115+56
 1386 021c FFF7FEFF 	 bl __aeabi_dadd
 1387 0220 031C     	 mov r3,r0
 1388 0222 0C1C     	 mov r4,r1
 1389 0224 3C48     	 ldr r0,.L115+40
 1390 0226 3D49     	 ldr r1,.L115+44
 1391 0228 1A1C     	 mov r2,r3
 1392 022a 231C     	 mov r3,r4
 1393 022c FFF7FEFF 	 bl __aeabi_ddiv
 1394 0230 031C     	 mov r3,r0
 1395 0232 0C1C     	 mov r4,r1
 1396 0234 181C     	 mov r0,r3
 1397 0236 211C     	 mov r1,r4
 1398 0238 FFF7FEFF 	 bl atan
 1399 023c 031C     	 mov r3,r0
 1400 023e 0C1C     	 mov r4,r1
 1401 0240 181C     	 mov r0,r3
 1402 0242 211C     	 mov r1,r4
 1403 0244 324A     	 ldr r2,.L115+32
 1404 0246 334B     	 ldr r3,.L115+36
 1405 0248 FFF7FEFF 	 bl __aeabi_dmul
 1406 024c 031C     	 mov r3,r0
 1407 024e 0C1C     	 mov r4,r1
 1408 0250 181C     	 mov r0,r3
 1409 0252 211C     	 mov r1,r4
 1410 0254 FFF7FEFF 	 bl __aeabi_d2f
 1411 0258 021C     	 add r2,r0,#0
 1412 025a 384B     	 ldr r3,.L115+76
 1413 025c 1A60     	 str r2,[r3]
 217:../main.c     **** 				angle_fr = RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn - HALF_TRACK_WIDTH)); // in wheel
 1414              	 .loc 6 217 0
 1415 025e 304B     	 ldr r3,.L115+48
 1416 0260 1B68     	 ldr r3,[r3]
 1417 0262 181C     	 add r0,r3,#0
 1418 0264 FFF7FEFF 	 bl __aeabi_f2d
 1419 0268 031C     	 mov r3,r0
 1420 026a 0C1C     	 mov r4,r1
 1421 026c 181C     	 mov r0,r3
 1422 026e 211C     	 mov r1,r4
 1423 0270 2C4A     	 ldr r2,.L115+52
 1424 0272 2D4B     	 ldr r3,.L115+56
 1425 0274 FFF7FEFF 	 bl __aeabi_dsub
 1426 0278 031C     	 mov r3,r0
 1427 027a 0C1C     	 mov r4,r1
 1428 027c 2648     	 ldr r0,.L115+40
 1429 027e 2749     	 ldr r1,.L115+44
 1430 0280 1A1C     	 mov r2,r3
 1431 0282 231C     	 mov r3,r4
 1432 0284 FFF7FEFF 	 bl __aeabi_ddiv
 1433 0288 031C     	 mov r3,r0
 1434 028a 0C1C     	 mov r4,r1
 1435 028c 181C     	 mov r0,r3
 1436 028e 211C     	 mov r1,r4
 1437 0290 FFF7FEFF 	 bl atan
 1438 0294 031C     	 mov r3,r0
 1439 0296 0C1C     	 mov r4,r1
 1440 0298 181C     	 mov r0,r3
 1441 029a 211C     	 mov r1,r4
 1442 029c 1C4A     	 ldr r2,.L115+32
 1443 029e 1D4B     	 ldr r3,.L115+36
 1444 02a0 FFF7FEFF 	 bl __aeabi_dmul
 1445 02a4 031C     	 mov r3,r0
 1446 02a6 0C1C     	 mov r4,r1
 1447 02a8 181C     	 mov r0,r3
 1448 02aa 211C     	 mov r1,r4
 1449 02ac FFF7FEFF 	 bl __aeabi_d2f
 1450 02b0 021C     	 add r2,r0,#0
 1451 02b2 234B     	 ldr r3,.L115+80
 1452 02b4 1A60     	 str r2,[r3]
 218:../main.c     **** 
 219:../main.c     **** 				speed_fl = Driving_speed_cal * Speed_ratio;
 1453              	 .loc 6 219 0
 1454 02b6 1F4B     	 ldr r3,.L115+68
 1455 02b8 1B68     	 ldr r3,[r3]
 1456 02ba 181C     	 add r0,r3,#0
 1457 02bc B968     	 ldr r1,[r7,#8]
 1458 02be FFF7FEFF 	 bl __aeabi_fmul
 1459 02c2 031C     	 add r3,r0,#0
 1460 02c4 1A1C     	 add r2,r3,#0
 1461 02c6 1F4B     	 ldr r3,.L115+84
 1462 02c8 1A60     	 str r2,[r3]
 220:../main.c     **** 				speed_fr = Driving_speed_cal / Speed_ratio;
 1463              	 .loc 6 220 0
 1464 02ca 1A4B     	 ldr r3,.L115+68
 1465 02cc 1B68     	 ldr r3,[r3]
 1466 02ce B868     	 ldr r0,[r7,#8]
 1467 02d0 191C     	 add r1,r3,#0
 1468 02d2 FFF7FEFF 	 bl __aeabi_fdiv
 1469 02d6 031C     	 add r3,r0,#0
 1470 02d8 1A1C     	 add r2,r3,#0
 1471 02da 1B4B     	 ldr r3,.L115+88
 1472 02dc 1A60     	 str r2,[r3]
 221:../main.c     **** 				//speed_rl = Driving_speed_cal * Speed_ratio;
 222:../main.c     **** 				//speed_rr = Driving_speed_cal / Speed_ratio;
 223:../main.c     **** 
 224:../main.c     **** 				speed_rl = speed_fl;
 1473              	 .loc 6 224 0
 1474 02de 194B     	 ldr r3,.L115+84
 1475 02e0 1A68     	 ldr r2,[r3]
 1476 02e2 1A4B     	 ldr r3,.L115+92
 1477 02e4 1A60     	 str r2,[r3]
 225:../main.c     **** 				speed_rr = speed_fr;
 1478              	 .loc 6 225 0
 1479 02e6 184B     	 ldr r3,.L115+88
 1480 02e8 1A68     	 ldr r2,[r3]
 1481 02ea 194B     	 ldr r3,.L115+96
 1482 02ec 1A60     	 str r2,[r3]
 1483 02ee D0E0     	 b .L53
 1484              	.L116:
 1485              	 .align 2
 1486              	.L115:
 1487 02f0 00000000 	 .word New_Input
 1488 02f4 000080BF 	 .word -1082130432
 1489 02f8 9A999999 	 .word -1717986918
 1490 02fc 9999A93F 	 .word 1068079513
 1491 0300 9999A9BF 	 .word -1079404135
 1492 0304 00000000 	 .word .L41
 1493 0308 00004842 	 .word 1112014848
 1494 030c 000048C2 	 .word -1035468800
 1495 0310 D9CEF753 	 .word 1408749273
 1496 0314 E3A54C40 	 .word 1078765027
 1497 0318 79E92631 	 .word 824633721
 1498 031c 08ACDC3F 	 .word 1071426568
 1499 0320 00000000 	 .word R_Turn
 1500 0324 77BE9F1A 	 .word 446676599
 1501 0328 2FDDC43F 	 .word 1069866287
 1502 032c 182D4454 	 .word 1413754136
 1503 0330 FB210940 	 .word 1074340347
 1504 0334 00000000 	 .word Speed_ratio
 1505 0338 0000A041 	 .word 1101004800
 1506 033c 00000000 	 .word angle_fl
 1507 0340 00000000 	 .word angle_fr
 1508 0344 00000000 	 .word speed_fl
 1509 0348 00000000 	 .word speed_fr
 1510 034c 00000000 	 .word speed_rl
 1511 0350 00000000 	 .word speed_rr
 1512              	.L50:
 226:../main.c     **** 			}
 227:../main.c     **** 			else if((- R_TRUN_MIN > R_Turn) && (R_Turn > -R_TRUN_MAX)){
 1513              	 .loc 6 227 0
 1514 0354 D84B     	 ldr r3,.L117
 1515 0356 1B68     	 ldr r3,[r3]
 1516 0358 181C     	 add r0,r3,#0
 1517 035a FFF7FEFF 	 bl __aeabi_f2d
 1518 035e 031C     	 mov r3,r0
 1519 0360 0C1C     	 mov r4,r1
 1520 0362 181C     	 mov r0,r3
 1521 0364 211C     	 mov r1,r4
 1522 0366 D54A     	 ldr r2,.L117+4
 1523 0368 D54B     	 ldr r3,.L117+8
 1524 036a FFF7FEFF 	 bl __aeabi_dcmplt
 1525 036e 031E     	 sub r3,r0,#0
 1526 0370 00D1     	 bne .LCB847
 1527 0372 7CE0     	 b .L54
 1528              	.LCB847:
 1529              	 .loc 6 227 0 is_stmt 0 discriminator 1
 1530 0374 D04B     	 ldr r3,.L117
 1531 0376 1B68     	 ldr r3,[r3]
 1532 0378 181C     	 add r0,r3,#0
 1533 037a D249     	 ldr r1,.L117+12
 1534 037c FFF7FEFF 	 bl __aeabi_fcmpgt
 1535 0380 031E     	 sub r3,r0,#0
 1536 0382 74D0     	 beq .L54
 228:../main.c     **** 				angle_fl = RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn + HALF_TRACK_WIDTH)); // in wheel
 1537              	 .loc 6 228 0 is_stmt 1
 1538 0384 CC4B     	 ldr r3,.L117
 1539 0386 1B68     	 ldr r3,[r3]
 1540 0388 181C     	 add r0,r3,#0
 1541 038a FFF7FEFF 	 bl __aeabi_f2d
 1542 038e 031C     	 mov r3,r0
 1543 0390 0C1C     	 mov r4,r1
 1544 0392 181C     	 mov r0,r3
 1545 0394 211C     	 mov r1,r4
 1546 0396 CC4A     	 ldr r2,.L117+16
 1547 0398 CC4B     	 ldr r3,.L117+20
 1548 039a FFF7FEFF 	 bl __aeabi_dadd
 1549 039e 031C     	 mov r3,r0
 1550 03a0 0C1C     	 mov r4,r1
 1551 03a2 CB48     	 ldr r0,.L117+24
 1552 03a4 CB49     	 ldr r1,.L117+28
 1553 03a6 1A1C     	 mov r2,r3
 1554 03a8 231C     	 mov r3,r4
 1555 03aa FFF7FEFF 	 bl __aeabi_ddiv
 1556 03ae 031C     	 mov r3,r0
 1557 03b0 0C1C     	 mov r4,r1
 1558 03b2 181C     	 mov r0,r3
 1559 03b4 211C     	 mov r1,r4
 1560 03b6 FFF7FEFF 	 bl atan
 1561 03ba 031C     	 mov r3,r0
 1562 03bc 0C1C     	 mov r4,r1
 1563 03be 181C     	 mov r0,r3
 1564 03c0 211C     	 mov r1,r4
 1565 03c2 C54A     	 ldr r2,.L117+32
 1566 03c4 C54B     	 ldr r3,.L117+36
 1567 03c6 FFF7FEFF 	 bl __aeabi_dmul
 1568 03ca 031C     	 mov r3,r0
 1569 03cc 0C1C     	 mov r4,r1
 1570 03ce 181C     	 mov r0,r3
 1571 03d0 211C     	 mov r1,r4
 1572 03d2 FFF7FEFF 	 bl __aeabi_d2f
 1573 03d6 021C     	 add r2,r0,#0
 1574 03d8 C14B     	 ldr r3,.L117+40
 1575 03da 1A60     	 str r2,[r3]
 229:../main.c     **** 				angle_fr = RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn - HALF_TRACK_WIDTH)); // out wheel
 1576              	 .loc 6 229 0
 1577 03dc B64B     	 ldr r3,.L117
 1578 03de 1B68     	 ldr r3,[r3]
 1579 03e0 181C     	 add r0,r3,#0
 1580 03e2 FFF7FEFF 	 bl __aeabi_f2d
 1581 03e6 031C     	 mov r3,r0
 1582 03e8 0C1C     	 mov r4,r1
 1583 03ea 181C     	 mov r0,r3
 1584 03ec 211C     	 mov r1,r4
 1585 03ee B64A     	 ldr r2,.L117+16
 1586 03f0 B64B     	 ldr r3,.L117+20
 1587 03f2 FFF7FEFF 	 bl __aeabi_dsub
 1588 03f6 031C     	 mov r3,r0
 1589 03f8 0C1C     	 mov r4,r1
 1590 03fa B548     	 ldr r0,.L117+24
 1591 03fc B549     	 ldr r1,.L117+28
 1592 03fe 1A1C     	 mov r2,r3
 1593 0400 231C     	 mov r3,r4
 1594 0402 FFF7FEFF 	 bl __aeabi_ddiv
 1595 0406 031C     	 mov r3,r0
 1596 0408 0C1C     	 mov r4,r1
 1597 040a 181C     	 mov r0,r3
 1598 040c 211C     	 mov r1,r4
 1599 040e FFF7FEFF 	 bl atan
 1600 0412 031C     	 mov r3,r0
 1601 0414 0C1C     	 mov r4,r1
 1602 0416 181C     	 mov r0,r3
 1603 0418 211C     	 mov r1,r4
 1604 041a AF4A     	 ldr r2,.L117+32
 1605 041c AF4B     	 ldr r3,.L117+36
 1606 041e FFF7FEFF 	 bl __aeabi_dmul
 1607 0422 031C     	 mov r3,r0
 1608 0424 0C1C     	 mov r4,r1
 1609 0426 181C     	 mov r0,r3
 1610 0428 211C     	 mov r1,r4
 1611 042a FFF7FEFF 	 bl __aeabi_d2f
 1612 042e 021C     	 add r2,r0,#0
 1613 0430 AC4B     	 ldr r3,.L117+44
 1614 0432 1A60     	 str r2,[r3]
 230:../main.c     **** 
 231:../main.c     **** 				speed_fl = Driving_speed_cal / Speed_ratio;
 1615              	 .loc 6 231 0
 1616 0434 AC4B     	 ldr r3,.L117+48
 1617 0436 1B68     	 ldr r3,[r3]
 1618 0438 B868     	 ldr r0,[r7,#8]
 1619 043a 191C     	 add r1,r3,#0
 1620 043c FFF7FEFF 	 bl __aeabi_fdiv
 1621 0440 031C     	 add r3,r0,#0
 1622 0442 1A1C     	 add r2,r3,#0
 1623 0444 A94B     	 ldr r3,.L117+52
 1624 0446 1A60     	 str r2,[r3]
 232:../main.c     **** 				speed_fr = Driving_speed_cal * Speed_ratio;
 1625              	 .loc 6 232 0
 1626 0448 A74B     	 ldr r3,.L117+48
 1627 044a 1B68     	 ldr r3,[r3]
 1628 044c 181C     	 add r0,r3,#0
 1629 044e B968     	 ldr r1,[r7,#8]
 1630 0450 FFF7FEFF 	 bl __aeabi_fmul
 1631 0454 031C     	 add r3,r0,#0
 1632 0456 1A1C     	 add r2,r3,#0
 1633 0458 A54B     	 ldr r3,.L117+56
 1634 045a 1A60     	 str r2,[r3]
 233:../main.c     **** 				//speed_rl = Driving_speed_cal / Speed_ratio;
 234:../main.c     **** 				//speed_rr = Driving_speed_cal * Speed_ratio;
 235:../main.c     **** 
 236:../main.c     **** 				speed_rl = speed_fl;
 1635              	 .loc 6 236 0
 1636 045c A34B     	 ldr r3,.L117+52
 1637 045e 1A68     	 ldr r2,[r3]
 1638 0460 A44B     	 ldr r3,.L117+60
 1639 0462 1A60     	 str r2,[r3]
 237:../main.c     **** 				speed_rr = speed_fr;
 1640              	 .loc 6 237 0
 1641 0464 A24B     	 ldr r3,.L117+56
 1642 0466 1A68     	 ldr r2,[r3]
 1643 0468 A34B     	 ldr r3,.L117+64
 1644 046a 1A60     	 str r2,[r3]
 1645 046c 11E0     	 b .L53
 1646              	.L54:
 238:../main.c     **** 			}
 239:../main.c     **** 			else{
 240:../main.c     **** 				angle_fl = 0;
 1647              	 .loc 6 240 0
 1648 046e 9C4B     	 ldr r3,.L117+40
 1649 0470 0022     	 mov r2,#0
 1650 0472 1A60     	 str r2,[r3]
 241:../main.c     **** 				angle_fr = 0;
 1651              	 .loc 6 241 0
 1652 0474 9B4B     	 ldr r3,.L117+44
 1653 0476 0022     	 mov r2,#0
 1654 0478 1A60     	 str r2,[r3]
 242:../main.c     **** 
 243:../main.c     **** 				speed_fl = Driving_speed_cal;
 1655              	 .loc 6 243 0
 1656 047a 9C4B     	 ldr r3,.L117+52
 1657 047c BA68     	 ldr r2,[r7,#8]
 1658 047e 1A60     	 str r2,[r3]
 244:../main.c     **** 				speed_fr = Driving_speed_cal;
 1659              	 .loc 6 244 0
 1660 0480 9B4B     	 ldr r3,.L117+56
 1661 0482 BA68     	 ldr r2,[r7,#8]
 1662 0484 1A60     	 str r2,[r3]
 245:../main.c     **** 				speed_rl = Driving_speed_cal;
 1663              	 .loc 6 245 0
 1664 0486 9B4B     	 ldr r3,.L117+60
 1665 0488 BA68     	 ldr r2,[r7,#8]
 1666 048a 1A60     	 str r2,[r3]
 246:../main.c     **** 				speed_rr = Driving_speed_cal;
 1667              	 .loc 6 246 0
 1668 048c 9A4B     	 ldr r3,.L117+64
 1669 048e BA68     	 ldr r2,[r7,#8]
 1670 0490 1A60     	 str r2,[r3]
 1671              	.L53:
 247:../main.c     **** 			}
 248:../main.c     **** 
 249:../main.c     **** 			//rear axle
 250:../main.c     **** 			angle_rl = 0;
 1672              	 .loc 6 250 0
 1673 0492 9A4B     	 ldr r3,.L117+68
 1674 0494 0022     	 mov r2,#0
 1675 0496 1A60     	 str r2,[r3]
 251:../main.c     **** 			angle_rr = 0;
 1676              	 .loc 6 251 0
 1677 0498 994B     	 ldr r3,.L117+72
 1678 049a 0022     	 mov r2,#0
 1679 049c 1A60     	 str r2,[r3]
 252:../main.c     **** 			break;
 1680              	 .loc 6 252 0
 1681 049e 00F079FC 	 bl .L57
 1682              	.L42:
 253:../main.c     **** 
 254:../main.c     **** 		case BACK:// rear #############################################################
 255:../main.c     **** 			// steering limits
 256:../main.c     **** 			if(Steering_direction_cal > 50) Steering_direction_cal = 50;
 1683              	 .loc 6 256 0
 1684 04a2 F868     	 ldr r0,[r7,#12]
 1685 04a4 9749     	 ldr r1,.L117+76
 1686 04a6 FFF7FEFF 	 bl __aeabi_fcmpgt
 1687 04aa 031E     	 sub r3,r0,#0
 1688 04ac 01D0     	 beq .L58
 1689              	 .loc 6 256 0 is_stmt 0 discriminator 1
 1690 04ae 954B     	 ldr r3,.L117+76
 1691 04b0 FB60     	 str r3,[r7,#12]
 1692              	.L58:
 257:../main.c     **** 			if(Steering_direction_cal < -50) Steering_direction_cal = -50;
 1693              	 .loc 6 257 0 is_stmt 1
 1694 04b2 F868     	 ldr r0,[r7,#12]
 1695 04b4 9449     	 ldr r1,.L117+80
 1696 04b6 FFF7FEFF 	 bl __aeabi_fcmplt
 1697 04ba 031E     	 sub r3,r0,#0
 1698 04bc 01D0     	 beq .L60
 1699              	 .loc 6 257 0 is_stmt 0 discriminator 1
 1700 04be 924B     	 ldr r3,.L117+80
 1701 04c0 FB60     	 str r3,[r7,#12]
 1702              	.L60:
 258:../main.c     **** 
 259:../main.c     **** 			// pre calc
 260:../main.c     **** 			R_Turn = WHEEL_BASE / tan(Steering_direction_cal / RAD_TO_DEG); // to truni graduis converstion
 1703              	 .loc 6 260 0 is_stmt 1
 1704 04c2 F868     	 ldr r0,[r7,#12]
 1705 04c4 FFF7FEFF 	 bl __aeabi_f2d
 1706 04c8 031C     	 mov r3,r0
 1707 04ca 0C1C     	 mov r4,r1
 1708 04cc 181C     	 mov r0,r3
 1709 04ce 211C     	 mov r1,r4
 1710 04d0 814A     	 ldr r2,.L117+32
 1711 04d2 824B     	 ldr r3,.L117+36
 1712 04d4 FFF7FEFF 	 bl __aeabi_ddiv
 1713 04d8 031C     	 mov r3,r0
 1714 04da 0C1C     	 mov r4,r1
 1715 04dc 181C     	 mov r0,r3
 1716 04de 211C     	 mov r1,r4
 1717 04e0 FFF7FEFF 	 bl tan
 1718 04e4 031C     	 mov r3,r0
 1719 04e6 0C1C     	 mov r4,r1
 1720 04e8 7948     	 ldr r0,.L117+24
 1721 04ea 7A49     	 ldr r1,.L117+28
 1722 04ec 1A1C     	 mov r2,r3
 1723 04ee 231C     	 mov r3,r4
 1724 04f0 FFF7FEFF 	 bl __aeabi_ddiv
 1725 04f4 031C     	 mov r3,r0
 1726 04f6 0C1C     	 mov r4,r1
 1727 04f8 181C     	 mov r0,r3
 1728 04fa 211C     	 mov r1,r4
 1729 04fc FFF7FEFF 	 bl __aeabi_d2f
 1730 0500 021C     	 add r2,r0,#0
 1731 0502 6D4B     	 ldr r3,.L117
 1732 0504 1A60     	 str r2,[r3]
 261:../main.c     **** 			Speed_ratio = (2 * (copysign(R_Turn,1) + HALF_TRACK_WIDTH) * M_PI) / (2 * copysign(R_Turn,1) * M
 1733              	 .loc 6 261 0
 1734 0506 6C4B     	 ldr r3,.L117
 1735 0508 1B68     	 ldr r3,[r3]
 1736 050a 5B00     	 lsl r3,r3,#1
 1737 050c 5B08     	 lsr r3,r3,#1
 1738 050e 181C     	 add r0,r3,#0
 1739 0510 FFF7FEFF 	 bl __aeabi_f2d
 1740 0514 031C     	 mov r3,r0
 1741 0516 0C1C     	 mov r4,r1
 1742 0518 181C     	 mov r0,r3
 1743 051a 211C     	 mov r1,r4
 1744 051c 6A4A     	 ldr r2,.L117+16
 1745 051e 6B4B     	 ldr r3,.L117+20
 1746 0520 FFF7FEFF 	 bl __aeabi_dadd
 1747 0524 031C     	 mov r3,r0
 1748 0526 0C1C     	 mov r4,r1
 1749 0528 181C     	 mov r0,r3
 1750 052a 211C     	 mov r1,r4
 1751 052c 1A1C     	 mov r2,r3
 1752 052e 231C     	 mov r3,r4
 1753 0530 FFF7FEFF 	 bl __aeabi_dadd
 1754 0534 031C     	 mov r3,r0
 1755 0536 0C1C     	 mov r4,r1
 1756 0538 181C     	 mov r0,r3
 1757 053a 211C     	 mov r1,r4
 1758 053c 734A     	 ldr r2,.L117+84
 1759 053e 744B     	 ldr r3,.L117+88
 1760 0540 FFF7FEFF 	 bl __aeabi_dmul
 1761 0544 031C     	 mov r3,r0
 1762 0546 0C1C     	 mov r4,r1
 1763 0548 1D1C     	 mov r5,r3
 1764 054a 261C     	 mov r6,r4
 1765 054c 5A4B     	 ldr r3,.L117
 1766 054e 1B68     	 ldr r3,[r3]
 1767 0550 5B00     	 lsl r3,r3,#1
 1768 0552 5B08     	 lsr r3,r3,#1
 1769 0554 181C     	 add r0,r3,#0
 1770 0556 FFF7FEFF 	 bl __aeabi_f2d
 1771 055a 031C     	 mov r3,r0
 1772 055c 0C1C     	 mov r4,r1
 1773 055e 181C     	 mov r0,r3
 1774 0560 211C     	 mov r1,r4
 1775 0562 1A1C     	 mov r2,r3
 1776 0564 231C     	 mov r3,r4
 1777 0566 FFF7FEFF 	 bl __aeabi_dadd
 1778 056a 031C     	 mov r3,r0
 1779 056c 0C1C     	 mov r4,r1
 1780 056e 181C     	 mov r0,r3
 1781 0570 211C     	 mov r1,r4
 1782 0572 664A     	 ldr r2,.L117+84
 1783 0574 664B     	 ldr r3,.L117+88
 1784 0576 FFF7FEFF 	 bl __aeabi_dmul
 1785 057a 031C     	 mov r3,r0
 1786 057c 0C1C     	 mov r4,r1
 1787 057e 281C     	 mov r0,r5
 1788 0580 311C     	 mov r1,r6
 1789 0582 1A1C     	 mov r2,r3
 1790 0584 231C     	 mov r3,r4
 1791 0586 FFF7FEFF 	 bl __aeabi_ddiv
 1792 058a 031C     	 mov r3,r0
 1793 058c 0C1C     	 mov r4,r1
 1794 058e 181C     	 mov r0,r3
 1795 0590 211C     	 mov r1,r4
 1796 0592 FFF7FEFF 	 bl __aeabi_d2f
 1797 0596 021C     	 add r2,r0,#0
 1798 0598 534B     	 ldr r3,.L117+48
 1799 059a 1A60     	 str r2,[r3]
 262:../main.c     **** 
 263:../main.c     **** 			if((R_TRUN_MIN < R_Turn) && (R_Turn < R_TRUN_MAX)){
 1800              	 .loc 6 263 0
 1801 059c 464B     	 ldr r3,.L117
 1802 059e 1B68     	 ldr r3,[r3]
 1803 05a0 181C     	 add r0,r3,#0
 1804 05a2 FFF7FEFF 	 bl __aeabi_f2d
 1805 05a6 031C     	 mov r3,r0
 1806 05a8 0C1C     	 mov r4,r1
 1807 05aa 181C     	 mov r0,r3
 1808 05ac 211C     	 mov r1,r4
 1809 05ae 434A     	 ldr r2,.L117+4
 1810 05b0 584B     	 ldr r3,.L117+92
 1811 05b2 FFF7FEFF 	 bl __aeabi_dcmpgt
 1812 05b6 031E     	 sub r3,r0,#0
 1813 05b8 00D1     	 bne .LCB1120
 1814 05ba B1E0     	 b .L62
 1815              	.LCB1120:
 1816              	 .loc 6 263 0 is_stmt 0 discriminator 1
 1817 05bc 3E4B     	 ldr r3,.L117
 1818 05be 1B68     	 ldr r3,[r3]
 1819 05c0 181C     	 add r0,r3,#0
 1820 05c2 5549     	 ldr r1,.L117+96
 1821 05c4 FFF7FEFF 	 bl __aeabi_fcmplt
 1822 05c8 031E     	 sub r3,r0,#0
 1823 05ca 00D1     	 bne .LCB1128
 1824 05cc A8E0     	 b .L62
 1825              	.LCB1128:
 264:../main.c     **** 				angle_rl = - RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn + HALF_TRACK_WIDTH)); // out wheel
 1826              	 .loc 6 264 0 is_stmt 1
 1827 05ce 3A4B     	 ldr r3,.L117
 1828 05d0 1B68     	 ldr r3,[r3]
 1829 05d2 181C     	 add r0,r3,#0
 1830 05d4 FFF7FEFF 	 bl __aeabi_f2d
 1831 05d8 031C     	 mov r3,r0
 1832 05da 0C1C     	 mov r4,r1
 1833 05dc 181C     	 mov r0,r3
 1834 05de 211C     	 mov r1,r4
 1835 05e0 394A     	 ldr r2,.L117+16
 1836 05e2 3A4B     	 ldr r3,.L117+20
 1837 05e4 FFF7FEFF 	 bl __aeabi_dadd
 1838 05e8 031C     	 mov r3,r0
 1839 05ea 0C1C     	 mov r4,r1
 1840 05ec 3848     	 ldr r0,.L117+24
 1841 05ee 3949     	 ldr r1,.L117+28
 1842 05f0 1A1C     	 mov r2,r3
 1843 05f2 231C     	 mov r3,r4
 1844 05f4 FFF7FEFF 	 bl __aeabi_ddiv
 1845 05f8 031C     	 mov r3,r0
 1846 05fa 0C1C     	 mov r4,r1
 1847 05fc 181C     	 mov r0,r3
 1848 05fe 211C     	 mov r1,r4
 1849 0600 FFF7FEFF 	 bl atan
 1850 0604 031C     	 mov r3,r0
 1851 0606 0C1C     	 mov r4,r1
 1852 0608 181C     	 mov r0,r3
 1853 060a 211C     	 mov r1,r4
 1854 060c 324A     	 ldr r2,.L117+32
 1855 060e 434B     	 ldr r3,.L117+100
 1856 0610 FFF7FEFF 	 bl __aeabi_dmul
 1857 0614 031C     	 mov r3,r0
 1858 0616 0C1C     	 mov r4,r1
 1859 0618 181C     	 mov r0,r3
 1860 061a 211C     	 mov r1,r4
 1861 061c FFF7FEFF 	 bl __aeabi_d2f
 1862 0620 021C     	 add r2,r0,#0
 1863 0622 364B     	 ldr r3,.L117+68
 1864 0624 1A60     	 str r2,[r3]
 265:../main.c     **** 				angle_rr = - RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn - HALF_TRACK_WIDTH)); // in wheel
 1865              	 .loc 6 265 0
 1866 0626 244B     	 ldr r3,.L117
 1867 0628 1B68     	 ldr r3,[r3]
 1868 062a 181C     	 add r0,r3,#0
 1869 062c FFF7FEFF 	 bl __aeabi_f2d
 1870 0630 031C     	 mov r3,r0
 1871 0632 0C1C     	 mov r4,r1
 1872 0634 181C     	 mov r0,r3
 1873 0636 211C     	 mov r1,r4
 1874 0638 234A     	 ldr r2,.L117+16
 1875 063a 244B     	 ldr r3,.L117+20
 1876 063c FFF7FEFF 	 bl __aeabi_dsub
 1877 0640 031C     	 mov r3,r0
 1878 0642 0C1C     	 mov r4,r1
 1879 0644 2248     	 ldr r0,.L117+24
 1880 0646 2349     	 ldr r1,.L117+28
 1881 0648 1A1C     	 mov r2,r3
 1882 064a 231C     	 mov r3,r4
 1883 064c FFF7FEFF 	 bl __aeabi_ddiv
 1884 0650 031C     	 mov r3,r0
 1885 0652 0C1C     	 mov r4,r1
 1886 0654 181C     	 mov r0,r3
 1887 0656 211C     	 mov r1,r4
 1888 0658 FFF7FEFF 	 bl atan
 1889 065c 031C     	 mov r3,r0
 1890 065e 0C1C     	 mov r4,r1
 1891 0660 181C     	 mov r0,r3
 1892 0662 211C     	 mov r1,r4
 1893 0664 1C4A     	 ldr r2,.L117+32
 1894 0666 2D4B     	 ldr r3,.L117+100
 1895 0668 FFF7FEFF 	 bl __aeabi_dmul
 1896 066c 031C     	 mov r3,r0
 1897 066e 0C1C     	 mov r4,r1
 1898 0670 181C     	 mov r0,r3
 1899 0672 211C     	 mov r1,r4
 1900 0674 FFF7FEFF 	 bl __aeabi_d2f
 1901 0678 021C     	 add r2,r0,#0
 1902 067a 214B     	 ldr r3,.L117+72
 1903 067c 1A60     	 str r2,[r3]
 266:../main.c     **** 
 267:../main.c     **** 
 268:../main.c     **** 				speed_fl = Driving_speed_cal * Speed_ratio;
 1904              	 .loc 6 268 0
 1905 067e 1A4B     	 ldr r3,.L117+48
 1906 0680 1B68     	 ldr r3,[r3]
 1907 0682 181C     	 add r0,r3,#0
 1908 0684 B968     	 ldr r1,[r7,#8]
 1909 0686 FFF7FEFF 	 bl __aeabi_fmul
 1910 068a 031C     	 add r3,r0,#0
 1911 068c 1A1C     	 add r2,r3,#0
 1912 068e 174B     	 ldr r3,.L117+52
 1913 0690 1A60     	 str r2,[r3]
 269:../main.c     **** 				speed_fr = Driving_speed_cal / Speed_ratio;
 1914              	 .loc 6 269 0
 1915 0692 154B     	 ldr r3,.L117+48
 1916 0694 1B68     	 ldr r3,[r3]
 1917 0696 B868     	 ldr r0,[r7,#8]
 1918 0698 191C     	 add r1,r3,#0
 1919 069a FFF7FEFF 	 bl __aeabi_fdiv
 1920 069e 031C     	 add r3,r0,#0
 1921 06a0 1A1C     	 add r2,r3,#0
 1922 06a2 134B     	 ldr r3,.L117+56
 1923 06a4 1A60     	 str r2,[r3]
 270:../main.c     **** 				//speed_rl = Driving_speed_cal * Speed_ratio;
 271:../main.c     **** 				//speed_rr = Driving_speed_cal / Speed_ratio;
 272:../main.c     **** 
 273:../main.c     **** 				speed_rl = speed_fl;
 1924              	 .loc 6 273 0
 1925 06a6 114B     	 ldr r3,.L117+52
 1926 06a8 1A68     	 ldr r2,[r3]
 1927 06aa 124B     	 ldr r3,.L117+60
 1928 06ac 1A60     	 str r2,[r3]
 274:../main.c     **** 				speed_rr = speed_fr;
 1929              	 .loc 6 274 0
 1930 06ae 104B     	 ldr r3,.L117+56
 1931 06b0 1A68     	 ldr r2,[r3]
 1932 06b2 114B     	 ldr r3,.L117+64
 1933 06b4 1A60     	 str r2,[r3]
 1934 06b6 D2E0     	 b .L65
 1935              	.L118:
 1936              	 .align 2
 1937              	.L117:
 1938 06b8 00000000 	 .word R_Turn
 1939 06bc 9A999999 	 .word -1717986918
 1940 06c0 9999A9BF 	 .word -1079404135
 1941 06c4 0000A0C1 	 .word -1046478848
 1942 06c8 77BE9F1A 	 .word 446676599
 1943 06cc 2FDDC43F 	 .word 1069866287
 1944 06d0 79E92631 	 .word 824633721
 1945 06d4 08ACDC3F 	 .word 1071426568
 1946 06d8 D9CEF753 	 .word 1408749273
 1947 06dc E3A54C40 	 .word 1078765027
 1948 06e0 00000000 	 .word angle_fl
 1949 06e4 00000000 	 .word angle_fr
 1950 06e8 00000000 	 .word Speed_ratio
 1951 06ec 00000000 	 .word speed_fl
 1952 06f0 00000000 	 .word speed_fr
 1953 06f4 00000000 	 .word speed_rl
 1954 06f8 00000000 	 .word speed_rr
 1955 06fc 00000000 	 .word angle_rl
 1956 0700 00000000 	 .word angle_rr
 1957 0704 00004842 	 .word 1112014848
 1958 0708 000048C2 	 .word -1035468800
 1959 070c 182D4454 	 .word 1413754136
 1960 0710 FB210940 	 .word 1074340347
 1961 0714 9999A93F 	 .word 1068079513
 1962 0718 0000A041 	 .word 1101004800
 1963 071c E3A54CC0 	 .word -1068718621
 1964              	.L62:
 275:../main.c     **** 			}
 276:../main.c     **** 			else if((- R_TRUN_MIN > R_Turn) && (R_Turn > -R_TRUN_MAX)){
 1965              	 .loc 6 276 0
 1966 0720 DF4B     	 ldr r3,.L119
 1967 0722 1B68     	 ldr r3,[r3]
 1968 0724 181C     	 add r0,r3,#0
 1969 0726 FFF7FEFF 	 bl __aeabi_f2d
 1970 072a 031C     	 mov r3,r0
 1971 072c 0C1C     	 mov r4,r1
 1972 072e 181C     	 mov r0,r3
 1973 0730 211C     	 mov r1,r4
 1974 0732 DC4A     	 ldr r2,.L119+4
 1975 0734 DC4B     	 ldr r3,.L119+8
 1976 0736 FFF7FEFF 	 bl __aeabi_dcmplt
 1977 073a 031E     	 sub r3,r0,#0
 1978 073c 00D1     	 bne .LCB1279
 1979 073e 7CE0     	 b .L66
 1980              	.LCB1279:
 1981              	 .loc 6 276 0 is_stmt 0 discriminator 1
 1982 0740 D74B     	 ldr r3,.L119
 1983 0742 1B68     	 ldr r3,[r3]
 1984 0744 181C     	 add r0,r3,#0
 1985 0746 D949     	 ldr r1,.L119+12
 1986 0748 FFF7FEFF 	 bl __aeabi_fcmpgt
 1987 074c 031E     	 sub r3,r0,#0
 1988 074e 74D0     	 beq .L66
 277:../main.c     **** 				angle_rl = - RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn + HALF_TRACK_WIDTH)); // in wheel
 1989              	 .loc 6 277 0 is_stmt 1
 1990 0750 D34B     	 ldr r3,.L119
 1991 0752 1B68     	 ldr r3,[r3]
 1992 0754 181C     	 add r0,r3,#0
 1993 0756 FFF7FEFF 	 bl __aeabi_f2d
 1994 075a 031C     	 mov r3,r0
 1995 075c 0C1C     	 mov r4,r1
 1996 075e 181C     	 mov r0,r3
 1997 0760 211C     	 mov r1,r4
 1998 0762 D34A     	 ldr r2,.L119+16
 1999 0764 D34B     	 ldr r3,.L119+20
 2000 0766 FFF7FEFF 	 bl __aeabi_dadd
 2001 076a 031C     	 mov r3,r0
 2002 076c 0C1C     	 mov r4,r1
 2003 076e D248     	 ldr r0,.L119+24
 2004 0770 D249     	 ldr r1,.L119+28
 2005 0772 1A1C     	 mov r2,r3
 2006 0774 231C     	 mov r3,r4
 2007 0776 FFF7FEFF 	 bl __aeabi_ddiv
 2008 077a 031C     	 mov r3,r0
 2009 077c 0C1C     	 mov r4,r1
 2010 077e 181C     	 mov r0,r3
 2011 0780 211C     	 mov r1,r4
 2012 0782 FFF7FEFF 	 bl atan
 2013 0786 031C     	 mov r3,r0
 2014 0788 0C1C     	 mov r4,r1
 2015 078a 181C     	 mov r0,r3
 2016 078c 211C     	 mov r1,r4
 2017 078e CC4A     	 ldr r2,.L119+32
 2018 0790 CC4B     	 ldr r3,.L119+36
 2019 0792 FFF7FEFF 	 bl __aeabi_dmul
 2020 0796 031C     	 mov r3,r0
 2021 0798 0C1C     	 mov r4,r1
 2022 079a 181C     	 mov r0,r3
 2023 079c 211C     	 mov r1,r4
 2024 079e FFF7FEFF 	 bl __aeabi_d2f
 2025 07a2 021C     	 add r2,r0,#0
 2026 07a4 C84B     	 ldr r3,.L119+40
 2027 07a6 1A60     	 str r2,[r3]
 278:../main.c     **** 				angle_rr = - RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn - HALF_TRACK_WIDTH)); // out wheel
 2028              	 .loc 6 278 0
 2029 07a8 BD4B     	 ldr r3,.L119
 2030 07aa 1B68     	 ldr r3,[r3]
 2031 07ac 181C     	 add r0,r3,#0
 2032 07ae FFF7FEFF 	 bl __aeabi_f2d
 2033 07b2 031C     	 mov r3,r0
 2034 07b4 0C1C     	 mov r4,r1
 2035 07b6 181C     	 mov r0,r3
 2036 07b8 211C     	 mov r1,r4
 2037 07ba BD4A     	 ldr r2,.L119+16
 2038 07bc BD4B     	 ldr r3,.L119+20
 2039 07be FFF7FEFF 	 bl __aeabi_dsub
 2040 07c2 031C     	 mov r3,r0
 2041 07c4 0C1C     	 mov r4,r1
 2042 07c6 BC48     	 ldr r0,.L119+24
 2043 07c8 BC49     	 ldr r1,.L119+28
 2044 07ca 1A1C     	 mov r2,r3
 2045 07cc 231C     	 mov r3,r4
 2046 07ce FFF7FEFF 	 bl __aeabi_ddiv
 2047 07d2 031C     	 mov r3,r0
 2048 07d4 0C1C     	 mov r4,r1
 2049 07d6 181C     	 mov r0,r3
 2050 07d8 211C     	 mov r1,r4
 2051 07da FFF7FEFF 	 bl atan
 2052 07de 031C     	 mov r3,r0
 2053 07e0 0C1C     	 mov r4,r1
 2054 07e2 181C     	 mov r0,r3
 2055 07e4 211C     	 mov r1,r4
 2056 07e6 B64A     	 ldr r2,.L119+32
 2057 07e8 B64B     	 ldr r3,.L119+36
 2058 07ea FFF7FEFF 	 bl __aeabi_dmul
 2059 07ee 031C     	 mov r3,r0
 2060 07f0 0C1C     	 mov r4,r1
 2061 07f2 181C     	 mov r0,r3
 2062 07f4 211C     	 mov r1,r4
 2063 07f6 FFF7FEFF 	 bl __aeabi_d2f
 2064 07fa 021C     	 add r2,r0,#0
 2065 07fc B34B     	 ldr r3,.L119+44
 2066 07fe 1A60     	 str r2,[r3]
 279:../main.c     **** 
 280:../main.c     **** 				speed_fl = Driving_speed_cal / Speed_ratio;
 2067              	 .loc 6 280 0
 2068 0800 B34B     	 ldr r3,.L119+48
 2069 0802 1B68     	 ldr r3,[r3]
 2070 0804 B868     	 ldr r0,[r7,#8]
 2071 0806 191C     	 add r1,r3,#0
 2072 0808 FFF7FEFF 	 bl __aeabi_fdiv
 2073 080c 031C     	 add r3,r0,#0
 2074 080e 1A1C     	 add r2,r3,#0
 2075 0810 B04B     	 ldr r3,.L119+52
 2076 0812 1A60     	 str r2,[r3]
 281:../main.c     **** 				speed_fr = Driving_speed_cal * Speed_ratio;
 2077              	 .loc 6 281 0
 2078 0814 AE4B     	 ldr r3,.L119+48
 2079 0816 1B68     	 ldr r3,[r3]
 2080 0818 181C     	 add r0,r3,#0
 2081 081a B968     	 ldr r1,[r7,#8]
 2082 081c FFF7FEFF 	 bl __aeabi_fmul
 2083 0820 031C     	 add r3,r0,#0
 2084 0822 1A1C     	 add r2,r3,#0
 2085 0824 AC4B     	 ldr r3,.L119+56
 2086 0826 1A60     	 str r2,[r3]
 282:../main.c     **** 				//speed_rl = Driving_speed_cal / Speed_ratio;
 283:../main.c     **** 				//speed_rr = Driving_speed_cal * Speed_ratio;
 284:../main.c     **** 
 285:../main.c     **** 				speed_rl = speed_fl;
 2087              	 .loc 6 285 0
 2088 0828 AA4B     	 ldr r3,.L119+52
 2089 082a 1A68     	 ldr r2,[r3]
 2090 082c AB4B     	 ldr r3,.L119+60
 2091 082e 1A60     	 str r2,[r3]
 286:../main.c     **** 				speed_rr = speed_fr;
 2092              	 .loc 6 286 0
 2093 0830 A94B     	 ldr r3,.L119+56
 2094 0832 1A68     	 ldr r2,[r3]
 2095 0834 AA4B     	 ldr r3,.L119+64
 2096 0836 1A60     	 str r2,[r3]
 2097 0838 11E0     	 b .L65
 2098              	.L66:
 287:../main.c     **** 			}
 288:../main.c     **** 			else{
 289:../main.c     **** 				angle_rl = 0;
 2099              	 .loc 6 289 0
 2100 083a A34B     	 ldr r3,.L119+40
 2101 083c 0022     	 mov r2,#0
 2102 083e 1A60     	 str r2,[r3]
 290:../main.c     **** 				angle_rr = 0;
 2103              	 .loc 6 290 0
 2104 0840 A24B     	 ldr r3,.L119+44
 2105 0842 0022     	 mov r2,#0
 2106 0844 1A60     	 str r2,[r3]
 291:../main.c     **** 
 292:../main.c     **** 				speed_fl = Driving_speed_cal;
 2107              	 .loc 6 292 0
 2108 0846 A34B     	 ldr r3,.L119+52
 2109 0848 BA68     	 ldr r2,[r7,#8]
 2110 084a 1A60     	 str r2,[r3]
 293:../main.c     **** 				speed_fr = Driving_speed_cal;
 2111              	 .loc 6 293 0
 2112 084c A24B     	 ldr r3,.L119+56
 2113 084e BA68     	 ldr r2,[r7,#8]
 2114 0850 1A60     	 str r2,[r3]
 294:../main.c     **** 				speed_rl = Driving_speed_cal;
 2115              	 .loc 6 294 0
 2116 0852 A24B     	 ldr r3,.L119+60
 2117 0854 BA68     	 ldr r2,[r7,#8]
 2118 0856 1A60     	 str r2,[r3]
 295:../main.c     **** 				speed_rr = Driving_speed_cal;
 2119              	 .loc 6 295 0
 2120 0858 A14B     	 ldr r3,.L119+64
 2121 085a BA68     	 ldr r2,[r7,#8]
 2122 085c 1A60     	 str r2,[r3]
 2123              	.L65:
 296:../main.c     **** 			}
 297:../main.c     **** 
 298:../main.c     **** 			//rear axle
 299:../main.c     **** 			angle_fl = 0;
 2124              	 .loc 6 299 0
 2125 085e A14B     	 ldr r3,.L119+68
 2126 0860 0022     	 mov r2,#0
 2127 0862 1A60     	 str r2,[r3]
 300:../main.c     **** 			angle_fr = 0;
 2128              	 .loc 6 300 0
 2129 0864 A04B     	 ldr r3,.L119+72
 2130 0866 0022     	 mov r2,#0
 2131 0868 1A60     	 str r2,[r3]
 301:../main.c     **** 			break;
 2132              	 .loc 6 301 0
 2133 086a 93E2     	 b .L57
 2134              	.L43:
 302:../main.c     **** 
 303:../main.c     **** 		case ALL_WHEEL: // 4 wheel #############################################################
 304:../main.c     **** 			// steering limits
 305:../main.c     **** 			if(Steering_direction_cal > 30) Steering_direction_cal = 30;
 2135              	 .loc 6 305 0
 2136 086c F868     	 ldr r0,[r7,#12]
 2137 086e 9F49     	 ldr r1,.L119+76
 2138 0870 FFF7FEFF 	 bl __aeabi_fcmpgt
 2139 0874 031E     	 sub r3,r0,#0
 2140 0876 01D0     	 beq .L69
 2141              	 .loc 6 305 0 is_stmt 0 discriminator 1
 2142 0878 9C4B     	 ldr r3,.L119+76
 2143 087a FB60     	 str r3,[r7,#12]
 2144              	.L69:
 306:../main.c     **** 			if(Steering_direction_cal < -30) Steering_direction_cal = -30;
 2145              	 .loc 6 306 0 is_stmt 1
 2146 087c F868     	 ldr r0,[r7,#12]
 2147 087e 9C49     	 ldr r1,.L119+80
 2148 0880 FFF7FEFF 	 bl __aeabi_fcmplt
 2149 0884 031E     	 sub r3,r0,#0
 2150 0886 01D0     	 beq .L71
 2151              	 .loc 6 306 0 is_stmt 0 discriminator 1
 2152 0888 994B     	 ldr r3,.L119+80
 2153 088a FB60     	 str r3,[r7,#12]
 2154              	.L71:
 307:../main.c     **** 
 308:../main.c     **** 			// pre calc
 309:../main.c     **** 			R_Turn = HALF_WHEEL_BASE / tan(Steering_direction_cal / RAD_TO_DEG); // to truni graduis convers
 2155              	 .loc 6 309 0 is_stmt 1
 2156 088c F868     	 ldr r0,[r7,#12]
 2157 088e FFF7FEFF 	 bl __aeabi_f2d
 2158 0892 031C     	 mov r3,r0
 2159 0894 0C1C     	 mov r4,r1
 2160 0896 181C     	 mov r0,r3
 2161 0898 211C     	 mov r1,r4
 2162 089a 894A     	 ldr r2,.L119+32
 2163 089c 954B     	 ldr r3,.L119+84
 2164 089e FFF7FEFF 	 bl __aeabi_ddiv
 2165 08a2 031C     	 mov r3,r0
 2166 08a4 0C1C     	 mov r4,r1
 2167 08a6 181C     	 mov r0,r3
 2168 08a8 211C     	 mov r1,r4
 2169 08aa FFF7FEFF 	 bl tan
 2170 08ae 031C     	 mov r3,r0
 2171 08b0 0C1C     	 mov r4,r1
 2172 08b2 9148     	 ldr r0,.L119+88
 2173 08b4 9149     	 ldr r1,.L119+92
 2174 08b6 1A1C     	 mov r2,r3
 2175 08b8 231C     	 mov r3,r4
 2176 08ba FFF7FEFF 	 bl __aeabi_ddiv
 2177 08be 031C     	 mov r3,r0
 2178 08c0 0C1C     	 mov r4,r1
 2179 08c2 181C     	 mov r0,r3
 2180 08c4 211C     	 mov r1,r4
 2181 08c6 FFF7FEFF 	 bl __aeabi_d2f
 2182 08ca 021C     	 add r2,r0,#0
 2183 08cc 744B     	 ldr r3,.L119
 2184 08ce 1A60     	 str r2,[r3]
 310:../main.c     **** 			Speed_ratio = (2 * (copysign(R_Turn,1) + HALF_TRACK_WIDTH) * M_PI) / (2 * copysign(R_Turn,1) * M
 2185              	 .loc 6 310 0
 2186 08d0 734B     	 ldr r3,.L119
 2187 08d2 1B68     	 ldr r3,[r3]
 2188 08d4 5B00     	 lsl r3,r3,#1
 2189 08d6 5B08     	 lsr r3,r3,#1
 2190 08d8 181C     	 add r0,r3,#0
 2191 08da FFF7FEFF 	 bl __aeabi_f2d
 2192 08de 031C     	 mov r3,r0
 2193 08e0 0C1C     	 mov r4,r1
 2194 08e2 181C     	 mov r0,r3
 2195 08e4 211C     	 mov r1,r4
 2196 08e6 724A     	 ldr r2,.L119+16
 2197 08e8 724B     	 ldr r3,.L119+20
 2198 08ea FFF7FEFF 	 bl __aeabi_dadd
 2199 08ee 031C     	 mov r3,r0
 2200 08f0 0C1C     	 mov r4,r1
 2201 08f2 181C     	 mov r0,r3
 2202 08f4 211C     	 mov r1,r4
 2203 08f6 1A1C     	 mov r2,r3
 2204 08f8 231C     	 mov r3,r4
 2205 08fa FFF7FEFF 	 bl __aeabi_dadd
 2206 08fe 031C     	 mov r3,r0
 2207 0900 0C1C     	 mov r4,r1
 2208 0902 181C     	 mov r0,r3
 2209 0904 211C     	 mov r1,r4
 2210 0906 7E4A     	 ldr r2,.L119+96
 2211 0908 7E4B     	 ldr r3,.L119+100
 2212 090a FFF7FEFF 	 bl __aeabi_dmul
 2213 090e 031C     	 mov r3,r0
 2214 0910 0C1C     	 mov r4,r1
 2215 0912 1D1C     	 mov r5,r3
 2216 0914 261C     	 mov r6,r4
 2217 0916 624B     	 ldr r3,.L119
 2218 0918 1B68     	 ldr r3,[r3]
 2219 091a 5B00     	 lsl r3,r3,#1
 2220 091c 5B08     	 lsr r3,r3,#1
 2221 091e 181C     	 add r0,r3,#0
 2222 0920 FFF7FEFF 	 bl __aeabi_f2d
 2223 0924 031C     	 mov r3,r0
 2224 0926 0C1C     	 mov r4,r1
 2225 0928 181C     	 mov r0,r3
 2226 092a 211C     	 mov r1,r4
 2227 092c 1A1C     	 mov r2,r3
 2228 092e 231C     	 mov r3,r4
 2229 0930 FFF7FEFF 	 bl __aeabi_dadd
 2230 0934 031C     	 mov r3,r0
 2231 0936 0C1C     	 mov r4,r1
 2232 0938 181C     	 mov r0,r3
 2233 093a 211C     	 mov r1,r4
 2234 093c 704A     	 ldr r2,.L119+96
 2235 093e 714B     	 ldr r3,.L119+100
 2236 0940 FFF7FEFF 	 bl __aeabi_dmul
 2237 0944 031C     	 mov r3,r0
 2238 0946 0C1C     	 mov r4,r1
 2239 0948 281C     	 mov r0,r5
 2240 094a 311C     	 mov r1,r6
 2241 094c 1A1C     	 mov r2,r3
 2242 094e 231C     	 mov r3,r4
 2243 0950 FFF7FEFF 	 bl __aeabi_ddiv
 2244 0954 031C     	 mov r3,r0
 2245 0956 0C1C     	 mov r4,r1
 2246 0958 181C     	 mov r0,r3
 2247 095a 211C     	 mov r1,r4
 2248 095c FFF7FEFF 	 bl __aeabi_d2f
 2249 0960 021C     	 add r2,r0,#0
 2250 0962 5B4B     	 ldr r3,.L119+48
 2251 0964 1A60     	 str r2,[r3]
 311:../main.c     **** 
 312:../main.c     **** 			if((R_TRUN_MIN < R_Turn) && (R_Turn < R_TRUN_MAX)){ // trun right positive R
 2252              	 .loc 6 312 0
 2253 0966 4E4B     	 ldr r3,.L119
 2254 0968 1B68     	 ldr r3,[r3]
 2255 096a 181C     	 add r0,r3,#0
 2256 096c FFF7FEFF 	 bl __aeabi_f2d
 2257 0970 031C     	 mov r3,r0
 2258 0972 0C1C     	 mov r4,r1
 2259 0974 181C     	 mov r0,r3
 2260 0976 211C     	 mov r1,r4
 2261 0978 4A4A     	 ldr r2,.L119+4
 2262 097a 634B     	 ldr r3,.L119+104
 2263 097c FFF7FEFF 	 bl __aeabi_dcmpgt
 2264 0980 031E     	 sub r3,r0,#0
 2265 0982 00D1     	 bne .LCB1552
 2266 0984 C4E0     	 b .L73
 2267              	.LCB1552:
 2268              	 .loc 6 312 0 is_stmt 0 discriminator 1
 2269 0986 464B     	 ldr r3,.L119
 2270 0988 1B68     	 ldr r3,[r3]
 2271 098a 181C     	 add r0,r3,#0
 2272 098c 5F49     	 ldr r1,.L119+108
 2273 098e FFF7FEFF 	 bl __aeabi_fcmplt
 2274 0992 031E     	 sub r3,r0,#0
 2275 0994 00D1     	 bne .LCB1560
 2276 0996 BBE0     	 b .L73
 2277              	.LCB1560:
 313:../main.c     **** 				angle_fl = RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn + HALF_TRACK_WIDTH)); // out wheel
 2278              	 .loc 6 313 0 is_stmt 1
 2279 0998 414B     	 ldr r3,.L119
 2280 099a 1B68     	 ldr r3,[r3]
 2281 099c 181C     	 add r0,r3,#0
 2282 099e FFF7FEFF 	 bl __aeabi_f2d
 2283 09a2 031C     	 mov r3,r0
 2284 09a4 0C1C     	 mov r4,r1
 2285 09a6 181C     	 mov r0,r3
 2286 09a8 211C     	 mov r1,r4
 2287 09aa 414A     	 ldr r2,.L119+16
 2288 09ac 414B     	 ldr r3,.L119+20
 2289 09ae FFF7FEFF 	 bl __aeabi_dadd
 2290 09b2 031C     	 mov r3,r0
 2291 09b4 0C1C     	 mov r4,r1
 2292 09b6 4048     	 ldr r0,.L119+24
 2293 09b8 4049     	 ldr r1,.L119+28
 2294 09ba 1A1C     	 mov r2,r3
 2295 09bc 231C     	 mov r3,r4
 2296 09be FFF7FEFF 	 bl __aeabi_ddiv
 2297 09c2 031C     	 mov r3,r0
 2298 09c4 0C1C     	 mov r4,r1
 2299 09c6 181C     	 mov r0,r3
 2300 09c8 211C     	 mov r1,r4
 2301 09ca FFF7FEFF 	 bl atan
 2302 09ce 031C     	 mov r3,r0
 2303 09d0 0C1C     	 mov r4,r1
 2304 09d2 181C     	 mov r0,r3
 2305 09d4 211C     	 mov r1,r4
 2306 09d6 3A4A     	 ldr r2,.L119+32
 2307 09d8 464B     	 ldr r3,.L119+84
 2308 09da FFF7FEFF 	 bl __aeabi_dmul
 2309 09de 031C     	 mov r3,r0
 2310 09e0 0C1C     	 mov r4,r1
 2311 09e2 181C     	 mov r0,r3
 2312 09e4 211C     	 mov r1,r4
 2313 09e6 FFF7FEFF 	 bl __aeabi_d2f
 2314 09ea 021C     	 add r2,r0,#0
 2315 09ec 3D4B     	 ldr r3,.L119+68
 2316 09ee 1A60     	 str r2,[r3]
 314:../main.c     **** 				angle_fr = RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn - HALF_TRACK_WIDTH)); // in wheel
 2317              	 .loc 6 314 0
 2318 09f0 2B4B     	 ldr r3,.L119
 2319 09f2 1B68     	 ldr r3,[r3]
 2320 09f4 181C     	 add r0,r3,#0
 2321 09f6 FFF7FEFF 	 bl __aeabi_f2d
 2322 09fa 031C     	 mov r3,r0
 2323 09fc 0C1C     	 mov r4,r1
 2324 09fe 181C     	 mov r0,r3
 2325 0a00 211C     	 mov r1,r4
 2326 0a02 2B4A     	 ldr r2,.L119+16
 2327 0a04 2B4B     	 ldr r3,.L119+20
 2328 0a06 FFF7FEFF 	 bl __aeabi_dsub
 2329 0a0a 031C     	 mov r3,r0
 2330 0a0c 0C1C     	 mov r4,r1
 2331 0a0e 2A48     	 ldr r0,.L119+24
 2332 0a10 2A49     	 ldr r1,.L119+28
 2333 0a12 1A1C     	 mov r2,r3
 2334 0a14 231C     	 mov r3,r4
 2335 0a16 FFF7FEFF 	 bl __aeabi_ddiv
 2336 0a1a 031C     	 mov r3,r0
 2337 0a1c 0C1C     	 mov r4,r1
 2338 0a1e 181C     	 mov r0,r3
 2339 0a20 211C     	 mov r1,r4
 2340 0a22 FFF7FEFF 	 bl atan
 2341 0a26 031C     	 mov r3,r0
 2342 0a28 0C1C     	 mov r4,r1
 2343 0a2a 181C     	 mov r0,r3
 2344 0a2c 211C     	 mov r1,r4
 2345 0a2e 244A     	 ldr r2,.L119+32
 2346 0a30 304B     	 ldr r3,.L119+84
 2347 0a32 FFF7FEFF 	 bl __aeabi_dmul
 2348 0a36 031C     	 mov r3,r0
 2349 0a38 0C1C     	 mov r4,r1
 2350 0a3a 181C     	 mov r0,r3
 2351 0a3c 211C     	 mov r1,r4
 2352 0a3e FFF7FEFF 	 bl __aeabi_d2f
 2353 0a42 021C     	 add r2,r0,#0
 2354 0a44 284B     	 ldr r3,.L119+72
 2355 0a46 1A60     	 str r2,[r3]
 315:../main.c     **** 				//angle_rl = - RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn + HALF_TRACK_WIDTH)); // out wheel
 316:../main.c     **** 				//angle_rr = - RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn - HALF_TRACK_WIDTH)); // in wheel
 317:../main.c     **** 
 318:../main.c     **** 				angle_rl = -angle_fl;
 2356              	 .loc 6 318 0
 2357 0a48 264B     	 ldr r3,.L119+68
 2358 0a4a 1B68     	 ldr r3,[r3]
 2359 0a4c 8022     	 mov r2,#128
 2360 0a4e 1206     	 lsl r2,r2,#24
 2361 0a50 5A40     	 eor r2,r3
 2362 0a52 1D4B     	 ldr r3,.L119+40
 2363 0a54 1A60     	 str r2,[r3]
 319:../main.c     **** 				angle_rr = -angle_fr;
 2364              	 .loc 6 319 0
 2365 0a56 244B     	 ldr r3,.L119+72
 2366 0a58 1B68     	 ldr r3,[r3]
 2367 0a5a 8022     	 mov r2,#128
 2368 0a5c 1206     	 lsl r2,r2,#24
 2369 0a5e 5A40     	 eor r2,r3
 2370 0a60 1A4B     	 ldr r3,.L119+44
 2371 0a62 1A60     	 str r2,[r3]
 320:../main.c     **** 
 321:../main.c     **** 				speed_fl = Driving_speed_cal * Speed_ratio;
 2372              	 .loc 6 321 0
 2373 0a64 1A4B     	 ldr r3,.L119+48
 2374 0a66 1B68     	 ldr r3,[r3]
 2375 0a68 181C     	 add r0,r3,#0
 2376 0a6a B968     	 ldr r1,[r7,#8]
 2377 0a6c FFF7FEFF 	 bl __aeabi_fmul
 2378 0a70 031C     	 add r3,r0,#0
 2379 0a72 1A1C     	 add r2,r3,#0
 2380 0a74 174B     	 ldr r3,.L119+52
 2381 0a76 1A60     	 str r2,[r3]
 322:../main.c     **** 				speed_fr = Driving_speed_cal / Speed_ratio;
 2382              	 .loc 6 322 0
 2383 0a78 154B     	 ldr r3,.L119+48
 2384 0a7a 1B68     	 ldr r3,[r3]
 2385 0a7c B868     	 ldr r0,[r7,#8]
 2386 0a7e 191C     	 add r1,r3,#0
 2387 0a80 FFF7FEFF 	 bl __aeabi_fdiv
 2388 0a84 031C     	 add r3,r0,#0
 2389 0a86 1A1C     	 add r2,r3,#0
 2390 0a88 134B     	 ldr r3,.L119+56
 2391 0a8a 1A60     	 str r2,[r3]
 323:../main.c     **** 				//speed_rl = Driving_speed_cal * Speed_ratio;
 324:../main.c     **** 				//speed_rr = Driving_speed_cal / Speed_ratio;
 325:../main.c     **** 
 326:../main.c     **** 				speed_rl = speed_fl;
 2392              	 .loc 6 326 0
 2393 0a8c 114B     	 ldr r3,.L119+52
 2394 0a8e 1A68     	 ldr r2,[r3]
 2395 0a90 124B     	 ldr r3,.L119+60
 2396 0a92 1A60     	 str r2,[r3]
 327:../main.c     **** 				speed_rr = speed_fr;
 2397              	 .loc 6 327 0
 2398 0a94 104B     	 ldr r3,.L119+56
 2399 0a96 1A68     	 ldr r2,[r3]
 2400 0a98 114B     	 ldr r3,.L119+64
 2401 0a9a 1A60     	 str r2,[r3]
 2402 0a9c EDE0     	 b .L76
 2403              	.L120:
 2404 0a9e C046     	 .align 2
 2405              	.L119:
 2406 0aa0 00000000 	 .word R_Turn
 2407 0aa4 9A999999 	 .word -1717986918
 2408 0aa8 9999A9BF 	 .word -1079404135
 2409 0aac 0000A0C1 	 .word -1046478848
 2410 0ab0 77BE9F1A 	 .word 446676599
 2411 0ab4 2FDDC43F 	 .word 1069866287
 2412 0ab8 79E92631 	 .word 824633721
 2413 0abc 08ACDC3F 	 .word 1071426568
 2414 0ac0 D9CEF753 	 .word 1408749273
 2415 0ac4 E3A54CC0 	 .word -1068718621
 2416 0ac8 00000000 	 .word angle_rl
 2417 0acc 00000000 	 .word angle_rr
 2418 0ad0 00000000 	 .word Speed_ratio
 2419 0ad4 00000000 	 .word speed_fl
 2420 0ad8 00000000 	 .word speed_fr
 2421 0adc 00000000 	 .word speed_rl
 2422 0ae0 00000000 	 .word speed_rr
 2423 0ae4 00000000 	 .word angle_fl
 2424 0ae8 00000000 	 .word angle_fr
 2425 0aec 0000F041 	 .word 1106247680
 2426 0af0 0000F0C1 	 .word -1041235968
 2427 0af4 E3A54C40 	 .word 1078765027
 2428 0af8 295C8FC2 	 .word -1030792151
 2429 0afc F528CC3F 	 .word 1070344437
 2430 0b00 182D4454 	 .word 1413754136
 2431 0b04 FB210940 	 .word 1074340347
 2432 0b08 9999A93F 	 .word 1068079513
 2433 0b0c 0000A041 	 .word 1101004800
 2434              	.L73:
 328:../main.c     **** 			}
 329:../main.c     **** 			else if((- R_TRUN_MIN > R_Turn) && (R_Turn > -R_TRUN_MAX)){ // trun left positive R
 2435              	 .loc 6 329 0
 2436 0b10 B24B     	 ldr r3,.L121
 2437 0b12 1B68     	 ldr r3,[r3]
 2438 0b14 181C     	 add r0,r3,#0
 2439 0b16 FFF7FEFF 	 bl __aeabi_f2d
 2440 0b1a 031C     	 mov r3,r0
 2441 0b1c 0C1C     	 mov r4,r1
 2442 0b1e 181C     	 mov r0,r3
 2443 0b20 211C     	 mov r1,r4
 2444 0b22 AF4A     	 ldr r2,.L121+4
 2445 0b24 AF4B     	 ldr r3,.L121+8
 2446 0b26 FFF7FEFF 	 bl __aeabi_dcmplt
 2447 0b2a 031E     	 sub r3,r0,#0
 2448 0b2c 00D1     	 bne .LCB1727
 2449 0b2e 8BE0     	 b .L77
 2450              	.LCB1727:
 2451              	 .loc 6 329 0 is_stmt 0 discriminator 1
 2452 0b30 AA4B     	 ldr r3,.L121
 2453 0b32 1B68     	 ldr r3,[r3]
 2454 0b34 181C     	 add r0,r3,#0
 2455 0b36 AC49     	 ldr r1,.L121+12
 2456 0b38 FFF7FEFF 	 bl __aeabi_fcmpgt
 2457 0b3c 031E     	 sub r3,r0,#0
 2458 0b3e 00D1     	 bne .LCB1735
 2459 0b40 82E0     	 b .L77
 2460              	.LCB1735:
 330:../main.c     **** 				angle_fl = RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn + HALF_TRACK_WIDTH)); // in wheel
 2461              	 .loc 6 330 0 is_stmt 1
 2462 0b42 A64B     	 ldr r3,.L121
 2463 0b44 1B68     	 ldr r3,[r3]
 2464 0b46 181C     	 add r0,r3,#0
 2465 0b48 FFF7FEFF 	 bl __aeabi_f2d
 2466 0b4c 031C     	 mov r3,r0
 2467 0b4e 0C1C     	 mov r4,r1
 2468 0b50 181C     	 mov r0,r3
 2469 0b52 211C     	 mov r1,r4
 2470 0b54 A54A     	 ldr r2,.L121+16
 2471 0b56 A64B     	 ldr r3,.L121+20
 2472 0b58 FFF7FEFF 	 bl __aeabi_dadd
 2473 0b5c 031C     	 mov r3,r0
 2474 0b5e 0C1C     	 mov r4,r1
 2475 0b60 A448     	 ldr r0,.L121+24
 2476 0b62 A549     	 ldr r1,.L121+28
 2477 0b64 1A1C     	 mov r2,r3
 2478 0b66 231C     	 mov r3,r4
 2479 0b68 FFF7FEFF 	 bl __aeabi_ddiv
 2480 0b6c 031C     	 mov r3,r0
 2481 0b6e 0C1C     	 mov r4,r1
 2482 0b70 181C     	 mov r0,r3
 2483 0b72 211C     	 mov r1,r4
 2484 0b74 FFF7FEFF 	 bl atan
 2485 0b78 031C     	 mov r3,r0
 2486 0b7a 0C1C     	 mov r4,r1
 2487 0b7c 181C     	 mov r0,r3
 2488 0b7e 211C     	 mov r1,r4
 2489 0b80 9E4A     	 ldr r2,.L121+32
 2490 0b82 9F4B     	 ldr r3,.L121+36
 2491 0b84 FFF7FEFF 	 bl __aeabi_dmul
 2492 0b88 031C     	 mov r3,r0
 2493 0b8a 0C1C     	 mov r4,r1
 2494 0b8c 181C     	 mov r0,r3
 2495 0b8e 211C     	 mov r1,r4
 2496 0b90 FFF7FEFF 	 bl __aeabi_d2f
 2497 0b94 021C     	 add r2,r0,#0
 2498 0b96 9B4B     	 ldr r3,.L121+40
 2499 0b98 1A60     	 str r2,[r3]
 331:../main.c     **** 				angle_fr = RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn - HALF_TRACK_WIDTH)); // out wheel
 2500              	 .loc 6 331 0
 2501 0b9a 904B     	 ldr r3,.L121
 2502 0b9c 1B68     	 ldr r3,[r3]
 2503 0b9e 181C     	 add r0,r3,#0
 2504 0ba0 FFF7FEFF 	 bl __aeabi_f2d
 2505 0ba4 031C     	 mov r3,r0
 2506 0ba6 0C1C     	 mov r4,r1
 2507 0ba8 181C     	 mov r0,r3
 2508 0baa 211C     	 mov r1,r4
 2509 0bac 8F4A     	 ldr r2,.L121+16
 2510 0bae 904B     	 ldr r3,.L121+20
 2511 0bb0 FFF7FEFF 	 bl __aeabi_dsub
 2512 0bb4 031C     	 mov r3,r0
 2513 0bb6 0C1C     	 mov r4,r1
 2514 0bb8 8E48     	 ldr r0,.L121+24
 2515 0bba 8F49     	 ldr r1,.L121+28
 2516 0bbc 1A1C     	 mov r2,r3
 2517 0bbe 231C     	 mov r3,r4
 2518 0bc0 FFF7FEFF 	 bl __aeabi_ddiv
 2519 0bc4 031C     	 mov r3,r0
 2520 0bc6 0C1C     	 mov r4,r1
 2521 0bc8 181C     	 mov r0,r3
 2522 0bca 211C     	 mov r1,r4
 2523 0bcc FFF7FEFF 	 bl atan
 2524 0bd0 031C     	 mov r3,r0
 2525 0bd2 0C1C     	 mov r4,r1
 2526 0bd4 181C     	 mov r0,r3
 2527 0bd6 211C     	 mov r1,r4
 2528 0bd8 884A     	 ldr r2,.L121+32
 2529 0bda 894B     	 ldr r3,.L121+36
 2530 0bdc FFF7FEFF 	 bl __aeabi_dmul
 2531 0be0 031C     	 mov r3,r0
 2532 0be2 0C1C     	 mov r4,r1
 2533 0be4 181C     	 mov r0,r3
 2534 0be6 211C     	 mov r1,r4
 2535 0be8 FFF7FEFF 	 bl __aeabi_d2f
 2536 0bec 021C     	 add r2,r0,#0
 2537 0bee 864B     	 ldr r3,.L121+44
 2538 0bf0 1A60     	 str r2,[r3]
 332:../main.c     **** 				//angle_rl = - RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn + HALF_TRACK_WIDTH)); // in wheel
 333:../main.c     **** 				//angle_rr = - RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn - HALF_TRACK_WIDTH)); // in wheel
 334:../main.c     **** 
 335:../main.c     **** 				angle_rl = -angle_fl;
 2539              	 .loc 6 335 0
 2540 0bf2 844B     	 ldr r3,.L121+40
 2541 0bf4 1B68     	 ldr r3,[r3]
 2542 0bf6 8022     	 mov r2,#128
 2543 0bf8 1206     	 lsl r2,r2,#24
 2544 0bfa 5A40     	 eor r2,r3
 2545 0bfc 834B     	 ldr r3,.L121+48
 2546 0bfe 1A60     	 str r2,[r3]
 336:../main.c     **** 				angle_rr = -angle_fr;
 2547              	 .loc 6 336 0
 2548 0c00 814B     	 ldr r3,.L121+44
 2549 0c02 1B68     	 ldr r3,[r3]
 2550 0c04 8022     	 mov r2,#128
 2551 0c06 1206     	 lsl r2,r2,#24
 2552 0c08 5A40     	 eor r2,r3
 2553 0c0a 814B     	 ldr r3,.L121+52
 2554 0c0c 1A60     	 str r2,[r3]
 337:../main.c     **** 
 338:../main.c     **** 				speed_fl = Driving_speed_cal / Speed_ratio;
 2555              	 .loc 6 338 0
 2556 0c0e 814B     	 ldr r3,.L121+56
 2557 0c10 1B68     	 ldr r3,[r3]
 2558 0c12 B868     	 ldr r0,[r7,#8]
 2559 0c14 191C     	 add r1,r3,#0
 2560 0c16 FFF7FEFF 	 bl __aeabi_fdiv
 2561 0c1a 031C     	 add r3,r0,#0
 2562 0c1c 1A1C     	 add r2,r3,#0
 2563 0c1e 7E4B     	 ldr r3,.L121+60
 2564 0c20 1A60     	 str r2,[r3]
 339:../main.c     **** 				speed_fr = Driving_speed_cal * Speed_ratio;
 2565              	 .loc 6 339 0
 2566 0c22 7C4B     	 ldr r3,.L121+56
 2567 0c24 1B68     	 ldr r3,[r3]
 2568 0c26 181C     	 add r0,r3,#0
 2569 0c28 B968     	 ldr r1,[r7,#8]
 2570 0c2a FFF7FEFF 	 bl __aeabi_fmul
 2571 0c2e 031C     	 add r3,r0,#0
 2572 0c30 1A1C     	 add r2,r3,#0
 2573 0c32 7A4B     	 ldr r3,.L121+64
 2574 0c34 1A60     	 str r2,[r3]
 340:../main.c     **** 				//speed_rl = Driving_speed_cal / Speed_ratio;
 341:../main.c     **** 				//speed_rr = Driving_speed_cal * Speed_ratio;
 342:../main.c     **** 
 343:../main.c     **** 				speed_rl = speed_fl;
 2575              	 .loc 6 343 0
 2576 0c36 784B     	 ldr r3,.L121+60
 2577 0c38 1A68     	 ldr r2,[r3]
 2578 0c3a 794B     	 ldr r3,.L121+68
 2579 0c3c 1A60     	 str r2,[r3]
 344:../main.c     **** 				speed_rr = speed_fr;
 2580              	 .loc 6 344 0
 2581 0c3e 774B     	 ldr r3,.L121+64
 2582 0c40 1A68     	 ldr r2,[r3]
 2583 0c42 784B     	 ldr r3,.L121+72
 2584 0c44 1A60     	 str r2,[r3]
 2585 0c46 18E0     	 b .L76
 2586              	.L77:
 345:../main.c     **** 			}
 346:../main.c     **** 			else{// starigt driving
 347:../main.c     **** 				angle_fl = 0;
 2587              	 .loc 6 347 0
 2588 0c48 6E4B     	 ldr r3,.L121+40
 2589 0c4a 0022     	 mov r2,#0
 2590 0c4c 1A60     	 str r2,[r3]
 348:../main.c     **** 				angle_fr = 0;
 2591              	 .loc 6 348 0
 2592 0c4e 6E4B     	 ldr r3,.L121+44
 2593 0c50 0022     	 mov r2,#0
 2594 0c52 1A60     	 str r2,[r3]
 349:../main.c     **** 				angle_rl = 0;
 2595              	 .loc 6 349 0
 2596 0c54 6D4B     	 ldr r3,.L121+48
 2597 0c56 0022     	 mov r2,#0
 2598 0c58 1A60     	 str r2,[r3]
 350:../main.c     **** 				angle_rr = 0;
 2599              	 .loc 6 350 0
 2600 0c5a 6D4B     	 ldr r3,.L121+52
 2601 0c5c 0022     	 mov r2,#0
 2602 0c5e 1A60     	 str r2,[r3]
 351:../main.c     **** 
 352:../main.c     **** 				speed_fl = Driving_speed_cal;
 2603              	 .loc 6 352 0
 2604 0c60 6D4B     	 ldr r3,.L121+60
 2605 0c62 BA68     	 ldr r2,[r7,#8]
 2606 0c64 1A60     	 str r2,[r3]
 353:../main.c     **** 				speed_fr = Driving_speed_cal;
 2607              	 .loc 6 353 0
 2608 0c66 6D4B     	 ldr r3,.L121+64
 2609 0c68 BA68     	 ldr r2,[r7,#8]
 2610 0c6a 1A60     	 str r2,[r3]
 354:../main.c     **** 				speed_rl = Driving_speed_cal;
 2611              	 .loc 6 354 0
 2612 0c6c 6C4B     	 ldr r3,.L121+68
 2613 0c6e BA68     	 ldr r2,[r7,#8]
 2614 0c70 1A60     	 str r2,[r3]
 355:../main.c     **** 				speed_rr = Driving_speed_cal;
 2615              	 .loc 6 355 0
 2616 0c72 6C4B     	 ldr r3,.L121+72
 2617 0c74 BA68     	 ldr r2,[r7,#8]
 2618 0c76 1A60     	 str r2,[r3]
 356:../main.c     **** 			}
 357:../main.c     **** 			break;
 2619              	 .loc 6 357 0
 2620 0c78 8CE0     	 b .L57
 2621              	.L76:
 2622 0c7a 8BE0     	 b .L57
 2623              	.L44:
 358:../main.c     **** 
 359:../main.c     **** 		case CRAB:  //carb //#############################################################
 360:../main.c     **** 			Steering_direction_cal = Steering_direction_cal * 4; // mach data from remote
 2624              	 .loc 6 360 0
 2625 0c7c F868     	 ldr r0,[r7,#12]
 2626 0c7e 8121     	 mov r1,#129
 2627 0c80 C905     	 lsl r1,r1,#23
 2628 0c82 FFF7FEFF 	 bl __aeabi_fmul
 2629 0c86 031C     	 add r3,r0,#0
 2630 0c88 FB60     	 str r3,[r7,#12]
 361:../main.c     **** 			if(Steering_direction_cal > 190) Steering_direction_cal = 190;
 2631              	 .loc 6 361 0
 2632 0c8a F868     	 ldr r0,[r7,#12]
 2633 0c8c 6649     	 ldr r1,.L121+76
 2634 0c8e FFF7FEFF 	 bl __aeabi_fcmpgt
 2635 0c92 031E     	 sub r3,r0,#0
 2636 0c94 01D0     	 beq .L80
 2637              	 .loc 6 361 0 is_stmt 0 discriminator 1
 2638 0c96 644B     	 ldr r3,.L121+76
 2639 0c98 FB60     	 str r3,[r7,#12]
 2640              	.L80:
 362:../main.c     **** 			if(Steering_direction_cal < -190) Steering_direction_cal = -190;
 2641              	 .loc 6 362 0 is_stmt 1
 2642 0c9a F868     	 ldr r0,[r7,#12]
 2643 0c9c 6349     	 ldr r1,.L121+80
 2644 0c9e FFF7FEFF 	 bl __aeabi_fcmplt
 2645 0ca2 031E     	 sub r3,r0,#0
 2646 0ca4 01D0     	 beq .L82
 2647              	 .loc 6 362 0 is_stmt 0 discriminator 1
 2648 0ca6 614B     	 ldr r3,.L121+80
 2649 0ca8 FB60     	 str r3,[r7,#12]
 2650              	.L82:
 363:../main.c     **** 			// steering
 364:../main.c     **** 			angle_fl = Steering_direction_cal;
 2651              	 .loc 6 364 0 is_stmt 1
 2652 0caa 564B     	 ldr r3,.L121+40
 2653 0cac FA68     	 ldr r2,[r7,#12]
 2654 0cae 1A60     	 str r2,[r3]
 365:../main.c     **** 			angle_fr = Steering_direction_cal;
 2655              	 .loc 6 365 0
 2656 0cb0 554B     	 ldr r3,.L121+44
 2657 0cb2 FA68     	 ldr r2,[r7,#12]
 2658 0cb4 1A60     	 str r2,[r3]
 366:../main.c     **** 			angle_rl = Steering_direction_cal;
 2659              	 .loc 6 366 0
 2660 0cb6 554B     	 ldr r3,.L121+48
 2661 0cb8 FA68     	 ldr r2,[r7,#12]
 2662 0cba 1A60     	 str r2,[r3]
 367:../main.c     **** 			angle_rr = Steering_direction_cal;
 2663              	 .loc 6 367 0
 2664 0cbc 544B     	 ldr r3,.L121+52
 2665 0cbe FA68     	 ldr r2,[r7,#12]
 2666 0cc0 1A60     	 str r2,[r3]
 368:../main.c     **** 			 // speed
 369:../main.c     **** 			 speed_fl = Driving_speed_cal;
 2667              	 .loc 6 369 0
 2668 0cc2 554B     	 ldr r3,.L121+60
 2669 0cc4 BA68     	 ldr r2,[r7,#8]
 2670 0cc6 1A60     	 str r2,[r3]
 370:../main.c     **** 			 speed_fr = Driving_speed_cal;
 2671              	 .loc 6 370 0
 2672 0cc8 544B     	 ldr r3,.L121+64
 2673 0cca BA68     	 ldr r2,[r7,#8]
 2674 0ccc 1A60     	 str r2,[r3]
 371:../main.c     **** 			 speed_rl = Driving_speed_cal;
 2675              	 .loc 6 371 0
 2676 0cce 544B     	 ldr r3,.L121+68
 2677 0cd0 BA68     	 ldr r2,[r7,#8]
 2678 0cd2 1A60     	 str r2,[r3]
 372:../main.c     **** 			 speed_rr = Driving_speed_cal;
 2679              	 .loc 6 372 0
 2680 0cd4 534B     	 ldr r3,.L121+72
 2681 0cd6 BA68     	 ldr r2,[r7,#8]
 2682 0cd8 1A60     	 str r2,[r3]
 373:../main.c     **** 			break;
 2683              	 .loc 6 373 0
 2684 0cda 5BE0     	 b .L57
 2685              	.L45:
 374:../main.c     **** 
 375:../main.c     **** 		case ROTATE: // rotate #############################################################
 376:../main.c     **** 			// steering agel for turng in place
 377:../main.c     **** 			angle_fl = ROTATION_ANGLE + ROTATION_ANGLE_OFFSET;
 2686              	 .loc 6 377 0
 2687 0cdc 494B     	 ldr r3,.L121+40
 2688 0cde 544A     	 ldr r2,.L121+84
 2689 0ce0 1A60     	 str r2,[r3]
 378:../main.c     **** 			angle_fr = -ROTATION_ANGLE + ROTATION_ANGLE_OFFSET;
 2690              	 .loc 6 378 0
 2691 0ce2 494B     	 ldr r3,.L121+44
 2692 0ce4 534A     	 ldr r2,.L121+88
 2693 0ce6 1A60     	 str r2,[r3]
 379:../main.c     **** 			angle_rl = -ROTATION_ANGLE + ROTATION_ANGLE_OFFSET;
 2694              	 .loc 6 379 0
 2695 0ce8 484B     	 ldr r3,.L121+48
 2696 0cea 524A     	 ldr r2,.L121+88
 2697 0cec 1A60     	 str r2,[r3]
 380:../main.c     **** 			angle_rr = ROTATION_ANGLE + ROTATION_ANGLE_OFFSET;
 2698              	 .loc 6 380 0
 2699 0cee 484B     	 ldr r3,.L121+52
 2700 0cf0 4F4A     	 ldr r2,.L121+84
 2701 0cf2 1A60     	 str r2,[r3]
 381:../main.c     **** 
 382:../main.c     **** 			 // speed
 383:../main.c     **** 			if (Steering_direction_cal > 10){
 2702              	 .loc 6 383 0
 2703 0cf4 F868     	 ldr r0,[r7,#12]
 2704 0cf6 5049     	 ldr r1,.L121+92
 2705 0cf8 FFF7FEFF 	 bl __aeabi_fcmpgt
 2706 0cfc 031E     	 sub r3,r0,#0
 2707 0cfe 0ED0     	 beq .L113
 384:../main.c     **** 				speed_fl = ROTATION_SPEED;
 2708              	 .loc 6 384 0
 2709 0d00 454B     	 ldr r3,.L121+60
 2710 0d02 FA22     	 mov r2,#250
 2711 0d04 9205     	 lsl r2,r2,#22
 2712 0d06 1A60     	 str r2,[r3]
 385:../main.c     **** 				speed_fr = -ROTATION_SPEED;
 2713              	 .loc 6 385 0
 2714 0d08 444B     	 ldr r3,.L121+64
 2715 0d0a 4C4A     	 ldr r2,.L121+96
 2716 0d0c 1A60     	 str r2,[r3]
 386:../main.c     **** 				speed_rl = ROTATION_SPEED;
 2717              	 .loc 6 386 0
 2718 0d0e 444B     	 ldr r3,.L121+68
 2719 0d10 FA22     	 mov r2,#250
 2720 0d12 9205     	 lsl r2,r2,#22
 2721 0d14 1A60     	 str r2,[r3]
 387:../main.c     **** 				speed_rr = -ROTATION_SPEED;
 2722              	 .loc 6 387 0
 2723 0d16 434B     	 ldr r3,.L121+72
 2724 0d18 484A     	 ldr r2,.L121+96
 2725 0d1a 1A60     	 str r2,[r3]
 2726 0d1c 21E0     	 b .L86
 2727              	.L113:
 388:../main.c     **** 			}
 389:../main.c     **** 			else if(Steering_direction_cal < -10){
 2728              	 .loc 6 389 0
 2729 0d1e F868     	 ldr r0,[r7,#12]
 2730 0d20 4749     	 ldr r1,.L121+100
 2731 0d22 FFF7FEFF 	 bl __aeabi_fcmplt
 2732 0d26 031E     	 sub r3,r0,#0
 2733 0d28 0ED0     	 beq .L114
 390:../main.c     **** 				speed_fl = -ROTATION_SPEED;
 2734              	 .loc 6 390 0
 2735 0d2a 3B4B     	 ldr r3,.L121+60
 2736 0d2c 434A     	 ldr r2,.L121+96
 2737 0d2e 1A60     	 str r2,[r3]
 391:../main.c     **** 				speed_fr = ROTATION_SPEED;
 2738              	 .loc 6 391 0
 2739 0d30 3A4B     	 ldr r3,.L121+64
 2740 0d32 FA22     	 mov r2,#250
 2741 0d34 9205     	 lsl r2,r2,#22
 2742 0d36 1A60     	 str r2,[r3]
 392:../main.c     **** 				speed_rl = -ROTATION_SPEED;
 2743              	 .loc 6 392 0
 2744 0d38 394B     	 ldr r3,.L121+68
 2745 0d3a 404A     	 ldr r2,.L121+96
 2746 0d3c 1A60     	 str r2,[r3]
 393:../main.c     **** 				speed_rr = ROTATION_SPEED;
 2747              	 .loc 6 393 0
 2748 0d3e 394B     	 ldr r3,.L121+72
 2749 0d40 FA22     	 mov r2,#250
 2750 0d42 9205     	 lsl r2,r2,#22
 2751 0d44 1A60     	 str r2,[r3]
 2752 0d46 0CE0     	 b .L86
 2753              	.L114:
 394:../main.c     **** 			}
 395:../main.c     **** 			else{
 396:../main.c     **** 				speed_fl = 0;
 2754              	 .loc 6 396 0
 2755 0d48 334B     	 ldr r3,.L121+60
 2756 0d4a 0022     	 mov r2,#0
 2757 0d4c 1A60     	 str r2,[r3]
 397:../main.c     **** 				speed_fr = 0;
 2758              	 .loc 6 397 0
 2759 0d4e 334B     	 ldr r3,.L121+64
 2760 0d50 0022     	 mov r2,#0
 2761 0d52 1A60     	 str r2,[r3]
 398:../main.c     **** 				speed_rl = 0;
 2762              	 .loc 6 398 0
 2763 0d54 324B     	 ldr r3,.L121+68
 2764 0d56 0022     	 mov r2,#0
 2765 0d58 1A60     	 str r2,[r3]
 399:../main.c     **** 				speed_rr = 0;
 2766              	 .loc 6 399 0
 2767 0d5a 324B     	 ldr r3,.L121+72
 2768 0d5c 0022     	 mov r2,#0
 2769 0d5e 1A60     	 str r2,[r3]
 400:../main.c     **** 			}
 401:../main.c     **** 			break;
 2770              	 .loc 6 401 0
 2771 0d60 18E0     	 b .L57
 2772              	.L86:
 2773 0d62 17E0     	 b .L57
 2774              	.L39:
 402:../main.c     **** 
 403:../main.c     **** 		default:
 404:../main.c     **** 			angle_fl = 0;
 2775              	 .loc 6 404 0
 2776 0d64 274B     	 ldr r3,.L121+40
 2777 0d66 0022     	 mov r2,#0
 2778 0d68 1A60     	 str r2,[r3]
 405:../main.c     **** 			angle_fr = 0;
 2779              	 .loc 6 405 0
 2780 0d6a 274B     	 ldr r3,.L121+44
 2781 0d6c 0022     	 mov r2,#0
 2782 0d6e 1A60     	 str r2,[r3]
 406:../main.c     **** 			angle_rl = 0;
 2783              	 .loc 6 406 0
 2784 0d70 264B     	 ldr r3,.L121+48
 2785 0d72 0022     	 mov r2,#0
 2786 0d74 1A60     	 str r2,[r3]
 407:../main.c     **** 			angle_rr = 0;
 2787              	 .loc 6 407 0
 2788 0d76 264B     	 ldr r3,.L121+52
 2789 0d78 0022     	 mov r2,#0
 2790 0d7a 1A60     	 str r2,[r3]
 408:../main.c     **** 
 409:../main.c     **** 			speed_fl = 0;
 2791              	 .loc 6 409 0
 2792 0d7c 264B     	 ldr r3,.L121+60
 2793 0d7e 0022     	 mov r2,#0
 2794 0d80 1A60     	 str r2,[r3]
 410:../main.c     **** 			speed_fr = 0;
 2795              	 .loc 6 410 0
 2796 0d82 264B     	 ldr r3,.L121+64
 2797 0d84 0022     	 mov r2,#0
 2798 0d86 1A60     	 str r2,[r3]
 411:../main.c     **** 			speed_rl = 0;
 2799              	 .loc 6 411 0
 2800 0d88 254B     	 ldr r3,.L121+68
 2801 0d8a 0022     	 mov r2,#0
 2802 0d8c 1A60     	 str r2,[r3]
 412:../main.c     **** 			speed_rr = 0;
 2803              	 .loc 6 412 0
 2804 0d8e 254B     	 ldr r3,.L121+72
 2805 0d90 0022     	 mov r2,#0
 2806 0d92 1A60     	 str r2,[r3]
 2807              	.L57:
 413:../main.c     **** 
 414:../main.c     **** 	}
 415:../main.c     ****   // set gobal vars
 416:../main.c     ****   Steering_Angles[0] = angle_fl;
 2808              	 .loc 6 416 0
 2809 0d94 1B4B     	 ldr r3,.L121+40
 2810 0d96 1A68     	 ldr r2,[r3]
 2811 0d98 2A4B     	 ldr r3,.L121+104
 2812 0d9a 1A60     	 str r2,[r3]
 417:../main.c     ****   Steering_Angles[1] = angle_fr;
 2813              	 .loc 6 417 0
 2814 0d9c 1A4B     	 ldr r3,.L121+44
 2815 0d9e 1A68     	 ldr r2,[r3]
 2816 0da0 284B     	 ldr r3,.L121+104
 2817 0da2 5A60     	 str r2,[r3,#4]
 418:../main.c     ****   Steering_Angles[2] = angle_rl;
 2818              	 .loc 6 418 0
 2819 0da4 194B     	 ldr r3,.L121+48
 2820 0da6 1A68     	 ldr r2,[r3]
 2821 0da8 264B     	 ldr r3,.L121+104
 2822 0daa 9A60     	 str r2,[r3,#8]
 419:../main.c     ****   Steering_Angles[3] = angle_rr;
 2823              	 .loc 6 419 0
 2824 0dac 184B     	 ldr r3,.L121+52
 2825 0dae 1A68     	 ldr r2,[r3]
 2826 0db0 244B     	 ldr r3,.L121+104
 2827 0db2 DA60     	 str r2,[r3,#12]
 420:../main.c     **** 
 421:../main.c     ****   Speeds[0] = speed_fl;
 2828              	 .loc 6 421 0
 2829 0db4 184B     	 ldr r3,.L121+60
 2830 0db6 1A68     	 ldr r2,[r3]
 2831 0db8 234B     	 ldr r3,.L121+108
 2832 0dba 1A60     	 str r2,[r3]
 422:../main.c     ****   Speeds[1] = speed_fr;
 2833              	 .loc 6 422 0
 2834 0dbc 174B     	 ldr r3,.L121+64
 2835 0dbe 1A68     	 ldr r2,[r3]
 2836 0dc0 214B     	 ldr r3,.L121+108
 2837 0dc2 5A60     	 str r2,[r3,#4]
 423:../main.c     ****   Speeds[2] = speed_rl;
 2838              	 .loc 6 423 0
 2839 0dc4 164B     	 ldr r3,.L121+68
 2840 0dc6 1A68     	 ldr r2,[r3]
 2841 0dc8 1F4B     	 ldr r3,.L121+108
 2842 0dca 9A60     	 str r2,[r3,#8]
 424:../main.c     ****   Speeds[3] = speed_rr;
 2843              	 .loc 6 424 0
 2844 0dcc 154B     	 ldr r3,.L121+72
 2845 0dce 1A68     	 ldr r2,[r3]
 2846 0dd0 1D4B     	 ldr r3,.L121+108
 2847 0dd2 DA60     	 str r2,[r3,#12]
 425:../main.c     **** 
 426:../main.c     **** }
 2848              	 .loc 6 426 0
 2849 0dd4 BD46     	 mov sp,r7
 2850 0dd6 05B0     	 add sp,sp,#20
 2851              	 
 2852 0dd8 F0BD     	 pop {r4,r5,r6,r7,pc}
 2853              	.L122:
 2854 0dda C046     	 .align 2
 2855              	.L121:
 2856 0ddc 00000000 	 .word R_Turn
 2857 0de0 9A999999 	 .word -1717986918
 2858 0de4 9999A9BF 	 .word -1079404135
 2859 0de8 0000A0C1 	 .word -1046478848
 2860 0dec 77BE9F1A 	 .word 446676599
 2861 0df0 2FDDC43F 	 .word 1069866287
 2862 0df4 79E92631 	 .word 824633721
 2863 0df8 08ACDC3F 	 .word 1071426568
 2864 0dfc D9CEF753 	 .word 1408749273
 2865 0e00 E3A54C40 	 .word 1078765027
 2866 0e04 00000000 	 .word angle_fl
 2867 0e08 00000000 	 .word angle_fr
 2868 0e0c 00000000 	 .word angle_rl
 2869 0e10 00000000 	 .word angle_rr
 2870 0e14 00000000 	 .word Speed_ratio
 2871 0e18 00000000 	 .word speed_fl
 2872 0e1c 00000000 	 .word speed_fr
 2873 0e20 00000000 	 .word speed_rl
 2874 0e24 00000000 	 .word speed_rr
 2875 0e28 00003E43 	 .word 1128136704
 2876 0e2c 00003EC3 	 .word -1019346944
 2877 0e30 0AD76B42 	 .word 1114363658
 2878 0e34 0AD743C2 	 .word -1035741430
 2879 0e38 00002041 	 .word 1092616192
 2880 0e3c 000080BE 	 .word -1098907648
 2881 0e40 000020C1 	 .word -1054867456
 2882 0e44 00000000 	 .word Steering_Angles
 2883 0e48 00000000 	 .word Speeds
 2884              	 .cfi_endproc
 2885              	.LFE225:
 2887              	 .section .text.IRQ4_Handler,"ax",%progbits
 2888              	 .align 2
 2889              	 .global IRQ4_Handler
 2890              	 .code 16
 2891              	 .thumb_func
 2893              	IRQ4_Handler:
 2894              	.LFB226:
 427:../main.c     **** 
 428:../main.c     **** void CAN_RX_ULTRASONIC_ISR(void) { // recide data
 2895              	 .loc 6 428 0
 2896              	 .cfi_startproc
 2897 0000 90B5     	 push {r4,r7,lr}
 2898              	.LCFI36:
 2899              	 .cfi_def_cfa_offset 12
 2900              	 .cfi_offset 4,-12
 2901              	 .cfi_offset 7,-8
 2902              	 .cfi_offset 14,-4
 2903 0002 87B0     	 sub sp,sp,#28
 2904              	.LCFI37:
 2905              	 .cfi_def_cfa_offset 40
 2906 0004 02AF     	 add r7,sp,#8
 2907              	.LCFI38:
 2908              	 .cfi_def_cfa 7,32
 429:../main.c     **** 	XMC_CAN_MO_t* lmsgobjct_ptr_1 = CAN_NODE_0.lmobj_ptr[6]->mo_ptr;
 2909              	 .loc 6 429 0
 2910 0006 3B4B     	 ldr r3,.L126
 2911 0008 5B6A     	 ldr r3,[r3,#36]
 2912 000a 1B68     	 ldr r3,[r3]
 2913 000c BB60     	 str r3,[r7,#8]
 430:../main.c     **** 	CAN_NODE_MO_Receive((void*) CAN_NODE_0.lmobj_ptr[6]);
 2914              	 .loc 6 430 0
 2915 000e 394B     	 ldr r3,.L126
 2916 0010 5B6A     	 ldr r3,[r3,#36]
 2917 0012 181C     	 mov r0,r3
 2918 0014 FFF7FEFF 	 bl CAN_NODE_MO_Receive
 431:../main.c     **** 
 432:../main.c     **** 	uint8_t data_RX[8];
 433:../main.c     **** 	uint8_t i;
 434:../main.c     **** 	for(i = 0 ; i < 8 ; i ++){
 2919              	 .loc 6 434 0
 2920 0018 0F23     	 mov r3,#15
 2921 001a FB18     	 add r3,r7,r3
 2922 001c 0022     	 mov r2,#0
 2923 001e 1A70     	 strb r2,[r3]
 2924 0020 11E0     	 b .L124
 2925              	.L125:
 435:../main.c     **** 		 data_RX[i] = lmsgobjct_ptr_1->can_data_byte[i];
 2926              	 .loc 6 435 0 discriminator 3
 2927 0022 0F23     	 mov r3,#15
 2928 0024 FB18     	 add r3,r7,r3
 2929 0026 1B78     	 ldrb r3,[r3]
 2930 0028 0F22     	 mov r2,#15
 2931 002a BA18     	 add r2,r7,r2
 2932 002c 1278     	 ldrb r2,[r2]
 2933 002e B968     	 ldr r1,[r7,#8]
 2934 0030 8A18     	 add r2,r1,r2
 2935 0032 117C     	 ldrb r1,[r2,#16]
 2936 0034 3A1C     	 mov r2,r7
 2937 0036 D154     	 strb r1,[r2,r3]
 434:../main.c     **** 		 data_RX[i] = lmsgobjct_ptr_1->can_data_byte[i];
 2938              	 .loc 6 434 0 discriminator 3
 2939 0038 0F23     	 mov r3,#15
 2940 003a FB18     	 add r3,r7,r3
 2941 003c 1A78     	 ldrb r2,[r3]
 2942 003e 0F23     	 mov r3,#15
 2943 0040 FB18     	 add r3,r7,r3
 2944 0042 0132     	 add r2,r2,#1
 2945 0044 1A70     	 strb r2,[r3]
 2946              	.L124:
 434:../main.c     **** 		 data_RX[i] = lmsgobjct_ptr_1->can_data_byte[i];
 2947              	 .loc 6 434 0 is_stmt 0 discriminator 1
 2948 0046 0F23     	 mov r3,#15
 2949 0048 FB18     	 add r3,r7,r3
 2950 004a 1B78     	 ldrb r3,[r3]
 2951 004c 072B     	 cmp r3,#7
 2952 004e E8D9     	 bls .L125
 436:../main.c     **** 	}
 437:../main.c     **** 
 438:../main.c     **** 	CAN_state_Ultrasonic = (data_RX[0 * 2 + 1] << 8) | data_RX[0 * 2];
 2953              	 .loc 6 438 0 is_stmt 1
 2954 0050 3B1C     	 mov r3,r7
 2955 0052 5B78     	 ldrb r3,[r3,#1]
 2956 0054 1B02     	 lsl r3,r3,#8
 2957 0056 DAB2     	 uxtb r2,r3
 2958 0058 3B1C     	 mov r3,r7
 2959 005a 1B78     	 ldrb r3,[r3]
 2960 005c DBB2     	 uxtb r3,r3
 2961 005e 1343     	 orr r3,r2
 2962 0060 DBB2     	 uxtb r3,r3
 2963 0062 DAB2     	 uxtb r2,r3
 2964 0064 244B     	 ldr r3,.L126+4
 2965 0066 1A70     	 strb r2,[r3]
 439:../main.c     **** 	Ultrasonic_cm_C = (data_RX[1 * 2 + 1] << 8) | data_RX[1 * 2];
 2966              	 .loc 6 439 0
 2967 0068 3B1C     	 mov r3,r7
 2968 006a DB78     	 ldrb r3,[r3,#3]
 2969 006c 1B02     	 lsl r3,r3,#8
 2970 006e 9AB2     	 uxth r2,r3
 2971 0070 3B1C     	 mov r3,r7
 2972 0072 9B78     	 ldrb r3,[r3,#2]
 2973 0074 9BB2     	 uxth r3,r3
 2974 0076 1343     	 orr r3,r2
 2975 0078 9BB2     	 uxth r3,r3
 2976 007a 9AB2     	 uxth r2,r3
 2977 007c 1F4B     	 ldr r3,.L126+8
 2978 007e 1A80     	 strh r2,[r3]
 440:../main.c     **** 	Ultrasonic_cm_L = (data_RX[2 * 2 + 1] << 8) | data_RX[2 * 2];
 2979              	 .loc 6 440 0
 2980 0080 3B1C     	 mov r3,r7
 2981 0082 5B79     	 ldrb r3,[r3,#5]
 2982 0084 1B02     	 lsl r3,r3,#8
 2983 0086 9AB2     	 uxth r2,r3
 2984 0088 3B1C     	 mov r3,r7
 2985 008a 1B79     	 ldrb r3,[r3,#4]
 2986 008c 9BB2     	 uxth r3,r3
 2987 008e 1343     	 orr r3,r2
 2988 0090 9BB2     	 uxth r3,r3
 2989 0092 9AB2     	 uxth r2,r3
 2990 0094 1A4B     	 ldr r3,.L126+12
 2991 0096 1A80     	 strh r2,[r3]
 441:../main.c     **** 	Ultrasonic_cm_R = (data_RX[3 * 2 + 1] << 8) | data_RX[3 * 2];
 2992              	 .loc 6 441 0
 2993 0098 3B1C     	 mov r3,r7
 2994 009a DB79     	 ldrb r3,[r3,#7]
 2995 009c 1B02     	 lsl r3,r3,#8
 2996 009e 9AB2     	 uxth r2,r3
 2997 00a0 3B1C     	 mov r3,r7
 2998 00a2 9B79     	 ldrb r3,[r3,#6]
 2999 00a4 9BB2     	 uxth r3,r3
 3000 00a6 1343     	 orr r3,r2
 3001 00a8 9BB2     	 uxth r3,r3
 3002 00aa 9AB2     	 uxth r2,r3
 3003 00ac 154B     	 ldr r3,.L126+16
 3004 00ae 1A80     	 strh r2,[r3]
 442:../main.c     **** 
 443:../main.c     **** 	Ultra_sonic_filter(Ultrasonic_cm_C,  Ultrasonic_cm_L,  Ultrasonic_cm_R,  Steering_Angles,  ALPHA_U
 3005              	 .loc 6 443 0
 3006 00b0 124B     	 ldr r3,.L126+8
 3007 00b2 1B88     	 ldrh r3,[r3]
 3008 00b4 9BB2     	 uxth r3,r3
 3009 00b6 98B2     	 uxth r0,r3
 3010 00b8 114B     	 ldr r3,.L126+12
 3011 00ba 1B88     	 ldrh r3,[r3]
 3012 00bc 9BB2     	 uxth r3,r3
 3013 00be 99B2     	 uxth r1,r3
 3014 00c0 104B     	 ldr r3,.L126+16
 3015 00c2 1B88     	 ldrh r3,[r3]
 3016 00c4 9BB2     	 uxth r3,r3
 3017 00c6 9AB2     	 uxth r2,r3
 3018 00c8 0F4B     	 ldr r3,.L126+20
 3019 00ca 1B68     	 ldr r3,[r3]
 3020 00cc 00B2     	 sxth r0,r0
 3021 00ce 09B2     	 sxth r1,r1
 3022 00d0 12B2     	 sxth r2,r2
 3023 00d2 0E4C     	 ldr r4,.L126+24
 3024 00d4 0093     	 str r3,[sp]
 3025 00d6 231C     	 mov r3,r4
 3026 00d8 FFF7FEFF 	 bl Ultra_sonic_filter
 444:../main.c     **** 
 445:../main.c     **** 	CAN_Ultrasonic_No_messasge_count = 0;
 3027              	 .loc 6 445 0
 3028 00dc 0C4B     	 ldr r3,.L126+28
 3029 00de 0022     	 mov r2,#0
 3030 00e0 1A70     	 strb r2,[r3]
 446:../main.c     **** 
 447:../main.c     **** 	WATCHDOG_Service();
 3031              	 .loc 6 447 0
 3032 00e2 FFF7FEFF 	 bl WATCHDOG_Service
 448:../main.c     **** 	DIGITAL_IO_SetOutputLow(&WATCHDOG_LED_BLUE);
 3033              	 .loc 6 448 0
 3034 00e6 0B4B     	 ldr r3,.L126+32
 3035 00e8 181C     	 mov r0,r3
 3036 00ea FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 449:../main.c     **** }
 3037              	 .loc 6 449 0
 3038 00ee BD46     	 mov sp,r7
 3039 00f0 05B0     	 add sp,sp,#20
 3040              	 
 3041 00f2 90BD     	 pop {r4,r7,pc}
 3042              	.L127:
 3043              	 .align 2
 3044              	.L126:
 3045 00f4 00000000 	 .word CAN_NODE_0
 3046 00f8 00000000 	 .word CAN_state_Ultrasonic
 3047 00fc 00000000 	 .word Ultrasonic_cm_C
 3048 0100 00000000 	 .word Ultrasonic_cm_L
 3049 0104 00000000 	 .word Ultrasonic_cm_R
 3050 0108 00000000 	 .word ALPHA_ULTARSONIC
 3051 010c 00000000 	 .word Steering_Angles
 3052 0110 00000000 	 .word CAN_Ultrasonic_No_messasge_count
 3053 0114 00000000 	 .word WATCHDOG_LED_BLUE
 3054              	 .cfi_endproc
 3055              	.LFE226:
 3057              	 .global __aeabi_i2f
 3058              	 .section .text.Ultra_sonic_filter,"ax",%progbits
 3059              	 .align 2
 3060              	 .global Ultra_sonic_filter
 3061              	 .code 16
 3062              	 .thumb_func
 3064              	Ultra_sonic_filter:
 3065              	.LFB227:
 450:../main.c     **** 
 451:../main.c     **** void Ultra_sonic_filter(int16_t Ultrasonic_cm_C_clc, int16_t Ultrasonic_cm_L_clc, int16_t Ultrasoni
 3066              	 .loc 6 451 0
 3067              	 .cfi_startproc
 3068 0000 F0B5     	 push {r4,r5,r6,r7,lr}
 3069              	.LCFI39:
 3070              	 .cfi_def_cfa_offset 20
 3071              	 .cfi_offset 4,-20
 3072              	 .cfi_offset 5,-16
 3073              	 .cfi_offset 6,-12
 3074              	 .cfi_offset 7,-8
 3075              	 .cfi_offset 14,-4
 3076 0002 87B0     	 sub sp,sp,#28
 3077              	.LCFI40:
 3078              	 .cfi_def_cfa_offset 48
 3079 0004 00AF     	 add r7,sp,#0
 3080              	.LCFI41:
 3081              	 .cfi_def_cfa_register 7
 3082 0006 041C     	 mov r4,r0
 3083 0008 081C     	 mov r0,r1
 3084 000a 111C     	 mov r1,r2
 3085 000c 7B60     	 str r3,[r7,#4]
 3086 000e 0E23     	 mov r3,#14
 3087 0010 FB18     	 add r3,r7,r3
 3088 0012 221C     	 add r2,r4,#0
 3089 0014 1A80     	 strh r2,[r3]
 3090 0016 0C23     	 mov r3,#12
 3091 0018 FB18     	 add r3,r7,r3
 3092 001a 021C     	 add r2,r0,#0
 3093 001c 1A80     	 strh r2,[r3]
 3094 001e 0A23     	 mov r3,#10
 3095 0020 FB18     	 add r3,r7,r3
 3096 0022 0A1C     	 add r2,r1,#0
 3097 0024 1A80     	 strh r2,[r3]
 452:../main.c     **** 
 453:../main.c     **** 	if(Ultrasonic_cm_C_clc != 0){
 3098              	 .loc 6 453 0
 3099 0026 0E23     	 mov r3,#14
 3100 0028 FB18     	 add r3,r7,r3
 3101 002a 0022     	 mov r2,#0
 3102 002c 9B5E     	 ldrsh r3,[r3,r2]
 3103 002e 002B     	 cmp r3,#0
 3104 0030 1CD0     	 beq .L129
 454:../main.c     **** 		Ultrsonic_data_invaildcounter[0] = 0;
 3105              	 .loc 6 454 0
 3106 0032 C84B     	 ldr r3,.L146
 3107 0034 0022     	 mov r2,#0
 3108 0036 1A70     	 strb r2,[r3]
 455:../main.c     **** 		Fil_Ultrasonic_m_C = Exp_moving_average((float)Ultrasonic_cm_C_clc / 100 , Fil_Ultrasonic_m_C, AL
 3109              	 .loc 6 455 0
 3110 0038 0E23     	 mov r3,#14
 3111 003a FB18     	 add r3,r7,r3
 3112 003c 0022     	 mov r2,#0
 3113 003e 9B5E     	 ldrsh r3,[r3,r2]
 3114 0040 181C     	 mov r0,r3
 3115 0042 FFF7FEFF 	 bl __aeabi_i2f
 3116 0046 031C     	 add r3,r0,#0
 3117 0048 181C     	 add r0,r3,#0
 3118 004a C349     	 ldr r1,.L146+4
 3119 004c FFF7FEFF 	 bl __aeabi_fdiv
 3120 0050 031C     	 add r3,r0,#0
 3121 0052 191C     	 add r1,r3,#0
 3122 0054 C14B     	 ldr r3,.L146+8
 3123 0056 1A68     	 ldr r2,[r3]
 3124 0058 3B6B     	 ldr r3,[r7,#48]
 3125 005a 081C     	 add r0,r1,#0
 3126 005c 111C     	 add r1,r2,#0
 3127 005e 1A1C     	 add r2,r3,#0
 3128 0060 FFF7FEFF 	 bl Exp_moving_average
 3129 0064 021C     	 add r2,r0,#0
 3130 0066 BD4B     	 ldr r3,.L146+8
 3131 0068 1A60     	 str r2,[r3]
 3132 006a 05E0     	 b .L130
 3133              	.L129:
 456:../main.c     **** 		//Fil_Ultrasonic_m_C = (float)Ultrasonic_cm_C_clc /100;
 457:../main.c     **** 	}
 458:../main.c     **** 	else Ultrsonic_data_invaildcounter[0]++;
 3134              	 .loc 6 458 0
 3135 006c B94B     	 ldr r3,.L146
 3136 006e 1B78     	 ldrb r3,[r3]
 3137 0070 0133     	 add r3,r3,#1
 3138 0072 DAB2     	 uxtb r2,r3
 3139 0074 B74B     	 ldr r3,.L146
 3140 0076 1A70     	 strb r2,[r3]
 3141              	.L130:
 459:../main.c     **** 
 460:../main.c     **** 	if(Ultrasonic_cm_L_clc != 0){
 3142              	 .loc 6 460 0
 3143 0078 0C23     	 mov r3,#12
 3144 007a FB18     	 add r3,r7,r3
 3145 007c 0022     	 mov r2,#0
 3146 007e 9B5E     	 ldrsh r3,[r3,r2]
 3147 0080 002B     	 cmp r3,#0
 3148 0082 20D0     	 beq .L131
 461:../main.c     **** 		obstructed_L = Ultrasoinc_Obstructet_Test(Steering_Angles_clc[0]);
 3149              	 .loc 6 461 0
 3150 0084 7B68     	 ldr r3,[r7,#4]
 3151 0086 1B68     	 ldr r3,[r3]
 3152 0088 181C     	 add r0,r3,#0
 3153 008a FFF7FEFF 	 bl Ultrasoinc_Obstructet_Test
 3154 008e 031C     	 mov r3,r0
 3155 0090 1A1C     	 mov r2,r3
 3156 0092 B34B     	 ldr r3,.L146+12
 3157 0094 1A70     	 strb r2,[r3]
 462:../main.c     **** 		if(obstructed_L == 0) {
 3158              	 .loc 6 462 0
 3159 0096 B24B     	 ldr r3,.L146+12
 3160 0098 1B78     	 ldrb r3,[r3]
 3161 009a 002B     	 cmp r3,#0
 3162 009c 19D1     	 bne .L133
 463:../main.c     **** 			Ultrsonic_data_invaildcounter[1] = 0;
 3163              	 .loc 6 463 0
 3164 009e AD4B     	 ldr r3,.L146
 3165 00a0 0022     	 mov r2,#0
 3166 00a2 5A70     	 strb r2,[r3,#1]
 464:../main.c     **** 			//Fil_Ultrasonic_m_L = Exp_moving_average(Ultrasonic_cm_L_clc, Fil_Ultrasonic_m_L, ALPHA_ULTARSO
 465:../main.c     **** 			Fil_Ultrasonic_m_L = (float)Ultrasonic_cm_L_clc /100;
 3167              	 .loc 6 465 0
 3168 00a4 0C23     	 mov r3,#12
 3169 00a6 FB18     	 add r3,r7,r3
 3170 00a8 0022     	 mov r2,#0
 3171 00aa 9B5E     	 ldrsh r3,[r3,r2]
 3172 00ac 181C     	 mov r0,r3
 3173 00ae FFF7FEFF 	 bl __aeabi_i2f
 3174 00b2 031C     	 add r3,r0,#0
 3175 00b4 181C     	 add r0,r3,#0
 3176 00b6 A849     	 ldr r1,.L146+4
 3177 00b8 FFF7FEFF 	 bl __aeabi_fdiv
 3178 00bc 031C     	 add r3,r0,#0
 3179 00be 1A1C     	 add r2,r3,#0
 3180 00c0 A84B     	 ldr r3,.L146+16
 3181 00c2 1A60     	 str r2,[r3]
 3182 00c4 05E0     	 b .L133
 3183              	.L131:
 466:../main.c     **** 		}
 467:../main.c     **** 	}
 468:../main.c     **** 	else Ultrsonic_data_invaildcounter[1]++;
 3184              	 .loc 6 468 0
 3185 00c6 A34B     	 ldr r3,.L146
 3186 00c8 5B78     	 ldrb r3,[r3,#1]
 3187 00ca 0133     	 add r3,r3,#1
 3188 00cc DAB2     	 uxtb r2,r3
 3189 00ce A14B     	 ldr r3,.L146
 3190 00d0 5A70     	 strb r2,[r3,#1]
 3191              	.L133:
 469:../main.c     **** 
 470:../main.c     **** 	if(Ultrasonic_cm_R_clc != 0){
 3192              	 .loc 6 470 0
 3193 00d2 0A23     	 mov r3,#10
 3194 00d4 FB18     	 add r3,r7,r3
 3195 00d6 0022     	 mov r2,#0
 3196 00d8 9B5E     	 ldrsh r3,[r3,r2]
 3197 00da 002B     	 cmp r3,#0
 3198 00dc 2DD0     	 beq .L134
 471:../main.c     **** 		obstructed_R = Ultrasoinc_Obstructet_Test( - Steering_Angles_clc[1]); // neagtiv becasue right wh
 3199              	 .loc 6 471 0
 3200 00de 7B68     	 ldr r3,[r7,#4]
 3201 00e0 0433     	 add r3,r3,#4
 3202 00e2 1B68     	 ldr r3,[r3]
 3203 00e4 8022     	 mov r2,#128
 3204 00e6 1206     	 lsl r2,r2,#24
 3205 00e8 5340     	 eor r3,r2
 3206 00ea 181C     	 add r0,r3,#0
 3207 00ec FFF7FEFF 	 bl Ultrasoinc_Obstructet_Test
 3208 00f0 031C     	 mov r3,r0
 3209 00f2 1A1C     	 mov r2,r3
 3210 00f4 9C4B     	 ldr r3,.L146+20
 3211 00f6 1A70     	 strb r2,[r3]
 472:../main.c     **** 		if(obstructed_R == 0){
 3212              	 .loc 6 472 0
 3213 00f8 9B4B     	 ldr r3,.L146+20
 3214 00fa 1B78     	 ldrb r3,[r3]
 3215 00fc 002B     	 cmp r3,#0
 3216 00fe 22D1     	 bne .L136
 473:../main.c     **** 			Fil_Ultrasonic_m_R = Exp_moving_average(Ultrasonic_cm_R_clc, Fil_Ultrasonic_m_R, ALPHA_ULTARSONI
 3217              	 .loc 6 473 0
 3218 0100 0A23     	 mov r3,#10
 3219 0102 FB18     	 add r3,r7,r3
 3220 0104 0022     	 mov r2,#0
 3221 0106 9B5E     	 ldrsh r3,[r3,r2]
 3222 0108 181C     	 mov r0,r3
 3223 010a FFF7FEFF 	 bl __aeabi_i2f
 3224 010e 011C     	 add r1,r0,#0
 3225 0110 964B     	 ldr r3,.L146+24
 3226 0112 1A68     	 ldr r2,[r3]
 3227 0114 3B6B     	 ldr r3,[r7,#48]
 3228 0116 081C     	 add r0,r1,#0
 3229 0118 111C     	 add r1,r2,#0
 3230 011a 1A1C     	 add r2,r3,#0
 3231 011c FFF7FEFF 	 bl Exp_moving_average
 3232 0120 031C     	 add r3,r0,#0
 3233 0122 181C     	 add r0,r3,#0
 3234 0124 8C49     	 ldr r1,.L146+4
 3235 0126 FFF7FEFF 	 bl __aeabi_fdiv
 3236 012a 031C     	 add r3,r0,#0
 3237 012c 1A1C     	 add r2,r3,#0
 3238 012e 8F4B     	 ldr r3,.L146+24
 3239 0130 1A60     	 str r2,[r3]
 474:../main.c     **** 			Ultrsonic_data_invaildcounter[2] = 1;
 3240              	 .loc 6 474 0
 3241 0132 884B     	 ldr r3,.L146
 3242 0134 0122     	 mov r2,#1
 3243 0136 9A70     	 strb r2,[r3,#2]
 3244 0138 05E0     	 b .L136
 3245              	.L134:
 475:../main.c     **** 		}
 476:../main.c     **** 	}
 477:../main.c     **** 	else Ultrsonic_data_invaildcounter[2]++;
 3246              	 .loc 6 477 0
 3247 013a 864B     	 ldr r3,.L146
 3248 013c 9B78     	 ldrb r3,[r3,#2]
 3249 013e 0133     	 add r3,r3,#1
 3250 0140 DAB2     	 uxtb r2,r3
 3251 0142 844B     	 ldr r3,.L146
 3252 0144 9A70     	 strb r2,[r3,#2]
 3253              	.L136:
 478:../main.c     **** 
 479:../main.c     **** 	uint8_t i;
 480:../main.c     **** 	for(i = 0; i < 3; i++){
 3254              	 .loc 6 480 0
 3255 0146 1723     	 mov r3,#23
 3256 0148 FB18     	 add r3,r7,r3
 3257 014a 0022     	 mov r2,#0
 3258 014c 1A70     	 strb r2,[r3]
 3259 014e 13E0     	 b .L137
 3260              	.L139:
 481:../main.c     **** 		if( Ultrsonic_data_invaildcounter[i] > ULRTA_NUM_NO_DATA_INVALID) Ultrsonic_data_invaildcounter[i
 3261              	 .loc 6 481 0
 3262 0150 1723     	 mov r3,#23
 3263 0152 FB18     	 add r3,r7,r3
 3264 0154 1B78     	 ldrb r3,[r3]
 3265 0156 7F4A     	 ldr r2,.L146
 3266 0158 D35C     	 ldrb r3,[r2,r3]
 3267 015a 282B     	 cmp r3,#40
 3268 015c 05D9     	 bls .L138
 3269              	 .loc 6 481 0 is_stmt 0 discriminator 1
 3270 015e 1723     	 mov r3,#23
 3271 0160 FB18     	 add r3,r7,r3
 3272 0162 1B78     	 ldrb r3,[r3]
 3273 0164 7B4A     	 ldr r2,.L146
 3274 0166 2821     	 mov r1,#40
 3275 0168 D154     	 strb r1,[r2,r3]
 3276              	.L138:
 480:../main.c     **** 		if( Ultrsonic_data_invaildcounter[i] > ULRTA_NUM_NO_DATA_INVALID) Ultrsonic_data_invaildcounter[i
 3277              	 .loc 6 480 0 is_stmt 1 discriminator 2
 3278 016a 1723     	 mov r3,#23
 3279 016c FB18     	 add r3,r7,r3
 3280 016e 1A78     	 ldrb r2,[r3]
 3281 0170 1723     	 mov r3,#23
 3282 0172 FB18     	 add r3,r7,r3
 3283 0174 0132     	 add r2,r2,#1
 3284 0176 1A70     	 strb r2,[r3]
 3285              	.L137:
 480:../main.c     **** 		if( Ultrsonic_data_invaildcounter[i] > ULRTA_NUM_NO_DATA_INVALID) Ultrsonic_data_invaildcounter[i
 3286              	 .loc 6 480 0 is_stmt 0 discriminator 1
 3287 0178 1723     	 mov r3,#23
 3288 017a FB18     	 add r3,r7,r3
 3289 017c 1B78     	 ldrb r3,[r3]
 3290 017e 022B     	 cmp r3,#2
 3291 0180 E6D9     	 bls .L139
 482:../main.c     **** 	}
 483:../main.c     **** 
 484:../main.c     **** 	// front obstacel
 485:../main.c     **** 	if(Ultrsonic_data_invaildcounter[0] < ULRTA_NUM_NO_DATA_INVALID ){
 3292              	 .loc 6 485 0 is_stmt 1
 3293 0182 744B     	 ldr r3,.L146
 3294 0184 1B78     	 ldrb r3,[r3]
 3295 0186 272B     	 cmp r3,#39
 3296 0188 07D8     	 bhi .L140
 486:../main.c     **** 		Obstacel_F[0] = Fil_Ultrasonic_m_C;
 3297              	 .loc 6 486 0
 3298 018a 744B     	 ldr r3,.L146+8
 3299 018c 1A68     	 ldr r2,[r3]
 3300 018e 784B     	 ldr r3,.L146+28
 3301 0190 1A60     	 str r2,[r3]
 487:../main.c     **** 		Obstacel_valid[0] = 1;
 3302              	 .loc 6 487 0
 3303 0192 784B     	 ldr r3,.L146+32
 3304 0194 0122     	 mov r2,#1
 3305 0196 1A70     	 strb r2,[r3]
 3306 0198 02E0     	 b .L141
 3307              	.L140:
 488:../main.c     **** 	}
 489:../main.c     **** 	else Obstacel_valid[0] = 0;
 3308              	 .loc 6 489 0
 3309 019a 764B     	 ldr r3,.L146+32
 3310 019c 0022     	 mov r2,#0
 3311 019e 1A70     	 strb r2,[r3]
 3312              	.L141:
 490:../main.c     **** 
 491:../main.c     **** 	if(Ultrsonic_data_invaildcounter[1] < ULRTA_NUM_NO_DATA_INVALID ){
 3313              	 .loc 6 491 0
 3314 01a0 6C4B     	 ldr r3,.L146
 3315 01a2 5B78     	 ldrb r3,[r3,#1]
 3316 01a4 272B     	 cmp r3,#39
 3317 01a6 59D8     	 bhi .L142
 492:../main.c     **** 		Obstacel_L[0] = Fil_Ultrasonic_m_L * cos(Steering_Angles[0] / RAD_TO_DEG);
 3318              	 .loc 6 492 0
 3319 01a8 6E4B     	 ldr r3,.L146+16
 3320 01aa 1B68     	 ldr r3,[r3]
 3321 01ac 181C     	 add r0,r3,#0
 3322 01ae FFF7FEFF 	 bl __aeabi_f2d
 3323 01b2 051C     	 mov r5,r0
 3324 01b4 0E1C     	 mov r6,r1
 3325 01b6 704B     	 ldr r3,.L146+36
 3326 01b8 1B68     	 ldr r3,[r3]
 3327 01ba 181C     	 add r0,r3,#0
 3328 01bc FFF7FEFF 	 bl __aeabi_f2d
 3329 01c0 031C     	 mov r3,r0
 3330 01c2 0C1C     	 mov r4,r1
 3331 01c4 181C     	 mov r0,r3
 3332 01c6 211C     	 mov r1,r4
 3333 01c8 6C4A     	 ldr r2,.L146+40
 3334 01ca 6D4B     	 ldr r3,.L146+44
 3335 01cc FFF7FEFF 	 bl __aeabi_ddiv
 3336 01d0 031C     	 mov r3,r0
 3337 01d2 0C1C     	 mov r4,r1
 3338 01d4 181C     	 mov r0,r3
 3339 01d6 211C     	 mov r1,r4
 3340 01d8 FFF7FEFF 	 bl cos
 3341 01dc 031C     	 mov r3,r0
 3342 01de 0C1C     	 mov r4,r1
 3343 01e0 281C     	 mov r0,r5
 3344 01e2 311C     	 mov r1,r6
 3345 01e4 1A1C     	 mov r2,r3
 3346 01e6 231C     	 mov r3,r4
 3347 01e8 FFF7FEFF 	 bl __aeabi_dmul
 3348 01ec 031C     	 mov r3,r0
 3349 01ee 0C1C     	 mov r4,r1
 3350 01f0 181C     	 mov r0,r3
 3351 01f2 211C     	 mov r1,r4
 3352 01f4 FFF7FEFF 	 bl __aeabi_d2f
 3353 01f8 021C     	 add r2,r0,#0
 3354 01fa 624B     	 ldr r3,.L146+48
 3355 01fc 1A60     	 str r2,[r3]
 493:../main.c     **** 		Obstacel_L[1] = Fil_Ultrasonic_m_L * sin(Steering_Angles[0] / RAD_TO_DEG);
 3356              	 .loc 6 493 0
 3357 01fe 594B     	 ldr r3,.L146+16
 3358 0200 1B68     	 ldr r3,[r3]
 3359 0202 181C     	 add r0,r3,#0
 3360 0204 FFF7FEFF 	 bl __aeabi_f2d
 3361 0208 051C     	 mov r5,r0
 3362 020a 0E1C     	 mov r6,r1
 3363 020c 5A4B     	 ldr r3,.L146+36
 3364 020e 1B68     	 ldr r3,[r3]
 3365 0210 181C     	 add r0,r3,#0
 3366 0212 FFF7FEFF 	 bl __aeabi_f2d
 3367 0216 031C     	 mov r3,r0
 3368 0218 0C1C     	 mov r4,r1
 3369 021a 181C     	 mov r0,r3
 3370 021c 211C     	 mov r1,r4
 3371 021e 574A     	 ldr r2,.L146+40
 3372 0220 574B     	 ldr r3,.L146+44
 3373 0222 FFF7FEFF 	 bl __aeabi_ddiv
 3374 0226 031C     	 mov r3,r0
 3375 0228 0C1C     	 mov r4,r1
 3376 022a 181C     	 mov r0,r3
 3377 022c 211C     	 mov r1,r4
 3378 022e FFF7FEFF 	 bl sin
 3379 0232 031C     	 mov r3,r0
 3380 0234 0C1C     	 mov r4,r1
 3381 0236 281C     	 mov r0,r5
 3382 0238 311C     	 mov r1,r6
 3383 023a 1A1C     	 mov r2,r3
 3384 023c 231C     	 mov r3,r4
 3385 023e FFF7FEFF 	 bl __aeabi_dmul
 3386 0242 031C     	 mov r3,r0
 3387 0244 0C1C     	 mov r4,r1
 3388 0246 181C     	 mov r0,r3
 3389 0248 211C     	 mov r1,r4
 3390 024a FFF7FEFF 	 bl __aeabi_d2f
 3391 024e 021C     	 add r2,r0,#0
 3392 0250 4C4B     	 ldr r3,.L146+48
 3393 0252 5A60     	 str r2,[r3,#4]
 494:../main.c     **** 		Obstacel_valid[1] = 1;
 3394              	 .loc 6 494 0
 3395 0254 474B     	 ldr r3,.L146+32
 3396 0256 0122     	 mov r2,#1
 3397 0258 5A70     	 strb r2,[r3,#1]
 3398 025a 02E0     	 b .L143
 3399              	.L142:
 495:../main.c     **** 	}
 496:../main.c     **** 	else Obstacel_valid[1] = 0;
 3400              	 .loc 6 496 0
 3401 025c 454B     	 ldr r3,.L146+32
 3402 025e 0022     	 mov r2,#0
 3403 0260 5A70     	 strb r2,[r3,#1]
 3404              	.L143:
 497:../main.c     **** 
 498:../main.c     **** 	if(Ultrsonic_data_invaildcounter[2]  < ULRTA_NUM_NO_DATA_INVALID ){
 3405              	 .loc 6 498 0
 3406 0262 3C4B     	 ldr r3,.L146
 3407 0264 9B78     	 ldrb r3,[r3,#2]
 3408 0266 272B     	 cmp r3,#39
 3409 0268 59D8     	 bhi .L144
 499:../main.c     **** 		Obstacel_R[0] = Fil_Ultrasonic_m_R * cos(Steering_Angles[1] / RAD_TO_DEG);
 3410              	 .loc 6 499 0
 3411 026a 404B     	 ldr r3,.L146+24
 3412 026c 1B68     	 ldr r3,[r3]
 3413 026e 181C     	 add r0,r3,#0
 3414 0270 FFF7FEFF 	 bl __aeabi_f2d
 3415 0274 051C     	 mov r5,r0
 3416 0276 0E1C     	 mov r6,r1
 3417 0278 3F4B     	 ldr r3,.L146+36
 3418 027a 5B68     	 ldr r3,[r3,#4]
 3419 027c 181C     	 add r0,r3,#0
 3420 027e FFF7FEFF 	 bl __aeabi_f2d
 3421 0282 031C     	 mov r3,r0
 3422 0284 0C1C     	 mov r4,r1
 3423 0286 181C     	 mov r0,r3
 3424 0288 211C     	 mov r1,r4
 3425 028a 3C4A     	 ldr r2,.L146+40
 3426 028c 3C4B     	 ldr r3,.L146+44
 3427 028e FFF7FEFF 	 bl __aeabi_ddiv
 3428 0292 031C     	 mov r3,r0
 3429 0294 0C1C     	 mov r4,r1
 3430 0296 181C     	 mov r0,r3
 3431 0298 211C     	 mov r1,r4
 3432 029a FFF7FEFF 	 bl cos
 3433 029e 031C     	 mov r3,r0
 3434 02a0 0C1C     	 mov r4,r1
 3435 02a2 281C     	 mov r0,r5
 3436 02a4 311C     	 mov r1,r6
 3437 02a6 1A1C     	 mov r2,r3
 3438 02a8 231C     	 mov r3,r4
 3439 02aa FFF7FEFF 	 bl __aeabi_dmul
 3440 02ae 031C     	 mov r3,r0
 3441 02b0 0C1C     	 mov r4,r1
 3442 02b2 181C     	 mov r0,r3
 3443 02b4 211C     	 mov r1,r4
 3444 02b6 FFF7FEFF 	 bl __aeabi_d2f
 3445 02ba 021C     	 add r2,r0,#0
 3446 02bc 324B     	 ldr r3,.L146+52
 3447 02be 1A60     	 str r2,[r3]
 500:../main.c     **** 		Obstacel_R[1] = Fil_Ultrasonic_m_R * sin(Steering_Angles[1] / RAD_TO_DEG);
 3448              	 .loc 6 500 0
 3449 02c0 2A4B     	 ldr r3,.L146+24
 3450 02c2 1B68     	 ldr r3,[r3]
 3451 02c4 181C     	 add r0,r3,#0
 3452 02c6 FFF7FEFF 	 bl __aeabi_f2d
 3453 02ca 051C     	 mov r5,r0
 3454 02cc 0E1C     	 mov r6,r1
 3455 02ce 2A4B     	 ldr r3,.L146+36
 3456 02d0 5B68     	 ldr r3,[r3,#4]
 3457 02d2 181C     	 add r0,r3,#0
 3458 02d4 FFF7FEFF 	 bl __aeabi_f2d
 3459 02d8 031C     	 mov r3,r0
 3460 02da 0C1C     	 mov r4,r1
 3461 02dc 181C     	 mov r0,r3
 3462 02de 211C     	 mov r1,r4
 3463 02e0 264A     	 ldr r2,.L146+40
 3464 02e2 274B     	 ldr r3,.L146+44
 3465 02e4 FFF7FEFF 	 bl __aeabi_ddiv
 3466 02e8 031C     	 mov r3,r0
 3467 02ea 0C1C     	 mov r4,r1
 3468 02ec 181C     	 mov r0,r3
 3469 02ee 211C     	 mov r1,r4
 3470 02f0 FFF7FEFF 	 bl sin
 3471 02f4 031C     	 mov r3,r0
 3472 02f6 0C1C     	 mov r4,r1
 3473 02f8 281C     	 mov r0,r5
 3474 02fa 311C     	 mov r1,r6
 3475 02fc 1A1C     	 mov r2,r3
 3476 02fe 231C     	 mov r3,r4
 3477 0300 FFF7FEFF 	 bl __aeabi_dmul
 3478 0304 031C     	 mov r3,r0
 3479 0306 0C1C     	 mov r4,r1
 3480 0308 181C     	 mov r0,r3
 3481 030a 211C     	 mov r1,r4
 3482 030c FFF7FEFF 	 bl __aeabi_d2f
 3483 0310 021C     	 add r2,r0,#0
 3484 0312 1D4B     	 ldr r3,.L146+52
 3485 0314 5A60     	 str r2,[r3,#4]
 501:../main.c     **** 		Obstacel_valid[2] = 1;
 3486              	 .loc 6 501 0
 3487 0316 174B     	 ldr r3,.L146+32
 3488 0318 0122     	 mov r2,#1
 3489 031a 9A70     	 strb r2,[r3,#2]
 3490 031c 02E0     	 b .L145
 3491              	.L144:
 502:../main.c     **** 	}
 503:../main.c     **** 	else Obstacel_valid[2] = 0;
 3492              	 .loc 6 503 0
 3493 031e 154B     	 ldr r3,.L146+32
 3494 0320 0022     	 mov r2,#0
 3495 0322 9A70     	 strb r2,[r3,#2]
 3496              	.L145:
 504:../main.c     **** 
 505:../main.c     **** 	obstacel_F_x = Obstacel_F[0];
 3497              	 .loc 6 505 0
 3498 0324 124B     	 ldr r3,.L146+28
 3499 0326 1A68     	 ldr r2,[r3]
 3500 0328 184B     	 ldr r3,.L146+56
 3501 032a 1A60     	 str r2,[r3]
 506:../main.c     **** 	obstacel_L_x = Obstacel_L[0];
 3502              	 .loc 6 506 0
 3503 032c 154B     	 ldr r3,.L146+48
 3504 032e 1A68     	 ldr r2,[r3]
 3505 0330 174B     	 ldr r3,.L146+60
 3506 0332 1A60     	 str r2,[r3]
 507:../main.c     **** 	obstacel_L_y = Obstacel_L[1];
 3507              	 .loc 6 507 0
 3508 0334 134B     	 ldr r3,.L146+48
 3509 0336 5A68     	 ldr r2,[r3,#4]
 3510 0338 164B     	 ldr r3,.L146+64
 3511 033a 1A60     	 str r2,[r3]
 508:../main.c     **** 	obstacel_R_x = Obstacel_R[0];
 3512              	 .loc 6 508 0
 3513 033c 124B     	 ldr r3,.L146+52
 3514 033e 1A68     	 ldr r2,[r3]
 3515 0340 154B     	 ldr r3,.L146+68
 3516 0342 1A60     	 str r2,[r3]
 509:../main.c     **** 	obstacel_R_y = Obstacel_R[1];
 3517              	 .loc 6 509 0
 3518 0344 104B     	 ldr r3,.L146+52
 3519 0346 5A68     	 ldr r2,[r3,#4]
 3520 0348 144B     	 ldr r3,.L146+72
 3521 034a 1A60     	 str r2,[r3]
 510:../main.c     **** 
 511:../main.c     **** 
 512:../main.c     **** }
 3522              	 .loc 6 512 0
 3523 034c BD46     	 mov sp,r7
 3524 034e 07B0     	 add sp,sp,#28
 3525              	 
 3526 0350 F0BD     	 pop {r4,r5,r6,r7,pc}
 3527              	.L147:
 3528 0352 C046     	 .align 2
 3529              	.L146:
 3530 0354 00000000 	 .word Ultrsonic_data_invaildcounter
 3531 0358 0000C842 	 .word 1120403456
 3532 035c 00000000 	 .word Fil_Ultrasonic_m_C
 3533 0360 00000000 	 .word obstructed_L
 3534 0364 00000000 	 .word Fil_Ultrasonic_m_L
 3535 0368 00000000 	 .word obstructed_R
 3536 036c 00000000 	 .word Fil_Ultrasonic_m_R
 3537 0370 00000000 	 .word Obstacel_F
 3538 0374 00000000 	 .word Obstacel_valid
 3539 0378 00000000 	 .word Steering_Angles
 3540 037c D9CEF753 	 .word 1408749273
 3541 0380 E3A54C40 	 .word 1078765027
 3542 0384 00000000 	 .word Obstacel_L
 3543 0388 00000000 	 .word Obstacel_R
 3544 038c 00000000 	 .word obstacel_F_x
 3545 0390 00000000 	 .word obstacel_L_x
 3546 0394 00000000 	 .word obstacel_L_y
 3547 0398 00000000 	 .word obstacel_R_x
 3548 039c 00000000 	 .word obstacel_R_y
 3549              	 .cfi_endproc
 3550              	.LFE227:
 3552              	 .global __aeabi_fsub
 3553              	 .global __aeabi_fcmple
 3554              	 .section .text.Ultrasoinc_Obstructet_Test,"ax",%progbits
 3555              	 .align 2
 3556              	 .global Ultrasoinc_Obstructet_Test
 3557              	 .code 16
 3558              	 .thumb_func
 3560              	Ultrasoinc_Obstructet_Test:
 3561              	.LFB228:
 513:../main.c     **** 
 514:../main.c     **** uint8_t Ultrasoinc_Obstructet_Test(float Angle){
 3562              	 .loc 6 514 0
 3563              	 .cfi_startproc
 3564 0000 90B5     	 push {r4,r7,lr}
 3565              	.LCFI42:
 3566              	 .cfi_def_cfa_offset 12
 3567              	 .cfi_offset 4,-12
 3568              	 .cfi_offset 7,-8
 3569              	 .cfi_offset 14,-4
 3570 0002 85B0     	 sub sp,sp,#20
 3571              	.LCFI43:
 3572              	 .cfi_def_cfa_offset 32
 3573 0004 00AF     	 add r7,sp,#0
 3574              	.LCFI44:
 3575              	 .cfi_def_cfa_register 7
 3576 0006 7860     	 str r0,[r7,#4]
 515:../main.c     **** 	uint8_t i;
 516:../main.c     **** 	for(i = 0; i < 3; i++){ // if rotate around multipel times
 3577              	 .loc 6 516 0
 3578 0008 0F23     	 mov r3,#15
 3579 000a FB18     	 add r3,r7,r3
 3580 000c 0022     	 mov r2,#0
 3581 000e 1A70     	 strb r2,[r3]
 3582 0010 6DE0     	 b .L149
 3583              	.L157:
 517:../main.c     **** 		if(Angle > 0){
 3584              	 .loc 6 517 0
 3585 0012 7868     	 ldr r0,[r7,#4]
 3586 0014 0021     	 mov r1,#0
 3587 0016 FFF7FEFF 	 bl __aeabi_fcmpgt
 3588 001a 031E     	 sub r3,r0,#0
 3589 001c 2DD0     	 beq .L150
 518:../main.c     **** 			if((Angle - (POS_OBSTRUCTED_ANGLE_MIN + (i * 360))) * (Angle - (POS_OBSTRUCTED_ANGLE_MAX + (i * 
 3590              	 .loc 6 518 0
 3591 001e 0F23     	 mov r3,#15
 3592 0020 FB18     	 add r3,r7,r3
 3593 0022 1B78     	 ldrb r3,[r3]
 3594 0024 B422     	 mov r2,#180
 3595 0026 5200     	 lsl r2,r2,#1
 3596 0028 5343     	 mul r3,r2
 3597 002a 3233     	 add r3,r3,#50
 3598 002c 181C     	 mov r0,r3
 3599 002e FFF7FEFF 	 bl __aeabi_i2f
 3600 0032 031C     	 add r3,r0,#0
 3601 0034 7868     	 ldr r0,[r7,#4]
 3602 0036 191C     	 add r1,r3,#0
 3603 0038 FFF7FEFF 	 bl __aeabi_fsub
 3604 003c 031C     	 add r3,r0,#0
 3605 003e 1C1C     	 add r4,r3,#0
 3606 0040 0F23     	 mov r3,#15
 3607 0042 FB18     	 add r3,r7,r3
 3608 0044 1B78     	 ldrb r3,[r3]
 3609 0046 B422     	 mov r2,#180
 3610 0048 5200     	 lsl r2,r2,#1
 3611 004a 5343     	 mul r3,r2
 3612 004c D233     	 add r3,r3,#210
 3613 004e 181C     	 mov r0,r3
 3614 0050 FFF7FEFF 	 bl __aeabi_i2f
 3615 0054 031C     	 add r3,r0,#0
 3616 0056 7868     	 ldr r0,[r7,#4]
 3617 0058 191C     	 add r1,r3,#0
 3618 005a FFF7FEFF 	 bl __aeabi_fsub
 3619 005e 031C     	 add r3,r0,#0
 3620 0060 201C     	 add r0,r4,#0
 3621 0062 191C     	 add r1,r3,#0
 3622 0064 FFF7FEFF 	 bl __aeabi_fmul
 3623 0068 031C     	 add r3,r0,#0
 3624 006a 181C     	 add r0,r3,#0
 3625 006c 0021     	 mov r1,#0
 3626 006e FFF7FEFF 	 bl __aeabi_fcmple
 3627 0072 031E     	 sub r3,r0,#0
 3628 0074 01D0     	 beq .L150
 519:../main.c     **** 				return 1;
 3629              	 .loc 6 519 0
 3630 0076 0123     	 mov r3,#1
 3631 0078 3FE0     	 b .L153
 3632              	.L150:
 520:../main.c     **** 			}
 521:../main.c     **** 		}
 522:../main.c     **** 
 523:../main.c     **** 		if(Angle < 0){
 3633              	 .loc 6 523 0
 3634 007a 7868     	 ldr r0,[r7,#4]
 3635 007c 0021     	 mov r1,#0
 3636 007e FFF7FEFF 	 bl __aeabi_fcmplt
 3637 0082 031E     	 sub r3,r0,#0
 3638 0084 2CD0     	 beq .L154
 524:../main.c     **** 			if((Angle - (NEG_OBSTRUCTED_ANGLE_MIN - (i * 360))) * (Angle - (NEG_OBSTRUCTED_ANGLE_MAX - (i * 
 3639              	 .loc 6 524 0
 3640 0086 0F23     	 mov r3,#15
 3641 0088 FB18     	 add r3,r7,r3
 3642 008a 1B78     	 ldrb r3,[r3]
 3643 008c 1D4A     	 ldr r2,.L162
 3644 008e 5343     	 mul r3,r2
 3645 0090 963B     	 sub r3,r3,#150
 3646 0092 181C     	 mov r0,r3
 3647 0094 FFF7FEFF 	 bl __aeabi_i2f
 3648 0098 031C     	 add r3,r0,#0
 3649 009a 7868     	 ldr r0,[r7,#4]
 3650 009c 191C     	 add r1,r3,#0
 3651 009e FFF7FEFF 	 bl __aeabi_fsub
 3652 00a2 031C     	 add r3,r0,#0
 3653 00a4 1C1C     	 add r4,r3,#0
 3654 00a6 0F23     	 mov r3,#15
 3655 00a8 FB18     	 add r3,r7,r3
 3656 00aa 1B78     	 ldrb r3,[r3]
 3657 00ac 154A     	 ldr r2,.L162
 3658 00ae 5343     	 mul r3,r2
 3659 00b0 373B     	 sub r3,r3,#55
 3660 00b2 FF3B     	 sub r3,r3,#255
 3661 00b4 181C     	 mov r0,r3
 3662 00b6 FFF7FEFF 	 bl __aeabi_i2f
 3663 00ba 031C     	 add r3,r0,#0
 3664 00bc 7868     	 ldr r0,[r7,#4]
 3665 00be 191C     	 add r1,r3,#0
 3666 00c0 FFF7FEFF 	 bl __aeabi_fsub
 3667 00c4 031C     	 add r3,r0,#0
 3668 00c6 201C     	 add r0,r4,#0
 3669 00c8 191C     	 add r1,r3,#0
 3670 00ca FFF7FEFF 	 bl __aeabi_fmul
 3671 00ce 031C     	 add r3,r0,#0
 3672 00d0 181C     	 add r0,r3,#0
 3673 00d2 0021     	 mov r1,#0
 3674 00d4 FFF7FEFF 	 bl __aeabi_fcmple
 3675 00d8 031E     	 sub r3,r0,#0
 3676 00da 01D0     	 beq .L154
 525:../main.c     **** 						return 1;
 3677              	 .loc 6 525 0
 3678 00dc 0123     	 mov r3,#1
 3679 00de 0CE0     	 b .L153
 3680              	.L154:
 516:../main.c     **** 		if(Angle > 0){
 3681              	 .loc 6 516 0 discriminator 2
 3682 00e0 0F23     	 mov r3,#15
 3683 00e2 FB18     	 add r3,r7,r3
 3684 00e4 1A78     	 ldrb r2,[r3]
 3685 00e6 0F23     	 mov r3,#15
 3686 00e8 FB18     	 add r3,r7,r3
 3687 00ea 0132     	 add r2,r2,#1
 3688 00ec 1A70     	 strb r2,[r3]
 3689              	.L149:
 516:../main.c     **** 		if(Angle > 0){
 3690              	 .loc 6 516 0 is_stmt 0 discriminator 1
 3691 00ee 0F23     	 mov r3,#15
 3692 00f0 FB18     	 add r3,r7,r3
 3693 00f2 1B78     	 ldrb r3,[r3]
 3694 00f4 022B     	 cmp r3,#2
 3695 00f6 8CD9     	 bls .L157
 526:../main.c     **** 			}
 527:../main.c     **** 		}
 528:../main.c     **** 	}
 529:../main.c     **** 
 530:../main.c     **** 	return 0;
 3696              	 .loc 6 530 0 is_stmt 1
 3697 00f8 0023     	 mov r3,#0
 3698              	.L153:
 531:../main.c     **** }
 3699              	 .loc 6 531 0
 3700 00fa 181C     	 mov r0,r3
 3701 00fc BD46     	 mov sp,r7
 3702 00fe 05B0     	 add sp,sp,#20
 3703              	 
 3704 0100 90BD     	 pop {r4,r7,pc}
 3705              	.L163:
 3706 0102 C046     	 .align 2
 3707              	.L162:
 3708 0104 98FEFFFF 	 .word -360
 3709              	 .cfi_endproc
 3710              	.LFE228:
 3712              	 .global __aeabi_fadd
 3713              	 .section .text.Exp_moving_average,"ax",%progbits
 3714              	 .align 2
 3715              	 .global Exp_moving_average
 3716              	 .code 16
 3717              	 .thumb_func
 3719              	Exp_moving_average:
 3720              	.LFB229:
 532:../main.c     **** 
 533:../main.c     **** float Exp_moving_average(float new_value, float value, float ALPHA){
 3721              	 .loc 6 533 0
 3722              	 .cfi_startproc
 3723 0000 90B5     	 push {r4,r7,lr}
 3724              	.LCFI45:
 3725              	 .cfi_def_cfa_offset 12
 3726              	 .cfi_offset 4,-12
 3727              	 .cfi_offset 7,-8
 3728              	 .cfi_offset 14,-4
 3729 0002 85B0     	 sub sp,sp,#20
 3730              	.LCFI46:
 3731              	 .cfi_def_cfa_offset 32
 3732 0004 00AF     	 add r7,sp,#0
 3733              	.LCFI47:
 3734              	 .cfi_def_cfa_register 7
 3735 0006 F860     	 str r0,[r7,#12]
 3736 0008 B960     	 str r1,[r7,#8]
 3737 000a 7A60     	 str r2,[r7,#4]
 534:../main.c     **** 	return ((new_value * ALPHA) + ((1 - ALPHA) * value));
 3738              	 .loc 6 534 0
 3739 000c F868     	 ldr r0,[r7,#12]
 3740 000e 7968     	 ldr r1,[r7,#4]
 3741 0010 FFF7FEFF 	 bl __aeabi_fmul
 3742 0014 031C     	 add r3,r0,#0
 3743 0016 1C1C     	 add r4,r3,#0
 3744 0018 FE20     	 mov r0,#254
 3745 001a 8005     	 lsl r0,r0,#22
 3746 001c 7968     	 ldr r1,[r7,#4]
 3747 001e FFF7FEFF 	 bl __aeabi_fsub
 3748 0022 031C     	 add r3,r0,#0
 3749 0024 181C     	 add r0,r3,#0
 3750 0026 B968     	 ldr r1,[r7,#8]
 3751 0028 FFF7FEFF 	 bl __aeabi_fmul
 3752 002c 031C     	 add r3,r0,#0
 3753 002e 201C     	 add r0,r4,#0
 3754 0030 191C     	 add r1,r3,#0
 3755 0032 FFF7FEFF 	 bl __aeabi_fadd
 3756 0036 031C     	 add r3,r0,#0
 535:../main.c     **** }
 3757              	 .loc 6 535 0
 3758 0038 181C     	 add r0,r3,#0
 3759 003a BD46     	 mov sp,r7
 3760 003c 05B0     	 add sp,sp,#20
 3761              	 
 3762 003e 90BD     	 pop {r4,r7,pc}
 3763              	 .cfi_endproc
 3764              	.LFE229:
 3766              	 .section .text.IRQ3_Handler,"ax",%progbits
 3767              	 .align 2
 3768              	 .global IRQ3_Handler
 3769              	 .code 16
 3770              	 .thumb_func
 3772              	IRQ3_Handler:
 3773              	.LFB230:
 536:../main.c     **** 
 537:../main.c     **** void CAN_RX_INVERTER_ISR(void) {
 3774              	 .loc 6 537 0
 3775              	 .cfi_startproc
 3776 0000 80B5     	 push {r7,lr}
 3777              	.LCFI48:
 3778              	 .cfi_def_cfa_offset 8
 3779              	 .cfi_offset 7,-8
 3780              	 .cfi_offset 14,-4
 3781 0002 00AF     	 add r7,sp,#0
 3782              	.LCFI49:
 3783              	 .cfi_def_cfa_register 7
 538:../main.c     **** 	WATCHDOG_Service();
 3784              	 .loc 6 538 0
 3785 0004 FFF7FEFF 	 bl WATCHDOG_Service
 539:../main.c     **** 	DIGITAL_IO_SetOutputLow(&WATCHDOG_LED_BLUE);
 3786              	 .loc 6 539 0
 3787 0008 094B     	 ldr r3,.L168
 3788 000a 181C     	 mov r0,r3
 3789 000c FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 540:../main.c     **** 
 541:../main.c     **** 	CAN_RX_Inverter_count++;
 3790              	 .loc 6 541 0
 3791 0010 084B     	 ldr r3,.L168+4
 3792 0012 1B78     	 ldrb r3,[r3]
 3793 0014 DBB2     	 uxtb r3,r3
 3794 0016 0133     	 add r3,r3,#1
 3795 0018 DAB2     	 uxtb r2,r3
 3796 001a 064B     	 ldr r3,.L168+4
 3797 001c 1A70     	 strb r2,[r3]
 542:../main.c     **** 	if(CAN_RX_Inverter_count == 4) CAN_RX_Inverter_Read_Data(); // read data after all for have revice
 3798              	 .loc 6 542 0
 3799 001e 054B     	 ldr r3,.L168+4
 3800 0020 1B78     	 ldrb r3,[r3]
 3801 0022 DBB2     	 uxtb r3,r3
 3802 0024 042B     	 cmp r3,#4
 3803 0026 01D1     	 bne .L166
 3804              	 .loc 6 542 0 is_stmt 0 discriminator 1
 3805 0028 FFF7FEFF 	 bl CAN_RX_Inverter_Read_Data
 3806              	.L166:
 543:../main.c     **** }
 3807              	 .loc 6 543 0 is_stmt 1
 3808 002c BD46     	 mov sp,r7
 3809              	 
 3810 002e 80BD     	 pop {r7,pc}
 3811              	.L169:
 3812              	 .align 2
 3813              	.L168:
 3814 0030 00000000 	 .word WATCHDOG_LED_BLUE
 3815 0034 00000000 	 .word CAN_RX_Inverter_count
 3816              	 .cfi_endproc
 3817              	.LFE230:
 3819              	 .section .text.CAN_RX_Inverter_Read_Data,"ax",%progbits
 3820              	 .align 2
 3821              	 .global CAN_RX_Inverter_Read_Data
 3822              	 .code 16
 3823              	 .thumb_func
 3825              	CAN_RX_Inverter_Read_Data:
 3826              	.LFB231:
 544:../main.c     **** 
 545:../main.c     **** void CAN_RX_Inverter_Read_Data(){
 3827              	 .loc 6 545 0
 3828              	 .cfi_startproc
 3829 0000 90B5     	 push {r4,r7,lr}
 3830              	.LCFI50:
 3831              	 .cfi_def_cfa_offset 12
 3832              	 .cfi_offset 4,-12
 3833              	 .cfi_offset 7,-8
 3834              	 .cfi_offset 14,-4
 3835 0002 89B0     	 sub sp,sp,#36
 3836              	.LCFI51:
 3837              	 .cfi_def_cfa_offset 48
 3838 0004 00AF     	 add r7,sp,#0
 3839              	.LCFI52:
 3840              	 .cfi_def_cfa_register 7
 546:../main.c     **** 	uint8_t Motor_on_rover;
 547:../main.c     **** 	for(Motor_on_rover = 0; Motor_on_rover < 4; Motor_on_rover ++){
 3841              	 .loc 6 547 0
 3842 0006 1F23     	 mov r3,#31
 3843 0008 FB18     	 add r3,r7,r3
 3844 000a 0022     	 mov r2,#0
 3845 000c 1A70     	 strb r2,[r3]
 3846 000e 03E1     	 b .L171
 3847              	.L181:
 3848              	.LBB2:
 548:../main.c     **** 		XMC_CAN_MO_t* lmsgobjct_ptr_1 = CAN_NODE_0.lmobj_ptr[Motor_on_rover + 2]->mo_ptr;
 3849              	 .loc 6 548 0
 3850 0010 1F23     	 mov r3,#31
 3851 0012 FB18     	 add r3,r7,r3
 3852 0014 1B78     	 ldrb r3,[r3]
 3853 0016 0233     	 add r3,r3,#2
 3854 0018 944A     	 ldr r2,.L182
 3855 001a 0233     	 add r3,r3,#2
 3856 001c 9B00     	 lsl r3,r3,#2
 3857 001e D318     	 add r3,r2,r3
 3858 0020 5B68     	 ldr r3,[r3,#4]
 3859 0022 1B68     	 ldr r3,[r3]
 3860 0024 BB61     	 str r3,[r7,#24]
 549:../main.c     **** 		CAN_NODE_MO_Receive((void*) CAN_NODE_0.lmobj_ptr[Motor_on_rover + 2]);
 3861              	 .loc 6 549 0
 3862 0026 1F23     	 mov r3,#31
 3863 0028 FB18     	 add r3,r7,r3
 3864 002a 1B78     	 ldrb r3,[r3]
 3865 002c 0233     	 add r3,r3,#2
 3866 002e 8F4A     	 ldr r2,.L182
 3867 0030 0233     	 add r3,r3,#2
 3868 0032 9B00     	 lsl r3,r3,#2
 3869 0034 D318     	 add r3,r2,r3
 3870 0036 5B68     	 ldr r3,[r3,#4]
 3871 0038 181C     	 mov r0,r3
 3872 003a FFF7FEFF 	 bl CAN_NODE_MO_Receive
 550:../main.c     **** 
 551:../main.c     **** 		uint8_t data_RX[8];
 552:../main.c     **** 		uint8_t i;
 553:../main.c     **** 		for(i = 0 ; i < 8 ; i ++){
 3873              	 .loc 6 553 0
 3874 003e 1E23     	 mov r3,#30
 3875 0040 FB18     	 add r3,r7,r3
 3876 0042 0022     	 mov r2,#0
 3877 0044 1A70     	 strb r2,[r3]
 3878 0046 12E0     	 b .L172
 3879              	.L173:
 554:../main.c     **** 			 data_RX[i] = lmsgobjct_ptr_1->can_data_byte[i];
 3880              	 .loc 6 554 0 discriminator 3
 3881 0048 1E23     	 mov r3,#30
 3882 004a FB18     	 add r3,r7,r3
 3883 004c 1B78     	 ldrb r3,[r3]
 3884 004e 1E22     	 mov r2,#30
 3885 0050 BA18     	 add r2,r7,r2
 3886 0052 1278     	 ldrb r2,[r2]
 3887 0054 B969     	 ldr r1,[r7,#24]
 3888 0056 8A18     	 add r2,r1,r2
 3889 0058 117C     	 ldrb r1,[r2,#16]
 3890 005a 0C22     	 mov r2,#12
 3891 005c BA18     	 add r2,r7,r2
 3892 005e D154     	 strb r1,[r2,r3]
 553:../main.c     **** 			 data_RX[i] = lmsgobjct_ptr_1->can_data_byte[i];
 3893              	 .loc 6 553 0 discriminator 3
 3894 0060 1E23     	 mov r3,#30
 3895 0062 FB18     	 add r3,r7,r3
 3896 0064 1A78     	 ldrb r2,[r3]
 3897 0066 1E23     	 mov r3,#30
 3898 0068 FB18     	 add r3,r7,r3
 3899 006a 0132     	 add r2,r2,#1
 3900 006c 1A70     	 strb r2,[r3]
 3901              	.L172:
 553:../main.c     **** 			 data_RX[i] = lmsgobjct_ptr_1->can_data_byte[i];
 3902              	 .loc 6 553 0 is_stmt 0 discriminator 1
 3903 006e 1E23     	 mov r3,#30
 3904 0070 FB18     	 add r3,r7,r3
 3905 0072 1B78     	 ldrb r3,[r3]
 3906 0074 072B     	 cmp r3,#7
 3907 0076 E7D9     	 bls .L173
 555:../main.c     **** 		}
 556:../main.c     **** 
 557:../main.c     **** 		uint8_t Motor_on_rover_RX = (data_RX[0 * 2 + 1] << 8) | data_RX[0 * 2];
 3908              	 .loc 6 557 0 is_stmt 1
 3909 0078 0C23     	 mov r3,#12
 3910 007a FB18     	 add r3,r7,r3
 3911 007c 5B78     	 ldrb r3,[r3,#1]
 3912 007e 1B02     	 lsl r3,r3,#8
 3913 0080 DAB2     	 uxtb r2,r3
 3914 0082 0C23     	 mov r3,#12
 3915 0084 FB18     	 add r3,r7,r3
 3916 0086 1B78     	 ldrb r3,[r3]
 3917 0088 DBB2     	 uxtb r3,r3
 3918 008a 1343     	 orr r3,r2
 3919 008c DAB2     	 uxtb r2,r3
 3920 008e 1723     	 mov r3,#23
 3921 0090 FB18     	 add r3,r7,r3
 3922 0092 1A70     	 strb r2,[r3]
 558:../main.c     **** 		if(Motor_on_rover_RX == Motor_on_rover){
 3923              	 .loc 6 558 0
 3924 0094 1723     	 mov r3,#23
 3925 0096 FA18     	 add r2,r7,r3
 3926 0098 1F23     	 mov r3,#31
 3927 009a FB18     	 add r3,r7,r3
 3928 009c 1278     	 ldrb r2,[r2]
 3929 009e 1B78     	 ldrb r3,[r3]
 3930 00a0 9A42     	 cmp r2,r3
 3931 00a2 00D0     	 beq .LCB3107
 3932 00a4 ADE0     	 b .L174
 3933              	.LCB3107:
 3934              	.LBB3:
 559:../main.c     **** 			DIGITAL_IO_SetOutputLow(&LED_CAN_ERROR);
 3935              	 .loc 6 559 0
 3936 00a6 724B     	 ldr r3,.L182+4
 3937 00a8 181C     	 mov r0,r3
 3938 00aa FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 560:../main.c     **** 
 561:../main.c     **** 			uint8_t i;
 562:../main.c     **** 			int16_t values_int16[3] = {0};
 3939              	 .loc 6 562 0
 3940 00ae 3B1D     	 add r3,r7,#4
 3941 00b0 0022     	 mov r2,#0
 3942 00b2 1A60     	 str r2,[r3]
 3943 00b4 0022     	 mov r2,#0
 3944 00b6 9A80     	 strh r2,[r3,#4]
 563:../main.c     **** 			for(i = 1 ; i < 4 ; i ++){
 3945              	 .loc 6 563 0
 3946 00b8 1D23     	 mov r3,#29
 3947 00ba FB18     	 add r3,r7,r3
 3948 00bc 0122     	 mov r2,#1
 3949 00be 1A70     	 strb r2,[r3]
 3950 00c0 6BE0     	 b .L175
 3951              	.L179:
 564:../main.c     **** 				 if(i == 1) values_int16[i - 1] = (data_RX[i * 2 + 1] << 8) | data_RX[i * 2];
 3952              	 .loc 6 564 0
 3953 00c2 1D23     	 mov r3,#29
 3954 00c4 FB18     	 add r3,r7,r3
 3955 00c6 1B78     	 ldrb r3,[r3]
 3956 00c8 012B     	 cmp r3,#1
 3957 00ca 1CD1     	 bne .L176
 3958              	 .loc 6 564 0 is_stmt 0 discriminator 1
 3959 00cc 1D23     	 mov r3,#29
 3960 00ce FB18     	 add r3,r7,r3
 3961 00d0 1B78     	 ldrb r3,[r3]
 3962 00d2 5A1E     	 sub r2,r3,#1
 3963 00d4 1D23     	 mov r3,#29
 3964 00d6 FB18     	 add r3,r7,r3
 3965 00d8 1B78     	 ldrb r3,[r3]
 3966 00da 5B00     	 lsl r3,r3,#1
 3967 00dc 0133     	 add r3,r3,#1
 3968 00de 0C21     	 mov r1,#12
 3969 00e0 7918     	 add r1,r7,r1
 3970 00e2 CB5C     	 ldrb r3,[r1,r3]
 3971 00e4 1B02     	 lsl r3,r3,#8
 3972 00e6 98B2     	 uxth r0,r3
 3973 00e8 1D23     	 mov r3,#29
 3974 00ea FB18     	 add r3,r7,r3
 3975 00ec 1B78     	 ldrb r3,[r3]
 3976 00ee 5B00     	 lsl r3,r3,#1
 3977 00f0 0C21     	 mov r1,#12
 3978 00f2 7918     	 add r1,r7,r1
 3979 00f4 CB5C     	 ldrb r3,[r1,r3]
 3980 00f6 9BB2     	 uxth r3,r3
 3981 00f8 011C     	 add r1,r0,#0
 3982 00fa 0B43     	 orr r3,r1
 3983 00fc 99B2     	 uxth r1,r3
 3984 00fe 3B1D     	 add r3,r7,#4
 3985 0100 5200     	 lsl r2,r2,#1
 3986 0102 D152     	 strh r1,[r2,r3]
 3987 0104 42E0     	 b .L177
 3988              	.L176:
 565:../main.c     **** 				 else if(i == 2) values_int16[i - 1] = (data_RX[i * 2 + 1] << 8) | data_RX[i * 2];
 3989              	 .loc 6 565 0 is_stmt 1
 3990 0106 1D23     	 mov r3,#29
 3991 0108 FB18     	 add r3,r7,r3
 3992 010a 1B78     	 ldrb r3,[r3]
 3993 010c 022B     	 cmp r3,#2
 3994 010e 1CD1     	 bne .L178
 3995              	 .loc 6 565 0 is_stmt 0 discriminator 1
 3996 0110 1D23     	 mov r3,#29
 3997 0112 FB18     	 add r3,r7,r3
 3998 0114 1B78     	 ldrb r3,[r3]
 3999 0116 5A1E     	 sub r2,r3,#1
 4000 0118 1D23     	 mov r3,#29
 4001 011a FB18     	 add r3,r7,r3
 4002 011c 1B78     	 ldrb r3,[r3]
 4003 011e 5B00     	 lsl r3,r3,#1
 4004 0120 0133     	 add r3,r3,#1
 4005 0122 0C21     	 mov r1,#12
 4006 0124 7918     	 add r1,r7,r1
 4007 0126 CB5C     	 ldrb r3,[r1,r3]
 4008 0128 1B02     	 lsl r3,r3,#8
 4009 012a 98B2     	 uxth r0,r3
 4010 012c 1D23     	 mov r3,#29
 4011 012e FB18     	 add r3,r7,r3
 4012 0130 1B78     	 ldrb r3,[r3]
 4013 0132 5B00     	 lsl r3,r3,#1
 4014 0134 0C21     	 mov r1,#12
 4015 0136 7918     	 add r1,r7,r1
 4016 0138 CB5C     	 ldrb r3,[r1,r3]
 4017 013a 9BB2     	 uxth r3,r3
 4018 013c 011C     	 add r1,r0,#0
 4019 013e 0B43     	 orr r3,r1
 4020 0140 99B2     	 uxth r1,r3
 4021 0142 3B1D     	 add r3,r7,#4
 4022 0144 5200     	 lsl r2,r2,#1
 4023 0146 D152     	 strh r1,[r2,r3]
 4024 0148 20E0     	 b .L177
 4025              	.L178:
 566:../main.c     **** 				 else if(i == 3) values_int16[i - 1] = (data_RX[i * 2 + 1] << 8) | data_RX[i * 2];
 4026              	 .loc 6 566 0 is_stmt 1
 4027 014a 1D23     	 mov r3,#29
 4028 014c FB18     	 add r3,r7,r3
 4029 014e 1B78     	 ldrb r3,[r3]
 4030 0150 032B     	 cmp r3,#3
 4031 0152 1BD1     	 bne .L177
 4032              	 .loc 6 566 0 is_stmt 0 discriminator 1
 4033 0154 1D23     	 mov r3,#29
 4034 0156 FB18     	 add r3,r7,r3
 4035 0158 1B78     	 ldrb r3,[r3]
 4036 015a 5A1E     	 sub r2,r3,#1
 4037 015c 1D23     	 mov r3,#29
 4038 015e FB18     	 add r3,r7,r3
 4039 0160 1B78     	 ldrb r3,[r3]
 4040 0162 5B00     	 lsl r3,r3,#1
 4041 0164 0133     	 add r3,r3,#1
 4042 0166 0C21     	 mov r1,#12
 4043 0168 7918     	 add r1,r7,r1
 4044 016a CB5C     	 ldrb r3,[r1,r3]
 4045 016c 1B02     	 lsl r3,r3,#8
 4046 016e 98B2     	 uxth r0,r3
 4047 0170 1D23     	 mov r3,#29
 4048 0172 FB18     	 add r3,r7,r3
 4049 0174 1B78     	 ldrb r3,[r3]
 4050 0176 5B00     	 lsl r3,r3,#1
 4051 0178 0C21     	 mov r1,#12
 4052 017a 7918     	 add r1,r7,r1
 4053 017c CB5C     	 ldrb r3,[r1,r3]
 4054 017e 9BB2     	 uxth r3,r3
 4055 0180 011C     	 add r1,r0,#0
 4056 0182 0B43     	 orr r3,r1
 4057 0184 99B2     	 uxth r1,r3
 4058 0186 3B1D     	 add r3,r7,#4
 4059 0188 5200     	 lsl r2,r2,#1
 4060 018a D152     	 strh r1,[r2,r3]
 4061              	.L177:
 563:../main.c     **** 				 if(i == 1) values_int16[i - 1] = (data_RX[i * 2 + 1] << 8) | data_RX[i * 2];
 4062              	 .loc 6 563 0 is_stmt 1 discriminator 2
 4063 018c 1D23     	 mov r3,#29
 4064 018e FB18     	 add r3,r7,r3
 4065 0190 1A78     	 ldrb r2,[r3]
 4066 0192 1D23     	 mov r3,#29
 4067 0194 FB18     	 add r3,r7,r3
 4068 0196 0132     	 add r2,r2,#1
 4069 0198 1A70     	 strb r2,[r3]
 4070              	.L175:
 563:../main.c     **** 				 if(i == 1) values_int16[i - 1] = (data_RX[i * 2 + 1] << 8) | data_RX[i * 2];
 4071              	 .loc 6 563 0 is_stmt 0 discriminator 1
 4072 019a 1D23     	 mov r3,#29
 4073 019c FB18     	 add r3,r7,r3
 4074 019e 1B78     	 ldrb r3,[r3]
 4075 01a0 032B     	 cmp r3,#3
 4076 01a2 8ED9     	 bls .L179
 567:../main.c     **** 			 }
 568:../main.c     **** 
 569:../main.c     **** 			Inveter_CAN_OK[Motor_on_rover] = values_int16[0];
 4077              	 .loc 6 569 0 is_stmt 1
 4078 01a4 1F23     	 mov r3,#31
 4079 01a6 FB18     	 add r3,r7,r3
 4080 01a8 1B78     	 ldrb r3,[r3]
 4081 01aa 3A1D     	 add r2,r7,#4
 4082 01ac 1288     	 ldrh r2,[r2]
 4083 01ae D1B2     	 uxtb r1,r2
 4084 01b0 304A     	 ldr r2,.L182+8
 4085 01b2 D154     	 strb r1,[r2,r3]
 570:../main.c     **** 			Actual_Speeds[Motor_on_rover] = (float)values_int16[1] / 1000;
 4086              	 .loc 6 570 0
 4087 01b4 1F23     	 mov r3,#31
 4088 01b6 FB18     	 add r3,r7,r3
 4089 01b8 1C78     	 ldrb r4,[r3]
 4090 01ba 3B1D     	 add r3,r7,#4
 4091 01bc 5B88     	 ldrh r3,[r3,#2]
 4092 01be 1BB2     	 sxth r3,r3
 4093 01c0 181C     	 mov r0,r3
 4094 01c2 FFF7FEFF 	 bl __aeabi_i2f
 4095 01c6 031C     	 add r3,r0,#0
 4096 01c8 181C     	 add r0,r3,#0
 4097 01ca 2B49     	 ldr r1,.L182+12
 4098 01cc FFF7FEFF 	 bl __aeabi_fdiv
 4099 01d0 031C     	 add r3,r0,#0
 4100 01d2 191C     	 add r1,r3,#0
 4101 01d4 294B     	 ldr r3,.L182+16
 4102 01d6 A200     	 lsl r2,r4,#2
 4103 01d8 D150     	 str r1,[r2,r3]
 571:../main.c     **** 			Actual_Distance[Motor_on_rover] = (float)values_int16[2] / 1000;
 4104              	 .loc 6 571 0
 4105 01da 1F23     	 mov r3,#31
 4106 01dc FB18     	 add r3,r7,r3
 4107 01de 1C78     	 ldrb r4,[r3]
 4108 01e0 3B1D     	 add r3,r7,#4
 4109 01e2 9B88     	 ldrh r3,[r3,#4]
 4110 01e4 1BB2     	 sxth r3,r3
 4111 01e6 181C     	 mov r0,r3
 4112 01e8 FFF7FEFF 	 bl __aeabi_i2f
 4113 01ec 031C     	 add r3,r0,#0
 4114 01ee 181C     	 add r0,r3,#0
 4115 01f0 2149     	 ldr r1,.L182+12
 4116 01f2 FFF7FEFF 	 bl __aeabi_fdiv
 4117 01f6 031C     	 add r3,r0,#0
 4118 01f8 191C     	 add r1,r3,#0
 4119 01fa 214B     	 ldr r3,.L182+20
 4120 01fc A200     	 lsl r2,r4,#2
 4121 01fe D150     	 str r1,[r2,r3]
 4122              	.LBE3:
 4123 0200 03E0     	 b .L180
 4124              	.L174:
 572:../main.c     **** 
 573:../main.c     **** 
 574:../main.c     **** 			}
 575:../main.c     **** 		else DIGITAL_IO_SetOutputHigh(&LED_CAN_ERROR);
 4125              	 .loc 6 575 0
 4126 0202 1B4B     	 ldr r3,.L182+4
 4127 0204 181C     	 mov r0,r3
 4128 0206 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 4129              	.L180:
 4130              	.LBE2:
 547:../main.c     **** 		XMC_CAN_MO_t* lmsgobjct_ptr_1 = CAN_NODE_0.lmobj_ptr[Motor_on_rover + 2]->mo_ptr;
 4131              	 .loc 6 547 0 discriminator 1
 4132 020a 1F23     	 mov r3,#31
 4133 020c FB18     	 add r3,r7,r3
 4134 020e 1A78     	 ldrb r2,[r3]
 4135 0210 1F23     	 mov r3,#31
 4136 0212 FB18     	 add r3,r7,r3
 4137 0214 0132     	 add r2,r2,#1
 4138 0216 1A70     	 strb r2,[r3]
 4139              	.L171:
 547:../main.c     **** 		XMC_CAN_MO_t* lmsgobjct_ptr_1 = CAN_NODE_0.lmobj_ptr[Motor_on_rover + 2]->mo_ptr;
 4140              	 .loc 6 547 0 is_stmt 0 discriminator 2
 4141 0218 1F23     	 mov r3,#31
 4142 021a FB18     	 add r3,r7,r3
 4143 021c 1B78     	 ldrb r3,[r3]
 4144 021e 032B     	 cmp r3,#3
 4145 0220 00D8     	 bhi .LCB3314
 4146 0222 F5E6     	 b .L181
 4147              	.LCB3314:
 576:../main.c     **** 	}
 577:../main.c     **** 
 578:../main.c     **** 	speed_fl_act = Actual_Speeds[0];
 4148              	 .loc 6 578 0 is_stmt 1
 4149 0224 154B     	 ldr r3,.L182+16
 4150 0226 1A68     	 ldr r2,[r3]
 4151 0228 164B     	 ldr r3,.L182+24
 4152 022a 1A60     	 str r2,[r3]
 579:../main.c     **** 	speed_fr_act = Actual_Speeds[1];
 4153              	 .loc 6 579 0
 4154 022c 134B     	 ldr r3,.L182+16
 4155 022e 5A68     	 ldr r2,[r3,#4]
 4156 0230 154B     	 ldr r3,.L182+28
 4157 0232 1A60     	 str r2,[r3]
 580:../main.c     **** 	speed_rl_act = Actual_Speeds[2];
 4158              	 .loc 6 580 0
 4159 0234 114B     	 ldr r3,.L182+16
 4160 0236 9A68     	 ldr r2,[r3,#8]
 4161 0238 144B     	 ldr r3,.L182+32
 4162 023a 1A60     	 str r2,[r3]
 581:../main.c     **** 	speed_rr_act = Actual_Speeds[3];
 4163              	 .loc 6 581 0
 4164 023c 0F4B     	 ldr r3,.L182+16
 4165 023e DA68     	 ldr r2,[r3,#12]
 4166 0240 134B     	 ldr r3,.L182+36
 4167 0242 1A60     	 str r2,[r3]
 582:../main.c     **** 
 583:../main.c     **** 	distance_fl_act = Actual_Distance[0];
 4168              	 .loc 6 583 0
 4169 0244 0E4B     	 ldr r3,.L182+20
 4170 0246 1A68     	 ldr r2,[r3]
 4171 0248 124B     	 ldr r3,.L182+40
 4172 024a 1A60     	 str r2,[r3]
 584:../main.c     **** 	distance_fr_act = Actual_Distance[1];
 4173              	 .loc 6 584 0
 4174 024c 0C4B     	 ldr r3,.L182+20
 4175 024e 5A68     	 ldr r2,[r3,#4]
 4176 0250 114B     	 ldr r3,.L182+44
 4177 0252 1A60     	 str r2,[r3]
 585:../main.c     **** 	distance_rl_act = Actual_Distance[2];
 4178              	 .loc 6 585 0
 4179 0254 0A4B     	 ldr r3,.L182+20
 4180 0256 9A68     	 ldr r2,[r3,#8]
 4181 0258 104B     	 ldr r3,.L182+48
 4182 025a 1A60     	 str r2,[r3]
 586:../main.c     **** 	distance_rr_act = Actual_Distance[3];
 4183              	 .loc 6 586 0
 4184 025c 084B     	 ldr r3,.L182+20
 4185 025e DA68     	 ldr r2,[r3,#12]
 4186 0260 0F4B     	 ldr r3,.L182+52
 4187 0262 1A60     	 str r2,[r3]
 587:../main.c     **** 
 588:../main.c     **** }
 4188              	 .loc 6 588 0
 4189 0264 BD46     	 mov sp,r7
 4190 0266 09B0     	 add sp,sp,#36
 4191              	 
 4192 0268 90BD     	 pop {r4,r7,pc}
 4193              	.L183:
 4194 026a C046     	 .align 2
 4195              	.L182:
 4196 026c 00000000 	 .word CAN_NODE_0
 4197 0270 00000000 	 .word LED_CAN_ERROR
 4198 0274 00000000 	 .word Inveter_CAN_OK
 4199 0278 00007A44 	 .word 1148846080
 4200 027c 00000000 	 .word Actual_Speeds
 4201 0280 00000000 	 .word Actual_Distance
 4202 0284 00000000 	 .word speed_fl_act
 4203 0288 00000000 	 .word speed_fr_act
 4204 028c 00000000 	 .word speed_rl_act
 4205 0290 00000000 	 .word speed_rr_act
 4206 0294 00000000 	 .word distance_fl_act
 4207 0298 00000000 	 .word distance_fr_act
 4208 029c 00000000 	 .word distance_rl_act
 4209 02a0 00000000 	 .word distance_rr_act
 4210              	 .cfi_endproc
 4211              	.LFE231:
 4213              	 .section .text.Watchdog_Handler,"ax",%progbits
 4214              	 .align 2
 4215              	 .global Watchdog_Handler
 4216              	 .code 16
 4217              	 .thumb_func
 4219              	Watchdog_Handler:
 4220              	.LFB232:
 589:../main.c     **** 
 590:../main.c     **** void Watchdog_Handler(void) // to do restates if can is not working a problem wenn power from the b
 591:../main.c     **** {
 4221              	 .loc 6 591 0
 4222              	 .cfi_startproc
 4223 0000 80B5     	 push {r7,lr}
 4224              	.LCFI53:
 4225              	 .cfi_def_cfa_offset 8
 4226              	 .cfi_offset 7,-8
 4227              	 .cfi_offset 14,-4
 4228 0002 00AF     	 add r7,sp,#0
 4229              	.LCFI54:
 4230              	 .cfi_def_cfa_register 7
 592:../main.c     ****   WATCHDOG_ClearAlarm(); /* Clear the alarm event */
 4231              	 .loc 6 592 0
 4232 0004 FFF7FEFF 	 bl WATCHDOG_ClearAlarm
 593:../main.c     ****   DIGITAL_IO_SetOutputHigh(&WATCHDOG_LED_BLUE);
 4233              	 .loc 6 593 0
 4234 0008 024B     	 ldr r3,.L185
 4235 000a 181C     	 mov r0,r3
 4236 000c FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 594:../main.c     **** }
 4237              	 .loc 6 594 0
 4238 0010 BD46     	 mov sp,r7
 4239              	 
 4240 0012 80BD     	 pop {r7,pc}
 4241              	.L186:
 4242              	 .align 2
 4243              	.L185:
 4244 0014 00000000 	 .word WATCHDOG_LED_BLUE
 4245              	 .cfi_endproc
 4246              	.LFE232:
 4248              	 .section .text.CAN_reset_distance,"ax",%progbits
 4249              	 .align 2
 4250              	 .global CAN_reset_distance
 4251              	 .code 16
 4252              	 .thumb_func
 4254              	CAN_reset_distance:
 4255              	.LFB233:
 595:../main.c     **** 
 596:../main.c     **** void CAN_reset_distance(uint8_t distance_to_reset[4]){
 4256              	 .loc 6 596 0
 4257              	 .cfi_startproc
 4258 0000 80B5     	 push {r7,lr}
 4259              	.LCFI55:
 4260              	 .cfi_def_cfa_offset 8
 4261              	 .cfi_offset 7,-8
 4262              	 .cfi_offset 14,-4
 4263 0002 86B0     	 sub sp,sp,#24
 4264              	.LCFI56:
 4265              	 .cfi_def_cfa_offset 32
 4266 0004 00AF     	 add r7,sp,#0
 4267              	.LCFI57:
 4268              	 .cfi_def_cfa_register 7
 4269 0006 7860     	 str r0,[r7,#4]
 597:../main.c     **** 	uint8_t TX[8] ={0};
 4270              	 .loc 6 597 0
 4271 0008 0C23     	 mov r3,#12
 4272 000a FB18     	 add r3,r7,r3
 4273 000c 0022     	 mov r2,#0
 4274 000e 1A60     	 str r2,[r3]
 4275 0010 0022     	 mov r2,#0
 4276 0012 5A60     	 str r2,[r3,#4]
 598:../main.c     **** 	uint8_t i;
 599:../main.c     **** 	for(i = 0; i < 4; i++){	TX[i] = distance_to_reset[i];}
 4277              	 .loc 6 599 0
 4278 0014 1723     	 mov r3,#23
 4279 0016 FB18     	 add r3,r7,r3
 4280 0018 0022     	 mov r2,#0
 4281 001a 1A70     	 strb r2,[r3]
 4282 001c 12E0     	 b .L188
 4283              	.L189:
 4284              	 .loc 6 599 0 is_stmt 0 discriminator 3
 4285 001e 1723     	 mov r3,#23
 4286 0020 FB18     	 add r3,r7,r3
 4287 0022 1B78     	 ldrb r3,[r3]
 4288 0024 1722     	 mov r2,#23
 4289 0026 BA18     	 add r2,r7,r2
 4290 0028 1278     	 ldrb r2,[r2]
 4291 002a 7968     	 ldr r1,[r7,#4]
 4292 002c 8A18     	 add r2,r1,r2
 4293 002e 1178     	 ldrb r1,[r2]
 4294 0030 0C22     	 mov r2,#12
 4295 0032 BA18     	 add r2,r7,r2
 4296 0034 D154     	 strb r1,[r2,r3]
 4297 0036 1723     	 mov r3,#23
 4298 0038 FB18     	 add r3,r7,r3
 4299 003a 1A78     	 ldrb r2,[r3]
 4300 003c 1723     	 mov r3,#23
 4301 003e FB18     	 add r3,r7,r3
 4302 0040 0132     	 add r2,r2,#1
 4303 0042 1A70     	 strb r2,[r3]
 4304              	.L188:
 4305              	 .loc 6 599 0 discriminator 1
 4306 0044 1723     	 mov r3,#23
 4307 0046 FB18     	 add r3,r7,r3
 4308 0048 1B78     	 ldrb r3,[r3]
 4309 004a 032B     	 cmp r3,#3
 4310 004c E7D9     	 bls .L189
 600:../main.c     **** 
 601:../main.c     **** 	CAN_NODE_MO_UpdateData((void*) CAN_NODE_0.lmobj_ptr[1], (uint8_t*)TX);
 4311              	 .loc 6 601 0 is_stmt 1
 4312 004e 084B     	 ldr r3,.L190
 4313 0050 1A69     	 ldr r2,[r3,#16]
 4314 0052 0C23     	 mov r3,#12
 4315 0054 FB18     	 add r3,r7,r3
 4316 0056 101C     	 mov r0,r2
 4317 0058 191C     	 mov r1,r3
 4318 005a FFF7FEFF 	 bl CAN_NODE_MO_UpdateData
 602:../main.c     **** 	CAN_NODE_MO_Transmit((void*) CAN_NODE_0.lmobj_ptr[1]); //Transmit the data of message object1
 4319              	 .loc 6 602 0
 4320 005e 044B     	 ldr r3,.L190
 4321 0060 1B69     	 ldr r3,[r3,#16]
 4322 0062 181C     	 mov r0,r3
 4323 0064 FFF7FEFF 	 bl CAN_NODE_MO_Transmit
 603:../main.c     **** }
 4324              	 .loc 6 603 0
 4325 0068 BD46     	 mov sp,r7
 4326 006a 06B0     	 add sp,sp,#24
 4327              	 
 4328 006c 80BD     	 pop {r7,pc}
 4329              	.L191:
 4330 006e C046     	 .align 2
 4331              	.L190:
 4332 0070 00000000 	 .word CAN_NODE_0
 4333              	 .cfi_endproc
 4334              	.LFE233:
 4336              	 .global __aeabi_f2iz
 4337              	 .section .text.CAN_send_Speeds,"ax",%progbits
 4338              	 .align 2
 4339              	 .global CAN_send_Speeds
 4340              	 .code 16
 4341              	 .thumb_func
 4343              	CAN_send_Speeds:
 4344              	.LFB234:
 604:../main.c     **** 
 605:../main.c     **** void CAN_send_Speeds(float Speed_data[4]){
 4345              	 .loc 6 605 0
 4346              	 .cfi_startproc
 4347 0000 80B5     	 push {r7,lr}
 4348              	.LCFI58:
 4349              	 .cfi_def_cfa_offset 8
 4350              	 .cfi_offset 7,-8
 4351              	 .cfi_offset 14,-4
 4352 0002 84B0     	 sub sp,sp,#16
 4353              	.LCFI59:
 4354              	 .cfi_def_cfa_offset 24
 4355 0004 00AF     	 add r7,sp,#0
 4356              	.LCFI60:
 4357              	 .cfi_def_cfa_register 7
 4358 0006 7860     	 str r0,[r7,#4]
 606:../main.c     **** 
 607:../main.c     **** 	int16_t Speeds_int16[4] ={Speed_data[0] *1000, Speed_data[1] *1000, Speed_data[2] *1000, Speed_dat
 4359              	 .loc 6 607 0
 4360 0008 7B68     	 ldr r3,[r7,#4]
 4361 000a 1B68     	 ldr r3,[r3]
 4362 000c 181C     	 add r0,r3,#0
 4363 000e 2649     	 ldr r1,.L193
 4364 0010 FFF7FEFF 	 bl __aeabi_fmul
 4365 0014 031C     	 add r3,r0,#0
 4366 0016 181C     	 add r0,r3,#0
 4367 0018 FFF7FEFF 	 bl __aeabi_f2iz
 4368 001c 031C     	 mov r3,r0
 4369 001e 9AB2     	 uxth r2,r3
 4370 0020 0823     	 mov r3,#8
 4371 0022 FB18     	 add r3,r7,r3
 4372 0024 1A80     	 strh r2,[r3]
 4373 0026 7B68     	 ldr r3,[r7,#4]
 4374 0028 0433     	 add r3,r3,#4
 4375 002a 1B68     	 ldr r3,[r3]
 4376 002c 181C     	 add r0,r3,#0
 4377 002e 1E49     	 ldr r1,.L193
 4378 0030 FFF7FEFF 	 bl __aeabi_fmul
 4379 0034 031C     	 add r3,r0,#0
 4380 0036 181C     	 add r0,r3,#0
 4381 0038 FFF7FEFF 	 bl __aeabi_f2iz
 4382 003c 031C     	 mov r3,r0
 4383 003e 9AB2     	 uxth r2,r3
 4384 0040 0823     	 mov r3,#8
 4385 0042 FB18     	 add r3,r7,r3
 4386 0044 5A80     	 strh r2,[r3,#2]
 4387 0046 7B68     	 ldr r3,[r7,#4]
 4388 0048 0833     	 add r3,r3,#8
 4389 004a 1B68     	 ldr r3,[r3]
 4390 004c 181C     	 add r0,r3,#0
 4391 004e 1649     	 ldr r1,.L193
 4392 0050 FFF7FEFF 	 bl __aeabi_fmul
 4393 0054 031C     	 add r3,r0,#0
 4394 0056 181C     	 add r0,r3,#0
 4395 0058 FFF7FEFF 	 bl __aeabi_f2iz
 4396 005c 031C     	 mov r3,r0
 4397 005e 9AB2     	 uxth r2,r3
 4398 0060 0823     	 mov r3,#8
 4399 0062 FB18     	 add r3,r7,r3
 4400 0064 9A80     	 strh r2,[r3,#4]
 4401 0066 7B68     	 ldr r3,[r7,#4]
 4402 0068 0C33     	 add r3,r3,#12
 4403 006a 1B68     	 ldr r3,[r3]
 4404 006c 181C     	 add r0,r3,#0
 4405 006e 0E49     	 ldr r1,.L193
 4406 0070 FFF7FEFF 	 bl __aeabi_fmul
 4407 0074 031C     	 add r3,r0,#0
 4408 0076 181C     	 add r0,r3,#0
 4409 0078 FFF7FEFF 	 bl __aeabi_f2iz
 4410 007c 031C     	 mov r3,r0
 4411 007e 9AB2     	 uxth r2,r3
 4412 0080 0823     	 mov r3,#8
 4413 0082 FB18     	 add r3,r7,r3
 4414 0084 DA80     	 strh r2,[r3,#6]
 608:../main.c     **** 
 609:../main.c     **** 	CAN_NODE_MO_UpdateData((void*) CAN_NODE_0.lmobj_ptr[0], (uint8_t*)Speeds_int16);
 4415              	 .loc 6 609 0
 4416 0086 094B     	 ldr r3,.L193+4
 4417 0088 DA68     	 ldr r2,[r3,#12]
 4418 008a 0823     	 mov r3,#8
 4419 008c FB18     	 add r3,r7,r3
 4420 008e 101C     	 mov r0,r2
 4421 0090 191C     	 mov r1,r3
 4422 0092 FFF7FEFF 	 bl CAN_NODE_MO_UpdateData
 610:../main.c     **** 	CAN_NODE_MO_Transmit((void*) CAN_NODE_0.lmobj_ptr[0]); //Transmit the data of message object1
 4423              	 .loc 6 610 0
 4424 0096 054B     	 ldr r3,.L193+4
 4425 0098 DB68     	 ldr r3,[r3,#12]
 4426 009a 181C     	 mov r0,r3
 4427 009c FFF7FEFF 	 bl CAN_NODE_MO_Transmit
 611:../main.c     **** 
 612:../main.c     **** }
 4428              	 .loc 6 612 0
 4429 00a0 BD46     	 mov sp,r7
 4430 00a2 04B0     	 add sp,sp,#16
 4431              	 
 4432 00a4 80BD     	 pop {r7,pc}
 4433              	.L194:
 4434 00a6 C046     	 .align 2
 4435              	.L193:
 4436 00a8 00007A44 	 .word 1148846080
 4437 00ac 00000000 	 .word CAN_NODE_0
 4438              	 .cfi_endproc
 4439              	.LFE234:
 4441              	 .section .text.IRQ8_Handler,"ax",%progbits
 4442              	 .align 2
 4443              	 .global IRQ8_Handler
 4444              	 .code 16
 4445              	 .thumb_func
 4447              	IRQ8_Handler:
 4448              	.LFB235:
 613:../main.c     **** 
 614:../main.c     **** void INTERRUPT_TIMER_10us_ISR(void){ // every 1ms so 10kHz
 4449              	 .loc 6 614 0
 4450              	 .cfi_startproc
 4451 0000 80B5     	 push {r7,lr}
 4452              	.LCFI61:
 4453              	 .cfi_def_cfa_offset 8
 4454              	 .cfi_offset 7,-8
 4455              	 .cfi_offset 14,-4
 4456 0002 00AF     	 add r7,sp,#0
 4457              	.LCFI62:
 4458              	 .cfi_def_cfa_register 7
 615:../main.c     **** 	if(RC_Gear_state == 1)RC_gear_100us_counter ++;
 4459              	 .loc 6 615 0
 4460 0004 0A4B     	 ldr r3,.L198
 4461 0006 1B78     	 ldrb r3,[r3]
 4462 0008 DBB2     	 uxtb r3,r3
 4463 000a 012B     	 cmp r3,#1
 4464 000c 04D1     	 bne .L196
 4465              	 .loc 6 615 0 is_stmt 0 discriminator 1
 4466 000e 094B     	 ldr r3,.L198+4
 4467 0010 1B68     	 ldr r3,[r3]
 4468 0012 5A1C     	 add r2,r3,#1
 4469 0014 074B     	 ldr r3,.L198+4
 4470 0016 1A60     	 str r2,[r3]
 4471              	.L196:
 616:../main.c     **** 	if(RC_AUX1_state == 1)RC_AUX1_100us_counter ++;
 4472              	 .loc 6 616 0 is_stmt 1
 4473 0018 074B     	 ldr r3,.L198+8
 4474 001a 1B78     	 ldrb r3,[r3]
 4475 001c DBB2     	 uxtb r3,r3
 4476 001e 012B     	 cmp r3,#1
 4477 0020 04D1     	 bne .L195
 4478              	 .loc 6 616 0 is_stmt 0 discriminator 1
 4479 0022 064B     	 ldr r3,.L198+12
 4480 0024 1B68     	 ldr r3,[r3]
 4481 0026 5A1C     	 add r2,r3,#1
 4482 0028 044B     	 ldr r3,.L198+12
 4483 002a 1A60     	 str r2,[r3]
 4484              	.L195:
 617:../main.c     **** }
 4485              	 .loc 6 617 0 is_stmt 1
 4486 002c BD46     	 mov sp,r7
 4487              	 
 4488 002e 80BD     	 pop {r7,pc}
 4489              	.L199:
 4490              	 .align 2
 4491              	.L198:
 4492 0030 00000000 	 .word RC_Gear_state
 4493 0034 00000000 	 .word RC_gear_100us_counter
 4494 0038 00000000 	 .word RC_AUX1_state
 4495 003c 00000000 	 .word RC_AUX1_100us_counter
 4496              	 .cfi_endproc
 4497              	.LFE235:
 4499              	 .global __aeabi_f2uiz
 4500              	 .section .text.Steering_set_Angles,"ax",%progbits
 4501              	 .align 2
 4502              	 .global Steering_set_Angles
 4503              	 .code 16
 4504              	 .thumb_func
 4506              	Steering_set_Angles:
 4507              	.LFB236:
 618:../main.c     **** 
 619:../main.c     **** void Steering_set_Angles(float Angles_data[4]){
 4508              	 .loc 6 619 0
 4509              	 .cfi_startproc
 4510 0000 90B5     	 push {r4,r7,lr}
 4511              	.LCFI63:
 4512              	 .cfi_def_cfa_offset 12
 4513              	 .cfi_offset 4,-12
 4514              	 .cfi_offset 7,-8
 4515              	 .cfi_offset 14,-4
 4516 0002 85B0     	 sub sp,sp,#20
 4517              	.LCFI64:
 4518              	 .cfi_def_cfa_offset 32
 4519 0004 00AF     	 add r7,sp,#0
 4520              	.LCFI65:
 4521              	 .cfi_def_cfa_register 7
 4522 0006 7860     	 str r0,[r7,#4]
 620:../main.c     **** 	float deg_PWM = 0.645; // deg to PWM singlan converstion factor
 4523              	 .loc 6 620 0
 4524 0008 3E4B     	 ldr r3,.L211
 4525 000a BB60     	 str r3,[r7,#8]
 621:../main.c     **** 
 622:../main.c     **** 	// calcuation of PWM for Angle on each wheel
 623:../main.c     **** 	int i;
 624:../main.c     **** 	for(i = 0 ; i < 4 ; i ++){
 4526              	 .loc 6 624 0
 4527 000c 0023     	 mov r3,#0
 4528 000e FB60     	 str r3,[r7,#12]
 4529 0010 1FE0     	 b .L201
 4530              	.L202:
 625:../main.c     **** 		Servo_PWMs[i] = Angles_data[i]*deg_PWM + NP[i];
 4531              	 .loc 6 625 0 discriminator 3
 4532 0012 FB68     	 ldr r3,[r7,#12]
 4533 0014 9B00     	 lsl r3,r3,#2
 4534 0016 7A68     	 ldr r2,[r7,#4]
 4535 0018 D318     	 add r3,r2,r3
 4536 001a 1B68     	 ldr r3,[r3]
 4537 001c 181C     	 add r0,r3,#0
 4538 001e B968     	 ldr r1,[r7,#8]
 4539 0020 FFF7FEFF 	 bl __aeabi_fmul
 4540 0024 031C     	 add r3,r0,#0
 4541 0026 1C1C     	 add r4,r3,#0
 4542 0028 374B     	 ldr r3,.L211+4
 4543 002a FA68     	 ldr r2,[r7,#12]
 4544 002c 9200     	 lsl r2,r2,#2
 4545 002e D358     	 ldr r3,[r2,r3]
 4546 0030 181C     	 mov r0,r3
 4547 0032 FFF7FEFF 	 bl __aeabi_i2f
 4548 0036 031C     	 add r3,r0,#0
 4549 0038 201C     	 add r0,r4,#0
 4550 003a 191C     	 add r1,r3,#0
 4551 003c FFF7FEFF 	 bl __aeabi_fadd
 4552 0040 031C     	 add r3,r0,#0
 4553 0042 191C     	 add r1,r3,#0
 4554 0044 314B     	 ldr r3,.L211+8
 4555 0046 FA68     	 ldr r2,[r7,#12]
 4556 0048 9200     	 lsl r2,r2,#2
 4557 004a D150     	 str r1,[r2,r3]
 624:../main.c     **** 		Servo_PWMs[i] = Angles_data[i]*deg_PWM + NP[i];
 4558              	 .loc 6 624 0 discriminator 3
 4559 004c FB68     	 ldr r3,[r7,#12]
 4560 004e 0133     	 add r3,r3,#1
 4561 0050 FB60     	 str r3,[r7,#12]
 4562              	.L201:
 624:../main.c     **** 		Servo_PWMs[i] = Angles_data[i]*deg_PWM + NP[i];
 4563              	 .loc 6 624 0 is_stmt 0 discriminator 1
 4564 0052 FB68     	 ldr r3,[r7,#12]
 4565 0054 032B     	 cmp r3,#3
 4566 0056 DCDD     	 ble .L202
 626:../main.c     **** 		}
 627:../main.c     **** 
 628:../main.c     **** 	//limitinbg max servor Angle to 1.75 rot in each dirction
 629:../main.c     **** 	for(i = 0 ; i < 4 ; i ++){
 4567              	 .loc 6 629 0 is_stmt 1
 4568 0058 0023     	 mov r3,#0
 4569 005a FB60     	 str r3,[r7,#12]
 4570 005c 20E0     	 b .L203
 4571              	.L208:
 630:../main.c     **** 		if(Servo_PWMs[i] > 950) { Servo_PWMs[i] = 950;}
 4572              	 .loc 6 630 0
 4573 005e 2B4B     	 ldr r3,.L211+8
 4574 0060 FA68     	 ldr r2,[r7,#12]
 4575 0062 9200     	 lsl r2,r2,#2
 4576 0064 D358     	 ldr r3,[r2,r3]
 4577 0066 181C     	 add r0,r3,#0
 4578 0068 2949     	 ldr r1,.L211+12
 4579 006a FFF7FEFF 	 bl __aeabi_fcmpgt
 4580 006e 031E     	 sub r3,r0,#0
 4581 0070 04D0     	 beq .L204
 4582              	 .loc 6 630 0 is_stmt 0 discriminator 1
 4583 0072 264B     	 ldr r3,.L211+8
 4584 0074 FA68     	 ldr r2,[r7,#12]
 4585 0076 9200     	 lsl r2,r2,#2
 4586 0078 2549     	 ldr r1,.L211+12
 4587 007a D150     	 str r1,[r2,r3]
 4588              	.L204:
 631:../main.c     **** 		if(Servo_PWMs[i] < 550) { Servo_PWMs[i] = 550;}
 4589              	 .loc 6 631 0 is_stmt 1
 4590 007c 234B     	 ldr r3,.L211+8
 4591 007e FA68     	 ldr r2,[r7,#12]
 4592 0080 9200     	 lsl r2,r2,#2
 4593 0082 D358     	 ldr r3,[r2,r3]
 4594 0084 181C     	 add r0,r3,#0
 4595 0086 2349     	 ldr r1,.L211+16
 4596 0088 FFF7FEFF 	 bl __aeabi_fcmplt
 4597 008c 031E     	 sub r3,r0,#0
 4598 008e 04D0     	 beq .L206
 4599              	 .loc 6 631 0 is_stmt 0 discriminator 1
 4600 0090 1E4B     	 ldr r3,.L211+8
 4601 0092 FA68     	 ldr r2,[r7,#12]
 4602 0094 9200     	 lsl r2,r2,#2
 4603 0096 1F49     	 ldr r1,.L211+16
 4604 0098 D150     	 str r1,[r2,r3]
 4605              	.L206:
 629:../main.c     **** 		if(Servo_PWMs[i] > 950) { Servo_PWMs[i] = 950;}
 4606              	 .loc 6 629 0 is_stmt 1 discriminator 2
 4607 009a FB68     	 ldr r3,[r7,#12]
 4608 009c 0133     	 add r3,r3,#1
 4609 009e FB60     	 str r3,[r7,#12]
 4610              	.L203:
 629:../main.c     **** 		if(Servo_PWMs[i] > 950) { Servo_PWMs[i] = 950;}
 4611              	 .loc 6 629 0 is_stmt 0 discriminator 1
 4612 00a0 FB68     	 ldr r3,[r7,#12]
 4613 00a2 032B     	 cmp r3,#3
 4614 00a4 DBDD     	 ble .L208
 632:../main.c     **** 	}
 633:../main.c     **** 
 634:../main.c     **** 	//seting PWM values
 635:../main.c     **** 	PWM_SetDutyCycle(&PWM_servo_fl,Servo_PWMs[0]);
 4615              	 .loc 6 635 0 is_stmt 1
 4616 00a6 194B     	 ldr r3,.L211+8
 4617 00a8 1B68     	 ldr r3,[r3]
 4618 00aa 181C     	 add r0,r3,#0
 4619 00ac FFF7FEFF 	 bl __aeabi_f2uiz
 4620 00b0 021C     	 mov r2,r0
 4621 00b2 194B     	 ldr r3,.L211+20
 4622 00b4 181C     	 mov r0,r3
 4623 00b6 111C     	 mov r1,r2
 4624 00b8 FFF7FEFF 	 bl PWM_SetDutyCycle
 636:../main.c     **** 	PWM_SetDutyCycle(&PWM_servo_fr,Servo_PWMs[1]);
 4625              	 .loc 6 636 0
 4626 00bc 134B     	 ldr r3,.L211+8
 4627 00be 5B68     	 ldr r3,[r3,#4]
 4628 00c0 181C     	 add r0,r3,#0
 4629 00c2 FFF7FEFF 	 bl __aeabi_f2uiz
 4630 00c6 021C     	 mov r2,r0
 4631 00c8 144B     	 ldr r3,.L211+24
 4632 00ca 181C     	 mov r0,r3
 4633 00cc 111C     	 mov r1,r2
 4634 00ce FFF7FEFF 	 bl PWM_SetDutyCycle
 637:../main.c     **** 	PWM_SetDutyCycle(&PWM_servo_rl,Servo_PWMs[2]);
 4635              	 .loc 6 637 0
 4636 00d2 0E4B     	 ldr r3,.L211+8
 4637 00d4 9B68     	 ldr r3,[r3,#8]
 4638 00d6 181C     	 add r0,r3,#0
 4639 00d8 FFF7FEFF 	 bl __aeabi_f2uiz
 4640 00dc 021C     	 mov r2,r0
 4641 00de 104B     	 ldr r3,.L211+28
 4642 00e0 181C     	 mov r0,r3
 4643 00e2 111C     	 mov r1,r2
 4644 00e4 FFF7FEFF 	 bl PWM_SetDutyCycle
 638:../main.c     **** 	PWM_SetDutyCycle(&PWM_servo_rr,Servo_PWMs[3]);
 4645              	 .loc 6 638 0
 4646 00e8 084B     	 ldr r3,.L211+8
 4647 00ea DB68     	 ldr r3,[r3,#12]
 4648 00ec 181C     	 add r0,r3,#0
 4649 00ee FFF7FEFF 	 bl __aeabi_f2uiz
 4650 00f2 021C     	 mov r2,r0
 4651 00f4 0B4B     	 ldr r3,.L211+32
 4652 00f6 181C     	 mov r0,r3
 4653 00f8 111C     	 mov r1,r2
 4654 00fa FFF7FEFF 	 bl PWM_SetDutyCycle
 639:../main.c     **** 
 640:../main.c     **** }
 4655              	 .loc 6 640 0
 4656 00fe BD46     	 mov sp,r7
 4657 0100 05B0     	 add sp,sp,#20
 4658              	 
 4659 0102 90BD     	 pop {r4,r7,pc}
 4660              	.L212:
 4661              	 .align 2
 4662              	.L211:
 4663 0104 B81E253F 	 .word 1059397304
 4664 0108 00000000 	 .word NP
 4665 010c 00000000 	 .word Servo_PWMs
 4666 0110 00806D44 	 .word 1148026880
 4667 0114 00800944 	 .word 1141473280
 4668 0118 00000000 	 .word PWM_servo_fl
 4669 011c 00000000 	 .word PWM_servo_fr
 4670 0120 00000000 	 .word PWM_servo_rl
 4671 0124 00000000 	 .word PWM_servo_rr
 4672              	 .cfi_endproc
 4673              	.LFE236:
 4675              	 .global __aeabi_ui2d
 4676              	 .section .text.RC_Recive,"ax",%progbits
 4677              	 .align 2
 4678              	 .global RC_Recive
 4679              	 .code 16
 4680              	 .thumb_func
 4682              	RC_Recive:
 4683              	.LFB237:
 641:../main.c     **** 
 642:../main.c     **** void RC_Recive(void){
 4684              	 .loc 6 642 0
 4685              	 .cfi_startproc
 4686 0000 F8B5     	 push {r3,r4,r5,r6,r7,lr}
 4687              	.LCFI66:
 4688              	 .cfi_def_cfa_offset 24
 4689              	 .cfi_offset 3,-24
 4690              	 .cfi_offset 4,-20
 4691              	 .cfi_offset 5,-16
 4692              	 .cfi_offset 6,-12
 4693              	 .cfi_offset 7,-8
 4694              	 .cfi_offset 14,-4
 4695 0002 00AF     	 add r7,sp,#0
 4696              	.LCFI67:
 4697              	 .cfi_def_cfa_register 7
 643:../main.c     **** 
 644:../main.c     **** 	CAPTURE_Start(&CAPTURE_RC_Steering);
 4698              	 .loc 6 644 0
 4699 0004 784B     	 ldr r3,.L233
 4700 0006 181C     	 mov r0,r3
 4701 0008 FFF7FEFF 	 bl CAPTURE_Start
 645:../main.c     **** 	CAPTURE_Start(&CAPTURE_RC_Speed);
 4702              	 .loc 6 645 0
 4703 000c 774B     	 ldr r3,.L233+4
 4704 000e 181C     	 mov r0,r3
 4705 0010 FFF7FEFF 	 bl CAPTURE_Start
 646:../main.c     **** 
 647:../main.c     **** 	CAPTURE_GetCapturedTimeInNanoSec(&CAPTURE_RC_Steering, &captured_time_Steering);
 4706              	 .loc 6 647 0
 4707 0014 744A     	 ldr r2,.L233
 4708 0016 764B     	 ldr r3,.L233+8
 4709 0018 101C     	 mov r0,r2
 4710 001a 191C     	 mov r1,r3
 4711 001c FFF7FEFF 	 bl CAPTURE_GetCapturedTimeInNanoSec
 648:../main.c     **** 	CAPTURE_GetCapturedTimeInNanoSec(&CAPTURE_RC_Speed, &captured_time_Speed);
 4712              	 .loc 6 648 0
 4713 0020 724A     	 ldr r2,.L233+4
 4714 0022 744B     	 ldr r3,.L233+12
 4715 0024 101C     	 mov r0,r2
 4716 0026 191C     	 mov r1,r3
 4717 0028 FFF7FEFF 	 bl CAPTURE_GetCapturedTimeInNanoSec
 649:../main.c     **** 
 650:../main.c     **** 	if(RC_Speed_Stop == 1){
 4718              	 .loc 6 650 0
 4719 002c 724B     	 ldr r3,.L233+16
 4720 002e 1B78     	 ldrb r3,[r3]
 4721 0030 012B     	 cmp r3,#1
 4722 0032 5CD1     	 bne .L214
 651:../main.c     **** 		if((captured_time_Speed >= 1000000) && (captured_time_Speed <= 2000000)){
 4723              	 .loc 6 651 0
 4724 0034 6F4B     	 ldr r3,.L233+12
 4725 0036 1B68     	 ldr r3,[r3]
 4726 0038 704A     	 ldr r2,.L233+20
 4727 003a 9342     	 cmp r3,r2
 4728 003c 50D9     	 bls .L215
 4729              	 .loc 6 651 0 is_stmt 0 discriminator 1
 4730 003e 6D4B     	 ldr r3,.L233+12
 4731 0040 1B68     	 ldr r3,[r3]
 4732 0042 6F4A     	 ldr r2,.L233+24
 4733 0044 9342     	 cmp r3,r2
 4734 0046 4BD8     	 bhi .L215
 652:../main.c     **** 		  RC_Speed = ((double)captured_time_Speed - RC_NP_SPEED) * RC_Speed_ns_to_mps; // form +-0.6m/s
 4735              	 .loc 6 652 0 is_stmt 1
 4736 0048 6A4B     	 ldr r3,.L233+12
 4737 004a 1B68     	 ldr r3,[r3]
 4738 004c 181C     	 mov r0,r3
 4739 004e FFF7FEFF 	 bl __aeabi_ui2d
 4740 0052 031C     	 mov r3,r0
 4741 0054 0C1C     	 mov r4,r1
 4742 0056 181C     	 mov r0,r3
 4743 0058 211C     	 mov r1,r4
 4744 005a 0022     	 mov r2,#0
 4745 005c 694B     	 ldr r3,.L233+28
 4746 005e FFF7FEFF 	 bl __aeabi_dsub
 4747 0062 031C     	 mov r3,r0
 4748 0064 0C1C     	 mov r4,r1
 4749 0066 1D1C     	 mov r5,r3
 4750 0068 261C     	 mov r6,r4
 4751 006a 674B     	 ldr r3,.L233+32
 4752 006c 1B68     	 ldr r3,[r3]
 4753 006e 181C     	 add r0,r3,#0
 4754 0070 FFF7FEFF 	 bl __aeabi_f2d
 4755 0074 031C     	 mov r3,r0
 4756 0076 0C1C     	 mov r4,r1
 4757 0078 281C     	 mov r0,r5
 4758 007a 311C     	 mov r1,r6
 4759 007c 1A1C     	 mov r2,r3
 4760 007e 231C     	 mov r3,r4
 4761 0080 FFF7FEFF 	 bl __aeabi_dmul
 4762 0084 031C     	 mov r3,r0
 4763 0086 0C1C     	 mov r4,r1
 4764 0088 181C     	 mov r0,r3
 4765 008a 211C     	 mov r1,r4
 4766 008c FFF7FEFF 	 bl __aeabi_d2f
 4767 0090 021C     	 add r2,r0,#0
 4768 0092 5E4B     	 ldr r3,.L233+36
 4769 0094 1A60     	 str r2,[r3]
 653:../main.c     **** 		  if((RC_Speed < 0.1) && (RC_Speed > -0.1)) RC_Speed = 0; // to have accutal 0
 4770              	 .loc 6 653 0
 4771 0096 5D4B     	 ldr r3,.L233+36
 4772 0098 1B68     	 ldr r3,[r3]
 4773 009a 181C     	 add r0,r3,#0
 4774 009c FFF7FEFF 	 bl __aeabi_f2d
 4775 00a0 031C     	 mov r3,r0
 4776 00a2 0C1C     	 mov r4,r1
 4777 00a4 181C     	 mov r0,r3
 4778 00a6 211C     	 mov r1,r4
 4779 00a8 594A     	 ldr r2,.L233+40
 4780 00aa 5A4B     	 ldr r3,.L233+44
 4781 00ac FFF7FEFF 	 bl __aeabi_dcmplt
 4782 00b0 031E     	 sub r3,r0,#0
 4783 00b2 11D0     	 beq .L216
 4784              	 .loc 6 653 0 is_stmt 0 discriminator 1
 4785 00b4 554B     	 ldr r3,.L233+36
 4786 00b6 1B68     	 ldr r3,[r3]
 4787 00b8 181C     	 add r0,r3,#0
 4788 00ba FFF7FEFF 	 bl __aeabi_f2d
 4789 00be 031C     	 mov r3,r0
 4790 00c0 0C1C     	 mov r4,r1
 4791 00c2 181C     	 mov r0,r3
 4792 00c4 211C     	 mov r1,r4
 4793 00c6 524A     	 ldr r2,.L233+40
 4794 00c8 534B     	 ldr r3,.L233+48
 4795 00ca FFF7FEFF 	 bl __aeabi_dcmpgt
 4796 00ce 031E     	 sub r3,r0,#0
 4797 00d0 02D0     	 beq .L216
 4798              	 .loc 6 653 0 discriminator 2
 4799 00d2 4E4B     	 ldr r3,.L233+36
 4800 00d4 0022     	 mov r2,#0
 4801 00d6 1A60     	 str r2,[r3]
 4802              	.L216:
 654:../main.c     **** 		  RC_no_Speed_data_counter = 0;
 4803              	 .loc 6 654 0 is_stmt 1
 4804 00d8 504B     	 ldr r3,.L233+52
 4805 00da 0022     	 mov r2,#0
 4806 00dc 1A70     	 strb r2,[r3]
 4807 00de 09E0     	 b .L220
 4808              	.L215:
 655:../main.c     **** 		}
 656:../main.c     **** 		else{
 657:../main.c     **** 			RC_no_Speed_data_counter ++;
 4809              	 .loc 6 657 0
 4810 00e0 4E4B     	 ldr r3,.L233+52
 4811 00e2 1B78     	 ldrb r3,[r3]
 4812 00e4 0133     	 add r3,r3,#1
 4813 00e6 DAB2     	 uxtb r2,r3
 4814 00e8 4C4B     	 ldr r3,.L233+52
 4815 00ea 1A70     	 strb r2,[r3]
 4816 00ec 02E0     	 b .L220
 4817              	.L214:
 658:../main.c     **** 		}
 659:../main.c     **** 	}
 660:../main.c     **** 	else RC_Speed = 0;
 4818              	 .loc 6 660 0
 4819 00ee 474B     	 ldr r3,.L233+36
 4820 00f0 0022     	 mov r2,#0
 4821 00f2 1A60     	 str r2,[r3]
 4822              	.L220:
 661:../main.c     **** 
 662:../main.c     **** 	if((captured_time_Steering >= 1000000) && (captured_time_Steering <= 2000000)){
 4823              	 .loc 6 662 0
 4824 00f4 3E4B     	 ldr r3,.L233+8
 4825 00f6 1B68     	 ldr r3,[r3]
 4826 00f8 404A     	 ldr r2,.L233+20
 4827 00fa 9342     	 cmp r3,r2
 4828 00fc 44D9     	 bls .L221
 4829              	 .loc 6 662 0 is_stmt 0 discriminator 1
 4830 00fe 3C4B     	 ldr r3,.L233+8
 4831 0100 1B68     	 ldr r3,[r3]
 4832 0102 3F4A     	 ldr r2,.L233+24
 4833 0104 9342     	 cmp r3,r2
 4834 0106 3FD8     	 bhi .L221
 663:../main.c     **** 	  RC_Steering = (((double)captured_time_Steering - RC_NP_STEERING) * RC_Steering_ns_to_deg); // fo
 4835              	 .loc 6 663 0 is_stmt 1
 4836 0108 394B     	 ldr r3,.L233+8
 4837 010a 1B68     	 ldr r3,[r3]
 4838 010c 181C     	 mov r0,r3
 4839 010e FFF7FEFF 	 bl __aeabi_ui2d
 4840 0112 031C     	 mov r3,r0
 4841 0114 0C1C     	 mov r4,r1
 4842 0116 181C     	 mov r0,r3
 4843 0118 211C     	 mov r1,r4
 4844 011a 0022     	 mov r2,#0
 4845 011c 404B     	 ldr r3,.L233+56
 4846 011e FFF7FEFF 	 bl __aeabi_dsub
 4847 0122 031C     	 mov r3,r0
 4848 0124 0C1C     	 mov r4,r1
 4849 0126 1D1C     	 mov r5,r3
 4850 0128 261C     	 mov r6,r4
 4851 012a 3E4B     	 ldr r3,.L233+60
 4852 012c 1B68     	 ldr r3,[r3]
 4853 012e 181C     	 add r0,r3,#0
 4854 0130 FFF7FEFF 	 bl __aeabi_f2d
 4855 0134 031C     	 mov r3,r0
 4856 0136 0C1C     	 mov r4,r1
 4857 0138 281C     	 mov r0,r5
 4858 013a 311C     	 mov r1,r6
 4859 013c 1A1C     	 mov r2,r3
 4860 013e 231C     	 mov r3,r4
 4861 0140 FFF7FEFF 	 bl __aeabi_dmul
 4862 0144 031C     	 mov r3,r0
 4863 0146 0C1C     	 mov r4,r1
 4864 0148 181C     	 mov r0,r3
 4865 014a 211C     	 mov r1,r4
 4866 014c FFF7FEFF 	 bl __aeabi_d2f
 4867 0150 021C     	 add r2,r0,#0
 4868 0152 354B     	 ldr r3,.L233+64
 4869 0154 1A60     	 str r2,[r3]
 664:../main.c     **** 	  if((RC_Steering < 2) && (RC_Steering > -2)) RC_Steering = 0; // to have accutal 0
 4870              	 .loc 6 664 0
 4871 0156 344B     	 ldr r3,.L233+64
 4872 0158 1B68     	 ldr r3,[r3]
 4873 015a 181C     	 add r0,r3,#0
 4874 015c 8021     	 mov r1,#128
 4875 015e C905     	 lsl r1,r1,#23
 4876 0160 FFF7FEFF 	 bl __aeabi_fcmplt
 4877 0164 031E     	 sub r3,r0,#0
 4878 0166 0BD0     	 beq .L222
 4879              	 .loc 6 664 0 is_stmt 0 discriminator 1
 4880 0168 2F4B     	 ldr r3,.L233+64
 4881 016a 1B68     	 ldr r3,[r3]
 4882 016c 181C     	 add r0,r3,#0
 4883 016e C021     	 mov r1,#192
 4884 0170 0906     	 lsl r1,r1,#24
 4885 0172 FFF7FEFF 	 bl __aeabi_fcmpgt
 4886 0176 031E     	 sub r3,r0,#0
 4887 0178 02D0     	 beq .L222
 4888              	 .loc 6 664 0 discriminator 2
 4889 017a 2B4B     	 ldr r3,.L233+64
 4890 017c 0022     	 mov r2,#0
 4891 017e 1A60     	 str r2,[r3]
 4892              	.L222:
 665:../main.c     **** 	  RC_no_Steering_data_counter = 0;
 4893              	 .loc 6 665 0 is_stmt 1
 4894 0180 2A4B     	 ldr r3,.L233+68
 4895 0182 0022     	 mov r2,#0
 4896 0184 1A70     	 strb r2,[r3]
 4897 0186 05E0     	 b .L225
 4898              	.L221:
 666:../main.c     **** 	}
 667:../main.c     **** 	else{
 668:../main.c     **** 	  RC_no_Steering_data_counter ++;
 4899              	 .loc 6 668 0
 4900 0188 284B     	 ldr r3,.L233+68
 4901 018a 1B78     	 ldrb r3,[r3]
 4902 018c 0133     	 add r3,r3,#1
 4903 018e DAB2     	 uxtb r2,r3
 4904 0190 264B     	 ldr r3,.L233+68
 4905 0192 1A70     	 strb r2,[r3]
 4906              	.L225:
 669:../main.c     **** 	}
 670:../main.c     **** 
 671:../main.c     **** 	if(RC_no_Speed_data_counter > 20 || RC_no_Steering_data_counter > 20 ){ // internall values not ok
 4907              	 .loc 6 671 0
 4908 0194 214B     	 ldr r3,.L233+52
 4909 0196 1B78     	 ldrb r3,[r3]
 4910 0198 142B     	 cmp r3,#20
 4911 019a 03D8     	 bhi .L226
 4912              	 .loc 6 671 0 is_stmt 0 discriminator 1
 4913 019c 234B     	 ldr r3,.L233+68
 4914 019e 1B78     	 ldrb r3,[r3]
 4915 01a0 142B     	 cmp r3,#20
 4916 01a2 10D9     	 bls .L227
 4917              	.L226:
 672:../main.c     **** 	  DIGITAL_IO_SetOutputLow(&RC_no_data_LED);
 4918              	 .loc 6 672 0 is_stmt 1
 4919 01a4 224B     	 ldr r3,.L233+72
 4920 01a6 181C     	 mov r0,r3
 4921 01a8 FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 673:../main.c     **** 	  RC_no_Speed_data_counter = 20;
 4922              	 .loc 6 673 0
 4923 01ac 1B4B     	 ldr r3,.L233+52
 4924 01ae 1422     	 mov r2,#20
 4925 01b0 1A70     	 strb r2,[r3]
 674:../main.c     **** 	  RC_no_Steering_data_counter = 20;
 4926              	 .loc 6 674 0
 4927 01b2 1E4B     	 ldr r3,.L233+68
 4928 01b4 1422     	 mov r2,#20
 4929 01b6 1A70     	 strb r2,[r3]
 675:../main.c     **** 
 676:../main.c     **** 	  //set gobal vars 0
 677:../main.c     **** 	  Driving_speed = 0;
 4930              	 .loc 6 677 0
 4931 01b8 1E4B     	 ldr r3,.L233+76
 4932 01ba 0022     	 mov r2,#0
 4933 01bc 1A60     	 str r2,[r3]
 678:../main.c     **** 	  Steering_direction = 0;
 4934              	 .loc 6 678 0
 4935 01be 1E4B     	 ldr r3,.L233+80
 4936 01c0 0022     	 mov r2,#0
 4937 01c2 1A60     	 str r2,[r3]
 4938 01c4 0BE0     	 b .L228
 4939              	.L227:
 679:../main.c     **** 	}
 680:../main.c     **** 	else{ // values filternig
 681:../main.c     **** 	  DIGITAL_IO_SetOutputHigh(&RC_no_data_LED);
 4940              	 .loc 6 681 0
 4941 01c6 1A4B     	 ldr r3,.L233+72
 4942 01c8 181C     	 mov r0,r3
 4943 01ca FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 682:../main.c     **** 
 683:../main.c     **** 	  //set gobal vars stanart
 684:../main.c     **** 	  Driving_speed = RC_Speed;
 4944              	 .loc 6 684 0
 4945 01ce 0F4B     	 ldr r3,.L233+36
 4946 01d0 1A68     	 ldr r2,[r3]
 4947 01d2 184B     	 ldr r3,.L233+76
 4948 01d4 1A60     	 str r2,[r3]
 685:../main.c     **** 	  Steering_direction = RC_Steering;
 4949              	 .loc 6 685 0
 4950 01d6 144B     	 ldr r3,.L233+64
 4951 01d8 1A68     	 ldr r2,[r3]
 4952 01da 174B     	 ldr r3,.L233+80
 4953 01dc 1A60     	 str r2,[r3]
 4954              	.L228:
 686:../main.c     **** 	}
 687:../main.c     **** 
 688:../main.c     **** 	New_Input = 1; //goalb var to tell it that there in new data to calculate
 4955              	 .loc 6 688 0
 4956 01de 174B     	 ldr r3,.L233+84
 4957 01e0 0122     	 mov r2,#1
 4958 01e2 1A70     	 strb r2,[r3]
 689:../main.c     **** }
 4959              	 .loc 6 689 0
 4960 01e4 BD46     	 mov sp,r7
 4961              	 
 4962 01e6 F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 4963              	.L234:
 4964              	 .align 2
 4965              	.L233:
 4966 01e8 00000000 	 .word CAPTURE_RC_Steering
 4967 01ec 00000000 	 .word CAPTURE_RC_Speed
 4968 01f0 00000000 	 .word captured_time_Steering
 4969 01f4 00000000 	 .word captured_time_Speed
 4970 01f8 00000000 	 .word RC_Speed_Stop
 4971 01fc 3F420F00 	 .word 999999
 4972 0200 80841E00 	 .word 2000000
 4973 0204 60E33641 	 .word 1094116192
 4974 0208 00000000 	 .word RC_Speed_ns_to_mps
 4975 020c 00000000 	 .word RC_Speed
 4976 0210 9A999999 	 .word -1717986918
 4977 0214 9999B93F 	 .word 1069128089
 4978 0218 9999B9BF 	 .word -1078355559
 4979 021c 00000000 	 .word RC_no_Speed_data_counter
 4980 0220 A07F3741 	 .word 1094156192
 4981 0224 00000000 	 .word RC_Steering_ns_to_deg
 4982 0228 00000000 	 .word RC_Steering
 4983 022c 00000000 	 .word RC_no_Steering_data_counter
 4984 0230 00000000 	 .word RC_no_data_LED
 4985 0234 00000000 	 .word Driving_speed
 4986 0238 00000000 	 .word Steering_direction
 4987 023c 00000000 	 .word New_Input
 4988              	 .cfi_endproc
 4989              	.LFE237:
 4991              	 .section .text.IRQ12_Handler,"ax",%progbits
 4992              	 .align 2
 4993              	 .global IRQ12_Handler
 4994              	 .code 16
 4995              	 .thumb_func
 4997              	IRQ12_Handler:
 4998              	.LFB238:
 690:../main.c     **** 
 691:../main.c     **** void RC_Connected_ISR(void){
 4999              	 .loc 6 691 0
 5000              	 .cfi_startproc
 5001 0000 80B5     	 push {r7,lr}
 5002              	.LCFI68:
 5003              	 .cfi_def_cfa_offset 8
 5004              	 .cfi_offset 7,-8
 5005              	 .cfi_offset 14,-4
 5006 0002 82B0     	 sub sp,sp,#8
 5007              	.LCFI69:
 5008              	 .cfi_def_cfa_offset 16
 5009 0004 00AF     	 add r7,sp,#0
 5010              	.LCFI70:
 5011              	 .cfi_def_cfa_register 7
 692:../main.c     **** 
 693:../main.c     **** 	if(RC_controll == 1){
 5012              	 .loc 6 693 0
 5013 0006 294B     	 ldr r3,.L241
 5014 0008 1B78     	 ldrb r3,[r3]
 5015 000a DBB2     	 uxtb r3,r3
 5016 000c 012B     	 cmp r3,#1
 5017 000e 49D1     	 bne .L235
 694:../main.c     **** 
 695:../main.c     **** 		RC_Gear_state =  PIN_INTERRUPT_GetPinValue(&RC_Connected); // pin haig or low
 5018              	 .loc 6 695 0
 5019 0010 274B     	 ldr r3,.L241+4
 5020 0012 181C     	 mov r0,r3
 5021 0014 FFF7FEFF 	 bl PIN_INTERRUPT_GetPinValue
 5022 0018 031C     	 mov r3,r0
 5023 001a DAB2     	 uxtb r2,r3
 5024 001c 254B     	 ldr r3,.L241+8
 5025 001e 1A70     	 strb r2,[r3]
 696:../main.c     **** 
 697:../main.c     **** 		if(RC_Gear_state == 0){// do nothing during high
 5026              	 .loc 6 697 0
 5027 0020 244B     	 ldr r3,.L241+8
 5028 0022 1B78     	 ldrb r3,[r3]
 5029 0024 DBB2     	 uxtb r3,r3
 5030 0026 002B     	 cmp r3,#0
 5031 0028 3CD1     	 bne .L235
 5032              	.LBB4:
 698:../main.c     **** 
 699:../main.c     **** 			RC_Recive(); // get speed and steering data
 5033              	 .loc 6 699 0
 5034 002a FFF7FEFF 	 bl RC_Recive
 700:../main.c     **** 
 701:../main.c     **** 			uint32_t RC_Gear_on_time_100us = RC_gear_100us_counter;
 5035              	 .loc 6 701 0
 5036 002e 224B     	 ldr r3,.L241+12
 5037 0030 1B68     	 ldr r3,[r3]
 5038 0032 7B60     	 str r3,[r7,#4]
 702:../main.c     **** 			RC_gear_100us_counter = 0;
 5039              	 .loc 6 702 0
 5040 0034 204B     	 ldr r3,.L241+12
 5041 0036 0022     	 mov r2,#0
 5042 0038 1A60     	 str r2,[r3]
 703:../main.c     **** 
 704:../main.c     **** 			if((80 < RC_Gear_on_time_100us) && (RC_Gear_on_time_100us < 150)) RC_Gear_duty= 0;
 5043              	 .loc 6 704 0
 5044 003a 7B68     	 ldr r3,[r7,#4]
 5045 003c 502B     	 cmp r3,#80
 5046 003e 06D9     	 bls .L237
 5047              	 .loc 6 704 0 is_stmt 0 discriminator 1
 5048 0040 7B68     	 ldr r3,[r7,#4]
 5049 0042 952B     	 cmp r3,#149
 5050 0044 03D8     	 bhi .L237
 5051              	 .loc 6 704 0 discriminator 2
 5052 0046 1D4B     	 ldr r3,.L241+16
 5053 0048 0022     	 mov r2,#0
 5054 004a 1A70     	 strb r2,[r3]
 5055 004c 0CE0     	 b .L238
 5056              	.L237:
 705:../main.c     **** 			else if ((150 < RC_Gear_on_time_100us) && (RC_Gear_on_time_100us < 210)) RC_Gear_duty = 1;
 5057              	 .loc 6 705 0 is_stmt 1
 5058 004e 7B68     	 ldr r3,[r7,#4]
 5059 0050 962B     	 cmp r3,#150
 5060 0052 06D9     	 bls .L239
 5061              	 .loc 6 705 0 is_stmt 0 discriminator 1
 5062 0054 7B68     	 ldr r3,[r7,#4]
 5063 0056 D12B     	 cmp r3,#209
 5064 0058 03D8     	 bhi .L239
 5065              	 .loc 6 705 0 discriminator 2
 5066 005a 184B     	 ldr r3,.L241+16
 5067 005c 0122     	 mov r2,#1
 5068 005e 1A70     	 strb r2,[r3]
 5069 0060 02E0     	 b .L238
 5070              	.L239:
 706:../main.c     **** 			else RC_Gear_duty = 2;
 5071              	 .loc 6 706 0 is_stmt 1
 5072 0062 164B     	 ldr r3,.L241+16
 5073 0064 0222     	 mov r2,#2
 5074 0066 1A70     	 strb r2,[r3]
 5075              	.L238:
 707:../main.c     **** 
 708:../main.c     **** 			if(RC_Gear_duty == 1 && RC_Gear_duty_OLD == 0){
 5076              	 .loc 6 708 0
 5077 0068 144B     	 ldr r3,.L241+16
 5078 006a 1B78     	 ldrb r3,[r3]
 5079 006c DBB2     	 uxtb r3,r3
 5080 006e 012B     	 cmp r3,#1
 5081 0070 13D1     	 bne .L240
 5082              	 .loc 6 708 0 is_stmt 0 discriminator 1
 5083 0072 134B     	 ldr r3,.L241+20
 5084 0074 1B78     	 ldrb r3,[r3]
 5085 0076 DBB2     	 uxtb r3,r3
 5086 0078 002B     	 cmp r3,#0
 5087 007a 0ED1     	 bne .L240
 709:../main.c     **** 				Steering_mode ++;
 5088              	 .loc 6 709 0 is_stmt 1
 5089 007c 114B     	 ldr r3,.L241+24
 5090 007e 1B78     	 ldrb r3,[r3]
 5091 0080 DBB2     	 uxtb r3,r3
 5092 0082 0133     	 add r3,r3,#1
 5093 0084 DAB2     	 uxtb r2,r3
 5094 0086 0F4B     	 ldr r3,.L241+24
 5095 0088 1A70     	 strb r2,[r3]
 710:../main.c     **** 				if(Steering_mode > 5)Steering_mode = 0;
 5096              	 .loc 6 710 0
 5097 008a 0E4B     	 ldr r3,.L241+24
 5098 008c 1B78     	 ldrb r3,[r3]
 5099 008e DBB2     	 uxtb r3,r3
 5100 0090 052B     	 cmp r3,#5
 5101 0092 02D9     	 bls .L240
 5102              	 .loc 6 710 0 is_stmt 0 discriminator 1
 5103 0094 0B4B     	 ldr r3,.L241+24
 5104 0096 0022     	 mov r2,#0
 5105 0098 1A70     	 strb r2,[r3]
 5106              	.L240:
 711:../main.c     **** 			}
 712:../main.c     **** 		RC_Gear_duty_OLD = RC_Gear_duty;
 5107              	 .loc 6 712 0 is_stmt 1
 5108 009a 084B     	 ldr r3,.L241+16
 5109 009c 1B78     	 ldrb r3,[r3]
 5110 009e DAB2     	 uxtb r2,r3
 5111 00a0 074B     	 ldr r3,.L241+20
 5112 00a2 1A70     	 strb r2,[r3]
 5113              	.L235:
 5114              	.LBE4:
 713:../main.c     **** 		}
 714:../main.c     **** 	}
 715:../main.c     **** }
 5115              	 .loc 6 715 0
 5116 00a4 BD46     	 mov sp,r7
 5117 00a6 02B0     	 add sp,sp,#8
 5118              	 
 5119 00a8 80BD     	 pop {r7,pc}
 5120              	.L242:
 5121 00aa C046     	 .align 2
 5122              	.L241:
 5123 00ac 00000000 	 .word RC_controll
 5124 00b0 00000000 	 .word RC_Connected
 5125 00b4 00000000 	 .word RC_Gear_state
 5126 00b8 00000000 	 .word RC_gear_100us_counter
 5127 00bc 00000000 	 .word RC_Gear_duty
 5128 00c0 00000000 	 .word RC_Gear_duty_OLD
 5129 00c4 00000000 	 .word Steering_mode
 5130              	 .cfi_endproc
 5131              	.LFE238:
 5133              	 .section .text.IRQ6_Handler,"ax",%progbits
 5134              	 .align 2
 5135              	 .global IRQ6_Handler
 5136              	 .code 16
 5137              	 .thumb_func
 5139              	IRQ6_Handler:
 5140              	.LFB239:
 716:../main.c     **** 
 717:../main.c     **** void RC_AUX1_ISR(void){
 5141              	 .loc 6 717 0
 5142              	 .cfi_startproc
 5143 0000 80B5     	 push {r7,lr}
 5144              	.LCFI71:
 5145              	 .cfi_def_cfa_offset 8
 5146              	 .cfi_offset 7,-8
 5147              	 .cfi_offset 14,-4
 5148 0002 82B0     	 sub sp,sp,#8
 5149              	.LCFI72:
 5150              	 .cfi_def_cfa_offset 16
 5151 0004 00AF     	 add r7,sp,#0
 5152              	.LCFI73:
 5153              	 .cfi_def_cfa_register 7
 718:../main.c     **** 	if(RC_controll == 1){
 5154              	 .loc 6 718 0
 5155 0006 1F4B     	 ldr r3,.L249
 5156 0008 1B78     	 ldrb r3,[r3]
 5157 000a DBB2     	 uxtb r3,r3
 5158 000c 012B     	 cmp r3,#1
 5159 000e 35D1     	 bne .L243
 719:../main.c     **** 		RC_AUX1_state =  PIN_INTERRUPT_GetPinValue(&RC_AUX1); // pin haig or low
 5160              	 .loc 6 719 0
 5161 0010 1D4B     	 ldr r3,.L249+4
 5162 0012 181C     	 mov r0,r3
 5163 0014 FFF7FEFF 	 bl PIN_INTERRUPT_GetPinValue
 5164 0018 031C     	 mov r3,r0
 5165 001a DAB2     	 uxtb r2,r3
 5166 001c 1B4B     	 ldr r3,.L249+8
 5167 001e 1A70     	 strb r2,[r3]
 720:../main.c     **** 
 721:../main.c     **** 		if(RC_AUX1_state == 0){// do nothing during high
 5168              	 .loc 6 721 0
 5169 0020 1A4B     	 ldr r3,.L249+8
 5170 0022 1B78     	 ldrb r3,[r3]
 5171 0024 DBB2     	 uxtb r3,r3
 5172 0026 002B     	 cmp r3,#0
 5173 0028 28D1     	 bne .L243
 5174              	.LBB5:
 722:../main.c     **** 			uint32_t RC_AUX1_on_time_100us = RC_AUX1_100us_counter;
 5175              	 .loc 6 722 0
 5176 002a 194B     	 ldr r3,.L249+12
 5177 002c 1B68     	 ldr r3,[r3]
 5178 002e 7B60     	 str r3,[r7,#4]
 723:../main.c     **** 			RC_AUX1_100us_counter = 0;
 5179              	 .loc 6 723 0
 5180 0030 174B     	 ldr r3,.L249+12
 5181 0032 0022     	 mov r2,#0
 5182 0034 1A60     	 str r2,[r3]
 724:../main.c     **** 
 725:../main.c     **** 			if((80 < RC_AUX1_on_time_100us) && (RC_AUX1_on_time_100us < 150)) RC_AUX1_duty= 0;
 5183              	 .loc 6 725 0
 5184 0036 7B68     	 ldr r3,[r7,#4]
 5185 0038 502B     	 cmp r3,#80
 5186 003a 06D9     	 bls .L245
 5187              	 .loc 6 725 0 is_stmt 0 discriminator 1
 5188 003c 7B68     	 ldr r3,[r7,#4]
 5189 003e 952B     	 cmp r3,#149
 5190 0040 03D8     	 bhi .L245
 5191              	 .loc 6 725 0 discriminator 2
 5192 0042 144B     	 ldr r3,.L249+16
 5193 0044 0022     	 mov r2,#0
 5194 0046 1A70     	 strb r2,[r3]
 5195 0048 0CE0     	 b .L246
 5196              	.L245:
 726:../main.c     **** 			else if ((150 < RC_AUX1_on_time_100us) && (RC_AUX1_on_time_100us < 210)) RC_AUX1_duty = 1;
 5197              	 .loc 6 726 0 is_stmt 1
 5198 004a 7B68     	 ldr r3,[r7,#4]
 5199 004c 962B     	 cmp r3,#150
 5200 004e 06D9     	 bls .L247
 5201              	 .loc 6 726 0 is_stmt 0 discriminator 1
 5202 0050 7B68     	 ldr r3,[r7,#4]
 5203 0052 D12B     	 cmp r3,#209
 5204 0054 03D8     	 bhi .L247
 5205              	 .loc 6 726 0 discriminator 2
 5206 0056 0F4B     	 ldr r3,.L249+16
 5207 0058 0122     	 mov r2,#1
 5208 005a 1A70     	 strb r2,[r3]
 5209 005c 02E0     	 b .L246
 5210              	.L247:
 727:../main.c     **** 			else RC_AUX1_duty = 2;
 5211              	 .loc 6 727 0 is_stmt 1
 5212 005e 0D4B     	 ldr r3,.L249+16
 5213 0060 0222     	 mov r2,#2
 5214 0062 1A70     	 strb r2,[r3]
 5215              	.L246:
 728:../main.c     **** 
 729:../main.c     **** 
 730:../main.c     **** 			if(RC_AUX1_duty == 1)RC_Speed_Stop = 1;
 5216              	 .loc 6 730 0
 5217 0064 0B4B     	 ldr r3,.L249+16
 5218 0066 1B78     	 ldrb r3,[r3]
 5219 0068 DBB2     	 uxtb r3,r3
 5220 006a 012B     	 cmp r3,#1
 5221 006c 03D1     	 bne .L248
 5222              	 .loc 6 730 0 is_stmt 0 discriminator 1
 5223 006e 0A4B     	 ldr r3,.L249+20
 5224 0070 0122     	 mov r2,#1
 5225 0072 1A70     	 strb r2,[r3]
 5226 0074 02E0     	 b .L243
 5227              	.L248:
 731:../main.c     **** 			else RC_Speed_Stop = 0;
 5228              	 .loc 6 731 0 is_stmt 1
 5229 0076 084B     	 ldr r3,.L249+20
 5230 0078 0022     	 mov r2,#0
 5231 007a 1A70     	 strb r2,[r3]
 5232              	.L243:
 5233              	.LBE5:
 732:../main.c     **** 		}
 733:../main.c     **** 	}
 734:../main.c     **** }
 5234              	 .loc 6 734 0
 5235 007c BD46     	 mov sp,r7
 5236 007e 02B0     	 add sp,sp,#8
 5237              	 
 5238 0080 80BD     	 pop {r7,pc}
 5239              	.L250:
 5240 0082 C046     	 .align 2
 5241              	.L249:
 5242 0084 00000000 	 .word RC_controll
 5243 0088 00000000 	 .word RC_AUX1
 5244 008c 00000000 	 .word RC_AUX1_state
 5245 0090 00000000 	 .word RC_AUX1_100us_counter
 5246 0094 00000000 	 .word RC_AUX1_duty
 5247 0098 00000000 	 .word RC_Speed_Stop
 5248              	 .cfi_endproc
 5249              	.LFE239:
 5251              	 .section .rodata
 5252              	 .align 2
 5253              	.LC0:
 5254 0000 01       	 .byte 1
 5255 0001 01       	 .byte 1
 5256 0002 01       	 .byte 1
 5257 0003 01       	 .byte 1
 5258              	 .section .text.IRQ7_Handler,"ax",%progbits
 5259              	 .align 2
 5260              	 .global IRQ7_Handler
 5261              	 .code 16
 5262              	 .thumb_func
 5264              	IRQ7_Handler:
 5265              	.LFB240:
 735:../main.c     **** 
 736:../main.c     **** void TIMER_CONTROL_ISR(void){
 5266              	 .loc 6 736 0
 5267              	 .cfi_startproc
 5268 0000 80B5     	 push {r7,lr}
 5269              	.LCFI74:
 5270              	 .cfi_def_cfa_offset 8
 5271              	 .cfi_offset 7,-8
 5272              	 .cfi_offset 14,-4
 5273 0002 82B0     	 sub sp,sp,#8
 5274              	.LCFI75:
 5275              	 .cfi_def_cfa_offset 16
 5276 0004 00AF     	 add r7,sp,#0
 5277              	.LCFI76:
 5278              	 .cfi_def_cfa_register 7
 737:../main.c     **** 	DIGITAL_IO_SetOutputHigh(&CALC_TIME_INDICATOR);
 5279              	 .loc 6 737 0
 5280 0006 394B     	 ldr r3,.L256
 5281 0008 181C     	 mov r0,r3
 5282 000a FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 738:../main.c     **** 	mode_led(Steering_mode);
 5283              	 .loc 6 738 0
 5284 000e 384B     	 ldr r3,.L256+4
 5285 0010 1B78     	 ldrb r3,[r3]
 5286 0012 DBB2     	 uxtb r3,r3
 5287 0014 181C     	 mov r0,r3
 5288 0016 FFF7FEFF 	 bl mode_led
 739:../main.c     **** 
 740:../main.c     **** 	if(RC_controll == 1){
 5289              	 .loc 6 740 0
 5290 001a 364B     	 ldr r3,.L256+8
 5291 001c 1B78     	 ldrb r3,[r3]
 5292 001e DBB2     	 uxtb r3,r3
 5293 0020 012B     	 cmp r3,#1
 5294 0022 07D1     	 bne .L252
 741:../main.c     **** 		if( NO_New_Input_counter > 9){
 5295              	 .loc 6 741 0
 5296 0024 344B     	 ldr r3,.L256+12
 5297 0026 1B68     	 ldr r3,[r3]
 5298 0028 092B     	 cmp r3,#9
 5299 002a 03D9     	 bls .L252
 742:../main.c     **** 			DIGITAL_IO_SetOutputLow(&RC_no_data_LED);
 5300              	 .loc 6 742 0
 5301 002c 334B     	 ldr r3,.L256+16
 5302 002e 181C     	 mov r0,r3
 5303 0030 FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 5304              	.L252:
 743:../main.c     **** 		}
 744:../main.c     **** 	}
 745:../main.c     **** 
 746:../main.c     **** 
 747:../main.c     **** 	if(New_Input == 1){
 5305              	 .loc 6 747 0
 5306 0034 324B     	 ldr r3,.L256+20
 5307 0036 1B78     	 ldrb r3,[r3]
 5308 0038 DBB2     	 uxtb r3,r3
 5309 003a 012B     	 cmp r3,#1
 5310 003c 0FD1     	 bne .L253
 748:../main.c     **** 	Steering_Function(Steering_direction, Driving_speed, Steering_mode);
 5311              	 .loc 6 748 0
 5312 003e 314B     	 ldr r3,.L256+24
 5313 0040 1968     	 ldr r1,[r3]
 5314 0042 314B     	 ldr r3,.L256+28
 5315 0044 1A68     	 ldr r2,[r3]
 5316 0046 2A4B     	 ldr r3,.L256+4
 5317 0048 1B78     	 ldrb r3,[r3]
 5318 004a DBB2     	 uxtb r3,r3
 5319 004c 081C     	 add r0,r1,#0
 5320 004e 111C     	 add r1,r2,#0
 5321 0050 1A1C     	 mov r2,r3
 5322 0052 FFF7FEFF 	 bl Steering_Function
 749:../main.c     **** 	NO_New_Input_counter = 0;
 5323              	 .loc 6 749 0
 5324 0056 284B     	 ldr r3,.L256+12
 5325 0058 0022     	 mov r2,#0
 5326 005a 1A60     	 str r2,[r3]
 5327 005c 23E0     	 b .L254
 5328              	.L253:
 750:../main.c     **** 
 751:../main.c     **** 	}
 752:../main.c     **** 	else{
 753:../main.c     **** 		NO_New_Input_counter ++;
 5329              	 .loc 6 753 0
 5330 005e 264B     	 ldr r3,.L256+12
 5331 0060 1B68     	 ldr r3,[r3]
 5332 0062 5A1C     	 add r2,r3,#1
 5333 0064 244B     	 ldr r3,.L256+12
 5334 0066 1A60     	 str r2,[r3]
 754:../main.c     **** 		if( NO_New_Input_counter > 10){
 5335              	 .loc 6 754 0
 5336 0068 234B     	 ldr r3,.L256+12
 5337 006a 1B68     	 ldr r3,[r3]
 5338 006c 0A2B     	 cmp r3,#10
 5339 006e 1AD9     	 bls .L254
 755:../main.c     **** 			NO_New_Input_counter = 10;
 5340              	 .loc 6 755 0
 5341 0070 214B     	 ldr r3,.L256+12
 5342 0072 0A22     	 mov r2,#10
 5343 0074 1A60     	 str r2,[r3]
 756:../main.c     **** 
 757:../main.c     **** 			  Steering_Angles[0] = 0;
 5344              	 .loc 6 757 0
 5345 0076 254B     	 ldr r3,.L256+32
 5346 0078 0022     	 mov r2,#0
 5347 007a 1A60     	 str r2,[r3]
 758:../main.c     **** 			  Steering_Angles[1] = 0;
 5348              	 .loc 6 758 0
 5349 007c 234B     	 ldr r3,.L256+32
 5350 007e 0022     	 mov r2,#0
 5351 0080 5A60     	 str r2,[r3,#4]
 759:../main.c     **** 			  Steering_Angles[2] = 0;
 5352              	 .loc 6 759 0
 5353 0082 224B     	 ldr r3,.L256+32
 5354 0084 0022     	 mov r2,#0
 5355 0086 9A60     	 str r2,[r3,#8]
 760:../main.c     **** 			  Steering_Angles[3] = 0;
 5356              	 .loc 6 760 0
 5357 0088 204B     	 ldr r3,.L256+32
 5358 008a 0022     	 mov r2,#0
 5359 008c DA60     	 str r2,[r3,#12]
 761:../main.c     **** 
 762:../main.c     **** 			  Speeds[0] = 0;
 5360              	 .loc 6 762 0
 5361 008e 204B     	 ldr r3,.L256+36
 5362 0090 0022     	 mov r2,#0
 5363 0092 1A60     	 str r2,[r3]
 763:../main.c     **** 			  Speeds[1] = 0;
 5364              	 .loc 6 763 0
 5365 0094 1E4B     	 ldr r3,.L256+36
 5366 0096 0022     	 mov r2,#0
 5367 0098 5A60     	 str r2,[r3,#4]
 764:../main.c     **** 			  Speeds[2] = 0;
 5368              	 .loc 6 764 0
 5369 009a 1D4B     	 ldr r3,.L256+36
 5370 009c 0022     	 mov r2,#0
 5371 009e 9A60     	 str r2,[r3,#8]
 765:../main.c     **** 			  Speeds[3] = 0;
 5372              	 .loc 6 765 0
 5373 00a0 1B4B     	 ldr r3,.L256+36
 5374 00a2 0022     	 mov r2,#0
 5375 00a4 DA60     	 str r2,[r3,#12]
 5376              	.L254:
 766:../main.c     **** 		}
 767:../main.c     **** 	}
 768:../main.c     **** 
 769:../main.c     **** 	//set Angles PWM
 770:../main.c     **** 	Steering_set_Angles(Steering_Angles);
 5377              	 .loc 6 770 0
 5378 00a6 194B     	 ldr r3,.L256+32
 5379 00a8 181C     	 mov r0,r3
 5380 00aa FFF7FEFF 	 bl Steering_set_Angles
 771:../main.c     **** 
 772:../main.c     **** 	Collision_voidance();
 5381              	 .loc 6 772 0
 5382 00ae FFF7FEFF 	 bl Collision_voidance
 773:../main.c     **** 
 774:../main.c     **** 	//send traget speeds to inverter
 775:../main.c     **** 	//CAN_send_Speeds(Speeds);
 776:../main.c     **** 
 777:../main.c     **** 	//
 778:../main.c     **** 	if(reset_distance == 1){
 5383              	 .loc 6 778 0
 5384 00b2 184B     	 ldr r3,.L256+40
 5385 00b4 1B78     	 ldrb r3,[r3]
 5386 00b6 DBB2     	 uxtb r3,r3
 5387 00b8 012B     	 cmp r3,#1
 5388 00ba 10D1     	 bne .L255
 5389              	.LBB6:
 779:../main.c     **** 		reset_distance = 0;
 5390              	 .loc 6 779 0
 5391 00bc 154B     	 ldr r3,.L256+40
 5392 00be 0022     	 mov r2,#0
 5393 00c0 1A70     	 strb r2,[r3]
 780:../main.c     **** 		uint8_t all[4] = {1,1,1,1};
 5394              	 .loc 6 780 0
 5395 00c2 3A1D     	 add r2,r7,#4
 5396 00c4 144B     	 ldr r3,.L256+44
 5397 00c6 111C     	 mov r1,r2
 5398 00c8 1A1C     	 mov r2,r3
 5399 00ca 0423     	 mov r3,#4
 5400 00cc 081C     	 mov r0,r1
 5401 00ce 111C     	 mov r1,r2
 5402 00d0 1A1C     	 mov r2,r3
 5403 00d2 FFF7FEFF 	 bl memcpy
 781:../main.c     **** 		CAN_reset_distance(all);
 5404              	 .loc 6 781 0
 5405 00d6 3B1D     	 add r3,r7,#4
 5406 00d8 181C     	 mov r0,r3
 5407 00da FFF7FEFF 	 bl CAN_reset_distance
 5408              	.L255:
 5409              	.LBE6:
 782:../main.c     **** 	}
 783:../main.c     **** 
 784:../main.c     **** 
 785:../main.c     **** 	DIGITAL_IO_SetOutputLow(&CALC_TIME_INDICATOR);
 5410              	 .loc 6 785 0
 5411 00de 034B     	 ldr r3,.L256
 5412 00e0 181C     	 mov r0,r3
 5413 00e2 FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 786:../main.c     **** }
 5414              	 .loc 6 786 0
 5415 00e6 BD46     	 mov sp,r7
 5416 00e8 02B0     	 add sp,sp,#8
 5417              	 
 5418 00ea 80BD     	 pop {r7,pc}
 5419              	.L257:
 5420              	 .align 2
 5421              	.L256:
 5422 00ec 00000000 	 .word CALC_TIME_INDICATOR
 5423 00f0 00000000 	 .word Steering_mode
 5424 00f4 00000000 	 .word RC_controll
 5425 00f8 00000000 	 .word NO_New_Input_counter
 5426 00fc 00000000 	 .word RC_no_data_LED
 5427 0100 00000000 	 .word New_Input
 5428 0104 00000000 	 .word Steering_direction
 5429 0108 00000000 	 .word Driving_speed
 5430 010c 00000000 	 .word Steering_Angles
 5431 0110 00000000 	 .word Speeds
 5432 0114 00000000 	 .word reset_distance
 5433 0118 00000000 	 .word .LC0
 5434              	 .cfi_endproc
 5435              	.LFE240:
 5437              	 .section .text.Collision_voidance,"ax",%progbits
 5438              	 .align 2
 5439              	 .global Collision_voidance
 5440              	 .code 16
 5441              	 .thumb_func
 5443              	Collision_voidance:
 5444              	.LFB241:
 787:../main.c     **** 
 788:../main.c     **** void Collision_voidance(){
 5445              	 .loc 6 788 0
 5446              	 .cfi_startproc
 5447 0000 F0B5     	 push {r4,r5,r6,r7,lr}
 5448              	.LCFI77:
 5449              	 .cfi_def_cfa_offset 20
 5450              	 .cfi_offset 4,-20
 5451              	 .cfi_offset 5,-16
 5452              	 .cfi_offset 6,-12
 5453              	 .cfi_offset 7,-8
 5454              	 .cfi_offset 14,-4
 5455 0002 83B0     	 sub sp,sp,#12
 5456              	.LCFI78:
 5457              	 .cfi_def_cfa_offset 32
 5458 0004 00AF     	 add r7,sp,#0
 5459              	.LCFI79:
 5460              	 .cfi_def_cfa_register 7
 789:../main.c     **** 	CAN_Ultrasonic_No_messasge_count ++;
 5461              	 .loc 6 789 0
 5462 0006 7A4B     	 ldr r3,.L281
 5463 0008 1B78     	 ldrb r3,[r3]
 5464 000a DBB2     	 uxtb r3,r3
 5465 000c 0133     	 add r3,r3,#1
 5466 000e DAB2     	 uxtb r2,r3
 5467 0010 774B     	 ldr r3,.L281
 5468 0012 1A70     	 strb r2,[r3]
 790:../main.c     **** 	if(CAN_Ultrasonic_No_messasge_count > 100) {
 5469              	 .loc 6 790 0
 5470 0014 764B     	 ldr r3,.L281
 5471 0016 1B78     	 ldrb r3,[r3]
 5472 0018 DBB2     	 uxtb r3,r3
 5473 001a 642B     	 cmp r3,#100
 5474 001c 03D9     	 bls .L259
 791:../main.c     **** 		CAN_Ultrasonic_No_messasge_count = 100;
 5475              	 .loc 6 791 0
 5476 001e 744B     	 ldr r3,.L281
 5477 0020 6422     	 mov r2,#100
 5478 0022 1A70     	 strb r2,[r3]
 792:../main.c     **** 		return;
 5479              	 .loc 6 792 0
 5480 0024 E1E0     	 b .L258
 5481              	.L259:
 793:../main.c     **** 	}
 794:../main.c     **** 
 795:../main.c     **** 	DIGITAL_IO_SetOutputLow(&LED_COLLISION_AVOID);
 5482              	 .loc 6 795 0
 5483 0026 734B     	 ldr r3,.L281+4
 5484 0028 181C     	 mov r0,r3
 5485 002a FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 796:../main.c     **** 	avg_Speeds = average(Speeds,4);
 5486              	 .loc 6 796 0
 5487 002e 724B     	 ldr r3,.L281+8
 5488 0030 181C     	 mov r0,r3
 5489 0032 0421     	 mov r1,#4
 5490 0034 FFF7FEFF 	 bl average
 5491 0038 021C     	 add r2,r0,#0
 5492 003a 704B     	 ldr r3,.L281+12
 5493 003c 1A60     	 str r2,[r3]
 797:../main.c     **** 
 798:../main.c     **** 	switch(Steering_mode) // options 'Front'; 'Rear'; '4_Wheel'; 'Carb'; 'Rotate'
 5494              	 .loc 6 798 0
 5495 003e 704B     	 ldr r3,.L281+16
 5496 0040 1B78     	 ldrb r3,[r3]
 5497 0042 DBB2     	 uxtb r3,r3
 5498 0044 052B     	 cmp r3,#5
 5499 0046 4BD8     	 bhi .L261
 5500 0048 9A00     	 lsl r2,r3,#2
 5501 004a 6E4B     	 ldr r3,.L281+20
 5502 004c D318     	 add r3,r2,r3
 5503 004e 1B68     	 ldr r3,[r3]
 5504 0050 9F46     	 mov pc,r3
 5505              	 .section .rodata.Collision_voidance,"a",%progbits
 5506              	 .align 2
 5507              	.L263:
 5508 0000 E0000000 	 .word .L261
 5509 0004 EE000000 	 .word .L280
 5510 0008 EE000000 	 .word .L280
 5511 000c EE000000 	 .word .L280
 5512 0010 52000000 	 .word .L265
 5513 0014 EE000000 	 .word .L280
 5514              	 .section .text.Collision_voidance
 5515              	.L265:
 799:../main.c     **** 		{
 800:../main.c     **** 			case FRONT://#############################################################
 801:../main.c     **** 				//act_trajctory_x =
 802:../main.c     **** 				break;
 803:../main.c     **** 
 804:../main.c     **** 			case BACK:// rear #############################################################
 805:../main.c     **** 
 806:../main.c     **** 
 807:../main.c     **** 			case ALL_WHEEL: // 4 wheel #############################################################
 808:../main.c     **** 
 809:../main.c     **** 				break;
 810:../main.c     **** 
 811:../main.c     **** 			case CRAB:  //carb //#############################################################
 812:../main.c     **** 				act_trajctory_x = avg_Speeds * cos(Steering_Angles[0]);
 5516              	 .loc 6 812 0
 5517 0052 6A4B     	 ldr r3,.L281+12
 5518 0054 1B68     	 ldr r3,[r3]
 5519 0056 181C     	 add r0,r3,#0
 5520 0058 FFF7FEFF 	 bl __aeabi_f2d
 5521 005c 051C     	 mov r5,r0
 5522 005e 0E1C     	 mov r6,r1
 5523 0060 694B     	 ldr r3,.L281+24
 5524 0062 1B68     	 ldr r3,[r3]
 5525 0064 181C     	 add r0,r3,#0
 5526 0066 FFF7FEFF 	 bl __aeabi_f2d
 5527 006a 031C     	 mov r3,r0
 5528 006c 0C1C     	 mov r4,r1
 5529 006e 181C     	 mov r0,r3
 5530 0070 211C     	 mov r1,r4
 5531 0072 FFF7FEFF 	 bl cos
 5532 0076 031C     	 mov r3,r0
 5533 0078 0C1C     	 mov r4,r1
 5534 007a 281C     	 mov r0,r5
 5535 007c 311C     	 mov r1,r6
 5536 007e 1A1C     	 mov r2,r3
 5537 0080 231C     	 mov r3,r4
 5538 0082 FFF7FEFF 	 bl __aeabi_dmul
 5539 0086 031C     	 mov r3,r0
 5540 0088 0C1C     	 mov r4,r1
 5541 008a 181C     	 mov r0,r3
 5542 008c 211C     	 mov r1,r4
 5543 008e FFF7FEFF 	 bl __aeabi_d2f
 5544 0092 021C     	 add r2,r0,#0
 5545 0094 5D4B     	 ldr r3,.L281+28
 5546 0096 1A60     	 str r2,[r3]
 813:../main.c     **** 				act_trajctory_y = avg_Speeds * sin(Steering_Angles[0]);
 5547              	 .loc 6 813 0
 5548 0098 584B     	 ldr r3,.L281+12
 5549 009a 1B68     	 ldr r3,[r3]
 5550 009c 181C     	 add r0,r3,#0
 5551 009e FFF7FEFF 	 bl __aeabi_f2d
 5552 00a2 051C     	 mov r5,r0
 5553 00a4 0E1C     	 mov r6,r1
 5554 00a6 584B     	 ldr r3,.L281+24
 5555 00a8 1B68     	 ldr r3,[r3]
 5556 00aa 181C     	 add r0,r3,#0
 5557 00ac FFF7FEFF 	 bl __aeabi_f2d
 5558 00b0 031C     	 mov r3,r0
 5559 00b2 0C1C     	 mov r4,r1
 5560 00b4 181C     	 mov r0,r3
 5561 00b6 211C     	 mov r1,r4
 5562 00b8 FFF7FEFF 	 bl sin
 5563 00bc 031C     	 mov r3,r0
 5564 00be 0C1C     	 mov r4,r1
 5565 00c0 281C     	 mov r0,r5
 5566 00c2 311C     	 mov r1,r6
 5567 00c4 1A1C     	 mov r2,r3
 5568 00c6 231C     	 mov r3,r4
 5569 00c8 FFF7FEFF 	 bl __aeabi_dmul
 5570 00cc 031C     	 mov r3,r0
 5571 00ce 0C1C     	 mov r4,r1
 5572 00d0 181C     	 mov r0,r3
 5573 00d2 211C     	 mov r1,r4
 5574 00d4 FFF7FEFF 	 bl __aeabi_d2f
 5575 00d8 021C     	 add r2,r0,#0
 5576 00da 4D4B     	 ldr r3,.L281+32
 5577 00dc 1A60     	 str r2,[r3]
 814:../main.c     **** 
 815:../main.c     **** 				break;
 5578              	 .loc 6 815 0
 5579 00de 07E0     	 b .L267
 5580              	.L261:
 816:../main.c     **** 
 817:../main.c     **** 			case ROTATE: // rotate ############################################################
 818:../main.c     **** 
 819:../main.c     **** 				break;
 820:../main.c     **** 
 821:../main.c     **** 			default :
 822:../main.c     **** 
 823:../main.c     **** 			act_trajctory_x = 0;
 5581              	 .loc 6 823 0
 5582 00e0 4A4B     	 ldr r3,.L281+28
 5583 00e2 0022     	 mov r2,#0
 5584 00e4 1A60     	 str r2,[r3]
 824:../main.c     **** 			act_trajctory_y = 0;
 5585              	 .loc 6 824 0
 5586 00e6 4A4B     	 ldr r3,.L281+32
 5587 00e8 0022     	 mov r2,#0
 5588 00ea 1A60     	 str r2,[r3]
 5589 00ec 00E0     	 b .L267
 5590              	.L280:
 802:../main.c     **** 
 5591              	 .loc 6 802 0
 5592 00ee C046     	 mov r8,r8
 5593              	.L267:
 825:../main.c     **** 		}
 826:../main.c     **** 
 827:../main.c     **** 		//if(Obstacel_valid[0]){
 828:../main.c     **** 			if(Obstacel_F[0] < CA_START){
 5594              	 .loc 6 828 0
 5595 00f0 484B     	 ldr r3,.L281+36
 5596 00f2 1B68     	 ldr r3,[r3]
 5597 00f4 181C     	 add r0,r3,#0
 5598 00f6 FE21     	 mov r1,#254
 5599 00f8 8905     	 lsl r1,r1,#22
 5600 00fa FFF7FEFF 	 bl __aeabi_fcmplt
 5601 00fe 031E     	 sub r3,r0,#0
 5602 0100 5FD0     	 beq .L268
 829:../main.c     **** 				if(act_trajctory_x > Obstacel_F[0] - CA_STOP){
 5603              	 .loc 6 829 0
 5604 0102 424B     	 ldr r3,.L281+28
 5605 0104 1B68     	 ldr r3,[r3]
 5606 0106 181C     	 add r0,r3,#0
 5607 0108 FFF7FEFF 	 bl __aeabi_f2d
 5608 010c 051C     	 mov r5,r0
 5609 010e 0E1C     	 mov r6,r1
 5610 0110 404B     	 ldr r3,.L281+36
 5611 0112 1B68     	 ldr r3,[r3]
 5612 0114 181C     	 add r0,r3,#0
 5613 0116 FFF7FEFF 	 bl __aeabi_f2d
 5614 011a 031C     	 mov r3,r0
 5615 011c 0C1C     	 mov r4,r1
 5616 011e 181C     	 mov r0,r3
 5617 0120 211C     	 mov r1,r4
 5618 0122 3D4A     	 ldr r2,.L281+40
 5619 0124 3D4B     	 ldr r3,.L281+44
 5620 0126 FFF7FEFF 	 bl __aeabi_dsub
 5621 012a 031C     	 mov r3,r0
 5622 012c 0C1C     	 mov r4,r1
 5623 012e 281C     	 mov r0,r5
 5624 0130 311C     	 mov r1,r6
 5625 0132 1A1C     	 mov r2,r3
 5626 0134 231C     	 mov r3,r4
 5627 0136 FFF7FEFF 	 bl __aeabi_dcmpgt
 5628 013a 031E     	 sub r3,r0,#0
 5629 013c 41D0     	 beq .L268
 5630              	.LBB7:
 830:../main.c     **** 					DIGITAL_IO_SetOutputHigh(&LED_COLLISION_AVOID);
 5631              	 .loc 6 830 0
 5632 013e 2D4B     	 ldr r3,.L281+4
 5633 0140 181C     	 mov r0,r3
 5634 0142 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 831:../main.c     **** 					uint8_t i;
 832:../main.c     **** 					for(i = 0; i < 4; i ++){
 5635              	 .loc 6 832 0
 5636 0146 FB1D     	 add r3,r7,#7
 5637 0148 0022     	 mov r2,#0
 5638 014a 1A70     	 strb r2,[r3]
 5639 014c 35E0     	 b .L271
 5640              	.L275:
 833:../main.c     **** 						if(Obstacel_F[0] < CA_STOP) Speeds[i] = 0;
 5641              	 .loc 6 833 0
 5642 014e 314B     	 ldr r3,.L281+36
 5643 0150 1B68     	 ldr r3,[r3]
 5644 0152 181C     	 add r0,r3,#0
 5645 0154 FFF7FEFF 	 bl __aeabi_f2d
 5646 0158 031C     	 mov r3,r0
 5647 015a 0C1C     	 mov r4,r1
 5648 015c 181C     	 mov r0,r3
 5649 015e 211C     	 mov r1,r4
 5650 0160 2D4A     	 ldr r2,.L281+40
 5651 0162 2E4B     	 ldr r3,.L281+44
 5652 0164 FFF7FEFF 	 bl __aeabi_dcmplt
 5653 0168 031E     	 sub r3,r0,#0
 5654 016a 06D0     	 beq .L279
 5655              	 .loc 6 833 0 is_stmt 0 discriminator 1
 5656 016c FB1D     	 add r3,r7,#7
 5657 016e 1A78     	 ldrb r2,[r3]
 5658 0170 214B     	 ldr r3,.L281+8
 5659 0172 9200     	 lsl r2,r2,#2
 5660 0174 0021     	 mov r1,#0
 5661 0176 D150     	 str r1,[r2,r3]
 5662 0178 1AE0     	 b .L274
 5663              	.L279:
 834:../main.c     **** 						else Speeds[i] = copysign(Obstacel_F[0],1) - CA_STOP;
 5664              	 .loc 6 834 0 is_stmt 1
 5665 017a FB1D     	 add r3,r7,#7
 5666 017c 1C78     	 ldrb r4,[r3]
 5667 017e 254B     	 ldr r3,.L281+36
 5668 0180 1B68     	 ldr r3,[r3]
 5669 0182 5B00     	 lsl r3,r3,#1
 5670 0184 5B08     	 lsr r3,r3,#1
 5671 0186 181C     	 add r0,r3,#0
 5672 0188 FFF7FEFF 	 bl __aeabi_f2d
 5673 018c 021C     	 mov r2,r0
 5674 018e 0B1C     	 mov r3,r1
 5675 0190 101C     	 mov r0,r2
 5676 0192 191C     	 mov r1,r3
 5677 0194 204A     	 ldr r2,.L281+40
 5678 0196 214B     	 ldr r3,.L281+44
 5679 0198 FFF7FEFF 	 bl __aeabi_dsub
 5680 019c 021C     	 mov r2,r0
 5681 019e 0B1C     	 mov r3,r1
 5682 01a0 101C     	 mov r0,r2
 5683 01a2 191C     	 mov r1,r3
 5684 01a4 FFF7FEFF 	 bl __aeabi_d2f
 5685 01a8 011C     	 add r1,r0,#0
 5686 01aa 134B     	 ldr r3,.L281+8
 5687 01ac A200     	 lsl r2,r4,#2
 5688 01ae D150     	 str r1,[r2,r3]
 5689              	.L274:
 832:../main.c     **** 						if(Obstacel_F[0] < CA_STOP) Speeds[i] = 0;
 5690              	 .loc 6 832 0 discriminator 2
 5691 01b0 FB1D     	 add r3,r7,#7
 5692 01b2 1A78     	 ldrb r2,[r3]
 5693 01b4 FB1D     	 add r3,r7,#7
 5694 01b6 0132     	 add r2,r2,#1
 5695 01b8 1A70     	 strb r2,[r3]
 5696              	.L271:
 832:../main.c     **** 						if(Obstacel_F[0] < CA_STOP) Speeds[i] = 0;
 5697              	 .loc 6 832 0 is_stmt 0 discriminator 1
 5698 01ba FB1D     	 add r3,r7,#7
 5699 01bc 1B78     	 ldrb r3,[r3]
 5700 01be 032B     	 cmp r3,#3
 5701 01c0 C5D9     	 bls .L275
 5702              	.L268:
 5703              	.LBE7:
 835:../main.c     **** 					}
 836:../main.c     **** 
 837:../main.c     **** 				}
 838:../main.c     **** 			}
 839:../main.c     **** 
 840:../main.c     **** 		//}
 841:../main.c     **** 
 842:../main.c     **** 
 843:../main.c     **** 	speed_fl = Speeds[0];
 5704              	 .loc 6 843 0 is_stmt 1
 5705 01c2 0D4B     	 ldr r3,.L281+8
 5706 01c4 1A68     	 ldr r2,[r3]
 5707 01c6 164B     	 ldr r3,.L281+48
 5708 01c8 1A60     	 str r2,[r3]
 844:../main.c     **** 	speed_fr = Speeds[1];
 5709              	 .loc 6 844 0
 5710 01ca 0B4B     	 ldr r3,.L281+8
 5711 01cc 5A68     	 ldr r2,[r3,#4]
 5712 01ce 154B     	 ldr r3,.L281+52
 5713 01d0 1A60     	 str r2,[r3]
 845:../main.c     **** 	speed_rl = Speeds[2];
 5714              	 .loc 6 845 0
 5715 01d2 094B     	 ldr r3,.L281+8
 5716 01d4 9A68     	 ldr r2,[r3,#8]
 5717 01d6 144B     	 ldr r3,.L281+56
 5718 01d8 1A60     	 str r2,[r3]
 846:../main.c     **** 	speed_rr = Speeds[3];
 5719              	 .loc 6 846 0
 5720 01da 074B     	 ldr r3,.L281+8
 5721 01dc DA68     	 ldr r2,[r3,#12]
 5722 01de 134B     	 ldr r3,.L281+60
 5723 01e0 1A60     	 str r2,[r3]
 847:../main.c     **** 
 848:../main.c     **** 	CAN_send_Speeds(Speeds);
 5724              	 .loc 6 848 0
 5725 01e2 054B     	 ldr r3,.L281+8
 5726 01e4 181C     	 mov r0,r3
 5727 01e6 FFF7FEFF 	 bl CAN_send_Speeds
 5728              	.L258:
 849:../main.c     **** }
 5729              	 .loc 6 849 0
 5730 01ea BD46     	 mov sp,r7
 5731 01ec 03B0     	 add sp,sp,#12
 5732              	 
 5733 01ee F0BD     	 pop {r4,r5,r6,r7,pc}
 5734              	.L282:
 5735              	 .align 2
 5736              	.L281:
 5737 01f0 00000000 	 .word CAN_Ultrasonic_No_messasge_count
 5738 01f4 00000000 	 .word LED_COLLISION_AVOID
 5739 01f8 00000000 	 .word Speeds
 5740 01fc 00000000 	 .word avg_Speeds
 5741 0200 00000000 	 .word Steering_mode
 5742 0204 00000000 	 .word .L263
 5743 0208 00000000 	 .word Steering_Angles
 5744 020c 00000000 	 .word act_trajctory_x
 5745 0210 00000000 	 .word act_trajctory_y
 5746 0214 00000000 	 .word Obstacel_F
 5747 0218 9A999999 	 .word -1717986918
 5748 021c 9999C93F 	 .word 1070176665
 5749 0220 00000000 	 .word speed_fl
 5750 0224 00000000 	 .word speed_fr
 5751 0228 00000000 	 .word speed_rl
 5752 022c 00000000 	 .word speed_rr
 5753              	 .cfi_endproc
 5754              	.LFE241:
 5756              	 .section .text.Servo_NP_setting,"ax",%progbits
 5757              	 .align 2
 5758              	 .global Servo_NP_setting
 5759              	 .code 16
 5760              	 .thumb_func
 5762              	Servo_NP_setting:
 5763              	.LFB242:
 850:../main.c     **** 
 851:../main.c     **** 
 852:../main.c     **** void Servo_NP_setting(void){
 5764              	 .loc 6 852 0
 5765              	 .cfi_startproc
 5766 0000 80B5     	 push {r7,lr}
 5767              	.LCFI80:
 5768              	 .cfi_def_cfa_offset 8
 5769              	 .cfi_offset 7,-8
 5770              	 .cfi_offset 14,-4
 5771 0002 00AF     	 add r7,sp,#0
 5772              	.LCFI81:
 5773              	 .cfi_def_cfa_register 7
 853:../main.c     **** 	  NP[0] = NPfl;
 5774              	 .loc 6 853 0
 5775 0004 084B     	 ldr r3,.L284
 5776 0006 1A68     	 ldr r2,[r3]
 5777 0008 084B     	 ldr r3,.L284+4
 5778 000a 1A60     	 str r2,[r3]
 854:../main.c     **** 	  NP[1] = NPfr;
 5779              	 .loc 6 854 0
 5780 000c 084B     	 ldr r3,.L284+8
 5781 000e 1A68     	 ldr r2,[r3]
 5782 0010 064B     	 ldr r3,.L284+4
 5783 0012 5A60     	 str r2,[r3,#4]
 855:../main.c     **** 	  NP[2] = NPrl;
 5784              	 .loc 6 855 0
 5785 0014 074B     	 ldr r3,.L284+12
 5786 0016 1A68     	 ldr r2,[r3]
 5787 0018 044B     	 ldr r3,.L284+4
 5788 001a 9A60     	 str r2,[r3,#8]
 856:../main.c     **** 	  NP[3] = NPrr;
 5789              	 .loc 6 856 0
 5790 001c 064B     	 ldr r3,.L284+16
 5791 001e 1A68     	 ldr r2,[r3]
 5792 0020 024B     	 ldr r3,.L284+4
 5793 0022 DA60     	 str r2,[r3,#12]
 857:../main.c     **** }
 5794              	 .loc 6 857 0
 5795 0024 BD46     	 mov sp,r7
 5796              	 
 5797 0026 80BD     	 pop {r7,pc}
 5798              	.L285:
 5799              	 .align 2
 5800              	.L284:
 5801 0028 00000000 	 .word NPfl
 5802 002c 00000000 	 .word NP
 5803 0030 00000000 	 .word NPfr
 5804 0034 00000000 	 .word NPrl
 5805 0038 00000000 	 .word NPrr
 5806              	 .cfi_endproc
 5807              	.LFE242:
 5809              	 .section .text.average,"ax",%progbits
 5810              	 .align 2
 5811              	 .global average
 5812              	 .code 16
 5813              	 .thumb_func
 5815              	average:
 5816              	.LFB243:
 858:../main.c     **** 
 859:../main.c     **** float average(float a[],int num_values) {
 5817              	 .loc 6 859 0
 5818              	 .cfi_startproc
 5819 0000 80B5     	 push {r7,lr}
 5820              	.LCFI82:
 5821              	 .cfi_def_cfa_offset 8
 5822              	 .cfi_offset 7,-8
 5823              	 .cfi_offset 14,-4
 5824 0002 84B0     	 sub sp,sp,#16
 5825              	.LCFI83:
 5826              	 .cfi_def_cfa_offset 24
 5827 0004 00AF     	 add r7,sp,#0
 5828              	.LCFI84:
 5829              	 .cfi_def_cfa_register 7
 5830 0006 7860     	 str r0,[r7,#4]
 5831 0008 3960     	 str r1,[r7]
 860:../main.c     ****     float sum = 0;
 5832              	 .loc 6 860 0
 5833 000a 0023     	 mov r3,#0
 5834 000c FB60     	 str r3,[r7,#12]
 861:../main.c     ****     int i;
 862:../main.c     ****     for(i = 0; i < num_values; i++){
 5835              	 .loc 6 862 0
 5836 000e 0023     	 mov r3,#0
 5837 0010 BB60     	 str r3,[r7,#8]
 5838 0012 0DE0     	 b .L287
 5839              	.L288:
 863:../main.c     ****         sum += a[i];
 5840              	 .loc 6 863 0 discriminator 3
 5841 0014 BB68     	 ldr r3,[r7,#8]
 5842 0016 9B00     	 lsl r3,r3,#2
 5843 0018 7A68     	 ldr r2,[r7,#4]
 5844 001a D318     	 add r3,r2,r3
 5845 001c 1B68     	 ldr r3,[r3]
 5846 001e F868     	 ldr r0,[r7,#12]
 5847 0020 191C     	 add r1,r3,#0
 5848 0022 FFF7FEFF 	 bl __aeabi_fadd
 5849 0026 031C     	 add r3,r0,#0
 5850 0028 FB60     	 str r3,[r7,#12]
 862:../main.c     ****         sum += a[i];
 5851              	 .loc 6 862 0 discriminator 3
 5852 002a BB68     	 ldr r3,[r7,#8]
 5853 002c 0133     	 add r3,r3,#1
 5854 002e BB60     	 str r3,[r7,#8]
 5855              	.L287:
 862:../main.c     ****         sum += a[i];
 5856              	 .loc 6 862 0 is_stmt 0 discriminator 1
 5857 0030 BA68     	 ldr r2,[r7,#8]
 5858 0032 3B68     	 ldr r3,[r7]
 5859 0034 9A42     	 cmp r2,r3
 5860 0036 EDDB     	 blt .L288
 864:../main.c     ****     }
 865:../main.c     ****     return sum / num_values;
 5861              	 .loc 6 865 0 is_stmt 1
 5862 0038 3868     	 ldr r0,[r7]
 5863 003a FFF7FEFF 	 bl __aeabi_i2f
 5864 003e 031C     	 add r3,r0,#0
 5865 0040 F868     	 ldr r0,[r7,#12]
 5866 0042 191C     	 add r1,r3,#0
 5867 0044 FFF7FEFF 	 bl __aeabi_fdiv
 5868 0048 031C     	 add r3,r0,#0
 866:../main.c     **** }
 5869              	 .loc 6 866 0
 5870 004a 181C     	 add r0,r3,#0
 5871 004c BD46     	 mov sp,r7
 5872 004e 04B0     	 add sp,sp,#16
 5873              	 
 5874 0050 80BD     	 pop {r7,pc}
 5875              	 .cfi_endproc
 5876              	.LFE243:
 5878 0052 C046     	 .section .text.mode_led,"ax",%progbits
 5879              	 .align 2
 5880              	 .global mode_led
 5881              	 .code 16
 5882              	 .thumb_func
 5884              	mode_led:
 5885              	.LFB244:
 867:../main.c     **** 
 868:../main.c     **** void mode_led(uint8_t var){
 5886              	 .loc 6 868 0
 5887              	 .cfi_startproc
 5888 0000 80B5     	 push {r7,lr}
 5889              	.LCFI85:
 5890              	 .cfi_def_cfa_offset 8
 5891              	 .cfi_offset 7,-8
 5892              	 .cfi_offset 14,-4
 5893 0002 82B0     	 sub sp,sp,#8
 5894              	.LCFI86:
 5895              	 .cfi_def_cfa_offset 16
 5896 0004 00AF     	 add r7,sp,#0
 5897              	.LCFI87:
 5898              	 .cfi_def_cfa_register 7
 5899 0006 021C     	 mov r2,r0
 5900 0008 FB1D     	 add r3,r7,#7
 5901 000a 1A70     	 strb r2,[r3]
 869:../main.c     **** 	if(CHECK_BIT(var,0)){
 5902              	 .loc 6 869 0
 5903 000c FB1D     	 add r3,r7,#7
 5904 000e 1B78     	 ldrb r3,[r3]
 5905 0010 0122     	 mov r2,#1
 5906 0012 1340     	 and r3,r2
 5907 0014 04D0     	 beq .L291
 870:../main.c     **** 		DIGITAL_IO_SetOutputLow(&MODE_001);
 5908              	 .loc 6 870 0
 5909 0016 174B     	 ldr r3,.L297
 5910 0018 181C     	 mov r0,r3
 5911 001a FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 5912 001e 03E0     	 b .L292
 5913              	.L291:
 871:../main.c     **** 	}
 872:../main.c     **** 	else{
 873:../main.c     **** 		DIGITAL_IO_SetOutputHigh(&MODE_001);
 5914              	 .loc 6 873 0
 5915 0020 144B     	 ldr r3,.L297
 5916 0022 181C     	 mov r0,r3
 5917 0024 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 5918              	.L292:
 874:../main.c     **** 	}
 875:../main.c     **** 
 876:../main.c     **** 	if(CHECK_BIT(var,1)){
 5919              	 .loc 6 876 0
 5920 0028 FB1D     	 add r3,r7,#7
 5921 002a 1B78     	 ldrb r3,[r3]
 5922 002c 5B08     	 lsr r3,r3,#1
 5923 002e DBB2     	 uxtb r3,r3
 5924 0030 1A1C     	 mov r2,r3
 5925 0032 0123     	 mov r3,#1
 5926 0034 1340     	 and r3,r2
 5927 0036 04D0     	 beq .L293
 877:../main.c     **** 		DIGITAL_IO_SetOutputLow(&MODE_010);
 5928              	 .loc 6 877 0
 5929 0038 0F4B     	 ldr r3,.L297+4
 5930 003a 181C     	 mov r0,r3
 5931 003c FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 5932 0040 03E0     	 b .L294
 5933              	.L293:
 878:../main.c     **** 	}
 879:../main.c     **** 	else{
 880:../main.c     **** 		DIGITAL_IO_SetOutputHigh(&MODE_010);
 5934              	 .loc 6 880 0
 5935 0042 0D4B     	 ldr r3,.L297+4
 5936 0044 181C     	 mov r0,r3
 5937 0046 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 5938              	.L294:
 881:../main.c     **** 	}
 882:../main.c     **** 
 883:../main.c     **** 	if(CHECK_BIT(var,2)){
 5939              	 .loc 6 883 0
 5940 004a FB1D     	 add r3,r7,#7
 5941 004c 1B78     	 ldrb r3,[r3]
 5942 004e 9B08     	 lsr r3,r3,#2
 5943 0050 DBB2     	 uxtb r3,r3
 5944 0052 1A1C     	 mov r2,r3
 5945 0054 0123     	 mov r3,#1
 5946 0056 1340     	 and r3,r2
 5947 0058 04D0     	 beq .L295
 884:../main.c     **** 		DIGITAL_IO_SetOutputLow(&MODE_100);
 5948              	 .loc 6 884 0
 5949 005a 084B     	 ldr r3,.L297+8
 5950 005c 181C     	 mov r0,r3
 5951 005e FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 5952 0062 03E0     	 b .L290
 5953              	.L295:
 885:../main.c     **** 	}
 886:../main.c     **** 	else{
 887:../main.c     **** 		DIGITAL_IO_SetOutputHigh(&MODE_100);
 5954              	 .loc 6 887 0
 5955 0064 054B     	 ldr r3,.L297+8
 5956 0066 181C     	 mov r0,r3
 5957 0068 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 5958              	.L290:
 888:../main.c     **** 	}
 889:../main.c     **** }
 5959              	 .loc 6 889 0
 5960 006c BD46     	 mov sp,r7
 5961 006e 02B0     	 add sp,sp,#8
 5962              	 
 5963 0070 80BD     	 pop {r7,pc}
 5964              	.L298:
 5965 0072 C046     	 .align 2
 5966              	.L297:
 5967 0074 00000000 	 .word MODE_001
 5968 0078 00000000 	 .word MODE_010
 5969 007c 00000000 	 .word MODE_100
 5970              	 .cfi_endproc
 5971              	.LFE244:
 5973              	 .text
 5974              	.Letext0:
 5975              	 .file 7 "c:\\dave\\dave-ide-4.4.2-64bit\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 5976              	 .file 8 "c:\\dave\\dave-ide-4.4.2-64bit\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 5977              	 .file 9 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/CMSIS/Infineon/XMC1400_series/Include/XMC1400.h"
 5978              	 .file 10 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc/xmc1_scu.h"
 5979              	 .file 11 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc/xmc_can.h"
 5980              	 .file 12 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/GLOBAL_CAN/global_can.h"
 5981              	 .file 13 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc/xmc1_gpio.h"
 5982              	 .file 14 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/CAN_NODE/can_node.h"
 5983              	 .file 15 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc/xmc_ccu4.h"
 5984              	 .file 16 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/GLOBAL_CCU4/global_ccu4.h"
 5985              	 .file 17 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PWM/pwm.h"
 5986              	 .file 18 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/CAPTURE/capture.h"
 5987              	 .file 19 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc/xmc_eru.h"
 5988              	 .file 20 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DAVE.h"
 5989              	 .file 21 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/CMSIS/Include/cmsis_gcc.h"
 5990              	 .file 22 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/CMSIS/Infineon/XMC1400_series/Include/system_XMC1400.h"
 5991              	 .file 23 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/CAN_NODE/can_node_extern.h"
 5992              	 .file 24 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PWM/PWM_Extern.h"
 5993              	 .file 25 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/CAPTURE/capture_extern.h"
 5994              	 .file 26 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO/digital_io_extern.h"
 5995              	 .file 27 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT/pin_interrupt_extern.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
    {standard input}:18     .text.XMC_GPIO_SetOutputHigh:00000000 $t
    {standard input}:22     .text.XMC_GPIO_SetOutputHigh:00000000 XMC_GPIO_SetOutputHigh
    {standard input}:58     .text.XMC_GPIO_SetOutputLow:00000000 $t
    {standard input}:62     .text.XMC_GPIO_SetOutputLow:00000000 XMC_GPIO_SetOutputLow
    {standard input}:98     .text.XMC_GPIO_GetInput:00000000 $t
    {standard input}:102    .text.XMC_GPIO_GetInput:00000000 XMC_GPIO_GetInput
    {standard input}:140    .text.DIGITAL_IO_SetOutputHigh:00000000 $t
    {standard input}:144    .text.DIGITAL_IO_SetOutputHigh:00000000 DIGITAL_IO_SetOutputHigh
    {standard input}:178    .text.DIGITAL_IO_SetOutputLow:00000000 $t
    {standard input}:182    .text.DIGITAL_IO_SetOutputLow:00000000 DIGITAL_IO_SetOutputLow
    {standard input}:215    .text.PIN_INTERRUPT_GetPinValue:00000000 $t
    {standard input}:219    .text.PIN_INTERRUPT_GetPinValue:00000000 PIN_INTERRUPT_GetPinValue
    {standard input}:255    .text.XMC_WDT_Start:00000000 $t
    {standard input}:259    .text.XMC_WDT_Start:00000000 XMC_WDT_Start
    {standard input}:286    .text.XMC_WDT_Start:00000014 $d
    {standard input}:291    .text.XMC_WDT_Service:00000000 $t
    {standard input}:295    .text.XMC_WDT_Service:00000000 XMC_WDT_Service
    {standard input}:318    .text.XMC_WDT_Service:00000010 $d
    {standard input}:324    .text.XMC_WDT_ClearAlarm:00000000 $t
    {standard input}:328    .text.XMC_WDT_ClearAlarm:00000000 XMC_WDT_ClearAlarm
    {standard input}:351    .text.XMC_WDT_ClearAlarm:00000010 $d
    {standard input}:356    .text.WATCHDOG_Start:00000000 $t
    {standard input}:360    .text.WATCHDOG_Start:00000000 WATCHDOG_Start
    {standard input}:383    .text.WATCHDOG_Service:00000000 $t
    {standard input}:387    .text.WATCHDOG_Service:00000000 WATCHDOG_Service
    {standard input}:409    .text.WATCHDOG_ClearAlarm:00000000 $t
    {standard input}:413    .text.WATCHDOG_ClearAlarm:00000000 WATCHDOG_ClearAlarm
    {standard input}:439    .data.NP:00000000 NP
    {standard input}:436    .data.NP:00000000 $d
    {standard input}:449    .data.NPfl:00000000 NPfl
    {standard input}:446    .data.NPfl:00000000 $d
    {standard input}:456    .data.NPfr:00000000 NPfr
    {standard input}:453    .data.NPfr:00000000 $d
    {standard input}:463    .data.NPrl:00000000 NPrl
    {standard input}:460    .data.NPrl:00000000 $d
    {standard input}:470    .data.NPrr:00000000 NPrr
    {standard input}:467    .data.NPrr:00000000 $d
    {standard input}:476    .data.RC_controll:00000000 RC_controll
    {standard input}:482    .data.Steering_mode:00000000 Steering_mode
    {standard input}:488    .bss.New_Input:00000000 New_Input
    {standard input}:489    .bss.New_Input:00000000 $d
    {standard input}:495    .bss.NO_New_Input_counter:00000000 NO_New_Input_counter
    {standard input}:492    .bss.NO_New_Input_counter:00000000 $d
    {standard input}:502    .bss.Speeds_int16_r:00000000 Speeds_int16_r
    {standard input}:499    .bss.Speeds_int16_r:00000000 $d
    {standard input}:509    .bss.CAN_RX_0:00000000 CAN_RX_0
    {standard input}:506    .bss.CAN_RX_0:00000000 $d
                            *COM*:00000001 init_status
    {standard input}:517    .bss.CAN_OK:00000000 CAN_OK
    {standard input}:514    .bss.CAN_OK:00000000 $d
    {standard input}:524    .bss.Inverters_CAN_state:00000000 Inverters_CAN_state
    {standard input}:521    .bss.Inverters_CAN_state:00000000 $d
    {standard input}:531    .bss.CAN_10ms_counter:00000000 CAN_10ms_counter
    {standard input}:528    .bss.CAN_10ms_counter:00000000 $d
    {standard input}:537    .bss.reset_distance:00000000 reset_distance
    {standard input}:538    .bss.reset_distance:00000000 $d
    {standard input}:544    .bss.speed_fl_act:00000000 speed_fl_act
    {standard input}:541    .bss.speed_fl_act:00000000 $d
    {standard input}:551    .bss.speed_fr_act:00000000 speed_fr_act
    {standard input}:548    .bss.speed_fr_act:00000000 $d
    {standard input}:558    .bss.speed_rl_act:00000000 speed_rl_act
    {standard input}:555    .bss.speed_rl_act:00000000 $d
    {standard input}:565    .bss.speed_rr_act:00000000 speed_rr_act
    {standard input}:562    .bss.speed_rr_act:00000000 $d
    {standard input}:572    .bss.distance_fl_act:00000000 distance_fl_act
    {standard input}:569    .bss.distance_fl_act:00000000 $d
    {standard input}:579    .bss.distance_fr_act:00000000 distance_fr_act
    {standard input}:576    .bss.distance_fr_act:00000000 $d
    {standard input}:586    .bss.distance_rl_act:00000000 distance_rl_act
    {standard input}:583    .bss.distance_rl_act:00000000 $d
    {standard input}:593    .bss.distance_rr_act:00000000 distance_rr_act
    {standard input}:590    .bss.distance_rr_act:00000000 $d
    {standard input}:599    .bss.CAN_RX_Inverter_count:00000000 CAN_RX_Inverter_count
    {standard input}:600    .bss.CAN_RX_Inverter_count:00000000 $d
    {standard input}:605    .data.CAN_Ultrasonic_No_messasge_count:00000000 CAN_Ultrasonic_No_messasge_count
    {standard input}:611    .bss.CAN_state_Ultrasonic:00000000 CAN_state_Ultrasonic
    {standard input}:612    .bss.CAN_state_Ultrasonic:00000000 $d
    {standard input}:618    .bss.Ultrasonic_cm_C:00000000 Ultrasonic_cm_C
    {standard input}:615    .bss.Ultrasonic_cm_C:00000000 $d
    {standard input}:625    .bss.Ultrasonic_cm_L:00000000 Ultrasonic_cm_L
    {standard input}:622    .bss.Ultrasonic_cm_L:00000000 $d
    {standard input}:632    .bss.Ultrasonic_cm_R:00000000 Ultrasonic_cm_R
    {standard input}:629    .bss.Ultrasonic_cm_R:00000000 $d
    {standard input}:639    .data.ALPHA_ULTARSONIC:00000000 ALPHA_ULTARSONIC
    {standard input}:636    .data.ALPHA_ULTARSONIC:00000000 $d
    {standard input}:645    .bss.obstructed_L:00000000 obstructed_L
    {standard input}:646    .bss.obstructed_L:00000000 $d
    {standard input}:651    .bss.obstructed_R:00000000 obstructed_R
    {standard input}:652    .bss.obstructed_R:00000000 $d
    {standard input}:658    .data.Fil_Ultrasonic_m_C:00000000 Fil_Ultrasonic_m_C
    {standard input}:655    .data.Fil_Ultrasonic_m_C:00000000 $d
    {standard input}:665    .data.Fil_Ultrasonic_m_L:00000000 Fil_Ultrasonic_m_L
    {standard input}:662    .data.Fil_Ultrasonic_m_L:00000000 $d
    {standard input}:672    .data.Fil_Ultrasonic_m_R:00000000 Fil_Ultrasonic_m_R
    {standard input}:669    .data.Fil_Ultrasonic_m_R:00000000 $d
    {standard input}:679    .data.Ultrsonic_data_invaildcounter:00000000 Ultrsonic_data_invaildcounter
    {standard input}:676    .data.Ultrsonic_data_invaildcounter:00000000 $d
    {standard input}:688    .data.Obstacel_F:00000000 Obstacel_F
    {standard input}:685    .data.Obstacel_F:00000000 $d
    {standard input}:696    .data.Obstacel_L:00000000 Obstacel_L
    {standard input}:693    .data.Obstacel_L:00000000 $d
    {standard input}:704    .data.Obstacel_R:00000000 Obstacel_R
    {standard input}:701    .data.Obstacel_R:00000000 $d
    {standard input}:712    .bss.obstacel_F_x:00000000 obstacel_F_x
    {standard input}:709    .bss.obstacel_F_x:00000000 $d
    {standard input}:719    .bss.obstacel_L_x:00000000 obstacel_L_x
    {standard input}:716    .bss.obstacel_L_x:00000000 $d
    {standard input}:726    .bss.obstacel_L_y:00000000 obstacel_L_y
    {standard input}:723    .bss.obstacel_L_y:00000000 $d
    {standard input}:733    .bss.obstacel_R_x:00000000 obstacel_R_x
    {standard input}:730    .bss.obstacel_R_x:00000000 $d
    {standard input}:740    .bss.obstacel_R_y:00000000 obstacel_R_y
    {standard input}:737    .bss.obstacel_R_y:00000000 $d
    {standard input}:747    .bss.Obstacel_valid:00000000 Obstacel_valid
    {standard input}:744    .bss.Obstacel_valid:00000000 $d
    {standard input}:754    .bss.avg_Speeds:00000000 avg_Speeds
    {standard input}:751    .bss.avg_Speeds:00000000 $d
    {standard input}:761    .bss.act_trajctory_x:00000000 act_trajctory_x
    {standard input}:758    .bss.act_trajctory_x:00000000 $d
    {standard input}:768    .bss.act_trajctory_y:00000000 act_trajctory_y
    {standard input}:765    .bss.act_trajctory_y:00000000 $d
    {standard input}:774    .bss.RC_Signal_OK:00000000 RC_Signal_OK
    {standard input}:775    .bss.RC_Signal_OK:00000000 $d
    {standard input}:780    .bss.RC_Signal_not_OK_counter:00000000 RC_Signal_not_OK_counter
    {standard input}:781    .bss.RC_Signal_not_OK_counter:00000000 $d
    {standard input}:787    .bss.captured_time_Steering:00000000 captured_time_Steering
    {standard input}:784    .bss.captured_time_Steering:00000000 $d
    {standard input}:794    .bss.captured_time_Speed:00000000 captured_time_Speed
    {standard input}:791    .bss.captured_time_Speed:00000000 $d
    {standard input}:800    .bss.RC_no_Speed_data_counter:00000000 RC_no_Speed_data_counter
    {standard input}:801    .bss.RC_no_Speed_data_counter:00000000 $d
    {standard input}:806    .bss.RC_no_Steering_data_counter:00000000 RC_no_Steering_data_counter
    {standard input}:807    .bss.RC_no_Steering_data_counter:00000000 $d
    {standard input}:813    .bss.RC_Speed:00000000 RC_Speed
    {standard input}:810    .bss.RC_Speed:00000000 $d
    {standard input}:820    .bss.RC_Steering:00000000 RC_Steering
    {standard input}:817    .bss.RC_Steering:00000000 $d
    {standard input}:827    .data.RC_Speed_ns_to_mps:00000000 RC_Speed_ns_to_mps
    {standard input}:824    .data.RC_Speed_ns_to_mps:00000000 $d
    {standard input}:834    .data.RC_Steering_ns_to_deg:00000000 RC_Steering_ns_to_deg
    {standard input}:831    .data.RC_Steering_ns_to_deg:00000000 $d
    {standard input}:841    .bss.RC_gear_100us_counter:00000000 RC_gear_100us_counter
    {standard input}:838    .bss.RC_gear_100us_counter:00000000 $d
    {standard input}:848    .bss.RC_AUX1_100us_counter:00000000 RC_AUX1_100us_counter
    {standard input}:845    .bss.RC_AUX1_100us_counter:00000000 $d
    {standard input}:854    .data.RC_Gear_state:00000000 RC_Gear_state
    {standard input}:860    .data.RC_AUX1_state:00000000 RC_AUX1_state
    {standard input}:866    .data.RC_Gear_duty:00000000 RC_Gear_duty
    {standard input}:872    .data.RC_Gear_duty_OLD:00000000 RC_Gear_duty_OLD
    {standard input}:878    .data.RC_AUX1_duty:00000000 RC_AUX1_duty
    {standard input}:884    .data.RC_Speed_Stop:00000000 RC_Speed_Stop
    {standard input}:891    .bss.Steering_direction:00000000 Steering_direction
    {standard input}:888    .bss.Steering_direction:00000000 $d
    {standard input}:898    .bss.Driving_speed:00000000 Driving_speed
    {standard input}:895    .bss.Driving_speed:00000000 $d
                            *COM*:00000004 R_Turn
                            *COM*:00000004 Speed_ratio
    {standard input}:907    .bss.speed_fl:00000000 speed_fl
    {standard input}:904    .bss.speed_fl:00000000 $d
    {standard input}:914    .bss.speed_fr:00000000 speed_fr
    {standard input}:911    .bss.speed_fr:00000000 $d
    {standard input}:921    .bss.speed_rl:00000000 speed_rl
    {standard input}:918    .bss.speed_rl:00000000 $d
    {standard input}:928    .bss.speed_rr:00000000 speed_rr
    {standard input}:925    .bss.speed_rr:00000000 $d
    {standard input}:935    .bss.angle_fl:00000000 angle_fl
    {standard input}:932    .bss.angle_fl:00000000 $d
    {standard input}:942    .bss.angle_fr:00000000 angle_fr
    {standard input}:939    .bss.angle_fr:00000000 $d
    {standard input}:949    .bss.angle_rl:00000000 angle_rl
    {standard input}:946    .bss.angle_rl:00000000 $d
    {standard input}:956    .bss.angle_rr:00000000 angle_rr
    {standard input}:953    .bss.angle_rr:00000000 $d
    {standard input}:963    .bss.Speeds:00000000 Speeds
    {standard input}:960    .bss.Speeds:00000000 $d
    {standard input}:970    .bss.Steering_Angles:00000000 Steering_Angles
    {standard input}:967    .bss.Steering_Angles:00000000 $d
    {standard input}:977    .bss.Servo_PWMs:00000000 Servo_PWMs
    {standard input}:974    .bss.Servo_PWMs:00000000 $d
    {standard input}:984    .bss.Inveter_CAN_OK:00000000 Inveter_CAN_OK
    {standard input}:981    .bss.Inveter_CAN_OK:00000000 $d
    {standard input}:991    .bss.Actual_Speeds:00000000 Actual_Speeds
    {standard input}:988    .bss.Actual_Speeds:00000000 $d
    {standard input}:998    .bss.Actual_Distance:00000000 Actual_Distance
    {standard input}:995    .bss.Actual_Distance:00000000 $d
    {standard input}:1001   .text.main:00000000 $t
    {standard input}:1006   .text.main:00000000 main
    {standard input}:1063   .text.main:00000040 $d
    {standard input}:1082   .text.Steering_Function:00000000 $t
    {standard input}:1087   .text.Steering_Function:00000000 Steering_Function
    {standard input}:1222   .rodata.Steering_Function:00000000 $d
    {standard input}:1487   .text.Steering_Function:000002f0 $d
    {standard input}:1514   .text.Steering_Function:00000354 $t
    {standard input}:1938   .text.Steering_Function:000006b8 $d
    {standard input}:1966   .text.Steering_Function:00000720 $t
    {standard input}:2406   .text.Steering_Function:00000aa0 $d
    {standard input}:2436   .text.Steering_Function:00000b10 $t
    {standard input}:2856   .text.Steering_Function:00000ddc $d
    {standard input}:2888   .text.IRQ4_Handler:00000000 $t
    {standard input}:2893   .text.IRQ4_Handler:00000000 IRQ4_Handler
    {standard input}:3064   .text.Ultra_sonic_filter:00000000 Ultra_sonic_filter
    {standard input}:3045   .text.IRQ4_Handler:000000f4 $d
    {standard input}:3059   .text.Ultra_sonic_filter:00000000 $t
    {standard input}:3719   .text.Exp_moving_average:00000000 Exp_moving_average
    {standard input}:3560   .text.Ultrasoinc_Obstructet_Test:00000000 Ultrasoinc_Obstructet_Test
    {standard input}:3530   .text.Ultra_sonic_filter:00000354 $d
    {standard input}:3555   .text.Ultrasoinc_Obstructet_Test:00000000 $t
    {standard input}:3708   .text.Ultrasoinc_Obstructet_Test:00000104 $d
    {standard input}:3714   .text.Exp_moving_average:00000000 $t
    {standard input}:3767   .text.IRQ3_Handler:00000000 $t
    {standard input}:3772   .text.IRQ3_Handler:00000000 IRQ3_Handler
    {standard input}:3825   .text.CAN_RX_Inverter_Read_Data:00000000 CAN_RX_Inverter_Read_Data
    {standard input}:3814   .text.IRQ3_Handler:00000030 $d
    {standard input}:3820   .text.CAN_RX_Inverter_Read_Data:00000000 $t
    {standard input}:4196   .text.CAN_RX_Inverter_Read_Data:0000026c $d
    {standard input}:4214   .text.Watchdog_Handler:00000000 $t
    {standard input}:4219   .text.Watchdog_Handler:00000000 Watchdog_Handler
    {standard input}:4244   .text.Watchdog_Handler:00000014 $d
    {standard input}:4249   .text.CAN_reset_distance:00000000 $t
    {standard input}:4254   .text.CAN_reset_distance:00000000 CAN_reset_distance
    {standard input}:4332   .text.CAN_reset_distance:00000070 $d
    {standard input}:4338   .text.CAN_send_Speeds:00000000 $t
    {standard input}:4343   .text.CAN_send_Speeds:00000000 CAN_send_Speeds
    {standard input}:4436   .text.CAN_send_Speeds:000000a8 $d
    {standard input}:4442   .text.IRQ8_Handler:00000000 $t
    {standard input}:4447   .text.IRQ8_Handler:00000000 IRQ8_Handler
    {standard input}:4492   .text.IRQ8_Handler:00000030 $d
    {standard input}:4501   .text.Steering_set_Angles:00000000 $t
    {standard input}:4506   .text.Steering_set_Angles:00000000 Steering_set_Angles
    {standard input}:4663   .text.Steering_set_Angles:00000104 $d
    {standard input}:4677   .text.RC_Recive:00000000 $t
    {standard input}:4682   .text.RC_Recive:00000000 RC_Recive
    {standard input}:4966   .text.RC_Recive:000001e8 $d
    {standard input}:4992   .text.IRQ12_Handler:00000000 $t
    {standard input}:4997   .text.IRQ12_Handler:00000000 IRQ12_Handler
    {standard input}:5123   .text.IRQ12_Handler:000000ac $d
    {standard input}:5134   .text.IRQ6_Handler:00000000 $t
    {standard input}:5139   .text.IRQ6_Handler:00000000 IRQ6_Handler
    {standard input}:5242   .text.IRQ6_Handler:00000084 $d
    {standard input}:5252   .rodata:00000000 $d
    {standard input}:5259   .text.IRQ7_Handler:00000000 $t
    {standard input}:5264   .text.IRQ7_Handler:00000000 IRQ7_Handler
    {standard input}:5884   .text.mode_led:00000000 mode_led
    {standard input}:5443   .text.Collision_voidance:00000000 Collision_voidance
    {standard input}:5422   .text.IRQ7_Handler:000000ec $d
    {standard input}:5438   .text.Collision_voidance:00000000 $t
    {standard input}:5815   .text.average:00000000 average
    {standard input}:5506   .rodata.Collision_voidance:00000000 $d
    {standard input}:5737   .text.Collision_voidance:000001f0 $d
    {standard input}:5757   .text.Servo_NP_setting:00000000 $t
    {standard input}:5762   .text.Servo_NP_setting:00000000 Servo_NP_setting
    {standard input}:5801   .text.Servo_NP_setting:00000028 $d
    {standard input}:5810   .text.average:00000000 $t
    {standard input}:5879   .text.mode_led:00000000 $t
    {standard input}:5967   .text.mode_led:00000074 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
DAVE_Init
CAN_NODE_Init
CAN_NODE_0
__aeabi_fcmpgt
__aeabi_fcmplt
__aeabi_f2d
__aeabi_dcmplt
__aeabi_dcmpgt
__aeabi_ddiv
__aeabi_d2f
__aeabi_dadd
__aeabi_dmul
__aeabi_dsub
__aeabi_fmul
__aeabi_fdiv
tan
atan
CAN_NODE_MO_Receive
WATCHDOG_LED_BLUE
__aeabi_i2f
cos
sin
__aeabi_fsub
__aeabi_fcmple
__aeabi_fadd
LED_CAN_ERROR
CAN_NODE_MO_UpdateData
CAN_NODE_MO_Transmit
__aeabi_f2iz
__aeabi_f2uiz
PWM_SetDutyCycle
PWM_servo_fl
PWM_servo_fr
PWM_servo_rl
PWM_servo_rr
__aeabi_ui2d
CAPTURE_Start
CAPTURE_GetCapturedTimeInNanoSec
CAPTURE_RC_Steering
CAPTURE_RC_Speed
RC_no_data_LED
RC_Connected
RC_AUX1
memcpy
CALC_TIME_INDICATOR
LED_COLLISION_AVOID
MODE_001
MODE_010
MODE_100
