   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,6
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "main.c"
  14              	 .text
  15              	.Ltext0:
  16              	 .cfi_sections .debug_frame
  17              	 .section .text.XMC_GPIO_SetOutputHigh,"ax",%progbits
  18              	 .align 2
  19              	 .code 16
  20              	 .thumb_func
  22              	XMC_GPIO_SetOutputHigh:
  23              	.LFB122:
  24              	 .file 1 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc/xmc_gpio.h"
   1:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
   2:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @file xmc_gpio.h
   3:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @date 2015-06-20
   4:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   5:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @cond
   6:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *****************************************************************************
   7:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   9:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * All rights reserved.
  11:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  12:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  14:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Permission is hereby granted, free of charge, to any person or organization
  15:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * obtaining a copy of the software and accompanying documentation covered by
  16:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * do so, all subject to the following:
  20:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  21:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * The copyright notices in the Software and this entire statement, including
  22:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * the above license grant, this restriction and the following disclaimer,
  23:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * must be included in all copies of the Software, in whole or in part, and
  24:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * all derivative works of the Software, unless such copies or derivative
  25:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * works are solely in the form of machine-executable object code generated by
  26:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * a source language processor.
  27:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  28:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * DEALINGS IN THE SOFTWARE.
  35:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  36:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * To improve the quality of the software, users are encouraged to share
  37:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * at XMCSupport@infineon.com.
  39:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *****************************************************************************
  40:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  41:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Change History
  42:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * --------------
  43:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  44:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-02-20:
  45:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Initial draft<br>
  46:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Documentation improved <br>
  47:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  48:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-06-20:
  49:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  50:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  51:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @endcond
  52:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  53:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  54:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
  55:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #ifndef XMC_GPIO_H
  56:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_H
  57:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
  58:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  59:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * HEADER FILES
  60:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  61:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
  62:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc_common.h"
  63:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
  64:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  65:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup XMClib XMC Peripheral Library
  66:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @{
  67:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  68:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
  69:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  70:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup GPIO
  71:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @brief General Purpose Input Output (GPIO) driver for the XMC microcontroller family.
  72:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  73:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * GPIO driver provide a generic and very flexible software interface for all standard digital I/O 
  74:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Each port slice has individual interfaces for the operation as General Purpose I/O and it furthe
  75:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * connectivity to the on-chip periphery and the control for the pad characteristics.
  76:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  77:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * The driver is divided into Input and Output mode.
  78:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  79:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Input mode features:
  80:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Configuration structure XMC_GPIO_CONFIG_t and initialization function XMC_GPIO_Init()
  81:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of weak pull-up or pull-down device. Configuration structure XMC_GPIO_MO
  82:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
  83:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of input hysteresis. XMC_GPIO_SetInputHysteresis()
  84:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  85:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  86:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  87:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Output mode features:
  88:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of push pull/open drain and Alternate output. Configuration structure XM
  89:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
  90:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of pad driver strength. Configuration structure XMC_GPIO_OUTPUT_STRENGTH
  91:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  92:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  93:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of initial output level. Configuration structure XMC_GPIO_OUTPUT_LEVEL_t
  94:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  95:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *@{
  96:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  97:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
  98:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  99:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * MACROS
 100:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 101:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 102:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Pos PORT0_IOCR0_PC0_Pos
 103:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Msk PORT0_IOCR0_PC0_Msk
 104:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 105:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Size 				(8U)
 106:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 107:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 108:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_OUTPUT_LEVEL(level) ((level == XMC_GPIO_OUTPUT_LEVEL_LOW) || \
 109:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****                                             (level == XMC_GPIO_OUTPUT_LEVEL_HIGH))
 110:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 111:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_HWCTRL(hwctrl) ((hwctrl == XMC_GPIO_HWCTRL_DISABLED) || \
 112:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL1) || \
 113:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL2))
 114:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 115:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 116:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * ENUMS
 117:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 118:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 119:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 120:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 121:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines output level of a pin. Use type \a XMC_GPIO_OUTPUT_LEVEL_t for this enum.
 122:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 123:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_OUTPUT_LEVEL
 124:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** {
 125:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_LOW  = 0x10000U, /**<  Reset bit */
 126:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_HIGH = 0x1U, 	/**< Set bit  */
 127:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_OUTPUT_LEVEL_t;
 128:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 129:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 130:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines direct hardware control characteristics of the pin . Use type \a XMC_GPIO_HWCTRL_t for t
 131:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 132:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_HWCTRL
 133:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** {
 134:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_DISABLED     = 0x0U, /**<  Software control only */
 135:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL1  = 0x1U, /**<  HWI0/HWO0 control path can override the software confi
 136:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL2  = 0x2U  /**<  HWI1/HWO1 control path can override the software confi
 137:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_HWCTRL_t;
 138:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 139:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 140:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * DEVICE FAMILY EXTENSIONS
 141:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 142:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 143:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #if UC_FAMILY == XMC1
 144:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc1_gpio.h"
 145:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #elif UC_FAMILY == XMC4
 146:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc4_gpio.h"
 147:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #else
 148:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #error "xmc_gpio.h: family device not supported"
 149:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 150:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 151:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 152:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * API PROTOTYPES
 153:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 154:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 155:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #ifdef __cplusplus
 156:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** extern "C" {
 157:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 158:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 159:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 160:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 161:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	  Constant pointer pointing to GPIO port, to access port registers like Pn_OUT,Pn_O
 162:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	  Port pin number.
 163:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  config GPIO configuration data structure. Refer data structure @ref XMC_GPIO_CONFIG_t fo
 164:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 165:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 166:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 167:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 168:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
 169:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,hysteresis, push pull
 170:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for a selected \a po
 171:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \a config provides selected I/O settings. It configures hardware registers Pn_IOCR,Pn_OUT, Pn_OM
 172:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 173:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
 174:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,push pull /open drain
 175:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for selected \a port
 176:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * It configures hardware registers Pn_IOCR,Pn_OUT,Pn_OMR,Pn_PDISC and Pn_PDR.\n
 177:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 178:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 179:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 180:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 181:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 182:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 183:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * This API is called in definition of DAVE_init by code generation and therefore should not be exp
 184:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * for the normal operation. Use other APIs only after DAVE_init is called successfully (returns DA
 185:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 186:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 187:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 188:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 189:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 190:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_Init(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_CONFIG_t *const c
 191:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 192:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 193:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 194:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	Constant pointer pointing to GPIO port, to access hardware register Pn_IOCR.
 195:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 196:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  mode input / output functionality selection. Refer @ref XMC_GPIO_MODE_t for valid values
 197:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 198:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 199:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 200:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 201:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets digital input and output driver functionality and characteristics of a GPIO port pin. It co
 202:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * registers Pn_IOCR. \a mode is initially configured during initialization in XMC_GPIO_Init(). Cal
 203:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * the port direction functionality as needed later in the program.
 204:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 205:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 206:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 207:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 208:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 209:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 210:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_SetMode(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_MODE_t mode);
 211:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 212:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 213:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 214:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 215:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	 Constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 216:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	 Port pin number.
 217:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  level output level selection. Refer @ref XMC_GPIO_OUTPUT_LEVEL_t for valid values.
 218:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 219:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 220:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 221:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 222:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Set port pin output level to high or low.It configures hardware registers Pn_OMR.\a level is ini
 223:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * configured during initialization in XMC_GPIO_Init(). Call this API to alter output level as need
 224:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 225:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 226:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 227:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 228:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 229:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 230:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 231:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 232:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 233:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 234:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLevel(XMC_GPIO_PORT_t *const port, const uint8_t pin, const 
 235:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** {
 236:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 237:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid output level", XMC_GPIO_CHECK_OUTPUT_LEVEL(level));
 238:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 239:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)level << pin;
 240:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** }
 241:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 242:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 243:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 244:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 245:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 246:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 247:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 248:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 249:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 250:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *  Sets port pin output to high. It configures hardware registers Pn_OMR.
 251:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 252:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *  \par<b>Related APIs:</b><BR>
 253:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputLow()
 254:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 255:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 256:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().\n
 257:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 258:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 259:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 260:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 261:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputHigh(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 262:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** {
  25              	 .loc 1 262 0
  26              	 .cfi_startproc
  27 0000 80B5     	 push {r7,lr}
  28              	.LCFI0:
  29              	 .cfi_def_cfa_offset 8
  30              	 .cfi_offset 7,-8
  31              	 .cfi_offset 14,-4
  32 0002 82B0     	 sub sp,sp,#8
  33              	.LCFI1:
  34              	 .cfi_def_cfa_offset 16
  35 0004 00AF     	 add r7,sp,#0
  36              	.LCFI2:
  37              	 .cfi_def_cfa_register 7
  38 0006 7860     	 str r0,[r7,#4]
  39 0008 0A1C     	 mov r2,r1
  40 000a FB1C     	 add r3,r7,#3
  41 000c 1A70     	 strb r2,[r3]
 263:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputHigh: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 264:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 265:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)0x1U << pin;
  42              	 .loc 1 265 0
  43 000e FB1C     	 add r3,r7,#3
  44 0010 1B78     	 ldrb r3,[r3]
  45 0012 0122     	 mov r2,#1
  46 0014 9A40     	 lsl r2,r2,r3
  47 0016 7B68     	 ldr r3,[r7,#4]
  48 0018 5A60     	 str r2,[r3,#4]
 266:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** }
  49              	 .loc 1 266 0
  50 001a BD46     	 mov sp,r7
  51 001c 02B0     	 add sp,sp,#8
  52              	 
  53 001e 80BD     	 pop {r7,pc}
  54              	 .cfi_endproc
  55              	.LFE122:
  57              	 .section .text.XMC_GPIO_SetOutputLow,"ax",%progbits
  58              	 .align 2
  59              	 .code 16
  60              	 .thumb_func
  62              	XMC_GPIO_SetOutputLow:
  63              	.LFB123:
 267:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 268:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 269:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 270:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 271:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	port pin number.
 272:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 273:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return  None
 274:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 275:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Description:</b><br>
 276:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets port pin output to low. It configures hardware registers Pn_OMR.\n
 277:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 278:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>>
 279:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh()
 280:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 281:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Note:</b><br>
 282:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 283:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 284:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 285:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 286:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 287:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLow(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 288:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** {
  64              	 .loc 1 288 0
  65              	 .cfi_startproc
  66 0000 80B5     	 push {r7,lr}
  67              	.LCFI3:
  68              	 .cfi_def_cfa_offset 8
  69              	 .cfi_offset 7,-8
  70              	 .cfi_offset 14,-4
  71 0002 82B0     	 sub sp,sp,#8
  72              	.LCFI4:
  73              	 .cfi_def_cfa_offset 16
  74 0004 00AF     	 add r7,sp,#0
  75              	.LCFI5:
  76              	 .cfi_def_cfa_register 7
  77 0006 7860     	 str r0,[r7,#4]
  78 0008 0A1C     	 mov r2,r1
  79 000a FB1C     	 add r3,r7,#3
  80 000c 1A70     	 strb r2,[r3]
 289:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLow: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 290:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 291:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10000U << pin;
  81              	 .loc 1 291 0
  82 000e FB1C     	 add r3,r7,#3
  83 0010 1B78     	 ldrb r3,[r3]
  84 0012 8022     	 mov r2,#128
  85 0014 5202     	 lsl r2,r2,#9
  86 0016 9A40     	 lsl r2,r2,r3
  87 0018 7B68     	 ldr r3,[r7,#4]
  88 001a 5A60     	 str r2,[r3,#4]
 292:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** }
  89              	 .loc 1 292 0
  90 001c BD46     	 mov sp,r7
  91 001e 02B0     	 add sp,sp,#8
  92              	 
  93 0020 80BD     	 pop {r7,pc}
  94              	 .cfi_endproc
  95              	.LFE123:
  97 0022 C046     	 .section .text.XMC_GPIO_GetInput,"ax",%progbits
  98              	 .align 2
  99              	 .code 16
 100              	 .thumb_func
 102              	XMC_GPIO_GetInput:
 103              	.LFB125:
 293:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 294:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 295:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 296:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 297:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param pin  port pin number.
 298:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 299:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 300:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 301:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 302:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Configures port pin output to Toggle. It configures hardware registers Pn_OMR.
 303:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 304:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 305:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 306:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 307:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 308:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode(). Regis
 309:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * and does not contain any flip-flop. A read action delivers the value of 0.
 310:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 311:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 312:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 313:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_ToggleOutput(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 314:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** {
 315:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_ToggleOutput: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 316:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 317:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10001U << pin;
 318:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** }
 319:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 320:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 321:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 322:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param port constant pointer pointing to GPIO port, to access hardware register Pn_IN.
 323:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param pin  Port pin number.
 324:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 325:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return uint32_t pin logic level status.
 326:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 327:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Description:</b><br>
 328:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Reads the Pn_IN register and returns the current logical value at the GPIO pin.
 329:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 330:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 331:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * None
 332:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 333:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 334:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to input mode using XMC_GPIO_SetMode().
 335:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 336:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 337:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 338:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE uint32_t XMC_GPIO_GetInput(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 339:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** {
 104              	 .loc 1 339 0
 105              	 .cfi_startproc
 106 0000 80B5     	 push {r7,lr}
 107              	.LCFI6:
 108              	 .cfi_def_cfa_offset 8
 109              	 .cfi_offset 7,-8
 110              	 .cfi_offset 14,-4
 111 0002 82B0     	 sub sp,sp,#8
 112              	.LCFI7:
 113              	 .cfi_def_cfa_offset 16
 114 0004 00AF     	 add r7,sp,#0
 115              	.LCFI8:
 116              	 .cfi_def_cfa_register 7
 117 0006 7860     	 str r0,[r7,#4]
 118 0008 0A1C     	 mov r2,r1
 119 000a FB1C     	 add r3,r7,#3
 120 000c 1A70     	 strb r2,[r3]
 340:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_GetInput: Invalid port", XMC_GPIO_CHECK_PORT(port));
 341:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 342:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   return (((port->IN) >> pin) & 0x1U);
 121              	 .loc 1 342 0
 122 000e 7B68     	 ldr r3,[r7,#4]
 123 0010 5A6A     	 ldr r2,[r3,#36]
 124 0012 FB1C     	 add r3,r7,#3
 125 0014 1B78     	 ldrb r3,[r3]
 126 0016 DA40     	 lsr r2,r2,r3
 127 0018 131C     	 mov r3,r2
 128 001a 0122     	 mov r2,#1
 129 001c 1340     	 and r3,r2
 343:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** }
 130              	 .loc 1 343 0
 131 001e 181C     	 mov r0,r3
 132 0020 BD46     	 mov sp,r7
 133 0022 02B0     	 add sp,sp,#8
 134              	 
 135 0024 80BD     	 pop {r7,pc}
 136              	 .cfi_endproc
 137              	.LFE125:
 139 0026 C046     	 .section .text.DIGITAL_IO_SetOutputHigh,"ax",%progbits
 140              	 .align 2
 141              	 .code 16
 142              	 .thumb_func
 144              	DIGITAL_IO_SetOutputHigh:
 145              	.LFB195:
 146              	 .file 2 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO/digital_io.h"
   1:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /*
   2:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   3:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @file digital_io.h
   4:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @date 2021-01-08
   5:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   6:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * NOTE:
   7:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   8:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   9:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @cond
  10:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  11:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DIGITAL_IO v4.0.18 - The DIGITAL_IO APP is used to configure a port pin as digital Input/Output.
  12:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  13:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  14:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * All rights reserved.
  15:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  16:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  17:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * following conditions are met:
  18:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  19:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  20:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   disclaimer.
  21:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  22:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  23:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  24:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  25:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  26:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   products derived from this software without specific prior written permission.
  27:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  28:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  29:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  30:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  31:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  32:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  33:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  34:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  36:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  37:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * with Infineon Technologies AG (dave@infineon.com).
  38:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  39:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  40:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Change History
  41:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * --------------
  42:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  43:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-02-16
  44:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Initial version
  45:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  46:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-04-22
  47:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - XMC_ASSERT is added in static inline functions.<br>
  48:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  49:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-06-20
  50:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Version check added for XMCLib dependency.<br>
  51:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  52:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-12-22
  53:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Added hardware controlled IO feature.
  54:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2016-07-08:
  55:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Fixed incorrect case for an included header.<br>
  56:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2021-01-08:
  57:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Modified check for minimum XMCLib version
  58:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  59:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @endcond
  60:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  61:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  */
  62:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  63:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
  64:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * HEADER FILES
  65:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  66:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  67:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #ifndef DIGITAL_IO_H
  68:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #define DIGITAL_IO_H
  69:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  70:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #include "xmc_gpio.h"
  71:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #include "DAVE_Common.h"
  72:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #include "digital_io_conf.h"
  73:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  74:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
  75:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * MACROS
  76:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  77:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #define DIGITAL_IO_XMC_LIB_MAJOR_VERSION 2
  78:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #define DIGITAL_IO_XMC_LIB_MINOR_VERSION 0
  79:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #define DIGITAL_IO_XMC_LIB_PATCH_VERSION 0
  80:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  81:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #if !((XMC_LIB_MAJOR_VERSION > DIGITAL_IO_XMC_LIB_MAJOR_VERSION) ||\
  82:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****       ((XMC_LIB_MAJOR_VERSION == DIGITAL_IO_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION > DIGI
  83:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****       ((XMC_LIB_MAJOR_VERSION == DIGITAL_IO_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION == DIG
  84:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #error "DIGITAL_IO requires XMC Peripheral Library v2.0.0 or higher"
  85:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #endif
  86:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  87:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  /*************************************************************************************************
  88:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * ENUMS
  89:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  90:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  91:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
  92:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_enumerations
  93:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
  94:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
  95:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  96:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
  97:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Initialization status of DIGITAL_IO APP.
  98:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
  99:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** typedef enum DIGITAL_IO_STATUS
 100:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 101:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   DIGITAL_IO_STATUS_OK = 0U,/**< 0=Status OK */
 102:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   DIGITAL_IO_STATUS_FAILURE = 1U/**< 1=Status Failed */
 103:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** } DIGITAL_IO_STATUS_t;
 104:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 105:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 106:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @}
 107:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 108:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 109:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
 110:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DATA STRUCTURES
 111:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
 112:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 113:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_datastructures
 114:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
 115:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 116:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 117:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 118:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Initialization data structure of DIGITAL_IO APP
 119:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 120:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** typedef struct DIGITAL_IO
 121:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 122:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_PORT_t *const gpio_port;             /**< port number */
 123:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   const XMC_GPIO_CONFIG_t gpio_config;          /**< mode, initial output level and pad driver stre
 124:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   const uint8_t gpio_pin;                       /**< pin number */
 125:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   const XMC_GPIO_HWCTRL_t hwctrl;               /**< Hardware port control */
 126:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** } DIGITAL_IO_t;
 127:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 128:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 129:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 130:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @}
 131:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 132:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 133:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 134:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
 135:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * API Prototypes
 136:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
 137:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 138:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 139:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #ifdef __cplusplus
 140:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** extern "C" {
 141:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #endif
 142:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 143:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 144:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_apidoc
 145:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
 146:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 147:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 148:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 149:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 150:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 151:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Get DIGITAL_IO APP version
 152:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return DAVE_APP_VERSION_t APP version information (major, minor and patch number)
 153:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 154:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description: </b><br>
 155:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * The function can be used to check application software compatibility with a
 156:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * specific version of the APP.
 157:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 158:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 159:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 160:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 161:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include "DAVE.h"
 162:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 163:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 164:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 165:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t init_status;
 166:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_APP_VERSION_t version;
 167:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 168:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   // Initialize DIGITAL_IO APP:
 169:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   // DIGITAL_IO_Init() is called from within DAVE_Init().
 170:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   init_status = DAVE_Init();
 171:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(init_status == DAVE_STATUS_SUCCESS)
 172:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 173:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     version = DIGITAL_IO_GetAppVersion();
 174:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     if (version.major != 4U) {
 175:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // Probably, not the right version.
 176:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 177:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 178:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 179:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // More code here
 180:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1) {
 181:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 182:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 183:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     return (1);
 184:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  }
 185:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @endcode<BR>
 186:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 187:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 188:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** DAVE_APP_VERSION_t DIGITAL_IO_GetAppVersion(void);
 189:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 190:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 191:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 192:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to initialize the port pin as per UI settings.
 193:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 194:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return DIGITAL_IO_STATUS_t DIGITAL_IO APP status. Refer @ref DIGITAL_IO_STATUS_t structure for d
 195:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 196:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 197:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function initializes GPIO port registers IOCR,PDISC,OMR,PDR/PHCR to configure pin direction,
 198:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * and pad driver strength/hysteresis.
 199:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 200:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 201:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * None
 202:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 203:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 204:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 205:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include "DAVE.h" //Declarations from DAVE Code Generation (includes SFR declaration)
 206:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 207:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 208:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 209:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 210:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 211:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 212:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 213:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 214:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 215:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 216:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 217:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 218:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1U)
 219:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 220:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 221:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 222:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 223:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 224:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 225:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 226:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return 1U;
 227:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  }
 228:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 229:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 230:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 231:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** DIGITAL_IO_STATUS_t DIGITAL_IO_Init(const DIGITAL_IO_t *const handler);
 232:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 233:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 234:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 235:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to set port pin high.
 236:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 237:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return None
 238:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 239:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 240:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to make port pin to high level
 241:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 242:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 243:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  DIGITAL_IO_SetOutputLow()
 244:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 245:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 246:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 247:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include "DAVE.h" //Declarations from DAVE Code Generation (includes SFR declaration)
 248:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 249:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 250:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 251:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 252:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 253:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 254:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 255:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 256:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 257:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 258:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 259:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 260:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1U)
 261:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 262:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 263:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 264:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 265:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DIGITAL_IO_SetOutputHigh(&DIGITAL_IO_0);
 266:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 267:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 268:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // Add application code here
 269:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 270:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 271:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 272:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 273:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 274:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 275:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 276:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_SetOutputHigh(const DIGITAL_IO_t *const handler)
 277:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 147              	 .loc 2 277 0
 148              	 .cfi_startproc
 149 0000 80B5     	 push {r7,lr}
 150              	.LCFI9:
 151              	 .cfi_def_cfa_offset 8
 152              	 .cfi_offset 7,-8
 153              	 .cfi_offset 14,-4
 154 0002 82B0     	 sub sp,sp,#8
 155              	.LCFI10:
 156              	 .cfi_def_cfa_offset 16
 157 0004 00AF     	 add r7,sp,#0
 158              	.LCFI11:
 159              	 .cfi_def_cfa_register 7
 160 0006 7860     	 str r0,[r7,#4]
 278:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_SetOutputHigh: handler null pointer", handler != NULL);
 279:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_SetOutputHigh(handler->gpio_port, handler->gpio_pin);
 161              	 .loc 2 279 0
 162 0008 7B68     	 ldr r3,[r7,#4]
 163 000a 1A68     	 ldr r2,[r3]
 164 000c 7B68     	 ldr r3,[r7,#4]
 165 000e 1B7B     	 ldrb r3,[r3,#12]
 166 0010 101C     	 mov r0,r2
 167 0012 191C     	 mov r1,r3
 168 0014 FFF7FEFF 	 bl XMC_GPIO_SetOutputHigh
 280:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 169              	 .loc 2 280 0
 170 0018 BD46     	 mov sp,r7
 171 001a 02B0     	 add sp,sp,#8
 172              	 
 173 001c 80BD     	 pop {r7,pc}
 174              	 .cfi_endproc
 175              	.LFE195:
 177 001e C046     	 .section .text.DIGITAL_IO_SetOutputLow,"ax",%progbits
 178              	 .align 2
 179              	 .code 16
 180              	 .thumb_func
 182              	DIGITAL_IO_SetOutputLow:
 183              	.LFB196:
 281:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 282:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 283:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to reset port pin.
 284:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 285:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return None
 286:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 287:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 288:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to make port pin to low level.
 289:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 290:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 291:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * DIGITAL_IO_SetOutputHigh()
 292:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 293:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 294:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 295:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  #include "DAVE.h" //Declarations from DAVE Code Generation (includes SFR declaration)
 296:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 297:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  int main(void)
 298:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  {
 299:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    DAVE_STATUS_t status;
 300:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_I
 301:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    if(status == DAVE_STATUS_SUCCESS)
 302:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 303:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG("DAVE Apps initialization success\n");
 304:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 305:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    else
 306:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 307:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 308:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *      while(1U)
 309:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *      {
 310:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *      }
 311:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 312:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    //Placeholder for user application code. The while loop below can be replaced with user applic
 313:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    DIGITAL_IO_SetOutputLow(&DIGITAL_IO_0);
 314:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    while(1U)
 315:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 316:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *      // Add application code here
 317:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 318:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 319:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 320:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 321:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 322:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 323:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 324:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_SetOutputLow(const DIGITAL_IO_t *const handler)
 325:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 184              	 .loc 2 325 0
 185              	 .cfi_startproc
 186 0000 80B5     	 push {r7,lr}
 187              	.LCFI12:
 188              	 .cfi_def_cfa_offset 8
 189              	 .cfi_offset 7,-8
 190              	 .cfi_offset 14,-4
 191 0002 82B0     	 sub sp,sp,#8
 192              	.LCFI13:
 193              	 .cfi_def_cfa_offset 16
 194 0004 00AF     	 add r7,sp,#0
 195              	.LCFI14:
 196              	 .cfi_def_cfa_register 7
 197 0006 7860     	 str r0,[r7,#4]
 326:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_SetOutputLow: handler null pointer", handler != NULL);
 327:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_SetOutputLow(handler->gpio_port,handler->gpio_pin);
 198              	 .loc 2 327 0
 199 0008 7B68     	 ldr r3,[r7,#4]
 200 000a 1A68     	 ldr r2,[r3]
 201 000c 7B68     	 ldr r3,[r7,#4]
 202 000e 1B7B     	 ldrb r3,[r3,#12]
 203 0010 101C     	 mov r0,r2
 204 0012 191C     	 mov r1,r3
 205 0014 FFF7FEFF 	 bl XMC_GPIO_SetOutputLow
 328:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 206              	 .loc 2 328 0
 207 0018 BD46     	 mov sp,r7
 208 001a 02B0     	 add sp,sp,#8
 209              	 
 210 001c 80BD     	 pop {r7,pc}
 211              	 .cfi_endproc
 212              	.LFE196:
 214 001e C046     	 .section .text.PIN_INTERRUPT_GetPinValue,"ax",%progbits
 215              	 .align 2
 216              	 .code 16
 217              	 .thumb_func
 219              	PIN_INTERRUPT_GetPinValue:
 220              	.LFB205:
 221              	 .file 3 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT/pin_interrupt.h"
   1:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
   2:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @file pin_interrupt.h
   3:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @date 2021-01-08
   4:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
   5:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * NOTE:
   6:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
   8:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @cond
   9:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
  10:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * PIN_INTERRUPT v4.0.4 - The PIN_INTERRUPT APP invokes user interrupt handler in a response to ris
  11:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                        edge event signal on a pin.
  12:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
  13:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * Copyright (c) 2016-2020, Infineon Technologies AG
  14:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * All rights reserved.                        
  15:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                                             
  16:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  17:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * following conditions are met:   
  18:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                                                                              
  19:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  20:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   disclaimer.                        
  21:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * 
  22:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  23:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   disclaimer in the documentation and/or other materials provided with the distribution.     
  24:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                         
  25:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  26:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   products derived from this software without specific prior written permission. 
  27:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                                             
  28:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  29:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  30:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  31:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  32:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  33:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  34:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.    
  35:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                                                                              
  36:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  37:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * with Infineon Technologies AG (dave@infineon.com).         
  38:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
  39:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
  40:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * Change History
  41:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * --------------
  42:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * 2015-12-03:
  43:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     - Initial version for DAVEv4. <BR>
  44:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * 
  45:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * 2021-01-08:
  46:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     - Modified check for minimum XMCLib version
  47:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
  48:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @endcond 
  49:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
  50:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
  51:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  52:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #ifndef PIN_INTERRUPT_H
  53:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #define PIN_INTERRUPT_H
  54:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  55:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**************************************************************************************************
  56:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * HEADER FILES                                                                                    
  57:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
  58:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #if (UC_SERIES == XMC14)
  59:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #include "xmc_scu.h"
  60:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #endif
  61:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #include "xmc_gpio.h"
  62:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #include "xmc_eru.h"
  63:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  64:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #include "DAVE_Common.h"
  65:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #include "pin_interrupt_conf.h"
  66:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  67:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**************************************************************************************************
  68:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * MACROS                                                                                          
  69:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
  70:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #define PIN_INTERRUPT_XMC_LIB_MAJOR_VERSION 2
  71:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #define PIN_INTERRUPT_XMC_LIB_MINOR_VERSION 1
  72:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #define PIN_INTERRUPT_XMC_LIB_PATCH_VERSION 6
  73:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  74:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #if !((XMC_LIB_MAJOR_VERSION > PIN_INTERRUPT_XMC_LIB_MAJOR_VERSION) ||\
  75:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****       ((XMC_LIB_MAJOR_VERSION == PIN_INTERRUPT_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION > P
  76:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****       ((XMC_LIB_MAJOR_VERSION == PIN_INTERRUPT_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION == 
  77:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #error "PIN_INTERRUPT requires XMC Peripheral Library v2.1.6 or higher"
  78:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #endif
  79:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  80:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
  81:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @ingroup App_publicparam
  82:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @{
  83:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
  84:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
  85:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  @brief Initialization data structure for PIN_INTERRUPT APP
  86:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
  87:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  88:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
  89:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @}
  90:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
  91:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  92:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  /*************************************************************************************************
  93:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * ENUMS
  94:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
  95:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
  96:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @ingroup PIN_INTERRUPT_enumerations
  97:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @{
  98:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
  99:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /*
 100:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief enumeration for PIN_INTERRUPT APP
 101:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 102:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** typedef enum PIN_INTERRUPT_STATUS
 103:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
 104:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_STATUS_SUCCESS = 0U,        /**<APP initialization is success */
 105:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_STATUS_FAILURE = 1U         /**<APP initialization is failure */
 106:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** } PIN_INTERRUPT_STATUS_t;
 107:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 108:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 109:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 110:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * Defines trigger edge for the event generation by ETLx (Event Trigger Logic, x = [0 to 3]) unit, 
 111:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * from ERSx(Event request source, x = [0 to 3]) unit.
 112:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 113:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** typedef enum PIN_INTERRUPT_EDGE
 114:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
 115:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_EDGE_NONE = 0U, /**< no event enabled */
 116:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_EDGE_RISING = 1U,   /**< detection of rising edge generates the event */
 117:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_EDGE_FALLING = 2U,  /**< detection of falling edge generates the event */
 118:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_EDGE_BOTH = 3U      /**< detection of either edges generates the event */
 119:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** } PIN_INTERRUPT_EDGE_t;
 120:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 121:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @}
 122:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 123:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 124:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**************************************************************************************************
 125:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * DATA STRUCTURES
 126:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** ***************************************************************************************************
 127:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 128:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @ingroup PIN_INTERRUPT_datastructures
 129:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @{
 130:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 131:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 132:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 133:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief Configuration structure for PIN_INTERRUPT APP
 134:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 135:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** typedef struct PIN_INTERRUPT
 136:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
 137:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_ERU_t *eru;  /**< Mapped ERU module */
 138:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_GPIO_PORT_t *port;  /**< Mapped port number */
 139:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_GPIO_CONFIG_t gpio_config;   /**< Initializes the input pin characteristics */
 140:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_ERU_ETL_CONFIG_t etl_config;  /**< reference to ERUx_ETLy (x = [0..1], y = [0..4])
 141:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****                                                       module configuration */
 142:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #if (UC_SERIES == XMC14)
 143:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_SCU_IRQCTRL_t irqctrl;  /**< selects the interrupt source for a NVIC interrupt node*/
 144:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #endif
 145:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   IRQn_Type IRQn;       /**< Mapped NVIC Node */
 146:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   uint8_t irq_priority; 	  /**< Node Interrupt Priority */
 147:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #if (UC_FAMILY == XMC4)
 148:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   uint8_t irq_subpriority;  /**< Node Interrupt SubPriority only valid for XMC4x */
 149:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #endif
 150:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   uint8_t etl; /*< ETLx channel (x = [0..3])*/
 151:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   uint8_t ogu; /*< OGUy channel (y = [0..3])*/
 152:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   uint8_t pin; /*< Mapped pin number */
 153:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   bool enable_at_init;  /**< Interrupt enable for Node at initialization*/
 154:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** } PIN_INTERRUPT_t;
 155:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 156:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @}
 157:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 158:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 159:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #ifdef __cplusplus
 160:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** extern "C" {
 161:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #endif
 162:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**************************************************************************************************
 163:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * API Prototypes
 164:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
 165:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 166:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @ingroup PIN_INTERRUPT_apidoc
 167:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @{
 168:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 169:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 170:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief Get PIN_INTERRUPT APP version
 171:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @return DAVE_APP_VERSION_t APP version information (major, minor and patch number)
 172:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 173:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * \par<b>Description: </b><br>
 174:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * The function can be used to check application software compatibility with a
 175:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * specific version of the APP.
 176:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 177:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * \par<b>Example Usage:</b><br>
 178:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 179:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @code
 180:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * #include "DAVE.h"
 181:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 182:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * int main(void) 
 183:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * {
 184:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   DAVE_STATUS_t init_status;
 185:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   DAVE_APP_VERSION_t version;
 186:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 187:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   // Initialize PIN_INTERRUPT APP:
 188:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   // PIN_INTERRUPT_Init() is called from within DAVE_Init().
 189:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   init_status = DAVE_Init();
 190:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 191:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   if (DAVE_STATUS_SUCCESS == init_status)
 192:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   {
 193:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     version = PIN_INTERRUPT_GetAppVersion();
 194:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     if (version.major != 4U) {
 195:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *       // Probably, not the right version.
 196:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     }
 197:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   }
 198:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 199:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   // More code here
 200:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   while(1)
 201:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   {
 202:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   }
 203:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   return (1);
 204:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * }
 205:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @endcode<BR>
 206:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 207:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** DAVE_APP_VERSION_t PIN_INTERRUPT_GetAppVersion(void);
 208:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 209:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 210:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief Initializes a PIN_INTERRUPT APP instance
 211:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @param handle Pointer pointing to APP data structure. Refer @ref PIN_INTERRUPT_t for details.
 212:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @return
 213:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *            PIN_INTERRUPT_STATUS_SUCCESS             : if initialization is successful\n
 214:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *            PIN_INTERRUPT_STATUS_FAILURE             : if initialization is failed
 215:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 216:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * \par<b>Description:</b><br>
 217:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * PIN_INTERRUPT_Init API is called during initialization of DAVE APPS. This API Initializes input 
 218:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * ERU and OGU hardware module initialization, Configures NVIC node and its priority in order to ge
 219:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 220:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * \par<b>Example Usage:</b><br>
 221:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 222:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @code
 223:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * #include "DAVE.h"
 224:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 225:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * int main(void)
 226:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * {
 227:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   DAVE_STATUS_t status;
 228:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 229:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   status = DAVE_Init();  //  PIN_INTERRUPT_Init API is called during initialization of DAVE APPS
 230:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   if (DAVE_STATUS_SUCCESS == status)
 231:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   {
 232:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     // user code
 233:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 234:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     while(1)
 235:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     {
 236:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 237:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     }
 238:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   }
 239:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   return (1);
 240:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * }
 241:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 242:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @endcode<BR>
 243:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 244:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** PIN_INTERRUPT_STATUS_t PIN_INTERRUPT_Init(const PIN_INTERRUPT_t *const handle);
 245:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 246:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 247:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief Enables the IRQ.
 248:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @param handle Pointer pointing to APP data structure. Refer @ref PIN_INTERRUPT_t for details.
 249:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @return None
 250:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * <BR><P ALIGN="LEFT"><B>Example:</B>
 251:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 252:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @code
 253:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  #include "DAVE.h"
 254:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 255:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  int main(void)
 256:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  {
 257:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    DAVE_STATUS_t status;
 258:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 259:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    status = DAVE_Init();  //  PIN_INTERRUPT_Init API is called during initialization of DAVE APP
 260:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    if (DAVE_STATUS_SUCCESS == status)
 261:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    {
 262:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *      // user code
 263:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 264:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *      PIN_INTERRUPT_Enable(&PIN_INTERRUPT_0);
 265:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *      while(1)
 266:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *      {}
 267:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    }
 268:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 269:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    return (1);
 270:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  }
 271:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @endcode<BR> </p>
 272:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 273:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** __STATIC_INLINE void PIN_INTERRUPT_Enable(const PIN_INTERRUPT_t *const handle)
 274:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
 275:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_ASSERT("PIN_INTERRUPT_Enable: Handler null pointer", handle != NULL);
 276:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   NVIC_EnableIRQ(handle->IRQn);
 277:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** }
 278:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 279:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 280:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief Disables the IRQ.
 281:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @param handle Pointer pointing to APP data structure. Refer @ref PIN_INTERRUPT_t for details.
 282:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @return None
 283:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * <BR><P ALIGN="LEFT"><B>Example:</B>
 284:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 285:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @code
 286:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  #include "DAVE.h"
 287:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 288:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  int main(void)
 289:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  {
 290:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 291:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    DAVE_STATUS_t status;
 292:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 293:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    status = DAVE_Init();  //  PIN_INTERRUPT_Init API is called during initialization of DAVE APP
 294:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    if(DAVE_STATUS_SUCCESS == status)
 295:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    {
 296:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *      // user code
 297:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 298:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *      PIN_INTERRUPT_Disable(&PIN_INTERRUPT_0);
 299:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *      while(1)
 300:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *      {}
 301:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    }
 302:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 303:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    return (1);
 304:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 305:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  }
 306:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @endcode<BR> </p>
 307:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 308:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** __STATIC_INLINE void PIN_INTERRUPT_Disable(const PIN_INTERRUPT_t *const handle)
 309:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
 310:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_ASSERT("PIN_INTERRUPT_Disable: Handler null pointer", handle != NULL);
 311:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   NVIC_DisableIRQ(handle->IRQn);
 312:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** }
 313:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 314:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 315:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * @brief Read input level of port pin.
 316:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * @param handle Pointer pointing to APP data structure. Refer @ref PIN_INTERRUPT_t for details.
 317:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * @return uint32_t input logic level. Range:0-1
 318:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *
 319:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * \par<b>Description:</b><br>
 320:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * This function reads the Pn_IN register and returns the current logical value at the GPIO pin.
 321:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *
 322:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *
 323:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * Example Usage:
 324:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * @code
 325:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * #include "DAVE.h"//Declarations from DAVE Code Generation (includes SFR declaration)
 326:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *
 327:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * int main(void)
 328:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * {
 329:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   DAVE_STATUS_t status;
 330:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   uint32_t pin_status;
 331:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   status = DAVE_Init();   // (DAVE_STATUS_t)PIN_INTERRUPT_Init(&PIN_INTERRUPT_0) is called within
 332:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   
 333:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   if (status == DAVE_STATUS_SUCCESS)
 334:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   {
 335:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 336:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   }
 337:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   else
 338:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   {
 339:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 340:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     while(1U)
 341:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     {
 342:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     }
 343:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   }
 344:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 345:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   while(1U)
 346:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   {
 347:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     pin_status = PIN_INTERRUPT_GetPinValue(&PIN_INTERRUPT_0);
 348:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     if (pin_status == 1)
 349:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     {
 350:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *       // Add application code here
 351:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     }
 352:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     else
 353:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     {
 354:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *       // Add application code here
 355:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     }
 356:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   }
 357:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   return (1);
 358:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * }
 359:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *  @endcode
 360:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** */
 361:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** __STATIC_INLINE uint32_t PIN_INTERRUPT_GetPinValue(const PIN_INTERRUPT_t *const handle)
 362:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
 222              	 .loc 3 362 0
 223              	 .cfi_startproc
 224 0000 80B5     	 push {r7,lr}
 225              	.LCFI15:
 226              	 .cfi_def_cfa_offset 8
 227              	 .cfi_offset 7,-8
 228              	 .cfi_offset 14,-4
 229 0002 82B0     	 sub sp,sp,#8
 230              	.LCFI16:
 231              	 .cfi_def_cfa_offset 16
 232 0004 00AF     	 add r7,sp,#0
 233              	.LCFI17:
 234              	 .cfi_def_cfa_register 7
 235 0006 7860     	 str r0,[r7,#4]
 363:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_ASSERT("PIN_INTERRUPT_GetPinValue: Handler null pointer", handle != NULL);
 364:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   return (XMC_GPIO_GetInput(handle->port, handle->pin));
 236              	 .loc 3 364 0
 237 0008 7B68     	 ldr r3,[r7,#4]
 238 000a 5A68     	 ldr r2,[r3,#4]
 239 000c 7B68     	 ldr r3,[r7,#4]
 240 000e 9B7F     	 ldrb r3,[r3,#30]
 241 0010 101C     	 mov r0,r2
 242 0012 191C     	 mov r1,r3
 243 0014 FFF7FEFF 	 bl XMC_GPIO_GetInput
 244 0018 031C     	 mov r3,r0
 365:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** }
 245              	 .loc 3 365 0
 246 001a 181C     	 mov r0,r3
 247 001c BD46     	 mov sp,r7
 248 001e 02B0     	 add sp,sp,#8
 249              	 
 250 0020 80BD     	 pop {r7,pc}
 251              	 .cfi_endproc
 252              	.LFE205:
 254 0022 C046     	 .section .text.XMC_WDT_Start,"ax",%progbits
 255              	 .align 2
 256              	 .code 16
 257              	 .thumb_func
 259              	XMC_WDT_Start:
 260              	.LFB214:
 261              	 .file 4 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc/xmc_wdt.h"
   1:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
   2:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @file xmc_wdt.h
   3:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @date 2015-08-06
   4:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
   5:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @cond
   6:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *****************************************************************************
   7:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
   9:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * All rights reserved.
  11:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
  12:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
  14:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Permission is hereby granted, free of charge, to any person or organization
  15:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * obtaining a copy of the software and accompanying documentation covered by
  16:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * do so, all subject to the following:
  20:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
  21:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * The copyright notices in the Software and this entire statement, including
  22:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * the above license grant, this restriction and the following disclaimer,
  23:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * must be included in all copies of the Software, in whole or in part, and
  24:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * all derivative works of the Software, unless such copies or derivative
  25:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * works are solely in the form of machine-executable object code generated by
  26:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * a source language processor.
  27:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
  28:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * DEALINGS IN THE SOFTWARE.
  35:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
  36:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * To improve the quality of the software, users are encouraged to share
  37:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * at XMCSupport@infineon.com.
  39:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *****************************************************************************
  40:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
  41:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Change History
  42:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * --------------
  43:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
  44:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * 2015-02-20:
  45:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *     - Initial <br>
  46:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *     - Documentation updates <br>
  47:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
  48:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * 2015-06-20:
  49:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  50:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
  51:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * 2015-08-06:
  52:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *     - Bug fix in XMC_WDT_SetDebugMode() API, Wrong register is being configured.<br>
  53:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @endcond
  54:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
  55:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
  56:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #ifndef XMC_WDT_H
  57:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #define XMC_WDT_H
  58:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
  59:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**************************************************************************************************
  60:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * HEADER FILES
  61:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  **************************************************************************************************
  62:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
  63:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #include "xmc_common.h"
  64:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #include "xmc_scu.h"
  65:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
  66:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @addtogroup XMClib XMC Peripheral Library
  67:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @{
  68:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
  69:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
  70:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
  71:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @addtogroup WDT
  72:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @brief Watchdog driver for the XMC microcontroller family.
  73:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
  74:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * The watchdog unit (WDT) improves the system integrity, by triggering the system reset request to
  75:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * back from the unresponsive state to normal operation.
  76:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
  77:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * This LLD provides the Configuration structure XMC_WDT_CONFIG_t and initialization function XMC_W
  78:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * It can be used to:
  79:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * -# Start or Stop the watchdog timer. (XMC_WDT_Start() and XMC_WDT_Stop())
  80:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * -# Service the watchdog timer. (XMC_WDT_Service())
  81:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * -# Configure the service window upper bound and lower bound timing values. (XMC_WDT_SetWindowBou
  82:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * -# Enable the generation of the pre-warning event for the first overflow of the timer. (XMC_WDT_
  83:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * -# Clear the pre-warning alarm event. It is mandatory to clear the flag during pre-warning alarm
  84:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****       generating reset request for the second overflow of the timer. (XMC_WDT_ClearAlarm())
  85:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * -# Suspend the watchdog timer during Debug HALT mode. (XMC_WDT_SetDebugMode())
  86:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * -# Configure service indication pulse width.(XMC_WDT_SetServicePulseWidth())
  87:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
  88:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @{
  89:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
  90:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
  91:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**************************************************************************************************
  92:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * MACROS
  93:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   *************************************************************************************************
  94:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
  95:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #define XMC_WDT_MAGIC_WORD             (0xABADCAFEU) /* Magic word to be written in Service Registe
  96:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****                                                           to service or feed the watchdog. */
  97:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
  98:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**************************************************************************************************
  99:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * ENUMS
 100:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   *************************************************************************************************
 101:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 102:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 103:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *  Defines working modes for watchdog. Use type XMC_WDT_MODE_t for this enum.
 104:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 105:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** typedef enum XMC_WDT_MODE
 106:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** {
 107:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   XMC_WDT_MODE_TIMEOUT    = (uint32_t)0x0 << WDT_CTR_PRE_Pos, /**< Generates reset request as soon 
 108:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****                                                                    occurs. */
 109:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   XMC_WDT_MODE_PREWARNING = (uint32_t)0x1 << WDT_CTR_PRE_Pos  /**< Generates an alarm event for the
 110:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****                                                                    reset request after subsequent o
 111:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****                                                                    serviced after first overflow. *
 112:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** } XMC_WDT_MODE_t;
 113:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 114:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 115:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *  Defines debug behaviour of watchdog when the CPU enters HALT mode. Use type XMC_WDT_DEBUG_MODE_
 116:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 117:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** typedef enum XMC_WDT_DEBUG_MODE
 118:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** {
 119:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   XMC_WDT_DEBUG_MODE_STOP = (uint32_t)0x0 << WDT_CTR_DSP_Pos, /**< Watchdog counter is paused durin
 120:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   XMC_WDT_DEBUG_MODE_RUN  = (uint32_t)0x1 << WDT_CTR_DSP_Pos  /**< Watchdog counter is not paused d
 121:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** } XMC_WDT_DEBUG_MODE_t;
 122:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 123:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**************************************************************************************************
 124:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * DATA STRUCTURES
 125:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   *************************************************************************************************
 126:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /* Anonymous structure/union guard start */
 127:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #if defined(__CC_ARM)
 128:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #pragma push
 129:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #pragma anon_unions
 130:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #elif defined(__TASKING__)
 131:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #pragma warning 586
 132:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #endif
 133:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 134:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 135:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Structure for initializing watchdog timer. Use type XMC_WDT_CONFIG_t for this structure.
 136:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 137:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** typedef struct XMC_WDT_CONFIG
 138:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** {
 139:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   uint32_t window_upper_bound; /**< Upper bound for service window (WUB). Reset request is generate
 140:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****                                     timer. ALways upper bound value has to be more than lower bound
 141:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****                                     lower than WLB, triggers a system reset after timer crossed upp
 142:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****                                     Range: [0H to FFFFFFFFH] */
 143:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   uint32_t window_lower_bound; /**< Lower bound for servicing window (WLB). Setting the lower bound
 144:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****                                     window mechanism.\n
 145:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****                                     Range: [0H to FFFFFFFFH] */
 146:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   union
 147:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   {
 148:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****     struct
 149:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****     {
 150:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****       uint32_t : 1;
 151:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****       uint32_t prewarn_mode : 1;        /**< Pre-warning mode (PRE). This accepts boolean values as
 152:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****       uint32_t : 2;
 153:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****       uint32_t run_in_debug_mode : 1;   /**< Watchdog timer behaviour during debug (DSP). This acce
 154:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****       uint32_t : 3;
 155:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****       uint32_t service_pulse_width : 8; /**< Service Indication Pulse Width (SPW). Generated Pulse 
 156:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****                                              in fwdt cycles.\n
 157:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****                                              Range: [0H to FFH] */
 158:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****       uint32_t : 16;
 159:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****     };
 160:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****     uint32_t wdt_ctr; /* Value of operation mode control register (CTR). It’s bit fields are repr
 161:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****                            union members. */
 162:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   };
 163:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** } XMC_WDT_CONFIG_t;
 164:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /* Anonymous structure/union guard end */
 165:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #if defined(__CC_ARM)
 166:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #pragma pop
 167:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #elif defined(__TASKING__)
 168:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #pragma warning restore
 169:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #endif
 170:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**************************************************************************************************
 171:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * API PROTOTYPES
 172:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   *************************************************************************************************
 173:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 174:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #ifdef __cplusplus
 175:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** extern "C" {
 176:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #endif
 177:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 178:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 179:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param None
 180:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 181:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @return None
 182:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 183:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Description:</b><br>
 184:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \if XMC4
 185:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Enables watchdog clock and releases watchdog reset.\n
 186:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \endif
 187:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \if XMC1
 188:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Enables watchdog clock.\n
 189:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \endif
 190:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par
 191:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * This API is invoked by XMC_WDT_Init() and therefore no need to call it explicitly during watchdo
 192:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * sequence. Invoke this API to enable watchdog once again if the watchdog is disabled by invoking 
 193:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 194:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Note:</b><br>
 195:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \if XMC4
 196:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * 1. It is required to configure the watchdog, again after invoking XMC_WDT_Disable(). Since all t
 197:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *    reset with default values.
 198:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \endif
 199:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \if XMC1
 200:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * 1. Not required to configure the watchdog again after invoking XMC_WDT_Disable(). Since the regi
 201:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *    the configured values.
 202:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \endif
 203:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Related APIs:</b><BR>
 204:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * XMC_WDT_Init(), XMC_WDT_Disable()
 205:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 206:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** void XMC_WDT_Enable(void);
 207:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 208:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 209:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param None
 210:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 211:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @return None
 212:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 213:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Description:</b><br>
 214:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \if XMC4
 215:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Disables the clock and resets watchdog timer.\n
 216:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \endif
 217:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \if XMC1
 218:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Disables the clock to the watchdog timer.\n
 219:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \endif
 220:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 221:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Note:</b><br>
 222:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \if XMC4
 223:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * 1. Resets the registers with default values. So XMC_WDT_Init() has to be invoked again to config
 224:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \endif
 225:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \if XMC1
 226:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * 1. After invoking XMC_WDT_Disable(), all register values are displayed with 0F in debugger. Once
 227:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****       calling XMC_WDT_Enable(), previous configured register values are displayed. No need to invok
 228:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****       again.
 229:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \endif
 230:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Related APIs:</b><BR>
 231:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * XMC_WDT_Enable()
 232:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 233:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** void XMC_WDT_Disable(void);
 234:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 235:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 236:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param config pointer to a constant watchdog configuration data structure. Refer data structure 
 237:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *               for detail.
 238:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 239:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @return None
 240:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 241:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Description:</b><br>
 242:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Initializes and configures watchdog with configuration data pointed by \a config.\n
 243:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par
 244:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * It invokes XMC_WDT_Enable() to enable clock and release reset. Then configures the lower and upp
 245:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * working mode (timeout/pre-warning), debug behaviour and service request indication pulse width.
 246:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 247:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Note:</b><br>
 248:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * 1. With out invoking this XMC_WDT_Init() or XMC_WDT_Enable(), invocation of other APIs like XMC_
 249:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *    XMC_WDT_SetMode(), XMC_WDT_SetServicePulseWidth(), XMC_WDT_SetDebugMode(), XMC_WDT_Start(), X
 250:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *    XMC_WDT_Service(), XMC_WDT_ClearAlarm() has no affect.
 251:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 252:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** void XMC_WDT_Init(const XMC_WDT_CONFIG_t *const config);
 253:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 254:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 255:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param lower_bound specifies watchdog window lower bound in terms of watchdog clock (fWDT) cycle
 256:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *                    Range: [0H to FFFFFFFFH].
 257:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param upper_bound specifies watchdog window upper bound in terms of watchdog clock (fWDT) cycle
 258:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *                    Range: [0H to FFFFFFFFH].
 259:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 260:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @return None
 261:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 262:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Description:</b><br>
 263:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Sets watchdog window lower and upper bounds by updating WLB and WUB registers.\n
 264:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par
 265:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Window lower and upper bounds are set during initialization in XMC_WDT_Init(). Invoke this API t
 266:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * needed later in the program. This upper bound and lower bound can be calculated by using the bel
 267:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *       upper_bound or lower_bound = desired_boundary_time(sec) * fwdt(hz)
 268:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 269:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Note:</b>
 270:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * 1. Always ensure that upper_bound is greater than the lower_bound value. If not, whenever timer 
 271:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *    upper_bound value it triggers the reset(wdt_rst_req) of the controller.
 272:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 273:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** __STATIC_INLINE void XMC_WDT_SetWindowBounds(uint32_t lower_bound, uint32_t upper_bound)
 274:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** {
 275:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   WDT->WLB = lower_bound;
 276:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   WDT->WUB = upper_bound;
 277:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** }
 278:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 279:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 280:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param mode is one of the working modes of the watchdog timer, i.e timeout or pre-warning. Refer
 281:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *             for valid values.
 282:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 283:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @return None
 284:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 285:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Description:</b><br>
 286:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Sets watchdog working mode (timeout or pre-warning) by updating PRE bit of CTR register.\n
 287:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par
 288:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * The working mode is set during initialization in XMC_WDT_Init(). Invoke this API to alter the mo
 289:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * the program.
 290:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 291:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** __STATIC_INLINE void XMC_WDT_SetMode(XMC_WDT_MODE_t mode)
 292:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** {
 293:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   WDT->CTR = (WDT->CTR & (uint32_t)~WDT_CTR_PRE_Msk) | (uint32_t)mode;
 294:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** }
 295:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 296:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 297:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param service_pulse_width specifies Service indication pulse width in terms of fwdt.
 298:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *                            Range: [0H – FFH].
 299:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @return None
 300:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 301:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Description:</b><br>
 302:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Sets service indication pulse width by updating SPW bit field of CTR register.\n
 303:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par
 304:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * The service indication pulse (with width service_pulse_width + 1 in fwdt cycles) is generated on
 305:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * or feeding of watchdog. The pulse width is initially set during initialization in XMC_WDT_Init()
 306:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * alter the width as needed later in the program.
 307:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 308:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** __STATIC_INLINE void XMC_WDT_SetServicePulseWidth(uint8_t service_pulse_width)
 309:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** {
 310:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   WDT->CTR = (WDT->CTR & (uint32_t)~WDT_CTR_SPW_Msk) | ((uint32_t)service_pulse_width << WDT_CTR_SP
 311:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** }
 312:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 313:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 314:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param debug_mode running state of watchdog during debug halt mode. Refer @ref XMC_WDT_DEBUG_MOD
 315:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *                   valid values.
 316:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 317:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @return None
 318:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 319:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Description:</b><br>
 320:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Sets debug behaviour of watchdog by modifying DSP bit of CTR register.\n
 321:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par
 322:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Depending upon DSP bit, the watchdog timer stops when CPU is in HALT mode. The debug behaviour i
 323:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * XMC_WDT_DEBUG_MODE_STOP during initialization in XMC_WDT_Init(). Invoke this API to change the d
 324:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * needed later in the program.
 325:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 326:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** __STATIC_INLINE void XMC_WDT_SetDebugMode(const XMC_WDT_DEBUG_MODE_t debug_mode)
 327:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** {
 328:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   WDT->CTR = (WDT->CTR & (uint32_t)~WDT_CTR_DSP_Msk) | (uint32_t)debug_mode;
 329:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** }
 330:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 331:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 332:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param None
 333:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 334:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @return None
 335:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 336:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Description:</b><br>
 337:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Start the watchdog timer by setting ENB bit of CTR register.\n
 338:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par
 339:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Invoke this API to start the watchdog after initialization, or to resume the watchdog when
 340:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * paused by invoking XMC_WDT_Stop().
 341:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 342:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Related APIs:</b><BR>
 343:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * XMC_WDT_Init(), XMC_WDT_Stop()
 344:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 345:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** __STATIC_INLINE void XMC_WDT_Start(void)
 346:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** {
 262              	 .loc 4 346 0
 263              	 .cfi_startproc
 264 0000 80B5     	 push {r7,lr}
 265              	.LCFI18:
 266              	 .cfi_def_cfa_offset 8
 267              	 .cfi_offset 7,-8
 268              	 .cfi_offset 14,-4
 269 0002 00AF     	 add r7,sp,#0
 270              	.LCFI19:
 271              	 .cfi_def_cfa_register 7
 347:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   WDT->CTR |= (uint32_t)WDT_CTR_ENB_Msk;
 272              	 .loc 4 347 0
 273 0004 034B     	 ldr r3,.L10
 274 0006 034A     	 ldr r2,.L10
 275 0008 5268     	 ldr r2,[r2,#4]
 276 000a 0121     	 mov r1,#1
 277 000c 0A43     	 orr r2,r1
 278 000e 5A60     	 str r2,[r3,#4]
 348:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** }
 279              	 .loc 4 348 0
 280 0010 BD46     	 mov sp,r7
 281              	 
 282 0012 80BD     	 pop {r7,pc}
 283              	.L11:
 284              	 .align 2
 285              	.L10:
 286 0014 00000240 	 .word 1073872896
 287              	 .cfi_endproc
 288              	.LFE214:
 290              	 .section .text.XMC_WDT_Service,"ax",%progbits
 291              	 .align 2
 292              	 .code 16
 293              	 .thumb_func
 295              	XMC_WDT_Service:
 296              	.LFB217:
 349:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 350:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 351:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param None
 352:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 353:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @return None
 354:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 355:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Description:</b><br>
 356:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Pauses watchdog timer by resetting ENB bit of CTR register.\n
 357:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par
 358:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Invoke this API to pause the watchdog as needed in the program e.g. debugging through software c
 359:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 360:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Related APIs:</b><BR>
 361:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * XMC_WDT_Init(), XMC_WDT_Stop()
 362:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 363:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** __STATIC_INLINE void XMC_WDT_Stop(void)
 364:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** {
 365:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   WDT->CTR &= (uint32_t)~WDT_CTR_ENB_Msk;
 366:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** }
 367:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 368:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 369:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param None
 370:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 371:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @return uint32_t Current count value of watchdog timer register (TIM).
 372:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *                  Range: [0H to FFFFFFFFH]
 373:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 374:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Description:</b><br>
 375:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Reads current count of timer register (TIM).\n
 376:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par
 377:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Invoke this API before servicing or feeding the watchdog to check whether count is between lower
 378:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * window bounds.
 379:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 380:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Related APIs:</b><BR>
 381:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * XMC_WDT_Service()
 382:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 383:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** __STATIC_INLINE uint32_t XMC_WDT_GetCounter(void)
 384:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** {
 385:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   return WDT->TIM;
 386:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** }
 387:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 388:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 389:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param None
 390:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 391:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @return None
 392:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 393:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Description:</b><br>
 394:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Services or feeds the watchdog by writing the Magic word in SRV register.\n
 395:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par
 396:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Service watchdog when count value of watchdog timer is between lower and upper window bounds. Su
 397:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * will reset watchdog timer (TIM register) to 0H and generate service indication pulse.
 398:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 399:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Note:</b><br>
 400:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * 1. invoking this API when count value of watchdog timer is less than window lower bound results
 401:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *    wrong servicing and immediately triggers reset request.
 402:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 403:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Related APIs:</b><BR>
 404:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * XMC_WDT_GetCounter(), XMC_WDT_SetWindowBounds(), XMC_WDT_SetServicePulseWidth()
 405:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 406:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** __STATIC_INLINE void XMC_WDT_Service(void)
 407:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** {
 297              	 .loc 4 407 0
 298              	 .cfi_startproc
 299 0000 80B5     	 push {r7,lr}
 300              	.LCFI20:
 301              	 .cfi_def_cfa_offset 8
 302              	 .cfi_offset 7,-8
 303              	 .cfi_offset 14,-4
 304 0002 00AF     	 add r7,sp,#0
 305              	.LCFI21:
 306              	 .cfi_def_cfa_register 7
 408:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   WDT->SRV = XMC_WDT_MAGIC_WORD;
 307              	 .loc 4 408 0
 308 0004 024B     	 ldr r3,.L13
 309 0006 034A     	 ldr r2,.L13+4
 310 0008 9A60     	 str r2,[r3,#8]
 409:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** }
 311              	 .loc 4 409 0
 312 000a BD46     	 mov sp,r7
 313              	 
 314 000c 80BD     	 pop {r7,pc}
 315              	.L14:
 316 000e C046     	 .align 2
 317              	.L13:
 318 0010 00000240 	 .word 1073872896
 319 0014 FECAADAB 	 .word -1414673666
 320              	 .cfi_endproc
 321              	.LFE217:
 323              	 .section .text.XMC_WDT_ClearAlarm,"ax",%progbits
 324              	 .align 2
 325              	 .code 16
 326              	 .thumb_func
 328              	XMC_WDT_ClearAlarm:
 329              	.LFB218:
 410:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 411:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 412:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param None
 413:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 414:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @return None
 415:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 416:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Description:</b><br>
 417:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Clears pre-warning alarm by setting ALMC bit in WDTCLR register.\n
 418:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par
 419:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * In pre-warning mode, first overflow of the timer upper window bound fires the pre-warning alarm.
 420:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * must be invoked to clear the alarm alarm. After clearing of the alarm, watchdog timer must be se
 421:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * time window. Otherwise watchdog timer triggers the reset request up on crossing the upper bound 
 422:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * cycle.
 423:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 424:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Related APIs:</b><BR>
 425:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * XMC_WDT_Service(), XMC_WDT_SetMode()
 426:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 427:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** __STATIC_INLINE void XMC_WDT_ClearAlarm(void)
 428:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** {
 330              	 .loc 4 428 0
 331              	 .cfi_startproc
 332 0000 80B5     	 push {r7,lr}
 333              	.LCFI22:
 334              	 .cfi_def_cfa_offset 8
 335              	 .cfi_offset 7,-8
 336              	 .cfi_offset 14,-4
 337 0002 00AF     	 add r7,sp,#0
 338              	.LCFI23:
 339              	 .cfi_def_cfa_register 7
 429:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   WDT->WDTCLR = WDT_WDTCLR_ALMC_Msk;
 340              	 .loc 4 429 0
 341 0004 024B     	 ldr r3,.L16
 342 0006 0122     	 mov r2,#1
 343 0008 DA61     	 str r2,[r3,#28]
 430:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** }
 344              	 .loc 4 430 0
 345 000a BD46     	 mov sp,r7
 346              	 
 347 000c 80BD     	 pop {r7,pc}
 348              	.L17:
 349 000e C046     	 .align 2
 350              	.L16:
 351 0010 00000240 	 .word 1073872896
 352              	 .cfi_endproc
 353              	.LFE218:
 355              	 .section .text.WATCHDOG_Start,"ax",%progbits
 356              	 .align 2
 357              	 .code 16
 358              	 .thumb_func
 360              	WATCHDOG_Start:
 361              	.LFB219:
 362              	 .file 5 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG/watchdog.h"
   1:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
   2:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @file watchdog.h
   3:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @date 2016-02-09
   4:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
   5:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * NOTE:
   6:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
   8:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @cond
   9:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  **************************************************************************************************
  10:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * WATCHDOG v4.0.16 - Configures the watchdog peripheral instance.
  11:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  12:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * Copyright (c) 2016-2020, Infineon Technologies AG
  13:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * All rights reserved.
  14:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  15:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  16:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * following conditions are met:
  17:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  18:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  19:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   disclaimer.
  20:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  21:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  22:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  23:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  24:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  25:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   products derived from this software without specific prior written permission.
  26:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  27:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  28:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  29:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  30:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  31:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  32:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  33:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  34:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  35:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  36:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * with Infineon Technologies AG (dave@infineon.com).
  37:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  **************************************************************************************************
  38:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  39:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * Change History
  40:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * --------------
  41:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  42:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * 2015-02-16:
  43:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *     - Initial version<br>
  44:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  45:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * 2015-05-08:
  46:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *     - C++ guard applied to only API section<br>
  47:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *     - File guard updated according to the guidelines<br>
  48:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *     - Enum items of "WATCHDOG_EVENT_MODE" are changed to follow coding guidelines<br>
  49:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  50:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * 2015-06-20:
  51:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *     - "callback_func_ptr" in APP config structure is updated according to the GLOBAL_SCU APP.
  52:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  53:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * 2015-06-20:
  54:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *     - macro WATCHDOG_EVENT_CONFIGURATION is replaced with WATCHDOG_EVENT_VIA_SCU.
  55:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  56:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * 2016-02-09:
  57:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *     - Added a check for XMC4 devices, to verify that WATCHDOG clock is enabled or not in CLOCK_X
  58:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  59:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @endcond
  60:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  61:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
  62:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
  63:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #ifndef WATCHDOG_H
  64:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #define WATCHDOG_H
  65:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**************************************************************************************************
  66:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * HEADER FILES
  67:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  **************************************************************************************************
  68:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #include "xmc_wdt.h"
  69:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #if(UC_FAMILY == XMC4)
  70:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #include "CLOCK_XMC4/clock_xmc4.h"
  71:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #else
  72:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #include "CLOCK_XMC1/clock_xmc1.h"
  73:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #endif
  74:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #include "watchdog_conf.h"
  75:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #include "DAVE_Common.h"
  76:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
  77:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**************************************************************************************************
  78:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * MACROS
  79:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  **************************************************************************************************
  80:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #define WATCHDOG_XMC_LIB_MAJOR_VERSION 2
  81:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #define WATCHDOG_XMC_LIB_MINOR_VERSION 0
  82:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #define WATCHDOG_XMC_LIB_PATCH_VERSION 0
  83:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
  84:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #if !((XMC_LIB_MAJOR_VERSION > WATCHDOG_XMC_LIB_MAJOR_VERSION) ||\
  85:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****       ((XMC_LIB_MAJOR_VERSION == WATCHDOG_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION > WATCHD
  86:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****       ((XMC_LIB_MAJOR_VERSION == WATCHDOG_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION == WATCH
  87:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #error "WATCHDOG requires XMC Peripheral Library v2.0.0 or higher"
  88:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #endif
  89:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
  90:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**************************************************************************************************
  91:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * ENUMS
  92:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  **************************************************************************************************
  93:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
  94:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @ingroup WATCHDOG_enumerations
  95:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @{
  96:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
  97:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
  98:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
  99:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *  @brief In case of XMC4000 devices, WatchDog event can be generated as  Regular Interrupt or can
 100:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *         NMI Request. Where as in case of XMC1000 device, it can be generated as Regular Interrup
 101:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
 102:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** typedef enum WATCHDOG_EVENT_MODE
 103:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** {
 104:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****     WATCHDOG_EVENT_MODE_INTERRUPT   = 0U, /**< Regular Interrupt */
 105:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****     WATCHDOG_EVENT_MODE_NMI_REQUEST = 1U /**< Promoted to NMI */
 106:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** } WATCHDOG_EVENT_MODE_t;
 107:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
 108:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
 109:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *  @brief Initialization status.
 110:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
 111:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** typedef enum WATCHDOG_STATUS
 112:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** {
 113:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   WATCHDOG_STATUS_SUCCESS = 0U, /**< Status success */
 114:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   WATCHDOG_STATUS_FAILURE, /**< Status failure */
 115:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** } WATCHDOG_STATUS_t;
 116:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
 117:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** * @}
 118:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** */
 119:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
 120:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**************************************************************************************************
 121:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** * DATA STRUCTURES
 122:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** ***************************************************************************************************
 123:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
 124:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @ingroup WATCHDOG_datastructures
 125:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @{
 126:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
 127:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
 128:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
 129:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @brief WATCHDOG_HandleType is  data structure for storing the GUI configured values of a WATCHDO
 130:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
 131:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** typedef struct WATCHDOG
 132:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** {
 133:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   const XMC_WDT_CONFIG_t* const config; /**< Configuration of WDT */
 134:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   #if ((WATCHDOG_PREWARNING_CHECK == 1U) && (WATCHDOG_EVENT_VIA_SCU == 1U))
 135:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   #if(UC_FAMILY == XMC4)
 136:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   GLOBAL_SCU_XMC4_t* const scu_global_handler; /**< pointer to SCU_GLOBAL APP instance*/
 137:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   GLOBAL_SCU_XMC4_EVENT_HANDLER_t callback_func_ptr; /**< Callback function pointer */
 138:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   #else
 139:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   GLOBAL_SCU_XMC1_t* const scu_global_handler; /**< pointer to SCU_GLOBAL APP instance*/
 140:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   GLOBAL_SCU_XMC1_EVENT_HANDLER_t callback_func_ptr; /**< Callback function pointer */
 141:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   #endif
 142:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   #endif
 143:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   bool  initialized; /**< Holds the initialization status */
 144:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** } WATCHDOG_t;
 145:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
 146:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
 147:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** * @}
 148:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** */
 149:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**************************************************************************************************
 150:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** * API Prototypes
 151:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** ***************************************************************************************************
 152:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #ifdef __cplusplus
 153:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** extern "C" {
 154:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #endif
 155:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
 156:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @brief Get WATCHDOG APP version
 157:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @return DAVE_APP_VERSION_t APP version information (major, minor and patch number)
 158:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * <BR>
 159:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * \par<b>Description:</b><br>
 160:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * The function can be used to check application software compatibility with a
 161:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * specific version of the APP.
 162:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 163:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * Example Usage:
 164:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 165:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @code
 166:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * #include "DAVE.h"
 167:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * int main(void)
 168:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * {
 169:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   DAVE_STATUS_t status;
 170:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   DAVE_APP_VERSION_t app_version;
 171:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 172:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   status = DAVE_Init();    // WATCHDOG_Init() is called from DAVE_Init()
 173:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 174:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   app_version = WATCHDOG_GetAppVersion();
 175:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 176:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   if (app_version.major != 4U)
 177:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   {
 178:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *     // Probably, not the right version.
 179:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   }
 180:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 181:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   while(1U)
 182:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   {
 183:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   }
 184:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   return 1;
 185:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * }
 186:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @endcode<BR>
 187:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
 188:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
 189:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** DAVE_APP_VERSION_t WATCHDOG_GetAppVersion(void);
 190:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
 191:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
 192:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @ingroup WATCHDOG_apidoc
 193:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @{
 194:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
 195:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
 196:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
 197:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @brief Initializes a WATCHDOG with generated configuration.
 198:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 199:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @param handle pointer to the WATCHDOG APP handle structure.
 200:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @return WATCHDOG_STATUS_t\n
 201:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *         WATCHDOG_STATUS_SUCCESS : if initialization is successful\n
 202:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *         WATCHDOG_STATUS_FAILURE : if initialization is failed
 203:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * <BR>
 204:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * \par<b>Description:</b><br>
 205:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * <ul>
 206:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * <li>Enable the WDT module.</li>
 207:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * <li>Configure the service upper and lower bound settings</li>
 208:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * <li>Configure the Pre-warning alarm event, if enabled</li>
 209:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * </ul>
 210:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 211:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * Example Usage:
 212:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 213:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @code
 214:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * #include "DAVE.h"
 215:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * int main(void)
 216:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * {
 217:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   // ... Initializes Apps configurations ...
 218:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   DAVE_Init(); // WATCHDOG_Init(&WATCHDOG_0) will be called from DAVE_Init()
 219:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 220:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   while(1U)
 221:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   {
 222:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   }
 223:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 224:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   return 1;
 225:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * }
 226:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 227:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @endcode<BR> </p>
 228:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
 229:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** WATCHDOG_STATUS_t WATCHDOG_Init(WATCHDOG_t *handle);
 230:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
 231:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
 232:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @brief Starts the WATCHDOG timer.
 233:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 234:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @return None
 235:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * <BR>
 236:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * 
 237:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * \par<b>Description:</b><br>
 238:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * After starting, WDT has to be serviced with in the specified service window boundary.
 239:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * This can done by invoking WATCHDOG_Service(). If failed service, leads to system reset.
 240:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 241:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * Example Usage:
 242:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 243:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @code
 244:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * #include "DAVE.h"
 245:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * int main(void)
 246:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * {
 247:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   DAVE_STATUS_t status;
 248:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 249:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   status = DAVE_Init();        // Initialization of DAVE Apps
 250:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 251:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   if(status == DAVE_STATUS_SUCCESS)
 252:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   {
 253:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *     WATCHDOG_Start(); // Start the watchdog timer
 254:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   }
 255:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 256:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   while(1U)
 257:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   {
 258:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   }
 259:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 260:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   return 1;
 261:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * }
 262:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 263:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * void Watchdog_Handler(void)
 264:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * {
 265:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   WATCHDOG_Service(); //service the watchdog timer.
 266:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   WATCHDOG_Stop();
 267:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * }
 268:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 269:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @endcode<BR> </p>
 270:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
 271:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** __STATIC_INLINE void WATCHDOG_Start(void)
 272:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** {
 363              	 .loc 5 272 0
 364              	 .cfi_startproc
 365 0000 80B5     	 push {r7,lr}
 366              	.LCFI24:
 367              	 .cfi_def_cfa_offset 8
 368              	 .cfi_offset 7,-8
 369              	 .cfi_offset 14,-4
 370 0002 00AF     	 add r7,sp,#0
 371              	.LCFI25:
 372              	 .cfi_def_cfa_register 7
 273:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   XMC_WDT_Start();
 373              	 .loc 5 273 0
 374 0004 FFF7FEFF 	 bl XMC_WDT_Start
 274:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** }
 375              	 .loc 5 274 0
 376 0008 BD46     	 mov sp,r7
 377              	 
 378 000a 80BD     	 pop {r7,pc}
 379              	 .cfi_endproc
 380              	.LFE219:
 382              	 .section .text.WATCHDOG_Service,"ax",%progbits
 383              	 .align 2
 384              	 .code 16
 385              	 .thumb_func
 387              	WATCHDOG_Service:
 388              	.LFB221:
 275:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
 276:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
 277:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @brief Stops the WATCHDOG timer.
 278:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 279:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @return None
 280:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *            <BR>
 281:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 282:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * \par<b>Description:</b><br>
 283:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * WATCHDOG_Stop() can be used to pause the watchog timer as needed. To resume invoke WATCHDOG_Star
 284:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * 
 285:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * Example Usage:
 286:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 287:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @code
 288:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * #include "DAVE.h"
 289:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * int main(void)
 290:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * {
 291:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   DAVE_STATUS_t status;
 292:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 293:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   status = DAVE_Init();        // Initialization of DAVE Apps
 294:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 295:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   if(status == DAVE_STATUS_SUCCESS)
 296:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   {
 297:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *     WATCHDOG_Start(); // Start the watchdog timer
 298:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   }
 299:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 300:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   while(1U)
 301:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   {
 302:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   }
 303:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 304:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   return 1;
 305:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * }
 306:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 307:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * void Watchdog_Handler(void)
 308:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * {
 309:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   WATCHDOG_ClearAlarm(); //clears the alarm flag
 310:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   WATCHDOG_Service(); //service the watchdog timer.
 311:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   WATCHDOG_Stop(); //Stop the watchdog timer
 312:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * }
 313:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 314:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @endcode<BR> </p>
 315:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
 316:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** __STATIC_INLINE void WATCHDOG_Stop(void)
 317:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** {
 318:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   XMC_WDT_Stop();
 319:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** }
 320:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
 321:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
 322:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @brief Service the WATCHDOG timer.
 323:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 324:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @return    None                           
 325:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *            <BR>
 326:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 327:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * \par<b>Description:</b><br>
 328:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * WATCHDOG_Service() will reset the watchdog timer.
 329:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 330:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * Example Usage:
 331:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * 
 332:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @code
 333:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * #include "DAVE.h"
 334:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * int main(void)
 335:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * {
 336:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   DAVE_STATUS_t status;
 337:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 338:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   status = DAVE_Init();        // Initialization of DAVE Apps
 339:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 340:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   if(status == DAVE_STATUS_SUCCESS)
 341:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   {
 342:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *     WATCHDOG_Start(); // Start the watchdog timer
 343:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   }
 344:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 345:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   while(1U)
 346:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   {
 347:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   }
 348:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 349:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   return 1;
 350:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * }
 351:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 352:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * void Watchdog_Handler(void)
 353:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * {
 354:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   WATCHDOG_ClearAlarm(); //clears the alarm flag
 355:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   WATCHDOG_Service(); //service the watchdog timer.
 356:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   WATCHDOG_Stop();
 357:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * }
 358:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 359:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @endcode<BR> </p>
 360:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
 361:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** __STATIC_INLINE void WATCHDOG_Service(void)
 362:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** {
 389              	 .loc 5 362 0
 390              	 .cfi_startproc
 391 0000 80B5     	 push {r7,lr}
 392              	.LCFI26:
 393              	 .cfi_def_cfa_offset 8
 394              	 .cfi_offset 7,-8
 395              	 .cfi_offset 14,-4
 396 0002 00AF     	 add r7,sp,#0
 397              	.LCFI27:
 398              	 .cfi_def_cfa_register 7
 363:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   XMC_WDT_Service();
 399              	 .loc 5 363 0
 400 0004 FFF7FEFF 	 bl XMC_WDT_Service
 364:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** }
 401              	 .loc 5 364 0
 402 0008 BD46     	 mov sp,r7
 403              	 
 404 000a 80BD     	 pop {r7,pc}
 405              	 .cfi_endproc
 406              	.LFE221:
 408              	 .section .text.WATCHDOG_ClearAlarm,"ax",%progbits
 409              	 .align 2
 410              	 .code 16
 411              	 .thumb_func
 413              	WATCHDOG_ClearAlarm:
 414              	.LFB222:
 365:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
 366:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
 367:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @brief Clears the alarm flag.
 368:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 369:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @return None
 370:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * <BR>
 371:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * \par<b>Description:</b><br>
 372:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * After occurrence of Pre-warning alarm event, the timer has to be serviced with in second over fl
 373:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * clearing the alarm flag. Otherwise it will lead to system reset.
 374:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 375:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * Example Usage:
 376:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 377:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @code
 378:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * #include "DAVE.h"
 379:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * int main(void)
 380:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * {
 381:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   DAVE_STATUS_t status;
 382:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 383:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   status = DAVE_Init();        // Initialization of DAVE Apps
 384:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 385:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   if(status == DAVE_STATUS_SUCCESS)
 386:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   {
 387:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *     WATCHDOG_Start(); // Start the watchdog timer
 388:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   }
 389:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 390:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   while(1U)
 391:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   {
 392:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   }
 393:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 394:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   return 1;
 395:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * }
 396:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 397:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * void Watchdog_Handler(void)
 398:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * {
 399:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   WATCHDOG_ClearAlarm(); //clears the alarm flag
 400:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   WATCHDOG_Service(); //service the watchdog timer.
 401:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * }
 402:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 403:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @endcode<BR> </p>
 404:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
 405:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** __STATIC_INLINE void WATCHDOG_ClearAlarm(void)
 406:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** {
 415              	 .loc 5 406 0
 416              	 .cfi_startproc
 417 0000 80B5     	 push {r7,lr}
 418              	.LCFI28:
 419              	 .cfi_def_cfa_offset 8
 420              	 .cfi_offset 7,-8
 421              	 .cfi_offset 14,-4
 422 0002 00AF     	 add r7,sp,#0
 423              	.LCFI29:
 424              	 .cfi_def_cfa_register 7
 407:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   XMC_WDT_ClearAlarm();
 425              	 .loc 5 407 0
 426 0004 FFF7FEFF 	 bl XMC_WDT_ClearAlarm
 408:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** }
 427              	 .loc 5 408 0
 428 0008 BD46     	 mov sp,r7
 429              	 
 430 000a 80BD     	 pop {r7,pc}
 431              	 .cfi_endproc
 432              	.LFE222:
 434              	 .global NP
 435              	 .section .data.NP,"aw",%progbits
 436              	 .align 2
 439              	NP:
 440 0000 36030000 	 .word 822
 441 0004 DC020000 	 .word 732
 442 0008 1B030000 	 .word 795
 443 000c BC020000 	 .word 700
 444              	 .global NPfl
 445              	 .section .data.NPfl,"aw",%progbits
 446              	 .align 2
 449              	NPfl:
 450 0000 D2020000 	 .word 722
 451              	 .global NPfr
 452              	 .section .data.NPfr,"aw",%progbits
 453              	 .align 2
 456              	NPfr:
 457 0000 DF020000 	 .word 735
 458              	 .global NPrl
 459              	 .section .data.NPrl,"aw",%progbits
 460              	 .align 2
 463              	NPrl:
 464 0000 4B000000 	 .word 75
 465              	 .global NPrr
 466              	 .section .data.NPrr,"aw",%progbits
 467              	 .align 2
 470              	NPrr:
 471 0000 BC020000 	 .word 700
 472              	 .global RC_controll
 473              	 .section .data.RC_controll,"aw",%progbits
 476              	RC_controll:
 477 0000 01       	 .byte 1
 478              	 .global Steering_mode
 479              	 .section .data.Steering_mode,"aw",%progbits
 482              	Steering_mode:
 483 0000 03       	 .byte 3
 484              	 .global New_Input
 485              	 .section .bss.New_Input,"aw",%nobits
 488              	New_Input:
 489 0000 00       	 .space 1
 490              	 .global NO_New_Input_counter
 491              	 .section .bss.NO_New_Input_counter,"aw",%nobits
 492              	 .align 2
 495              	NO_New_Input_counter:
 496 0000 00000000 	 .space 4
 497              	 .global Speeds_int16_r
 498              	 .section .bss.Speeds_int16_r,"aw",%nobits
 499              	 .align 2
 502              	Speeds_int16_r:
 503 0000 00000000 	 .space 8
 503      00000000 
 504              	 .global CAN_RX_0
 505              	 .section .bss.CAN_RX_0,"aw",%nobits
 506              	 .align 1
 509              	CAN_RX_0:
 510 0000 0000     	 .space 2
 511              	 .comm init_status,1,1
 512              	 .global CAN_OK
 513              	 .section .bss.CAN_OK,"aw",%nobits
 514              	 .align 2
 517              	CAN_OK:
 518 0000 00000000 	 .space 4
 519              	 .global Inverters_CAN_state
 520              	 .section .bss.Inverters_CAN_state,"aw",%nobits
 521              	 .align 2
 524              	Inverters_CAN_state:
 525 0000 00000000 	 .space 4
 526              	 .global CAN_10ms_counter
 527              	 .section .bss.CAN_10ms_counter,"aw",%nobits
 528              	 .align 2
 531              	CAN_10ms_counter:
 532 0000 00000000 	 .space 4
 533              	 .global reset_distance
 534              	 .section .bss.reset_distance,"aw",%nobits
 537              	reset_distance:
 538 0000 00       	 .space 1
 539              	 .global speed_fl_act
 540              	 .section .bss.speed_fl_act,"aw",%nobits
 541              	 .align 2
 544              	speed_fl_act:
 545 0000 00000000 	 .space 4
 546              	 .global speed_fr_act
 547              	 .section .bss.speed_fr_act,"aw",%nobits
 548              	 .align 2
 551              	speed_fr_act:
 552 0000 00000000 	 .space 4
 553              	 .global speed_rl_act
 554              	 .section .bss.speed_rl_act,"aw",%nobits
 555              	 .align 2
 558              	speed_rl_act:
 559 0000 00000000 	 .space 4
 560              	 .global speed_rr_act
 561              	 .section .bss.speed_rr_act,"aw",%nobits
 562              	 .align 2
 565              	speed_rr_act:
 566 0000 00000000 	 .space 4
 567              	 .global distance_fl_act
 568              	 .section .bss.distance_fl_act,"aw",%nobits
 569              	 .align 2
 572              	distance_fl_act:
 573 0000 00000000 	 .space 4
 574              	 .global distance_fr_act
 575              	 .section .bss.distance_fr_act,"aw",%nobits
 576              	 .align 2
 579              	distance_fr_act:
 580 0000 00000000 	 .space 4
 581              	 .global distance_rl_act
 582              	 .section .bss.distance_rl_act,"aw",%nobits
 583              	 .align 2
 586              	distance_rl_act:
 587 0000 00000000 	 .space 4
 588              	 .global distance_rr_act
 589              	 .section .bss.distance_rr_act,"aw",%nobits
 590              	 .align 2
 593              	distance_rr_act:
 594 0000 00000000 	 .space 4
 595              	 .global CAN_RX_Inverter_count
 596              	 .section .bss.CAN_RX_Inverter_count,"aw",%nobits
 599              	CAN_RX_Inverter_count:
 600 0000 00       	 .space 1
 601              	 .global CAN_state_Ultrasonic
 602              	 .section .bss.CAN_state_Ultrasonic,"aw",%nobits
 605              	CAN_state_Ultrasonic:
 606 0000 00       	 .space 1
 607              	 .global Ultrasonic_cm_C
 608              	 .section .bss.Ultrasonic_cm_C,"aw",%nobits
 609              	 .align 1
 612              	Ultrasonic_cm_C:
 613 0000 0000     	 .space 2
 614              	 .global Ultrasonic_cm_L
 615              	 .section .bss.Ultrasonic_cm_L,"aw",%nobits
 616              	 .align 1
 619              	Ultrasonic_cm_L:
 620 0000 0000     	 .space 2
 621              	 .global Ultrasonic_cm_R
 622              	 .section .bss.Ultrasonic_cm_R,"aw",%nobits
 623              	 .align 1
 626              	Ultrasonic_cm_R:
 627 0000 0000     	 .space 2
 628              	 .global ALPHA_ULTARSONIC
 629              	 .section .data.ALPHA_ULTARSONIC,"aw",%progbits
 630              	 .align 2
 633              	ALPHA_ULTARSONIC:
 634 0000 0000003F 	 .word 1056964608
 635              	 .global obstructed_L
 636              	 .section .bss.obstructed_L,"aw",%nobits
 639              	obstructed_L:
 640 0000 00       	 .space 1
 641              	 .global obstructed_R
 642              	 .section .bss.obstructed_R,"aw",%nobits
 645              	obstructed_R:
 646 0000 00       	 .space 1
 647              	 .global Fil_Ultrasonic_m_C
 648              	 .section .bss.Fil_Ultrasonic_m_C,"aw",%nobits
 649              	 .align 2
 652              	Fil_Ultrasonic_m_C:
 653 0000 00000000 	 .space 4
 654              	 .global Fil_Ultrasonic_m_L
 655              	 .section .bss.Fil_Ultrasonic_m_L,"aw",%nobits
 656              	 .align 2
 659              	Fil_Ultrasonic_m_L:
 660 0000 00000000 	 .space 4
 661              	 .global Fil_Ultrasonic_m_R
 662              	 .section .bss.Fil_Ultrasonic_m_R,"aw",%nobits
 663              	 .align 2
 666              	Fil_Ultrasonic_m_R:
 667 0000 00000000 	 .space 4
 668              	 .global RC_Signal_OK
 669              	 .section .bss.RC_Signal_OK,"aw",%nobits
 672              	RC_Signal_OK:
 673 0000 00       	 .space 1
 674              	 .global RC_Signal_not_OK_counter
 675              	 .section .bss.RC_Signal_not_OK_counter,"aw",%nobits
 678              	RC_Signal_not_OK_counter:
 679 0000 00       	 .space 1
 680              	 .global captured_time_Steering
 681              	 .section .bss.captured_time_Steering,"aw",%nobits
 682              	 .align 2
 685              	captured_time_Steering:
 686 0000 00000000 	 .space 4
 687              	 .global captured_time_Speed
 688              	 .section .bss.captured_time_Speed,"aw",%nobits
 689              	 .align 2
 692              	captured_time_Speed:
 693 0000 00000000 	 .space 4
 694              	 .global RC_no_Speed_data_counter
 695              	 .section .bss.RC_no_Speed_data_counter,"aw",%nobits
 698              	RC_no_Speed_data_counter:
 699 0000 00       	 .space 1
 700              	 .global RC_no_Steering_data_counter
 701              	 .section .bss.RC_no_Steering_data_counter,"aw",%nobits
 704              	RC_no_Steering_data_counter:
 705 0000 00       	 .space 1
 706              	 .global RC_Speed
 707              	 .section .bss.RC_Speed,"aw",%nobits
 708              	 .align 2
 711              	RC_Speed:
 712 0000 00000000 	 .space 4
 713              	 .global RC_Steering
 714              	 .section .bss.RC_Steering,"aw",%nobits
 715              	 .align 2
 718              	RC_Steering:
 719 0000 00000000 	 .space 4
 720              	 .global RC_Speed_ns_to_mps
 721              	 .section .data.RC_Speed_ns_to_mps,"aw",%progbits
 722              	 .align 2
 725              	RC_Speed_ns_to_mps:
 726 0000 ACC5A735 	 .word 900187564
 727              	 .global RC_Steering_ns_to_deg
 728              	 .section .data.RC_Steering_ns_to_deg,"aw",%progbits
 729              	 .align 2
 732              	RC_Steering_ns_to_deg:
 733 0000 72335C39 	 .word 962343794
 734              	 .global RC_gear_100us_counter
 735              	 .section .bss.RC_gear_100us_counter,"aw",%nobits
 736              	 .align 2
 739              	RC_gear_100us_counter:
 740 0000 00000000 	 .space 4
 741              	 .global RC_AUX1_100us_counter
 742              	 .section .bss.RC_AUX1_100us_counter,"aw",%nobits
 743              	 .align 2
 746              	RC_AUX1_100us_counter:
 747 0000 00000000 	 .space 4
 748              	 .global RC_Gear_state
 749              	 .section .data.RC_Gear_state,"aw",%progbits
 752              	RC_Gear_state:
 753 0000 02       	 .byte 2
 754              	 .global RC_AUX1_state
 755              	 .section .data.RC_AUX1_state,"aw",%progbits
 758              	RC_AUX1_state:
 759 0000 02       	 .byte 2
 760              	 .global RC_Gear_duty
 761              	 .section .data.RC_Gear_duty,"aw",%progbits
 764              	RC_Gear_duty:
 765 0000 02       	 .byte 2
 766              	 .global RC_Gear_duty_OLD
 767              	 .section .data.RC_Gear_duty_OLD,"aw",%progbits
 770              	RC_Gear_duty_OLD:
 771 0000 02       	 .byte 2
 772              	 .global RC_AUX1_duty
 773              	 .section .data.RC_AUX1_duty,"aw",%progbits
 776              	RC_AUX1_duty:
 777 0000 02       	 .byte 2
 778              	 .global RC_Speed_Stop
 779              	 .section .data.RC_Speed_Stop,"aw",%progbits
 782              	RC_Speed_Stop:
 783 0000 01       	 .byte 1
 784              	 .global Steering_direction
 785              	 .section .bss.Steering_direction,"aw",%nobits
 786              	 .align 2
 789              	Steering_direction:
 790 0000 00000000 	 .space 4
 791              	 .global Driving_speed
 792              	 .section .bss.Driving_speed,"aw",%nobits
 793              	 .align 2
 796              	Driving_speed:
 797 0000 00000000 	 .space 4
 798              	 .comm R_Turn,4,4
 799              	 .comm Speed_ratio,4,4
 800              	 .global speed_fl
 801              	 .section .bss.speed_fl,"aw",%nobits
 802              	 .align 2
 805              	speed_fl:
 806 0000 00000000 	 .space 4
 807              	 .global speed_fr
 808              	 .section .bss.speed_fr,"aw",%nobits
 809              	 .align 2
 812              	speed_fr:
 813 0000 00000000 	 .space 4
 814              	 .global speed_rl
 815              	 .section .bss.speed_rl,"aw",%nobits
 816              	 .align 2
 819              	speed_rl:
 820 0000 00000000 	 .space 4
 821              	 .global speed_rr
 822              	 .section .bss.speed_rr,"aw",%nobits
 823              	 .align 2
 826              	speed_rr:
 827 0000 00000000 	 .space 4
 828              	 .global angle_fl
 829              	 .section .bss.angle_fl,"aw",%nobits
 830              	 .align 2
 833              	angle_fl:
 834 0000 00000000 	 .space 4
 835              	 .global angle_fr
 836              	 .section .bss.angle_fr,"aw",%nobits
 837              	 .align 2
 840              	angle_fr:
 841 0000 00000000 	 .space 4
 842              	 .global angle_rl
 843              	 .section .bss.angle_rl,"aw",%nobits
 844              	 .align 2
 847              	angle_rl:
 848 0000 00000000 	 .space 4
 849              	 .global angle_rr
 850              	 .section .bss.angle_rr,"aw",%nobits
 851              	 .align 2
 854              	angle_rr:
 855 0000 00000000 	 .space 4
 856              	 .global Speeds
 857              	 .section .bss.Speeds,"aw",%nobits
 858              	 .align 2
 861              	Speeds:
 862 0000 00000000 	 .space 16
 862      00000000 
 862      00000000 
 862      00000000 
 863              	 .global Steering_Angles
 864              	 .section .bss.Steering_Angles,"aw",%nobits
 865              	 .align 2
 868              	Steering_Angles:
 869 0000 00000000 	 .space 16
 869      00000000 
 869      00000000 
 869      00000000 
 870              	 .global Servo_PWMs
 871              	 .section .bss.Servo_PWMs,"aw",%nobits
 872              	 .align 2
 875              	Servo_PWMs:
 876 0000 00000000 	 .space 16
 876      00000000 
 876      00000000 
 876      00000000 
 877              	 .global Inveter_CAN_OK
 878              	 .section .bss.Inveter_CAN_OK,"aw",%nobits
 879              	 .align 2
 882              	Inveter_CAN_OK:
 883 0000 00000000 	 .space 4
 884              	 .global Actual_Speeds
 885              	 .section .bss.Actual_Speeds,"aw",%nobits
 886              	 .align 2
 889              	Actual_Speeds:
 890 0000 00000000 	 .space 16
 890      00000000 
 890      00000000 
 890      00000000 
 891              	 .global Actual_Distance
 892              	 .section .bss.Actual_Distance,"aw",%nobits
 893              	 .align 2
 896              	Actual_Distance:
 897 0000 00000000 	 .space 16
 897      00000000 
 897      00000000 
 897      00000000 
 898              	 .section .text.main,"ax",%progbits
 899              	 .align 2
 900              	 .global main
 901              	 .code 16
 902              	 .thumb_func
 904              	main:
 905              	.LFB224:
 906              	 .file 6 "../main.c"
   1:../main.c     **** /*
   2:../main.c     ****  * main.c
   3:../main.c     ****  *
   4:../main.c     ****  *  Created on: 2022 Apr 25 09:31:37
   5:../main.c     ****  *  Author: lukas
   6:../main.c     ****  */
   7:../main.c     **** #include "DAVE.h"                 //Declarations from DAVE Code Generation (includes SFR declaratio
   8:../main.c     **** #include <math.h>
   9:../main.c     **** 
  10:../main.c     **** #define CHECK_BIT(var,pos) (((var)>>(pos)) & 1)
  11:../main.c     **** 
  12:../main.c     **** //constant
  13:../main.c     **** int NP[4] = {822, 732, 795, 700}; //servo nutral points PWM duty values
  14:../main.c     **** int NPfl = 722; int NPfr = 735; int NPrl = 75; int NPrr = 700; // serov defalut 750
  15:../main.c     **** #define MIN_Speed  0.05
  16:../main.c     **** #define MAX_Speed  1
  17:../main.c     **** 
  18:../main.c     **** #define ROTATION_ANGLE 53.96
  19:../main.c     **** #define ROTATION_ANGLE_OFFSET 5
  20:../main.c     **** #define ROTATION_SPEED  0.25
  21:../main.c     **** 
  22:../main.c     **** #define PI180 0.01745329
  23:../main.c     **** #define PI 3.14
  24:../main.c     **** #define HALF_PI 1.57
  25:../main.c     **** #define RAD_TO_DEG 57.296
  26:../main.c     **** 
  27:../main.c     **** // steering parameter
  28:../main.c     **** //const float WHEEL_BASE = 0.448;
  29:../main.c     **** #define WHEEL_BASE 0.448
  30:../main.c     **** #define	HALF_WHEEL_BASE 			0.22				// halfbase of mobrob
  31:../main.c     **** //#define 	HALFBASEPOW2 		(HALFBASE*HALFBASE)		// halfbase of mobrob to the power of two
  32:../main.c     **** #define	HALF_TRACK_WIDTH		0.163					// halftrack of mobrob
  33:../main.c     **** #define 	R_WHEEL				0.067			// wheel radius of mobrob
  34:../main.c     **** #define	R_TRUN_MAX				20.000				// maximum corner radius (before straight)
  35:../main.c     **** #define 	R_TRUN_MIN				0.05				// minimum corner/reorientation radius
  36:../main.c     **** //#define		P_RO_VEL			0.500					// reduction factor for reorientation velocity
  37:../main.c     **** //#define		CWHEEL				(2.000*M_PI*RWHEEL)		// wheel circumference of mobrob
  38:../main.c     **** 
  39:../main.c     **** 
  40:../main.c     **** // Var MODES
  41:../main.c     **** volatile uint8_t RC_controll = 1; // if 1 RC controll
  42:../main.c     **** //uint8_t Steering_mode = 3; // otions 1 'Front';  2'Rear'; 3 '4_Wheel'; 4 'Carb'; 5 'Rotate' 0 not
  43:../main.c     **** enum STEERING_MODES{
  44:../main.c     **** 	ZERO = 0,
  45:../main.c     **** 	FRONT = 1,
  46:../main.c     **** 	BACK = 2,
  47:../main.c     **** 	ALL_WHEEL = 3,
  48:../main.c     **** 	CRAB = 4,
  49:../main.c     **** 	ROTATE =5
  50:../main.c     **** };
  51:../main.c     **** volatile enum STEERING_MODES Steering_mode = ALL_WHEEL;
  52:../main.c     **** volatile uint8_t New_Input = 0;
  53:../main.c     **** volatile uint32_t NO_New_Input_counter = 0;
  54:../main.c     **** 
  55:../main.c     **** 
  56:../main.c     **** //VAR CAN
  57:../main.c     **** int16_t Speeds_int16_r[4] = {0};
  58:../main.c     **** int16_t CAN_RX_0 = 0;
  59:../main.c     **** CAN_NODE_STATUS_t init_status;
  60:../main.c     **** int CAN_OK = 0;
  61:../main.c     **** uint8_t Inverters_CAN_state[4] = {0};
  62:../main.c     **** uint32_t CAN_10ms_counter = 0; // to send ever 10ms
  63:../main.c     **** 
  64:../main.c     **** volatile uint8_t reset_distance = 0;// reste from mircum by setting 1
  65:../main.c     **** float speed_fl_act = 0;float speed_fr_act = 0;float speed_rl_act = 0;float speed_rr_act = 0; // in 
  66:../main.c     **** float distance_fl_act = 0;float distance_fr_act = 0;float distance_rl_act = 0;float distance_rr_act
  67:../main.c     **** 
  68:../main.c     **** volatile uint8_t CAN_RX_Inverter_count = 0;
  69:../main.c     **** 
  70:../main.c     **** //ULTRASOCNIC
  71:../main.c     **** // reciving
  72:../main.c     **** volatile uint8_t CAN_state_Ultrasonic = 0;
  73:../main.c     **** volatile uint16_t Ultrasonic_cm_C = 0;
  74:../main.c     **** volatile uint16_t Ultrasonic_cm_L = 0;
  75:../main.c     **** volatile uint16_t Ultrasonic_cm_R = 0;
  76:../main.c     **** // filtering
  77:../main.c     **** float ALPHA_ULTARSONIC = 0.5; // giltering prameter for the Exponential moving average
  78:../main.c     **** #define POS_OBSTRUCTED_ANGLE_MIN 50
  79:../main.c     **** #define POS_OBSTRUCTED_ANGLE_MAX 210
  80:../main.c     **** #define NEG_OBSTRUCTED_ANGLE_MIN -150
  81:../main.c     **** #define NEG_OBSTRUCTED_ANGLE_MAX -310
  82:../main.c     **** uint8_t obstructed_L = 0, obstructed_R = 0;
  83:../main.c     **** float Fil_Ultrasonic_m_C = 0;
  84:../main.c     **** float Fil_Ultrasonic_m_L = 0;
  85:../main.c     **** float Fil_Ultrasonic_m_R = 0;
  86:../main.c     **** 
  87:../main.c     **** // Var RC
  88:../main.c     **** uint8_t RC_Signal_OK = 0, RC_Signal_not_OK_counter = 0; // 0 no ok 1 OK
  89:../main.c     **** uint32_t  captured_time_Steering=0, captured_time_Speed=0;
  90:../main.c     **** uint8_t RC_no_Speed_data_counter = 0, RC_no_Steering_data_counter = 0;
  91:../main.c     **** float RC_Speed = 0, RC_Steering = 0;
  92:../main.c     **** #define RC_NP_SPEED  1500000
  93:../main.c     **** #define RC_NP_STEERING  1540000
  94:../main.c     **** float RC_Speed_ns_to_mps = 0.00000125;
  95:../main.c     **** float RC_Steering_ns_to_deg = 0.00021;
  96:../main.c     **** 
  97:../main.c     **** volatile uint32_t RC_gear_100us_counter = 0, RC_AUX1_100us_counter = 0;
  98:../main.c     **** volatile uint8_t RC_Gear_state = 2, RC_AUX1_state = 2;
  99:../main.c     **** volatile uint8_t RC_Gear_duty = 2, RC_Gear_duty_OLD =2, RC_AUX1_duty = 2;
 100:../main.c     **** uint8_t RC_Speed_Stop = 1;
 101:../main.c     **** 
 102:../main.c     **** //VAR general
 103:../main.c     **** float Steering_direction = 0; // steering Angle
 104:../main.c     **** float Driving_speed = 0;
 105:../main.c     **** 
 106:../main.c     **** float R_Turn;
 107:../main.c     **** float Speed_ratio;
 108:../main.c     **** 
 109:../main.c     **** float speed_fl = 0;float speed_fr = 0;float speed_rl = 0;float speed_rr = 0; // in m/s
 110:../main.c     **** float angle_fl = 0;float angle_fr = 0;float angle_rl = 0;float angle_rr = 0; // in deg  0 straing a
 111:../main.c     **** 
 112:../main.c     **** volatile float Speeds[4] = {0, 0, 0, 0};
 113:../main.c     **** volatile float Steering_Angles[4] = {0, 0, 0, 0};
 114:../main.c     **** float Servo_PWMs[4] = {0, 0, 0, 0};
 115:../main.c     **** 
 116:../main.c     **** //values form inveter bioard over CAN
 117:../main.c     **** uint8_t Inveter_CAN_OK[4] = {0};
 118:../main.c     **** float Actual_Speeds[4] = {0};
 119:../main.c     **** float Actual_Distance[4] = {0};
 120:../main.c     **** 
 121:../main.c     **** // FUNCTIONS
 122:../main.c     **** void CAN_send_Speeds(float Speed_data[4]);
 123:../main.c     **** void CAN_reset_distance(uint8_t distance_to_reset[4]);
 124:../main.c     **** void Steering_set_Angles(float Angles_data_int[4]);
 125:../main.c     **** void Steering_Function(float Steering_direction_cal, float Driving_speed_cal, uint8_t Steering_mode
 126:../main.c     **** void RC_Recive(void);
 127:../main.c     **** void Servo_NP_setting(void);
 128:../main.c     **** void mode_led(uint8_t var);
 129:../main.c     **** float average(float a[],int num_values);
 130:../main.c     **** void CAN_Inveter_RX_Interperter(uint8_t data_RX[8], uint8_t Motor_on_rover);
 131:../main.c     **** void CAN_RX_Inverter_Read_Data();
 132:../main.c     **** void Ultra_sonic_filter(int16_t Ultrasonic_cm_C_clc, int16_t Ultrasonic_cm_L_clc, int16_t Ultrasoni
 133:../main.c     **** float Exp_moving_average(float new_value, float value, float ALPHA);
 134:../main.c     **** uint8_t Ultrasoinc_Obstructet_Test(float Angle);
 135:../main.c     **** 
 136:../main.c     **** 
 137:../main.c     **** int main(void)
 138:../main.c     **** {
 907              	 .loc 6 138 0
 908              	 .cfi_startproc
 909 0000 90B5     	 push {r4,r7,lr}
 910              	.LCFI30:
 911              	 .cfi_def_cfa_offset 12
 912              	 .cfi_offset 4,-12
 913              	 .cfi_offset 7,-8
 914              	 .cfi_offset 14,-4
 915 0002 83B0     	 sub sp,sp,#12
 916              	.LCFI31:
 917              	 .cfi_def_cfa_offset 24
 918 0004 00AF     	 add r7,sp,#0
 919              	.LCFI32:
 920              	 .cfi_def_cfa_register 7
 139:../main.c     ****   DAVE_STATUS_t status;
 140:../main.c     **** 
 141:../main.c     ****   status = DAVE_Init();           /* Initialization of DAVE APPs  */
 921              	 .loc 6 141 0
 922 0006 FC1D     	 add r4,r7,#7
 923 0008 FFF7FEFF 	 bl DAVE_Init
 924 000c 031C     	 mov r3,r0
 925 000e 2370     	 strb r3,[r4]
 142:../main.c     **** 
 143:../main.c     ****   if (status != DAVE_STATUS_SUCCESS)
 926              	 .loc 6 143 0
 927 0010 FB1D     	 add r3,r7,#7
 928 0012 1B78     	 ldrb r3,[r3]
 929 0014 002B     	 cmp r3,#0
 930 0016 00D0     	 beq .L22
 931              	.L23:
 144:../main.c     ****   {
 145:../main.c     ****     /* Placeholder for error handler code. The while loop below can be replaced with an user error 
 146:../main.c     ****     XMC_DEBUG("DAVE APPs initialization failed\n");
 147:../main.c     **** 
 148:../main.c     ****     while(1U)
 149:../main.c     ****     {
 150:../main.c     **** 
 151:../main.c     ****     }
 932              	 .loc 6 151 0 discriminator 1
 933 0018 FEE7     	 b .L23
 934              	.L22:
 152:../main.c     ****   }
 153:../main.c     **** 
 154:../main.c     ****   //Initialization of CAN
 155:../main.c     ****   	//CAN_NODE_STATUS_t init_status;
 156:../main.c     ****   	init_status = CAN_NODE_Init(&CAN_NODE_0);
 935              	 .loc 6 156 0
 936 001a 094B     	 ldr r3,.L26
 937 001c 181C     	 mov r0,r3
 938 001e FFF7FEFF 	 bl CAN_NODE_Init
 939 0022 031C     	 mov r3,r0
 940 0024 1A1C     	 mov r2,r3
 941 0026 074B     	 ldr r3,.L26+4
 942 0028 1A70     	 strb r2,[r3]
 157:../main.c     **** 
 158:../main.c     ****   	if (init_status != CAN_NODE_STATUS_SUCCESS) {
 943              	 .loc 6 158 0
 944 002a 064B     	 ldr r3,.L26+4
 945 002c 1B78     	 ldrb r3,[r3]
 946 002e 002B     	 cmp r3,#0
 947 0030 02D1     	 bne .L24
 159:../main.c     ****   		XMC_DEBUG("CAN initialization failed\n");
 160:../main.c     ****   	}
 161:../main.c     ****   	else{
 162:../main.c     ****   		CAN_OK = 1;
 948              	 .loc 6 162 0
 949 0032 054B     	 ldr r3,.L26+8
 950 0034 0122     	 mov r2,#1
 951 0036 1A60     	 str r2,[r3]
 952              	.L24:
 163:../main.c     ****   	}
 164:../main.c     **** 
 165:../main.c     ****   	// watchdog
 166:../main.c     ****   	WATCHDOG_Start();
 953              	 .loc 6 166 0
 954 0038 FFF7FEFF 	 bl WATCHDOG_Start
 955              	.L25:
 167:../main.c     **** 
 168:../main.c     ****   /* Placeholder for user application code. The while loop below can be replaced with user applicat
 169:../main.c     ****   while(1U)
 170:../main.c     ****   {
 171:../main.c     **** 	// Servo_NP_setting();	  // nutral point servo setting
 172:../main.c     ****   }
 956              	 .loc 6 172 0 discriminator 2
 957 003c FEE7     	 b .L25
 958              	.L27:
 959 003e C046     	 .align 2
 960              	.L26:
 961 0040 00000000 	 .word CAN_NODE_0
 962 0044 00000000 	 .word init_status
 963 0048 00000000 	 .word CAN_OK
 964              	 .cfi_endproc
 965              	.LFE224:
 967              	 .global __aeabi_fcmpgt
 968              	 .global __aeabi_fcmplt
 969              	 .global __aeabi_f2d
 970              	 .global __aeabi_dcmplt
 971              	 .global __aeabi_dcmpgt
 972              	 .global __aeabi_ddiv
 973              	 .global __aeabi_d2f
 974              	 .global __aeabi_dadd
 975              	 .global __aeabi_dmul
 976              	 .global __aeabi_dsub
 977              	 .global __aeabi_fmul
 978              	 .global __aeabi_fdiv
 979              	 .section .text.Steering_Function,"ax",%progbits
 980              	 .align 2
 981              	 .global Steering_Function
 982              	 .code 16
 983              	 .thumb_func
 985              	Steering_Function:
 986              	.LFB225:
 173:../main.c     **** }
 174:../main.c     **** 
 175:../main.c     **** 
 176:../main.c     **** void Steering_Function(float Steering_direction_cal, float Driving_speed_cal, uint8_t Steering_mode
 987              	 .loc 6 176 0
 988              	 .cfi_startproc
 989 0000 F0B5     	 push {r4,r5,r6,r7,lr}
 990              	.LCFI33:
 991              	 .cfi_def_cfa_offset 20
 992              	 .cfi_offset 4,-20
 993              	 .cfi_offset 5,-16
 994              	 .cfi_offset 6,-12
 995              	 .cfi_offset 7,-8
 996              	 .cfi_offset 14,-4
 997 0002 85B0     	 sub sp,sp,#20
 998              	.LCFI34:
 999              	 .cfi_def_cfa_offset 40
 1000 0004 00AF     	 add r7,sp,#0
 1001              	.LCFI35:
 1002              	 .cfi_def_cfa_register 7
 1003 0006 F860     	 str r0,[r7,#12]
 1004 0008 B960     	 str r1,[r7,#8]
 1005 000a FB1D     	 add r3,r7,#7
 1006 000c 1A70     	 strb r2,[r3]
 177:../main.c     **** 	New_Input = 0;
 1007              	 .loc 6 177 0
 1008 000e B84B     	 ldr r3,.L115
 1009 0010 0022     	 mov r2,#0
 1010 0012 1A70     	 strb r2,[r3]
 178:../main.c     **** 
 179:../main.c     **** 	if(Driving_speed_cal > MAX_Speed) Driving_speed_cal = MAX_Speed;
 1011              	 .loc 6 179 0
 1012 0014 B868     	 ldr r0,[r7,#8]
 1013 0016 FE21     	 mov r1,#254
 1014 0018 8905     	 lsl r1,r1,#22
 1015 001a FFF7FEFF 	 bl __aeabi_fcmpgt
 1016 001e 031E     	 sub r3,r0,#0
 1017 0020 02D0     	 beq .L29
 1018              	 .loc 6 179 0 is_stmt 0 discriminator 1
 1019 0022 FE23     	 mov r3,#254
 1020 0024 9B05     	 lsl r3,r3,#22
 1021 0026 BB60     	 str r3,[r7,#8]
 1022              	.L29:
 180:../main.c     **** 	if(Driving_speed_cal < -MAX_Speed) Driving_speed_cal = -MAX_Speed;
 1023              	 .loc 6 180 0 is_stmt 1
 1024 0028 B868     	 ldr r0,[r7,#8]
 1025 002a B249     	 ldr r1,.L115+4
 1026 002c FFF7FEFF 	 bl __aeabi_fcmplt
 1027 0030 031E     	 sub r3,r0,#0
 1028 0032 01D0     	 beq .L31
 1029              	 .loc 6 180 0 is_stmt 0 discriminator 1
 1030 0034 AF4B     	 ldr r3,.L115+4
 1031 0036 BB60     	 str r3,[r7,#8]
 1032              	.L31:
 181:../main.c     **** 	if((0 < Driving_speed_cal) & (Driving_speed_cal < MIN_Speed)) Driving_speed_cal = 0;
 1033              	 .loc 6 181 0 is_stmt 1
 1034 0038 0123     	 mov r3,#1
 1035 003a 1C1C     	 add r4,r3,#0
 1036 003c B868     	 ldr r0,[r7,#8]
 1037 003e 0021     	 mov r1,#0
 1038 0040 FFF7FEFF 	 bl __aeabi_fcmpgt
 1039 0044 031E     	 sub r3,r0,#0
 1040 0046 01D1     	 bne .L33
 1041 0048 0023     	 mov r3,#0
 1042 004a 1C1C     	 add r4,r3,#0
 1043              	.L33:
 1044 004c E4B2     	 uxtb r4,r4
 1045 004e B868     	 ldr r0,[r7,#8]
 1046 0050 FFF7FEFF 	 bl __aeabi_f2d
 1047 0054 0A1C     	 mov r2,r1
 1048 0056 011C     	 mov r1,r0
 1049 0058 0123     	 mov r3,#1
 1050 005a 1D1C     	 add r5,r3,#0
 1051 005c 081C     	 mov r0,r1
 1052 005e 111C     	 mov r1,r2
 1053 0060 A54A     	 ldr r2,.L115+8
 1054 0062 A64B     	 ldr r3,.L115+12
 1055 0064 FFF7FEFF 	 bl __aeabi_dcmplt
 1056 0068 031E     	 sub r3,r0,#0
 1057 006a 01D1     	 bne .L34
 1058 006c 0023     	 mov r3,#0
 1059 006e 1D1C     	 add r5,r3,#0
 1060              	.L34:
 1061 0070 EBB2     	 uxtb r3,r5
 1062 0072 2340     	 and r3,r4
 1063 0074 DBB2     	 uxtb r3,r3
 1064 0076 002B     	 cmp r3,#0
 1065 0078 01D0     	 beq .L35
 1066              	 .loc 6 181 0 is_stmt 0 discriminator 1
 1067 007a 0023     	 mov r3,#0
 1068 007c BB60     	 str r3,[r7,#8]
 1069              	.L35:
 182:../main.c     **** 	if((0 > Driving_speed_cal) & (Driving_speed_cal > -MIN_Speed)) Driving_speed_cal = 0;
 1070              	 .loc 6 182 0 is_stmt 1
 1071 007e 0123     	 mov r3,#1
 1072 0080 1C1C     	 add r4,r3,#0
 1073 0082 B868     	 ldr r0,[r7,#8]
 1074 0084 0021     	 mov r1,#0
 1075 0086 FFF7FEFF 	 bl __aeabi_fcmplt
 1076 008a 031E     	 sub r3,r0,#0
 1077 008c 01D1     	 bne .L36
 1078 008e 0023     	 mov r3,#0
 1079 0090 1C1C     	 add r4,r3,#0
 1080              	.L36:
 1081 0092 E4B2     	 uxtb r4,r4
 1082 0094 B868     	 ldr r0,[r7,#8]
 1083 0096 FFF7FEFF 	 bl __aeabi_f2d
 1084 009a 0A1C     	 mov r2,r1
 1085 009c 011C     	 mov r1,r0
 1086 009e 0123     	 mov r3,#1
 1087 00a0 1D1C     	 add r5,r3,#0
 1088 00a2 081C     	 mov r0,r1
 1089 00a4 111C     	 mov r1,r2
 1090 00a6 944A     	 ldr r2,.L115+8
 1091 00a8 954B     	 ldr r3,.L115+16
 1092 00aa FFF7FEFF 	 bl __aeabi_dcmpgt
 1093 00ae 031E     	 sub r3,r0,#0
 1094 00b0 01D1     	 bne .L37
 1095 00b2 0023     	 mov r3,#0
 1096 00b4 1D1C     	 add r5,r3,#0
 1097              	.L37:
 1098 00b6 EBB2     	 uxtb r3,r5
 1099 00b8 2340     	 and r3,r4
 1100 00ba DBB2     	 uxtb r3,r3
 1101 00bc 002B     	 cmp r3,#0
 1102 00be 01D0     	 beq .L38
 1103              	 .loc 6 182 0 is_stmt 0 discriminator 1
 1104 00c0 0023     	 mov r3,#0
 1105 00c2 BB60     	 str r3,[r7,#8]
 1106              	.L38:
 183:../main.c     **** 
 184:../main.c     **** 	switch(Steering_mode_cal) // options 'Front'; 'Rear'; '4_Wheel'; 'Carb'; 'Rotate'
 1107              	 .loc 6 184 0 is_stmt 1
 1108 00c4 FB1D     	 add r3,r7,#7
 1109 00c6 1B78     	 ldrb r3,[r3]
 1110 00c8 052B     	 cmp r3,#5
 1111 00ca 01D9     	 bls .LCB549
 1112 00cc 00F04AFE 	 bl .L39
 1113              	.LCB549:
 1114 00d0 9A00     	 lsl r2,r3,#2
 1115 00d2 8C4B     	 ldr r3,.L115+20
 1116 00d4 D318     	 add r3,r2,r3
 1117 00d6 1B68     	 ldr r3,[r3]
 1118 00d8 9F46     	 mov pc,r3
 1119              	 .section .rodata.Steering_Function,"a",%progbits
 1120              	 .align 2
 1121              	.L41:
 1122 0000 640D0000 	 .word .L39
 1123 0004 DA000000 	 .word .L40
 1124 0008 A2040000 	 .word .L42
 1125 000c 6C080000 	 .word .L43
 1126 0010 7C0C0000 	 .word .L44
 1127 0014 DC0C0000 	 .word .L45
 1128              	 .section .text.Steering_Function
 1129              	.L40:
 185:../main.c     **** 	{
 186:../main.c     **** 		case FRONT://#############################################################
 187:../main.c     **** 			// steering limits
 188:../main.c     **** 			if(Steering_direction_cal > 50) Steering_direction_cal = 50;
 1130              	 .loc 6 188 0
 1131 00da F868     	 ldr r0,[r7,#12]
 1132 00dc 8A49     	 ldr r1,.L115+24
 1133 00de FFF7FEFF 	 bl __aeabi_fcmpgt
 1134 00e2 031E     	 sub r3,r0,#0
 1135 00e4 01D0     	 beq .L46
 1136              	 .loc 6 188 0 is_stmt 0 discriminator 1
 1137 00e6 884B     	 ldr r3,.L115+24
 1138 00e8 FB60     	 str r3,[r7,#12]
 1139              	.L46:
 189:../main.c     **** 			if(Steering_direction_cal < -50) Steering_direction_cal = -50;
 1140              	 .loc 6 189 0 is_stmt 1
 1141 00ea F868     	 ldr r0,[r7,#12]
 1142 00ec 8749     	 ldr r1,.L115+28
 1143 00ee FFF7FEFF 	 bl __aeabi_fcmplt
 1144 00f2 031E     	 sub r3,r0,#0
 1145 00f4 01D0     	 beq .L48
 1146              	 .loc 6 189 0 is_stmt 0 discriminator 1
 1147 00f6 854B     	 ldr r3,.L115+28
 1148 00f8 FB60     	 str r3,[r7,#12]
 1149              	.L48:
 190:../main.c     **** 
 191:../main.c     **** 			// pre calc
 192:../main.c     **** 			R_Turn = WHEEL_BASE / tan(Steering_direction_cal / RAD_TO_DEG); // to truni graduis converstion
 1150              	 .loc 6 192 0 is_stmt 1
 1151 00fa F868     	 ldr r0,[r7,#12]
 1152 00fc FFF7FEFF 	 bl __aeabi_f2d
 1153 0100 031C     	 mov r3,r0
 1154 0102 0C1C     	 mov r4,r1
 1155 0104 181C     	 mov r0,r3
 1156 0106 211C     	 mov r1,r4
 1157 0108 814A     	 ldr r2,.L115+32
 1158 010a 824B     	 ldr r3,.L115+36
 1159 010c FFF7FEFF 	 bl __aeabi_ddiv
 1160 0110 031C     	 mov r3,r0
 1161 0112 0C1C     	 mov r4,r1
 1162 0114 181C     	 mov r0,r3
 1163 0116 211C     	 mov r1,r4
 1164 0118 FFF7FEFF 	 bl tan
 1165 011c 031C     	 mov r3,r0
 1166 011e 0C1C     	 mov r4,r1
 1167 0120 7D48     	 ldr r0,.L115+40
 1168 0122 7E49     	 ldr r1,.L115+44
 1169 0124 1A1C     	 mov r2,r3
 1170 0126 231C     	 mov r3,r4
 1171 0128 FFF7FEFF 	 bl __aeabi_ddiv
 1172 012c 031C     	 mov r3,r0
 1173 012e 0C1C     	 mov r4,r1
 1174 0130 181C     	 mov r0,r3
 1175 0132 211C     	 mov r1,r4
 1176 0134 FFF7FEFF 	 bl __aeabi_d2f
 1177 0138 021C     	 add r2,r0,#0
 1178 013a 794B     	 ldr r3,.L115+48
 1179 013c 1A60     	 str r2,[r3]
 193:../main.c     **** 			Speed_ratio = (2 * (copysign(R_Turn,1) + HALF_TRACK_WIDTH) * M_PI) / (2 * copysign(R_Turn,1) * M
 1180              	 .loc 6 193 0
 1181 013e 784B     	 ldr r3,.L115+48
 1182 0140 1B68     	 ldr r3,[r3]
 1183 0142 5B00     	 lsl r3,r3,#1
 1184 0144 5B08     	 lsr r3,r3,#1
 1185 0146 181C     	 add r0,r3,#0
 1186 0148 FFF7FEFF 	 bl __aeabi_f2d
 1187 014c 031C     	 mov r3,r0
 1188 014e 0C1C     	 mov r4,r1
 1189 0150 181C     	 mov r0,r3
 1190 0152 211C     	 mov r1,r4
 1191 0154 734A     	 ldr r2,.L115+52
 1192 0156 744B     	 ldr r3,.L115+56
 1193 0158 FFF7FEFF 	 bl __aeabi_dadd
 1194 015c 031C     	 mov r3,r0
 1195 015e 0C1C     	 mov r4,r1
 1196 0160 181C     	 mov r0,r3
 1197 0162 211C     	 mov r1,r4
 1198 0164 1A1C     	 mov r2,r3
 1199 0166 231C     	 mov r3,r4
 1200 0168 FFF7FEFF 	 bl __aeabi_dadd
 1201 016c 031C     	 mov r3,r0
 1202 016e 0C1C     	 mov r4,r1
 1203 0170 181C     	 mov r0,r3
 1204 0172 211C     	 mov r1,r4
 1205 0174 6D4A     	 ldr r2,.L115+60
 1206 0176 6E4B     	 ldr r3,.L115+64
 1207 0178 FFF7FEFF 	 bl __aeabi_dmul
 1208 017c 031C     	 mov r3,r0
 1209 017e 0C1C     	 mov r4,r1
 1210 0180 1D1C     	 mov r5,r3
 1211 0182 261C     	 mov r6,r4
 1212 0184 664B     	 ldr r3,.L115+48
 1213 0186 1B68     	 ldr r3,[r3]
 1214 0188 5B00     	 lsl r3,r3,#1
 1215 018a 5B08     	 lsr r3,r3,#1
 1216 018c 181C     	 add r0,r3,#0
 1217 018e FFF7FEFF 	 bl __aeabi_f2d
 1218 0192 031C     	 mov r3,r0
 1219 0194 0C1C     	 mov r4,r1
 1220 0196 181C     	 mov r0,r3
 1221 0198 211C     	 mov r1,r4
 1222 019a 1A1C     	 mov r2,r3
 1223 019c 231C     	 mov r3,r4
 1224 019e FFF7FEFF 	 bl __aeabi_dadd
 1225 01a2 031C     	 mov r3,r0
 1226 01a4 0C1C     	 mov r4,r1
 1227 01a6 181C     	 mov r0,r3
 1228 01a8 211C     	 mov r1,r4
 1229 01aa 604A     	 ldr r2,.L115+60
 1230 01ac 604B     	 ldr r3,.L115+64
 1231 01ae FFF7FEFF 	 bl __aeabi_dmul
 1232 01b2 031C     	 mov r3,r0
 1233 01b4 0C1C     	 mov r4,r1
 1234 01b6 281C     	 mov r0,r5
 1235 01b8 311C     	 mov r1,r6
 1236 01ba 1A1C     	 mov r2,r3
 1237 01bc 231C     	 mov r3,r4
 1238 01be FFF7FEFF 	 bl __aeabi_ddiv
 1239 01c2 031C     	 mov r3,r0
 1240 01c4 0C1C     	 mov r4,r1
 1241 01c6 181C     	 mov r0,r3
 1242 01c8 211C     	 mov r1,r4
 1243 01ca FFF7FEFF 	 bl __aeabi_d2f
 1244 01ce 021C     	 add r2,r0,#0
 1245 01d0 584B     	 ldr r3,.L115+68
 1246 01d2 1A60     	 str r2,[r3]
 194:../main.c     **** 
 195:../main.c     **** 			if((R_TRUN_MIN < R_Turn) && (R_Turn < R_TRUN_MAX)){
 1247              	 .loc 6 195 0
 1248 01d4 524B     	 ldr r3,.L115+48
 1249 01d6 1B68     	 ldr r3,[r3]
 1250 01d8 181C     	 add r0,r3,#0
 1251 01da FFF7FEFF 	 bl __aeabi_f2d
 1252 01de 031C     	 mov r3,r0
 1253 01e0 0C1C     	 mov r4,r1
 1254 01e2 181C     	 mov r0,r3
 1255 01e4 211C     	 mov r1,r4
 1256 01e6 444A     	 ldr r2,.L115+8
 1257 01e8 444B     	 ldr r3,.L115+12
 1258 01ea FFF7FEFF 	 bl __aeabi_dcmpgt
 1259 01ee 031E     	 sub r3,r0,#0
 1260 01f0 00D1     	 bne .LCB689
 1261 01f2 AFE0     	 b .L50
 1262              	.LCB689:
 1263              	 .loc 6 195 0 is_stmt 0 discriminator 1
 1264 01f4 4A4B     	 ldr r3,.L115+48
 1265 01f6 1B68     	 ldr r3,[r3]
 1266 01f8 181C     	 add r0,r3,#0
 1267 01fa 4F49     	 ldr r1,.L115+72
 1268 01fc FFF7FEFF 	 bl __aeabi_fcmplt
 1269 0200 031E     	 sub r3,r0,#0
 1270 0202 00D1     	 bne .LCB697
 1271 0204 A6E0     	 b .L50
 1272              	.LCB697:
 196:../main.c     **** 				angle_fl = RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn + HALF_TRACK_WIDTH)); // out wheel
 1273              	 .loc 6 196 0 is_stmt 1
 1274 0206 464B     	 ldr r3,.L115+48
 1275 0208 1B68     	 ldr r3,[r3]
 1276 020a 181C     	 add r0,r3,#0
 1277 020c FFF7FEFF 	 bl __aeabi_f2d
 1278 0210 031C     	 mov r3,r0
 1279 0212 0C1C     	 mov r4,r1
 1280 0214 181C     	 mov r0,r3
 1281 0216 211C     	 mov r1,r4
 1282 0218 424A     	 ldr r2,.L115+52
 1283 021a 434B     	 ldr r3,.L115+56
 1284 021c FFF7FEFF 	 bl __aeabi_dadd
 1285 0220 031C     	 mov r3,r0
 1286 0222 0C1C     	 mov r4,r1
 1287 0224 3C48     	 ldr r0,.L115+40
 1288 0226 3D49     	 ldr r1,.L115+44
 1289 0228 1A1C     	 mov r2,r3
 1290 022a 231C     	 mov r3,r4
 1291 022c FFF7FEFF 	 bl __aeabi_ddiv
 1292 0230 031C     	 mov r3,r0
 1293 0232 0C1C     	 mov r4,r1
 1294 0234 181C     	 mov r0,r3
 1295 0236 211C     	 mov r1,r4
 1296 0238 FFF7FEFF 	 bl atan
 1297 023c 031C     	 mov r3,r0
 1298 023e 0C1C     	 mov r4,r1
 1299 0240 181C     	 mov r0,r3
 1300 0242 211C     	 mov r1,r4
 1301 0244 324A     	 ldr r2,.L115+32
 1302 0246 334B     	 ldr r3,.L115+36
 1303 0248 FFF7FEFF 	 bl __aeabi_dmul
 1304 024c 031C     	 mov r3,r0
 1305 024e 0C1C     	 mov r4,r1
 1306 0250 181C     	 mov r0,r3
 1307 0252 211C     	 mov r1,r4
 1308 0254 FFF7FEFF 	 bl __aeabi_d2f
 1309 0258 021C     	 add r2,r0,#0
 1310 025a 384B     	 ldr r3,.L115+76
 1311 025c 1A60     	 str r2,[r3]
 197:../main.c     **** 				angle_fr = RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn - HALF_TRACK_WIDTH)); // in wheel
 1312              	 .loc 6 197 0
 1313 025e 304B     	 ldr r3,.L115+48
 1314 0260 1B68     	 ldr r3,[r3]
 1315 0262 181C     	 add r0,r3,#0
 1316 0264 FFF7FEFF 	 bl __aeabi_f2d
 1317 0268 031C     	 mov r3,r0
 1318 026a 0C1C     	 mov r4,r1
 1319 026c 181C     	 mov r0,r3
 1320 026e 211C     	 mov r1,r4
 1321 0270 2C4A     	 ldr r2,.L115+52
 1322 0272 2D4B     	 ldr r3,.L115+56
 1323 0274 FFF7FEFF 	 bl __aeabi_dsub
 1324 0278 031C     	 mov r3,r0
 1325 027a 0C1C     	 mov r4,r1
 1326 027c 2648     	 ldr r0,.L115+40
 1327 027e 2749     	 ldr r1,.L115+44
 1328 0280 1A1C     	 mov r2,r3
 1329 0282 231C     	 mov r3,r4
 1330 0284 FFF7FEFF 	 bl __aeabi_ddiv
 1331 0288 031C     	 mov r3,r0
 1332 028a 0C1C     	 mov r4,r1
 1333 028c 181C     	 mov r0,r3
 1334 028e 211C     	 mov r1,r4
 1335 0290 FFF7FEFF 	 bl atan
 1336 0294 031C     	 mov r3,r0
 1337 0296 0C1C     	 mov r4,r1
 1338 0298 181C     	 mov r0,r3
 1339 029a 211C     	 mov r1,r4
 1340 029c 1C4A     	 ldr r2,.L115+32
 1341 029e 1D4B     	 ldr r3,.L115+36
 1342 02a0 FFF7FEFF 	 bl __aeabi_dmul
 1343 02a4 031C     	 mov r3,r0
 1344 02a6 0C1C     	 mov r4,r1
 1345 02a8 181C     	 mov r0,r3
 1346 02aa 211C     	 mov r1,r4
 1347 02ac FFF7FEFF 	 bl __aeabi_d2f
 1348 02b0 021C     	 add r2,r0,#0
 1349 02b2 234B     	 ldr r3,.L115+80
 1350 02b4 1A60     	 str r2,[r3]
 198:../main.c     **** 
 199:../main.c     **** 				speed_fl = Driving_speed_cal * Speed_ratio;
 1351              	 .loc 6 199 0
 1352 02b6 1F4B     	 ldr r3,.L115+68
 1353 02b8 1B68     	 ldr r3,[r3]
 1354 02ba 181C     	 add r0,r3,#0
 1355 02bc B968     	 ldr r1,[r7,#8]
 1356 02be FFF7FEFF 	 bl __aeabi_fmul
 1357 02c2 031C     	 add r3,r0,#0
 1358 02c4 1A1C     	 add r2,r3,#0
 1359 02c6 1F4B     	 ldr r3,.L115+84
 1360 02c8 1A60     	 str r2,[r3]
 200:../main.c     **** 				speed_fr = Driving_speed_cal / Speed_ratio;
 1361              	 .loc 6 200 0
 1362 02ca 1A4B     	 ldr r3,.L115+68
 1363 02cc 1B68     	 ldr r3,[r3]
 1364 02ce B868     	 ldr r0,[r7,#8]
 1365 02d0 191C     	 add r1,r3,#0
 1366 02d2 FFF7FEFF 	 bl __aeabi_fdiv
 1367 02d6 031C     	 add r3,r0,#0
 1368 02d8 1A1C     	 add r2,r3,#0
 1369 02da 1B4B     	 ldr r3,.L115+88
 1370 02dc 1A60     	 str r2,[r3]
 201:../main.c     **** 				//speed_rl = Driving_speed_cal * Speed_ratio;
 202:../main.c     **** 				//speed_rr = Driving_speed_cal / Speed_ratio;
 203:../main.c     **** 
 204:../main.c     **** 				speed_rl = speed_fl;
 1371              	 .loc 6 204 0
 1372 02de 194B     	 ldr r3,.L115+84
 1373 02e0 1A68     	 ldr r2,[r3]
 1374 02e2 1A4B     	 ldr r3,.L115+92
 1375 02e4 1A60     	 str r2,[r3]
 205:../main.c     **** 				speed_rr = speed_fr;
 1376              	 .loc 6 205 0
 1377 02e6 184B     	 ldr r3,.L115+88
 1378 02e8 1A68     	 ldr r2,[r3]
 1379 02ea 194B     	 ldr r3,.L115+96
 1380 02ec 1A60     	 str r2,[r3]
 1381 02ee D0E0     	 b .L53
 1382              	.L116:
 1383              	 .align 2
 1384              	.L115:
 1385 02f0 00000000 	 .word New_Input
 1386 02f4 000080BF 	 .word -1082130432
 1387 02f8 9A999999 	 .word -1717986918
 1388 02fc 9999A93F 	 .word 1068079513
 1389 0300 9999A9BF 	 .word -1079404135
 1390 0304 00000000 	 .word .L41
 1391 0308 00004842 	 .word 1112014848
 1392 030c 000048C2 	 .word -1035468800
 1393 0310 D9CEF753 	 .word 1408749273
 1394 0314 E3A54C40 	 .word 1078765027
 1395 0318 79E92631 	 .word 824633721
 1396 031c 08ACDC3F 	 .word 1071426568
 1397 0320 00000000 	 .word R_Turn
 1398 0324 77BE9F1A 	 .word 446676599
 1399 0328 2FDDC43F 	 .word 1069866287
 1400 032c 182D4454 	 .word 1413754136
 1401 0330 FB210940 	 .word 1074340347
 1402 0334 00000000 	 .word Speed_ratio
 1403 0338 0000A041 	 .word 1101004800
 1404 033c 00000000 	 .word angle_fl
 1405 0340 00000000 	 .word angle_fr
 1406 0344 00000000 	 .word speed_fl
 1407 0348 00000000 	 .word speed_fr
 1408 034c 00000000 	 .word speed_rl
 1409 0350 00000000 	 .word speed_rr
 1410              	.L50:
 206:../main.c     **** 			}
 207:../main.c     **** 			else if((- R_TRUN_MIN > R_Turn) && (R_Turn > -R_TRUN_MAX)){
 1411              	 .loc 6 207 0
 1412 0354 D84B     	 ldr r3,.L117
 1413 0356 1B68     	 ldr r3,[r3]
 1414 0358 181C     	 add r0,r3,#0
 1415 035a FFF7FEFF 	 bl __aeabi_f2d
 1416 035e 031C     	 mov r3,r0
 1417 0360 0C1C     	 mov r4,r1
 1418 0362 181C     	 mov r0,r3
 1419 0364 211C     	 mov r1,r4
 1420 0366 D54A     	 ldr r2,.L117+4
 1421 0368 D54B     	 ldr r3,.L117+8
 1422 036a FFF7FEFF 	 bl __aeabi_dcmplt
 1423 036e 031E     	 sub r3,r0,#0
 1424 0370 00D1     	 bne .LCB847
 1425 0372 7CE0     	 b .L54
 1426              	.LCB847:
 1427              	 .loc 6 207 0 is_stmt 0 discriminator 1
 1428 0374 D04B     	 ldr r3,.L117
 1429 0376 1B68     	 ldr r3,[r3]
 1430 0378 181C     	 add r0,r3,#0
 1431 037a D249     	 ldr r1,.L117+12
 1432 037c FFF7FEFF 	 bl __aeabi_fcmpgt
 1433 0380 031E     	 sub r3,r0,#0
 1434 0382 74D0     	 beq .L54
 208:../main.c     **** 				angle_fl = RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn + HALF_TRACK_WIDTH)); // in wheel
 1435              	 .loc 6 208 0 is_stmt 1
 1436 0384 CC4B     	 ldr r3,.L117
 1437 0386 1B68     	 ldr r3,[r3]
 1438 0388 181C     	 add r0,r3,#0
 1439 038a FFF7FEFF 	 bl __aeabi_f2d
 1440 038e 031C     	 mov r3,r0
 1441 0390 0C1C     	 mov r4,r1
 1442 0392 181C     	 mov r0,r3
 1443 0394 211C     	 mov r1,r4
 1444 0396 CC4A     	 ldr r2,.L117+16
 1445 0398 CC4B     	 ldr r3,.L117+20
 1446 039a FFF7FEFF 	 bl __aeabi_dadd
 1447 039e 031C     	 mov r3,r0
 1448 03a0 0C1C     	 mov r4,r1
 1449 03a2 CB48     	 ldr r0,.L117+24
 1450 03a4 CB49     	 ldr r1,.L117+28
 1451 03a6 1A1C     	 mov r2,r3
 1452 03a8 231C     	 mov r3,r4
 1453 03aa FFF7FEFF 	 bl __aeabi_ddiv
 1454 03ae 031C     	 mov r3,r0
 1455 03b0 0C1C     	 mov r4,r1
 1456 03b2 181C     	 mov r0,r3
 1457 03b4 211C     	 mov r1,r4
 1458 03b6 FFF7FEFF 	 bl atan
 1459 03ba 031C     	 mov r3,r0
 1460 03bc 0C1C     	 mov r4,r1
 1461 03be 181C     	 mov r0,r3
 1462 03c0 211C     	 mov r1,r4
 1463 03c2 C54A     	 ldr r2,.L117+32
 1464 03c4 C54B     	 ldr r3,.L117+36
 1465 03c6 FFF7FEFF 	 bl __aeabi_dmul
 1466 03ca 031C     	 mov r3,r0
 1467 03cc 0C1C     	 mov r4,r1
 1468 03ce 181C     	 mov r0,r3
 1469 03d0 211C     	 mov r1,r4
 1470 03d2 FFF7FEFF 	 bl __aeabi_d2f
 1471 03d6 021C     	 add r2,r0,#0
 1472 03d8 C14B     	 ldr r3,.L117+40
 1473 03da 1A60     	 str r2,[r3]
 209:../main.c     **** 				angle_fr = RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn - HALF_TRACK_WIDTH)); // out wheel
 1474              	 .loc 6 209 0
 1475 03dc B64B     	 ldr r3,.L117
 1476 03de 1B68     	 ldr r3,[r3]
 1477 03e0 181C     	 add r0,r3,#0
 1478 03e2 FFF7FEFF 	 bl __aeabi_f2d
 1479 03e6 031C     	 mov r3,r0
 1480 03e8 0C1C     	 mov r4,r1
 1481 03ea 181C     	 mov r0,r3
 1482 03ec 211C     	 mov r1,r4
 1483 03ee B64A     	 ldr r2,.L117+16
 1484 03f0 B64B     	 ldr r3,.L117+20
 1485 03f2 FFF7FEFF 	 bl __aeabi_dsub
 1486 03f6 031C     	 mov r3,r0
 1487 03f8 0C1C     	 mov r4,r1
 1488 03fa B548     	 ldr r0,.L117+24
 1489 03fc B549     	 ldr r1,.L117+28
 1490 03fe 1A1C     	 mov r2,r3
 1491 0400 231C     	 mov r3,r4
 1492 0402 FFF7FEFF 	 bl __aeabi_ddiv
 1493 0406 031C     	 mov r3,r0
 1494 0408 0C1C     	 mov r4,r1
 1495 040a 181C     	 mov r0,r3
 1496 040c 211C     	 mov r1,r4
 1497 040e FFF7FEFF 	 bl atan
 1498 0412 031C     	 mov r3,r0
 1499 0414 0C1C     	 mov r4,r1
 1500 0416 181C     	 mov r0,r3
 1501 0418 211C     	 mov r1,r4
 1502 041a AF4A     	 ldr r2,.L117+32
 1503 041c AF4B     	 ldr r3,.L117+36
 1504 041e FFF7FEFF 	 bl __aeabi_dmul
 1505 0422 031C     	 mov r3,r0
 1506 0424 0C1C     	 mov r4,r1
 1507 0426 181C     	 mov r0,r3
 1508 0428 211C     	 mov r1,r4
 1509 042a FFF7FEFF 	 bl __aeabi_d2f
 1510 042e 021C     	 add r2,r0,#0
 1511 0430 AC4B     	 ldr r3,.L117+44
 1512 0432 1A60     	 str r2,[r3]
 210:../main.c     **** 
 211:../main.c     **** 				speed_fl = Driving_speed_cal / Speed_ratio;
 1513              	 .loc 6 211 0
 1514 0434 AC4B     	 ldr r3,.L117+48
 1515 0436 1B68     	 ldr r3,[r3]
 1516 0438 B868     	 ldr r0,[r7,#8]
 1517 043a 191C     	 add r1,r3,#0
 1518 043c FFF7FEFF 	 bl __aeabi_fdiv
 1519 0440 031C     	 add r3,r0,#0
 1520 0442 1A1C     	 add r2,r3,#0
 1521 0444 A94B     	 ldr r3,.L117+52
 1522 0446 1A60     	 str r2,[r3]
 212:../main.c     **** 				speed_fr = Driving_speed_cal * Speed_ratio;
 1523              	 .loc 6 212 0
 1524 0448 A74B     	 ldr r3,.L117+48
 1525 044a 1B68     	 ldr r3,[r3]
 1526 044c 181C     	 add r0,r3,#0
 1527 044e B968     	 ldr r1,[r7,#8]
 1528 0450 FFF7FEFF 	 bl __aeabi_fmul
 1529 0454 031C     	 add r3,r0,#0
 1530 0456 1A1C     	 add r2,r3,#0
 1531 0458 A54B     	 ldr r3,.L117+56
 1532 045a 1A60     	 str r2,[r3]
 213:../main.c     **** 				//speed_rl = Driving_speed_cal / Speed_ratio;
 214:../main.c     **** 				//speed_rr = Driving_speed_cal * Speed_ratio;
 215:../main.c     **** 
 216:../main.c     **** 				speed_rl = speed_fl;
 1533              	 .loc 6 216 0
 1534 045c A34B     	 ldr r3,.L117+52
 1535 045e 1A68     	 ldr r2,[r3]
 1536 0460 A44B     	 ldr r3,.L117+60
 1537 0462 1A60     	 str r2,[r3]
 217:../main.c     **** 				speed_rr = speed_fr;
 1538              	 .loc 6 217 0
 1539 0464 A24B     	 ldr r3,.L117+56
 1540 0466 1A68     	 ldr r2,[r3]
 1541 0468 A34B     	 ldr r3,.L117+64
 1542 046a 1A60     	 str r2,[r3]
 1543 046c 11E0     	 b .L53
 1544              	.L54:
 218:../main.c     **** 			}
 219:../main.c     **** 			else{
 220:../main.c     **** 				angle_fl = 0;
 1545              	 .loc 6 220 0
 1546 046e 9C4B     	 ldr r3,.L117+40
 1547 0470 0022     	 mov r2,#0
 1548 0472 1A60     	 str r2,[r3]
 221:../main.c     **** 				angle_fr = 0;
 1549              	 .loc 6 221 0
 1550 0474 9B4B     	 ldr r3,.L117+44
 1551 0476 0022     	 mov r2,#0
 1552 0478 1A60     	 str r2,[r3]
 222:../main.c     **** 
 223:../main.c     **** 				speed_fl = Driving_speed_cal;
 1553              	 .loc 6 223 0
 1554 047a 9C4B     	 ldr r3,.L117+52
 1555 047c BA68     	 ldr r2,[r7,#8]
 1556 047e 1A60     	 str r2,[r3]
 224:../main.c     **** 				speed_fr = Driving_speed_cal;
 1557              	 .loc 6 224 0
 1558 0480 9B4B     	 ldr r3,.L117+56
 1559 0482 BA68     	 ldr r2,[r7,#8]
 1560 0484 1A60     	 str r2,[r3]
 225:../main.c     **** 				speed_rl = Driving_speed_cal;
 1561              	 .loc 6 225 0
 1562 0486 9B4B     	 ldr r3,.L117+60
 1563 0488 BA68     	 ldr r2,[r7,#8]
 1564 048a 1A60     	 str r2,[r3]
 226:../main.c     **** 				speed_rr = Driving_speed_cal;
 1565              	 .loc 6 226 0
 1566 048c 9A4B     	 ldr r3,.L117+64
 1567 048e BA68     	 ldr r2,[r7,#8]
 1568 0490 1A60     	 str r2,[r3]
 1569              	.L53:
 227:../main.c     **** 			}
 228:../main.c     **** 
 229:../main.c     **** 			//rear axle
 230:../main.c     **** 			angle_rl = 0;
 1570              	 .loc 6 230 0
 1571 0492 9A4B     	 ldr r3,.L117+68
 1572 0494 0022     	 mov r2,#0
 1573 0496 1A60     	 str r2,[r3]
 231:../main.c     **** 			angle_rr = 0;
 1574              	 .loc 6 231 0
 1575 0498 994B     	 ldr r3,.L117+72
 1576 049a 0022     	 mov r2,#0
 1577 049c 1A60     	 str r2,[r3]
 232:../main.c     **** 			break;
 1578              	 .loc 6 232 0
 1579 049e 00F079FC 	 bl .L57
 1580              	.L42:
 233:../main.c     **** 
 234:../main.c     **** 		case BACK:// rear #############################################################
 235:../main.c     **** 			// steering limits
 236:../main.c     **** 			if(Steering_direction_cal > 50) Steering_direction_cal = 50;
 1581              	 .loc 6 236 0
 1582 04a2 F868     	 ldr r0,[r7,#12]
 1583 04a4 9749     	 ldr r1,.L117+76
 1584 04a6 FFF7FEFF 	 bl __aeabi_fcmpgt
 1585 04aa 031E     	 sub r3,r0,#0
 1586 04ac 01D0     	 beq .L58
 1587              	 .loc 6 236 0 is_stmt 0 discriminator 1
 1588 04ae 954B     	 ldr r3,.L117+76
 1589 04b0 FB60     	 str r3,[r7,#12]
 1590              	.L58:
 237:../main.c     **** 			if(Steering_direction_cal < -50) Steering_direction_cal = -50;
 1591              	 .loc 6 237 0 is_stmt 1
 1592 04b2 F868     	 ldr r0,[r7,#12]
 1593 04b4 9449     	 ldr r1,.L117+80
 1594 04b6 FFF7FEFF 	 bl __aeabi_fcmplt
 1595 04ba 031E     	 sub r3,r0,#0
 1596 04bc 01D0     	 beq .L60
 1597              	 .loc 6 237 0 is_stmt 0 discriminator 1
 1598 04be 924B     	 ldr r3,.L117+80
 1599 04c0 FB60     	 str r3,[r7,#12]
 1600              	.L60:
 238:../main.c     **** 
 239:../main.c     **** 			// pre calc
 240:../main.c     **** 			R_Turn = WHEEL_BASE / tan(Steering_direction_cal / RAD_TO_DEG); // to truni graduis converstion
 1601              	 .loc 6 240 0 is_stmt 1
 1602 04c2 F868     	 ldr r0,[r7,#12]
 1603 04c4 FFF7FEFF 	 bl __aeabi_f2d
 1604 04c8 031C     	 mov r3,r0
 1605 04ca 0C1C     	 mov r4,r1
 1606 04cc 181C     	 mov r0,r3
 1607 04ce 211C     	 mov r1,r4
 1608 04d0 814A     	 ldr r2,.L117+32
 1609 04d2 824B     	 ldr r3,.L117+36
 1610 04d4 FFF7FEFF 	 bl __aeabi_ddiv
 1611 04d8 031C     	 mov r3,r0
 1612 04da 0C1C     	 mov r4,r1
 1613 04dc 181C     	 mov r0,r3
 1614 04de 211C     	 mov r1,r4
 1615 04e0 FFF7FEFF 	 bl tan
 1616 04e4 031C     	 mov r3,r0
 1617 04e6 0C1C     	 mov r4,r1
 1618 04e8 7948     	 ldr r0,.L117+24
 1619 04ea 7A49     	 ldr r1,.L117+28
 1620 04ec 1A1C     	 mov r2,r3
 1621 04ee 231C     	 mov r3,r4
 1622 04f0 FFF7FEFF 	 bl __aeabi_ddiv
 1623 04f4 031C     	 mov r3,r0
 1624 04f6 0C1C     	 mov r4,r1
 1625 04f8 181C     	 mov r0,r3
 1626 04fa 211C     	 mov r1,r4
 1627 04fc FFF7FEFF 	 bl __aeabi_d2f
 1628 0500 021C     	 add r2,r0,#0
 1629 0502 6D4B     	 ldr r3,.L117
 1630 0504 1A60     	 str r2,[r3]
 241:../main.c     **** 			Speed_ratio = (2 * (copysign(R_Turn,1) + HALF_TRACK_WIDTH) * M_PI) / (2 * copysign(R_Turn,1) * M
 1631              	 .loc 6 241 0
 1632 0506 6C4B     	 ldr r3,.L117
 1633 0508 1B68     	 ldr r3,[r3]
 1634 050a 5B00     	 lsl r3,r3,#1
 1635 050c 5B08     	 lsr r3,r3,#1
 1636 050e 181C     	 add r0,r3,#0
 1637 0510 FFF7FEFF 	 bl __aeabi_f2d
 1638 0514 031C     	 mov r3,r0
 1639 0516 0C1C     	 mov r4,r1
 1640 0518 181C     	 mov r0,r3
 1641 051a 211C     	 mov r1,r4
 1642 051c 6A4A     	 ldr r2,.L117+16
 1643 051e 6B4B     	 ldr r3,.L117+20
 1644 0520 FFF7FEFF 	 bl __aeabi_dadd
 1645 0524 031C     	 mov r3,r0
 1646 0526 0C1C     	 mov r4,r1
 1647 0528 181C     	 mov r0,r3
 1648 052a 211C     	 mov r1,r4
 1649 052c 1A1C     	 mov r2,r3
 1650 052e 231C     	 mov r3,r4
 1651 0530 FFF7FEFF 	 bl __aeabi_dadd
 1652 0534 031C     	 mov r3,r0
 1653 0536 0C1C     	 mov r4,r1
 1654 0538 181C     	 mov r0,r3
 1655 053a 211C     	 mov r1,r4
 1656 053c 734A     	 ldr r2,.L117+84
 1657 053e 744B     	 ldr r3,.L117+88
 1658 0540 FFF7FEFF 	 bl __aeabi_dmul
 1659 0544 031C     	 mov r3,r0
 1660 0546 0C1C     	 mov r4,r1
 1661 0548 1D1C     	 mov r5,r3
 1662 054a 261C     	 mov r6,r4
 1663 054c 5A4B     	 ldr r3,.L117
 1664 054e 1B68     	 ldr r3,[r3]
 1665 0550 5B00     	 lsl r3,r3,#1
 1666 0552 5B08     	 lsr r3,r3,#1
 1667 0554 181C     	 add r0,r3,#0
 1668 0556 FFF7FEFF 	 bl __aeabi_f2d
 1669 055a 031C     	 mov r3,r0
 1670 055c 0C1C     	 mov r4,r1
 1671 055e 181C     	 mov r0,r3
 1672 0560 211C     	 mov r1,r4
 1673 0562 1A1C     	 mov r2,r3
 1674 0564 231C     	 mov r3,r4
 1675 0566 FFF7FEFF 	 bl __aeabi_dadd
 1676 056a 031C     	 mov r3,r0
 1677 056c 0C1C     	 mov r4,r1
 1678 056e 181C     	 mov r0,r3
 1679 0570 211C     	 mov r1,r4
 1680 0572 664A     	 ldr r2,.L117+84
 1681 0574 664B     	 ldr r3,.L117+88
 1682 0576 FFF7FEFF 	 bl __aeabi_dmul
 1683 057a 031C     	 mov r3,r0
 1684 057c 0C1C     	 mov r4,r1
 1685 057e 281C     	 mov r0,r5
 1686 0580 311C     	 mov r1,r6
 1687 0582 1A1C     	 mov r2,r3
 1688 0584 231C     	 mov r3,r4
 1689 0586 FFF7FEFF 	 bl __aeabi_ddiv
 1690 058a 031C     	 mov r3,r0
 1691 058c 0C1C     	 mov r4,r1
 1692 058e 181C     	 mov r0,r3
 1693 0590 211C     	 mov r1,r4
 1694 0592 FFF7FEFF 	 bl __aeabi_d2f
 1695 0596 021C     	 add r2,r0,#0
 1696 0598 534B     	 ldr r3,.L117+48
 1697 059a 1A60     	 str r2,[r3]
 242:../main.c     **** 
 243:../main.c     **** 			if((R_TRUN_MIN < R_Turn) && (R_Turn < R_TRUN_MAX)){
 1698              	 .loc 6 243 0
 1699 059c 464B     	 ldr r3,.L117
 1700 059e 1B68     	 ldr r3,[r3]
 1701 05a0 181C     	 add r0,r3,#0
 1702 05a2 FFF7FEFF 	 bl __aeabi_f2d
 1703 05a6 031C     	 mov r3,r0
 1704 05a8 0C1C     	 mov r4,r1
 1705 05aa 181C     	 mov r0,r3
 1706 05ac 211C     	 mov r1,r4
 1707 05ae 434A     	 ldr r2,.L117+4
 1708 05b0 584B     	 ldr r3,.L117+92
 1709 05b2 FFF7FEFF 	 bl __aeabi_dcmpgt
 1710 05b6 031E     	 sub r3,r0,#0
 1711 05b8 00D1     	 bne .LCB1120
 1712 05ba B1E0     	 b .L62
 1713              	.LCB1120:
 1714              	 .loc 6 243 0 is_stmt 0 discriminator 1
 1715 05bc 3E4B     	 ldr r3,.L117
 1716 05be 1B68     	 ldr r3,[r3]
 1717 05c0 181C     	 add r0,r3,#0
 1718 05c2 5549     	 ldr r1,.L117+96
 1719 05c4 FFF7FEFF 	 bl __aeabi_fcmplt
 1720 05c8 031E     	 sub r3,r0,#0
 1721 05ca 00D1     	 bne .LCB1128
 1722 05cc A8E0     	 b .L62
 1723              	.LCB1128:
 244:../main.c     **** 				angle_rl = - RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn + HALF_TRACK_WIDTH)); // out wheel
 1724              	 .loc 6 244 0 is_stmt 1
 1725 05ce 3A4B     	 ldr r3,.L117
 1726 05d0 1B68     	 ldr r3,[r3]
 1727 05d2 181C     	 add r0,r3,#0
 1728 05d4 FFF7FEFF 	 bl __aeabi_f2d
 1729 05d8 031C     	 mov r3,r0
 1730 05da 0C1C     	 mov r4,r1
 1731 05dc 181C     	 mov r0,r3
 1732 05de 211C     	 mov r1,r4
 1733 05e0 394A     	 ldr r2,.L117+16
 1734 05e2 3A4B     	 ldr r3,.L117+20
 1735 05e4 FFF7FEFF 	 bl __aeabi_dadd
 1736 05e8 031C     	 mov r3,r0
 1737 05ea 0C1C     	 mov r4,r1
 1738 05ec 3848     	 ldr r0,.L117+24
 1739 05ee 3949     	 ldr r1,.L117+28
 1740 05f0 1A1C     	 mov r2,r3
 1741 05f2 231C     	 mov r3,r4
 1742 05f4 FFF7FEFF 	 bl __aeabi_ddiv
 1743 05f8 031C     	 mov r3,r0
 1744 05fa 0C1C     	 mov r4,r1
 1745 05fc 181C     	 mov r0,r3
 1746 05fe 211C     	 mov r1,r4
 1747 0600 FFF7FEFF 	 bl atan
 1748 0604 031C     	 mov r3,r0
 1749 0606 0C1C     	 mov r4,r1
 1750 0608 181C     	 mov r0,r3
 1751 060a 211C     	 mov r1,r4
 1752 060c 324A     	 ldr r2,.L117+32
 1753 060e 434B     	 ldr r3,.L117+100
 1754 0610 FFF7FEFF 	 bl __aeabi_dmul
 1755 0614 031C     	 mov r3,r0
 1756 0616 0C1C     	 mov r4,r1
 1757 0618 181C     	 mov r0,r3
 1758 061a 211C     	 mov r1,r4
 1759 061c FFF7FEFF 	 bl __aeabi_d2f
 1760 0620 021C     	 add r2,r0,#0
 1761 0622 364B     	 ldr r3,.L117+68
 1762 0624 1A60     	 str r2,[r3]
 245:../main.c     **** 				angle_rr = - RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn - HALF_TRACK_WIDTH)); // in wheel
 1763              	 .loc 6 245 0
 1764 0626 244B     	 ldr r3,.L117
 1765 0628 1B68     	 ldr r3,[r3]
 1766 062a 181C     	 add r0,r3,#0
 1767 062c FFF7FEFF 	 bl __aeabi_f2d
 1768 0630 031C     	 mov r3,r0
 1769 0632 0C1C     	 mov r4,r1
 1770 0634 181C     	 mov r0,r3
 1771 0636 211C     	 mov r1,r4
 1772 0638 234A     	 ldr r2,.L117+16
 1773 063a 244B     	 ldr r3,.L117+20
 1774 063c FFF7FEFF 	 bl __aeabi_dsub
 1775 0640 031C     	 mov r3,r0
 1776 0642 0C1C     	 mov r4,r1
 1777 0644 2248     	 ldr r0,.L117+24
 1778 0646 2349     	 ldr r1,.L117+28
 1779 0648 1A1C     	 mov r2,r3
 1780 064a 231C     	 mov r3,r4
 1781 064c FFF7FEFF 	 bl __aeabi_ddiv
 1782 0650 031C     	 mov r3,r0
 1783 0652 0C1C     	 mov r4,r1
 1784 0654 181C     	 mov r0,r3
 1785 0656 211C     	 mov r1,r4
 1786 0658 FFF7FEFF 	 bl atan
 1787 065c 031C     	 mov r3,r0
 1788 065e 0C1C     	 mov r4,r1
 1789 0660 181C     	 mov r0,r3
 1790 0662 211C     	 mov r1,r4
 1791 0664 1C4A     	 ldr r2,.L117+32
 1792 0666 2D4B     	 ldr r3,.L117+100
 1793 0668 FFF7FEFF 	 bl __aeabi_dmul
 1794 066c 031C     	 mov r3,r0
 1795 066e 0C1C     	 mov r4,r1
 1796 0670 181C     	 mov r0,r3
 1797 0672 211C     	 mov r1,r4
 1798 0674 FFF7FEFF 	 bl __aeabi_d2f
 1799 0678 021C     	 add r2,r0,#0
 1800 067a 214B     	 ldr r3,.L117+72
 1801 067c 1A60     	 str r2,[r3]
 246:../main.c     **** 
 247:../main.c     **** 
 248:../main.c     **** 				speed_fl = Driving_speed_cal * Speed_ratio;
 1802              	 .loc 6 248 0
 1803 067e 1A4B     	 ldr r3,.L117+48
 1804 0680 1B68     	 ldr r3,[r3]
 1805 0682 181C     	 add r0,r3,#0
 1806 0684 B968     	 ldr r1,[r7,#8]
 1807 0686 FFF7FEFF 	 bl __aeabi_fmul
 1808 068a 031C     	 add r3,r0,#0
 1809 068c 1A1C     	 add r2,r3,#0
 1810 068e 174B     	 ldr r3,.L117+52
 1811 0690 1A60     	 str r2,[r3]
 249:../main.c     **** 				speed_fr = Driving_speed_cal / Speed_ratio;
 1812              	 .loc 6 249 0
 1813 0692 154B     	 ldr r3,.L117+48
 1814 0694 1B68     	 ldr r3,[r3]
 1815 0696 B868     	 ldr r0,[r7,#8]
 1816 0698 191C     	 add r1,r3,#0
 1817 069a FFF7FEFF 	 bl __aeabi_fdiv
 1818 069e 031C     	 add r3,r0,#0
 1819 06a0 1A1C     	 add r2,r3,#0
 1820 06a2 134B     	 ldr r3,.L117+56
 1821 06a4 1A60     	 str r2,[r3]
 250:../main.c     **** 				//speed_rl = Driving_speed_cal * Speed_ratio;
 251:../main.c     **** 				//speed_rr = Driving_speed_cal / Speed_ratio;
 252:../main.c     **** 
 253:../main.c     **** 				speed_rl = speed_fl;
 1822              	 .loc 6 253 0
 1823 06a6 114B     	 ldr r3,.L117+52
 1824 06a8 1A68     	 ldr r2,[r3]
 1825 06aa 124B     	 ldr r3,.L117+60
 1826 06ac 1A60     	 str r2,[r3]
 254:../main.c     **** 				speed_rr = speed_fr;
 1827              	 .loc 6 254 0
 1828 06ae 104B     	 ldr r3,.L117+56
 1829 06b0 1A68     	 ldr r2,[r3]
 1830 06b2 114B     	 ldr r3,.L117+64
 1831 06b4 1A60     	 str r2,[r3]
 1832 06b6 D2E0     	 b .L65
 1833              	.L118:
 1834              	 .align 2
 1835              	.L117:
 1836 06b8 00000000 	 .word R_Turn
 1837 06bc 9A999999 	 .word -1717986918
 1838 06c0 9999A9BF 	 .word -1079404135
 1839 06c4 0000A0C1 	 .word -1046478848
 1840 06c8 77BE9F1A 	 .word 446676599
 1841 06cc 2FDDC43F 	 .word 1069866287
 1842 06d0 79E92631 	 .word 824633721
 1843 06d4 08ACDC3F 	 .word 1071426568
 1844 06d8 D9CEF753 	 .word 1408749273
 1845 06dc E3A54C40 	 .word 1078765027
 1846 06e0 00000000 	 .word angle_fl
 1847 06e4 00000000 	 .word angle_fr
 1848 06e8 00000000 	 .word Speed_ratio
 1849 06ec 00000000 	 .word speed_fl
 1850 06f0 00000000 	 .word speed_fr
 1851 06f4 00000000 	 .word speed_rl
 1852 06f8 00000000 	 .word speed_rr
 1853 06fc 00000000 	 .word angle_rl
 1854 0700 00000000 	 .word angle_rr
 1855 0704 00004842 	 .word 1112014848
 1856 0708 000048C2 	 .word -1035468800
 1857 070c 182D4454 	 .word 1413754136
 1858 0710 FB210940 	 .word 1074340347
 1859 0714 9999A93F 	 .word 1068079513
 1860 0718 0000A041 	 .word 1101004800
 1861 071c E3A54CC0 	 .word -1068718621
 1862              	.L62:
 255:../main.c     **** 			}
 256:../main.c     **** 			else if((- R_TRUN_MIN > R_Turn) && (R_Turn > -R_TRUN_MAX)){
 1863              	 .loc 6 256 0
 1864 0720 DF4B     	 ldr r3,.L119
 1865 0722 1B68     	 ldr r3,[r3]
 1866 0724 181C     	 add r0,r3,#0
 1867 0726 FFF7FEFF 	 bl __aeabi_f2d
 1868 072a 031C     	 mov r3,r0
 1869 072c 0C1C     	 mov r4,r1
 1870 072e 181C     	 mov r0,r3
 1871 0730 211C     	 mov r1,r4
 1872 0732 DC4A     	 ldr r2,.L119+4
 1873 0734 DC4B     	 ldr r3,.L119+8
 1874 0736 FFF7FEFF 	 bl __aeabi_dcmplt
 1875 073a 031E     	 sub r3,r0,#0
 1876 073c 00D1     	 bne .LCB1279
 1877 073e 7CE0     	 b .L66
 1878              	.LCB1279:
 1879              	 .loc 6 256 0 is_stmt 0 discriminator 1
 1880 0740 D74B     	 ldr r3,.L119
 1881 0742 1B68     	 ldr r3,[r3]
 1882 0744 181C     	 add r0,r3,#0
 1883 0746 D949     	 ldr r1,.L119+12
 1884 0748 FFF7FEFF 	 bl __aeabi_fcmpgt
 1885 074c 031E     	 sub r3,r0,#0
 1886 074e 74D0     	 beq .L66
 257:../main.c     **** 				angle_rl = - RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn + HALF_TRACK_WIDTH)); // in wheel
 1887              	 .loc 6 257 0 is_stmt 1
 1888 0750 D34B     	 ldr r3,.L119
 1889 0752 1B68     	 ldr r3,[r3]
 1890 0754 181C     	 add r0,r3,#0
 1891 0756 FFF7FEFF 	 bl __aeabi_f2d
 1892 075a 031C     	 mov r3,r0
 1893 075c 0C1C     	 mov r4,r1
 1894 075e 181C     	 mov r0,r3
 1895 0760 211C     	 mov r1,r4
 1896 0762 D34A     	 ldr r2,.L119+16
 1897 0764 D34B     	 ldr r3,.L119+20
 1898 0766 FFF7FEFF 	 bl __aeabi_dadd
 1899 076a 031C     	 mov r3,r0
 1900 076c 0C1C     	 mov r4,r1
 1901 076e D248     	 ldr r0,.L119+24
 1902 0770 D249     	 ldr r1,.L119+28
 1903 0772 1A1C     	 mov r2,r3
 1904 0774 231C     	 mov r3,r4
 1905 0776 FFF7FEFF 	 bl __aeabi_ddiv
 1906 077a 031C     	 mov r3,r0
 1907 077c 0C1C     	 mov r4,r1
 1908 077e 181C     	 mov r0,r3
 1909 0780 211C     	 mov r1,r4
 1910 0782 FFF7FEFF 	 bl atan
 1911 0786 031C     	 mov r3,r0
 1912 0788 0C1C     	 mov r4,r1
 1913 078a 181C     	 mov r0,r3
 1914 078c 211C     	 mov r1,r4
 1915 078e CC4A     	 ldr r2,.L119+32
 1916 0790 CC4B     	 ldr r3,.L119+36
 1917 0792 FFF7FEFF 	 bl __aeabi_dmul
 1918 0796 031C     	 mov r3,r0
 1919 0798 0C1C     	 mov r4,r1
 1920 079a 181C     	 mov r0,r3
 1921 079c 211C     	 mov r1,r4
 1922 079e FFF7FEFF 	 bl __aeabi_d2f
 1923 07a2 021C     	 add r2,r0,#0
 1924 07a4 C84B     	 ldr r3,.L119+40
 1925 07a6 1A60     	 str r2,[r3]
 258:../main.c     **** 				angle_rr = - RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn - HALF_TRACK_WIDTH)); // out wheel
 1926              	 .loc 6 258 0
 1927 07a8 BD4B     	 ldr r3,.L119
 1928 07aa 1B68     	 ldr r3,[r3]
 1929 07ac 181C     	 add r0,r3,#0
 1930 07ae FFF7FEFF 	 bl __aeabi_f2d
 1931 07b2 031C     	 mov r3,r0
 1932 07b4 0C1C     	 mov r4,r1
 1933 07b6 181C     	 mov r0,r3
 1934 07b8 211C     	 mov r1,r4
 1935 07ba BD4A     	 ldr r2,.L119+16
 1936 07bc BD4B     	 ldr r3,.L119+20
 1937 07be FFF7FEFF 	 bl __aeabi_dsub
 1938 07c2 031C     	 mov r3,r0
 1939 07c4 0C1C     	 mov r4,r1
 1940 07c6 BC48     	 ldr r0,.L119+24
 1941 07c8 BC49     	 ldr r1,.L119+28
 1942 07ca 1A1C     	 mov r2,r3
 1943 07cc 231C     	 mov r3,r4
 1944 07ce FFF7FEFF 	 bl __aeabi_ddiv
 1945 07d2 031C     	 mov r3,r0
 1946 07d4 0C1C     	 mov r4,r1
 1947 07d6 181C     	 mov r0,r3
 1948 07d8 211C     	 mov r1,r4
 1949 07da FFF7FEFF 	 bl atan
 1950 07de 031C     	 mov r3,r0
 1951 07e0 0C1C     	 mov r4,r1
 1952 07e2 181C     	 mov r0,r3
 1953 07e4 211C     	 mov r1,r4
 1954 07e6 B64A     	 ldr r2,.L119+32
 1955 07e8 B64B     	 ldr r3,.L119+36
 1956 07ea FFF7FEFF 	 bl __aeabi_dmul
 1957 07ee 031C     	 mov r3,r0
 1958 07f0 0C1C     	 mov r4,r1
 1959 07f2 181C     	 mov r0,r3
 1960 07f4 211C     	 mov r1,r4
 1961 07f6 FFF7FEFF 	 bl __aeabi_d2f
 1962 07fa 021C     	 add r2,r0,#0
 1963 07fc B34B     	 ldr r3,.L119+44
 1964 07fe 1A60     	 str r2,[r3]
 259:../main.c     **** 
 260:../main.c     **** 				speed_fl = Driving_speed_cal / Speed_ratio;
 1965              	 .loc 6 260 0
 1966 0800 B34B     	 ldr r3,.L119+48
 1967 0802 1B68     	 ldr r3,[r3]
 1968 0804 B868     	 ldr r0,[r7,#8]
 1969 0806 191C     	 add r1,r3,#0
 1970 0808 FFF7FEFF 	 bl __aeabi_fdiv
 1971 080c 031C     	 add r3,r0,#0
 1972 080e 1A1C     	 add r2,r3,#0
 1973 0810 B04B     	 ldr r3,.L119+52
 1974 0812 1A60     	 str r2,[r3]
 261:../main.c     **** 				speed_fr = Driving_speed_cal * Speed_ratio;
 1975              	 .loc 6 261 0
 1976 0814 AE4B     	 ldr r3,.L119+48
 1977 0816 1B68     	 ldr r3,[r3]
 1978 0818 181C     	 add r0,r3,#0
 1979 081a B968     	 ldr r1,[r7,#8]
 1980 081c FFF7FEFF 	 bl __aeabi_fmul
 1981 0820 031C     	 add r3,r0,#0
 1982 0822 1A1C     	 add r2,r3,#0
 1983 0824 AC4B     	 ldr r3,.L119+56
 1984 0826 1A60     	 str r2,[r3]
 262:../main.c     **** 				//speed_rl = Driving_speed_cal / Speed_ratio;
 263:../main.c     **** 				//speed_rr = Driving_speed_cal * Speed_ratio;
 264:../main.c     **** 
 265:../main.c     **** 				speed_rl = speed_fl;
 1985              	 .loc 6 265 0
 1986 0828 AA4B     	 ldr r3,.L119+52
 1987 082a 1A68     	 ldr r2,[r3]
 1988 082c AB4B     	 ldr r3,.L119+60
 1989 082e 1A60     	 str r2,[r3]
 266:../main.c     **** 				speed_rr = speed_fr;
 1990              	 .loc 6 266 0
 1991 0830 A94B     	 ldr r3,.L119+56
 1992 0832 1A68     	 ldr r2,[r3]
 1993 0834 AA4B     	 ldr r3,.L119+64
 1994 0836 1A60     	 str r2,[r3]
 1995 0838 11E0     	 b .L65
 1996              	.L66:
 267:../main.c     **** 			}
 268:../main.c     **** 			else{
 269:../main.c     **** 				angle_rl = 0;
 1997              	 .loc 6 269 0
 1998 083a A34B     	 ldr r3,.L119+40
 1999 083c 0022     	 mov r2,#0
 2000 083e 1A60     	 str r2,[r3]
 270:../main.c     **** 				angle_rr = 0;
 2001              	 .loc 6 270 0
 2002 0840 A24B     	 ldr r3,.L119+44
 2003 0842 0022     	 mov r2,#0
 2004 0844 1A60     	 str r2,[r3]
 271:../main.c     **** 
 272:../main.c     **** 				speed_fl = Driving_speed_cal;
 2005              	 .loc 6 272 0
 2006 0846 A34B     	 ldr r3,.L119+52
 2007 0848 BA68     	 ldr r2,[r7,#8]
 2008 084a 1A60     	 str r2,[r3]
 273:../main.c     **** 				speed_fr = Driving_speed_cal;
 2009              	 .loc 6 273 0
 2010 084c A24B     	 ldr r3,.L119+56
 2011 084e BA68     	 ldr r2,[r7,#8]
 2012 0850 1A60     	 str r2,[r3]
 274:../main.c     **** 				speed_rl = Driving_speed_cal;
 2013              	 .loc 6 274 0
 2014 0852 A24B     	 ldr r3,.L119+60
 2015 0854 BA68     	 ldr r2,[r7,#8]
 2016 0856 1A60     	 str r2,[r3]
 275:../main.c     **** 				speed_rr = Driving_speed_cal;
 2017              	 .loc 6 275 0
 2018 0858 A14B     	 ldr r3,.L119+64
 2019 085a BA68     	 ldr r2,[r7,#8]
 2020 085c 1A60     	 str r2,[r3]
 2021              	.L65:
 276:../main.c     **** 			}
 277:../main.c     **** 
 278:../main.c     **** 			//rear axle
 279:../main.c     **** 			angle_fl = 0;
 2022              	 .loc 6 279 0
 2023 085e A14B     	 ldr r3,.L119+68
 2024 0860 0022     	 mov r2,#0
 2025 0862 1A60     	 str r2,[r3]
 280:../main.c     **** 			angle_fr = 0;
 2026              	 .loc 6 280 0
 2027 0864 A04B     	 ldr r3,.L119+72
 2028 0866 0022     	 mov r2,#0
 2029 0868 1A60     	 str r2,[r3]
 281:../main.c     **** 			break;
 2030              	 .loc 6 281 0
 2031 086a 93E2     	 b .L57
 2032              	.L43:
 282:../main.c     **** 
 283:../main.c     **** 		case ALL_WHEEL: // 4 wheel #############################################################
 284:../main.c     **** 			// steering limits
 285:../main.c     **** 			if(Steering_direction_cal > 30) Steering_direction_cal = 30;
 2033              	 .loc 6 285 0
 2034 086c F868     	 ldr r0,[r7,#12]
 2035 086e 9F49     	 ldr r1,.L119+76
 2036 0870 FFF7FEFF 	 bl __aeabi_fcmpgt
 2037 0874 031E     	 sub r3,r0,#0
 2038 0876 01D0     	 beq .L69
 2039              	 .loc 6 285 0 is_stmt 0 discriminator 1
 2040 0878 9C4B     	 ldr r3,.L119+76
 2041 087a FB60     	 str r3,[r7,#12]
 2042              	.L69:
 286:../main.c     **** 			if(Steering_direction_cal < -30) Steering_direction_cal = -30;
 2043              	 .loc 6 286 0 is_stmt 1
 2044 087c F868     	 ldr r0,[r7,#12]
 2045 087e 9C49     	 ldr r1,.L119+80
 2046 0880 FFF7FEFF 	 bl __aeabi_fcmplt
 2047 0884 031E     	 sub r3,r0,#0
 2048 0886 01D0     	 beq .L71
 2049              	 .loc 6 286 0 is_stmt 0 discriminator 1
 2050 0888 994B     	 ldr r3,.L119+80
 2051 088a FB60     	 str r3,[r7,#12]
 2052              	.L71:
 287:../main.c     **** 
 288:../main.c     **** 			// pre calc
 289:../main.c     **** 			R_Turn = HALF_WHEEL_BASE / tan(Steering_direction_cal / RAD_TO_DEG); // to truni graduis convers
 2053              	 .loc 6 289 0 is_stmt 1
 2054 088c F868     	 ldr r0,[r7,#12]
 2055 088e FFF7FEFF 	 bl __aeabi_f2d
 2056 0892 031C     	 mov r3,r0
 2057 0894 0C1C     	 mov r4,r1
 2058 0896 181C     	 mov r0,r3
 2059 0898 211C     	 mov r1,r4
 2060 089a 894A     	 ldr r2,.L119+32
 2061 089c 954B     	 ldr r3,.L119+84
 2062 089e FFF7FEFF 	 bl __aeabi_ddiv
 2063 08a2 031C     	 mov r3,r0
 2064 08a4 0C1C     	 mov r4,r1
 2065 08a6 181C     	 mov r0,r3
 2066 08a8 211C     	 mov r1,r4
 2067 08aa FFF7FEFF 	 bl tan
 2068 08ae 031C     	 mov r3,r0
 2069 08b0 0C1C     	 mov r4,r1
 2070 08b2 9148     	 ldr r0,.L119+88
 2071 08b4 9149     	 ldr r1,.L119+92
 2072 08b6 1A1C     	 mov r2,r3
 2073 08b8 231C     	 mov r3,r4
 2074 08ba FFF7FEFF 	 bl __aeabi_ddiv
 2075 08be 031C     	 mov r3,r0
 2076 08c0 0C1C     	 mov r4,r1
 2077 08c2 181C     	 mov r0,r3
 2078 08c4 211C     	 mov r1,r4
 2079 08c6 FFF7FEFF 	 bl __aeabi_d2f
 2080 08ca 021C     	 add r2,r0,#0
 2081 08cc 744B     	 ldr r3,.L119
 2082 08ce 1A60     	 str r2,[r3]
 290:../main.c     **** 			Speed_ratio = (2 * (copysign(R_Turn,1) + HALF_TRACK_WIDTH) * M_PI) / (2 * copysign(R_Turn,1) * M
 2083              	 .loc 6 290 0
 2084 08d0 734B     	 ldr r3,.L119
 2085 08d2 1B68     	 ldr r3,[r3]
 2086 08d4 5B00     	 lsl r3,r3,#1
 2087 08d6 5B08     	 lsr r3,r3,#1
 2088 08d8 181C     	 add r0,r3,#0
 2089 08da FFF7FEFF 	 bl __aeabi_f2d
 2090 08de 031C     	 mov r3,r0
 2091 08e0 0C1C     	 mov r4,r1
 2092 08e2 181C     	 mov r0,r3
 2093 08e4 211C     	 mov r1,r4
 2094 08e6 724A     	 ldr r2,.L119+16
 2095 08e8 724B     	 ldr r3,.L119+20
 2096 08ea FFF7FEFF 	 bl __aeabi_dadd
 2097 08ee 031C     	 mov r3,r0
 2098 08f0 0C1C     	 mov r4,r1
 2099 08f2 181C     	 mov r0,r3
 2100 08f4 211C     	 mov r1,r4
 2101 08f6 1A1C     	 mov r2,r3
 2102 08f8 231C     	 mov r3,r4
 2103 08fa FFF7FEFF 	 bl __aeabi_dadd
 2104 08fe 031C     	 mov r3,r0
 2105 0900 0C1C     	 mov r4,r1
 2106 0902 181C     	 mov r0,r3
 2107 0904 211C     	 mov r1,r4
 2108 0906 7E4A     	 ldr r2,.L119+96
 2109 0908 7E4B     	 ldr r3,.L119+100
 2110 090a FFF7FEFF 	 bl __aeabi_dmul
 2111 090e 031C     	 mov r3,r0
 2112 0910 0C1C     	 mov r4,r1
 2113 0912 1D1C     	 mov r5,r3
 2114 0914 261C     	 mov r6,r4
 2115 0916 624B     	 ldr r3,.L119
 2116 0918 1B68     	 ldr r3,[r3]
 2117 091a 5B00     	 lsl r3,r3,#1
 2118 091c 5B08     	 lsr r3,r3,#1
 2119 091e 181C     	 add r0,r3,#0
 2120 0920 FFF7FEFF 	 bl __aeabi_f2d
 2121 0924 031C     	 mov r3,r0
 2122 0926 0C1C     	 mov r4,r1
 2123 0928 181C     	 mov r0,r3
 2124 092a 211C     	 mov r1,r4
 2125 092c 1A1C     	 mov r2,r3
 2126 092e 231C     	 mov r3,r4
 2127 0930 FFF7FEFF 	 bl __aeabi_dadd
 2128 0934 031C     	 mov r3,r0
 2129 0936 0C1C     	 mov r4,r1
 2130 0938 181C     	 mov r0,r3
 2131 093a 211C     	 mov r1,r4
 2132 093c 704A     	 ldr r2,.L119+96
 2133 093e 714B     	 ldr r3,.L119+100
 2134 0940 FFF7FEFF 	 bl __aeabi_dmul
 2135 0944 031C     	 mov r3,r0
 2136 0946 0C1C     	 mov r4,r1
 2137 0948 281C     	 mov r0,r5
 2138 094a 311C     	 mov r1,r6
 2139 094c 1A1C     	 mov r2,r3
 2140 094e 231C     	 mov r3,r4
 2141 0950 FFF7FEFF 	 bl __aeabi_ddiv
 2142 0954 031C     	 mov r3,r0
 2143 0956 0C1C     	 mov r4,r1
 2144 0958 181C     	 mov r0,r3
 2145 095a 211C     	 mov r1,r4
 2146 095c FFF7FEFF 	 bl __aeabi_d2f
 2147 0960 021C     	 add r2,r0,#0
 2148 0962 5B4B     	 ldr r3,.L119+48
 2149 0964 1A60     	 str r2,[r3]
 291:../main.c     **** 
 292:../main.c     **** 			if((R_TRUN_MIN < R_Turn) && (R_Turn < R_TRUN_MAX)){ // trun right positive R
 2150              	 .loc 6 292 0
 2151 0966 4E4B     	 ldr r3,.L119
 2152 0968 1B68     	 ldr r3,[r3]
 2153 096a 181C     	 add r0,r3,#0
 2154 096c FFF7FEFF 	 bl __aeabi_f2d
 2155 0970 031C     	 mov r3,r0
 2156 0972 0C1C     	 mov r4,r1
 2157 0974 181C     	 mov r0,r3
 2158 0976 211C     	 mov r1,r4
 2159 0978 4A4A     	 ldr r2,.L119+4
 2160 097a 634B     	 ldr r3,.L119+104
 2161 097c FFF7FEFF 	 bl __aeabi_dcmpgt
 2162 0980 031E     	 sub r3,r0,#0
 2163 0982 00D1     	 bne .LCB1552
 2164 0984 C4E0     	 b .L73
 2165              	.LCB1552:
 2166              	 .loc 6 292 0 is_stmt 0 discriminator 1
 2167 0986 464B     	 ldr r3,.L119
 2168 0988 1B68     	 ldr r3,[r3]
 2169 098a 181C     	 add r0,r3,#0
 2170 098c 5F49     	 ldr r1,.L119+108
 2171 098e FFF7FEFF 	 bl __aeabi_fcmplt
 2172 0992 031E     	 sub r3,r0,#0
 2173 0994 00D1     	 bne .LCB1560
 2174 0996 BBE0     	 b .L73
 2175              	.LCB1560:
 293:../main.c     **** 				angle_fl = RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn + HALF_TRACK_WIDTH)); // out wheel
 2176              	 .loc 6 293 0 is_stmt 1
 2177 0998 414B     	 ldr r3,.L119
 2178 099a 1B68     	 ldr r3,[r3]
 2179 099c 181C     	 add r0,r3,#0
 2180 099e FFF7FEFF 	 bl __aeabi_f2d
 2181 09a2 031C     	 mov r3,r0
 2182 09a4 0C1C     	 mov r4,r1
 2183 09a6 181C     	 mov r0,r3
 2184 09a8 211C     	 mov r1,r4
 2185 09aa 414A     	 ldr r2,.L119+16
 2186 09ac 414B     	 ldr r3,.L119+20
 2187 09ae FFF7FEFF 	 bl __aeabi_dadd
 2188 09b2 031C     	 mov r3,r0
 2189 09b4 0C1C     	 mov r4,r1
 2190 09b6 4048     	 ldr r0,.L119+24
 2191 09b8 4049     	 ldr r1,.L119+28
 2192 09ba 1A1C     	 mov r2,r3
 2193 09bc 231C     	 mov r3,r4
 2194 09be FFF7FEFF 	 bl __aeabi_ddiv
 2195 09c2 031C     	 mov r3,r0
 2196 09c4 0C1C     	 mov r4,r1
 2197 09c6 181C     	 mov r0,r3
 2198 09c8 211C     	 mov r1,r4
 2199 09ca FFF7FEFF 	 bl atan
 2200 09ce 031C     	 mov r3,r0
 2201 09d0 0C1C     	 mov r4,r1
 2202 09d2 181C     	 mov r0,r3
 2203 09d4 211C     	 mov r1,r4
 2204 09d6 3A4A     	 ldr r2,.L119+32
 2205 09d8 464B     	 ldr r3,.L119+84
 2206 09da FFF7FEFF 	 bl __aeabi_dmul
 2207 09de 031C     	 mov r3,r0
 2208 09e0 0C1C     	 mov r4,r1
 2209 09e2 181C     	 mov r0,r3
 2210 09e4 211C     	 mov r1,r4
 2211 09e6 FFF7FEFF 	 bl __aeabi_d2f
 2212 09ea 021C     	 add r2,r0,#0
 2213 09ec 3D4B     	 ldr r3,.L119+68
 2214 09ee 1A60     	 str r2,[r3]
 294:../main.c     **** 				angle_fr = RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn - HALF_TRACK_WIDTH)); // in wheel
 2215              	 .loc 6 294 0
 2216 09f0 2B4B     	 ldr r3,.L119
 2217 09f2 1B68     	 ldr r3,[r3]
 2218 09f4 181C     	 add r0,r3,#0
 2219 09f6 FFF7FEFF 	 bl __aeabi_f2d
 2220 09fa 031C     	 mov r3,r0
 2221 09fc 0C1C     	 mov r4,r1
 2222 09fe 181C     	 mov r0,r3
 2223 0a00 211C     	 mov r1,r4
 2224 0a02 2B4A     	 ldr r2,.L119+16
 2225 0a04 2B4B     	 ldr r3,.L119+20
 2226 0a06 FFF7FEFF 	 bl __aeabi_dsub
 2227 0a0a 031C     	 mov r3,r0
 2228 0a0c 0C1C     	 mov r4,r1
 2229 0a0e 2A48     	 ldr r0,.L119+24
 2230 0a10 2A49     	 ldr r1,.L119+28
 2231 0a12 1A1C     	 mov r2,r3
 2232 0a14 231C     	 mov r3,r4
 2233 0a16 FFF7FEFF 	 bl __aeabi_ddiv
 2234 0a1a 031C     	 mov r3,r0
 2235 0a1c 0C1C     	 mov r4,r1
 2236 0a1e 181C     	 mov r0,r3
 2237 0a20 211C     	 mov r1,r4
 2238 0a22 FFF7FEFF 	 bl atan
 2239 0a26 031C     	 mov r3,r0
 2240 0a28 0C1C     	 mov r4,r1
 2241 0a2a 181C     	 mov r0,r3
 2242 0a2c 211C     	 mov r1,r4
 2243 0a2e 244A     	 ldr r2,.L119+32
 2244 0a30 304B     	 ldr r3,.L119+84
 2245 0a32 FFF7FEFF 	 bl __aeabi_dmul
 2246 0a36 031C     	 mov r3,r0
 2247 0a38 0C1C     	 mov r4,r1
 2248 0a3a 181C     	 mov r0,r3
 2249 0a3c 211C     	 mov r1,r4
 2250 0a3e FFF7FEFF 	 bl __aeabi_d2f
 2251 0a42 021C     	 add r2,r0,#0
 2252 0a44 284B     	 ldr r3,.L119+72
 2253 0a46 1A60     	 str r2,[r3]
 295:../main.c     **** 				//angle_rl = - RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn + HALF_TRACK_WIDTH)); // out wheel
 296:../main.c     **** 				//angle_rr = - RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn - HALF_TRACK_WIDTH)); // in wheel
 297:../main.c     **** 
 298:../main.c     **** 				angle_rl = -angle_fl;
 2254              	 .loc 6 298 0
 2255 0a48 264B     	 ldr r3,.L119+68
 2256 0a4a 1B68     	 ldr r3,[r3]
 2257 0a4c 8022     	 mov r2,#128
 2258 0a4e 1206     	 lsl r2,r2,#24
 2259 0a50 5A40     	 eor r2,r3
 2260 0a52 1D4B     	 ldr r3,.L119+40
 2261 0a54 1A60     	 str r2,[r3]
 299:../main.c     **** 				angle_rr = -angle_fr;
 2262              	 .loc 6 299 0
 2263 0a56 244B     	 ldr r3,.L119+72
 2264 0a58 1B68     	 ldr r3,[r3]
 2265 0a5a 8022     	 mov r2,#128
 2266 0a5c 1206     	 lsl r2,r2,#24
 2267 0a5e 5A40     	 eor r2,r3
 2268 0a60 1A4B     	 ldr r3,.L119+44
 2269 0a62 1A60     	 str r2,[r3]
 300:../main.c     **** 
 301:../main.c     **** 				speed_fl = Driving_speed_cal * Speed_ratio;
 2270              	 .loc 6 301 0
 2271 0a64 1A4B     	 ldr r3,.L119+48
 2272 0a66 1B68     	 ldr r3,[r3]
 2273 0a68 181C     	 add r0,r3,#0
 2274 0a6a B968     	 ldr r1,[r7,#8]
 2275 0a6c FFF7FEFF 	 bl __aeabi_fmul
 2276 0a70 031C     	 add r3,r0,#0
 2277 0a72 1A1C     	 add r2,r3,#0
 2278 0a74 174B     	 ldr r3,.L119+52
 2279 0a76 1A60     	 str r2,[r3]
 302:../main.c     **** 				speed_fr = Driving_speed_cal / Speed_ratio;
 2280              	 .loc 6 302 0
 2281 0a78 154B     	 ldr r3,.L119+48
 2282 0a7a 1B68     	 ldr r3,[r3]
 2283 0a7c B868     	 ldr r0,[r7,#8]
 2284 0a7e 191C     	 add r1,r3,#0
 2285 0a80 FFF7FEFF 	 bl __aeabi_fdiv
 2286 0a84 031C     	 add r3,r0,#0
 2287 0a86 1A1C     	 add r2,r3,#0
 2288 0a88 134B     	 ldr r3,.L119+56
 2289 0a8a 1A60     	 str r2,[r3]
 303:../main.c     **** 				//speed_rl = Driving_speed_cal * Speed_ratio;
 304:../main.c     **** 				//speed_rr = Driving_speed_cal / Speed_ratio;
 305:../main.c     **** 
 306:../main.c     **** 				speed_rl = speed_fl;
 2290              	 .loc 6 306 0
 2291 0a8c 114B     	 ldr r3,.L119+52
 2292 0a8e 1A68     	 ldr r2,[r3]
 2293 0a90 124B     	 ldr r3,.L119+60
 2294 0a92 1A60     	 str r2,[r3]
 307:../main.c     **** 				speed_rr = speed_fr;
 2295              	 .loc 6 307 0
 2296 0a94 104B     	 ldr r3,.L119+56
 2297 0a96 1A68     	 ldr r2,[r3]
 2298 0a98 114B     	 ldr r3,.L119+64
 2299 0a9a 1A60     	 str r2,[r3]
 2300 0a9c EDE0     	 b .L76
 2301              	.L120:
 2302 0a9e C046     	 .align 2
 2303              	.L119:
 2304 0aa0 00000000 	 .word R_Turn
 2305 0aa4 9A999999 	 .word -1717986918
 2306 0aa8 9999A9BF 	 .word -1079404135
 2307 0aac 0000A0C1 	 .word -1046478848
 2308 0ab0 77BE9F1A 	 .word 446676599
 2309 0ab4 2FDDC43F 	 .word 1069866287
 2310 0ab8 79E92631 	 .word 824633721
 2311 0abc 08ACDC3F 	 .word 1071426568
 2312 0ac0 D9CEF753 	 .word 1408749273
 2313 0ac4 E3A54CC0 	 .word -1068718621
 2314 0ac8 00000000 	 .word angle_rl
 2315 0acc 00000000 	 .word angle_rr
 2316 0ad0 00000000 	 .word Speed_ratio
 2317 0ad4 00000000 	 .word speed_fl
 2318 0ad8 00000000 	 .word speed_fr
 2319 0adc 00000000 	 .word speed_rl
 2320 0ae0 00000000 	 .word speed_rr
 2321 0ae4 00000000 	 .word angle_fl
 2322 0ae8 00000000 	 .word angle_fr
 2323 0aec 0000F041 	 .word 1106247680
 2324 0af0 0000F0C1 	 .word -1041235968
 2325 0af4 E3A54C40 	 .word 1078765027
 2326 0af8 295C8FC2 	 .word -1030792151
 2327 0afc F528CC3F 	 .word 1070344437
 2328 0b00 182D4454 	 .word 1413754136
 2329 0b04 FB210940 	 .word 1074340347
 2330 0b08 9999A93F 	 .word 1068079513
 2331 0b0c 0000A041 	 .word 1101004800
 2332              	.L73:
 308:../main.c     **** 			}
 309:../main.c     **** 			else if((- R_TRUN_MIN > R_Turn) && (R_Turn > -R_TRUN_MAX)){ // trun left positive R
 2333              	 .loc 6 309 0
 2334 0b10 B24B     	 ldr r3,.L121
 2335 0b12 1B68     	 ldr r3,[r3]
 2336 0b14 181C     	 add r0,r3,#0
 2337 0b16 FFF7FEFF 	 bl __aeabi_f2d
 2338 0b1a 031C     	 mov r3,r0
 2339 0b1c 0C1C     	 mov r4,r1
 2340 0b1e 181C     	 mov r0,r3
 2341 0b20 211C     	 mov r1,r4
 2342 0b22 AF4A     	 ldr r2,.L121+4
 2343 0b24 AF4B     	 ldr r3,.L121+8
 2344 0b26 FFF7FEFF 	 bl __aeabi_dcmplt
 2345 0b2a 031E     	 sub r3,r0,#0
 2346 0b2c 00D1     	 bne .LCB1727
 2347 0b2e 8BE0     	 b .L77
 2348              	.LCB1727:
 2349              	 .loc 6 309 0 is_stmt 0 discriminator 1
 2350 0b30 AA4B     	 ldr r3,.L121
 2351 0b32 1B68     	 ldr r3,[r3]
 2352 0b34 181C     	 add r0,r3,#0
 2353 0b36 AC49     	 ldr r1,.L121+12
 2354 0b38 FFF7FEFF 	 bl __aeabi_fcmpgt
 2355 0b3c 031E     	 sub r3,r0,#0
 2356 0b3e 00D1     	 bne .LCB1735
 2357 0b40 82E0     	 b .L77
 2358              	.LCB1735:
 310:../main.c     **** 				angle_fl = RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn + HALF_TRACK_WIDTH)); // in wheel
 2359              	 .loc 6 310 0 is_stmt 1
 2360 0b42 A64B     	 ldr r3,.L121
 2361 0b44 1B68     	 ldr r3,[r3]
 2362 0b46 181C     	 add r0,r3,#0
 2363 0b48 FFF7FEFF 	 bl __aeabi_f2d
 2364 0b4c 031C     	 mov r3,r0
 2365 0b4e 0C1C     	 mov r4,r1
 2366 0b50 181C     	 mov r0,r3
 2367 0b52 211C     	 mov r1,r4
 2368 0b54 A54A     	 ldr r2,.L121+16
 2369 0b56 A64B     	 ldr r3,.L121+20
 2370 0b58 FFF7FEFF 	 bl __aeabi_dadd
 2371 0b5c 031C     	 mov r3,r0
 2372 0b5e 0C1C     	 mov r4,r1
 2373 0b60 A448     	 ldr r0,.L121+24
 2374 0b62 A549     	 ldr r1,.L121+28
 2375 0b64 1A1C     	 mov r2,r3
 2376 0b66 231C     	 mov r3,r4
 2377 0b68 FFF7FEFF 	 bl __aeabi_ddiv
 2378 0b6c 031C     	 mov r3,r0
 2379 0b6e 0C1C     	 mov r4,r1
 2380 0b70 181C     	 mov r0,r3
 2381 0b72 211C     	 mov r1,r4
 2382 0b74 FFF7FEFF 	 bl atan
 2383 0b78 031C     	 mov r3,r0
 2384 0b7a 0C1C     	 mov r4,r1
 2385 0b7c 181C     	 mov r0,r3
 2386 0b7e 211C     	 mov r1,r4
 2387 0b80 9E4A     	 ldr r2,.L121+32
 2388 0b82 9F4B     	 ldr r3,.L121+36
 2389 0b84 FFF7FEFF 	 bl __aeabi_dmul
 2390 0b88 031C     	 mov r3,r0
 2391 0b8a 0C1C     	 mov r4,r1
 2392 0b8c 181C     	 mov r0,r3
 2393 0b8e 211C     	 mov r1,r4
 2394 0b90 FFF7FEFF 	 bl __aeabi_d2f
 2395 0b94 021C     	 add r2,r0,#0
 2396 0b96 9B4B     	 ldr r3,.L121+40
 2397 0b98 1A60     	 str r2,[r3]
 311:../main.c     **** 				angle_fr = RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn - HALF_TRACK_WIDTH)); // out wheel
 2398              	 .loc 6 311 0
 2399 0b9a 904B     	 ldr r3,.L121
 2400 0b9c 1B68     	 ldr r3,[r3]
 2401 0b9e 181C     	 add r0,r3,#0
 2402 0ba0 FFF7FEFF 	 bl __aeabi_f2d
 2403 0ba4 031C     	 mov r3,r0
 2404 0ba6 0C1C     	 mov r4,r1
 2405 0ba8 181C     	 mov r0,r3
 2406 0baa 211C     	 mov r1,r4
 2407 0bac 8F4A     	 ldr r2,.L121+16
 2408 0bae 904B     	 ldr r3,.L121+20
 2409 0bb0 FFF7FEFF 	 bl __aeabi_dsub
 2410 0bb4 031C     	 mov r3,r0
 2411 0bb6 0C1C     	 mov r4,r1
 2412 0bb8 8E48     	 ldr r0,.L121+24
 2413 0bba 8F49     	 ldr r1,.L121+28
 2414 0bbc 1A1C     	 mov r2,r3
 2415 0bbe 231C     	 mov r3,r4
 2416 0bc0 FFF7FEFF 	 bl __aeabi_ddiv
 2417 0bc4 031C     	 mov r3,r0
 2418 0bc6 0C1C     	 mov r4,r1
 2419 0bc8 181C     	 mov r0,r3
 2420 0bca 211C     	 mov r1,r4
 2421 0bcc FFF7FEFF 	 bl atan
 2422 0bd0 031C     	 mov r3,r0
 2423 0bd2 0C1C     	 mov r4,r1
 2424 0bd4 181C     	 mov r0,r3
 2425 0bd6 211C     	 mov r1,r4
 2426 0bd8 884A     	 ldr r2,.L121+32
 2427 0bda 894B     	 ldr r3,.L121+36
 2428 0bdc FFF7FEFF 	 bl __aeabi_dmul
 2429 0be0 031C     	 mov r3,r0
 2430 0be2 0C1C     	 mov r4,r1
 2431 0be4 181C     	 mov r0,r3
 2432 0be6 211C     	 mov r1,r4
 2433 0be8 FFF7FEFF 	 bl __aeabi_d2f
 2434 0bec 021C     	 add r2,r0,#0
 2435 0bee 864B     	 ldr r3,.L121+44
 2436 0bf0 1A60     	 str r2,[r3]
 312:../main.c     **** 				//angle_rl = - RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn + HALF_TRACK_WIDTH)); // in wheel
 313:../main.c     **** 				//angle_rr = - RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn - HALF_TRACK_WIDTH)); // in wheel
 314:../main.c     **** 
 315:../main.c     **** 				angle_rl = -angle_fl;
 2437              	 .loc 6 315 0
 2438 0bf2 844B     	 ldr r3,.L121+40
 2439 0bf4 1B68     	 ldr r3,[r3]
 2440 0bf6 8022     	 mov r2,#128
 2441 0bf8 1206     	 lsl r2,r2,#24
 2442 0bfa 5A40     	 eor r2,r3
 2443 0bfc 834B     	 ldr r3,.L121+48
 2444 0bfe 1A60     	 str r2,[r3]
 316:../main.c     **** 				angle_rr = -angle_fr;
 2445              	 .loc 6 316 0
 2446 0c00 814B     	 ldr r3,.L121+44
 2447 0c02 1B68     	 ldr r3,[r3]
 2448 0c04 8022     	 mov r2,#128
 2449 0c06 1206     	 lsl r2,r2,#24
 2450 0c08 5A40     	 eor r2,r3
 2451 0c0a 814B     	 ldr r3,.L121+52
 2452 0c0c 1A60     	 str r2,[r3]
 317:../main.c     **** 
 318:../main.c     **** 				speed_fl = Driving_speed_cal / Speed_ratio;
 2453              	 .loc 6 318 0
 2454 0c0e 814B     	 ldr r3,.L121+56
 2455 0c10 1B68     	 ldr r3,[r3]
 2456 0c12 B868     	 ldr r0,[r7,#8]
 2457 0c14 191C     	 add r1,r3,#0
 2458 0c16 FFF7FEFF 	 bl __aeabi_fdiv
 2459 0c1a 031C     	 add r3,r0,#0
 2460 0c1c 1A1C     	 add r2,r3,#0
 2461 0c1e 7E4B     	 ldr r3,.L121+60
 2462 0c20 1A60     	 str r2,[r3]
 319:../main.c     **** 				speed_fr = Driving_speed_cal * Speed_ratio;
 2463              	 .loc 6 319 0
 2464 0c22 7C4B     	 ldr r3,.L121+56
 2465 0c24 1B68     	 ldr r3,[r3]
 2466 0c26 181C     	 add r0,r3,#0
 2467 0c28 B968     	 ldr r1,[r7,#8]
 2468 0c2a FFF7FEFF 	 bl __aeabi_fmul
 2469 0c2e 031C     	 add r3,r0,#0
 2470 0c30 1A1C     	 add r2,r3,#0
 2471 0c32 7A4B     	 ldr r3,.L121+64
 2472 0c34 1A60     	 str r2,[r3]
 320:../main.c     **** 				//speed_rl = Driving_speed_cal / Speed_ratio;
 321:../main.c     **** 				//speed_rr = Driving_speed_cal * Speed_ratio;
 322:../main.c     **** 
 323:../main.c     **** 				speed_rl = speed_fl;
 2473              	 .loc 6 323 0
 2474 0c36 784B     	 ldr r3,.L121+60
 2475 0c38 1A68     	 ldr r2,[r3]
 2476 0c3a 794B     	 ldr r3,.L121+68
 2477 0c3c 1A60     	 str r2,[r3]
 324:../main.c     **** 				speed_rr = speed_fr;
 2478              	 .loc 6 324 0
 2479 0c3e 774B     	 ldr r3,.L121+64
 2480 0c40 1A68     	 ldr r2,[r3]
 2481 0c42 784B     	 ldr r3,.L121+72
 2482 0c44 1A60     	 str r2,[r3]
 2483 0c46 18E0     	 b .L76
 2484              	.L77:
 325:../main.c     **** 			}
 326:../main.c     **** 			else{// starigt driving
 327:../main.c     **** 				angle_fl = 0;
 2485              	 .loc 6 327 0
 2486 0c48 6E4B     	 ldr r3,.L121+40
 2487 0c4a 0022     	 mov r2,#0
 2488 0c4c 1A60     	 str r2,[r3]
 328:../main.c     **** 				angle_fr = 0;
 2489              	 .loc 6 328 0
 2490 0c4e 6E4B     	 ldr r3,.L121+44
 2491 0c50 0022     	 mov r2,#0
 2492 0c52 1A60     	 str r2,[r3]
 329:../main.c     **** 				angle_rl = 0;
 2493              	 .loc 6 329 0
 2494 0c54 6D4B     	 ldr r3,.L121+48
 2495 0c56 0022     	 mov r2,#0
 2496 0c58 1A60     	 str r2,[r3]
 330:../main.c     **** 				angle_rr = 0;
 2497              	 .loc 6 330 0
 2498 0c5a 6D4B     	 ldr r3,.L121+52
 2499 0c5c 0022     	 mov r2,#0
 2500 0c5e 1A60     	 str r2,[r3]
 331:../main.c     **** 
 332:../main.c     **** 				speed_fl = Driving_speed_cal;
 2501              	 .loc 6 332 0
 2502 0c60 6D4B     	 ldr r3,.L121+60
 2503 0c62 BA68     	 ldr r2,[r7,#8]
 2504 0c64 1A60     	 str r2,[r3]
 333:../main.c     **** 				speed_fr = Driving_speed_cal;
 2505              	 .loc 6 333 0
 2506 0c66 6D4B     	 ldr r3,.L121+64
 2507 0c68 BA68     	 ldr r2,[r7,#8]
 2508 0c6a 1A60     	 str r2,[r3]
 334:../main.c     **** 				speed_rl = Driving_speed_cal;
 2509              	 .loc 6 334 0
 2510 0c6c 6C4B     	 ldr r3,.L121+68
 2511 0c6e BA68     	 ldr r2,[r7,#8]
 2512 0c70 1A60     	 str r2,[r3]
 335:../main.c     **** 				speed_rr = Driving_speed_cal;
 2513              	 .loc 6 335 0
 2514 0c72 6C4B     	 ldr r3,.L121+72
 2515 0c74 BA68     	 ldr r2,[r7,#8]
 2516 0c76 1A60     	 str r2,[r3]
 336:../main.c     **** 			}
 337:../main.c     **** 			break;
 2517              	 .loc 6 337 0
 2518 0c78 8CE0     	 b .L57
 2519              	.L76:
 2520 0c7a 8BE0     	 b .L57
 2521              	.L44:
 338:../main.c     **** 
 339:../main.c     **** 		case CRAB:  //carb //#############################################################
 340:../main.c     **** 			Steering_direction_cal = Steering_direction_cal * 4; // mach data from remote
 2522              	 .loc 6 340 0
 2523 0c7c F868     	 ldr r0,[r7,#12]
 2524 0c7e 8121     	 mov r1,#129
 2525 0c80 C905     	 lsl r1,r1,#23
 2526 0c82 FFF7FEFF 	 bl __aeabi_fmul
 2527 0c86 031C     	 add r3,r0,#0
 2528 0c88 FB60     	 str r3,[r7,#12]
 341:../main.c     **** 			if(Steering_direction_cal > 190) Steering_direction_cal = 190;
 2529              	 .loc 6 341 0
 2530 0c8a F868     	 ldr r0,[r7,#12]
 2531 0c8c 6649     	 ldr r1,.L121+76
 2532 0c8e FFF7FEFF 	 bl __aeabi_fcmpgt
 2533 0c92 031E     	 sub r3,r0,#0
 2534 0c94 01D0     	 beq .L80
 2535              	 .loc 6 341 0 is_stmt 0 discriminator 1
 2536 0c96 644B     	 ldr r3,.L121+76
 2537 0c98 FB60     	 str r3,[r7,#12]
 2538              	.L80:
 342:../main.c     **** 			if(Steering_direction_cal < -190) Steering_direction_cal = -190;
 2539              	 .loc 6 342 0 is_stmt 1
 2540 0c9a F868     	 ldr r0,[r7,#12]
 2541 0c9c 6349     	 ldr r1,.L121+80
 2542 0c9e FFF7FEFF 	 bl __aeabi_fcmplt
 2543 0ca2 031E     	 sub r3,r0,#0
 2544 0ca4 01D0     	 beq .L82
 2545              	 .loc 6 342 0 is_stmt 0 discriminator 1
 2546 0ca6 614B     	 ldr r3,.L121+80
 2547 0ca8 FB60     	 str r3,[r7,#12]
 2548              	.L82:
 343:../main.c     **** 			// steering
 344:../main.c     **** 			angle_fl = Steering_direction_cal;
 2549              	 .loc 6 344 0 is_stmt 1
 2550 0caa 564B     	 ldr r3,.L121+40
 2551 0cac FA68     	 ldr r2,[r7,#12]
 2552 0cae 1A60     	 str r2,[r3]
 345:../main.c     **** 			angle_fr = Steering_direction_cal;
 2553              	 .loc 6 345 0
 2554 0cb0 554B     	 ldr r3,.L121+44
 2555 0cb2 FA68     	 ldr r2,[r7,#12]
 2556 0cb4 1A60     	 str r2,[r3]
 346:../main.c     **** 			angle_rl = Steering_direction_cal;
 2557              	 .loc 6 346 0
 2558 0cb6 554B     	 ldr r3,.L121+48
 2559 0cb8 FA68     	 ldr r2,[r7,#12]
 2560 0cba 1A60     	 str r2,[r3]
 347:../main.c     **** 			angle_rr = Steering_direction_cal;
 2561              	 .loc 6 347 0
 2562 0cbc 544B     	 ldr r3,.L121+52
 2563 0cbe FA68     	 ldr r2,[r7,#12]
 2564 0cc0 1A60     	 str r2,[r3]
 348:../main.c     **** 			 // speed
 349:../main.c     **** 			 speed_fl = Driving_speed_cal;
 2565              	 .loc 6 349 0
 2566 0cc2 554B     	 ldr r3,.L121+60
 2567 0cc4 BA68     	 ldr r2,[r7,#8]
 2568 0cc6 1A60     	 str r2,[r3]
 350:../main.c     **** 			 speed_fr = Driving_speed_cal;
 2569              	 .loc 6 350 0
 2570 0cc8 544B     	 ldr r3,.L121+64
 2571 0cca BA68     	 ldr r2,[r7,#8]
 2572 0ccc 1A60     	 str r2,[r3]
 351:../main.c     **** 			 speed_rl = Driving_speed_cal;
 2573              	 .loc 6 351 0
 2574 0cce 544B     	 ldr r3,.L121+68
 2575 0cd0 BA68     	 ldr r2,[r7,#8]
 2576 0cd2 1A60     	 str r2,[r3]
 352:../main.c     **** 			 speed_rr = Driving_speed_cal;
 2577              	 .loc 6 352 0
 2578 0cd4 534B     	 ldr r3,.L121+72
 2579 0cd6 BA68     	 ldr r2,[r7,#8]
 2580 0cd8 1A60     	 str r2,[r3]
 353:../main.c     **** 			break;
 2581              	 .loc 6 353 0
 2582 0cda 5BE0     	 b .L57
 2583              	.L45:
 354:../main.c     **** 
 355:../main.c     **** 		case ROTATE: // rotate #############################################################
 356:../main.c     **** 			// steering agel for turng in place
 357:../main.c     **** 			angle_fl = ROTATION_ANGLE + ROTATION_ANGLE_OFFSET;
 2584              	 .loc 6 357 0
 2585 0cdc 494B     	 ldr r3,.L121+40
 2586 0cde 544A     	 ldr r2,.L121+84
 2587 0ce0 1A60     	 str r2,[r3]
 358:../main.c     **** 			angle_fr = -ROTATION_ANGLE + ROTATION_ANGLE_OFFSET;
 2588              	 .loc 6 358 0
 2589 0ce2 494B     	 ldr r3,.L121+44
 2590 0ce4 534A     	 ldr r2,.L121+88
 2591 0ce6 1A60     	 str r2,[r3]
 359:../main.c     **** 			angle_rl = -ROTATION_ANGLE + ROTATION_ANGLE_OFFSET;
 2592              	 .loc 6 359 0
 2593 0ce8 484B     	 ldr r3,.L121+48
 2594 0cea 524A     	 ldr r2,.L121+88
 2595 0cec 1A60     	 str r2,[r3]
 360:../main.c     **** 			angle_rr = ROTATION_ANGLE + ROTATION_ANGLE_OFFSET;
 2596              	 .loc 6 360 0
 2597 0cee 484B     	 ldr r3,.L121+52
 2598 0cf0 4F4A     	 ldr r2,.L121+84
 2599 0cf2 1A60     	 str r2,[r3]
 361:../main.c     **** 
 362:../main.c     **** 			 // speed
 363:../main.c     **** 			if (Steering_direction_cal > 10){
 2600              	 .loc 6 363 0
 2601 0cf4 F868     	 ldr r0,[r7,#12]
 2602 0cf6 5049     	 ldr r1,.L121+92
 2603 0cf8 FFF7FEFF 	 bl __aeabi_fcmpgt
 2604 0cfc 031E     	 sub r3,r0,#0
 2605 0cfe 0ED0     	 beq .L113
 364:../main.c     **** 				speed_fl = ROTATION_SPEED;
 2606              	 .loc 6 364 0
 2607 0d00 454B     	 ldr r3,.L121+60
 2608 0d02 FA22     	 mov r2,#250
 2609 0d04 9205     	 lsl r2,r2,#22
 2610 0d06 1A60     	 str r2,[r3]
 365:../main.c     **** 				speed_fr = -ROTATION_SPEED;
 2611              	 .loc 6 365 0
 2612 0d08 444B     	 ldr r3,.L121+64
 2613 0d0a 4C4A     	 ldr r2,.L121+96
 2614 0d0c 1A60     	 str r2,[r3]
 366:../main.c     **** 				speed_rl = ROTATION_SPEED;
 2615              	 .loc 6 366 0
 2616 0d0e 444B     	 ldr r3,.L121+68
 2617 0d10 FA22     	 mov r2,#250
 2618 0d12 9205     	 lsl r2,r2,#22
 2619 0d14 1A60     	 str r2,[r3]
 367:../main.c     **** 				speed_rr = -ROTATION_SPEED;
 2620              	 .loc 6 367 0
 2621 0d16 434B     	 ldr r3,.L121+72
 2622 0d18 484A     	 ldr r2,.L121+96
 2623 0d1a 1A60     	 str r2,[r3]
 2624 0d1c 21E0     	 b .L86
 2625              	.L113:
 368:../main.c     **** 			}
 369:../main.c     **** 			else if(Steering_direction_cal < -10){
 2626              	 .loc 6 369 0
 2627 0d1e F868     	 ldr r0,[r7,#12]
 2628 0d20 4749     	 ldr r1,.L121+100
 2629 0d22 FFF7FEFF 	 bl __aeabi_fcmplt
 2630 0d26 031E     	 sub r3,r0,#0
 2631 0d28 0ED0     	 beq .L114
 370:../main.c     **** 				speed_fl = -ROTATION_SPEED;
 2632              	 .loc 6 370 0
 2633 0d2a 3B4B     	 ldr r3,.L121+60
 2634 0d2c 434A     	 ldr r2,.L121+96
 2635 0d2e 1A60     	 str r2,[r3]
 371:../main.c     **** 				speed_fr = ROTATION_SPEED;
 2636              	 .loc 6 371 0
 2637 0d30 3A4B     	 ldr r3,.L121+64
 2638 0d32 FA22     	 mov r2,#250
 2639 0d34 9205     	 lsl r2,r2,#22
 2640 0d36 1A60     	 str r2,[r3]
 372:../main.c     **** 				speed_rl = -ROTATION_SPEED;
 2641              	 .loc 6 372 0
 2642 0d38 394B     	 ldr r3,.L121+68
 2643 0d3a 404A     	 ldr r2,.L121+96
 2644 0d3c 1A60     	 str r2,[r3]
 373:../main.c     **** 				speed_rr = ROTATION_SPEED;
 2645              	 .loc 6 373 0
 2646 0d3e 394B     	 ldr r3,.L121+72
 2647 0d40 FA22     	 mov r2,#250
 2648 0d42 9205     	 lsl r2,r2,#22
 2649 0d44 1A60     	 str r2,[r3]
 2650 0d46 0CE0     	 b .L86
 2651              	.L114:
 374:../main.c     **** 			}
 375:../main.c     **** 			else{
 376:../main.c     **** 				speed_fl = 0;
 2652              	 .loc 6 376 0
 2653 0d48 334B     	 ldr r3,.L121+60
 2654 0d4a 0022     	 mov r2,#0
 2655 0d4c 1A60     	 str r2,[r3]
 377:../main.c     **** 				speed_fr = 0;
 2656              	 .loc 6 377 0
 2657 0d4e 334B     	 ldr r3,.L121+64
 2658 0d50 0022     	 mov r2,#0
 2659 0d52 1A60     	 str r2,[r3]
 378:../main.c     **** 				speed_rl = 0;
 2660              	 .loc 6 378 0
 2661 0d54 324B     	 ldr r3,.L121+68
 2662 0d56 0022     	 mov r2,#0
 2663 0d58 1A60     	 str r2,[r3]
 379:../main.c     **** 				speed_rr = 0;
 2664              	 .loc 6 379 0
 2665 0d5a 324B     	 ldr r3,.L121+72
 2666 0d5c 0022     	 mov r2,#0
 2667 0d5e 1A60     	 str r2,[r3]
 380:../main.c     **** 			}
 381:../main.c     **** 			break;
 2668              	 .loc 6 381 0
 2669 0d60 18E0     	 b .L57
 2670              	.L86:
 2671 0d62 17E0     	 b .L57
 2672              	.L39:
 382:../main.c     **** 
 383:../main.c     **** 		default:
 384:../main.c     **** 			angle_fl = 0;
 2673              	 .loc 6 384 0
 2674 0d64 274B     	 ldr r3,.L121+40
 2675 0d66 0022     	 mov r2,#0
 2676 0d68 1A60     	 str r2,[r3]
 385:../main.c     **** 			angle_fr = 0;
 2677              	 .loc 6 385 0
 2678 0d6a 274B     	 ldr r3,.L121+44
 2679 0d6c 0022     	 mov r2,#0
 2680 0d6e 1A60     	 str r2,[r3]
 386:../main.c     **** 			angle_rl = 0;
 2681              	 .loc 6 386 0
 2682 0d70 264B     	 ldr r3,.L121+48
 2683 0d72 0022     	 mov r2,#0
 2684 0d74 1A60     	 str r2,[r3]
 387:../main.c     **** 			angle_rr = 0;
 2685              	 .loc 6 387 0
 2686 0d76 264B     	 ldr r3,.L121+52
 2687 0d78 0022     	 mov r2,#0
 2688 0d7a 1A60     	 str r2,[r3]
 388:../main.c     **** 
 389:../main.c     **** 			speed_fl = 0;
 2689              	 .loc 6 389 0
 2690 0d7c 264B     	 ldr r3,.L121+60
 2691 0d7e 0022     	 mov r2,#0
 2692 0d80 1A60     	 str r2,[r3]
 390:../main.c     **** 			speed_fr = 0;
 2693              	 .loc 6 390 0
 2694 0d82 264B     	 ldr r3,.L121+64
 2695 0d84 0022     	 mov r2,#0
 2696 0d86 1A60     	 str r2,[r3]
 391:../main.c     **** 			speed_rl = 0;
 2697              	 .loc 6 391 0
 2698 0d88 254B     	 ldr r3,.L121+68
 2699 0d8a 0022     	 mov r2,#0
 2700 0d8c 1A60     	 str r2,[r3]
 392:../main.c     **** 			speed_rr = 0;
 2701              	 .loc 6 392 0
 2702 0d8e 254B     	 ldr r3,.L121+72
 2703 0d90 0022     	 mov r2,#0
 2704 0d92 1A60     	 str r2,[r3]
 2705              	.L57:
 393:../main.c     **** 
 394:../main.c     **** 	}
 395:../main.c     ****   // set gobal vars
 396:../main.c     ****   Steering_Angles[0] = angle_fl;
 2706              	 .loc 6 396 0
 2707 0d94 1B4B     	 ldr r3,.L121+40
 2708 0d96 1A68     	 ldr r2,[r3]
 2709 0d98 2A4B     	 ldr r3,.L121+104
 2710 0d9a 1A60     	 str r2,[r3]
 397:../main.c     ****   Steering_Angles[1] = angle_fr;
 2711              	 .loc 6 397 0
 2712 0d9c 1A4B     	 ldr r3,.L121+44
 2713 0d9e 1A68     	 ldr r2,[r3]
 2714 0da0 284B     	 ldr r3,.L121+104
 2715 0da2 5A60     	 str r2,[r3,#4]
 398:../main.c     ****   Steering_Angles[2] = angle_rl;
 2716              	 .loc 6 398 0
 2717 0da4 194B     	 ldr r3,.L121+48
 2718 0da6 1A68     	 ldr r2,[r3]
 2719 0da8 264B     	 ldr r3,.L121+104
 2720 0daa 9A60     	 str r2,[r3,#8]
 399:../main.c     ****   Steering_Angles[3] = angle_rr;
 2721              	 .loc 6 399 0
 2722 0dac 184B     	 ldr r3,.L121+52
 2723 0dae 1A68     	 ldr r2,[r3]
 2724 0db0 244B     	 ldr r3,.L121+104
 2725 0db2 DA60     	 str r2,[r3,#12]
 400:../main.c     **** 
 401:../main.c     ****   Speeds[0] = speed_fl;
 2726              	 .loc 6 401 0
 2727 0db4 184B     	 ldr r3,.L121+60
 2728 0db6 1A68     	 ldr r2,[r3]
 2729 0db8 234B     	 ldr r3,.L121+108
 2730 0dba 1A60     	 str r2,[r3]
 402:../main.c     ****   Speeds[1] = speed_fr;
 2731              	 .loc 6 402 0
 2732 0dbc 174B     	 ldr r3,.L121+64
 2733 0dbe 1A68     	 ldr r2,[r3]
 2734 0dc0 214B     	 ldr r3,.L121+108
 2735 0dc2 5A60     	 str r2,[r3,#4]
 403:../main.c     ****   Speeds[2] = speed_rl;
 2736              	 .loc 6 403 0
 2737 0dc4 164B     	 ldr r3,.L121+68
 2738 0dc6 1A68     	 ldr r2,[r3]
 2739 0dc8 1F4B     	 ldr r3,.L121+108
 2740 0dca 9A60     	 str r2,[r3,#8]
 404:../main.c     ****   Speeds[3] = speed_rr;
 2741              	 .loc 6 404 0
 2742 0dcc 154B     	 ldr r3,.L121+72
 2743 0dce 1A68     	 ldr r2,[r3]
 2744 0dd0 1D4B     	 ldr r3,.L121+108
 2745 0dd2 DA60     	 str r2,[r3,#12]
 405:../main.c     **** 
 406:../main.c     **** }
 2746              	 .loc 6 406 0
 2747 0dd4 BD46     	 mov sp,r7
 2748 0dd6 05B0     	 add sp,sp,#20
 2749              	 
 2750 0dd8 F0BD     	 pop {r4,r5,r6,r7,pc}
 2751              	.L122:
 2752 0dda C046     	 .align 2
 2753              	.L121:
 2754 0ddc 00000000 	 .word R_Turn
 2755 0de0 9A999999 	 .word -1717986918
 2756 0de4 9999A9BF 	 .word -1079404135
 2757 0de8 0000A0C1 	 .word -1046478848
 2758 0dec 77BE9F1A 	 .word 446676599
 2759 0df0 2FDDC43F 	 .word 1069866287
 2760 0df4 79E92631 	 .word 824633721
 2761 0df8 08ACDC3F 	 .word 1071426568
 2762 0dfc D9CEF753 	 .word 1408749273
 2763 0e00 E3A54C40 	 .word 1078765027
 2764 0e04 00000000 	 .word angle_fl
 2765 0e08 00000000 	 .word angle_fr
 2766 0e0c 00000000 	 .word angle_rl
 2767 0e10 00000000 	 .word angle_rr
 2768 0e14 00000000 	 .word Speed_ratio
 2769 0e18 00000000 	 .word speed_fl
 2770 0e1c 00000000 	 .word speed_fr
 2771 0e20 00000000 	 .word speed_rl
 2772 0e24 00000000 	 .word speed_rr
 2773 0e28 00003E43 	 .word 1128136704
 2774 0e2c 00003EC3 	 .word -1019346944
 2775 0e30 0AD76B42 	 .word 1114363658
 2776 0e34 0AD743C2 	 .word -1035741430
 2777 0e38 00002041 	 .word 1092616192
 2778 0e3c 000080BE 	 .word -1098907648
 2779 0e40 000020C1 	 .word -1054867456
 2780 0e44 00000000 	 .word Steering_Angles
 2781 0e48 00000000 	 .word Speeds
 2782              	 .cfi_endproc
 2783              	.LFE225:
 2785              	 .section .text.IRQ4_Handler,"ax",%progbits
 2786              	 .align 2
 2787              	 .global IRQ4_Handler
 2788              	 .code 16
 2789              	 .thumb_func
 2791              	IRQ4_Handler:
 2792              	.LFB226:
 407:../main.c     **** 
 408:../main.c     **** 
 409:../main.c     **** void CAN_RX_ULTRASONIC_ISR(void) { // recide data
 2793              	 .loc 6 409 0
 2794              	 .cfi_startproc
 2795 0000 90B5     	 push {r4,r7,lr}
 2796              	.LCFI36:
 2797              	 .cfi_def_cfa_offset 12
 2798              	 .cfi_offset 4,-12
 2799              	 .cfi_offset 7,-8
 2800              	 .cfi_offset 14,-4
 2801 0002 87B0     	 sub sp,sp,#28
 2802              	.LCFI37:
 2803              	 .cfi_def_cfa_offset 40
 2804 0004 02AF     	 add r7,sp,#8
 2805              	.LCFI38:
 2806              	 .cfi_def_cfa 7,32
 410:../main.c     **** 	XMC_CAN_MO_t* lmsgobjct_ptr_1 = CAN_NODE_0.lmobj_ptr[6]->mo_ptr;
 2807              	 .loc 6 410 0
 2808 0006 374B     	 ldr r3,.L126
 2809 0008 5B6A     	 ldr r3,[r3,#36]
 2810 000a 1B68     	 ldr r3,[r3]
 2811 000c BB60     	 str r3,[r7,#8]
 411:../main.c     **** 	CAN_NODE_MO_Receive((void*) CAN_NODE_0.lmobj_ptr[6]);
 2812              	 .loc 6 411 0
 2813 000e 354B     	 ldr r3,.L126
 2814 0010 5B6A     	 ldr r3,[r3,#36]
 2815 0012 181C     	 mov r0,r3
 2816 0014 FFF7FEFF 	 bl CAN_NODE_MO_Receive
 412:../main.c     **** 
 413:../main.c     **** 	uint8_t data_RX[8];
 414:../main.c     **** 	uint8_t i;
 415:../main.c     **** 	for(i = 0 ; i < 8 ; i ++){
 2817              	 .loc 6 415 0
 2818 0018 0F23     	 mov r3,#15
 2819 001a FB18     	 add r3,r7,r3
 2820 001c 0022     	 mov r2,#0
 2821 001e 1A70     	 strb r2,[r3]
 2822 0020 11E0     	 b .L124
 2823              	.L125:
 416:../main.c     **** 		 data_RX[i] = lmsgobjct_ptr_1->can_data_byte[i];
 2824              	 .loc 6 416 0 discriminator 3
 2825 0022 0F23     	 mov r3,#15
 2826 0024 FB18     	 add r3,r7,r3
 2827 0026 1B78     	 ldrb r3,[r3]
 2828 0028 0F22     	 mov r2,#15
 2829 002a BA18     	 add r2,r7,r2
 2830 002c 1278     	 ldrb r2,[r2]
 2831 002e B968     	 ldr r1,[r7,#8]
 2832 0030 8A18     	 add r2,r1,r2
 2833 0032 117C     	 ldrb r1,[r2,#16]
 2834 0034 3A1C     	 mov r2,r7
 2835 0036 D154     	 strb r1,[r2,r3]
 415:../main.c     **** 		 data_RX[i] = lmsgobjct_ptr_1->can_data_byte[i];
 2836              	 .loc 6 415 0 discriminator 3
 2837 0038 0F23     	 mov r3,#15
 2838 003a FB18     	 add r3,r7,r3
 2839 003c 1A78     	 ldrb r2,[r3]
 2840 003e 0F23     	 mov r3,#15
 2841 0040 FB18     	 add r3,r7,r3
 2842 0042 0132     	 add r2,r2,#1
 2843 0044 1A70     	 strb r2,[r3]
 2844              	.L124:
 415:../main.c     **** 		 data_RX[i] = lmsgobjct_ptr_1->can_data_byte[i];
 2845              	 .loc 6 415 0 is_stmt 0 discriminator 1
 2846 0046 0F23     	 mov r3,#15
 2847 0048 FB18     	 add r3,r7,r3
 2848 004a 1B78     	 ldrb r3,[r3]
 2849 004c 072B     	 cmp r3,#7
 2850 004e E8D9     	 bls .L125
 417:../main.c     **** 	}
 418:../main.c     **** 
 419:../main.c     **** 	CAN_state_Ultrasonic = (data_RX[0 * 2 + 1] << 8) | data_RX[0 * 2];
 2851              	 .loc 6 419 0 is_stmt 1
 2852 0050 3B1C     	 mov r3,r7
 2853 0052 5B78     	 ldrb r3,[r3,#1]
 2854 0054 1B02     	 lsl r3,r3,#8
 2855 0056 DAB2     	 uxtb r2,r3
 2856 0058 3B1C     	 mov r3,r7
 2857 005a 1B78     	 ldrb r3,[r3]
 2858 005c DBB2     	 uxtb r3,r3
 2859 005e 1343     	 orr r3,r2
 2860 0060 DBB2     	 uxtb r3,r3
 2861 0062 DAB2     	 uxtb r2,r3
 2862 0064 204B     	 ldr r3,.L126+4
 2863 0066 1A70     	 strb r2,[r3]
 420:../main.c     **** 	Ultrasonic_cm_C = (data_RX[1 * 2 + 1] << 8) | data_RX[1 * 2];
 2864              	 .loc 6 420 0
 2865 0068 3B1C     	 mov r3,r7
 2866 006a DB78     	 ldrb r3,[r3,#3]
 2867 006c 1B02     	 lsl r3,r3,#8
 2868 006e 9AB2     	 uxth r2,r3
 2869 0070 3B1C     	 mov r3,r7
 2870 0072 9B78     	 ldrb r3,[r3,#2]
 2871 0074 9BB2     	 uxth r3,r3
 2872 0076 1343     	 orr r3,r2
 2873 0078 9BB2     	 uxth r3,r3
 2874 007a 9AB2     	 uxth r2,r3
 2875 007c 1B4B     	 ldr r3,.L126+8
 2876 007e 1A80     	 strh r2,[r3]
 421:../main.c     **** 	Ultrasonic_cm_L = (data_RX[2 * 2 + 1] << 8) | data_RX[2 * 2];
 2877              	 .loc 6 421 0
 2878 0080 3B1C     	 mov r3,r7
 2879 0082 5B79     	 ldrb r3,[r3,#5]
 2880 0084 1B02     	 lsl r3,r3,#8
 2881 0086 9AB2     	 uxth r2,r3
 2882 0088 3B1C     	 mov r3,r7
 2883 008a 1B79     	 ldrb r3,[r3,#4]
 2884 008c 9BB2     	 uxth r3,r3
 2885 008e 1343     	 orr r3,r2
 2886 0090 9BB2     	 uxth r3,r3
 2887 0092 9AB2     	 uxth r2,r3
 2888 0094 164B     	 ldr r3,.L126+12
 2889 0096 1A80     	 strh r2,[r3]
 422:../main.c     **** 	Ultrasonic_cm_R = (data_RX[3 * 2 + 1] << 8) | data_RX[3 * 2];
 2890              	 .loc 6 422 0
 2891 0098 3B1C     	 mov r3,r7
 2892 009a DB79     	 ldrb r3,[r3,#7]
 2893 009c 1B02     	 lsl r3,r3,#8
 2894 009e 9AB2     	 uxth r2,r3
 2895 00a0 3B1C     	 mov r3,r7
 2896 00a2 9B79     	 ldrb r3,[r3,#6]
 2897 00a4 9BB2     	 uxth r3,r3
 2898 00a6 1343     	 orr r3,r2
 2899 00a8 9BB2     	 uxth r3,r3
 2900 00aa 9AB2     	 uxth r2,r3
 2901 00ac 114B     	 ldr r3,.L126+16
 2902 00ae 1A80     	 strh r2,[r3]
 423:../main.c     **** 
 424:../main.c     **** 	Ultra_sonic_filter(Ultrasonic_cm_C,  Ultrasonic_cm_L,  Ultrasonic_cm_R,  Steering_Angles,  ALPHA_U
 2903              	 .loc 6 424 0
 2904 00b0 0E4B     	 ldr r3,.L126+8
 2905 00b2 1B88     	 ldrh r3,[r3]
 2906 00b4 9BB2     	 uxth r3,r3
 2907 00b6 98B2     	 uxth r0,r3
 2908 00b8 0D4B     	 ldr r3,.L126+12
 2909 00ba 1B88     	 ldrh r3,[r3]
 2910 00bc 9BB2     	 uxth r3,r3
 2911 00be 99B2     	 uxth r1,r3
 2912 00c0 0C4B     	 ldr r3,.L126+16
 2913 00c2 1B88     	 ldrh r3,[r3]
 2914 00c4 9BB2     	 uxth r3,r3
 2915 00c6 9AB2     	 uxth r2,r3
 2916 00c8 0B4B     	 ldr r3,.L126+20
 2917 00ca 1B68     	 ldr r3,[r3]
 2918 00cc 00B2     	 sxth r0,r0
 2919 00ce 09B2     	 sxth r1,r1
 2920 00d0 12B2     	 sxth r2,r2
 2921 00d2 0A4C     	 ldr r4,.L126+24
 2922 00d4 0093     	 str r3,[sp]
 2923 00d6 231C     	 mov r3,r4
 2924 00d8 FFF7FEFF 	 bl Ultra_sonic_filter
 425:../main.c     **** }
 2925              	 .loc 6 425 0
 2926 00dc BD46     	 mov sp,r7
 2927 00de 05B0     	 add sp,sp,#20
 2928              	 
 2929 00e0 90BD     	 pop {r4,r7,pc}
 2930              	.L127:
 2931 00e2 C046     	 .align 2
 2932              	.L126:
 2933 00e4 00000000 	 .word CAN_NODE_0
 2934 00e8 00000000 	 .word CAN_state_Ultrasonic
 2935 00ec 00000000 	 .word Ultrasonic_cm_C
 2936 00f0 00000000 	 .word Ultrasonic_cm_L
 2937 00f4 00000000 	 .word Ultrasonic_cm_R
 2938 00f8 00000000 	 .word ALPHA_ULTARSONIC
 2939 00fc 00000000 	 .word Steering_Angles
 2940              	 .cfi_endproc
 2941              	.LFE226:
 2943              	 .global __aeabi_i2f
 2944              	 .section .text.Ultra_sonic_filter,"ax",%progbits
 2945              	 .align 2
 2946              	 .global Ultra_sonic_filter
 2947              	 .code 16
 2948              	 .thumb_func
 2950              	Ultra_sonic_filter:
 2951              	.LFB227:
 426:../main.c     **** 
 427:../main.c     **** void Ultra_sonic_filter(int16_t Ultrasonic_cm_C_clc, int16_t Ultrasonic_cm_L_clc, int16_t Ultrasoni
 2952              	 .loc 6 427 0
 2953              	 .cfi_startproc
 2954 0000 90B5     	 push {r4,r7,lr}
 2955              	.LCFI39:
 2956              	 .cfi_def_cfa_offset 12
 2957              	 .cfi_offset 4,-12
 2958              	 .cfi_offset 7,-8
 2959              	 .cfi_offset 14,-4
 2960 0002 85B0     	 sub sp,sp,#20
 2961              	.LCFI40:
 2962              	 .cfi_def_cfa_offset 32
 2963 0004 00AF     	 add r7,sp,#0
 2964              	.LCFI41:
 2965              	 .cfi_def_cfa_register 7
 2966 0006 041C     	 mov r4,r0
 2967 0008 081C     	 mov r0,r1
 2968 000a 111C     	 mov r1,r2
 2969 000c 7B60     	 str r3,[r7,#4]
 2970 000e 0E23     	 mov r3,#14
 2971 0010 FB18     	 add r3,r7,r3
 2972 0012 221C     	 add r2,r4,#0
 2973 0014 1A80     	 strh r2,[r3]
 2974 0016 0C23     	 mov r3,#12
 2975 0018 FB18     	 add r3,r7,r3
 2976 001a 021C     	 add r2,r0,#0
 2977 001c 1A80     	 strh r2,[r3]
 2978 001e 0A23     	 mov r3,#10
 2979 0020 FB18     	 add r3,r7,r3
 2980 0022 0A1C     	 add r2,r1,#0
 2981 0024 1A80     	 strh r2,[r3]
 428:../main.c     **** 	Fil_Ultrasonic_m_C = Exp_moving_average(Ultrasonic_cm_C_clc, Fil_Ultrasonic_m_C, ALPHA_ULTARSONIC)
 2982              	 .loc 6 428 0
 2983 0026 0E23     	 mov r3,#14
 2984 0028 FB18     	 add r3,r7,r3
 2985 002a 0022     	 mov r2,#0
 2986 002c 9B5E     	 ldrsh r3,[r3,r2]
 2987 002e 181C     	 mov r0,r3
 2988 0030 FFF7FEFF 	 bl __aeabi_i2f
 2989 0034 011C     	 add r1,r0,#0
 2990 0036 294B     	 ldr r3,.L131
 2991 0038 1A68     	 ldr r2,[r3]
 2992 003a 3B6A     	 ldr r3,[r7,#32]
 2993 003c 081C     	 add r0,r1,#0
 2994 003e 111C     	 add r1,r2,#0
 2995 0040 1A1C     	 add r2,r3,#0
 2996 0042 FFF7FEFF 	 bl Exp_moving_average
 2997 0046 021C     	 add r2,r0,#0
 2998 0048 244B     	 ldr r3,.L131
 2999 004a 1A60     	 str r2,[r3]
 429:../main.c     **** 
 430:../main.c     **** 	obstructed_L = Ultrasoinc_Obstructet_Test(Steering_Angles_clc[0]);
 3000              	 .loc 6 430 0
 3001 004c 7B68     	 ldr r3,[r7,#4]
 3002 004e 1B68     	 ldr r3,[r3]
 3003 0050 181C     	 add r0,r3,#0
 3004 0052 FFF7FEFF 	 bl Ultrasoinc_Obstructet_Test
 3005 0056 031C     	 mov r3,r0
 3006 0058 1A1C     	 mov r2,r3
 3007 005a 214B     	 ldr r3,.L131+4
 3008 005c 1A70     	 strb r2,[r3]
 431:../main.c     **** 	if(obstructed_L == 0) Fil_Ultrasonic_m_L = Exp_moving_average(Ultrasonic_cm_L_clc, Fil_Ultrasonic_
 3009              	 .loc 6 431 0
 3010 005e 204B     	 ldr r3,.L131+4
 3011 0060 1B78     	 ldrb r3,[r3]
 3012 0062 002B     	 cmp r3,#0
 3013 0064 12D1     	 bne .L129
 3014              	 .loc 6 431 0 is_stmt 0 discriminator 1
 3015 0066 0C23     	 mov r3,#12
 3016 0068 FB18     	 add r3,r7,r3
 3017 006a 0022     	 mov r2,#0
 3018 006c 9B5E     	 ldrsh r3,[r3,r2]
 3019 006e 181C     	 mov r0,r3
 3020 0070 FFF7FEFF 	 bl __aeabi_i2f
 3021 0074 011C     	 add r1,r0,#0
 3022 0076 1B4B     	 ldr r3,.L131+8
 3023 0078 1A68     	 ldr r2,[r3]
 3024 007a 3B6A     	 ldr r3,[r7,#32]
 3025 007c 081C     	 add r0,r1,#0
 3026 007e 111C     	 add r1,r2,#0
 3027 0080 1A1C     	 add r2,r3,#0
 3028 0082 FFF7FEFF 	 bl Exp_moving_average
 3029 0086 021C     	 add r2,r0,#0
 3030 0088 164B     	 ldr r3,.L131+8
 3031 008a 1A60     	 str r2,[r3]
 3032              	.L129:
 432:../main.c     **** 
 433:../main.c     **** 	obstructed_R = Ultrasoinc_Obstructet_Test( - Steering_Angles_clc[1]); // neagtiv becasue right whe
 3033              	 .loc 6 433 0 is_stmt 1
 3034 008c 7B68     	 ldr r3,[r7,#4]
 3035 008e 0433     	 add r3,r3,#4
 3036 0090 1B68     	 ldr r3,[r3]
 3037 0092 8022     	 mov r2,#128
 3038 0094 1206     	 lsl r2,r2,#24
 3039 0096 5340     	 eor r3,r2
 3040 0098 181C     	 add r0,r3,#0
 3041 009a FFF7FEFF 	 bl Ultrasoinc_Obstructet_Test
 3042 009e 031C     	 mov r3,r0
 3043 00a0 1A1C     	 mov r2,r3
 3044 00a2 114B     	 ldr r3,.L131+12
 3045 00a4 1A70     	 strb r2,[r3]
 434:../main.c     **** 	if(obstructed_R == 0) Fil_Ultrasonic_m_R = Exp_moving_average(Ultrasonic_cm_R_clc, Fil_Ultrasonic_
 3046              	 .loc 6 434 0
 3047 00a6 104B     	 ldr r3,.L131+12
 3048 00a8 1B78     	 ldrb r3,[r3]
 3049 00aa 002B     	 cmp r3,#0
 3050 00ac 12D1     	 bne .L128
 3051              	 .loc 6 434 0 is_stmt 0 discriminator 1
 3052 00ae 0A23     	 mov r3,#10
 3053 00b0 FB18     	 add r3,r7,r3
 3054 00b2 0022     	 mov r2,#0
 3055 00b4 9B5E     	 ldrsh r3,[r3,r2]
 3056 00b6 181C     	 mov r0,r3
 3057 00b8 FFF7FEFF 	 bl __aeabi_i2f
 3058 00bc 011C     	 add r1,r0,#0
 3059 00be 0B4B     	 ldr r3,.L131+16
 3060 00c0 1A68     	 ldr r2,[r3]
 3061 00c2 3B6A     	 ldr r3,[r7,#32]
 3062 00c4 081C     	 add r0,r1,#0
 3063 00c6 111C     	 add r1,r2,#0
 3064 00c8 1A1C     	 add r2,r3,#0
 3065 00ca FFF7FEFF 	 bl Exp_moving_average
 3066 00ce 021C     	 add r2,r0,#0
 3067 00d0 064B     	 ldr r3,.L131+16
 3068 00d2 1A60     	 str r2,[r3]
 3069              	.L128:
 435:../main.c     **** 
 436:../main.c     **** }
 3070              	 .loc 6 436 0 is_stmt 1
 3071 00d4 BD46     	 mov sp,r7
 3072 00d6 05B0     	 add sp,sp,#20
 3073              	 
 3074 00d8 90BD     	 pop {r4,r7,pc}
 3075              	.L132:
 3076 00da C046     	 .align 2
 3077              	.L131:
 3078 00dc 00000000 	 .word Fil_Ultrasonic_m_C
 3079 00e0 00000000 	 .word obstructed_L
 3080 00e4 00000000 	 .word Fil_Ultrasonic_m_L
 3081 00e8 00000000 	 .word obstructed_R
 3082 00ec 00000000 	 .word Fil_Ultrasonic_m_R
 3083              	 .cfi_endproc
 3084              	.LFE227:
 3086              	 .global __aeabi_fsub
 3087              	 .global __aeabi_fcmple
 3088              	 .section .text.Ultrasoinc_Obstructet_Test,"ax",%progbits
 3089              	 .align 2
 3090              	 .global Ultrasoinc_Obstructet_Test
 3091              	 .code 16
 3092              	 .thumb_func
 3094              	Ultrasoinc_Obstructet_Test:
 3095              	.LFB228:
 437:../main.c     **** 
 438:../main.c     **** uint8_t Ultrasoinc_Obstructet_Test(float Angle){
 3096              	 .loc 6 438 0
 3097              	 .cfi_startproc
 3098 0000 90B5     	 push {r4,r7,lr}
 3099              	.LCFI42:
 3100              	 .cfi_def_cfa_offset 12
 3101              	 .cfi_offset 4,-12
 3102              	 .cfi_offset 7,-8
 3103              	 .cfi_offset 14,-4
 3104 0002 85B0     	 sub sp,sp,#20
 3105              	.LCFI43:
 3106              	 .cfi_def_cfa_offset 32
 3107 0004 00AF     	 add r7,sp,#0
 3108              	.LCFI44:
 3109              	 .cfi_def_cfa_register 7
 3110 0006 7860     	 str r0,[r7,#4]
 439:../main.c     **** 	uint8_t i;
 440:../main.c     **** 	for(i = 0; i < 3; i++){ // if rotate around multipel times
 3111              	 .loc 6 440 0
 3112 0008 0F23     	 mov r3,#15
 3113 000a FB18     	 add r3,r7,r3
 3114 000c 0022     	 mov r2,#0
 3115 000e 1A70     	 strb r2,[r3]
 3116 0010 6DE0     	 b .L134
 3117              	.L142:
 441:../main.c     **** 		if(Angle > 0){
 3118              	 .loc 6 441 0
 3119 0012 7868     	 ldr r0,[r7,#4]
 3120 0014 0021     	 mov r1,#0
 3121 0016 FFF7FEFF 	 bl __aeabi_fcmpgt
 3122 001a 031E     	 sub r3,r0,#0
 3123 001c 2DD0     	 beq .L135
 442:../main.c     **** 			if((Angle - (POS_OBSTRUCTED_ANGLE_MIN + (i * 360))) * (Angle - (POS_OBSTRUCTED_ANGLE_MAX + (i * 
 3124              	 .loc 6 442 0
 3125 001e 0F23     	 mov r3,#15
 3126 0020 FB18     	 add r3,r7,r3
 3127 0022 1B78     	 ldrb r3,[r3]
 3128 0024 B422     	 mov r2,#180
 3129 0026 5200     	 lsl r2,r2,#1
 3130 0028 5343     	 mul r3,r2
 3131 002a 3233     	 add r3,r3,#50
 3132 002c 181C     	 mov r0,r3
 3133 002e FFF7FEFF 	 bl __aeabi_i2f
 3134 0032 031C     	 add r3,r0,#0
 3135 0034 7868     	 ldr r0,[r7,#4]
 3136 0036 191C     	 add r1,r3,#0
 3137 0038 FFF7FEFF 	 bl __aeabi_fsub
 3138 003c 031C     	 add r3,r0,#0
 3139 003e 1C1C     	 add r4,r3,#0
 3140 0040 0F23     	 mov r3,#15
 3141 0042 FB18     	 add r3,r7,r3
 3142 0044 1B78     	 ldrb r3,[r3]
 3143 0046 B422     	 mov r2,#180
 3144 0048 5200     	 lsl r2,r2,#1
 3145 004a 5343     	 mul r3,r2
 3146 004c D233     	 add r3,r3,#210
 3147 004e 181C     	 mov r0,r3
 3148 0050 FFF7FEFF 	 bl __aeabi_i2f
 3149 0054 031C     	 add r3,r0,#0
 3150 0056 7868     	 ldr r0,[r7,#4]
 3151 0058 191C     	 add r1,r3,#0
 3152 005a FFF7FEFF 	 bl __aeabi_fsub
 3153 005e 031C     	 add r3,r0,#0
 3154 0060 201C     	 add r0,r4,#0
 3155 0062 191C     	 add r1,r3,#0
 3156 0064 FFF7FEFF 	 bl __aeabi_fmul
 3157 0068 031C     	 add r3,r0,#0
 3158 006a 181C     	 add r0,r3,#0
 3159 006c 0021     	 mov r1,#0
 3160 006e FFF7FEFF 	 bl __aeabi_fcmple
 3161 0072 031E     	 sub r3,r0,#0
 3162 0074 01D0     	 beq .L135
 443:../main.c     **** 				return 1;
 3163              	 .loc 6 443 0
 3164 0076 0123     	 mov r3,#1
 3165 0078 3FE0     	 b .L138
 3166              	.L135:
 444:../main.c     **** 			}
 445:../main.c     **** 		}
 446:../main.c     **** 
 447:../main.c     **** 		if(Angle < 0){
 3167              	 .loc 6 447 0
 3168 007a 7868     	 ldr r0,[r7,#4]
 3169 007c 0021     	 mov r1,#0
 3170 007e FFF7FEFF 	 bl __aeabi_fcmplt
 3171 0082 031E     	 sub r3,r0,#0
 3172 0084 2CD0     	 beq .L139
 448:../main.c     **** 			if((Angle - (NEG_OBSTRUCTED_ANGLE_MIN - (i * 360))) * (Angle - (NEG_OBSTRUCTED_ANGLE_MAX - (i * 
 3173              	 .loc 6 448 0
 3174 0086 0F23     	 mov r3,#15
 3175 0088 FB18     	 add r3,r7,r3
 3176 008a 1B78     	 ldrb r3,[r3]
 3177 008c 1D4A     	 ldr r2,.L147
 3178 008e 5343     	 mul r3,r2
 3179 0090 963B     	 sub r3,r3,#150
 3180 0092 181C     	 mov r0,r3
 3181 0094 FFF7FEFF 	 bl __aeabi_i2f
 3182 0098 031C     	 add r3,r0,#0
 3183 009a 7868     	 ldr r0,[r7,#4]
 3184 009c 191C     	 add r1,r3,#0
 3185 009e FFF7FEFF 	 bl __aeabi_fsub
 3186 00a2 031C     	 add r3,r0,#0
 3187 00a4 1C1C     	 add r4,r3,#0
 3188 00a6 0F23     	 mov r3,#15
 3189 00a8 FB18     	 add r3,r7,r3
 3190 00aa 1B78     	 ldrb r3,[r3]
 3191 00ac 154A     	 ldr r2,.L147
 3192 00ae 5343     	 mul r3,r2
 3193 00b0 373B     	 sub r3,r3,#55
 3194 00b2 FF3B     	 sub r3,r3,#255
 3195 00b4 181C     	 mov r0,r3
 3196 00b6 FFF7FEFF 	 bl __aeabi_i2f
 3197 00ba 031C     	 add r3,r0,#0
 3198 00bc 7868     	 ldr r0,[r7,#4]
 3199 00be 191C     	 add r1,r3,#0
 3200 00c0 FFF7FEFF 	 bl __aeabi_fsub
 3201 00c4 031C     	 add r3,r0,#0
 3202 00c6 201C     	 add r0,r4,#0
 3203 00c8 191C     	 add r1,r3,#0
 3204 00ca FFF7FEFF 	 bl __aeabi_fmul
 3205 00ce 031C     	 add r3,r0,#0
 3206 00d0 181C     	 add r0,r3,#0
 3207 00d2 0021     	 mov r1,#0
 3208 00d4 FFF7FEFF 	 bl __aeabi_fcmple
 3209 00d8 031E     	 sub r3,r0,#0
 3210 00da 01D0     	 beq .L139
 449:../main.c     **** 						return 1;
 3211              	 .loc 6 449 0
 3212 00dc 0123     	 mov r3,#1
 3213 00de 0CE0     	 b .L138
 3214              	.L139:
 440:../main.c     **** 		if(Angle > 0){
 3215              	 .loc 6 440 0 discriminator 2
 3216 00e0 0F23     	 mov r3,#15
 3217 00e2 FB18     	 add r3,r7,r3
 3218 00e4 1A78     	 ldrb r2,[r3]
 3219 00e6 0F23     	 mov r3,#15
 3220 00e8 FB18     	 add r3,r7,r3
 3221 00ea 0132     	 add r2,r2,#1
 3222 00ec 1A70     	 strb r2,[r3]
 3223              	.L134:
 440:../main.c     **** 		if(Angle > 0){
 3224              	 .loc 6 440 0 is_stmt 0 discriminator 1
 3225 00ee 0F23     	 mov r3,#15
 3226 00f0 FB18     	 add r3,r7,r3
 3227 00f2 1B78     	 ldrb r3,[r3]
 3228 00f4 022B     	 cmp r3,#2
 3229 00f6 8CD9     	 bls .L142
 450:../main.c     **** 			}
 451:../main.c     **** 		}
 452:../main.c     **** 	}
 453:../main.c     **** 
 454:../main.c     **** 	return 0;
 3230              	 .loc 6 454 0 is_stmt 1
 3231 00f8 0023     	 mov r3,#0
 3232              	.L138:
 455:../main.c     **** }
 3233              	 .loc 6 455 0
 3234 00fa 181C     	 mov r0,r3
 3235 00fc BD46     	 mov sp,r7
 3236 00fe 05B0     	 add sp,sp,#20
 3237              	 
 3238 0100 90BD     	 pop {r4,r7,pc}
 3239              	.L148:
 3240 0102 C046     	 .align 2
 3241              	.L147:
 3242 0104 98FEFFFF 	 .word -360
 3243              	 .cfi_endproc
 3244              	.LFE228:
 3246              	 .global __aeabi_fadd
 3247              	 .section .text.Exp_moving_average,"ax",%progbits
 3248              	 .align 2
 3249              	 .global Exp_moving_average
 3250              	 .code 16
 3251              	 .thumb_func
 3253              	Exp_moving_average:
 3254              	.LFB229:
 456:../main.c     **** 
 457:../main.c     **** 
 458:../main.c     **** 
 459:../main.c     **** float Exp_moving_average(float new_value, float value, float ALPHA){
 3255              	 .loc 6 459 0
 3256              	 .cfi_startproc
 3257 0000 90B5     	 push {r4,r7,lr}
 3258              	.LCFI45:
 3259              	 .cfi_def_cfa_offset 12
 3260              	 .cfi_offset 4,-12
 3261              	 .cfi_offset 7,-8
 3262              	 .cfi_offset 14,-4
 3263 0002 85B0     	 sub sp,sp,#20
 3264              	.LCFI46:
 3265              	 .cfi_def_cfa_offset 32
 3266 0004 00AF     	 add r7,sp,#0
 3267              	.LCFI47:
 3268              	 .cfi_def_cfa_register 7
 3269 0006 F860     	 str r0,[r7,#12]
 3270 0008 B960     	 str r1,[r7,#8]
 3271 000a 7A60     	 str r2,[r7,#4]
 460:../main.c     **** 	return new_value * ALPHA + (1 - ALPHA) * value;
 3272              	 .loc 6 460 0
 3273 000c F868     	 ldr r0,[r7,#12]
 3274 000e 7968     	 ldr r1,[r7,#4]
 3275 0010 FFF7FEFF 	 bl __aeabi_fmul
 3276 0014 031C     	 add r3,r0,#0
 3277 0016 1C1C     	 add r4,r3,#0
 3278 0018 FE20     	 mov r0,#254
 3279 001a 8005     	 lsl r0,r0,#22
 3280 001c 7968     	 ldr r1,[r7,#4]
 3281 001e FFF7FEFF 	 bl __aeabi_fsub
 3282 0022 031C     	 add r3,r0,#0
 3283 0024 181C     	 add r0,r3,#0
 3284 0026 B968     	 ldr r1,[r7,#8]
 3285 0028 FFF7FEFF 	 bl __aeabi_fmul
 3286 002c 031C     	 add r3,r0,#0
 3287 002e 201C     	 add r0,r4,#0
 3288 0030 191C     	 add r1,r3,#0
 3289 0032 FFF7FEFF 	 bl __aeabi_fadd
 3290 0036 031C     	 add r3,r0,#0
 461:../main.c     **** }
 3291              	 .loc 6 461 0
 3292 0038 181C     	 add r0,r3,#0
 3293 003a BD46     	 mov sp,r7
 3294 003c 05B0     	 add sp,sp,#20
 3295              	 
 3296 003e 90BD     	 pop {r4,r7,pc}
 3297              	 .cfi_endproc
 3298              	.LFE229:
 3300              	 .section .text.IRQ3_Handler,"ax",%progbits
 3301              	 .align 2
 3302              	 .global IRQ3_Handler
 3303              	 .code 16
 3304              	 .thumb_func
 3306              	IRQ3_Handler:
 3307              	.LFB230:
 462:../main.c     **** 
 463:../main.c     **** void CAN_RX_INVERTER_ISR(void) {
 3308              	 .loc 6 463 0
 3309              	 .cfi_startproc
 3310 0000 80B5     	 push {r7,lr}
 3311              	.LCFI48:
 3312              	 .cfi_def_cfa_offset 8
 3313              	 .cfi_offset 7,-8
 3314              	 .cfi_offset 14,-4
 3315 0002 00AF     	 add r7,sp,#0
 3316              	.LCFI49:
 3317              	 .cfi_def_cfa_register 7
 464:../main.c     **** 	WATCHDOG_Service();
 3318              	 .loc 6 464 0
 3319 0004 FFF7FEFF 	 bl WATCHDOG_Service
 465:../main.c     **** 	DIGITAL_IO_SetOutputLow(&WATCHDOG_LED_BLUE);
 3320              	 .loc 6 465 0
 3321 0008 094B     	 ldr r3,.L153
 3322 000a 181C     	 mov r0,r3
 3323 000c FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 466:../main.c     **** 
 467:../main.c     **** 	CAN_RX_Inverter_count++;
 3324              	 .loc 6 467 0
 3325 0010 084B     	 ldr r3,.L153+4
 3326 0012 1B78     	 ldrb r3,[r3]
 3327 0014 DBB2     	 uxtb r3,r3
 3328 0016 0133     	 add r3,r3,#1
 3329 0018 DAB2     	 uxtb r2,r3
 3330 001a 064B     	 ldr r3,.L153+4
 3331 001c 1A70     	 strb r2,[r3]
 468:../main.c     **** 	if(CAN_RX_Inverter_count == 4) CAN_RX_Inverter_Read_Data(); // read data after all for have revice
 3332              	 .loc 6 468 0
 3333 001e 054B     	 ldr r3,.L153+4
 3334 0020 1B78     	 ldrb r3,[r3]
 3335 0022 DBB2     	 uxtb r3,r3
 3336 0024 042B     	 cmp r3,#4
 3337 0026 01D1     	 bne .L151
 3338              	 .loc 6 468 0 is_stmt 0 discriminator 1
 3339 0028 FFF7FEFF 	 bl CAN_RX_Inverter_Read_Data
 3340              	.L151:
 469:../main.c     **** }
 3341              	 .loc 6 469 0 is_stmt 1
 3342 002c BD46     	 mov sp,r7
 3343              	 
 3344 002e 80BD     	 pop {r7,pc}
 3345              	.L154:
 3346              	 .align 2
 3347              	.L153:
 3348 0030 00000000 	 .word WATCHDOG_LED_BLUE
 3349 0034 00000000 	 .word CAN_RX_Inverter_count
 3350              	 .cfi_endproc
 3351              	.LFE230:
 3353              	 .section .text.CAN_RX_Inverter_Read_Data,"ax",%progbits
 3354              	 .align 2
 3355              	 .global CAN_RX_Inverter_Read_Data
 3356              	 .code 16
 3357              	 .thumb_func
 3359              	CAN_RX_Inverter_Read_Data:
 3360              	.LFB231:
 470:../main.c     **** 
 471:../main.c     **** void CAN_RX_Inverter_Read_Data(){
 3361              	 .loc 6 471 0
 3362              	 .cfi_startproc
 3363 0000 90B5     	 push {r4,r7,lr}
 3364              	.LCFI50:
 3365              	 .cfi_def_cfa_offset 12
 3366              	 .cfi_offset 4,-12
 3367              	 .cfi_offset 7,-8
 3368              	 .cfi_offset 14,-4
 3369 0002 89B0     	 sub sp,sp,#36
 3370              	.LCFI51:
 3371              	 .cfi_def_cfa_offset 48
 3372 0004 00AF     	 add r7,sp,#0
 3373              	.LCFI52:
 3374              	 .cfi_def_cfa_register 7
 472:../main.c     **** 	uint8_t Motor_on_rover;
 473:../main.c     **** 	for(Motor_on_rover = 0; Motor_on_rover < 4; Motor_on_rover ++){
 3375              	 .loc 6 473 0
 3376 0006 1F23     	 mov r3,#31
 3377 0008 FB18     	 add r3,r7,r3
 3378 000a 0022     	 mov r2,#0
 3379 000c 1A70     	 strb r2,[r3]
 3380 000e 03E1     	 b .L156
 3381              	.L166:
 3382              	.LBB2:
 474:../main.c     **** 		XMC_CAN_MO_t* lmsgobjct_ptr_1 = CAN_NODE_0.lmobj_ptr[Motor_on_rover + 2]->mo_ptr;
 3383              	 .loc 6 474 0
 3384 0010 1F23     	 mov r3,#31
 3385 0012 FB18     	 add r3,r7,r3
 3386 0014 1B78     	 ldrb r3,[r3]
 3387 0016 0233     	 add r3,r3,#2
 3388 0018 944A     	 ldr r2,.L167
 3389 001a 0233     	 add r3,r3,#2
 3390 001c 9B00     	 lsl r3,r3,#2
 3391 001e D318     	 add r3,r2,r3
 3392 0020 5B68     	 ldr r3,[r3,#4]
 3393 0022 1B68     	 ldr r3,[r3]
 3394 0024 BB61     	 str r3,[r7,#24]
 475:../main.c     **** 		CAN_NODE_MO_Receive((void*) CAN_NODE_0.lmobj_ptr[Motor_on_rover + 2]);
 3395              	 .loc 6 475 0
 3396 0026 1F23     	 mov r3,#31
 3397 0028 FB18     	 add r3,r7,r3
 3398 002a 1B78     	 ldrb r3,[r3]
 3399 002c 0233     	 add r3,r3,#2
 3400 002e 8F4A     	 ldr r2,.L167
 3401 0030 0233     	 add r3,r3,#2
 3402 0032 9B00     	 lsl r3,r3,#2
 3403 0034 D318     	 add r3,r2,r3
 3404 0036 5B68     	 ldr r3,[r3,#4]
 3405 0038 181C     	 mov r0,r3
 3406 003a FFF7FEFF 	 bl CAN_NODE_MO_Receive
 476:../main.c     **** 
 477:../main.c     **** 		uint8_t data_RX[8];
 478:../main.c     **** 		uint8_t i;
 479:../main.c     **** 		for(i = 0 ; i < 8 ; i ++){
 3407              	 .loc 6 479 0
 3408 003e 1E23     	 mov r3,#30
 3409 0040 FB18     	 add r3,r7,r3
 3410 0042 0022     	 mov r2,#0
 3411 0044 1A70     	 strb r2,[r3]
 3412 0046 12E0     	 b .L157
 3413              	.L158:
 480:../main.c     **** 			 data_RX[i] = lmsgobjct_ptr_1->can_data_byte[i];
 3414              	 .loc 6 480 0 discriminator 3
 3415 0048 1E23     	 mov r3,#30
 3416 004a FB18     	 add r3,r7,r3
 3417 004c 1B78     	 ldrb r3,[r3]
 3418 004e 1E22     	 mov r2,#30
 3419 0050 BA18     	 add r2,r7,r2
 3420 0052 1278     	 ldrb r2,[r2]
 3421 0054 B969     	 ldr r1,[r7,#24]
 3422 0056 8A18     	 add r2,r1,r2
 3423 0058 117C     	 ldrb r1,[r2,#16]
 3424 005a 0C22     	 mov r2,#12
 3425 005c BA18     	 add r2,r7,r2
 3426 005e D154     	 strb r1,[r2,r3]
 479:../main.c     **** 			 data_RX[i] = lmsgobjct_ptr_1->can_data_byte[i];
 3427              	 .loc 6 479 0 discriminator 3
 3428 0060 1E23     	 mov r3,#30
 3429 0062 FB18     	 add r3,r7,r3
 3430 0064 1A78     	 ldrb r2,[r3]
 3431 0066 1E23     	 mov r3,#30
 3432 0068 FB18     	 add r3,r7,r3
 3433 006a 0132     	 add r2,r2,#1
 3434 006c 1A70     	 strb r2,[r3]
 3435              	.L157:
 479:../main.c     **** 			 data_RX[i] = lmsgobjct_ptr_1->can_data_byte[i];
 3436              	 .loc 6 479 0 is_stmt 0 discriminator 1
 3437 006e 1E23     	 mov r3,#30
 3438 0070 FB18     	 add r3,r7,r3
 3439 0072 1B78     	 ldrb r3,[r3]
 3440 0074 072B     	 cmp r3,#7
 3441 0076 E7D9     	 bls .L158
 481:../main.c     **** 		}
 482:../main.c     **** 
 483:../main.c     **** 		uint8_t Motor_on_rover_RX = (data_RX[0 * 2 + 1] << 8) | data_RX[0 * 2];
 3442              	 .loc 6 483 0 is_stmt 1
 3443 0078 0C23     	 mov r3,#12
 3444 007a FB18     	 add r3,r7,r3
 3445 007c 5B78     	 ldrb r3,[r3,#1]
 3446 007e 1B02     	 lsl r3,r3,#8
 3447 0080 DAB2     	 uxtb r2,r3
 3448 0082 0C23     	 mov r3,#12
 3449 0084 FB18     	 add r3,r7,r3
 3450 0086 1B78     	 ldrb r3,[r3]
 3451 0088 DBB2     	 uxtb r3,r3
 3452 008a 1343     	 orr r3,r2
 3453 008c DAB2     	 uxtb r2,r3
 3454 008e 1723     	 mov r3,#23
 3455 0090 FB18     	 add r3,r7,r3
 3456 0092 1A70     	 strb r2,[r3]
 484:../main.c     **** 		if(Motor_on_rover_RX == Motor_on_rover){
 3457              	 .loc 6 484 0
 3458 0094 1723     	 mov r3,#23
 3459 0096 FA18     	 add r2,r7,r3
 3460 0098 1F23     	 mov r3,#31
 3461 009a FB18     	 add r3,r7,r3
 3462 009c 1278     	 ldrb r2,[r2]
 3463 009e 1B78     	 ldrb r3,[r3]
 3464 00a0 9A42     	 cmp r2,r3
 3465 00a2 00D0     	 beq .LCB2760
 3466 00a4 ADE0     	 b .L159
 3467              	.LCB2760:
 3468              	.LBB3:
 485:../main.c     **** 			DIGITAL_IO_SetOutputLow(&LED_CAN_ERROR);
 3469              	 .loc 6 485 0
 3470 00a6 724B     	 ldr r3,.L167+4
 3471 00a8 181C     	 mov r0,r3
 3472 00aa FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 486:../main.c     **** 
 487:../main.c     **** 			uint8_t i;
 488:../main.c     **** 			int16_t values_int16[3] = {0};
 3473              	 .loc 6 488 0
 3474 00ae 3B1D     	 add r3,r7,#4
 3475 00b0 0022     	 mov r2,#0
 3476 00b2 1A60     	 str r2,[r3]
 3477 00b4 0022     	 mov r2,#0
 3478 00b6 9A80     	 strh r2,[r3,#4]
 489:../main.c     **** 			for(i = 1 ; i < 4 ; i ++){
 3479              	 .loc 6 489 0
 3480 00b8 1D23     	 mov r3,#29
 3481 00ba FB18     	 add r3,r7,r3
 3482 00bc 0122     	 mov r2,#1
 3483 00be 1A70     	 strb r2,[r3]
 3484 00c0 6BE0     	 b .L160
 3485              	.L164:
 490:../main.c     **** 				 if(i == 1) values_int16[i - 1] = (data_RX[i * 2 + 1] << 8) | data_RX[i * 2];
 3486              	 .loc 6 490 0
 3487 00c2 1D23     	 mov r3,#29
 3488 00c4 FB18     	 add r3,r7,r3
 3489 00c6 1B78     	 ldrb r3,[r3]
 3490 00c8 012B     	 cmp r3,#1
 3491 00ca 1CD1     	 bne .L161
 3492              	 .loc 6 490 0 is_stmt 0 discriminator 1
 3493 00cc 1D23     	 mov r3,#29
 3494 00ce FB18     	 add r3,r7,r3
 3495 00d0 1B78     	 ldrb r3,[r3]
 3496 00d2 5A1E     	 sub r2,r3,#1
 3497 00d4 1D23     	 mov r3,#29
 3498 00d6 FB18     	 add r3,r7,r3
 3499 00d8 1B78     	 ldrb r3,[r3]
 3500 00da 5B00     	 lsl r3,r3,#1
 3501 00dc 0133     	 add r3,r3,#1
 3502 00de 0C21     	 mov r1,#12
 3503 00e0 7918     	 add r1,r7,r1
 3504 00e2 CB5C     	 ldrb r3,[r1,r3]
 3505 00e4 1B02     	 lsl r3,r3,#8
 3506 00e6 98B2     	 uxth r0,r3
 3507 00e8 1D23     	 mov r3,#29
 3508 00ea FB18     	 add r3,r7,r3
 3509 00ec 1B78     	 ldrb r3,[r3]
 3510 00ee 5B00     	 lsl r3,r3,#1
 3511 00f0 0C21     	 mov r1,#12
 3512 00f2 7918     	 add r1,r7,r1
 3513 00f4 CB5C     	 ldrb r3,[r1,r3]
 3514 00f6 9BB2     	 uxth r3,r3
 3515 00f8 011C     	 add r1,r0,#0
 3516 00fa 0B43     	 orr r3,r1
 3517 00fc 99B2     	 uxth r1,r3
 3518 00fe 3B1D     	 add r3,r7,#4
 3519 0100 5200     	 lsl r2,r2,#1
 3520 0102 D152     	 strh r1,[r2,r3]
 3521 0104 42E0     	 b .L162
 3522              	.L161:
 491:../main.c     **** 				 else if(i == 2) values_int16[i - 1] = (data_RX[i * 2 + 1] << 8) | data_RX[i * 2];
 3523              	 .loc 6 491 0 is_stmt 1
 3524 0106 1D23     	 mov r3,#29
 3525 0108 FB18     	 add r3,r7,r3
 3526 010a 1B78     	 ldrb r3,[r3]
 3527 010c 022B     	 cmp r3,#2
 3528 010e 1CD1     	 bne .L163
 3529              	 .loc 6 491 0 is_stmt 0 discriminator 1
 3530 0110 1D23     	 mov r3,#29
 3531 0112 FB18     	 add r3,r7,r3
 3532 0114 1B78     	 ldrb r3,[r3]
 3533 0116 5A1E     	 sub r2,r3,#1
 3534 0118 1D23     	 mov r3,#29
 3535 011a FB18     	 add r3,r7,r3
 3536 011c 1B78     	 ldrb r3,[r3]
 3537 011e 5B00     	 lsl r3,r3,#1
 3538 0120 0133     	 add r3,r3,#1
 3539 0122 0C21     	 mov r1,#12
 3540 0124 7918     	 add r1,r7,r1
 3541 0126 CB5C     	 ldrb r3,[r1,r3]
 3542 0128 1B02     	 lsl r3,r3,#8
 3543 012a 98B2     	 uxth r0,r3
 3544 012c 1D23     	 mov r3,#29
 3545 012e FB18     	 add r3,r7,r3
 3546 0130 1B78     	 ldrb r3,[r3]
 3547 0132 5B00     	 lsl r3,r3,#1
 3548 0134 0C21     	 mov r1,#12
 3549 0136 7918     	 add r1,r7,r1
 3550 0138 CB5C     	 ldrb r3,[r1,r3]
 3551 013a 9BB2     	 uxth r3,r3
 3552 013c 011C     	 add r1,r0,#0
 3553 013e 0B43     	 orr r3,r1
 3554 0140 99B2     	 uxth r1,r3
 3555 0142 3B1D     	 add r3,r7,#4
 3556 0144 5200     	 lsl r2,r2,#1
 3557 0146 D152     	 strh r1,[r2,r3]
 3558 0148 20E0     	 b .L162
 3559              	.L163:
 492:../main.c     **** 				 else if(i == 3) values_int16[i - 1] = (data_RX[i * 2 + 1] << 8) | data_RX[i * 2];
 3560              	 .loc 6 492 0 is_stmt 1
 3561 014a 1D23     	 mov r3,#29
 3562 014c FB18     	 add r3,r7,r3
 3563 014e 1B78     	 ldrb r3,[r3]
 3564 0150 032B     	 cmp r3,#3
 3565 0152 1BD1     	 bne .L162
 3566              	 .loc 6 492 0 is_stmt 0 discriminator 1
 3567 0154 1D23     	 mov r3,#29
 3568 0156 FB18     	 add r3,r7,r3
 3569 0158 1B78     	 ldrb r3,[r3]
 3570 015a 5A1E     	 sub r2,r3,#1
 3571 015c 1D23     	 mov r3,#29
 3572 015e FB18     	 add r3,r7,r3
 3573 0160 1B78     	 ldrb r3,[r3]
 3574 0162 5B00     	 lsl r3,r3,#1
 3575 0164 0133     	 add r3,r3,#1
 3576 0166 0C21     	 mov r1,#12
 3577 0168 7918     	 add r1,r7,r1
 3578 016a CB5C     	 ldrb r3,[r1,r3]
 3579 016c 1B02     	 lsl r3,r3,#8
 3580 016e 98B2     	 uxth r0,r3
 3581 0170 1D23     	 mov r3,#29
 3582 0172 FB18     	 add r3,r7,r3
 3583 0174 1B78     	 ldrb r3,[r3]
 3584 0176 5B00     	 lsl r3,r3,#1
 3585 0178 0C21     	 mov r1,#12
 3586 017a 7918     	 add r1,r7,r1
 3587 017c CB5C     	 ldrb r3,[r1,r3]
 3588 017e 9BB2     	 uxth r3,r3
 3589 0180 011C     	 add r1,r0,#0
 3590 0182 0B43     	 orr r3,r1
 3591 0184 99B2     	 uxth r1,r3
 3592 0186 3B1D     	 add r3,r7,#4
 3593 0188 5200     	 lsl r2,r2,#1
 3594 018a D152     	 strh r1,[r2,r3]
 3595              	.L162:
 489:../main.c     **** 				 if(i == 1) values_int16[i - 1] = (data_RX[i * 2 + 1] << 8) | data_RX[i * 2];
 3596              	 .loc 6 489 0 is_stmt 1 discriminator 2
 3597 018c 1D23     	 mov r3,#29
 3598 018e FB18     	 add r3,r7,r3
 3599 0190 1A78     	 ldrb r2,[r3]
 3600 0192 1D23     	 mov r3,#29
 3601 0194 FB18     	 add r3,r7,r3
 3602 0196 0132     	 add r2,r2,#1
 3603 0198 1A70     	 strb r2,[r3]
 3604              	.L160:
 489:../main.c     **** 				 if(i == 1) values_int16[i - 1] = (data_RX[i * 2 + 1] << 8) | data_RX[i * 2];
 3605              	 .loc 6 489 0 is_stmt 0 discriminator 1
 3606 019a 1D23     	 mov r3,#29
 3607 019c FB18     	 add r3,r7,r3
 3608 019e 1B78     	 ldrb r3,[r3]
 3609 01a0 032B     	 cmp r3,#3
 3610 01a2 8ED9     	 bls .L164
 493:../main.c     **** 			 }
 494:../main.c     **** 
 495:../main.c     **** 			Inveter_CAN_OK[Motor_on_rover] = values_int16[0];
 3611              	 .loc 6 495 0 is_stmt 1
 3612 01a4 1F23     	 mov r3,#31
 3613 01a6 FB18     	 add r3,r7,r3
 3614 01a8 1B78     	 ldrb r3,[r3]
 3615 01aa 3A1D     	 add r2,r7,#4
 3616 01ac 1288     	 ldrh r2,[r2]
 3617 01ae D1B2     	 uxtb r1,r2
 3618 01b0 304A     	 ldr r2,.L167+8
 3619 01b2 D154     	 strb r1,[r2,r3]
 496:../main.c     **** 			Actual_Speeds[Motor_on_rover] = (float)values_int16[1] / 1000;
 3620              	 .loc 6 496 0
 3621 01b4 1F23     	 mov r3,#31
 3622 01b6 FB18     	 add r3,r7,r3
 3623 01b8 1C78     	 ldrb r4,[r3]
 3624 01ba 3B1D     	 add r3,r7,#4
 3625 01bc 5B88     	 ldrh r3,[r3,#2]
 3626 01be 1BB2     	 sxth r3,r3
 3627 01c0 181C     	 mov r0,r3
 3628 01c2 FFF7FEFF 	 bl __aeabi_i2f
 3629 01c6 031C     	 add r3,r0,#0
 3630 01c8 181C     	 add r0,r3,#0
 3631 01ca 2B49     	 ldr r1,.L167+12
 3632 01cc FFF7FEFF 	 bl __aeabi_fdiv
 3633 01d0 031C     	 add r3,r0,#0
 3634 01d2 191C     	 add r1,r3,#0
 3635 01d4 294B     	 ldr r3,.L167+16
 3636 01d6 A200     	 lsl r2,r4,#2
 3637 01d8 D150     	 str r1,[r2,r3]
 497:../main.c     **** 			Actual_Distance[Motor_on_rover] = (float)values_int16[2] / 1000;
 3638              	 .loc 6 497 0
 3639 01da 1F23     	 mov r3,#31
 3640 01dc FB18     	 add r3,r7,r3
 3641 01de 1C78     	 ldrb r4,[r3]
 3642 01e0 3B1D     	 add r3,r7,#4
 3643 01e2 9B88     	 ldrh r3,[r3,#4]
 3644 01e4 1BB2     	 sxth r3,r3
 3645 01e6 181C     	 mov r0,r3
 3646 01e8 FFF7FEFF 	 bl __aeabi_i2f
 3647 01ec 031C     	 add r3,r0,#0
 3648 01ee 181C     	 add r0,r3,#0
 3649 01f0 2149     	 ldr r1,.L167+12
 3650 01f2 FFF7FEFF 	 bl __aeabi_fdiv
 3651 01f6 031C     	 add r3,r0,#0
 3652 01f8 191C     	 add r1,r3,#0
 3653 01fa 214B     	 ldr r3,.L167+20
 3654 01fc A200     	 lsl r2,r4,#2
 3655 01fe D150     	 str r1,[r2,r3]
 3656              	.LBE3:
 3657 0200 03E0     	 b .L165
 3658              	.L159:
 498:../main.c     **** 
 499:../main.c     **** 
 500:../main.c     **** 			}
 501:../main.c     **** 		else DIGITAL_IO_SetOutputHigh(&LED_CAN_ERROR);
 3659              	 .loc 6 501 0
 3660 0202 1B4B     	 ldr r3,.L167+4
 3661 0204 181C     	 mov r0,r3
 3662 0206 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 3663              	.L165:
 3664              	.LBE2:
 473:../main.c     **** 		XMC_CAN_MO_t* lmsgobjct_ptr_1 = CAN_NODE_0.lmobj_ptr[Motor_on_rover + 2]->mo_ptr;
 3665              	 .loc 6 473 0 discriminator 1
 3666 020a 1F23     	 mov r3,#31
 3667 020c FB18     	 add r3,r7,r3
 3668 020e 1A78     	 ldrb r2,[r3]
 3669 0210 1F23     	 mov r3,#31
 3670 0212 FB18     	 add r3,r7,r3
 3671 0214 0132     	 add r2,r2,#1
 3672 0216 1A70     	 strb r2,[r3]
 3673              	.L156:
 473:../main.c     **** 		XMC_CAN_MO_t* lmsgobjct_ptr_1 = CAN_NODE_0.lmobj_ptr[Motor_on_rover + 2]->mo_ptr;
 3674              	 .loc 6 473 0 is_stmt 0 discriminator 2
 3675 0218 1F23     	 mov r3,#31
 3676 021a FB18     	 add r3,r7,r3
 3677 021c 1B78     	 ldrb r3,[r3]
 3678 021e 032B     	 cmp r3,#3
 3679 0220 00D8     	 bhi .LCB2967
 3680 0222 F5E6     	 b .L166
 3681              	.LCB2967:
 502:../main.c     **** 	}
 503:../main.c     **** 
 504:../main.c     **** 	speed_fl_act = Actual_Speeds[0];
 3682              	 .loc 6 504 0 is_stmt 1
 3683 0224 154B     	 ldr r3,.L167+16
 3684 0226 1A68     	 ldr r2,[r3]
 3685 0228 164B     	 ldr r3,.L167+24
 3686 022a 1A60     	 str r2,[r3]
 505:../main.c     **** 	speed_fr_act = Actual_Speeds[1];
 3687              	 .loc 6 505 0
 3688 022c 134B     	 ldr r3,.L167+16
 3689 022e 5A68     	 ldr r2,[r3,#4]
 3690 0230 154B     	 ldr r3,.L167+28
 3691 0232 1A60     	 str r2,[r3]
 506:../main.c     **** 	speed_rl_act = Actual_Speeds[2];
 3692              	 .loc 6 506 0
 3693 0234 114B     	 ldr r3,.L167+16
 3694 0236 9A68     	 ldr r2,[r3,#8]
 3695 0238 144B     	 ldr r3,.L167+32
 3696 023a 1A60     	 str r2,[r3]
 507:../main.c     **** 	speed_rr_act = Actual_Speeds[3];
 3697              	 .loc 6 507 0
 3698 023c 0F4B     	 ldr r3,.L167+16
 3699 023e DA68     	 ldr r2,[r3,#12]
 3700 0240 134B     	 ldr r3,.L167+36
 3701 0242 1A60     	 str r2,[r3]
 508:../main.c     **** 
 509:../main.c     **** 	distance_fl_act = Actual_Distance[0];
 3702              	 .loc 6 509 0
 3703 0244 0E4B     	 ldr r3,.L167+20
 3704 0246 1A68     	 ldr r2,[r3]
 3705 0248 124B     	 ldr r3,.L167+40
 3706 024a 1A60     	 str r2,[r3]
 510:../main.c     **** 	distance_fr_act = Actual_Distance[1];
 3707              	 .loc 6 510 0
 3708 024c 0C4B     	 ldr r3,.L167+20
 3709 024e 5A68     	 ldr r2,[r3,#4]
 3710 0250 114B     	 ldr r3,.L167+44
 3711 0252 1A60     	 str r2,[r3]
 511:../main.c     **** 	distance_rl_act = Actual_Distance[2];
 3712              	 .loc 6 511 0
 3713 0254 0A4B     	 ldr r3,.L167+20
 3714 0256 9A68     	 ldr r2,[r3,#8]
 3715 0258 104B     	 ldr r3,.L167+48
 3716 025a 1A60     	 str r2,[r3]
 512:../main.c     **** 	distance_rr_act = Actual_Distance[3];
 3717              	 .loc 6 512 0
 3718 025c 084B     	 ldr r3,.L167+20
 3719 025e DA68     	 ldr r2,[r3,#12]
 3720 0260 0F4B     	 ldr r3,.L167+52
 3721 0262 1A60     	 str r2,[r3]
 513:../main.c     **** 
 514:../main.c     **** }
 3722              	 .loc 6 514 0
 3723 0264 BD46     	 mov sp,r7
 3724 0266 09B0     	 add sp,sp,#36
 3725              	 
 3726 0268 90BD     	 pop {r4,r7,pc}
 3727              	.L168:
 3728 026a C046     	 .align 2
 3729              	.L167:
 3730 026c 00000000 	 .word CAN_NODE_0
 3731 0270 00000000 	 .word LED_CAN_ERROR
 3732 0274 00000000 	 .word Inveter_CAN_OK
 3733 0278 00007A44 	 .word 1148846080
 3734 027c 00000000 	 .word Actual_Speeds
 3735 0280 00000000 	 .word Actual_Distance
 3736 0284 00000000 	 .word speed_fl_act
 3737 0288 00000000 	 .word speed_fr_act
 3738 028c 00000000 	 .word speed_rl_act
 3739 0290 00000000 	 .word speed_rr_act
 3740 0294 00000000 	 .word distance_fl_act
 3741 0298 00000000 	 .word distance_fr_act
 3742 029c 00000000 	 .word distance_rl_act
 3743 02a0 00000000 	 .word distance_rr_act
 3744              	 .cfi_endproc
 3745              	.LFE231:
 3747              	 .section .text.Watchdog_Handler,"ax",%progbits
 3748              	 .align 2
 3749              	 .global Watchdog_Handler
 3750              	 .code 16
 3751              	 .thumb_func
 3753              	Watchdog_Handler:
 3754              	.LFB232:
 515:../main.c     **** 
 516:../main.c     **** void Watchdog_Handler(void) // to do restates if can is not working a problem wenn power from the b
 517:../main.c     **** {
 3755              	 .loc 6 517 0
 3756              	 .cfi_startproc
 3757 0000 80B5     	 push {r7,lr}
 3758              	.LCFI53:
 3759              	 .cfi_def_cfa_offset 8
 3760              	 .cfi_offset 7,-8
 3761              	 .cfi_offset 14,-4
 3762 0002 00AF     	 add r7,sp,#0
 3763              	.LCFI54:
 3764              	 .cfi_def_cfa_register 7
 518:../main.c     ****   WATCHDOG_ClearAlarm(); /* Clear the alarm event */
 3765              	 .loc 6 518 0
 3766 0004 FFF7FEFF 	 bl WATCHDOG_ClearAlarm
 519:../main.c     ****   DIGITAL_IO_SetOutputHigh(&WATCHDOG_LED_BLUE);
 3767              	 .loc 6 519 0
 3768 0008 024B     	 ldr r3,.L170
 3769 000a 181C     	 mov r0,r3
 3770 000c FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 520:../main.c     **** }
 3771              	 .loc 6 520 0
 3772 0010 BD46     	 mov sp,r7
 3773              	 
 3774 0012 80BD     	 pop {r7,pc}
 3775              	.L171:
 3776              	 .align 2
 3777              	.L170:
 3778 0014 00000000 	 .word WATCHDOG_LED_BLUE
 3779              	 .cfi_endproc
 3780              	.LFE232:
 3782              	 .section .text.CAN_reset_distance,"ax",%progbits
 3783              	 .align 2
 3784              	 .global CAN_reset_distance
 3785              	 .code 16
 3786              	 .thumb_func
 3788              	CAN_reset_distance:
 3789              	.LFB233:
 521:../main.c     **** 
 522:../main.c     **** void CAN_reset_distance(uint8_t distance_to_reset[4]){
 3790              	 .loc 6 522 0
 3791              	 .cfi_startproc
 3792 0000 80B5     	 push {r7,lr}
 3793              	.LCFI55:
 3794              	 .cfi_def_cfa_offset 8
 3795              	 .cfi_offset 7,-8
 3796              	 .cfi_offset 14,-4
 3797 0002 86B0     	 sub sp,sp,#24
 3798              	.LCFI56:
 3799              	 .cfi_def_cfa_offset 32
 3800 0004 00AF     	 add r7,sp,#0
 3801              	.LCFI57:
 3802              	 .cfi_def_cfa_register 7
 3803 0006 7860     	 str r0,[r7,#4]
 523:../main.c     **** 	uint8_t TX[8] ={0};
 3804              	 .loc 6 523 0
 3805 0008 0C23     	 mov r3,#12
 3806 000a FB18     	 add r3,r7,r3
 3807 000c 0022     	 mov r2,#0
 3808 000e 1A60     	 str r2,[r3]
 3809 0010 0022     	 mov r2,#0
 3810 0012 5A60     	 str r2,[r3,#4]
 524:../main.c     **** 	uint8_t i;
 525:../main.c     **** 	for(i = 0; i < 4; i++){	TX[i] = distance_to_reset[i];}
 3811              	 .loc 6 525 0
 3812 0014 1723     	 mov r3,#23
 3813 0016 FB18     	 add r3,r7,r3
 3814 0018 0022     	 mov r2,#0
 3815 001a 1A70     	 strb r2,[r3]
 3816 001c 12E0     	 b .L173
 3817              	.L174:
 3818              	 .loc 6 525 0 is_stmt 0 discriminator 3
 3819 001e 1723     	 mov r3,#23
 3820 0020 FB18     	 add r3,r7,r3
 3821 0022 1B78     	 ldrb r3,[r3]
 3822 0024 1722     	 mov r2,#23
 3823 0026 BA18     	 add r2,r7,r2
 3824 0028 1278     	 ldrb r2,[r2]
 3825 002a 7968     	 ldr r1,[r7,#4]
 3826 002c 8A18     	 add r2,r1,r2
 3827 002e 1178     	 ldrb r1,[r2]
 3828 0030 0C22     	 mov r2,#12
 3829 0032 BA18     	 add r2,r7,r2
 3830 0034 D154     	 strb r1,[r2,r3]
 3831 0036 1723     	 mov r3,#23
 3832 0038 FB18     	 add r3,r7,r3
 3833 003a 1A78     	 ldrb r2,[r3]
 3834 003c 1723     	 mov r3,#23
 3835 003e FB18     	 add r3,r7,r3
 3836 0040 0132     	 add r2,r2,#1
 3837 0042 1A70     	 strb r2,[r3]
 3838              	.L173:
 3839              	 .loc 6 525 0 discriminator 1
 3840 0044 1723     	 mov r3,#23
 3841 0046 FB18     	 add r3,r7,r3
 3842 0048 1B78     	 ldrb r3,[r3]
 3843 004a 032B     	 cmp r3,#3
 3844 004c E7D9     	 bls .L174
 526:../main.c     **** 
 527:../main.c     **** 	CAN_NODE_MO_UpdateData((void*) CAN_NODE_0.lmobj_ptr[1], (uint8_t*)TX);
 3845              	 .loc 6 527 0 is_stmt 1
 3846 004e 084B     	 ldr r3,.L175
 3847 0050 1A69     	 ldr r2,[r3,#16]
 3848 0052 0C23     	 mov r3,#12
 3849 0054 FB18     	 add r3,r7,r3
 3850 0056 101C     	 mov r0,r2
 3851 0058 191C     	 mov r1,r3
 3852 005a FFF7FEFF 	 bl CAN_NODE_MO_UpdateData
 528:../main.c     **** 	CAN_NODE_MO_Transmit((void*) CAN_NODE_0.lmobj_ptr[1]); //Transmit the data of message object1
 3853              	 .loc 6 528 0
 3854 005e 044B     	 ldr r3,.L175
 3855 0060 1B69     	 ldr r3,[r3,#16]
 3856 0062 181C     	 mov r0,r3
 3857 0064 FFF7FEFF 	 bl CAN_NODE_MO_Transmit
 529:../main.c     **** }
 3858              	 .loc 6 529 0
 3859 0068 BD46     	 mov sp,r7
 3860 006a 06B0     	 add sp,sp,#24
 3861              	 
 3862 006c 80BD     	 pop {r7,pc}
 3863              	.L176:
 3864 006e C046     	 .align 2
 3865              	.L175:
 3866 0070 00000000 	 .word CAN_NODE_0
 3867              	 .cfi_endproc
 3868              	.LFE233:
 3870              	 .global __aeabi_f2iz
 3871              	 .section .text.CAN_send_Speeds,"ax",%progbits
 3872              	 .align 2
 3873              	 .global CAN_send_Speeds
 3874              	 .code 16
 3875              	 .thumb_func
 3877              	CAN_send_Speeds:
 3878              	.LFB234:
 530:../main.c     **** 
 531:../main.c     **** void CAN_send_Speeds(float Speed_data[4]){
 3879              	 .loc 6 531 0
 3880              	 .cfi_startproc
 3881 0000 80B5     	 push {r7,lr}
 3882              	.LCFI58:
 3883              	 .cfi_def_cfa_offset 8
 3884              	 .cfi_offset 7,-8
 3885              	 .cfi_offset 14,-4
 3886 0002 84B0     	 sub sp,sp,#16
 3887              	.LCFI59:
 3888              	 .cfi_def_cfa_offset 24
 3889 0004 00AF     	 add r7,sp,#0
 3890              	.LCFI60:
 3891              	 .cfi_def_cfa_register 7
 3892 0006 7860     	 str r0,[r7,#4]
 532:../main.c     **** 
 533:../main.c     **** 	int16_t Speeds_int16[4] ={Speed_data[0] *1000, Speed_data[1] *1000, Speed_data[2] *1000, Speed_dat
 3893              	 .loc 6 533 0
 3894 0008 7B68     	 ldr r3,[r7,#4]
 3895 000a 1B68     	 ldr r3,[r3]
 3896 000c 181C     	 add r0,r3,#0
 3897 000e 2649     	 ldr r1,.L178
 3898 0010 FFF7FEFF 	 bl __aeabi_fmul
 3899 0014 031C     	 add r3,r0,#0
 3900 0016 181C     	 add r0,r3,#0
 3901 0018 FFF7FEFF 	 bl __aeabi_f2iz
 3902 001c 031C     	 mov r3,r0
 3903 001e 9AB2     	 uxth r2,r3
 3904 0020 0823     	 mov r3,#8
 3905 0022 FB18     	 add r3,r7,r3
 3906 0024 1A80     	 strh r2,[r3]
 3907 0026 7B68     	 ldr r3,[r7,#4]
 3908 0028 0433     	 add r3,r3,#4
 3909 002a 1B68     	 ldr r3,[r3]
 3910 002c 181C     	 add r0,r3,#0
 3911 002e 1E49     	 ldr r1,.L178
 3912 0030 FFF7FEFF 	 bl __aeabi_fmul
 3913 0034 031C     	 add r3,r0,#0
 3914 0036 181C     	 add r0,r3,#0
 3915 0038 FFF7FEFF 	 bl __aeabi_f2iz
 3916 003c 031C     	 mov r3,r0
 3917 003e 9AB2     	 uxth r2,r3
 3918 0040 0823     	 mov r3,#8
 3919 0042 FB18     	 add r3,r7,r3
 3920 0044 5A80     	 strh r2,[r3,#2]
 3921 0046 7B68     	 ldr r3,[r7,#4]
 3922 0048 0833     	 add r3,r3,#8
 3923 004a 1B68     	 ldr r3,[r3]
 3924 004c 181C     	 add r0,r3,#0
 3925 004e 1649     	 ldr r1,.L178
 3926 0050 FFF7FEFF 	 bl __aeabi_fmul
 3927 0054 031C     	 add r3,r0,#0
 3928 0056 181C     	 add r0,r3,#0
 3929 0058 FFF7FEFF 	 bl __aeabi_f2iz
 3930 005c 031C     	 mov r3,r0
 3931 005e 9AB2     	 uxth r2,r3
 3932 0060 0823     	 mov r3,#8
 3933 0062 FB18     	 add r3,r7,r3
 3934 0064 9A80     	 strh r2,[r3,#4]
 3935 0066 7B68     	 ldr r3,[r7,#4]
 3936 0068 0C33     	 add r3,r3,#12
 3937 006a 1B68     	 ldr r3,[r3]
 3938 006c 181C     	 add r0,r3,#0
 3939 006e 0E49     	 ldr r1,.L178
 3940 0070 FFF7FEFF 	 bl __aeabi_fmul
 3941 0074 031C     	 add r3,r0,#0
 3942 0076 181C     	 add r0,r3,#0
 3943 0078 FFF7FEFF 	 bl __aeabi_f2iz
 3944 007c 031C     	 mov r3,r0
 3945 007e 9AB2     	 uxth r2,r3
 3946 0080 0823     	 mov r3,#8
 3947 0082 FB18     	 add r3,r7,r3
 3948 0084 DA80     	 strh r2,[r3,#6]
 534:../main.c     **** 
 535:../main.c     **** 	CAN_NODE_MO_UpdateData((void*) CAN_NODE_0.lmobj_ptr[0], (uint8_t*)Speeds_int16);
 3949              	 .loc 6 535 0
 3950 0086 094B     	 ldr r3,.L178+4
 3951 0088 DA68     	 ldr r2,[r3,#12]
 3952 008a 0823     	 mov r3,#8
 3953 008c FB18     	 add r3,r7,r3
 3954 008e 101C     	 mov r0,r2
 3955 0090 191C     	 mov r1,r3
 3956 0092 FFF7FEFF 	 bl CAN_NODE_MO_UpdateData
 536:../main.c     **** 	CAN_NODE_MO_Transmit((void*) CAN_NODE_0.lmobj_ptr[0]); //Transmit the data of message object1
 3957              	 .loc 6 536 0
 3958 0096 054B     	 ldr r3,.L178+4
 3959 0098 DB68     	 ldr r3,[r3,#12]
 3960 009a 181C     	 mov r0,r3
 3961 009c FFF7FEFF 	 bl CAN_NODE_MO_Transmit
 537:../main.c     **** 
 538:../main.c     **** }
 3962              	 .loc 6 538 0
 3963 00a0 BD46     	 mov sp,r7
 3964 00a2 04B0     	 add sp,sp,#16
 3965              	 
 3966 00a4 80BD     	 pop {r7,pc}
 3967              	.L179:
 3968 00a6 C046     	 .align 2
 3969              	.L178:
 3970 00a8 00007A44 	 .word 1148846080
 3971 00ac 00000000 	 .word CAN_NODE_0
 3972              	 .cfi_endproc
 3973              	.LFE234:
 3975              	 .section .text.IRQ8_Handler,"ax",%progbits
 3976              	 .align 2
 3977              	 .global IRQ8_Handler
 3978              	 .code 16
 3979              	 .thumb_func
 3981              	IRQ8_Handler:
 3982              	.LFB235:
 539:../main.c     **** 
 540:../main.c     **** void INTERRUPT_TIMER_10us_ISR(void){ // every 1ms so 10kHz
 3983              	 .loc 6 540 0
 3984              	 .cfi_startproc
 3985 0000 80B5     	 push {r7,lr}
 3986              	.LCFI61:
 3987              	 .cfi_def_cfa_offset 8
 3988              	 .cfi_offset 7,-8
 3989              	 .cfi_offset 14,-4
 3990 0002 00AF     	 add r7,sp,#0
 3991              	.LCFI62:
 3992              	 .cfi_def_cfa_register 7
 541:../main.c     **** 	if(RC_Gear_state == 1)RC_gear_100us_counter ++;
 3993              	 .loc 6 541 0
 3994 0004 0A4B     	 ldr r3,.L183
 3995 0006 1B78     	 ldrb r3,[r3]
 3996 0008 DBB2     	 uxtb r3,r3
 3997 000a 012B     	 cmp r3,#1
 3998 000c 04D1     	 bne .L181
 3999              	 .loc 6 541 0 is_stmt 0 discriminator 1
 4000 000e 094B     	 ldr r3,.L183+4
 4001 0010 1B68     	 ldr r3,[r3]
 4002 0012 5A1C     	 add r2,r3,#1
 4003 0014 074B     	 ldr r3,.L183+4
 4004 0016 1A60     	 str r2,[r3]
 4005              	.L181:
 542:../main.c     **** 	if(RC_AUX1_state == 1)RC_AUX1_100us_counter ++;
 4006              	 .loc 6 542 0 is_stmt 1
 4007 0018 074B     	 ldr r3,.L183+8
 4008 001a 1B78     	 ldrb r3,[r3]
 4009 001c DBB2     	 uxtb r3,r3
 4010 001e 012B     	 cmp r3,#1
 4011 0020 04D1     	 bne .L180
 4012              	 .loc 6 542 0 is_stmt 0 discriminator 1
 4013 0022 064B     	 ldr r3,.L183+12
 4014 0024 1B68     	 ldr r3,[r3]
 4015 0026 5A1C     	 add r2,r3,#1
 4016 0028 044B     	 ldr r3,.L183+12
 4017 002a 1A60     	 str r2,[r3]
 4018              	.L180:
 543:../main.c     **** }
 4019              	 .loc 6 543 0 is_stmt 1
 4020 002c BD46     	 mov sp,r7
 4021              	 
 4022 002e 80BD     	 pop {r7,pc}
 4023              	.L184:
 4024              	 .align 2
 4025              	.L183:
 4026 0030 00000000 	 .word RC_Gear_state
 4027 0034 00000000 	 .word RC_gear_100us_counter
 4028 0038 00000000 	 .word RC_AUX1_state
 4029 003c 00000000 	 .word RC_AUX1_100us_counter
 4030              	 .cfi_endproc
 4031              	.LFE235:
 4033              	 .global __aeabi_f2uiz
 4034              	 .section .text.Steering_set_Angles,"ax",%progbits
 4035              	 .align 2
 4036              	 .global Steering_set_Angles
 4037              	 .code 16
 4038              	 .thumb_func
 4040              	Steering_set_Angles:
 4041              	.LFB236:
 544:../main.c     **** 
 545:../main.c     **** void Steering_set_Angles(float Angles_data[4]){
 4042              	 .loc 6 545 0
 4043              	 .cfi_startproc
 4044 0000 90B5     	 push {r4,r7,lr}
 4045              	.LCFI63:
 4046              	 .cfi_def_cfa_offset 12
 4047              	 .cfi_offset 4,-12
 4048              	 .cfi_offset 7,-8
 4049              	 .cfi_offset 14,-4
 4050 0002 85B0     	 sub sp,sp,#20
 4051              	.LCFI64:
 4052              	 .cfi_def_cfa_offset 32
 4053 0004 00AF     	 add r7,sp,#0
 4054              	.LCFI65:
 4055              	 .cfi_def_cfa_register 7
 4056 0006 7860     	 str r0,[r7,#4]
 546:../main.c     **** 	float deg_PWM = 0.645; // deg to PWM singlan converstion factor
 4057              	 .loc 6 546 0
 4058 0008 3E4B     	 ldr r3,.L196
 4059 000a BB60     	 str r3,[r7,#8]
 547:../main.c     **** 
 548:../main.c     **** 	// calcuation of PWM for Angle on each wheel
 549:../main.c     **** 	int i;
 550:../main.c     **** 	for(i = 0 ; i < 4 ; i ++){
 4060              	 .loc 6 550 0
 4061 000c 0023     	 mov r3,#0
 4062 000e FB60     	 str r3,[r7,#12]
 4063 0010 1FE0     	 b .L186
 4064              	.L187:
 551:../main.c     **** 		Servo_PWMs[i] = Angles_data[i]*deg_PWM + NP[i];
 4065              	 .loc 6 551 0 discriminator 3
 4066 0012 FB68     	 ldr r3,[r7,#12]
 4067 0014 9B00     	 lsl r3,r3,#2
 4068 0016 7A68     	 ldr r2,[r7,#4]
 4069 0018 D318     	 add r3,r2,r3
 4070 001a 1B68     	 ldr r3,[r3]
 4071 001c 181C     	 add r0,r3,#0
 4072 001e B968     	 ldr r1,[r7,#8]
 4073 0020 FFF7FEFF 	 bl __aeabi_fmul
 4074 0024 031C     	 add r3,r0,#0
 4075 0026 1C1C     	 add r4,r3,#0
 4076 0028 374B     	 ldr r3,.L196+4
 4077 002a FA68     	 ldr r2,[r7,#12]
 4078 002c 9200     	 lsl r2,r2,#2
 4079 002e D358     	 ldr r3,[r2,r3]
 4080 0030 181C     	 mov r0,r3
 4081 0032 FFF7FEFF 	 bl __aeabi_i2f
 4082 0036 031C     	 add r3,r0,#0
 4083 0038 201C     	 add r0,r4,#0
 4084 003a 191C     	 add r1,r3,#0
 4085 003c FFF7FEFF 	 bl __aeabi_fadd
 4086 0040 031C     	 add r3,r0,#0
 4087 0042 191C     	 add r1,r3,#0
 4088 0044 314B     	 ldr r3,.L196+8
 4089 0046 FA68     	 ldr r2,[r7,#12]
 4090 0048 9200     	 lsl r2,r2,#2
 4091 004a D150     	 str r1,[r2,r3]
 550:../main.c     **** 		Servo_PWMs[i] = Angles_data[i]*deg_PWM + NP[i];
 4092              	 .loc 6 550 0 discriminator 3
 4093 004c FB68     	 ldr r3,[r7,#12]
 4094 004e 0133     	 add r3,r3,#1
 4095 0050 FB60     	 str r3,[r7,#12]
 4096              	.L186:
 550:../main.c     **** 		Servo_PWMs[i] = Angles_data[i]*deg_PWM + NP[i];
 4097              	 .loc 6 550 0 is_stmt 0 discriminator 1
 4098 0052 FB68     	 ldr r3,[r7,#12]
 4099 0054 032B     	 cmp r3,#3
 4100 0056 DCDD     	 ble .L187
 552:../main.c     **** 		}
 553:../main.c     **** 
 554:../main.c     **** 	//limitinbg max servor Angle to 1.75 rot in each dirction
 555:../main.c     **** 	for(i = 0 ; i < 4 ; i ++){
 4101              	 .loc 6 555 0 is_stmt 1
 4102 0058 0023     	 mov r3,#0
 4103 005a FB60     	 str r3,[r7,#12]
 4104 005c 20E0     	 b .L188
 4105              	.L193:
 556:../main.c     **** 		if(Servo_PWMs[i] > 950) { Servo_PWMs[i] = 950;}
 4106              	 .loc 6 556 0
 4107 005e 2B4B     	 ldr r3,.L196+8
 4108 0060 FA68     	 ldr r2,[r7,#12]
 4109 0062 9200     	 lsl r2,r2,#2
 4110 0064 D358     	 ldr r3,[r2,r3]
 4111 0066 181C     	 add r0,r3,#0
 4112 0068 2949     	 ldr r1,.L196+12
 4113 006a FFF7FEFF 	 bl __aeabi_fcmpgt
 4114 006e 031E     	 sub r3,r0,#0
 4115 0070 04D0     	 beq .L189
 4116              	 .loc 6 556 0 is_stmt 0 discriminator 1
 4117 0072 264B     	 ldr r3,.L196+8
 4118 0074 FA68     	 ldr r2,[r7,#12]
 4119 0076 9200     	 lsl r2,r2,#2
 4120 0078 2549     	 ldr r1,.L196+12
 4121 007a D150     	 str r1,[r2,r3]
 4122              	.L189:
 557:../main.c     **** 		if(Servo_PWMs[i] < 550) { Servo_PWMs[i] = 550;}
 4123              	 .loc 6 557 0 is_stmt 1
 4124 007c 234B     	 ldr r3,.L196+8
 4125 007e FA68     	 ldr r2,[r7,#12]
 4126 0080 9200     	 lsl r2,r2,#2
 4127 0082 D358     	 ldr r3,[r2,r3]
 4128 0084 181C     	 add r0,r3,#0
 4129 0086 2349     	 ldr r1,.L196+16
 4130 0088 FFF7FEFF 	 bl __aeabi_fcmplt
 4131 008c 031E     	 sub r3,r0,#0
 4132 008e 04D0     	 beq .L191
 4133              	 .loc 6 557 0 is_stmt 0 discriminator 1
 4134 0090 1E4B     	 ldr r3,.L196+8
 4135 0092 FA68     	 ldr r2,[r7,#12]
 4136 0094 9200     	 lsl r2,r2,#2
 4137 0096 1F49     	 ldr r1,.L196+16
 4138 0098 D150     	 str r1,[r2,r3]
 4139              	.L191:
 555:../main.c     **** 		if(Servo_PWMs[i] > 950) { Servo_PWMs[i] = 950;}
 4140              	 .loc 6 555 0 is_stmt 1 discriminator 2
 4141 009a FB68     	 ldr r3,[r7,#12]
 4142 009c 0133     	 add r3,r3,#1
 4143 009e FB60     	 str r3,[r7,#12]
 4144              	.L188:
 555:../main.c     **** 		if(Servo_PWMs[i] > 950) { Servo_PWMs[i] = 950;}
 4145              	 .loc 6 555 0 is_stmt 0 discriminator 1
 4146 00a0 FB68     	 ldr r3,[r7,#12]
 4147 00a2 032B     	 cmp r3,#3
 4148 00a4 DBDD     	 ble .L193
 558:../main.c     **** 	}
 559:../main.c     **** 
 560:../main.c     **** 	//seting PWM values
 561:../main.c     **** 	PWM_SetDutyCycle(&PWM_servo_fl,Servo_PWMs[0]);
 4149              	 .loc 6 561 0 is_stmt 1
 4150 00a6 194B     	 ldr r3,.L196+8
 4151 00a8 1B68     	 ldr r3,[r3]
 4152 00aa 181C     	 add r0,r3,#0
 4153 00ac FFF7FEFF 	 bl __aeabi_f2uiz
 4154 00b0 021C     	 mov r2,r0
 4155 00b2 194B     	 ldr r3,.L196+20
 4156 00b4 181C     	 mov r0,r3
 4157 00b6 111C     	 mov r1,r2
 4158 00b8 FFF7FEFF 	 bl PWM_SetDutyCycle
 562:../main.c     **** 	PWM_SetDutyCycle(&PWM_servo_fr,Servo_PWMs[1]);
 4159              	 .loc 6 562 0
 4160 00bc 134B     	 ldr r3,.L196+8
 4161 00be 5B68     	 ldr r3,[r3,#4]
 4162 00c0 181C     	 add r0,r3,#0
 4163 00c2 FFF7FEFF 	 bl __aeabi_f2uiz
 4164 00c6 021C     	 mov r2,r0
 4165 00c8 144B     	 ldr r3,.L196+24
 4166 00ca 181C     	 mov r0,r3
 4167 00cc 111C     	 mov r1,r2
 4168 00ce FFF7FEFF 	 bl PWM_SetDutyCycle
 563:../main.c     **** 	PWM_SetDutyCycle(&PWM_servo_rl,Servo_PWMs[2]);
 4169              	 .loc 6 563 0
 4170 00d2 0E4B     	 ldr r3,.L196+8
 4171 00d4 9B68     	 ldr r3,[r3,#8]
 4172 00d6 181C     	 add r0,r3,#0
 4173 00d8 FFF7FEFF 	 bl __aeabi_f2uiz
 4174 00dc 021C     	 mov r2,r0
 4175 00de 104B     	 ldr r3,.L196+28
 4176 00e0 181C     	 mov r0,r3
 4177 00e2 111C     	 mov r1,r2
 4178 00e4 FFF7FEFF 	 bl PWM_SetDutyCycle
 564:../main.c     **** 	PWM_SetDutyCycle(&PWM_servo_rr,Servo_PWMs[3]);
 4179              	 .loc 6 564 0
 4180 00e8 084B     	 ldr r3,.L196+8
 4181 00ea DB68     	 ldr r3,[r3,#12]
 4182 00ec 181C     	 add r0,r3,#0
 4183 00ee FFF7FEFF 	 bl __aeabi_f2uiz
 4184 00f2 021C     	 mov r2,r0
 4185 00f4 0B4B     	 ldr r3,.L196+32
 4186 00f6 181C     	 mov r0,r3
 4187 00f8 111C     	 mov r1,r2
 4188 00fa FFF7FEFF 	 bl PWM_SetDutyCycle
 565:../main.c     **** 
 566:../main.c     **** }
 4189              	 .loc 6 566 0
 4190 00fe BD46     	 mov sp,r7
 4191 0100 05B0     	 add sp,sp,#20
 4192              	 
 4193 0102 90BD     	 pop {r4,r7,pc}
 4194              	.L197:
 4195              	 .align 2
 4196              	.L196:
 4197 0104 B81E253F 	 .word 1059397304
 4198 0108 00000000 	 .word NP
 4199 010c 00000000 	 .word Servo_PWMs
 4200 0110 00806D44 	 .word 1148026880
 4201 0114 00800944 	 .word 1141473280
 4202 0118 00000000 	 .word PWM_servo_fl
 4203 011c 00000000 	 .word PWM_servo_fr
 4204 0120 00000000 	 .word PWM_servo_rl
 4205 0124 00000000 	 .word PWM_servo_rr
 4206              	 .cfi_endproc
 4207              	.LFE236:
 4209              	 .global __aeabi_ui2d
 4210              	 .section .text.RC_Recive,"ax",%progbits
 4211              	 .align 2
 4212              	 .global RC_Recive
 4213              	 .code 16
 4214              	 .thumb_func
 4216              	RC_Recive:
 4217              	.LFB237:
 567:../main.c     **** 
 568:../main.c     **** void RC_Recive(void){
 4218              	 .loc 6 568 0
 4219              	 .cfi_startproc
 4220 0000 F8B5     	 push {r3,r4,r5,r6,r7,lr}
 4221              	.LCFI66:
 4222              	 .cfi_def_cfa_offset 24
 4223              	 .cfi_offset 3,-24
 4224              	 .cfi_offset 4,-20
 4225              	 .cfi_offset 5,-16
 4226              	 .cfi_offset 6,-12
 4227              	 .cfi_offset 7,-8
 4228              	 .cfi_offset 14,-4
 4229 0002 00AF     	 add r7,sp,#0
 4230              	.LCFI67:
 4231              	 .cfi_def_cfa_register 7
 569:../main.c     **** 
 570:../main.c     **** 	CAPTURE_Start(&CAPTURE_RC_Steering);
 4232              	 .loc 6 570 0
 4233 0004 784B     	 ldr r3,.L218
 4234 0006 181C     	 mov r0,r3
 4235 0008 FFF7FEFF 	 bl CAPTURE_Start
 571:../main.c     **** 	CAPTURE_Start(&CAPTURE_RC_Speed);
 4236              	 .loc 6 571 0
 4237 000c 774B     	 ldr r3,.L218+4
 4238 000e 181C     	 mov r0,r3
 4239 0010 FFF7FEFF 	 bl CAPTURE_Start
 572:../main.c     **** 
 573:../main.c     **** 	CAPTURE_GetCapturedTimeInNanoSec(&CAPTURE_RC_Steering, &captured_time_Steering);
 4240              	 .loc 6 573 0
 4241 0014 744A     	 ldr r2,.L218
 4242 0016 764B     	 ldr r3,.L218+8
 4243 0018 101C     	 mov r0,r2
 4244 001a 191C     	 mov r1,r3
 4245 001c FFF7FEFF 	 bl CAPTURE_GetCapturedTimeInNanoSec
 574:../main.c     **** 	CAPTURE_GetCapturedTimeInNanoSec(&CAPTURE_RC_Speed, &captured_time_Speed);
 4246              	 .loc 6 574 0
 4247 0020 724A     	 ldr r2,.L218+4
 4248 0022 744B     	 ldr r3,.L218+12
 4249 0024 101C     	 mov r0,r2
 4250 0026 191C     	 mov r1,r3
 4251 0028 FFF7FEFF 	 bl CAPTURE_GetCapturedTimeInNanoSec
 575:../main.c     **** 
 576:../main.c     **** 	if(RC_Speed_Stop == 1){
 4252              	 .loc 6 576 0
 4253 002c 724B     	 ldr r3,.L218+16
 4254 002e 1B78     	 ldrb r3,[r3]
 4255 0030 012B     	 cmp r3,#1
 4256 0032 5CD1     	 bne .L199
 577:../main.c     **** 		if((captured_time_Speed >= 1000000) && (captured_time_Speed <= 2000000)){
 4257              	 .loc 6 577 0
 4258 0034 6F4B     	 ldr r3,.L218+12
 4259 0036 1B68     	 ldr r3,[r3]
 4260 0038 704A     	 ldr r2,.L218+20
 4261 003a 9342     	 cmp r3,r2
 4262 003c 50D9     	 bls .L200
 4263              	 .loc 6 577 0 is_stmt 0 discriminator 1
 4264 003e 6D4B     	 ldr r3,.L218+12
 4265 0040 1B68     	 ldr r3,[r3]
 4266 0042 6F4A     	 ldr r2,.L218+24
 4267 0044 9342     	 cmp r3,r2
 4268 0046 4BD8     	 bhi .L200
 578:../main.c     **** 		  RC_Speed = ((double)captured_time_Speed - RC_NP_SPEED) * RC_Speed_ns_to_mps; // form +-0.6m/s
 4269              	 .loc 6 578 0 is_stmt 1
 4270 0048 6A4B     	 ldr r3,.L218+12
 4271 004a 1B68     	 ldr r3,[r3]
 4272 004c 181C     	 mov r0,r3
 4273 004e FFF7FEFF 	 bl __aeabi_ui2d
 4274 0052 031C     	 mov r3,r0
 4275 0054 0C1C     	 mov r4,r1
 4276 0056 181C     	 mov r0,r3
 4277 0058 211C     	 mov r1,r4
 4278 005a 0022     	 mov r2,#0
 4279 005c 694B     	 ldr r3,.L218+28
 4280 005e FFF7FEFF 	 bl __aeabi_dsub
 4281 0062 031C     	 mov r3,r0
 4282 0064 0C1C     	 mov r4,r1
 4283 0066 1D1C     	 mov r5,r3
 4284 0068 261C     	 mov r6,r4
 4285 006a 674B     	 ldr r3,.L218+32
 4286 006c 1B68     	 ldr r3,[r3]
 4287 006e 181C     	 add r0,r3,#0
 4288 0070 FFF7FEFF 	 bl __aeabi_f2d
 4289 0074 031C     	 mov r3,r0
 4290 0076 0C1C     	 mov r4,r1
 4291 0078 281C     	 mov r0,r5
 4292 007a 311C     	 mov r1,r6
 4293 007c 1A1C     	 mov r2,r3
 4294 007e 231C     	 mov r3,r4
 4295 0080 FFF7FEFF 	 bl __aeabi_dmul
 4296 0084 031C     	 mov r3,r0
 4297 0086 0C1C     	 mov r4,r1
 4298 0088 181C     	 mov r0,r3
 4299 008a 211C     	 mov r1,r4
 4300 008c FFF7FEFF 	 bl __aeabi_d2f
 4301 0090 021C     	 add r2,r0,#0
 4302 0092 5E4B     	 ldr r3,.L218+36
 4303 0094 1A60     	 str r2,[r3]
 579:../main.c     **** 		  if((RC_Speed < 0.1) && (RC_Speed > -0.1)) RC_Speed = 0; // to have accutal 0
 4304              	 .loc 6 579 0
 4305 0096 5D4B     	 ldr r3,.L218+36
 4306 0098 1B68     	 ldr r3,[r3]
 4307 009a 181C     	 add r0,r3,#0
 4308 009c FFF7FEFF 	 bl __aeabi_f2d
 4309 00a0 031C     	 mov r3,r0
 4310 00a2 0C1C     	 mov r4,r1
 4311 00a4 181C     	 mov r0,r3
 4312 00a6 211C     	 mov r1,r4
 4313 00a8 594A     	 ldr r2,.L218+40
 4314 00aa 5A4B     	 ldr r3,.L218+44
 4315 00ac FFF7FEFF 	 bl __aeabi_dcmplt
 4316 00b0 031E     	 sub r3,r0,#0
 4317 00b2 11D0     	 beq .L201
 4318              	 .loc 6 579 0 is_stmt 0 discriminator 1
 4319 00b4 554B     	 ldr r3,.L218+36
 4320 00b6 1B68     	 ldr r3,[r3]
 4321 00b8 181C     	 add r0,r3,#0
 4322 00ba FFF7FEFF 	 bl __aeabi_f2d
 4323 00be 031C     	 mov r3,r0
 4324 00c0 0C1C     	 mov r4,r1
 4325 00c2 181C     	 mov r0,r3
 4326 00c4 211C     	 mov r1,r4
 4327 00c6 524A     	 ldr r2,.L218+40
 4328 00c8 534B     	 ldr r3,.L218+48
 4329 00ca FFF7FEFF 	 bl __aeabi_dcmpgt
 4330 00ce 031E     	 sub r3,r0,#0
 4331 00d0 02D0     	 beq .L201
 4332              	 .loc 6 579 0 discriminator 2
 4333 00d2 4E4B     	 ldr r3,.L218+36
 4334 00d4 0022     	 mov r2,#0
 4335 00d6 1A60     	 str r2,[r3]
 4336              	.L201:
 580:../main.c     **** 		  RC_no_Speed_data_counter = 0;
 4337              	 .loc 6 580 0 is_stmt 1
 4338 00d8 504B     	 ldr r3,.L218+52
 4339 00da 0022     	 mov r2,#0
 4340 00dc 1A70     	 strb r2,[r3]
 4341 00de 09E0     	 b .L205
 4342              	.L200:
 581:../main.c     **** 		}
 582:../main.c     **** 		else{
 583:../main.c     **** 			RC_no_Speed_data_counter ++;
 4343              	 .loc 6 583 0
 4344 00e0 4E4B     	 ldr r3,.L218+52
 4345 00e2 1B78     	 ldrb r3,[r3]
 4346 00e4 0133     	 add r3,r3,#1
 4347 00e6 DAB2     	 uxtb r2,r3
 4348 00e8 4C4B     	 ldr r3,.L218+52
 4349 00ea 1A70     	 strb r2,[r3]
 4350 00ec 02E0     	 b .L205
 4351              	.L199:
 584:../main.c     **** 		}
 585:../main.c     **** 	}
 586:../main.c     **** 	else RC_Speed = 0;
 4352              	 .loc 6 586 0
 4353 00ee 474B     	 ldr r3,.L218+36
 4354 00f0 0022     	 mov r2,#0
 4355 00f2 1A60     	 str r2,[r3]
 4356              	.L205:
 587:../main.c     **** 
 588:../main.c     **** 	if((captured_time_Steering >= 1000000) && (captured_time_Steering <= 2000000)){
 4357              	 .loc 6 588 0
 4358 00f4 3E4B     	 ldr r3,.L218+8
 4359 00f6 1B68     	 ldr r3,[r3]
 4360 00f8 404A     	 ldr r2,.L218+20
 4361 00fa 9342     	 cmp r3,r2
 4362 00fc 44D9     	 bls .L206
 4363              	 .loc 6 588 0 is_stmt 0 discriminator 1
 4364 00fe 3C4B     	 ldr r3,.L218+8
 4365 0100 1B68     	 ldr r3,[r3]
 4366 0102 3F4A     	 ldr r2,.L218+24
 4367 0104 9342     	 cmp r3,r2
 4368 0106 3FD8     	 bhi .L206
 589:../main.c     **** 	  RC_Steering = (((double)captured_time_Steering - RC_NP_STEERING) * RC_Steering_ns_to_deg); // fo
 4369              	 .loc 6 589 0 is_stmt 1
 4370 0108 394B     	 ldr r3,.L218+8
 4371 010a 1B68     	 ldr r3,[r3]
 4372 010c 181C     	 mov r0,r3
 4373 010e FFF7FEFF 	 bl __aeabi_ui2d
 4374 0112 031C     	 mov r3,r0
 4375 0114 0C1C     	 mov r4,r1
 4376 0116 181C     	 mov r0,r3
 4377 0118 211C     	 mov r1,r4
 4378 011a 0022     	 mov r2,#0
 4379 011c 404B     	 ldr r3,.L218+56
 4380 011e FFF7FEFF 	 bl __aeabi_dsub
 4381 0122 031C     	 mov r3,r0
 4382 0124 0C1C     	 mov r4,r1
 4383 0126 1D1C     	 mov r5,r3
 4384 0128 261C     	 mov r6,r4
 4385 012a 3E4B     	 ldr r3,.L218+60
 4386 012c 1B68     	 ldr r3,[r3]
 4387 012e 181C     	 add r0,r3,#0
 4388 0130 FFF7FEFF 	 bl __aeabi_f2d
 4389 0134 031C     	 mov r3,r0
 4390 0136 0C1C     	 mov r4,r1
 4391 0138 281C     	 mov r0,r5
 4392 013a 311C     	 mov r1,r6
 4393 013c 1A1C     	 mov r2,r3
 4394 013e 231C     	 mov r3,r4
 4395 0140 FFF7FEFF 	 bl __aeabi_dmul
 4396 0144 031C     	 mov r3,r0
 4397 0146 0C1C     	 mov r4,r1
 4398 0148 181C     	 mov r0,r3
 4399 014a 211C     	 mov r1,r4
 4400 014c FFF7FEFF 	 bl __aeabi_d2f
 4401 0150 021C     	 add r2,r0,#0
 4402 0152 354B     	 ldr r3,.L218+64
 4403 0154 1A60     	 str r2,[r3]
 590:../main.c     **** 	  if((RC_Steering < 2) && (RC_Steering > -2)) RC_Steering = 0; // to have accutal 0
 4404              	 .loc 6 590 0
 4405 0156 344B     	 ldr r3,.L218+64
 4406 0158 1B68     	 ldr r3,[r3]
 4407 015a 181C     	 add r0,r3,#0
 4408 015c 8021     	 mov r1,#128
 4409 015e C905     	 lsl r1,r1,#23
 4410 0160 FFF7FEFF 	 bl __aeabi_fcmplt
 4411 0164 031E     	 sub r3,r0,#0
 4412 0166 0BD0     	 beq .L207
 4413              	 .loc 6 590 0 is_stmt 0 discriminator 1
 4414 0168 2F4B     	 ldr r3,.L218+64
 4415 016a 1B68     	 ldr r3,[r3]
 4416 016c 181C     	 add r0,r3,#0
 4417 016e C021     	 mov r1,#192
 4418 0170 0906     	 lsl r1,r1,#24
 4419 0172 FFF7FEFF 	 bl __aeabi_fcmpgt
 4420 0176 031E     	 sub r3,r0,#0
 4421 0178 02D0     	 beq .L207
 4422              	 .loc 6 590 0 discriminator 2
 4423 017a 2B4B     	 ldr r3,.L218+64
 4424 017c 0022     	 mov r2,#0
 4425 017e 1A60     	 str r2,[r3]
 4426              	.L207:
 591:../main.c     **** 	  RC_no_Steering_data_counter = 0;
 4427              	 .loc 6 591 0 is_stmt 1
 4428 0180 2A4B     	 ldr r3,.L218+68
 4429 0182 0022     	 mov r2,#0
 4430 0184 1A70     	 strb r2,[r3]
 4431 0186 05E0     	 b .L210
 4432              	.L206:
 592:../main.c     **** 	}
 593:../main.c     **** 	else{
 594:../main.c     **** 	  RC_no_Steering_data_counter ++;
 4433              	 .loc 6 594 0
 4434 0188 284B     	 ldr r3,.L218+68
 4435 018a 1B78     	 ldrb r3,[r3]
 4436 018c 0133     	 add r3,r3,#1
 4437 018e DAB2     	 uxtb r2,r3
 4438 0190 264B     	 ldr r3,.L218+68
 4439 0192 1A70     	 strb r2,[r3]
 4440              	.L210:
 595:../main.c     **** 	}
 596:../main.c     **** 
 597:../main.c     **** 	if(RC_no_Speed_data_counter > 20 || RC_no_Steering_data_counter > 20 ){ // internall values not ok
 4441              	 .loc 6 597 0
 4442 0194 214B     	 ldr r3,.L218+52
 4443 0196 1B78     	 ldrb r3,[r3]
 4444 0198 142B     	 cmp r3,#20
 4445 019a 03D8     	 bhi .L211
 4446              	 .loc 6 597 0 is_stmt 0 discriminator 1
 4447 019c 234B     	 ldr r3,.L218+68
 4448 019e 1B78     	 ldrb r3,[r3]
 4449 01a0 142B     	 cmp r3,#20
 4450 01a2 10D9     	 bls .L212
 4451              	.L211:
 598:../main.c     **** 	  DIGITAL_IO_SetOutputLow(&RC_no_data_LED);
 4452              	 .loc 6 598 0 is_stmt 1
 4453 01a4 224B     	 ldr r3,.L218+72
 4454 01a6 181C     	 mov r0,r3
 4455 01a8 FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 599:../main.c     **** 	  RC_no_Speed_data_counter = 20;
 4456              	 .loc 6 599 0
 4457 01ac 1B4B     	 ldr r3,.L218+52
 4458 01ae 1422     	 mov r2,#20
 4459 01b0 1A70     	 strb r2,[r3]
 600:../main.c     **** 	  RC_no_Steering_data_counter = 20;
 4460              	 .loc 6 600 0
 4461 01b2 1E4B     	 ldr r3,.L218+68
 4462 01b4 1422     	 mov r2,#20
 4463 01b6 1A70     	 strb r2,[r3]
 601:../main.c     **** 
 602:../main.c     **** 	  //set gobal vars 0
 603:../main.c     **** 	  Driving_speed = 0;
 4464              	 .loc 6 603 0
 4465 01b8 1E4B     	 ldr r3,.L218+76
 4466 01ba 0022     	 mov r2,#0
 4467 01bc 1A60     	 str r2,[r3]
 604:../main.c     **** 	  Steering_direction = 0;
 4468              	 .loc 6 604 0
 4469 01be 1E4B     	 ldr r3,.L218+80
 4470 01c0 0022     	 mov r2,#0
 4471 01c2 1A60     	 str r2,[r3]
 4472 01c4 0BE0     	 b .L213
 4473              	.L212:
 605:../main.c     **** 	}
 606:../main.c     **** 	else{ // values filternig
 607:../main.c     **** 	  DIGITAL_IO_SetOutputHigh(&RC_no_data_LED);
 4474              	 .loc 6 607 0
 4475 01c6 1A4B     	 ldr r3,.L218+72
 4476 01c8 181C     	 mov r0,r3
 4477 01ca FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 608:../main.c     **** 
 609:../main.c     **** 	  //set gobal vars stanart
 610:../main.c     **** 	  Driving_speed = RC_Speed;
 4478              	 .loc 6 610 0
 4479 01ce 0F4B     	 ldr r3,.L218+36
 4480 01d0 1A68     	 ldr r2,[r3]
 4481 01d2 184B     	 ldr r3,.L218+76
 4482 01d4 1A60     	 str r2,[r3]
 611:../main.c     **** 	  Steering_direction = RC_Steering;
 4483              	 .loc 6 611 0
 4484 01d6 144B     	 ldr r3,.L218+64
 4485 01d8 1A68     	 ldr r2,[r3]
 4486 01da 174B     	 ldr r3,.L218+80
 4487 01dc 1A60     	 str r2,[r3]
 4488              	.L213:
 612:../main.c     **** 	}
 613:../main.c     **** 
 614:../main.c     **** 	New_Input = 1; //goalb var to tell it that there in new data to calculate
 4489              	 .loc 6 614 0
 4490 01de 174B     	 ldr r3,.L218+84
 4491 01e0 0122     	 mov r2,#1
 4492 01e2 1A70     	 strb r2,[r3]
 615:../main.c     **** }
 4493              	 .loc 6 615 0
 4494 01e4 BD46     	 mov sp,r7
 4495              	 
 4496 01e6 F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 4497              	.L219:
 4498              	 .align 2
 4499              	.L218:
 4500 01e8 00000000 	 .word CAPTURE_RC_Steering
 4501 01ec 00000000 	 .word CAPTURE_RC_Speed
 4502 01f0 00000000 	 .word captured_time_Steering
 4503 01f4 00000000 	 .word captured_time_Speed
 4504 01f8 00000000 	 .word RC_Speed_Stop
 4505 01fc 3F420F00 	 .word 999999
 4506 0200 80841E00 	 .word 2000000
 4507 0204 60E33641 	 .word 1094116192
 4508 0208 00000000 	 .word RC_Speed_ns_to_mps
 4509 020c 00000000 	 .word RC_Speed
 4510 0210 9A999999 	 .word -1717986918
 4511 0214 9999B93F 	 .word 1069128089
 4512 0218 9999B9BF 	 .word -1078355559
 4513 021c 00000000 	 .word RC_no_Speed_data_counter
 4514 0220 A07F3741 	 .word 1094156192
 4515 0224 00000000 	 .word RC_Steering_ns_to_deg
 4516 0228 00000000 	 .word RC_Steering
 4517 022c 00000000 	 .word RC_no_Steering_data_counter
 4518 0230 00000000 	 .word RC_no_data_LED
 4519 0234 00000000 	 .word Driving_speed
 4520 0238 00000000 	 .word Steering_direction
 4521 023c 00000000 	 .word New_Input
 4522              	 .cfi_endproc
 4523              	.LFE237:
 4525              	 .section .text.IRQ12_Handler,"ax",%progbits
 4526              	 .align 2
 4527              	 .global IRQ12_Handler
 4528              	 .code 16
 4529              	 .thumb_func
 4531              	IRQ12_Handler:
 4532              	.LFB238:
 616:../main.c     **** 
 617:../main.c     **** void RC_Connected_ISR(void){
 4533              	 .loc 6 617 0
 4534              	 .cfi_startproc
 4535 0000 80B5     	 push {r7,lr}
 4536              	.LCFI68:
 4537              	 .cfi_def_cfa_offset 8
 4538              	 .cfi_offset 7,-8
 4539              	 .cfi_offset 14,-4
 4540 0002 82B0     	 sub sp,sp,#8
 4541              	.LCFI69:
 4542              	 .cfi_def_cfa_offset 16
 4543 0004 00AF     	 add r7,sp,#0
 4544              	.LCFI70:
 4545              	 .cfi_def_cfa_register 7
 618:../main.c     **** 
 619:../main.c     **** 	if(RC_controll == 1){
 4546              	 .loc 6 619 0
 4547 0006 294B     	 ldr r3,.L226
 4548 0008 1B78     	 ldrb r3,[r3]
 4549 000a DBB2     	 uxtb r3,r3
 4550 000c 012B     	 cmp r3,#1
 4551 000e 49D1     	 bne .L220
 620:../main.c     **** 
 621:../main.c     **** 		RC_Gear_state =  PIN_INTERRUPT_GetPinValue(&RC_Connected); // pin haig or low
 4552              	 .loc 6 621 0
 4553 0010 274B     	 ldr r3,.L226+4
 4554 0012 181C     	 mov r0,r3
 4555 0014 FFF7FEFF 	 bl PIN_INTERRUPT_GetPinValue
 4556 0018 031C     	 mov r3,r0
 4557 001a DAB2     	 uxtb r2,r3
 4558 001c 254B     	 ldr r3,.L226+8
 4559 001e 1A70     	 strb r2,[r3]
 622:../main.c     **** 
 623:../main.c     **** 		if(RC_Gear_state == 0){// do nothing during high
 4560              	 .loc 6 623 0
 4561 0020 244B     	 ldr r3,.L226+8
 4562 0022 1B78     	 ldrb r3,[r3]
 4563 0024 DBB2     	 uxtb r3,r3
 4564 0026 002B     	 cmp r3,#0
 4565 0028 3CD1     	 bne .L220
 4566              	.LBB4:
 624:../main.c     **** 
 625:../main.c     **** 			RC_Recive(); // get speed and steering data
 4567              	 .loc 6 625 0
 4568 002a FFF7FEFF 	 bl RC_Recive
 626:../main.c     **** 
 627:../main.c     **** 			uint32_t RC_Gear_on_time_100us = RC_gear_100us_counter;
 4569              	 .loc 6 627 0
 4570 002e 224B     	 ldr r3,.L226+12
 4571 0030 1B68     	 ldr r3,[r3]
 4572 0032 7B60     	 str r3,[r7,#4]
 628:../main.c     **** 			RC_gear_100us_counter = 0;
 4573              	 .loc 6 628 0
 4574 0034 204B     	 ldr r3,.L226+12
 4575 0036 0022     	 mov r2,#0
 4576 0038 1A60     	 str r2,[r3]
 629:../main.c     **** 
 630:../main.c     **** 			if((80 < RC_Gear_on_time_100us) && (RC_Gear_on_time_100us < 150)) RC_Gear_duty= 0;
 4577              	 .loc 6 630 0
 4578 003a 7B68     	 ldr r3,[r7,#4]
 4579 003c 502B     	 cmp r3,#80
 4580 003e 06D9     	 bls .L222
 4581              	 .loc 6 630 0 is_stmt 0 discriminator 1
 4582 0040 7B68     	 ldr r3,[r7,#4]
 4583 0042 952B     	 cmp r3,#149
 4584 0044 03D8     	 bhi .L222
 4585              	 .loc 6 630 0 discriminator 2
 4586 0046 1D4B     	 ldr r3,.L226+16
 4587 0048 0022     	 mov r2,#0
 4588 004a 1A70     	 strb r2,[r3]
 4589 004c 0CE0     	 b .L223
 4590              	.L222:
 631:../main.c     **** 			else if ((150 < RC_Gear_on_time_100us) && (RC_Gear_on_time_100us < 210)) RC_Gear_duty = 1;
 4591              	 .loc 6 631 0 is_stmt 1
 4592 004e 7B68     	 ldr r3,[r7,#4]
 4593 0050 962B     	 cmp r3,#150
 4594 0052 06D9     	 bls .L224
 4595              	 .loc 6 631 0 is_stmt 0 discriminator 1
 4596 0054 7B68     	 ldr r3,[r7,#4]
 4597 0056 D12B     	 cmp r3,#209
 4598 0058 03D8     	 bhi .L224
 4599              	 .loc 6 631 0 discriminator 2
 4600 005a 184B     	 ldr r3,.L226+16
 4601 005c 0122     	 mov r2,#1
 4602 005e 1A70     	 strb r2,[r3]
 4603 0060 02E0     	 b .L223
 4604              	.L224:
 632:../main.c     **** 			else RC_Gear_duty = 2;
 4605              	 .loc 6 632 0 is_stmt 1
 4606 0062 164B     	 ldr r3,.L226+16
 4607 0064 0222     	 mov r2,#2
 4608 0066 1A70     	 strb r2,[r3]
 4609              	.L223:
 633:../main.c     **** 
 634:../main.c     **** 			if(RC_Gear_duty == 1 && RC_Gear_duty_OLD == 0){
 4610              	 .loc 6 634 0
 4611 0068 144B     	 ldr r3,.L226+16
 4612 006a 1B78     	 ldrb r3,[r3]
 4613 006c DBB2     	 uxtb r3,r3
 4614 006e 012B     	 cmp r3,#1
 4615 0070 13D1     	 bne .L225
 4616              	 .loc 6 634 0 is_stmt 0 discriminator 1
 4617 0072 134B     	 ldr r3,.L226+20
 4618 0074 1B78     	 ldrb r3,[r3]
 4619 0076 DBB2     	 uxtb r3,r3
 4620 0078 002B     	 cmp r3,#0
 4621 007a 0ED1     	 bne .L225
 635:../main.c     **** 				Steering_mode ++;
 4622              	 .loc 6 635 0 is_stmt 1
 4623 007c 114B     	 ldr r3,.L226+24
 4624 007e 1B78     	 ldrb r3,[r3]
 4625 0080 DBB2     	 uxtb r3,r3
 4626 0082 0133     	 add r3,r3,#1
 4627 0084 DAB2     	 uxtb r2,r3
 4628 0086 0F4B     	 ldr r3,.L226+24
 4629 0088 1A70     	 strb r2,[r3]
 636:../main.c     **** 				if(Steering_mode > 5)Steering_mode = 0;
 4630              	 .loc 6 636 0
 4631 008a 0E4B     	 ldr r3,.L226+24
 4632 008c 1B78     	 ldrb r3,[r3]
 4633 008e DBB2     	 uxtb r3,r3
 4634 0090 052B     	 cmp r3,#5
 4635 0092 02D9     	 bls .L225
 4636              	 .loc 6 636 0 is_stmt 0 discriminator 1
 4637 0094 0B4B     	 ldr r3,.L226+24
 4638 0096 0022     	 mov r2,#0
 4639 0098 1A70     	 strb r2,[r3]
 4640              	.L225:
 637:../main.c     **** 			}
 638:../main.c     **** 		RC_Gear_duty_OLD = RC_Gear_duty;
 4641              	 .loc 6 638 0 is_stmt 1
 4642 009a 084B     	 ldr r3,.L226+16
 4643 009c 1B78     	 ldrb r3,[r3]
 4644 009e DAB2     	 uxtb r2,r3
 4645 00a0 074B     	 ldr r3,.L226+20
 4646 00a2 1A70     	 strb r2,[r3]
 4647              	.L220:
 4648              	.LBE4:
 639:../main.c     **** 		}
 640:../main.c     **** 	}
 641:../main.c     **** }
 4649              	 .loc 6 641 0
 4650 00a4 BD46     	 mov sp,r7
 4651 00a6 02B0     	 add sp,sp,#8
 4652              	 
 4653 00a8 80BD     	 pop {r7,pc}
 4654              	.L227:
 4655 00aa C046     	 .align 2
 4656              	.L226:
 4657 00ac 00000000 	 .word RC_controll
 4658 00b0 00000000 	 .word RC_Connected
 4659 00b4 00000000 	 .word RC_Gear_state
 4660 00b8 00000000 	 .word RC_gear_100us_counter
 4661 00bc 00000000 	 .word RC_Gear_duty
 4662 00c0 00000000 	 .word RC_Gear_duty_OLD
 4663 00c4 00000000 	 .word Steering_mode
 4664              	 .cfi_endproc
 4665              	.LFE238:
 4667              	 .section .text.IRQ6_Handler,"ax",%progbits
 4668              	 .align 2
 4669              	 .global IRQ6_Handler
 4670              	 .code 16
 4671              	 .thumb_func
 4673              	IRQ6_Handler:
 4674              	.LFB239:
 642:../main.c     **** 
 643:../main.c     **** void RC_AUX1_ISR(void){
 4675              	 .loc 6 643 0
 4676              	 .cfi_startproc
 4677 0000 80B5     	 push {r7,lr}
 4678              	.LCFI71:
 4679              	 .cfi_def_cfa_offset 8
 4680              	 .cfi_offset 7,-8
 4681              	 .cfi_offset 14,-4
 4682 0002 82B0     	 sub sp,sp,#8
 4683              	.LCFI72:
 4684              	 .cfi_def_cfa_offset 16
 4685 0004 00AF     	 add r7,sp,#0
 4686              	.LCFI73:
 4687              	 .cfi_def_cfa_register 7
 644:../main.c     **** 	if(RC_controll == 1){
 4688              	 .loc 6 644 0
 4689 0006 1F4B     	 ldr r3,.L234
 4690 0008 1B78     	 ldrb r3,[r3]
 4691 000a DBB2     	 uxtb r3,r3
 4692 000c 012B     	 cmp r3,#1
 4693 000e 35D1     	 bne .L228
 645:../main.c     **** 		RC_AUX1_state =  PIN_INTERRUPT_GetPinValue(&RC_AUX1); // pin haig or low
 4694              	 .loc 6 645 0
 4695 0010 1D4B     	 ldr r3,.L234+4
 4696 0012 181C     	 mov r0,r3
 4697 0014 FFF7FEFF 	 bl PIN_INTERRUPT_GetPinValue
 4698 0018 031C     	 mov r3,r0
 4699 001a DAB2     	 uxtb r2,r3
 4700 001c 1B4B     	 ldr r3,.L234+8
 4701 001e 1A70     	 strb r2,[r3]
 646:../main.c     **** 
 647:../main.c     **** 		if(RC_AUX1_state == 0){// do nothing during high
 4702              	 .loc 6 647 0
 4703 0020 1A4B     	 ldr r3,.L234+8
 4704 0022 1B78     	 ldrb r3,[r3]
 4705 0024 DBB2     	 uxtb r3,r3
 4706 0026 002B     	 cmp r3,#0
 4707 0028 28D1     	 bne .L228
 4708              	.LBB5:
 648:../main.c     **** 			uint32_t RC_AUX1_on_time_100us = RC_AUX1_100us_counter;
 4709              	 .loc 6 648 0
 4710 002a 194B     	 ldr r3,.L234+12
 4711 002c 1B68     	 ldr r3,[r3]
 4712 002e 7B60     	 str r3,[r7,#4]
 649:../main.c     **** 			RC_AUX1_100us_counter = 0;
 4713              	 .loc 6 649 0
 4714 0030 174B     	 ldr r3,.L234+12
 4715 0032 0022     	 mov r2,#0
 4716 0034 1A60     	 str r2,[r3]
 650:../main.c     **** 
 651:../main.c     **** 			if((80 < RC_AUX1_on_time_100us) && (RC_AUX1_on_time_100us < 150)) RC_AUX1_duty= 0;
 4717              	 .loc 6 651 0
 4718 0036 7B68     	 ldr r3,[r7,#4]
 4719 0038 502B     	 cmp r3,#80
 4720 003a 06D9     	 bls .L230
 4721              	 .loc 6 651 0 is_stmt 0 discriminator 1
 4722 003c 7B68     	 ldr r3,[r7,#4]
 4723 003e 952B     	 cmp r3,#149
 4724 0040 03D8     	 bhi .L230
 4725              	 .loc 6 651 0 discriminator 2
 4726 0042 144B     	 ldr r3,.L234+16
 4727 0044 0022     	 mov r2,#0
 4728 0046 1A70     	 strb r2,[r3]
 4729 0048 0CE0     	 b .L231
 4730              	.L230:
 652:../main.c     **** 			else if ((150 < RC_AUX1_on_time_100us) && (RC_AUX1_on_time_100us < 210)) RC_AUX1_duty = 1;
 4731              	 .loc 6 652 0 is_stmt 1
 4732 004a 7B68     	 ldr r3,[r7,#4]
 4733 004c 962B     	 cmp r3,#150
 4734 004e 06D9     	 bls .L232
 4735              	 .loc 6 652 0 is_stmt 0 discriminator 1
 4736 0050 7B68     	 ldr r3,[r7,#4]
 4737 0052 D12B     	 cmp r3,#209
 4738 0054 03D8     	 bhi .L232
 4739              	 .loc 6 652 0 discriminator 2
 4740 0056 0F4B     	 ldr r3,.L234+16
 4741 0058 0122     	 mov r2,#1
 4742 005a 1A70     	 strb r2,[r3]
 4743 005c 02E0     	 b .L231
 4744              	.L232:
 653:../main.c     **** 			else RC_AUX1_duty = 2;
 4745              	 .loc 6 653 0 is_stmt 1
 4746 005e 0D4B     	 ldr r3,.L234+16
 4747 0060 0222     	 mov r2,#2
 4748 0062 1A70     	 strb r2,[r3]
 4749              	.L231:
 654:../main.c     **** 
 655:../main.c     **** 
 656:../main.c     **** 			if(RC_AUX1_duty == 1)RC_Speed_Stop = 1;
 4750              	 .loc 6 656 0
 4751 0064 0B4B     	 ldr r3,.L234+16
 4752 0066 1B78     	 ldrb r3,[r3]
 4753 0068 DBB2     	 uxtb r3,r3
 4754 006a 012B     	 cmp r3,#1
 4755 006c 03D1     	 bne .L233
 4756              	 .loc 6 656 0 is_stmt 0 discriminator 1
 4757 006e 0A4B     	 ldr r3,.L234+20
 4758 0070 0122     	 mov r2,#1
 4759 0072 1A70     	 strb r2,[r3]
 4760 0074 02E0     	 b .L228
 4761              	.L233:
 657:../main.c     **** 			else RC_Speed_Stop = 0;
 4762              	 .loc 6 657 0 is_stmt 1
 4763 0076 084B     	 ldr r3,.L234+20
 4764 0078 0022     	 mov r2,#0
 4765 007a 1A70     	 strb r2,[r3]
 4766              	.L228:
 4767              	.LBE5:
 658:../main.c     **** 		}
 659:../main.c     **** 	}
 660:../main.c     **** }
 4768              	 .loc 6 660 0
 4769 007c BD46     	 mov sp,r7
 4770 007e 02B0     	 add sp,sp,#8
 4771              	 
 4772 0080 80BD     	 pop {r7,pc}
 4773              	.L235:
 4774 0082 C046     	 .align 2
 4775              	.L234:
 4776 0084 00000000 	 .word RC_controll
 4777 0088 00000000 	 .word RC_AUX1
 4778 008c 00000000 	 .word RC_AUX1_state
 4779 0090 00000000 	 .word RC_AUX1_100us_counter
 4780 0094 00000000 	 .word RC_AUX1_duty
 4781 0098 00000000 	 .word RC_Speed_Stop
 4782              	 .cfi_endproc
 4783              	.LFE239:
 4785              	 .section .rodata
 4786              	 .align 2
 4787              	.LC0:
 4788 0000 01       	 .byte 1
 4789 0001 01       	 .byte 1
 4790 0002 01       	 .byte 1
 4791 0003 01       	 .byte 1
 4792              	 .section .text.IRQ7_Handler,"ax",%progbits
 4793              	 .align 2
 4794              	 .global IRQ7_Handler
 4795              	 .code 16
 4796              	 .thumb_func
 4798              	IRQ7_Handler:
 4799              	.LFB240:
 661:../main.c     **** 
 662:../main.c     **** void TIMER_CONTROL_ISR(void){
 4800              	 .loc 6 662 0
 4801              	 .cfi_startproc
 4802 0000 80B5     	 push {r7,lr}
 4803              	.LCFI74:
 4804              	 .cfi_def_cfa_offset 8
 4805              	 .cfi_offset 7,-8
 4806              	 .cfi_offset 14,-4
 4807 0002 82B0     	 sub sp,sp,#8
 4808              	.LCFI75:
 4809              	 .cfi_def_cfa_offset 16
 4810 0004 00AF     	 add r7,sp,#0
 4811              	.LCFI76:
 4812              	 .cfi_def_cfa_register 7
 663:../main.c     **** 	DIGITAL_IO_SetOutputHigh(&CALC_TIME_INDICATOR);
 4813              	 .loc 6 663 0
 4814 0006 3A4B     	 ldr r3,.L241
 4815 0008 181C     	 mov r0,r3
 4816 000a FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 664:../main.c     **** 	mode_led(Steering_mode);
 4817              	 .loc 6 664 0
 4818 000e 394B     	 ldr r3,.L241+4
 4819 0010 1B78     	 ldrb r3,[r3]
 4820 0012 DBB2     	 uxtb r3,r3
 4821 0014 181C     	 mov r0,r3
 4822 0016 FFF7FEFF 	 bl mode_led
 665:../main.c     **** 
 666:../main.c     **** 	if(RC_controll == 1){
 4823              	 .loc 6 666 0
 4824 001a 374B     	 ldr r3,.L241+8
 4825 001c 1B78     	 ldrb r3,[r3]
 4826 001e DBB2     	 uxtb r3,r3
 4827 0020 012B     	 cmp r3,#1
 4828 0022 07D1     	 bne .L237
 667:../main.c     **** 		if( NO_New_Input_counter > 9){
 4829              	 .loc 6 667 0
 4830 0024 354B     	 ldr r3,.L241+12
 4831 0026 1B68     	 ldr r3,[r3]
 4832 0028 092B     	 cmp r3,#9
 4833 002a 03D9     	 bls .L237
 668:../main.c     **** 			DIGITAL_IO_SetOutputLow(&RC_no_data_LED);
 4834              	 .loc 6 668 0
 4835 002c 344B     	 ldr r3,.L241+16
 4836 002e 181C     	 mov r0,r3
 4837 0030 FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 4838              	.L237:
 669:../main.c     **** 		}
 670:../main.c     **** 	}
 671:../main.c     **** 
 672:../main.c     **** 
 673:../main.c     **** 	if(New_Input == 1){
 4839              	 .loc 6 673 0
 4840 0034 334B     	 ldr r3,.L241+20
 4841 0036 1B78     	 ldrb r3,[r3]
 4842 0038 DBB2     	 uxtb r3,r3
 4843 003a 012B     	 cmp r3,#1
 4844 003c 0FD1     	 bne .L238
 674:../main.c     **** 	Steering_Function(Steering_direction, Driving_speed, Steering_mode);
 4845              	 .loc 6 674 0
 4846 003e 324B     	 ldr r3,.L241+24
 4847 0040 1968     	 ldr r1,[r3]
 4848 0042 324B     	 ldr r3,.L241+28
 4849 0044 1A68     	 ldr r2,[r3]
 4850 0046 2B4B     	 ldr r3,.L241+4
 4851 0048 1B78     	 ldrb r3,[r3]
 4852 004a DBB2     	 uxtb r3,r3
 4853 004c 081C     	 add r0,r1,#0
 4854 004e 111C     	 add r1,r2,#0
 4855 0050 1A1C     	 mov r2,r3
 4856 0052 FFF7FEFF 	 bl Steering_Function
 675:../main.c     **** 	NO_New_Input_counter = 0;
 4857              	 .loc 6 675 0
 4858 0056 294B     	 ldr r3,.L241+12
 4859 0058 0022     	 mov r2,#0
 4860 005a 1A60     	 str r2,[r3]
 4861 005c 23E0     	 b .L239
 4862              	.L238:
 676:../main.c     **** 	}
 677:../main.c     **** 	else{
 678:../main.c     **** 		NO_New_Input_counter ++;
 4863              	 .loc 6 678 0
 4864 005e 274B     	 ldr r3,.L241+12
 4865 0060 1B68     	 ldr r3,[r3]
 4866 0062 5A1C     	 add r2,r3,#1
 4867 0064 254B     	 ldr r3,.L241+12
 4868 0066 1A60     	 str r2,[r3]
 679:../main.c     **** 		if( NO_New_Input_counter > 10){
 4869              	 .loc 6 679 0
 4870 0068 244B     	 ldr r3,.L241+12
 4871 006a 1B68     	 ldr r3,[r3]
 4872 006c 0A2B     	 cmp r3,#10
 4873 006e 1AD9     	 bls .L239
 680:../main.c     **** 			NO_New_Input_counter = 10;
 4874              	 .loc 6 680 0
 4875 0070 224B     	 ldr r3,.L241+12
 4876 0072 0A22     	 mov r2,#10
 4877 0074 1A60     	 str r2,[r3]
 681:../main.c     **** 
 682:../main.c     **** 			  Steering_Angles[0] = 0;
 4878              	 .loc 6 682 0
 4879 0076 264B     	 ldr r3,.L241+32
 4880 0078 0022     	 mov r2,#0
 4881 007a 1A60     	 str r2,[r3]
 683:../main.c     **** 			  Steering_Angles[1] = 0;
 4882              	 .loc 6 683 0
 4883 007c 244B     	 ldr r3,.L241+32
 4884 007e 0022     	 mov r2,#0
 4885 0080 5A60     	 str r2,[r3,#4]
 684:../main.c     **** 			  Steering_Angles[2] = 0;
 4886              	 .loc 6 684 0
 4887 0082 234B     	 ldr r3,.L241+32
 4888 0084 0022     	 mov r2,#0
 4889 0086 9A60     	 str r2,[r3,#8]
 685:../main.c     **** 			  Steering_Angles[3] = 0;
 4890              	 .loc 6 685 0
 4891 0088 214B     	 ldr r3,.L241+32
 4892 008a 0022     	 mov r2,#0
 4893 008c DA60     	 str r2,[r3,#12]
 686:../main.c     **** 
 687:../main.c     **** 			  Speeds[0] = 0;
 4894              	 .loc 6 687 0
 4895 008e 214B     	 ldr r3,.L241+36
 4896 0090 0022     	 mov r2,#0
 4897 0092 1A60     	 str r2,[r3]
 688:../main.c     **** 			  Speeds[1] = 0;
 4898              	 .loc 6 688 0
 4899 0094 1F4B     	 ldr r3,.L241+36
 4900 0096 0022     	 mov r2,#0
 4901 0098 5A60     	 str r2,[r3,#4]
 689:../main.c     **** 			  Speeds[2] = 0;
 4902              	 .loc 6 689 0
 4903 009a 1E4B     	 ldr r3,.L241+36
 4904 009c 0022     	 mov r2,#0
 4905 009e 9A60     	 str r2,[r3,#8]
 690:../main.c     **** 			  Speeds[3] = 0;
 4906              	 .loc 6 690 0
 4907 00a0 1C4B     	 ldr r3,.L241+36
 4908 00a2 0022     	 mov r2,#0
 4909 00a4 DA60     	 str r2,[r3,#12]
 4910              	.L239:
 691:../main.c     **** 		}
 692:../main.c     **** 	}
 693:../main.c     **** 
 694:../main.c     **** 	//send traget speeds to inverter
 695:../main.c     **** 	CAN_send_Speeds(Speeds);
 4911              	 .loc 6 695 0
 4912 00a6 1B4B     	 ldr r3,.L241+36
 4913 00a8 181C     	 mov r0,r3
 4914 00aa FFF7FEFF 	 bl CAN_send_Speeds
 696:../main.c     **** 	//set Angles PWM
 697:../main.c     **** 	Steering_set_Angles(Steering_Angles);
 4915              	 .loc 6 697 0
 4916 00ae 184B     	 ldr r3,.L241+32
 4917 00b0 181C     	 mov r0,r3
 4918 00b2 FFF7FEFF 	 bl Steering_set_Angles
 698:../main.c     **** 
 699:../main.c     **** 	//
 700:../main.c     **** 	if(reset_distance == 1){
 4919              	 .loc 6 700 0
 4920 00b6 184B     	 ldr r3,.L241+40
 4921 00b8 1B78     	 ldrb r3,[r3]
 4922 00ba DBB2     	 uxtb r3,r3
 4923 00bc 012B     	 cmp r3,#1
 4924 00be 10D1     	 bne .L240
 4925              	.LBB6:
 701:../main.c     **** 		reset_distance = 0;
 4926              	 .loc 6 701 0
 4927 00c0 154B     	 ldr r3,.L241+40
 4928 00c2 0022     	 mov r2,#0
 4929 00c4 1A70     	 strb r2,[r3]
 702:../main.c     **** 		uint8_t all[4] = {1,1,1,1};
 4930              	 .loc 6 702 0
 4931 00c6 3A1D     	 add r2,r7,#4
 4932 00c8 144B     	 ldr r3,.L241+44
 4933 00ca 111C     	 mov r1,r2
 4934 00cc 1A1C     	 mov r2,r3
 4935 00ce 0423     	 mov r3,#4
 4936 00d0 081C     	 mov r0,r1
 4937 00d2 111C     	 mov r1,r2
 4938 00d4 1A1C     	 mov r2,r3
 4939 00d6 FFF7FEFF 	 bl memcpy
 703:../main.c     **** 		CAN_reset_distance(all);
 4940              	 .loc 6 703 0
 4941 00da 3B1D     	 add r3,r7,#4
 4942 00dc 181C     	 mov r0,r3
 4943 00de FFF7FEFF 	 bl CAN_reset_distance
 4944              	.L240:
 4945              	.LBE6:
 704:../main.c     **** 	}
 705:../main.c     **** 
 706:../main.c     **** 
 707:../main.c     **** 	DIGITAL_IO_SetOutputLow(&CALC_TIME_INDICATOR);
 4946              	 .loc 6 707 0
 4947 00e2 034B     	 ldr r3,.L241
 4948 00e4 181C     	 mov r0,r3
 4949 00e6 FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 708:../main.c     **** }
 4950              	 .loc 6 708 0
 4951 00ea BD46     	 mov sp,r7
 4952 00ec 02B0     	 add sp,sp,#8
 4953              	 
 4954 00ee 80BD     	 pop {r7,pc}
 4955              	.L242:
 4956              	 .align 2
 4957              	.L241:
 4958 00f0 00000000 	 .word CALC_TIME_INDICATOR
 4959 00f4 00000000 	 .word Steering_mode
 4960 00f8 00000000 	 .word RC_controll
 4961 00fc 00000000 	 .word NO_New_Input_counter
 4962 0100 00000000 	 .word RC_no_data_LED
 4963 0104 00000000 	 .word New_Input
 4964 0108 00000000 	 .word Steering_direction
 4965 010c 00000000 	 .word Driving_speed
 4966 0110 00000000 	 .word Steering_Angles
 4967 0114 00000000 	 .word Speeds
 4968 0118 00000000 	 .word reset_distance
 4969 011c 00000000 	 .word .LC0
 4970              	 .cfi_endproc
 4971              	.LFE240:
 4973              	 .section .text.Servo_NP_setting,"ax",%progbits
 4974              	 .align 2
 4975              	 .global Servo_NP_setting
 4976              	 .code 16
 4977              	 .thumb_func
 4979              	Servo_NP_setting:
 4980              	.LFB241:
 709:../main.c     **** 
 710:../main.c     **** void Servo_NP_setting(void){
 4981              	 .loc 6 710 0
 4982              	 .cfi_startproc
 4983 0000 80B5     	 push {r7,lr}
 4984              	.LCFI77:
 4985              	 .cfi_def_cfa_offset 8
 4986              	 .cfi_offset 7,-8
 4987              	 .cfi_offset 14,-4
 4988 0002 00AF     	 add r7,sp,#0
 4989              	.LCFI78:
 4990              	 .cfi_def_cfa_register 7
 711:../main.c     **** 	  NP[0] = NPfl;
 4991              	 .loc 6 711 0
 4992 0004 084B     	 ldr r3,.L244
 4993 0006 1A68     	 ldr r2,[r3]
 4994 0008 084B     	 ldr r3,.L244+4
 4995 000a 1A60     	 str r2,[r3]
 712:../main.c     **** 	  NP[1] = NPfr;
 4996              	 .loc 6 712 0
 4997 000c 084B     	 ldr r3,.L244+8
 4998 000e 1A68     	 ldr r2,[r3]
 4999 0010 064B     	 ldr r3,.L244+4
 5000 0012 5A60     	 str r2,[r3,#4]
 713:../main.c     **** 	  NP[2] = NPrl;
 5001              	 .loc 6 713 0
 5002 0014 074B     	 ldr r3,.L244+12
 5003 0016 1A68     	 ldr r2,[r3]
 5004 0018 044B     	 ldr r3,.L244+4
 5005 001a 9A60     	 str r2,[r3,#8]
 714:../main.c     **** 	  NP[3] = NPrr;
 5006              	 .loc 6 714 0
 5007 001c 064B     	 ldr r3,.L244+16
 5008 001e 1A68     	 ldr r2,[r3]
 5009 0020 024B     	 ldr r3,.L244+4
 5010 0022 DA60     	 str r2,[r3,#12]
 715:../main.c     **** }
 5011              	 .loc 6 715 0
 5012 0024 BD46     	 mov sp,r7
 5013              	 
 5014 0026 80BD     	 pop {r7,pc}
 5015              	.L245:
 5016              	 .align 2
 5017              	.L244:
 5018 0028 00000000 	 .word NPfl
 5019 002c 00000000 	 .word NP
 5020 0030 00000000 	 .word NPfr
 5021 0034 00000000 	 .word NPrl
 5022 0038 00000000 	 .word NPrr
 5023              	 .cfi_endproc
 5024              	.LFE241:
 5026              	 .section .text.average,"ax",%progbits
 5027              	 .align 2
 5028              	 .global average
 5029              	 .code 16
 5030              	 .thumb_func
 5032              	average:
 5033              	.LFB242:
 716:../main.c     **** 
 717:../main.c     **** float average(float a[],int num_values) {
 5034              	 .loc 6 717 0
 5035              	 .cfi_startproc
 5036 0000 80B5     	 push {r7,lr}
 5037              	.LCFI79:
 5038              	 .cfi_def_cfa_offset 8
 5039              	 .cfi_offset 7,-8
 5040              	 .cfi_offset 14,-4
 5041 0002 84B0     	 sub sp,sp,#16
 5042              	.LCFI80:
 5043              	 .cfi_def_cfa_offset 24
 5044 0004 00AF     	 add r7,sp,#0
 5045              	.LCFI81:
 5046              	 .cfi_def_cfa_register 7
 5047 0006 7860     	 str r0,[r7,#4]
 5048 0008 3960     	 str r1,[r7]
 718:../main.c     ****     float sum = 0;
 5049              	 .loc 6 718 0
 5050 000a 0023     	 mov r3,#0
 5051 000c FB60     	 str r3,[r7,#12]
 719:../main.c     ****     int i;
 720:../main.c     ****     for(i = 0; i < num_values; i++){
 5052              	 .loc 6 720 0
 5053 000e 0023     	 mov r3,#0
 5054 0010 BB60     	 str r3,[r7,#8]
 5055 0012 0DE0     	 b .L247
 5056              	.L248:
 721:../main.c     ****         sum += a[i];
 5057              	 .loc 6 721 0 discriminator 3
 5058 0014 BB68     	 ldr r3,[r7,#8]
 5059 0016 9B00     	 lsl r3,r3,#2
 5060 0018 7A68     	 ldr r2,[r7,#4]
 5061 001a D318     	 add r3,r2,r3
 5062 001c 1B68     	 ldr r3,[r3]
 5063 001e F868     	 ldr r0,[r7,#12]
 5064 0020 191C     	 add r1,r3,#0
 5065 0022 FFF7FEFF 	 bl __aeabi_fadd
 5066 0026 031C     	 add r3,r0,#0
 5067 0028 FB60     	 str r3,[r7,#12]
 720:../main.c     ****         sum += a[i];
 5068              	 .loc 6 720 0 discriminator 3
 5069 002a BB68     	 ldr r3,[r7,#8]
 5070 002c 0133     	 add r3,r3,#1
 5071 002e BB60     	 str r3,[r7,#8]
 5072              	.L247:
 720:../main.c     ****         sum += a[i];
 5073              	 .loc 6 720 0 is_stmt 0 discriminator 1
 5074 0030 BA68     	 ldr r2,[r7,#8]
 5075 0032 3B68     	 ldr r3,[r7]
 5076 0034 9A42     	 cmp r2,r3
 5077 0036 EDDB     	 blt .L248
 722:../main.c     ****     }
 723:../main.c     ****     return sum / num_values;
 5078              	 .loc 6 723 0 is_stmt 1
 5079 0038 3868     	 ldr r0,[r7]
 5080 003a FFF7FEFF 	 bl __aeabi_i2f
 5081 003e 031C     	 add r3,r0,#0
 5082 0040 F868     	 ldr r0,[r7,#12]
 5083 0042 191C     	 add r1,r3,#0
 5084 0044 FFF7FEFF 	 bl __aeabi_fdiv
 5085 0048 031C     	 add r3,r0,#0
 724:../main.c     **** }
 5086              	 .loc 6 724 0
 5087 004a 181C     	 add r0,r3,#0
 5088 004c BD46     	 mov sp,r7
 5089 004e 04B0     	 add sp,sp,#16
 5090              	 
 5091 0050 80BD     	 pop {r7,pc}
 5092              	 .cfi_endproc
 5093              	.LFE242:
 5095 0052 C046     	 .section .text.mode_led,"ax",%progbits
 5096              	 .align 2
 5097              	 .global mode_led
 5098              	 .code 16
 5099              	 .thumb_func
 5101              	mode_led:
 5102              	.LFB243:
 725:../main.c     **** 
 726:../main.c     **** void mode_led(uint8_t var){
 5103              	 .loc 6 726 0
 5104              	 .cfi_startproc
 5105 0000 80B5     	 push {r7,lr}
 5106              	.LCFI82:
 5107              	 .cfi_def_cfa_offset 8
 5108              	 .cfi_offset 7,-8
 5109              	 .cfi_offset 14,-4
 5110 0002 82B0     	 sub sp,sp,#8
 5111              	.LCFI83:
 5112              	 .cfi_def_cfa_offset 16
 5113 0004 00AF     	 add r7,sp,#0
 5114              	.LCFI84:
 5115              	 .cfi_def_cfa_register 7
 5116 0006 021C     	 mov r2,r0
 5117 0008 FB1D     	 add r3,r7,#7
 5118 000a 1A70     	 strb r2,[r3]
 727:../main.c     **** 	if(CHECK_BIT(var,0)){
 5119              	 .loc 6 727 0
 5120 000c FB1D     	 add r3,r7,#7
 5121 000e 1B78     	 ldrb r3,[r3]
 5122 0010 0122     	 mov r2,#1
 5123 0012 1340     	 and r3,r2
 5124 0014 04D0     	 beq .L251
 728:../main.c     **** 		DIGITAL_IO_SetOutputLow(&MODE_001);
 5125              	 .loc 6 728 0
 5126 0016 174B     	 ldr r3,.L257
 5127 0018 181C     	 mov r0,r3
 5128 001a FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 5129 001e 03E0     	 b .L252
 5130              	.L251:
 729:../main.c     **** 	}
 730:../main.c     **** 	else{
 731:../main.c     **** 		DIGITAL_IO_SetOutputHigh(&MODE_001);
 5131              	 .loc 6 731 0
 5132 0020 144B     	 ldr r3,.L257
 5133 0022 181C     	 mov r0,r3
 5134 0024 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 5135              	.L252:
 732:../main.c     **** 	}
 733:../main.c     **** 
 734:../main.c     **** 	if(CHECK_BIT(var,1)){
 5136              	 .loc 6 734 0
 5137 0028 FB1D     	 add r3,r7,#7
 5138 002a 1B78     	 ldrb r3,[r3]
 5139 002c 5B08     	 lsr r3,r3,#1
 5140 002e DBB2     	 uxtb r3,r3
 5141 0030 1A1C     	 mov r2,r3
 5142 0032 0123     	 mov r3,#1
 5143 0034 1340     	 and r3,r2
 5144 0036 04D0     	 beq .L253
 735:../main.c     **** 		DIGITAL_IO_SetOutputLow(&MODE_010);
 5145              	 .loc 6 735 0
 5146 0038 0F4B     	 ldr r3,.L257+4
 5147 003a 181C     	 mov r0,r3
 5148 003c FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 5149 0040 03E0     	 b .L254
 5150              	.L253:
 736:../main.c     **** 	}
 737:../main.c     **** 	else{
 738:../main.c     **** 		DIGITAL_IO_SetOutputHigh(&MODE_010);
 5151              	 .loc 6 738 0
 5152 0042 0D4B     	 ldr r3,.L257+4
 5153 0044 181C     	 mov r0,r3
 5154 0046 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 5155              	.L254:
 739:../main.c     **** 	}
 740:../main.c     **** 
 741:../main.c     **** 	if(CHECK_BIT(var,2)){
 5156              	 .loc 6 741 0
 5157 004a FB1D     	 add r3,r7,#7
 5158 004c 1B78     	 ldrb r3,[r3]
 5159 004e 9B08     	 lsr r3,r3,#2
 5160 0050 DBB2     	 uxtb r3,r3
 5161 0052 1A1C     	 mov r2,r3
 5162 0054 0123     	 mov r3,#1
 5163 0056 1340     	 and r3,r2
 5164 0058 04D0     	 beq .L255
 742:../main.c     **** 		DIGITAL_IO_SetOutputLow(&MODE_100);
 5165              	 .loc 6 742 0
 5166 005a 084B     	 ldr r3,.L257+8
 5167 005c 181C     	 mov r0,r3
 5168 005e FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 5169 0062 03E0     	 b .L250
 5170              	.L255:
 743:../main.c     **** 	}
 744:../main.c     **** 	else{
 745:../main.c     **** 		DIGITAL_IO_SetOutputHigh(&MODE_100);
 5171              	 .loc 6 745 0
 5172 0064 054B     	 ldr r3,.L257+8
 5173 0066 181C     	 mov r0,r3
 5174 0068 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 5175              	.L250:
 746:../main.c     **** 	}
 747:../main.c     **** }
 5176              	 .loc 6 747 0
 5177 006c BD46     	 mov sp,r7
 5178 006e 02B0     	 add sp,sp,#8
 5179              	 
 5180 0070 80BD     	 pop {r7,pc}
 5181              	.L258:
 5182 0072 C046     	 .align 2
 5183              	.L257:
 5184 0074 00000000 	 .word MODE_001
 5185 0078 00000000 	 .word MODE_010
 5186 007c 00000000 	 .word MODE_100
 5187              	 .cfi_endproc
 5188              	.LFE243:
 5190              	 .text
 5191              	.Letext0:
 5192              	 .file 7 "c:\\dave\\dave-ide-4.4.2-64bit\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 5193              	 .file 8 "c:\\dave\\dave-ide-4.4.2-64bit\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 5194              	 .file 9 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/CMSIS/Infineon/XMC1400_series/Include/XMC1400.h"
 5195              	 .file 10 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc/xmc1_scu.h"
 5196              	 .file 11 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc/xmc_can.h"
 5197              	 .file 12 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/GLOBAL_CAN/global_can.h"
 5198              	 .file 13 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc/xmc1_gpio.h"
 5199              	 .file 14 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/CAN_NODE/can_node.h"
 5200              	 .file 15 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc/xmc_ccu4.h"
 5201              	 .file 16 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/GLOBAL_CCU4/global_ccu4.h"
 5202              	 .file 17 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PWM/pwm.h"
 5203              	 .file 18 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/CAPTURE/capture.h"
 5204              	 .file 19 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc/xmc_eru.h"
 5205              	 .file 20 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DAVE.h"
 5206              	 .file 21 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/CMSIS/Include/cmsis_gcc.h"
 5207              	 .file 22 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/CMSIS/Infineon/XMC1400_series/Include/system_XMC1400.h"
 5208              	 .file 23 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/CAN_NODE/can_node_extern.h"
 5209              	 .file 24 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PWM/PWM_Extern.h"
 5210              	 .file 25 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/CAPTURE/capture_extern.h"
 5211              	 .file 26 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO/digital_io_extern.h"
 5212              	 .file 27 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT/pin_interrupt_extern.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
    {standard input}:18     .text.XMC_GPIO_SetOutputHigh:00000000 $t
    {standard input}:22     .text.XMC_GPIO_SetOutputHigh:00000000 XMC_GPIO_SetOutputHigh
    {standard input}:58     .text.XMC_GPIO_SetOutputLow:00000000 $t
    {standard input}:62     .text.XMC_GPIO_SetOutputLow:00000000 XMC_GPIO_SetOutputLow
    {standard input}:98     .text.XMC_GPIO_GetInput:00000000 $t
    {standard input}:102    .text.XMC_GPIO_GetInput:00000000 XMC_GPIO_GetInput
    {standard input}:140    .text.DIGITAL_IO_SetOutputHigh:00000000 $t
    {standard input}:144    .text.DIGITAL_IO_SetOutputHigh:00000000 DIGITAL_IO_SetOutputHigh
    {standard input}:178    .text.DIGITAL_IO_SetOutputLow:00000000 $t
    {standard input}:182    .text.DIGITAL_IO_SetOutputLow:00000000 DIGITAL_IO_SetOutputLow
    {standard input}:215    .text.PIN_INTERRUPT_GetPinValue:00000000 $t
    {standard input}:219    .text.PIN_INTERRUPT_GetPinValue:00000000 PIN_INTERRUPT_GetPinValue
    {standard input}:255    .text.XMC_WDT_Start:00000000 $t
    {standard input}:259    .text.XMC_WDT_Start:00000000 XMC_WDT_Start
    {standard input}:286    .text.XMC_WDT_Start:00000014 $d
    {standard input}:291    .text.XMC_WDT_Service:00000000 $t
    {standard input}:295    .text.XMC_WDT_Service:00000000 XMC_WDT_Service
    {standard input}:318    .text.XMC_WDT_Service:00000010 $d
    {standard input}:324    .text.XMC_WDT_ClearAlarm:00000000 $t
    {standard input}:328    .text.XMC_WDT_ClearAlarm:00000000 XMC_WDT_ClearAlarm
    {standard input}:351    .text.XMC_WDT_ClearAlarm:00000010 $d
    {standard input}:356    .text.WATCHDOG_Start:00000000 $t
    {standard input}:360    .text.WATCHDOG_Start:00000000 WATCHDOG_Start
    {standard input}:383    .text.WATCHDOG_Service:00000000 $t
    {standard input}:387    .text.WATCHDOG_Service:00000000 WATCHDOG_Service
    {standard input}:409    .text.WATCHDOG_ClearAlarm:00000000 $t
    {standard input}:413    .text.WATCHDOG_ClearAlarm:00000000 WATCHDOG_ClearAlarm
    {standard input}:439    .data.NP:00000000 NP
    {standard input}:436    .data.NP:00000000 $d
    {standard input}:449    .data.NPfl:00000000 NPfl
    {standard input}:446    .data.NPfl:00000000 $d
    {standard input}:456    .data.NPfr:00000000 NPfr
    {standard input}:453    .data.NPfr:00000000 $d
    {standard input}:463    .data.NPrl:00000000 NPrl
    {standard input}:460    .data.NPrl:00000000 $d
    {standard input}:470    .data.NPrr:00000000 NPrr
    {standard input}:467    .data.NPrr:00000000 $d
    {standard input}:476    .data.RC_controll:00000000 RC_controll
    {standard input}:482    .data.Steering_mode:00000000 Steering_mode
    {standard input}:488    .bss.New_Input:00000000 New_Input
    {standard input}:489    .bss.New_Input:00000000 $d
    {standard input}:495    .bss.NO_New_Input_counter:00000000 NO_New_Input_counter
    {standard input}:492    .bss.NO_New_Input_counter:00000000 $d
    {standard input}:502    .bss.Speeds_int16_r:00000000 Speeds_int16_r
    {standard input}:499    .bss.Speeds_int16_r:00000000 $d
    {standard input}:509    .bss.CAN_RX_0:00000000 CAN_RX_0
    {standard input}:506    .bss.CAN_RX_0:00000000 $d
                            *COM*:00000001 init_status
    {standard input}:517    .bss.CAN_OK:00000000 CAN_OK
    {standard input}:514    .bss.CAN_OK:00000000 $d
    {standard input}:524    .bss.Inverters_CAN_state:00000000 Inverters_CAN_state
    {standard input}:521    .bss.Inverters_CAN_state:00000000 $d
    {standard input}:531    .bss.CAN_10ms_counter:00000000 CAN_10ms_counter
    {standard input}:528    .bss.CAN_10ms_counter:00000000 $d
    {standard input}:537    .bss.reset_distance:00000000 reset_distance
    {standard input}:538    .bss.reset_distance:00000000 $d
    {standard input}:544    .bss.speed_fl_act:00000000 speed_fl_act
    {standard input}:541    .bss.speed_fl_act:00000000 $d
    {standard input}:551    .bss.speed_fr_act:00000000 speed_fr_act
    {standard input}:548    .bss.speed_fr_act:00000000 $d
    {standard input}:558    .bss.speed_rl_act:00000000 speed_rl_act
    {standard input}:555    .bss.speed_rl_act:00000000 $d
    {standard input}:565    .bss.speed_rr_act:00000000 speed_rr_act
    {standard input}:562    .bss.speed_rr_act:00000000 $d
    {standard input}:572    .bss.distance_fl_act:00000000 distance_fl_act
    {standard input}:569    .bss.distance_fl_act:00000000 $d
    {standard input}:579    .bss.distance_fr_act:00000000 distance_fr_act
    {standard input}:576    .bss.distance_fr_act:00000000 $d
    {standard input}:586    .bss.distance_rl_act:00000000 distance_rl_act
    {standard input}:583    .bss.distance_rl_act:00000000 $d
    {standard input}:593    .bss.distance_rr_act:00000000 distance_rr_act
    {standard input}:590    .bss.distance_rr_act:00000000 $d
    {standard input}:599    .bss.CAN_RX_Inverter_count:00000000 CAN_RX_Inverter_count
    {standard input}:600    .bss.CAN_RX_Inverter_count:00000000 $d
    {standard input}:605    .bss.CAN_state_Ultrasonic:00000000 CAN_state_Ultrasonic
    {standard input}:606    .bss.CAN_state_Ultrasonic:00000000 $d
    {standard input}:612    .bss.Ultrasonic_cm_C:00000000 Ultrasonic_cm_C
    {standard input}:609    .bss.Ultrasonic_cm_C:00000000 $d
    {standard input}:619    .bss.Ultrasonic_cm_L:00000000 Ultrasonic_cm_L
    {standard input}:616    .bss.Ultrasonic_cm_L:00000000 $d
    {standard input}:626    .bss.Ultrasonic_cm_R:00000000 Ultrasonic_cm_R
    {standard input}:623    .bss.Ultrasonic_cm_R:00000000 $d
    {standard input}:633    .data.ALPHA_ULTARSONIC:00000000 ALPHA_ULTARSONIC
    {standard input}:630    .data.ALPHA_ULTARSONIC:00000000 $d
    {standard input}:639    .bss.obstructed_L:00000000 obstructed_L
    {standard input}:640    .bss.obstructed_L:00000000 $d
    {standard input}:645    .bss.obstructed_R:00000000 obstructed_R
    {standard input}:646    .bss.obstructed_R:00000000 $d
    {standard input}:652    .bss.Fil_Ultrasonic_m_C:00000000 Fil_Ultrasonic_m_C
    {standard input}:649    .bss.Fil_Ultrasonic_m_C:00000000 $d
    {standard input}:659    .bss.Fil_Ultrasonic_m_L:00000000 Fil_Ultrasonic_m_L
    {standard input}:656    .bss.Fil_Ultrasonic_m_L:00000000 $d
    {standard input}:666    .bss.Fil_Ultrasonic_m_R:00000000 Fil_Ultrasonic_m_R
    {standard input}:663    .bss.Fil_Ultrasonic_m_R:00000000 $d
    {standard input}:672    .bss.RC_Signal_OK:00000000 RC_Signal_OK
    {standard input}:673    .bss.RC_Signal_OK:00000000 $d
    {standard input}:678    .bss.RC_Signal_not_OK_counter:00000000 RC_Signal_not_OK_counter
    {standard input}:679    .bss.RC_Signal_not_OK_counter:00000000 $d
    {standard input}:685    .bss.captured_time_Steering:00000000 captured_time_Steering
    {standard input}:682    .bss.captured_time_Steering:00000000 $d
    {standard input}:692    .bss.captured_time_Speed:00000000 captured_time_Speed
    {standard input}:689    .bss.captured_time_Speed:00000000 $d
    {standard input}:698    .bss.RC_no_Speed_data_counter:00000000 RC_no_Speed_data_counter
    {standard input}:699    .bss.RC_no_Speed_data_counter:00000000 $d
    {standard input}:704    .bss.RC_no_Steering_data_counter:00000000 RC_no_Steering_data_counter
    {standard input}:705    .bss.RC_no_Steering_data_counter:00000000 $d
    {standard input}:711    .bss.RC_Speed:00000000 RC_Speed
    {standard input}:708    .bss.RC_Speed:00000000 $d
    {standard input}:718    .bss.RC_Steering:00000000 RC_Steering
    {standard input}:715    .bss.RC_Steering:00000000 $d
    {standard input}:725    .data.RC_Speed_ns_to_mps:00000000 RC_Speed_ns_to_mps
    {standard input}:722    .data.RC_Speed_ns_to_mps:00000000 $d
    {standard input}:732    .data.RC_Steering_ns_to_deg:00000000 RC_Steering_ns_to_deg
    {standard input}:729    .data.RC_Steering_ns_to_deg:00000000 $d
    {standard input}:739    .bss.RC_gear_100us_counter:00000000 RC_gear_100us_counter
    {standard input}:736    .bss.RC_gear_100us_counter:00000000 $d
    {standard input}:746    .bss.RC_AUX1_100us_counter:00000000 RC_AUX1_100us_counter
    {standard input}:743    .bss.RC_AUX1_100us_counter:00000000 $d
    {standard input}:752    .data.RC_Gear_state:00000000 RC_Gear_state
    {standard input}:758    .data.RC_AUX1_state:00000000 RC_AUX1_state
    {standard input}:764    .data.RC_Gear_duty:00000000 RC_Gear_duty
    {standard input}:770    .data.RC_Gear_duty_OLD:00000000 RC_Gear_duty_OLD
    {standard input}:776    .data.RC_AUX1_duty:00000000 RC_AUX1_duty
    {standard input}:782    .data.RC_Speed_Stop:00000000 RC_Speed_Stop
    {standard input}:789    .bss.Steering_direction:00000000 Steering_direction
    {standard input}:786    .bss.Steering_direction:00000000 $d
    {standard input}:796    .bss.Driving_speed:00000000 Driving_speed
    {standard input}:793    .bss.Driving_speed:00000000 $d
                            *COM*:00000004 R_Turn
                            *COM*:00000004 Speed_ratio
    {standard input}:805    .bss.speed_fl:00000000 speed_fl
    {standard input}:802    .bss.speed_fl:00000000 $d
    {standard input}:812    .bss.speed_fr:00000000 speed_fr
    {standard input}:809    .bss.speed_fr:00000000 $d
    {standard input}:819    .bss.speed_rl:00000000 speed_rl
    {standard input}:816    .bss.speed_rl:00000000 $d
    {standard input}:826    .bss.speed_rr:00000000 speed_rr
    {standard input}:823    .bss.speed_rr:00000000 $d
    {standard input}:833    .bss.angle_fl:00000000 angle_fl
    {standard input}:830    .bss.angle_fl:00000000 $d
    {standard input}:840    .bss.angle_fr:00000000 angle_fr
    {standard input}:837    .bss.angle_fr:00000000 $d
    {standard input}:847    .bss.angle_rl:00000000 angle_rl
    {standard input}:844    .bss.angle_rl:00000000 $d
    {standard input}:854    .bss.angle_rr:00000000 angle_rr
    {standard input}:851    .bss.angle_rr:00000000 $d
    {standard input}:861    .bss.Speeds:00000000 Speeds
    {standard input}:858    .bss.Speeds:00000000 $d
    {standard input}:868    .bss.Steering_Angles:00000000 Steering_Angles
    {standard input}:865    .bss.Steering_Angles:00000000 $d
    {standard input}:875    .bss.Servo_PWMs:00000000 Servo_PWMs
    {standard input}:872    .bss.Servo_PWMs:00000000 $d
    {standard input}:882    .bss.Inveter_CAN_OK:00000000 Inveter_CAN_OK
    {standard input}:879    .bss.Inveter_CAN_OK:00000000 $d
    {standard input}:889    .bss.Actual_Speeds:00000000 Actual_Speeds
    {standard input}:886    .bss.Actual_Speeds:00000000 $d
    {standard input}:896    .bss.Actual_Distance:00000000 Actual_Distance
    {standard input}:893    .bss.Actual_Distance:00000000 $d
    {standard input}:899    .text.main:00000000 $t
    {standard input}:904    .text.main:00000000 main
    {standard input}:961    .text.main:00000040 $d
    {standard input}:980    .text.Steering_Function:00000000 $t
    {standard input}:985    .text.Steering_Function:00000000 Steering_Function
    {standard input}:1120   .rodata.Steering_Function:00000000 $d
    {standard input}:1385   .text.Steering_Function:000002f0 $d
    {standard input}:1412   .text.Steering_Function:00000354 $t
    {standard input}:1836   .text.Steering_Function:000006b8 $d
    {standard input}:1864   .text.Steering_Function:00000720 $t
    {standard input}:2304   .text.Steering_Function:00000aa0 $d
    {standard input}:2334   .text.Steering_Function:00000b10 $t
    {standard input}:2754   .text.Steering_Function:00000ddc $d
    {standard input}:2786   .text.IRQ4_Handler:00000000 $t
    {standard input}:2791   .text.IRQ4_Handler:00000000 IRQ4_Handler
    {standard input}:2950   .text.Ultra_sonic_filter:00000000 Ultra_sonic_filter
    {standard input}:2933   .text.IRQ4_Handler:000000e4 $d
    {standard input}:2945   .text.Ultra_sonic_filter:00000000 $t
    {standard input}:3253   .text.Exp_moving_average:00000000 Exp_moving_average
    {standard input}:3094   .text.Ultrasoinc_Obstructet_Test:00000000 Ultrasoinc_Obstructet_Test
    {standard input}:3078   .text.Ultra_sonic_filter:000000dc $d
    {standard input}:3089   .text.Ultrasoinc_Obstructet_Test:00000000 $t
    {standard input}:3242   .text.Ultrasoinc_Obstructet_Test:00000104 $d
    {standard input}:3248   .text.Exp_moving_average:00000000 $t
    {standard input}:3301   .text.IRQ3_Handler:00000000 $t
    {standard input}:3306   .text.IRQ3_Handler:00000000 IRQ3_Handler
    {standard input}:3359   .text.CAN_RX_Inverter_Read_Data:00000000 CAN_RX_Inverter_Read_Data
    {standard input}:3348   .text.IRQ3_Handler:00000030 $d
    {standard input}:3354   .text.CAN_RX_Inverter_Read_Data:00000000 $t
    {standard input}:3730   .text.CAN_RX_Inverter_Read_Data:0000026c $d
    {standard input}:3748   .text.Watchdog_Handler:00000000 $t
    {standard input}:3753   .text.Watchdog_Handler:00000000 Watchdog_Handler
    {standard input}:3778   .text.Watchdog_Handler:00000014 $d
    {standard input}:3783   .text.CAN_reset_distance:00000000 $t
    {standard input}:3788   .text.CAN_reset_distance:00000000 CAN_reset_distance
    {standard input}:3866   .text.CAN_reset_distance:00000070 $d
    {standard input}:3872   .text.CAN_send_Speeds:00000000 $t
    {standard input}:3877   .text.CAN_send_Speeds:00000000 CAN_send_Speeds
    {standard input}:3970   .text.CAN_send_Speeds:000000a8 $d
    {standard input}:3976   .text.IRQ8_Handler:00000000 $t
    {standard input}:3981   .text.IRQ8_Handler:00000000 IRQ8_Handler
    {standard input}:4026   .text.IRQ8_Handler:00000030 $d
    {standard input}:4035   .text.Steering_set_Angles:00000000 $t
    {standard input}:4040   .text.Steering_set_Angles:00000000 Steering_set_Angles
    {standard input}:4197   .text.Steering_set_Angles:00000104 $d
    {standard input}:4211   .text.RC_Recive:00000000 $t
    {standard input}:4216   .text.RC_Recive:00000000 RC_Recive
    {standard input}:4500   .text.RC_Recive:000001e8 $d
    {standard input}:4526   .text.IRQ12_Handler:00000000 $t
    {standard input}:4531   .text.IRQ12_Handler:00000000 IRQ12_Handler
    {standard input}:4657   .text.IRQ12_Handler:000000ac $d
    {standard input}:4668   .text.IRQ6_Handler:00000000 $t
    {standard input}:4673   .text.IRQ6_Handler:00000000 IRQ6_Handler
    {standard input}:4776   .text.IRQ6_Handler:00000084 $d
    {standard input}:4786   .rodata:00000000 $d
    {standard input}:4793   .text.IRQ7_Handler:00000000 $t
    {standard input}:4798   .text.IRQ7_Handler:00000000 IRQ7_Handler
    {standard input}:5101   .text.mode_led:00000000 mode_led
    {standard input}:4958   .text.IRQ7_Handler:000000f0 $d
    {standard input}:4974   .text.Servo_NP_setting:00000000 $t
    {standard input}:4979   .text.Servo_NP_setting:00000000 Servo_NP_setting
    {standard input}:5018   .text.Servo_NP_setting:00000028 $d
    {standard input}:5027   .text.average:00000000 $t
    {standard input}:5032   .text.average:00000000 average
    {standard input}:5096   .text.mode_led:00000000 $t
    {standard input}:5184   .text.mode_led:00000074 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
DAVE_Init
CAN_NODE_Init
CAN_NODE_0
__aeabi_fcmpgt
__aeabi_fcmplt
__aeabi_f2d
__aeabi_dcmplt
__aeabi_dcmpgt
__aeabi_ddiv
__aeabi_d2f
__aeabi_dadd
__aeabi_dmul
__aeabi_dsub
__aeabi_fmul
__aeabi_fdiv
tan
atan
CAN_NODE_MO_Receive
__aeabi_i2f
__aeabi_fsub
__aeabi_fcmple
__aeabi_fadd
WATCHDOG_LED_BLUE
LED_CAN_ERROR
CAN_NODE_MO_UpdateData
CAN_NODE_MO_Transmit
__aeabi_f2iz
__aeabi_f2uiz
PWM_SetDutyCycle
PWM_servo_fl
PWM_servo_fr
PWM_servo_rl
PWM_servo_rr
__aeabi_ui2d
CAPTURE_Start
CAPTURE_GetCapturedTimeInNanoSec
CAPTURE_RC_Steering
CAPTURE_RC_Speed
RC_no_data_LED
RC_Connected
RC_AUX1
memcpy
CALC_TIME_INDICATOR
MODE_001
MODE_010
MODE_100
