   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,6
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "main.c"
  14              	 .text
  15              	.Ltext0:
  16              	 .cfi_sections .debug_frame
  17              	 .section .text.XMC_GPIO_SetOutputHigh,"ax",%progbits
  18              	 .align 2
  19              	 .code 16
  20              	 .thumb_func
  22              	XMC_GPIO_SetOutputHigh:
  23              	.LFB122:
  24              	 .file 1 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc/xmc_gpio.h"
   1:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
   2:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @file xmc_gpio.h
   3:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @date 2015-06-20
   4:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   5:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @cond
   6:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *****************************************************************************
   7:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   9:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * All rights reserved.
  11:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  12:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  14:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Permission is hereby granted, free of charge, to any person or organization
  15:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * obtaining a copy of the software and accompanying documentation covered by
  16:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * do so, all subject to the following:
  20:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  21:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * The copyright notices in the Software and this entire statement, including
  22:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * the above license grant, this restriction and the following disclaimer,
  23:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * must be included in all copies of the Software, in whole or in part, and
  24:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * all derivative works of the Software, unless such copies or derivative
  25:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * works are solely in the form of machine-executable object code generated by
  26:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * a source language processor.
  27:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  28:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * DEALINGS IN THE SOFTWARE.
  35:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  36:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * To improve the quality of the software, users are encouraged to share
  37:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * at XMCSupport@infineon.com.
  39:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *****************************************************************************
  40:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  41:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Change History
  42:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * --------------
  43:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  44:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-02-20:
  45:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Initial draft<br>
  46:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Documentation improved <br>
  47:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  48:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-06-20:
  49:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  50:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  51:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @endcond
  52:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  53:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  54:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
  55:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #ifndef XMC_GPIO_H
  56:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_H
  57:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
  58:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  59:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * HEADER FILES
  60:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  61:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
  62:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc_common.h"
  63:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
  64:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  65:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup XMClib XMC Peripheral Library
  66:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @{
  67:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  68:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
  69:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  70:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup GPIO
  71:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @brief General Purpose Input Output (GPIO) driver for the XMC microcontroller family.
  72:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  73:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * GPIO driver provide a generic and very flexible software interface for all standard digital I/O 
  74:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Each port slice has individual interfaces for the operation as General Purpose I/O and it furthe
  75:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * connectivity to the on-chip periphery and the control for the pad characteristics.
  76:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  77:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * The driver is divided into Input and Output mode.
  78:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  79:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Input mode features:
  80:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Configuration structure XMC_GPIO_CONFIG_t and initialization function XMC_GPIO_Init()
  81:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of weak pull-up or pull-down device. Configuration structure XMC_GPIO_MO
  82:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
  83:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of input hysteresis. XMC_GPIO_SetInputHysteresis()
  84:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  85:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  86:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  87:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Output mode features:
  88:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of push pull/open drain and Alternate output. Configuration structure XM
  89:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
  90:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of pad driver strength. Configuration structure XMC_GPIO_OUTPUT_STRENGTH
  91:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  92:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  93:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of initial output level. Configuration structure XMC_GPIO_OUTPUT_LEVEL_t
  94:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  95:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *@{
  96:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  97:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
  98:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  99:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * MACROS
 100:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 101:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 102:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Pos PORT0_IOCR0_PC0_Pos
 103:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Msk PORT0_IOCR0_PC0_Msk
 104:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 105:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Size 				(8U)
 106:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 107:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 108:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_OUTPUT_LEVEL(level) ((level == XMC_GPIO_OUTPUT_LEVEL_LOW) || \
 109:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****                                             (level == XMC_GPIO_OUTPUT_LEVEL_HIGH))
 110:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 111:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_HWCTRL(hwctrl) ((hwctrl == XMC_GPIO_HWCTRL_DISABLED) || \
 112:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL1) || \
 113:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL2))
 114:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 115:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 116:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * ENUMS
 117:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 118:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 119:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 120:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 121:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines output level of a pin. Use type \a XMC_GPIO_OUTPUT_LEVEL_t for this enum.
 122:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 123:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_OUTPUT_LEVEL
 124:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** {
 125:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_LOW  = 0x10000U, /**<  Reset bit */
 126:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_HIGH = 0x1U, 	/**< Set bit  */
 127:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_OUTPUT_LEVEL_t;
 128:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 129:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 130:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines direct hardware control characteristics of the pin . Use type \a XMC_GPIO_HWCTRL_t for t
 131:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 132:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_HWCTRL
 133:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** {
 134:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_DISABLED     = 0x0U, /**<  Software control only */
 135:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL1  = 0x1U, /**<  HWI0/HWO0 control path can override the software confi
 136:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL2  = 0x2U  /**<  HWI1/HWO1 control path can override the software confi
 137:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_HWCTRL_t;
 138:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 139:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 140:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * DEVICE FAMILY EXTENSIONS
 141:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 142:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 143:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #if UC_FAMILY == XMC1
 144:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc1_gpio.h"
 145:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #elif UC_FAMILY == XMC4
 146:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc4_gpio.h"
 147:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #else
 148:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #error "xmc_gpio.h: family device not supported"
 149:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 150:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 151:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 152:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * API PROTOTYPES
 153:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 154:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 155:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #ifdef __cplusplus
 156:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** extern "C" {
 157:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 158:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 159:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 160:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 161:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	  Constant pointer pointing to GPIO port, to access port registers like Pn_OUT,Pn_O
 162:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	  Port pin number.
 163:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  config GPIO configuration data structure. Refer data structure @ref XMC_GPIO_CONFIG_t fo
 164:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 165:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 166:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 167:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 168:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
 169:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,hysteresis, push pull
 170:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for a selected \a po
 171:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \a config provides selected I/O settings. It configures hardware registers Pn_IOCR,Pn_OUT, Pn_OM
 172:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 173:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
 174:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,push pull /open drain
 175:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for selected \a port
 176:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * It configures hardware registers Pn_IOCR,Pn_OUT,Pn_OMR,Pn_PDISC and Pn_PDR.\n
 177:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 178:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 179:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 180:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 181:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 182:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 183:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * This API is called in definition of DAVE_init by code generation and therefore should not be exp
 184:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * for the normal operation. Use other APIs only after DAVE_init is called successfully (returns DA
 185:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 186:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 187:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 188:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 189:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 190:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_Init(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_CONFIG_t *const c
 191:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 192:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 193:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 194:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	Constant pointer pointing to GPIO port, to access hardware register Pn_IOCR.
 195:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 196:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  mode input / output functionality selection. Refer @ref XMC_GPIO_MODE_t for valid values
 197:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 198:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 199:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 200:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 201:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets digital input and output driver functionality and characteristics of a GPIO port pin. It co
 202:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * registers Pn_IOCR. \a mode is initially configured during initialization in XMC_GPIO_Init(). Cal
 203:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * the port direction functionality as needed later in the program.
 204:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 205:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 206:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 207:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 208:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 209:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 210:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_SetMode(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_MODE_t mode);
 211:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 212:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 213:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 214:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 215:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	 Constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 216:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	 Port pin number.
 217:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  level output level selection. Refer @ref XMC_GPIO_OUTPUT_LEVEL_t for valid values.
 218:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 219:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 220:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 221:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 222:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Set port pin output level to high or low.It configures hardware registers Pn_OMR.\a level is ini
 223:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * configured during initialization in XMC_GPIO_Init(). Call this API to alter output level as need
 224:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 225:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 226:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 227:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 228:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 229:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 230:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 231:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 232:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 233:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 234:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLevel(XMC_GPIO_PORT_t *const port, const uint8_t pin, const 
 235:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** {
 236:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 237:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid output level", XMC_GPIO_CHECK_OUTPUT_LEVEL(level));
 238:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 239:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)level << pin;
 240:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** }
 241:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 242:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 243:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 244:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 245:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 246:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 247:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 248:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 249:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 250:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *  Sets port pin output to high. It configures hardware registers Pn_OMR.
 251:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 252:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *  \par<b>Related APIs:</b><BR>
 253:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputLow()
 254:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 255:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 256:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().\n
 257:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 258:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 259:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 260:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 261:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputHigh(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 262:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** {
  25              	 .loc 1 262 0
  26              	 .cfi_startproc
  27 0000 80B5     	 push {r7,lr}
  28              	.LCFI0:
  29              	 .cfi_def_cfa_offset 8
  30              	 .cfi_offset 7,-8
  31              	 .cfi_offset 14,-4
  32 0002 82B0     	 sub sp,sp,#8
  33              	.LCFI1:
  34              	 .cfi_def_cfa_offset 16
  35 0004 00AF     	 add r7,sp,#0
  36              	.LCFI2:
  37              	 .cfi_def_cfa_register 7
  38 0006 7860     	 str r0,[r7,#4]
  39 0008 0A1C     	 mov r2,r1
  40 000a FB1C     	 add r3,r7,#3
  41 000c 1A70     	 strb r2,[r3]
 263:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputHigh: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 264:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 265:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)0x1U << pin;
  42              	 .loc 1 265 0
  43 000e FB1C     	 add r3,r7,#3
  44 0010 1B78     	 ldrb r3,[r3]
  45 0012 0122     	 mov r2,#1
  46 0014 9A40     	 lsl r2,r2,r3
  47 0016 7B68     	 ldr r3,[r7,#4]
  48 0018 5A60     	 str r2,[r3,#4]
 266:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** }
  49              	 .loc 1 266 0
  50 001a BD46     	 mov sp,r7
  51 001c 02B0     	 add sp,sp,#8
  52              	 
  53 001e 80BD     	 pop {r7,pc}
  54              	 .cfi_endproc
  55              	.LFE122:
  57              	 .section .text.XMC_GPIO_SetOutputLow,"ax",%progbits
  58              	 .align 2
  59              	 .code 16
  60              	 .thumb_func
  62              	XMC_GPIO_SetOutputLow:
  63              	.LFB123:
 267:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 268:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 269:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 270:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 271:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	port pin number.
 272:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 273:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return  None
 274:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 275:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Description:</b><br>
 276:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets port pin output to low. It configures hardware registers Pn_OMR.\n
 277:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 278:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>>
 279:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh()
 280:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 281:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Note:</b><br>
 282:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 283:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 284:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 285:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 286:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 287:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLow(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 288:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** {
  64              	 .loc 1 288 0
  65              	 .cfi_startproc
  66 0000 80B5     	 push {r7,lr}
  67              	.LCFI3:
  68              	 .cfi_def_cfa_offset 8
  69              	 .cfi_offset 7,-8
  70              	 .cfi_offset 14,-4
  71 0002 82B0     	 sub sp,sp,#8
  72              	.LCFI4:
  73              	 .cfi_def_cfa_offset 16
  74 0004 00AF     	 add r7,sp,#0
  75              	.LCFI5:
  76              	 .cfi_def_cfa_register 7
  77 0006 7860     	 str r0,[r7,#4]
  78 0008 0A1C     	 mov r2,r1
  79 000a FB1C     	 add r3,r7,#3
  80 000c 1A70     	 strb r2,[r3]
 289:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLow: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 290:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 291:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10000U << pin;
  81              	 .loc 1 291 0
  82 000e FB1C     	 add r3,r7,#3
  83 0010 1B78     	 ldrb r3,[r3]
  84 0012 8022     	 mov r2,#128
  85 0014 5202     	 lsl r2,r2,#9
  86 0016 9A40     	 lsl r2,r2,r3
  87 0018 7B68     	 ldr r3,[r7,#4]
  88 001a 5A60     	 str r2,[r3,#4]
 292:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** }
  89              	 .loc 1 292 0
  90 001c BD46     	 mov sp,r7
  91 001e 02B0     	 add sp,sp,#8
  92              	 
  93 0020 80BD     	 pop {r7,pc}
  94              	 .cfi_endproc
  95              	.LFE123:
  97 0022 C046     	 .section .text.XMC_GPIO_GetInput,"ax",%progbits
  98              	 .align 2
  99              	 .code 16
 100              	 .thumb_func
 102              	XMC_GPIO_GetInput:
 103              	.LFB125:
 293:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 294:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 295:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 296:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 297:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param pin  port pin number.
 298:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 299:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 300:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 301:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 302:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Configures port pin output to Toggle. It configures hardware registers Pn_OMR.
 303:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 304:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 305:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 306:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 307:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 308:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode(). Regis
 309:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * and does not contain any flip-flop. A read action delivers the value of 0.
 310:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 311:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 312:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 313:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_ToggleOutput(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 314:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** {
 315:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_ToggleOutput: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 316:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 317:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10001U << pin;
 318:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** }
 319:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 320:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 321:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 322:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param port constant pointer pointing to GPIO port, to access hardware register Pn_IN.
 323:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param pin  Port pin number.
 324:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 325:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return uint32_t pin logic level status.
 326:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 327:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Description:</b><br>
 328:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Reads the Pn_IN register and returns the current logical value at the GPIO pin.
 329:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 330:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 331:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * None
 332:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 333:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 334:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to input mode using XMC_GPIO_SetMode().
 335:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 336:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 337:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 338:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE uint32_t XMC_GPIO_GetInput(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 339:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** {
 104              	 .loc 1 339 0
 105              	 .cfi_startproc
 106 0000 80B5     	 push {r7,lr}
 107              	.LCFI6:
 108              	 .cfi_def_cfa_offset 8
 109              	 .cfi_offset 7,-8
 110              	 .cfi_offset 14,-4
 111 0002 82B0     	 sub sp,sp,#8
 112              	.LCFI7:
 113              	 .cfi_def_cfa_offset 16
 114 0004 00AF     	 add r7,sp,#0
 115              	.LCFI8:
 116              	 .cfi_def_cfa_register 7
 117 0006 7860     	 str r0,[r7,#4]
 118 0008 0A1C     	 mov r2,r1
 119 000a FB1C     	 add r3,r7,#3
 120 000c 1A70     	 strb r2,[r3]
 340:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_GetInput: Invalid port", XMC_GPIO_CHECK_PORT(port));
 341:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 342:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   return (((port->IN) >> pin) & 0x1U);
 121              	 .loc 1 342 0
 122 000e 7B68     	 ldr r3,[r7,#4]
 123 0010 5A6A     	 ldr r2,[r3,#36]
 124 0012 FB1C     	 add r3,r7,#3
 125 0014 1B78     	 ldrb r3,[r3]
 126 0016 DA40     	 lsr r2,r2,r3
 127 0018 131C     	 mov r3,r2
 128 001a 0122     	 mov r2,#1
 129 001c 1340     	 and r3,r2
 343:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** }
 130              	 .loc 1 343 0
 131 001e 181C     	 mov r0,r3
 132 0020 BD46     	 mov sp,r7
 133 0022 02B0     	 add sp,sp,#8
 134              	 
 135 0024 80BD     	 pop {r7,pc}
 136              	 .cfi_endproc
 137              	.LFE125:
 139 0026 C046     	 .section .text.DIGITAL_IO_SetOutputHigh,"ax",%progbits
 140              	 .align 2
 141              	 .code 16
 142              	 .thumb_func
 144              	DIGITAL_IO_SetOutputHigh:
 145              	.LFB195:
 146              	 .file 2 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO/digital_io.h"
   1:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /*
   2:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   3:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @file digital_io.h
   4:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @date 2021-01-08
   5:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   6:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * NOTE:
   7:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   8:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   9:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @cond
  10:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  11:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DIGITAL_IO v4.0.18 - The DIGITAL_IO APP is used to configure a port pin as digital Input/Output.
  12:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  13:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  14:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * All rights reserved.
  15:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  16:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  17:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * following conditions are met:
  18:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  19:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  20:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   disclaimer.
  21:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  22:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  23:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  24:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  25:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  26:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   products derived from this software without specific prior written permission.
  27:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  28:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  29:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  30:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  31:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  32:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  33:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  34:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  36:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  37:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * with Infineon Technologies AG (dave@infineon.com).
  38:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  39:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  40:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Change History
  41:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * --------------
  42:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  43:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-02-16
  44:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Initial version
  45:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  46:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-04-22
  47:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - XMC_ASSERT is added in static inline functions.<br>
  48:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  49:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-06-20
  50:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Version check added for XMCLib dependency.<br>
  51:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  52:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-12-22
  53:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Added hardware controlled IO feature.
  54:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2016-07-08:
  55:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Fixed incorrect case for an included header.<br>
  56:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2021-01-08:
  57:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Modified check for minimum XMCLib version
  58:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  59:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @endcond
  60:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  61:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  */
  62:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  63:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
  64:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * HEADER FILES
  65:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  66:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  67:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #ifndef DIGITAL_IO_H
  68:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #define DIGITAL_IO_H
  69:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  70:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #include "xmc_gpio.h"
  71:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #include "DAVE_Common.h"
  72:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #include "digital_io_conf.h"
  73:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  74:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
  75:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * MACROS
  76:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  77:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #define DIGITAL_IO_XMC_LIB_MAJOR_VERSION 2
  78:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #define DIGITAL_IO_XMC_LIB_MINOR_VERSION 0
  79:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #define DIGITAL_IO_XMC_LIB_PATCH_VERSION 0
  80:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  81:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #if !((XMC_LIB_MAJOR_VERSION > DIGITAL_IO_XMC_LIB_MAJOR_VERSION) ||\
  82:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****       ((XMC_LIB_MAJOR_VERSION == DIGITAL_IO_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION > DIGI
  83:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****       ((XMC_LIB_MAJOR_VERSION == DIGITAL_IO_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION == DIG
  84:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #error "DIGITAL_IO requires XMC Peripheral Library v2.0.0 or higher"
  85:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #endif
  86:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  87:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  /*************************************************************************************************
  88:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * ENUMS
  89:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  90:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  91:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
  92:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_enumerations
  93:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
  94:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
  95:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  96:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
  97:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Initialization status of DIGITAL_IO APP.
  98:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
  99:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** typedef enum DIGITAL_IO_STATUS
 100:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 101:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   DIGITAL_IO_STATUS_OK = 0U,/**< 0=Status OK */
 102:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   DIGITAL_IO_STATUS_FAILURE = 1U/**< 1=Status Failed */
 103:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** } DIGITAL_IO_STATUS_t;
 104:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 105:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 106:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @}
 107:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 108:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 109:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
 110:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DATA STRUCTURES
 111:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
 112:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 113:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_datastructures
 114:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
 115:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 116:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 117:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 118:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Initialization data structure of DIGITAL_IO APP
 119:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 120:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** typedef struct DIGITAL_IO
 121:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 122:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_PORT_t *const gpio_port;             /**< port number */
 123:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   const XMC_GPIO_CONFIG_t gpio_config;          /**< mode, initial output level and pad driver stre
 124:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   const uint8_t gpio_pin;                       /**< pin number */
 125:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   const XMC_GPIO_HWCTRL_t hwctrl;               /**< Hardware port control */
 126:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** } DIGITAL_IO_t;
 127:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 128:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 129:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 130:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @}
 131:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 132:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 133:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 134:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
 135:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * API Prototypes
 136:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
 137:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 138:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 139:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #ifdef __cplusplus
 140:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** extern "C" {
 141:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #endif
 142:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 143:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 144:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_apidoc
 145:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
 146:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 147:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 148:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 149:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 150:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 151:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Get DIGITAL_IO APP version
 152:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return DAVE_APP_VERSION_t APP version information (major, minor and patch number)
 153:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 154:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description: </b><br>
 155:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * The function can be used to check application software compatibility with a
 156:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * specific version of the APP.
 157:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 158:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 159:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 160:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 161:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include "DAVE.h"
 162:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 163:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 164:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 165:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t init_status;
 166:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_APP_VERSION_t version;
 167:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 168:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   // Initialize DIGITAL_IO APP:
 169:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   // DIGITAL_IO_Init() is called from within DAVE_Init().
 170:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   init_status = DAVE_Init();
 171:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(init_status == DAVE_STATUS_SUCCESS)
 172:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 173:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     version = DIGITAL_IO_GetAppVersion();
 174:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     if (version.major != 4U) {
 175:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // Probably, not the right version.
 176:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 177:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 178:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 179:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // More code here
 180:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1) {
 181:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 182:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 183:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     return (1);
 184:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  }
 185:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @endcode<BR>
 186:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 187:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 188:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** DAVE_APP_VERSION_t DIGITAL_IO_GetAppVersion(void);
 189:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 190:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 191:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 192:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to initialize the port pin as per UI settings.
 193:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 194:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return DIGITAL_IO_STATUS_t DIGITAL_IO APP status. Refer @ref DIGITAL_IO_STATUS_t structure for d
 195:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 196:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 197:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function initializes GPIO port registers IOCR,PDISC,OMR,PDR/PHCR to configure pin direction,
 198:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * and pad driver strength/hysteresis.
 199:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 200:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 201:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * None
 202:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 203:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 204:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 205:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include "DAVE.h" //Declarations from DAVE Code Generation (includes SFR declaration)
 206:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 207:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 208:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 209:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 210:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 211:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 212:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 213:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 214:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 215:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 216:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 217:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 218:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1U)
 219:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 220:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 221:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 222:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 223:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 224:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 225:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 226:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return 1U;
 227:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  }
 228:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 229:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 230:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 231:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** DIGITAL_IO_STATUS_t DIGITAL_IO_Init(const DIGITAL_IO_t *const handler);
 232:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 233:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 234:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 235:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to set port pin high.
 236:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 237:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return None
 238:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 239:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 240:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to make port pin to high level
 241:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 242:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 243:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  DIGITAL_IO_SetOutputLow()
 244:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 245:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 246:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 247:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include "DAVE.h" //Declarations from DAVE Code Generation (includes SFR declaration)
 248:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 249:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 250:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 251:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 252:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 253:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 254:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 255:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 256:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 257:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 258:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 259:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 260:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1U)
 261:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 262:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 263:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 264:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 265:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DIGITAL_IO_SetOutputHigh(&DIGITAL_IO_0);
 266:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 267:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 268:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // Add application code here
 269:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 270:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 271:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 272:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 273:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 274:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 275:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 276:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_SetOutputHigh(const DIGITAL_IO_t *const handler)
 277:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 147              	 .loc 2 277 0
 148              	 .cfi_startproc
 149 0000 80B5     	 push {r7,lr}
 150              	.LCFI9:
 151              	 .cfi_def_cfa_offset 8
 152              	 .cfi_offset 7,-8
 153              	 .cfi_offset 14,-4
 154 0002 82B0     	 sub sp,sp,#8
 155              	.LCFI10:
 156              	 .cfi_def_cfa_offset 16
 157 0004 00AF     	 add r7,sp,#0
 158              	.LCFI11:
 159              	 .cfi_def_cfa_register 7
 160 0006 7860     	 str r0,[r7,#4]
 278:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_SetOutputHigh: handler null pointer", handler != NULL);
 279:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_SetOutputHigh(handler->gpio_port, handler->gpio_pin);
 161              	 .loc 2 279 0
 162 0008 7B68     	 ldr r3,[r7,#4]
 163 000a 1A68     	 ldr r2,[r3]
 164 000c 7B68     	 ldr r3,[r7,#4]
 165 000e 1B7B     	 ldrb r3,[r3,#12]
 166 0010 101C     	 mov r0,r2
 167 0012 191C     	 mov r1,r3
 168 0014 FFF7FEFF 	 bl XMC_GPIO_SetOutputHigh
 280:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 169              	 .loc 2 280 0
 170 0018 BD46     	 mov sp,r7
 171 001a 02B0     	 add sp,sp,#8
 172              	 
 173 001c 80BD     	 pop {r7,pc}
 174              	 .cfi_endproc
 175              	.LFE195:
 177 001e C046     	 .section .text.DIGITAL_IO_SetOutputLow,"ax",%progbits
 178              	 .align 2
 179              	 .code 16
 180              	 .thumb_func
 182              	DIGITAL_IO_SetOutputLow:
 183              	.LFB196:
 281:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 282:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 283:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to reset port pin.
 284:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 285:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return None
 286:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 287:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 288:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to make port pin to low level.
 289:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 290:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 291:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * DIGITAL_IO_SetOutputHigh()
 292:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 293:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 294:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 295:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  #include "DAVE.h" //Declarations from DAVE Code Generation (includes SFR declaration)
 296:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 297:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  int main(void)
 298:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  {
 299:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    DAVE_STATUS_t status;
 300:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_I
 301:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    if(status == DAVE_STATUS_SUCCESS)
 302:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 303:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG("DAVE Apps initialization success\n");
 304:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 305:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    else
 306:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 307:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 308:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *      while(1U)
 309:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *      {
 310:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *      }
 311:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 312:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    //Placeholder for user application code. The while loop below can be replaced with user applic
 313:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    DIGITAL_IO_SetOutputLow(&DIGITAL_IO_0);
 314:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    while(1U)
 315:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 316:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *      // Add application code here
 317:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 318:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 319:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 320:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 321:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 322:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 323:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 324:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_SetOutputLow(const DIGITAL_IO_t *const handler)
 325:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 184              	 .loc 2 325 0
 185              	 .cfi_startproc
 186 0000 80B5     	 push {r7,lr}
 187              	.LCFI12:
 188              	 .cfi_def_cfa_offset 8
 189              	 .cfi_offset 7,-8
 190              	 .cfi_offset 14,-4
 191 0002 82B0     	 sub sp,sp,#8
 192              	.LCFI13:
 193              	 .cfi_def_cfa_offset 16
 194 0004 00AF     	 add r7,sp,#0
 195              	.LCFI14:
 196              	 .cfi_def_cfa_register 7
 197 0006 7860     	 str r0,[r7,#4]
 326:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_SetOutputLow: handler null pointer", handler != NULL);
 327:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_SetOutputLow(handler->gpio_port,handler->gpio_pin);
 198              	 .loc 2 327 0
 199 0008 7B68     	 ldr r3,[r7,#4]
 200 000a 1A68     	 ldr r2,[r3]
 201 000c 7B68     	 ldr r3,[r7,#4]
 202 000e 1B7B     	 ldrb r3,[r3,#12]
 203 0010 101C     	 mov r0,r2
 204 0012 191C     	 mov r1,r3
 205 0014 FFF7FEFF 	 bl XMC_GPIO_SetOutputLow
 328:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 206              	 .loc 2 328 0
 207 0018 BD46     	 mov sp,r7
 208 001a 02B0     	 add sp,sp,#8
 209              	 
 210 001c 80BD     	 pop {r7,pc}
 211              	 .cfi_endproc
 212              	.LFE196:
 214 001e C046     	 .section .text.PIN_INTERRUPT_GetPinValue,"ax",%progbits
 215              	 .align 2
 216              	 .code 16
 217              	 .thumb_func
 219              	PIN_INTERRUPT_GetPinValue:
 220              	.LFB205:
 221              	 .file 3 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT/pin_interrupt.h"
   1:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
   2:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @file pin_interrupt.h
   3:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @date 2021-01-08
   4:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
   5:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * NOTE:
   6:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
   8:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @cond
   9:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
  10:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * PIN_INTERRUPT v4.0.4 - The PIN_INTERRUPT APP invokes user interrupt handler in a response to ris
  11:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                        edge event signal on a pin.
  12:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
  13:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * Copyright (c) 2016-2020, Infineon Technologies AG
  14:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * All rights reserved.                        
  15:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                                             
  16:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  17:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * following conditions are met:   
  18:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                                                                              
  19:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  20:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   disclaimer.                        
  21:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * 
  22:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  23:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   disclaimer in the documentation and/or other materials provided with the distribution.     
  24:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                         
  25:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  26:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   products derived from this software without specific prior written permission. 
  27:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                                             
  28:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  29:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  30:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  31:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  32:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  33:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  34:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.    
  35:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *                                                                              
  36:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  37:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * with Infineon Technologies AG (dave@infineon.com).         
  38:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
  39:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
  40:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * Change History
  41:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * --------------
  42:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * 2015-12-03:
  43:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     - Initial version for DAVEv4. <BR>
  44:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * 
  45:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * 2021-01-08:
  46:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     - Modified check for minimum XMCLib version
  47:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
  48:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @endcond 
  49:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
  50:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
  51:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  52:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #ifndef PIN_INTERRUPT_H
  53:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #define PIN_INTERRUPT_H
  54:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  55:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**************************************************************************************************
  56:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * HEADER FILES                                                                                    
  57:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
  58:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #if (UC_SERIES == XMC14)
  59:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #include "xmc_scu.h"
  60:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #endif
  61:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #include "xmc_gpio.h"
  62:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #include "xmc_eru.h"
  63:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  64:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #include "DAVE_Common.h"
  65:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #include "pin_interrupt_conf.h"
  66:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  67:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**************************************************************************************************
  68:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * MACROS                                                                                          
  69:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
  70:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #define PIN_INTERRUPT_XMC_LIB_MAJOR_VERSION 2
  71:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #define PIN_INTERRUPT_XMC_LIB_MINOR_VERSION 1
  72:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #define PIN_INTERRUPT_XMC_LIB_PATCH_VERSION 6
  73:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  74:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #if !((XMC_LIB_MAJOR_VERSION > PIN_INTERRUPT_XMC_LIB_MAJOR_VERSION) ||\
  75:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****       ((XMC_LIB_MAJOR_VERSION == PIN_INTERRUPT_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION > P
  76:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****       ((XMC_LIB_MAJOR_VERSION == PIN_INTERRUPT_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION == 
  77:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #error "PIN_INTERRUPT requires XMC Peripheral Library v2.1.6 or higher"
  78:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #endif
  79:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  80:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
  81:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @ingroup App_publicparam
  82:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @{
  83:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
  84:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
  85:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  @brief Initialization data structure for PIN_INTERRUPT APP
  86:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
  87:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  88:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
  89:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @}
  90:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
  91:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
  92:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  /*************************************************************************************************
  93:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * ENUMS
  94:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
  95:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
  96:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @ingroup PIN_INTERRUPT_enumerations
  97:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @{
  98:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
  99:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /*
 100:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief enumeration for PIN_INTERRUPT APP
 101:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 102:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** typedef enum PIN_INTERRUPT_STATUS
 103:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
 104:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_STATUS_SUCCESS = 0U,        /**<APP initialization is success */
 105:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_STATUS_FAILURE = 1U         /**<APP initialization is failure */
 106:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** } PIN_INTERRUPT_STATUS_t;
 107:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 108:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 109:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 110:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * Defines trigger edge for the event generation by ETLx (Event Trigger Logic, x = [0 to 3]) unit, 
 111:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * from ERSx(Event request source, x = [0 to 3]) unit.
 112:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 113:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** typedef enum PIN_INTERRUPT_EDGE
 114:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
 115:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_EDGE_NONE = 0U, /**< no event enabled */
 116:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_EDGE_RISING = 1U,   /**< detection of rising edge generates the event */
 117:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_EDGE_FALLING = 2U,  /**< detection of falling edge generates the event */
 118:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   PIN_INTERRUPT_EDGE_BOTH = 3U      /**< detection of either edges generates the event */
 119:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** } PIN_INTERRUPT_EDGE_t;
 120:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 121:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @}
 122:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 123:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 124:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**************************************************************************************************
 125:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * DATA STRUCTURES
 126:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** ***************************************************************************************************
 127:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 128:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @ingroup PIN_INTERRUPT_datastructures
 129:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @{
 130:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 131:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 132:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 133:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief Configuration structure for PIN_INTERRUPT APP
 134:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 135:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** typedef struct PIN_INTERRUPT
 136:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
 137:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_ERU_t *eru;  /**< Mapped ERU module */
 138:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_GPIO_PORT_t *port;  /**< Mapped port number */
 139:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_GPIO_CONFIG_t gpio_config;   /**< Initializes the input pin characteristics */
 140:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_ERU_ETL_CONFIG_t etl_config;  /**< reference to ERUx_ETLy (x = [0..1], y = [0..4])
 141:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****                                                       module configuration */
 142:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #if (UC_SERIES == XMC14)
 143:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_SCU_IRQCTRL_t irqctrl;  /**< selects the interrupt source for a NVIC interrupt node*/
 144:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #endif
 145:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   IRQn_Type IRQn;       /**< Mapped NVIC Node */
 146:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   uint8_t irq_priority; 	  /**< Node Interrupt Priority */
 147:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #if (UC_FAMILY == XMC4)
 148:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   uint8_t irq_subpriority;  /**< Node Interrupt SubPriority only valid for XMC4x */
 149:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #endif
 150:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   uint8_t etl; /*< ETLx channel (x = [0..3])*/
 151:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   uint8_t ogu; /*< OGUy channel (y = [0..3])*/
 152:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   uint8_t pin; /*< Mapped pin number */
 153:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   bool enable_at_init;  /**< Interrupt enable for Node at initialization*/
 154:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** } PIN_INTERRUPT_t;
 155:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 156:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @}
 157:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 158:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 159:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #ifdef __cplusplus
 160:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** extern "C" {
 161:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** #endif
 162:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**************************************************************************************************
 163:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * API Prototypes
 164:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  **************************************************************************************************
 165:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 166:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @ingroup PIN_INTERRUPT_apidoc
 167:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @{
 168:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 169:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 170:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief Get PIN_INTERRUPT APP version
 171:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @return DAVE_APP_VERSION_t APP version information (major, minor and patch number)
 172:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 173:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * \par<b>Description: </b><br>
 174:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * The function can be used to check application software compatibility with a
 175:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * specific version of the APP.
 176:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 177:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * \par<b>Example Usage:</b><br>
 178:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 179:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @code
 180:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * #include "DAVE.h"
 181:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 182:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * int main(void) 
 183:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * {
 184:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   DAVE_STATUS_t init_status;
 185:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   DAVE_APP_VERSION_t version;
 186:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 187:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   // Initialize PIN_INTERRUPT APP:
 188:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   // PIN_INTERRUPT_Init() is called from within DAVE_Init().
 189:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   init_status = DAVE_Init();
 190:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 191:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   if (DAVE_STATUS_SUCCESS == init_status)
 192:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   {
 193:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     version = PIN_INTERRUPT_GetAppVersion();
 194:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     if (version.major != 4U) {
 195:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *       // Probably, not the right version.
 196:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     }
 197:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   }
 198:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 199:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   // More code here
 200:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   while(1)
 201:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   {
 202:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   }
 203:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   return (1);
 204:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * }
 205:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @endcode<BR>
 206:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 207:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** DAVE_APP_VERSION_t PIN_INTERRUPT_GetAppVersion(void);
 208:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 209:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 210:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief Initializes a PIN_INTERRUPT APP instance
 211:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @param handle Pointer pointing to APP data structure. Refer @ref PIN_INTERRUPT_t for details.
 212:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @return
 213:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *            PIN_INTERRUPT_STATUS_SUCCESS             : if initialization is successful\n
 214:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *            PIN_INTERRUPT_STATUS_FAILURE             : if initialization is failed
 215:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 216:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * \par<b>Description:</b><br>
 217:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * PIN_INTERRUPT_Init API is called during initialization of DAVE APPS. This API Initializes input 
 218:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * ERU and OGU hardware module initialization, Configures NVIC node and its priority in order to ge
 219:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 220:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * \par<b>Example Usage:</b><br>
 221:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 222:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @code
 223:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * #include "DAVE.h"
 224:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 225:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * int main(void)
 226:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * {
 227:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   DAVE_STATUS_t status;
 228:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 229:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   status = DAVE_Init();  //  PIN_INTERRUPT_Init API is called during initialization of DAVE APPS
 230:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   if (DAVE_STATUS_SUCCESS == status)
 231:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   {
 232:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     // user code
 233:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 234:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     while(1)
 235:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     {
 236:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 237:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *     }
 238:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   }
 239:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *   return (1);
 240:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * }
 241:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 242:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @endcode<BR>
 243:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 244:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** PIN_INTERRUPT_STATUS_t PIN_INTERRUPT_Init(const PIN_INTERRUPT_t *const handle);
 245:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 246:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 247:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief Enables the IRQ.
 248:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @param handle Pointer pointing to APP data structure. Refer @ref PIN_INTERRUPT_t for details.
 249:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @return None
 250:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * <BR><P ALIGN="LEFT"><B>Example:</B>
 251:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 252:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @code
 253:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  #include "DAVE.h"
 254:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 255:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  int main(void)
 256:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  {
 257:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    DAVE_STATUS_t status;
 258:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 259:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    status = DAVE_Init();  //  PIN_INTERRUPT_Init API is called during initialization of DAVE APP
 260:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    if (DAVE_STATUS_SUCCESS == status)
 261:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    {
 262:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *      // user code
 263:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 264:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *      PIN_INTERRUPT_Enable(&PIN_INTERRUPT_0);
 265:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *      while(1)
 266:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *      {}
 267:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    }
 268:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 269:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    return (1);
 270:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  }
 271:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @endcode<BR> </p>
 272:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 273:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** __STATIC_INLINE void PIN_INTERRUPT_Enable(const PIN_INTERRUPT_t *const handle)
 274:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
 275:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_ASSERT("PIN_INTERRUPT_Enable: Handler null pointer", handle != NULL);
 276:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   NVIC_EnableIRQ(handle->IRQn);
 277:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** }
 278:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 279:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 280:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @brief Disables the IRQ.
 281:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @param handle Pointer pointing to APP data structure. Refer @ref PIN_INTERRUPT_t for details.
 282:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @return None
 283:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * <BR><P ALIGN="LEFT"><B>Example:</B>
 284:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 285:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @code
 286:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  #include "DAVE.h"
 287:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 288:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  int main(void)
 289:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  {
 290:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 291:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    DAVE_STATUS_t status;
 292:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 293:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    status = DAVE_Init();  //  PIN_INTERRUPT_Init API is called during initialization of DAVE APP
 294:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    if(DAVE_STATUS_SUCCESS == status)
 295:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    {
 296:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *      // user code
 297:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 298:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *      PIN_INTERRUPT_Disable(&PIN_INTERRUPT_0);
 299:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *      while(1)
 300:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *      {}
 301:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    }
 302:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 303:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *    return (1);
 304:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *
 305:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  *  }
 306:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  * @endcode<BR> </p>
 307:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****  */
 308:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** __STATIC_INLINE void PIN_INTERRUPT_Disable(const PIN_INTERRUPT_t *const handle)
 309:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
 310:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_ASSERT("PIN_INTERRUPT_Disable: Handler null pointer", handle != NULL);
 311:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   NVIC_DisableIRQ(handle->IRQn);
 312:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** }
 313:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** 
 314:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** /**
 315:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * @brief Read input level of port pin.
 316:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * @param handle Pointer pointing to APP data structure. Refer @ref PIN_INTERRUPT_t for details.
 317:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * @return uint32_t input logic level. Range:0-1
 318:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *
 319:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * \par<b>Description:</b><br>
 320:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * This function reads the Pn_IN register and returns the current logical value at the GPIO pin.
 321:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *
 322:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *
 323:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * Example Usage:
 324:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * @code
 325:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * #include "DAVE.h"//Declarations from DAVE Code Generation (includes SFR declaration)
 326:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *
 327:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * int main(void)
 328:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * {
 329:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   DAVE_STATUS_t status;
 330:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   uint32_t pin_status;
 331:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   status = DAVE_Init();   // (DAVE_STATUS_t)PIN_INTERRUPT_Init(&PIN_INTERRUPT_0) is called within
 332:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   
 333:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   if (status == DAVE_STATUS_SUCCESS)
 334:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   {
 335:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 336:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   }
 337:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   else
 338:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   {
 339:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 340:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     while(1U)
 341:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     {
 342:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     }
 343:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   }
 344:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 345:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   while(1U)
 346:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   {
 347:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     pin_status = PIN_INTERRUPT_GetPinValue(&PIN_INTERRUPT_0);
 348:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     if (pin_status == 1)
 349:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     {
 350:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *       // Add application code here
 351:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     }
 352:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     else
 353:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     {
 354:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *       // Add application code here
 355:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *     }
 356:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   }
 357:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *   return (1);
 358:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** * }
 359:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** *  @endcode
 360:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** */
 361:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** __STATIC_INLINE uint32_t PIN_INTERRUPT_GetPinValue(const PIN_INTERRUPT_t *const handle)
 362:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** {
 222              	 .loc 3 362 0
 223              	 .cfi_startproc
 224 0000 80B5     	 push {r7,lr}
 225              	.LCFI15:
 226              	 .cfi_def_cfa_offset 8
 227              	 .cfi_offset 7,-8
 228              	 .cfi_offset 14,-4
 229 0002 82B0     	 sub sp,sp,#8
 230              	.LCFI16:
 231              	 .cfi_def_cfa_offset 16
 232 0004 00AF     	 add r7,sp,#0
 233              	.LCFI17:
 234              	 .cfi_def_cfa_register 7
 235 0006 7860     	 str r0,[r7,#4]
 363:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   XMC_ASSERT("PIN_INTERRUPT_GetPinValue: Handler null pointer", handle != NULL);
 364:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h ****   return (XMC_GPIO_GetInput(handle->port, handle->pin));
 236              	 .loc 3 364 0
 237 0008 7B68     	 ldr r3,[r7,#4]
 238 000a 5A68     	 ldr r2,[r3,#4]
 239 000c 7B68     	 ldr r3,[r7,#4]
 240 000e 9B7F     	 ldrb r3,[r3,#30]
 241 0010 101C     	 mov r0,r2
 242 0012 191C     	 mov r1,r3
 243 0014 FFF7FEFF 	 bl XMC_GPIO_GetInput
 244 0018 031C     	 mov r3,r0
 365:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT\pin_interrupt.h **** }
 245              	 .loc 3 365 0
 246 001a 181C     	 mov r0,r3
 247 001c BD46     	 mov sp,r7
 248 001e 02B0     	 add sp,sp,#8
 249              	 
 250 0020 80BD     	 pop {r7,pc}
 251              	 .cfi_endproc
 252              	.LFE205:
 254 0022 C046     	 .section .text.XMC_WDT_Start,"ax",%progbits
 255              	 .align 2
 256              	 .code 16
 257              	 .thumb_func
 259              	XMC_WDT_Start:
 260              	.LFB214:
 261              	 .file 4 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc/xmc_wdt.h"
   1:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
   2:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @file xmc_wdt.h
   3:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @date 2015-08-06
   4:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
   5:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @cond
   6:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *****************************************************************************
   7:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
   9:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * All rights reserved.
  11:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
  12:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
  14:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Permission is hereby granted, free of charge, to any person or organization
  15:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * obtaining a copy of the software and accompanying documentation covered by
  16:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * do so, all subject to the following:
  20:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
  21:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * The copyright notices in the Software and this entire statement, including
  22:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * the above license grant, this restriction and the following disclaimer,
  23:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * must be included in all copies of the Software, in whole or in part, and
  24:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * all derivative works of the Software, unless such copies or derivative
  25:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * works are solely in the form of machine-executable object code generated by
  26:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * a source language processor.
  27:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
  28:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * DEALINGS IN THE SOFTWARE.
  35:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
  36:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * To improve the quality of the software, users are encouraged to share
  37:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * at XMCSupport@infineon.com.
  39:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *****************************************************************************
  40:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
  41:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Change History
  42:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * --------------
  43:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
  44:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * 2015-02-20:
  45:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *     - Initial <br>
  46:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *     - Documentation updates <br>
  47:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
  48:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * 2015-06-20:
  49:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  50:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
  51:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * 2015-08-06:
  52:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *     - Bug fix in XMC_WDT_SetDebugMode() API, Wrong register is being configured.<br>
  53:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @endcond
  54:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
  55:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
  56:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #ifndef XMC_WDT_H
  57:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #define XMC_WDT_H
  58:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
  59:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**************************************************************************************************
  60:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * HEADER FILES
  61:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  **************************************************************************************************
  62:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
  63:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #include "xmc_common.h"
  64:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #include "xmc_scu.h"
  65:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
  66:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @addtogroup XMClib XMC Peripheral Library
  67:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @{
  68:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
  69:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
  70:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
  71:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @addtogroup WDT
  72:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @brief Watchdog driver for the XMC microcontroller family.
  73:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
  74:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * The watchdog unit (WDT) improves the system integrity, by triggering the system reset request to
  75:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * back from the unresponsive state to normal operation.
  76:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
  77:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * This LLD provides the Configuration structure XMC_WDT_CONFIG_t and initialization function XMC_W
  78:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * It can be used to:
  79:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * -# Start or Stop the watchdog timer. (XMC_WDT_Start() and XMC_WDT_Stop())
  80:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * -# Service the watchdog timer. (XMC_WDT_Service())
  81:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * -# Configure the service window upper bound and lower bound timing values. (XMC_WDT_SetWindowBou
  82:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * -# Enable the generation of the pre-warning event for the first overflow of the timer. (XMC_WDT_
  83:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * -# Clear the pre-warning alarm event. It is mandatory to clear the flag during pre-warning alarm
  84:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****       generating reset request for the second overflow of the timer. (XMC_WDT_ClearAlarm())
  85:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * -# Suspend the watchdog timer during Debug HALT mode. (XMC_WDT_SetDebugMode())
  86:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * -# Configure service indication pulse width.(XMC_WDT_SetServicePulseWidth())
  87:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
  88:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @{
  89:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
  90:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
  91:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**************************************************************************************************
  92:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * MACROS
  93:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   *************************************************************************************************
  94:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
  95:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #define XMC_WDT_MAGIC_WORD             (0xABADCAFEU) /* Magic word to be written in Service Registe
  96:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****                                                           to service or feed the watchdog. */
  97:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
  98:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**************************************************************************************************
  99:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * ENUMS
 100:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   *************************************************************************************************
 101:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 102:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 103:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *  Defines working modes for watchdog. Use type XMC_WDT_MODE_t for this enum.
 104:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 105:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** typedef enum XMC_WDT_MODE
 106:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** {
 107:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   XMC_WDT_MODE_TIMEOUT    = (uint32_t)0x0 << WDT_CTR_PRE_Pos, /**< Generates reset request as soon 
 108:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****                                                                    occurs. */
 109:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   XMC_WDT_MODE_PREWARNING = (uint32_t)0x1 << WDT_CTR_PRE_Pos  /**< Generates an alarm event for the
 110:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****                                                                    reset request after subsequent o
 111:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****                                                                    serviced after first overflow. *
 112:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** } XMC_WDT_MODE_t;
 113:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 114:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 115:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *  Defines debug behaviour of watchdog when the CPU enters HALT mode. Use type XMC_WDT_DEBUG_MODE_
 116:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 117:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** typedef enum XMC_WDT_DEBUG_MODE
 118:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** {
 119:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   XMC_WDT_DEBUG_MODE_STOP = (uint32_t)0x0 << WDT_CTR_DSP_Pos, /**< Watchdog counter is paused durin
 120:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   XMC_WDT_DEBUG_MODE_RUN  = (uint32_t)0x1 << WDT_CTR_DSP_Pos  /**< Watchdog counter is not paused d
 121:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** } XMC_WDT_DEBUG_MODE_t;
 122:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 123:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**************************************************************************************************
 124:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * DATA STRUCTURES
 125:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   *************************************************************************************************
 126:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /* Anonymous structure/union guard start */
 127:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #if defined(__CC_ARM)
 128:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #pragma push
 129:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #pragma anon_unions
 130:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #elif defined(__TASKING__)
 131:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #pragma warning 586
 132:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #endif
 133:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 134:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 135:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Structure for initializing watchdog timer. Use type XMC_WDT_CONFIG_t for this structure.
 136:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 137:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** typedef struct XMC_WDT_CONFIG
 138:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** {
 139:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   uint32_t window_upper_bound; /**< Upper bound for service window (WUB). Reset request is generate
 140:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****                                     timer. ALways upper bound value has to be more than lower bound
 141:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****                                     lower than WLB, triggers a system reset after timer crossed upp
 142:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****                                     Range: [0H to FFFFFFFFH] */
 143:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   uint32_t window_lower_bound; /**< Lower bound for servicing window (WLB). Setting the lower bound
 144:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****                                     window mechanism.\n
 145:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****                                     Range: [0H to FFFFFFFFH] */
 146:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   union
 147:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   {
 148:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****     struct
 149:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****     {
 150:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****       uint32_t : 1;
 151:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****       uint32_t prewarn_mode : 1;        /**< Pre-warning mode (PRE). This accepts boolean values as
 152:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****       uint32_t : 2;
 153:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****       uint32_t run_in_debug_mode : 1;   /**< Watchdog timer behaviour during debug (DSP). This acce
 154:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****       uint32_t : 3;
 155:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****       uint32_t service_pulse_width : 8; /**< Service Indication Pulse Width (SPW). Generated Pulse 
 156:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****                                              in fwdt cycles.\n
 157:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****                                              Range: [0H to FFH] */
 158:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****       uint32_t : 16;
 159:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****     };
 160:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****     uint32_t wdt_ctr; /* Value of operation mode control register (CTR). It’s bit fields are repr
 161:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****                            union members. */
 162:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   };
 163:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** } XMC_WDT_CONFIG_t;
 164:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /* Anonymous structure/union guard end */
 165:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #if defined(__CC_ARM)
 166:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #pragma pop
 167:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #elif defined(__TASKING__)
 168:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #pragma warning restore
 169:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #endif
 170:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**************************************************************************************************
 171:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * API PROTOTYPES
 172:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   *************************************************************************************************
 173:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 174:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #ifdef __cplusplus
 175:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** extern "C" {
 176:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** #endif
 177:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 178:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 179:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param None
 180:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 181:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @return None
 182:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 183:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Description:</b><br>
 184:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \if XMC4
 185:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Enables watchdog clock and releases watchdog reset.\n
 186:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \endif
 187:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \if XMC1
 188:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Enables watchdog clock.\n
 189:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \endif
 190:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par
 191:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * This API is invoked by XMC_WDT_Init() and therefore no need to call it explicitly during watchdo
 192:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * sequence. Invoke this API to enable watchdog once again if the watchdog is disabled by invoking 
 193:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 194:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Note:</b><br>
 195:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \if XMC4
 196:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * 1. It is required to configure the watchdog, again after invoking XMC_WDT_Disable(). Since all t
 197:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *    reset with default values.
 198:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \endif
 199:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \if XMC1
 200:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * 1. Not required to configure the watchdog again after invoking XMC_WDT_Disable(). Since the regi
 201:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *    the configured values.
 202:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \endif
 203:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Related APIs:</b><BR>
 204:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * XMC_WDT_Init(), XMC_WDT_Disable()
 205:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 206:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** void XMC_WDT_Enable(void);
 207:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 208:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 209:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param None
 210:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 211:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @return None
 212:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 213:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Description:</b><br>
 214:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \if XMC4
 215:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Disables the clock and resets watchdog timer.\n
 216:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \endif
 217:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \if XMC1
 218:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Disables the clock to the watchdog timer.\n
 219:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \endif
 220:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 221:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Note:</b><br>
 222:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \if XMC4
 223:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * 1. Resets the registers with default values. So XMC_WDT_Init() has to be invoked again to config
 224:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \endif
 225:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \if XMC1
 226:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * 1. After invoking XMC_WDT_Disable(), all register values are displayed with 0F in debugger. Once
 227:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****       calling XMC_WDT_Enable(), previous configured register values are displayed. No need to invok
 228:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****       again.
 229:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \endif
 230:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Related APIs:</b><BR>
 231:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * XMC_WDT_Enable()
 232:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 233:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** void XMC_WDT_Disable(void);
 234:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 235:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 236:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param config pointer to a constant watchdog configuration data structure. Refer data structure 
 237:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *               for detail.
 238:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 239:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @return None
 240:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 241:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Description:</b><br>
 242:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Initializes and configures watchdog with configuration data pointed by \a config.\n
 243:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par
 244:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * It invokes XMC_WDT_Enable() to enable clock and release reset. Then configures the lower and upp
 245:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * working mode (timeout/pre-warning), debug behaviour and service request indication pulse width.
 246:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 247:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Note:</b><br>
 248:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * 1. With out invoking this XMC_WDT_Init() or XMC_WDT_Enable(), invocation of other APIs like XMC_
 249:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *    XMC_WDT_SetMode(), XMC_WDT_SetServicePulseWidth(), XMC_WDT_SetDebugMode(), XMC_WDT_Start(), X
 250:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *    XMC_WDT_Service(), XMC_WDT_ClearAlarm() has no affect.
 251:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 252:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** void XMC_WDT_Init(const XMC_WDT_CONFIG_t *const config);
 253:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 254:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 255:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param lower_bound specifies watchdog window lower bound in terms of watchdog clock (fWDT) cycle
 256:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *                    Range: [0H to FFFFFFFFH].
 257:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param upper_bound specifies watchdog window upper bound in terms of watchdog clock (fWDT) cycle
 258:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *                    Range: [0H to FFFFFFFFH].
 259:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 260:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @return None
 261:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 262:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Description:</b><br>
 263:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Sets watchdog window lower and upper bounds by updating WLB and WUB registers.\n
 264:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par
 265:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Window lower and upper bounds are set during initialization in XMC_WDT_Init(). Invoke this API t
 266:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * needed later in the program. This upper bound and lower bound can be calculated by using the bel
 267:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *       upper_bound or lower_bound = desired_boundary_time(sec) * fwdt(hz)
 268:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 269:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Note:</b>
 270:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * 1. Always ensure that upper_bound is greater than the lower_bound value. If not, whenever timer 
 271:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *    upper_bound value it triggers the reset(wdt_rst_req) of the controller.
 272:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 273:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** __STATIC_INLINE void XMC_WDT_SetWindowBounds(uint32_t lower_bound, uint32_t upper_bound)
 274:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** {
 275:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   WDT->WLB = lower_bound;
 276:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   WDT->WUB = upper_bound;
 277:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** }
 278:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 279:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 280:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param mode is one of the working modes of the watchdog timer, i.e timeout or pre-warning. Refer
 281:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *             for valid values.
 282:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 283:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @return None
 284:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 285:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Description:</b><br>
 286:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Sets watchdog working mode (timeout or pre-warning) by updating PRE bit of CTR register.\n
 287:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par
 288:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * The working mode is set during initialization in XMC_WDT_Init(). Invoke this API to alter the mo
 289:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * the program.
 290:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 291:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** __STATIC_INLINE void XMC_WDT_SetMode(XMC_WDT_MODE_t mode)
 292:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** {
 293:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   WDT->CTR = (WDT->CTR & (uint32_t)~WDT_CTR_PRE_Msk) | (uint32_t)mode;
 294:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** }
 295:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 296:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 297:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param service_pulse_width specifies Service indication pulse width in terms of fwdt.
 298:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *                            Range: [0H – FFH].
 299:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @return None
 300:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 301:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Description:</b><br>
 302:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Sets service indication pulse width by updating SPW bit field of CTR register.\n
 303:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par
 304:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * The service indication pulse (with width service_pulse_width + 1 in fwdt cycles) is generated on
 305:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * or feeding of watchdog. The pulse width is initially set during initialization in XMC_WDT_Init()
 306:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * alter the width as needed later in the program.
 307:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 308:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** __STATIC_INLINE void XMC_WDT_SetServicePulseWidth(uint8_t service_pulse_width)
 309:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** {
 310:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   WDT->CTR = (WDT->CTR & (uint32_t)~WDT_CTR_SPW_Msk) | ((uint32_t)service_pulse_width << WDT_CTR_SP
 311:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** }
 312:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 313:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 314:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param debug_mode running state of watchdog during debug halt mode. Refer @ref XMC_WDT_DEBUG_MOD
 315:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *                   valid values.
 316:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 317:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @return None
 318:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 319:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Description:</b><br>
 320:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Sets debug behaviour of watchdog by modifying DSP bit of CTR register.\n
 321:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par
 322:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Depending upon DSP bit, the watchdog timer stops when CPU is in HALT mode. The debug behaviour i
 323:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * XMC_WDT_DEBUG_MODE_STOP during initialization in XMC_WDT_Init(). Invoke this API to change the d
 324:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * needed later in the program.
 325:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 326:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** __STATIC_INLINE void XMC_WDT_SetDebugMode(const XMC_WDT_DEBUG_MODE_t debug_mode)
 327:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** {
 328:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   WDT->CTR = (WDT->CTR & (uint32_t)~WDT_CTR_DSP_Msk) | (uint32_t)debug_mode;
 329:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** }
 330:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 331:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 332:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param None
 333:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 334:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @return None
 335:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 336:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Description:</b><br>
 337:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Start the watchdog timer by setting ENB bit of CTR register.\n
 338:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par
 339:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Invoke this API to start the watchdog after initialization, or to resume the watchdog when
 340:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * paused by invoking XMC_WDT_Stop().
 341:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 342:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Related APIs:</b><BR>
 343:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * XMC_WDT_Init(), XMC_WDT_Stop()
 344:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 345:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** __STATIC_INLINE void XMC_WDT_Start(void)
 346:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** {
 262              	 .loc 4 346 0
 263              	 .cfi_startproc
 264 0000 80B5     	 push {r7,lr}
 265              	.LCFI18:
 266              	 .cfi_def_cfa_offset 8
 267              	 .cfi_offset 7,-8
 268              	 .cfi_offset 14,-4
 269 0002 00AF     	 add r7,sp,#0
 270              	.LCFI19:
 271              	 .cfi_def_cfa_register 7
 347:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   WDT->CTR |= (uint32_t)WDT_CTR_ENB_Msk;
 272              	 .loc 4 347 0
 273 0004 034B     	 ldr r3,.L10
 274 0006 034A     	 ldr r2,.L10
 275 0008 5268     	 ldr r2,[r2,#4]
 276 000a 0121     	 mov r1,#1
 277 000c 0A43     	 orr r2,r1
 278 000e 5A60     	 str r2,[r3,#4]
 348:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** }
 279              	 .loc 4 348 0
 280 0010 BD46     	 mov sp,r7
 281              	 
 282 0012 80BD     	 pop {r7,pc}
 283              	.L11:
 284              	 .align 2
 285              	.L10:
 286 0014 00000240 	 .word 1073872896
 287              	 .cfi_endproc
 288              	.LFE214:
 290              	 .section .text.XMC_WDT_Service,"ax",%progbits
 291              	 .align 2
 292              	 .code 16
 293              	 .thumb_func
 295              	XMC_WDT_Service:
 296              	.LFB217:
 349:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 350:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 351:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param None
 352:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 353:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @return None
 354:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 355:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Description:</b><br>
 356:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Pauses watchdog timer by resetting ENB bit of CTR register.\n
 357:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par
 358:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Invoke this API to pause the watchdog as needed in the program e.g. debugging through software c
 359:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 360:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Related APIs:</b><BR>
 361:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * XMC_WDT_Init(), XMC_WDT_Stop()
 362:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 363:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** __STATIC_INLINE void XMC_WDT_Stop(void)
 364:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** {
 365:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   WDT->CTR &= (uint32_t)~WDT_CTR_ENB_Msk;
 366:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** }
 367:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 368:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 369:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param None
 370:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 371:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @return uint32_t Current count value of watchdog timer register (TIM).
 372:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *                  Range: [0H to FFFFFFFFH]
 373:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 374:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Description:</b><br>
 375:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Reads current count of timer register (TIM).\n
 376:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par
 377:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Invoke this API before servicing or feeding the watchdog to check whether count is between lower
 378:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * window bounds.
 379:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 380:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Related APIs:</b><BR>
 381:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * XMC_WDT_Service()
 382:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 383:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** __STATIC_INLINE uint32_t XMC_WDT_GetCounter(void)
 384:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** {
 385:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   return WDT->TIM;
 386:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** }
 387:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 388:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 389:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param None
 390:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 391:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @return None
 392:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 393:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Description:</b><br>
 394:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Services or feeds the watchdog by writing the Magic word in SRV register.\n
 395:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par
 396:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Service watchdog when count value of watchdog timer is between lower and upper window bounds. Su
 397:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * will reset watchdog timer (TIM register) to 0H and generate service indication pulse.
 398:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 399:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Note:</b><br>
 400:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * 1. invoking this API when count value of watchdog timer is less than window lower bound results
 401:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *    wrong servicing and immediately triggers reset request.
 402:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 403:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Related APIs:</b><BR>
 404:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * XMC_WDT_GetCounter(), XMC_WDT_SetWindowBounds(), XMC_WDT_SetServicePulseWidth()
 405:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 406:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** __STATIC_INLINE void XMC_WDT_Service(void)
 407:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** {
 297              	 .loc 4 407 0
 298              	 .cfi_startproc
 299 0000 80B5     	 push {r7,lr}
 300              	.LCFI20:
 301              	 .cfi_def_cfa_offset 8
 302              	 .cfi_offset 7,-8
 303              	 .cfi_offset 14,-4
 304 0002 00AF     	 add r7,sp,#0
 305              	.LCFI21:
 306              	 .cfi_def_cfa_register 7
 408:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   WDT->SRV = XMC_WDT_MAGIC_WORD;
 307              	 .loc 4 408 0
 308 0004 024B     	 ldr r3,.L13
 309 0006 034A     	 ldr r2,.L13+4
 310 0008 9A60     	 str r2,[r3,#8]
 409:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** }
 311              	 .loc 4 409 0
 312 000a BD46     	 mov sp,r7
 313              	 
 314 000c 80BD     	 pop {r7,pc}
 315              	.L14:
 316 000e C046     	 .align 2
 317              	.L13:
 318 0010 00000240 	 .word 1073872896
 319 0014 FECAADAB 	 .word -1414673666
 320              	 .cfi_endproc
 321              	.LFE217:
 323              	 .section .text.XMC_WDT_ClearAlarm,"ax",%progbits
 324              	 .align 2
 325              	 .code 16
 326              	 .thumb_func
 328              	XMC_WDT_ClearAlarm:
 329              	.LFB218:
 410:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** 
 411:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** /**
 412:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @param None
 413:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 414:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * @return None
 415:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 416:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Description:</b><br>
 417:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * Clears pre-warning alarm by setting ALMC bit in WDTCLR register.\n
 418:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par
 419:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * In pre-warning mode, first overflow of the timer upper window bound fires the pre-warning alarm.
 420:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * must be invoked to clear the alarm alarm. After clearing of the alarm, watchdog timer must be se
 421:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * time window. Otherwise watchdog timer triggers the reset request up on crossing the upper bound 
 422:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * cycle.
 423:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  *
 424:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * \par<b>Related APIs:</b><BR>
 425:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  * XMC_WDT_Service(), XMC_WDT_SetMode()
 426:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****  */
 427:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** __STATIC_INLINE void XMC_WDT_ClearAlarm(void)
 428:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** {
 330              	 .loc 4 428 0
 331              	 .cfi_startproc
 332 0000 80B5     	 push {r7,lr}
 333              	.LCFI22:
 334              	 .cfi_def_cfa_offset 8
 335              	 .cfi_offset 7,-8
 336              	 .cfi_offset 14,-4
 337 0002 00AF     	 add r7,sp,#0
 338              	.LCFI23:
 339              	 .cfi_def_cfa_register 7
 429:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h ****   WDT->WDTCLR = WDT_WDTCLR_ALMC_Msk;
 340              	 .loc 4 429 0
 341 0004 024B     	 ldr r3,.L16
 342 0006 0122     	 mov r2,#1
 343 0008 DA61     	 str r2,[r3,#28]
 430:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_wdt.h **** }
 344              	 .loc 4 430 0
 345 000a BD46     	 mov sp,r7
 346              	 
 347 000c 80BD     	 pop {r7,pc}
 348              	.L17:
 349 000e C046     	 .align 2
 350              	.L16:
 351 0010 00000240 	 .word 1073872896
 352              	 .cfi_endproc
 353              	.LFE218:
 355              	 .section .text.WATCHDOG_Start,"ax",%progbits
 356              	 .align 2
 357              	 .code 16
 358              	 .thumb_func
 360              	WATCHDOG_Start:
 361              	.LFB219:
 362              	 .file 5 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG/watchdog.h"
   1:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
   2:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @file watchdog.h
   3:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @date 2016-02-09
   4:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
   5:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * NOTE:
   6:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
   8:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @cond
   9:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  **************************************************************************************************
  10:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * WATCHDOG v4.0.16 - Configures the watchdog peripheral instance.
  11:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  12:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * Copyright (c) 2016-2020, Infineon Technologies AG
  13:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * All rights reserved.
  14:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  15:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  16:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * following conditions are met:
  17:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  18:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  19:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   disclaimer.
  20:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  21:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  22:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  23:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  24:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  25:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   products derived from this software without specific prior written permission.
  26:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  27:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  28:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  29:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  30:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  31:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  32:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  33:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  34:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  35:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  36:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * with Infineon Technologies AG (dave@infineon.com).
  37:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  **************************************************************************************************
  38:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  39:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * Change History
  40:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * --------------
  41:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  42:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * 2015-02-16:
  43:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *     - Initial version<br>
  44:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  45:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * 2015-05-08:
  46:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *     - C++ guard applied to only API section<br>
  47:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *     - File guard updated according to the guidelines<br>
  48:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *     - Enum items of "WATCHDOG_EVENT_MODE" are changed to follow coding guidelines<br>
  49:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  50:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * 2015-06-20:
  51:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *     - "callback_func_ptr" in APP config structure is updated according to the GLOBAL_SCU APP.
  52:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  53:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * 2015-06-20:
  54:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *     - macro WATCHDOG_EVENT_CONFIGURATION is replaced with WATCHDOG_EVENT_VIA_SCU.
  55:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  56:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * 2016-02-09:
  57:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *     - Added a check for XMC4 devices, to verify that WATCHDOG clock is enabled or not in CLOCK_X
  58:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  59:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @endcond
  60:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
  61:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
  62:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
  63:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #ifndef WATCHDOG_H
  64:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #define WATCHDOG_H
  65:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**************************************************************************************************
  66:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * HEADER FILES
  67:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  **************************************************************************************************
  68:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #include "xmc_wdt.h"
  69:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #if(UC_FAMILY == XMC4)
  70:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #include "CLOCK_XMC4/clock_xmc4.h"
  71:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #else
  72:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #include "CLOCK_XMC1/clock_xmc1.h"
  73:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #endif
  74:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #include "watchdog_conf.h"
  75:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #include "DAVE_Common.h"
  76:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
  77:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**************************************************************************************************
  78:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * MACROS
  79:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  **************************************************************************************************
  80:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #define WATCHDOG_XMC_LIB_MAJOR_VERSION 2
  81:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #define WATCHDOG_XMC_LIB_MINOR_VERSION 0
  82:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #define WATCHDOG_XMC_LIB_PATCH_VERSION 0
  83:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
  84:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #if !((XMC_LIB_MAJOR_VERSION > WATCHDOG_XMC_LIB_MAJOR_VERSION) ||\
  85:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****       ((XMC_LIB_MAJOR_VERSION == WATCHDOG_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION > WATCHD
  86:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****       ((XMC_LIB_MAJOR_VERSION == WATCHDOG_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION == WATCH
  87:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #error "WATCHDOG requires XMC Peripheral Library v2.0.0 or higher"
  88:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #endif
  89:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
  90:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**************************************************************************************************
  91:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * ENUMS
  92:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  **************************************************************************************************
  93:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
  94:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @ingroup WATCHDOG_enumerations
  95:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @{
  96:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
  97:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
  98:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
  99:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *  @brief In case of XMC4000 devices, WatchDog event can be generated as  Regular Interrupt or can
 100:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *         NMI Request. Where as in case of XMC1000 device, it can be generated as Regular Interrup
 101:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
 102:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** typedef enum WATCHDOG_EVENT_MODE
 103:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** {
 104:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****     WATCHDOG_EVENT_MODE_INTERRUPT   = 0U, /**< Regular Interrupt */
 105:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****     WATCHDOG_EVENT_MODE_NMI_REQUEST = 1U /**< Promoted to NMI */
 106:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** } WATCHDOG_EVENT_MODE_t;
 107:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
 108:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
 109:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *  @brief Initialization status.
 110:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
 111:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** typedef enum WATCHDOG_STATUS
 112:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** {
 113:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   WATCHDOG_STATUS_SUCCESS = 0U, /**< Status success */
 114:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   WATCHDOG_STATUS_FAILURE, /**< Status failure */
 115:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** } WATCHDOG_STATUS_t;
 116:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
 117:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** * @}
 118:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** */
 119:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
 120:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**************************************************************************************************
 121:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** * DATA STRUCTURES
 122:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** ***************************************************************************************************
 123:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
 124:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @ingroup WATCHDOG_datastructures
 125:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @{
 126:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
 127:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
 128:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
 129:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @brief WATCHDOG_HandleType is  data structure for storing the GUI configured values of a WATCHDO
 130:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
 131:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** typedef struct WATCHDOG
 132:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** {
 133:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   const XMC_WDT_CONFIG_t* const config; /**< Configuration of WDT */
 134:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   #if ((WATCHDOG_PREWARNING_CHECK == 1U) && (WATCHDOG_EVENT_VIA_SCU == 1U))
 135:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   #if(UC_FAMILY == XMC4)
 136:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   GLOBAL_SCU_XMC4_t* const scu_global_handler; /**< pointer to SCU_GLOBAL APP instance*/
 137:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   GLOBAL_SCU_XMC4_EVENT_HANDLER_t callback_func_ptr; /**< Callback function pointer */
 138:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   #else
 139:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   GLOBAL_SCU_XMC1_t* const scu_global_handler; /**< pointer to SCU_GLOBAL APP instance*/
 140:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   GLOBAL_SCU_XMC1_EVENT_HANDLER_t callback_func_ptr; /**< Callback function pointer */
 141:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   #endif
 142:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   #endif
 143:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   bool  initialized; /**< Holds the initialization status */
 144:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** } WATCHDOG_t;
 145:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
 146:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
 147:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** * @}
 148:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** */
 149:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**************************************************************************************************
 150:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** * API Prototypes
 151:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** ***************************************************************************************************
 152:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #ifdef __cplusplus
 153:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** extern "C" {
 154:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** #endif
 155:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
 156:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @brief Get WATCHDOG APP version
 157:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @return DAVE_APP_VERSION_t APP version information (major, minor and patch number)
 158:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * <BR>
 159:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * \par<b>Description:</b><br>
 160:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * The function can be used to check application software compatibility with a
 161:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * specific version of the APP.
 162:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 163:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * Example Usage:
 164:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 165:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @code
 166:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * #include "DAVE.h"
 167:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * int main(void)
 168:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * {
 169:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   DAVE_STATUS_t status;
 170:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   DAVE_APP_VERSION_t app_version;
 171:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 172:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   status = DAVE_Init();    // WATCHDOG_Init() is called from DAVE_Init()
 173:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 174:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   app_version = WATCHDOG_GetAppVersion();
 175:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 176:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   if (app_version.major != 4U)
 177:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   {
 178:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *     // Probably, not the right version.
 179:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   }
 180:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 181:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   while(1U)
 182:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   {
 183:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   }
 184:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   return 1;
 185:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * }
 186:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @endcode<BR>
 187:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
 188:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
 189:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** DAVE_APP_VERSION_t WATCHDOG_GetAppVersion(void);
 190:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
 191:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
 192:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @ingroup WATCHDOG_apidoc
 193:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @{
 194:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
 195:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
 196:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
 197:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @brief Initializes a WATCHDOG with generated configuration.
 198:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 199:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @param handle pointer to the WATCHDOG APP handle structure.
 200:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @return WATCHDOG_STATUS_t\n
 201:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *         WATCHDOG_STATUS_SUCCESS : if initialization is successful\n
 202:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *         WATCHDOG_STATUS_FAILURE : if initialization is failed
 203:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * <BR>
 204:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * \par<b>Description:</b><br>
 205:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * <ul>
 206:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * <li>Enable the WDT module.</li>
 207:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * <li>Configure the service upper and lower bound settings</li>
 208:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * <li>Configure the Pre-warning alarm event, if enabled</li>
 209:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * </ul>
 210:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 211:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * Example Usage:
 212:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 213:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @code
 214:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * #include "DAVE.h"
 215:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * int main(void)
 216:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * {
 217:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   // ... Initializes Apps configurations ...
 218:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   DAVE_Init(); // WATCHDOG_Init(&WATCHDOG_0) will be called from DAVE_Init()
 219:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 220:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   while(1U)
 221:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   {
 222:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   }
 223:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 224:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   return 1;
 225:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * }
 226:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 227:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @endcode<BR> </p>
 228:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
 229:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** WATCHDOG_STATUS_t WATCHDOG_Init(WATCHDOG_t *handle);
 230:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
 231:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
 232:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @brief Starts the WATCHDOG timer.
 233:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 234:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @return None
 235:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * <BR>
 236:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * 
 237:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * \par<b>Description:</b><br>
 238:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * After starting, WDT has to be serviced with in the specified service window boundary.
 239:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * This can done by invoking WATCHDOG_Service(). If failed service, leads to system reset.
 240:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 241:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * Example Usage:
 242:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 243:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @code
 244:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * #include "DAVE.h"
 245:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * int main(void)
 246:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * {
 247:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   DAVE_STATUS_t status;
 248:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 249:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   status = DAVE_Init();        // Initialization of DAVE Apps
 250:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 251:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   if(status == DAVE_STATUS_SUCCESS)
 252:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   {
 253:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *     WATCHDOG_Start(); // Start the watchdog timer
 254:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   }
 255:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 256:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   while(1U)
 257:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   {
 258:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   }
 259:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 260:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   return 1;
 261:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * }
 262:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 263:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * void Watchdog_Handler(void)
 264:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * {
 265:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   WATCHDOG_Service(); //service the watchdog timer.
 266:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   WATCHDOG_Stop();
 267:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * }
 268:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 269:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @endcode<BR> </p>
 270:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
 271:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** __STATIC_INLINE void WATCHDOG_Start(void)
 272:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** {
 363              	 .loc 5 272 0
 364              	 .cfi_startproc
 365 0000 80B5     	 push {r7,lr}
 366              	.LCFI24:
 367              	 .cfi_def_cfa_offset 8
 368              	 .cfi_offset 7,-8
 369              	 .cfi_offset 14,-4
 370 0002 00AF     	 add r7,sp,#0
 371              	.LCFI25:
 372              	 .cfi_def_cfa_register 7
 273:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   XMC_WDT_Start();
 373              	 .loc 5 273 0
 374 0004 FFF7FEFF 	 bl XMC_WDT_Start
 274:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** }
 375              	 .loc 5 274 0
 376 0008 BD46     	 mov sp,r7
 377              	 
 378 000a 80BD     	 pop {r7,pc}
 379              	 .cfi_endproc
 380              	.LFE219:
 382              	 .section .text.WATCHDOG_Service,"ax",%progbits
 383              	 .align 2
 384              	 .code 16
 385              	 .thumb_func
 387              	WATCHDOG_Service:
 388              	.LFB221:
 275:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
 276:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
 277:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @brief Stops the WATCHDOG timer.
 278:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 279:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @return None
 280:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *            <BR>
 281:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 282:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * \par<b>Description:</b><br>
 283:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * WATCHDOG_Stop() can be used to pause the watchog timer as needed. To resume invoke WATCHDOG_Star
 284:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * 
 285:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * Example Usage:
 286:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 287:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @code
 288:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * #include "DAVE.h"
 289:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * int main(void)
 290:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * {
 291:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   DAVE_STATUS_t status;
 292:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 293:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   status = DAVE_Init();        // Initialization of DAVE Apps
 294:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 295:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   if(status == DAVE_STATUS_SUCCESS)
 296:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   {
 297:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *     WATCHDOG_Start(); // Start the watchdog timer
 298:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   }
 299:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 300:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   while(1U)
 301:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   {
 302:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   }
 303:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 304:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   return 1;
 305:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * }
 306:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 307:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * void Watchdog_Handler(void)
 308:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * {
 309:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   WATCHDOG_ClearAlarm(); //clears the alarm flag
 310:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   WATCHDOG_Service(); //service the watchdog timer.
 311:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   WATCHDOG_Stop(); //Stop the watchdog timer
 312:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * }
 313:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 314:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @endcode<BR> </p>
 315:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
 316:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** __STATIC_INLINE void WATCHDOG_Stop(void)
 317:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** {
 318:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   XMC_WDT_Stop();
 319:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** }
 320:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
 321:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
 322:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @brief Service the WATCHDOG timer.
 323:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 324:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @return    None                           
 325:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *            <BR>
 326:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 327:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * \par<b>Description:</b><br>
 328:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * WATCHDOG_Service() will reset the watchdog timer.
 329:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 330:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * Example Usage:
 331:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * 
 332:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @code
 333:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * #include "DAVE.h"
 334:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * int main(void)
 335:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * {
 336:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   DAVE_STATUS_t status;
 337:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 338:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   status = DAVE_Init();        // Initialization of DAVE Apps
 339:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 340:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   if(status == DAVE_STATUS_SUCCESS)
 341:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   {
 342:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *     WATCHDOG_Start(); // Start the watchdog timer
 343:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   }
 344:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 345:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   while(1U)
 346:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   {
 347:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   }
 348:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 349:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   return 1;
 350:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * }
 351:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 352:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * void Watchdog_Handler(void)
 353:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * {
 354:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   WATCHDOG_ClearAlarm(); //clears the alarm flag
 355:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   WATCHDOG_Service(); //service the watchdog timer.
 356:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   WATCHDOG_Stop();
 357:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * }
 358:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 359:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @endcode<BR> </p>
 360:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
 361:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** __STATIC_INLINE void WATCHDOG_Service(void)
 362:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** {
 389              	 .loc 5 362 0
 390              	 .cfi_startproc
 391 0000 80B5     	 push {r7,lr}
 392              	.LCFI26:
 393              	 .cfi_def_cfa_offset 8
 394              	 .cfi_offset 7,-8
 395              	 .cfi_offset 14,-4
 396 0002 00AF     	 add r7,sp,#0
 397              	.LCFI27:
 398              	 .cfi_def_cfa_register 7
 363:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   XMC_WDT_Service();
 399              	 .loc 5 363 0
 400 0004 FFF7FEFF 	 bl XMC_WDT_Service
 364:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** }
 401              	 .loc 5 364 0
 402 0008 BD46     	 mov sp,r7
 403              	 
 404 000a 80BD     	 pop {r7,pc}
 405              	 .cfi_endproc
 406              	.LFE221:
 408              	 .section .text.WATCHDOG_ClearAlarm,"ax",%progbits
 409              	 .align 2
 410              	 .code 16
 411              	 .thumb_func
 413              	WATCHDOG_ClearAlarm:
 414              	.LFB222:
 365:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** 
 366:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** /**
 367:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @brief Clears the alarm flag.
 368:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 369:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @return None
 370:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * <BR>
 371:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * \par<b>Description:</b><br>
 372:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * After occurrence of Pre-warning alarm event, the timer has to be serviced with in second over fl
 373:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * clearing the alarm flag. Otherwise it will lead to system reset.
 374:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 375:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * Example Usage:
 376:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 377:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @code
 378:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * #include "DAVE.h"
 379:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * int main(void)
 380:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * {
 381:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   DAVE_STATUS_t status;
 382:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 383:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   status = DAVE_Init();        // Initialization of DAVE Apps
 384:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 385:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   if(status == DAVE_STATUS_SUCCESS)
 386:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   {
 387:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *     WATCHDOG_Start(); // Start the watchdog timer
 388:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   }
 389:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 390:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   while(1U)
 391:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   {
 392:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   }
 393:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 394:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   return 1;
 395:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * }
 396:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 397:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * void Watchdog_Handler(void)
 398:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * {
 399:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   WATCHDOG_ClearAlarm(); //clears the alarm flag
 400:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *   WATCHDOG_Service(); //service the watchdog timer.
 401:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * }
 402:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  *
 403:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  * @endcode<BR> </p>
 404:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****  */
 405:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** __STATIC_INLINE void WATCHDOG_ClearAlarm(void)
 406:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** {
 415              	 .loc 5 406 0
 416              	 .cfi_startproc
 417 0000 80B5     	 push {r7,lr}
 418              	.LCFI28:
 419              	 .cfi_def_cfa_offset 8
 420              	 .cfi_offset 7,-8
 421              	 .cfi_offset 14,-4
 422 0002 00AF     	 add r7,sp,#0
 423              	.LCFI29:
 424              	 .cfi_def_cfa_register 7
 407:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h ****   XMC_WDT_ClearAlarm();
 425              	 .loc 5 407 0
 426 0004 FFF7FEFF 	 bl XMC_WDT_ClearAlarm
 408:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/WATCHDOG\watchdog.h **** }
 427              	 .loc 5 408 0
 428 0008 BD46     	 mov sp,r7
 429              	 
 430 000a 80BD     	 pop {r7,pc}
 431              	 .cfi_endproc
 432              	.LFE222:
 434              	 .global NP
 435              	 .section .data.NP,"aw",%progbits
 436              	 .align 2
 439              	NP:
 440 0000 36030000 	 .word 822
 441 0004 DC020000 	 .word 732
 442 0008 1B030000 	 .word 795
 443 000c BC020000 	 .word 700
 444              	 .global NPfl
 445              	 .section .data.NPfl,"aw",%progbits
 446              	 .align 2
 449              	NPfl:
 450 0000 D2020000 	 .word 722
 451              	 .global NPfr
 452              	 .section .data.NPfr,"aw",%progbits
 453              	 .align 2
 456              	NPfr:
 457 0000 DF020000 	 .word 735
 458              	 .global NPrl
 459              	 .section .data.NPrl,"aw",%progbits
 460              	 .align 2
 463              	NPrl:
 464 0000 4B000000 	 .word 75
 465              	 .global NPrr
 466              	 .section .data.NPrr,"aw",%progbits
 467              	 .align 2
 470              	NPrr:
 471 0000 BC020000 	 .word 700
 472              	 .global RC_controll
 473              	 .section .data.RC_controll,"aw",%progbits
 476              	RC_controll:
 477 0000 01       	 .byte 1
 478              	 .global Steering_mode
 479              	 .section .data.Steering_mode,"aw",%progbits
 482              	Steering_mode:
 483 0000 03       	 .byte 3
 484              	 .global New_Input
 485              	 .section .bss.New_Input,"aw",%nobits
 488              	New_Input:
 489 0000 00       	 .space 1
 490              	 .global NO_New_Input_counter
 491              	 .section .bss.NO_New_Input_counter,"aw",%nobits
 492              	 .align 2
 495              	NO_New_Input_counter:
 496 0000 00000000 	 .space 4
 497              	 .global Speeds_int16_r
 498              	 .section .bss.Speeds_int16_r,"aw",%nobits
 499              	 .align 2
 502              	Speeds_int16_r:
 503 0000 00000000 	 .space 8
 503      00000000 
 504              	 .global CAN_RX_0
 505              	 .section .bss.CAN_RX_0,"aw",%nobits
 506              	 .align 1
 509              	CAN_RX_0:
 510 0000 0000     	 .space 2
 511              	 .comm init_status,1,1
 512              	 .global CAN_OK
 513              	 .section .bss.CAN_OK,"aw",%nobits
 514              	 .align 2
 517              	CAN_OK:
 518 0000 00000000 	 .space 4
 519              	 .global Inverters_CAN_state
 520              	 .section .bss.Inverters_CAN_state,"aw",%nobits
 521              	 .align 2
 524              	Inverters_CAN_state:
 525 0000 00000000 	 .space 4
 526              	 .global CAN_10ms_counter
 527              	 .section .bss.CAN_10ms_counter,"aw",%nobits
 528              	 .align 2
 531              	CAN_10ms_counter:
 532 0000 00000000 	 .space 4
 533              	 .global reset_distance
 534              	 .section .bss.reset_distance,"aw",%nobits
 537              	reset_distance:
 538 0000 00       	 .space 1
 539              	 .global speed_fl_act
 540              	 .section .bss.speed_fl_act,"aw",%nobits
 541              	 .align 2
 544              	speed_fl_act:
 545 0000 00000000 	 .space 4
 546              	 .global speed_fr_act
 547              	 .section .bss.speed_fr_act,"aw",%nobits
 548              	 .align 2
 551              	speed_fr_act:
 552 0000 00000000 	 .space 4
 553              	 .global speed_rl_act
 554              	 .section .bss.speed_rl_act,"aw",%nobits
 555              	 .align 2
 558              	speed_rl_act:
 559 0000 00000000 	 .space 4
 560              	 .global speed_rr_act
 561              	 .section .bss.speed_rr_act,"aw",%nobits
 562              	 .align 2
 565              	speed_rr_act:
 566 0000 00000000 	 .space 4
 567              	 .global distance_fl_act
 568              	 .section .bss.distance_fl_act,"aw",%nobits
 569              	 .align 2
 572              	distance_fl_act:
 573 0000 00000000 	 .space 4
 574              	 .global distance_fr_act
 575              	 .section .bss.distance_fr_act,"aw",%nobits
 576              	 .align 2
 579              	distance_fr_act:
 580 0000 00000000 	 .space 4
 581              	 .global distance_rl_act
 582              	 .section .bss.distance_rl_act,"aw",%nobits
 583              	 .align 2
 586              	distance_rl_act:
 587 0000 00000000 	 .space 4
 588              	 .global distance_rr_act
 589              	 .section .bss.distance_rr_act,"aw",%nobits
 590              	 .align 2
 593              	distance_rr_act:
 594 0000 00000000 	 .space 4
 595              	 .global CAN_RX_Inverter_count
 596              	 .section .bss.CAN_RX_Inverter_count,"aw",%nobits
 599              	CAN_RX_Inverter_count:
 600 0000 00       	 .space 1
 601              	 .global CAN_state_Ultrasonic
 602              	 .section .bss.CAN_state_Ultrasonic,"aw",%nobits
 605              	CAN_state_Ultrasonic:
 606 0000 00       	 .space 1
 607              	 .global Ultrasonic_cm_C
 608              	 .section .bss.Ultrasonic_cm_C,"aw",%nobits
 609              	 .align 1
 612              	Ultrasonic_cm_C:
 613 0000 0000     	 .space 2
 614              	 .global Ultrasonic_cm_L
 615              	 .section .bss.Ultrasonic_cm_L,"aw",%nobits
 616              	 .align 1
 619              	Ultrasonic_cm_L:
 620 0000 0000     	 .space 2
 621              	 .global Ultrasonic_cm_R
 622              	 .section .bss.Ultrasonic_cm_R,"aw",%nobits
 623              	 .align 1
 626              	Ultrasonic_cm_R:
 627 0000 0000     	 .space 2
 628              	 .global ALPHA_ULTARSONIC
 629              	 .section .data.ALPHA_ULTARSONIC,"aw",%progbits
 630              	 .align 2
 633              	ALPHA_ULTARSONIC:
 634 0000 0000003F 	 .word 1056964608
 635              	 .global obstructed_L
 636              	 .section .bss.obstructed_L,"aw",%nobits
 639              	obstructed_L:
 640 0000 00       	 .space 1
 641              	 .global obstructed_R
 642              	 .section .bss.obstructed_R,"aw",%nobits
 645              	obstructed_R:
 646 0000 00       	 .space 1
 647              	 .global Fil_Ultrasonic_m_C
 648              	 .section .bss.Fil_Ultrasonic_m_C,"aw",%nobits
 649              	 .align 2
 652              	Fil_Ultrasonic_m_C:
 653 0000 00000000 	 .space 4
 654              	 .global Fil_Ultrasonic_m_L
 655              	 .section .bss.Fil_Ultrasonic_m_L,"aw",%nobits
 656              	 .align 2
 659              	Fil_Ultrasonic_m_L:
 660 0000 00000000 	 .space 4
 661              	 .global Fil_Ultrasonic_m_R
 662              	 .section .bss.Fil_Ultrasonic_m_R,"aw",%nobits
 663              	 .align 2
 666              	Fil_Ultrasonic_m_R:
 667 0000 00000000 	 .space 4
 668              	 .global Obstacel_F
 669              	 .section .data.Obstacel_F,"aw",%progbits
 670              	 .align 2
 673              	Obstacel_F:
 674 0000 00008040 	 .word 1082130432
 675 0004 00000000 	 .word 0
 676              	 .global Obstacel_L
 677              	 .section .data.Obstacel_L,"aw",%progbits
 678              	 .align 2
 681              	Obstacel_L:
 682 0000 00008040 	 .word 1082130432
 683 0004 000080C0 	 .word -1065353216
 684              	 .global Obstacel_R
 685              	 .section .data.Obstacel_R,"aw",%progbits
 686              	 .align 2
 689              	Obstacel_R:
 690 0000 00008040 	 .word 1082130432
 691 0004 00008040 	 .word 1082130432
 692              	 .global obstacel_F_x
 693              	 .section .bss.obstacel_F_x,"aw",%nobits
 694              	 .align 2
 697              	obstacel_F_x:
 698 0000 00000000 	 .space 4
 699              	 .global obstacel_L_x
 700              	 .section .bss.obstacel_L_x,"aw",%nobits
 701              	 .align 2
 704              	obstacel_L_x:
 705 0000 00000000 	 .space 4
 706              	 .global obstacel_L_y
 707              	 .section .bss.obstacel_L_y,"aw",%nobits
 708              	 .align 2
 711              	obstacel_L_y:
 712 0000 00000000 	 .space 4
 713              	 .global obstacel_R_x
 714              	 .section .bss.obstacel_R_x,"aw",%nobits
 715              	 .align 2
 718              	obstacel_R_x:
 719 0000 00000000 	 .space 4
 720              	 .global obstacel_R_y
 721              	 .section .bss.obstacel_R_y,"aw",%nobits
 722              	 .align 2
 725              	obstacel_R_y:
 726 0000 00000000 	 .space 4
 727              	 .global RC_Signal_OK
 728              	 .section .bss.RC_Signal_OK,"aw",%nobits
 731              	RC_Signal_OK:
 732 0000 00       	 .space 1
 733              	 .global RC_Signal_not_OK_counter
 734              	 .section .bss.RC_Signal_not_OK_counter,"aw",%nobits
 737              	RC_Signal_not_OK_counter:
 738 0000 00       	 .space 1
 739              	 .global captured_time_Steering
 740              	 .section .bss.captured_time_Steering,"aw",%nobits
 741              	 .align 2
 744              	captured_time_Steering:
 745 0000 00000000 	 .space 4
 746              	 .global captured_time_Speed
 747              	 .section .bss.captured_time_Speed,"aw",%nobits
 748              	 .align 2
 751              	captured_time_Speed:
 752 0000 00000000 	 .space 4
 753              	 .global RC_no_Speed_data_counter
 754              	 .section .bss.RC_no_Speed_data_counter,"aw",%nobits
 757              	RC_no_Speed_data_counter:
 758 0000 00       	 .space 1
 759              	 .global RC_no_Steering_data_counter
 760              	 .section .bss.RC_no_Steering_data_counter,"aw",%nobits
 763              	RC_no_Steering_data_counter:
 764 0000 00       	 .space 1
 765              	 .global RC_Speed
 766              	 .section .bss.RC_Speed,"aw",%nobits
 767              	 .align 2
 770              	RC_Speed:
 771 0000 00000000 	 .space 4
 772              	 .global RC_Steering
 773              	 .section .bss.RC_Steering,"aw",%nobits
 774              	 .align 2
 777              	RC_Steering:
 778 0000 00000000 	 .space 4
 779              	 .global RC_Speed_ns_to_mps
 780              	 .section .data.RC_Speed_ns_to_mps,"aw",%progbits
 781              	 .align 2
 784              	RC_Speed_ns_to_mps:
 785 0000 ACC5A735 	 .word 900187564
 786              	 .global RC_Steering_ns_to_deg
 787              	 .section .data.RC_Steering_ns_to_deg,"aw",%progbits
 788              	 .align 2
 791              	RC_Steering_ns_to_deg:
 792 0000 72335C39 	 .word 962343794
 793              	 .global RC_gear_100us_counter
 794              	 .section .bss.RC_gear_100us_counter,"aw",%nobits
 795              	 .align 2
 798              	RC_gear_100us_counter:
 799 0000 00000000 	 .space 4
 800              	 .global RC_AUX1_100us_counter
 801              	 .section .bss.RC_AUX1_100us_counter,"aw",%nobits
 802              	 .align 2
 805              	RC_AUX1_100us_counter:
 806 0000 00000000 	 .space 4
 807              	 .global RC_Gear_state
 808              	 .section .data.RC_Gear_state,"aw",%progbits
 811              	RC_Gear_state:
 812 0000 02       	 .byte 2
 813              	 .global RC_AUX1_state
 814              	 .section .data.RC_AUX1_state,"aw",%progbits
 817              	RC_AUX1_state:
 818 0000 02       	 .byte 2
 819              	 .global RC_Gear_duty
 820              	 .section .data.RC_Gear_duty,"aw",%progbits
 823              	RC_Gear_duty:
 824 0000 02       	 .byte 2
 825              	 .global RC_Gear_duty_OLD
 826              	 .section .data.RC_Gear_duty_OLD,"aw",%progbits
 829              	RC_Gear_duty_OLD:
 830 0000 02       	 .byte 2
 831              	 .global RC_AUX1_duty
 832              	 .section .data.RC_AUX1_duty,"aw",%progbits
 835              	RC_AUX1_duty:
 836 0000 02       	 .byte 2
 837              	 .global RC_Speed_Stop
 838              	 .section .data.RC_Speed_Stop,"aw",%progbits
 841              	RC_Speed_Stop:
 842 0000 01       	 .byte 1
 843              	 .global Steering_direction
 844              	 .section .bss.Steering_direction,"aw",%nobits
 845              	 .align 2
 848              	Steering_direction:
 849 0000 00000000 	 .space 4
 850              	 .global Driving_speed
 851              	 .section .bss.Driving_speed,"aw",%nobits
 852              	 .align 2
 855              	Driving_speed:
 856 0000 00000000 	 .space 4
 857              	 .comm R_Turn,4,4
 858              	 .comm Speed_ratio,4,4
 859              	 .global speed_fl
 860              	 .section .bss.speed_fl,"aw",%nobits
 861              	 .align 2
 864              	speed_fl:
 865 0000 00000000 	 .space 4
 866              	 .global speed_fr
 867              	 .section .bss.speed_fr,"aw",%nobits
 868              	 .align 2
 871              	speed_fr:
 872 0000 00000000 	 .space 4
 873              	 .global speed_rl
 874              	 .section .bss.speed_rl,"aw",%nobits
 875              	 .align 2
 878              	speed_rl:
 879 0000 00000000 	 .space 4
 880              	 .global speed_rr
 881              	 .section .bss.speed_rr,"aw",%nobits
 882              	 .align 2
 885              	speed_rr:
 886 0000 00000000 	 .space 4
 887              	 .global angle_fl
 888              	 .section .bss.angle_fl,"aw",%nobits
 889              	 .align 2
 892              	angle_fl:
 893 0000 00000000 	 .space 4
 894              	 .global angle_fr
 895              	 .section .bss.angle_fr,"aw",%nobits
 896              	 .align 2
 899              	angle_fr:
 900 0000 00000000 	 .space 4
 901              	 .global angle_rl
 902              	 .section .bss.angle_rl,"aw",%nobits
 903              	 .align 2
 906              	angle_rl:
 907 0000 00000000 	 .space 4
 908              	 .global angle_rr
 909              	 .section .bss.angle_rr,"aw",%nobits
 910              	 .align 2
 913              	angle_rr:
 914 0000 00000000 	 .space 4
 915              	 .global Speeds
 916              	 .section .bss.Speeds,"aw",%nobits
 917              	 .align 2
 920              	Speeds:
 921 0000 00000000 	 .space 16
 921      00000000 
 921      00000000 
 921      00000000 
 922              	 .global Steering_Angles
 923              	 .section .bss.Steering_Angles,"aw",%nobits
 924              	 .align 2
 927              	Steering_Angles:
 928 0000 00000000 	 .space 16
 928      00000000 
 928      00000000 
 928      00000000 
 929              	 .global Servo_PWMs
 930              	 .section .bss.Servo_PWMs,"aw",%nobits
 931              	 .align 2
 934              	Servo_PWMs:
 935 0000 00000000 	 .space 16
 935      00000000 
 935      00000000 
 935      00000000 
 936              	 .global Inveter_CAN_OK
 937              	 .section .bss.Inveter_CAN_OK,"aw",%nobits
 938              	 .align 2
 941              	Inveter_CAN_OK:
 942 0000 00000000 	 .space 4
 943              	 .global Actual_Speeds
 944              	 .section .bss.Actual_Speeds,"aw",%nobits
 945              	 .align 2
 948              	Actual_Speeds:
 949 0000 00000000 	 .space 16
 949      00000000 
 949      00000000 
 949      00000000 
 950              	 .global Actual_Distance
 951              	 .section .bss.Actual_Distance,"aw",%nobits
 952              	 .align 2
 955              	Actual_Distance:
 956 0000 00000000 	 .space 16
 956      00000000 
 956      00000000 
 956      00000000 
 957              	 .section .text.main,"ax",%progbits
 958              	 .align 2
 959              	 .global main
 960              	 .code 16
 961              	 .thumb_func
 963              	main:
 964              	.LFB224:
 965              	 .file 6 "../main.c"
   1:../main.c     **** /*
   2:../main.c     ****  * main.c
   3:../main.c     ****  *
   4:../main.c     ****  *  Created on: 2022 Apr 25 09:31:37
   5:../main.c     ****  *  Author: lukas
   6:../main.c     ****  */
   7:../main.c     **** #include "DAVE.h"                 //Declarations from DAVE Code Generation (includes SFR declaratio
   8:../main.c     **** #include <math.h>
   9:../main.c     **** 
  10:../main.c     **** #define CHECK_BIT(var,pos) (((var)>>(pos)) & 1)
  11:../main.c     **** 
  12:../main.c     **** //constant
  13:../main.c     **** int NP[4] = {822, 732, 795, 700}; //servo nutral points PWM duty values
  14:../main.c     **** int NPfl = 722; int NPfr = 735; int NPrl = 75; int NPrr = 700; // serov defalut 750
  15:../main.c     **** #define MIN_Speed  0.05
  16:../main.c     **** #define MAX_Speed  1
  17:../main.c     **** 
  18:../main.c     **** #define ROTATION_ANGLE 53.96
  19:../main.c     **** #define ROTATION_ANGLE_OFFSET 5
  20:../main.c     **** #define ROTATION_SPEED  0.25
  21:../main.c     **** 
  22:../main.c     **** #define PI180 0.01745329
  23:../main.c     **** #define PI 3.14
  24:../main.c     **** #define HALF_PI 1.57
  25:../main.c     **** #define RAD_TO_DEG 57.296
  26:../main.c     **** 
  27:../main.c     **** // steering parameter
  28:../main.c     **** //const float WHEEL_BASE = 0.448;
  29:../main.c     **** #define WHEEL_BASE 0.448
  30:../main.c     **** #define	HALF_WHEEL_BASE 			0.22				// halfbase of mobrob
  31:../main.c     **** //#define 	HALFBASEPOW2 		(HALFBASE*HALFBASE)		// halfbase of mobrob to the power of two
  32:../main.c     **** #define	HALF_TRACK_WIDTH		0.163					// halftrack of mobrob
  33:../main.c     **** #define 	R_WHEEL				0.067			// wheel radius of mobrob
  34:../main.c     **** #define	R_TRUN_MAX				20.000				// maximum corner radius (before straight)
  35:../main.c     **** #define 	R_TRUN_MIN				0.05				// minimum corner/reorientation radius
  36:../main.c     **** //#define		P_RO_VEL			0.500					// reduction factor for reorientation velocity
  37:../main.c     **** //#define		CWHEEL				(2.000*M_PI*RWHEEL)		// wheel circumference of mobrob
  38:../main.c     **** 
  39:../main.c     **** 
  40:../main.c     **** // Var MODES
  41:../main.c     **** volatile uint8_t RC_controll = 1; // if 1 RC controll
  42:../main.c     **** //uint8_t Steering_mode = 3; // otions 1 'Front';  2'Rear'; 3 '4_Wheel'; 4 'Carb'; 5 'Rotate' 0 not
  43:../main.c     **** enum STEERING_MODES{
  44:../main.c     **** 	ZERO = 0,
  45:../main.c     **** 	FRONT = 1,
  46:../main.c     **** 	BACK = 2,
  47:../main.c     **** 	ALL_WHEEL = 3,
  48:../main.c     **** 	CRAB = 4,
  49:../main.c     **** 	ROTATE =5
  50:../main.c     **** };
  51:../main.c     **** volatile enum STEERING_MODES Steering_mode = ALL_WHEEL;
  52:../main.c     **** volatile uint8_t New_Input = 0;
  53:../main.c     **** volatile uint32_t NO_New_Input_counter = 0;
  54:../main.c     **** 
  55:../main.c     **** 
  56:../main.c     **** //VAR CAN
  57:../main.c     **** int16_t Speeds_int16_r[4] = {0};
  58:../main.c     **** int16_t CAN_RX_0 = 0;
  59:../main.c     **** CAN_NODE_STATUS_t init_status;
  60:../main.c     **** int CAN_OK = 0;
  61:../main.c     **** uint8_t Inverters_CAN_state[4] = {0};
  62:../main.c     **** uint32_t CAN_10ms_counter = 0; // to send ever 10ms
  63:../main.c     **** 
  64:../main.c     **** volatile uint8_t reset_distance = 0;// reste from mircum by setting 1
  65:../main.c     **** float speed_fl_act = 0;float speed_fr_act = 0;float speed_rl_act = 0;float speed_rr_act = 0; // in 
  66:../main.c     **** float distance_fl_act = 0;float distance_fr_act = 0;float distance_rl_act = 0;float distance_rr_act
  67:../main.c     **** 
  68:../main.c     **** volatile uint8_t CAN_RX_Inverter_count = 0;
  69:../main.c     **** 
  70:../main.c     **** //ULTRASOCNIC
  71:../main.c     **** // reciving
  72:../main.c     **** volatile uint8_t CAN_state_Ultrasonic = 0;
  73:../main.c     **** volatile uint16_t Ultrasonic_cm_C = 0;
  74:../main.c     **** volatile uint16_t Ultrasonic_cm_L = 0;
  75:../main.c     **** volatile uint16_t Ultrasonic_cm_R = 0;
  76:../main.c     **** // filtering
  77:../main.c     **** float ALPHA_ULTARSONIC = 0.5; // giltering prameter for the Exponential moving average
  78:../main.c     **** #define POS_OBSTRUCTED_ANGLE_MIN 50
  79:../main.c     **** #define POS_OBSTRUCTED_ANGLE_MAX 210
  80:../main.c     **** #define NEG_OBSTRUCTED_ANGLE_MIN -150
  81:../main.c     **** #define NEG_OBSTRUCTED_ANGLE_MAX -310
  82:../main.c     **** uint8_t obstructed_L = 0, obstructed_R = 0;
  83:../main.c     **** float Fil_Ultrasonic_m_C = 0;
  84:../main.c     **** float Fil_Ultrasonic_m_L = 0;
  85:../main.c     **** float Fil_Ultrasonic_m_R = 0;
  86:../main.c     **** // obstacels
  87:../main.c     **** float Obstacel_F[2] = {4, 0};
  88:../main.c     **** float Obstacel_L[2] = {4, -4};
  89:../main.c     **** float Obstacel_R[2] = {4, 4};
  90:../main.c     **** 
  91:../main.c     **** float obstacel_F_x = 0, obstacel_L_x = 0, obstacel_L_y = 0, obstacel_R_x = 0, obstacel_R_y = 0;
  92:../main.c     **** 
  93:../main.c     **** 
  94:../main.c     **** 
  95:../main.c     **** // Var RC
  96:../main.c     **** uint8_t RC_Signal_OK = 0, RC_Signal_not_OK_counter = 0; // 0 no ok 1 OK
  97:../main.c     **** uint32_t  captured_time_Steering=0, captured_time_Speed=0;
  98:../main.c     **** uint8_t RC_no_Speed_data_counter = 0, RC_no_Steering_data_counter = 0;
  99:../main.c     **** float RC_Speed = 0, RC_Steering = 0;
 100:../main.c     **** #define RC_NP_SPEED  1500000
 101:../main.c     **** #define RC_NP_STEERING  1540000
 102:../main.c     **** float RC_Speed_ns_to_mps = 0.00000125;
 103:../main.c     **** float RC_Steering_ns_to_deg = 0.00021;
 104:../main.c     **** 
 105:../main.c     **** volatile uint32_t RC_gear_100us_counter = 0, RC_AUX1_100us_counter = 0;
 106:../main.c     **** volatile uint8_t RC_Gear_state = 2, RC_AUX1_state = 2;
 107:../main.c     **** volatile uint8_t RC_Gear_duty = 2, RC_Gear_duty_OLD =2, RC_AUX1_duty = 2;
 108:../main.c     **** uint8_t RC_Speed_Stop = 1;
 109:../main.c     **** 
 110:../main.c     **** //VAR general
 111:../main.c     **** float Steering_direction = 0; // steering Angle
 112:../main.c     **** float Driving_speed = 0;
 113:../main.c     **** 
 114:../main.c     **** float R_Turn;
 115:../main.c     **** float Speed_ratio;
 116:../main.c     **** 
 117:../main.c     **** float speed_fl = 0;float speed_fr = 0;float speed_rl = 0;float speed_rr = 0; // in m/s
 118:../main.c     **** float angle_fl = 0;float angle_fr = 0;float angle_rl = 0;float angle_rr = 0; // in deg  0 straing a
 119:../main.c     **** 
 120:../main.c     **** volatile float Speeds[4] = {0, 0, 0, 0};
 121:../main.c     **** volatile float Steering_Angles[4] = {0, 0, 0, 0};
 122:../main.c     **** float Servo_PWMs[4] = {0, 0, 0, 0};
 123:../main.c     **** 
 124:../main.c     **** //values form inveter bioard over CAN
 125:../main.c     **** uint8_t Inveter_CAN_OK[4] = {0};
 126:../main.c     **** float Actual_Speeds[4] = {0};
 127:../main.c     **** float Actual_Distance[4] = {0};
 128:../main.c     **** 
 129:../main.c     **** // FUNCTIONS
 130:../main.c     **** void CAN_send_Speeds(float Speed_data[4]);
 131:../main.c     **** void CAN_reset_distance(uint8_t distance_to_reset[4]);
 132:../main.c     **** void Steering_set_Angles(float Angles_data_int[4]);
 133:../main.c     **** void Steering_Function(float Steering_direction_cal, float Driving_speed_cal, uint8_t Steering_mode
 134:../main.c     **** void RC_Recive(void);
 135:../main.c     **** void Servo_NP_setting(void);
 136:../main.c     **** void mode_led(uint8_t var);
 137:../main.c     **** float average(float a[],int num_values);
 138:../main.c     **** void CAN_Inveter_RX_Interperter(uint8_t data_RX[8], uint8_t Motor_on_rover);
 139:../main.c     **** void CAN_RX_Inverter_Read_Data();
 140:../main.c     **** void Ultra_sonic_filter(int16_t Ultrasonic_cm_C_clc, int16_t Ultrasonic_cm_L_clc, int16_t Ultrasoni
 141:../main.c     **** float Exp_moving_average(float new_value, float value, float ALPHA);
 142:../main.c     **** uint8_t Ultrasoinc_Obstructet_Test(float Angle);
 143:../main.c     **** void calc_act_trajctory();
 144:../main.c     **** 
 145:../main.c     **** 
 146:../main.c     **** int main(void)
 147:../main.c     **** {
 966              	 .loc 6 147 0
 967              	 .cfi_startproc
 968 0000 90B5     	 push {r4,r7,lr}
 969              	.LCFI30:
 970              	 .cfi_def_cfa_offset 12
 971              	 .cfi_offset 4,-12
 972              	 .cfi_offset 7,-8
 973              	 .cfi_offset 14,-4
 974 0002 83B0     	 sub sp,sp,#12
 975              	.LCFI31:
 976              	 .cfi_def_cfa_offset 24
 977 0004 00AF     	 add r7,sp,#0
 978              	.LCFI32:
 979              	 .cfi_def_cfa_register 7
 148:../main.c     ****   DAVE_STATUS_t status;
 149:../main.c     **** 
 150:../main.c     ****   status = DAVE_Init();           /* Initialization of DAVE APPs  */
 980              	 .loc 6 150 0
 981 0006 FC1D     	 add r4,r7,#7
 982 0008 FFF7FEFF 	 bl DAVE_Init
 983 000c 031C     	 mov r3,r0
 984 000e 2370     	 strb r3,[r4]
 151:../main.c     **** 
 152:../main.c     ****   if (status != DAVE_STATUS_SUCCESS)
 985              	 .loc 6 152 0
 986 0010 FB1D     	 add r3,r7,#7
 987 0012 1B78     	 ldrb r3,[r3]
 988 0014 002B     	 cmp r3,#0
 989 0016 00D0     	 beq .L22
 990              	.L23:
 153:../main.c     ****   {
 154:../main.c     ****     /* Placeholder for error handler code. The while loop below can be replaced with an user error 
 155:../main.c     ****     XMC_DEBUG("DAVE APPs initialization failed\n");
 156:../main.c     **** 
 157:../main.c     ****     while(1U)
 158:../main.c     ****     {
 159:../main.c     **** 
 160:../main.c     ****     }
 991              	 .loc 6 160 0 discriminator 1
 992 0018 FEE7     	 b .L23
 993              	.L22:
 161:../main.c     ****   }
 162:../main.c     **** 
 163:../main.c     ****   //Initialization of CAN
 164:../main.c     ****   	//CAN_NODE_STATUS_t init_status;
 165:../main.c     ****   	init_status = CAN_NODE_Init(&CAN_NODE_0);
 994              	 .loc 6 165 0
 995 001a 094B     	 ldr r3,.L26
 996 001c 181C     	 mov r0,r3
 997 001e FFF7FEFF 	 bl CAN_NODE_Init
 998 0022 031C     	 mov r3,r0
 999 0024 1A1C     	 mov r2,r3
 1000 0026 074B     	 ldr r3,.L26+4
 1001 0028 1A70     	 strb r2,[r3]
 166:../main.c     **** 
 167:../main.c     ****   	if (init_status != CAN_NODE_STATUS_SUCCESS) {
 1002              	 .loc 6 167 0
 1003 002a 064B     	 ldr r3,.L26+4
 1004 002c 1B78     	 ldrb r3,[r3]
 1005 002e 002B     	 cmp r3,#0
 1006 0030 02D1     	 bne .L24
 168:../main.c     ****   		XMC_DEBUG("CAN initialization failed\n");
 169:../main.c     ****   	}
 170:../main.c     ****   	else{
 171:../main.c     ****   		CAN_OK = 1;
 1007              	 .loc 6 171 0
 1008 0032 054B     	 ldr r3,.L26+8
 1009 0034 0122     	 mov r2,#1
 1010 0036 1A60     	 str r2,[r3]
 1011              	.L24:
 172:../main.c     ****   	}
 173:../main.c     **** 
 174:../main.c     ****   	// watchdog
 175:../main.c     ****   	WATCHDOG_Start();
 1012              	 .loc 6 175 0
 1013 0038 FFF7FEFF 	 bl WATCHDOG_Start
 1014              	.L25:
 176:../main.c     **** 
 177:../main.c     ****   /* Placeholder for user application code. The while loop below can be replaced with user applicat
 178:../main.c     ****   while(1U)
 179:../main.c     ****   {
 180:../main.c     **** 	// Servo_NP_setting();	  // nutral point servo setting
 181:../main.c     ****   }
 1015              	 .loc 6 181 0 discriminator 2
 1016 003c FEE7     	 b .L25
 1017              	.L27:
 1018 003e C046     	 .align 2
 1019              	.L26:
 1020 0040 00000000 	 .word CAN_NODE_0
 1021 0044 00000000 	 .word init_status
 1022 0048 00000000 	 .word CAN_OK
 1023              	 .cfi_endproc
 1024              	.LFE224:
 1026              	 .global __aeabi_fcmpgt
 1027              	 .global __aeabi_fcmplt
 1028              	 .global __aeabi_f2d
 1029              	 .global __aeabi_dcmplt
 1030              	 .global __aeabi_dcmpgt
 1031              	 .global __aeabi_ddiv
 1032              	 .global __aeabi_d2f
 1033              	 .global __aeabi_dadd
 1034              	 .global __aeabi_dmul
 1035              	 .global __aeabi_dsub
 1036              	 .global __aeabi_fmul
 1037              	 .global __aeabi_fdiv
 1038              	 .section .text.Steering_Function,"ax",%progbits
 1039              	 .align 2
 1040              	 .global Steering_Function
 1041              	 .code 16
 1042              	 .thumb_func
 1044              	Steering_Function:
 1045              	.LFB225:
 182:../main.c     **** }
 183:../main.c     **** 
 184:../main.c     **** 
 185:../main.c     **** void Steering_Function(float Steering_direction_cal, float Driving_speed_cal, uint8_t Steering_mode
 1046              	 .loc 6 185 0
 1047              	 .cfi_startproc
 1048 0000 F0B5     	 push {r4,r5,r6,r7,lr}
 1049              	.LCFI33:
 1050              	 .cfi_def_cfa_offset 20
 1051              	 .cfi_offset 4,-20
 1052              	 .cfi_offset 5,-16
 1053              	 .cfi_offset 6,-12
 1054              	 .cfi_offset 7,-8
 1055              	 .cfi_offset 14,-4
 1056 0002 85B0     	 sub sp,sp,#20
 1057              	.LCFI34:
 1058              	 .cfi_def_cfa_offset 40
 1059 0004 00AF     	 add r7,sp,#0
 1060              	.LCFI35:
 1061              	 .cfi_def_cfa_register 7
 1062 0006 F860     	 str r0,[r7,#12]
 1063 0008 B960     	 str r1,[r7,#8]
 1064 000a FB1D     	 add r3,r7,#7
 1065 000c 1A70     	 strb r2,[r3]
 186:../main.c     **** 	New_Input = 0;
 1066              	 .loc 6 186 0
 1067 000e B84B     	 ldr r3,.L115
 1068 0010 0022     	 mov r2,#0
 1069 0012 1A70     	 strb r2,[r3]
 187:../main.c     **** 
 188:../main.c     **** 	if(Driving_speed_cal > MAX_Speed) Driving_speed_cal = MAX_Speed;
 1070              	 .loc 6 188 0
 1071 0014 B868     	 ldr r0,[r7,#8]
 1072 0016 FE21     	 mov r1,#254
 1073 0018 8905     	 lsl r1,r1,#22
 1074 001a FFF7FEFF 	 bl __aeabi_fcmpgt
 1075 001e 031E     	 sub r3,r0,#0
 1076 0020 02D0     	 beq .L29
 1077              	 .loc 6 188 0 is_stmt 0 discriminator 1
 1078 0022 FE23     	 mov r3,#254
 1079 0024 9B05     	 lsl r3,r3,#22
 1080 0026 BB60     	 str r3,[r7,#8]
 1081              	.L29:
 189:../main.c     **** 	if(Driving_speed_cal < -MAX_Speed) Driving_speed_cal = -MAX_Speed;
 1082              	 .loc 6 189 0 is_stmt 1
 1083 0028 B868     	 ldr r0,[r7,#8]
 1084 002a B249     	 ldr r1,.L115+4
 1085 002c FFF7FEFF 	 bl __aeabi_fcmplt
 1086 0030 031E     	 sub r3,r0,#0
 1087 0032 01D0     	 beq .L31
 1088              	 .loc 6 189 0 is_stmt 0 discriminator 1
 1089 0034 AF4B     	 ldr r3,.L115+4
 1090 0036 BB60     	 str r3,[r7,#8]
 1091              	.L31:
 190:../main.c     **** 	if((0 < Driving_speed_cal) & (Driving_speed_cal < MIN_Speed)) Driving_speed_cal = 0;
 1092              	 .loc 6 190 0 is_stmt 1
 1093 0038 0123     	 mov r3,#1
 1094 003a 1C1C     	 add r4,r3,#0
 1095 003c B868     	 ldr r0,[r7,#8]
 1096 003e 0021     	 mov r1,#0
 1097 0040 FFF7FEFF 	 bl __aeabi_fcmpgt
 1098 0044 031E     	 sub r3,r0,#0
 1099 0046 01D1     	 bne .L33
 1100 0048 0023     	 mov r3,#0
 1101 004a 1C1C     	 add r4,r3,#0
 1102              	.L33:
 1103 004c E4B2     	 uxtb r4,r4
 1104 004e B868     	 ldr r0,[r7,#8]
 1105 0050 FFF7FEFF 	 bl __aeabi_f2d
 1106 0054 0A1C     	 mov r2,r1
 1107 0056 011C     	 mov r1,r0
 1108 0058 0123     	 mov r3,#1
 1109 005a 1D1C     	 add r5,r3,#0
 1110 005c 081C     	 mov r0,r1
 1111 005e 111C     	 mov r1,r2
 1112 0060 A54A     	 ldr r2,.L115+8
 1113 0062 A64B     	 ldr r3,.L115+12
 1114 0064 FFF7FEFF 	 bl __aeabi_dcmplt
 1115 0068 031E     	 sub r3,r0,#0
 1116 006a 01D1     	 bne .L34
 1117 006c 0023     	 mov r3,#0
 1118 006e 1D1C     	 add r5,r3,#0
 1119              	.L34:
 1120 0070 EBB2     	 uxtb r3,r5
 1121 0072 2340     	 and r3,r4
 1122 0074 DBB2     	 uxtb r3,r3
 1123 0076 002B     	 cmp r3,#0
 1124 0078 01D0     	 beq .L35
 1125              	 .loc 6 190 0 is_stmt 0 discriminator 1
 1126 007a 0023     	 mov r3,#0
 1127 007c BB60     	 str r3,[r7,#8]
 1128              	.L35:
 191:../main.c     **** 	if((0 > Driving_speed_cal) & (Driving_speed_cal > -MIN_Speed)) Driving_speed_cal = 0;
 1129              	 .loc 6 191 0 is_stmt 1
 1130 007e 0123     	 mov r3,#1
 1131 0080 1C1C     	 add r4,r3,#0
 1132 0082 B868     	 ldr r0,[r7,#8]
 1133 0084 0021     	 mov r1,#0
 1134 0086 FFF7FEFF 	 bl __aeabi_fcmplt
 1135 008a 031E     	 sub r3,r0,#0
 1136 008c 01D1     	 bne .L36
 1137 008e 0023     	 mov r3,#0
 1138 0090 1C1C     	 add r4,r3,#0
 1139              	.L36:
 1140 0092 E4B2     	 uxtb r4,r4
 1141 0094 B868     	 ldr r0,[r7,#8]
 1142 0096 FFF7FEFF 	 bl __aeabi_f2d
 1143 009a 0A1C     	 mov r2,r1
 1144 009c 011C     	 mov r1,r0
 1145 009e 0123     	 mov r3,#1
 1146 00a0 1D1C     	 add r5,r3,#0
 1147 00a2 081C     	 mov r0,r1
 1148 00a4 111C     	 mov r1,r2
 1149 00a6 944A     	 ldr r2,.L115+8
 1150 00a8 954B     	 ldr r3,.L115+16
 1151 00aa FFF7FEFF 	 bl __aeabi_dcmpgt
 1152 00ae 031E     	 sub r3,r0,#0
 1153 00b0 01D1     	 bne .L37
 1154 00b2 0023     	 mov r3,#0
 1155 00b4 1D1C     	 add r5,r3,#0
 1156              	.L37:
 1157 00b6 EBB2     	 uxtb r3,r5
 1158 00b8 2340     	 and r3,r4
 1159 00ba DBB2     	 uxtb r3,r3
 1160 00bc 002B     	 cmp r3,#0
 1161 00be 01D0     	 beq .L38
 1162              	 .loc 6 191 0 is_stmt 0 discriminator 1
 1163 00c0 0023     	 mov r3,#0
 1164 00c2 BB60     	 str r3,[r7,#8]
 1165              	.L38:
 192:../main.c     **** 
 193:../main.c     **** 	switch(Steering_mode_cal) // options 'Front'; 'Rear'; '4_Wheel'; 'Carb'; 'Rotate'
 1166              	 .loc 6 193 0 is_stmt 1
 1167 00c4 FB1D     	 add r3,r7,#7
 1168 00c6 1B78     	 ldrb r3,[r3]
 1169 00c8 052B     	 cmp r3,#5
 1170 00ca 01D9     	 bls .LCB549
 1171 00cc 00F04AFE 	 bl .L39
 1172              	.LCB549:
 1173 00d0 9A00     	 lsl r2,r3,#2
 1174 00d2 8C4B     	 ldr r3,.L115+20
 1175 00d4 D318     	 add r3,r2,r3
 1176 00d6 1B68     	 ldr r3,[r3]
 1177 00d8 9F46     	 mov pc,r3
 1178              	 .section .rodata.Steering_Function,"a",%progbits
 1179              	 .align 2
 1180              	.L41:
 1181 0000 640D0000 	 .word .L39
 1182 0004 DA000000 	 .word .L40
 1183 0008 A2040000 	 .word .L42
 1184 000c 6C080000 	 .word .L43
 1185 0010 7C0C0000 	 .word .L44
 1186 0014 DC0C0000 	 .word .L45
 1187              	 .section .text.Steering_Function
 1188              	.L40:
 194:../main.c     **** 	{
 195:../main.c     **** 		case FRONT://#############################################################
 196:../main.c     **** 			// steering limits
 197:../main.c     **** 			if(Steering_direction_cal > 50) Steering_direction_cal = 50;
 1189              	 .loc 6 197 0
 1190 00da F868     	 ldr r0,[r7,#12]
 1191 00dc 8A49     	 ldr r1,.L115+24
 1192 00de FFF7FEFF 	 bl __aeabi_fcmpgt
 1193 00e2 031E     	 sub r3,r0,#0
 1194 00e4 01D0     	 beq .L46
 1195              	 .loc 6 197 0 is_stmt 0 discriminator 1
 1196 00e6 884B     	 ldr r3,.L115+24
 1197 00e8 FB60     	 str r3,[r7,#12]
 1198              	.L46:
 198:../main.c     **** 			if(Steering_direction_cal < -50) Steering_direction_cal = -50;
 1199              	 .loc 6 198 0 is_stmt 1
 1200 00ea F868     	 ldr r0,[r7,#12]
 1201 00ec 8749     	 ldr r1,.L115+28
 1202 00ee FFF7FEFF 	 bl __aeabi_fcmplt
 1203 00f2 031E     	 sub r3,r0,#0
 1204 00f4 01D0     	 beq .L48
 1205              	 .loc 6 198 0 is_stmt 0 discriminator 1
 1206 00f6 854B     	 ldr r3,.L115+28
 1207 00f8 FB60     	 str r3,[r7,#12]
 1208              	.L48:
 199:../main.c     **** 
 200:../main.c     **** 			// pre calc
 201:../main.c     **** 			R_Turn = WHEEL_BASE / tan(Steering_direction_cal / RAD_TO_DEG); // to truni graduis converstion
 1209              	 .loc 6 201 0 is_stmt 1
 1210 00fa F868     	 ldr r0,[r7,#12]
 1211 00fc FFF7FEFF 	 bl __aeabi_f2d
 1212 0100 031C     	 mov r3,r0
 1213 0102 0C1C     	 mov r4,r1
 1214 0104 181C     	 mov r0,r3
 1215 0106 211C     	 mov r1,r4
 1216 0108 814A     	 ldr r2,.L115+32
 1217 010a 824B     	 ldr r3,.L115+36
 1218 010c FFF7FEFF 	 bl __aeabi_ddiv
 1219 0110 031C     	 mov r3,r0
 1220 0112 0C1C     	 mov r4,r1
 1221 0114 181C     	 mov r0,r3
 1222 0116 211C     	 mov r1,r4
 1223 0118 FFF7FEFF 	 bl tan
 1224 011c 031C     	 mov r3,r0
 1225 011e 0C1C     	 mov r4,r1
 1226 0120 7D48     	 ldr r0,.L115+40
 1227 0122 7E49     	 ldr r1,.L115+44
 1228 0124 1A1C     	 mov r2,r3
 1229 0126 231C     	 mov r3,r4
 1230 0128 FFF7FEFF 	 bl __aeabi_ddiv
 1231 012c 031C     	 mov r3,r0
 1232 012e 0C1C     	 mov r4,r1
 1233 0130 181C     	 mov r0,r3
 1234 0132 211C     	 mov r1,r4
 1235 0134 FFF7FEFF 	 bl __aeabi_d2f
 1236 0138 021C     	 add r2,r0,#0
 1237 013a 794B     	 ldr r3,.L115+48
 1238 013c 1A60     	 str r2,[r3]
 202:../main.c     **** 			Speed_ratio = (2 * (copysign(R_Turn,1) + HALF_TRACK_WIDTH) * M_PI) / (2 * copysign(R_Turn,1) * M
 1239              	 .loc 6 202 0
 1240 013e 784B     	 ldr r3,.L115+48
 1241 0140 1B68     	 ldr r3,[r3]
 1242 0142 5B00     	 lsl r3,r3,#1
 1243 0144 5B08     	 lsr r3,r3,#1
 1244 0146 181C     	 add r0,r3,#0
 1245 0148 FFF7FEFF 	 bl __aeabi_f2d
 1246 014c 031C     	 mov r3,r0
 1247 014e 0C1C     	 mov r4,r1
 1248 0150 181C     	 mov r0,r3
 1249 0152 211C     	 mov r1,r4
 1250 0154 734A     	 ldr r2,.L115+52
 1251 0156 744B     	 ldr r3,.L115+56
 1252 0158 FFF7FEFF 	 bl __aeabi_dadd
 1253 015c 031C     	 mov r3,r0
 1254 015e 0C1C     	 mov r4,r1
 1255 0160 181C     	 mov r0,r3
 1256 0162 211C     	 mov r1,r4
 1257 0164 1A1C     	 mov r2,r3
 1258 0166 231C     	 mov r3,r4
 1259 0168 FFF7FEFF 	 bl __aeabi_dadd
 1260 016c 031C     	 mov r3,r0
 1261 016e 0C1C     	 mov r4,r1
 1262 0170 181C     	 mov r0,r3
 1263 0172 211C     	 mov r1,r4
 1264 0174 6D4A     	 ldr r2,.L115+60
 1265 0176 6E4B     	 ldr r3,.L115+64
 1266 0178 FFF7FEFF 	 bl __aeabi_dmul
 1267 017c 031C     	 mov r3,r0
 1268 017e 0C1C     	 mov r4,r1
 1269 0180 1D1C     	 mov r5,r3
 1270 0182 261C     	 mov r6,r4
 1271 0184 664B     	 ldr r3,.L115+48
 1272 0186 1B68     	 ldr r3,[r3]
 1273 0188 5B00     	 lsl r3,r3,#1
 1274 018a 5B08     	 lsr r3,r3,#1
 1275 018c 181C     	 add r0,r3,#0
 1276 018e FFF7FEFF 	 bl __aeabi_f2d
 1277 0192 031C     	 mov r3,r0
 1278 0194 0C1C     	 mov r4,r1
 1279 0196 181C     	 mov r0,r3
 1280 0198 211C     	 mov r1,r4
 1281 019a 1A1C     	 mov r2,r3
 1282 019c 231C     	 mov r3,r4
 1283 019e FFF7FEFF 	 bl __aeabi_dadd
 1284 01a2 031C     	 mov r3,r0
 1285 01a4 0C1C     	 mov r4,r1
 1286 01a6 181C     	 mov r0,r3
 1287 01a8 211C     	 mov r1,r4
 1288 01aa 604A     	 ldr r2,.L115+60
 1289 01ac 604B     	 ldr r3,.L115+64
 1290 01ae FFF7FEFF 	 bl __aeabi_dmul
 1291 01b2 031C     	 mov r3,r0
 1292 01b4 0C1C     	 mov r4,r1
 1293 01b6 281C     	 mov r0,r5
 1294 01b8 311C     	 mov r1,r6
 1295 01ba 1A1C     	 mov r2,r3
 1296 01bc 231C     	 mov r3,r4
 1297 01be FFF7FEFF 	 bl __aeabi_ddiv
 1298 01c2 031C     	 mov r3,r0
 1299 01c4 0C1C     	 mov r4,r1
 1300 01c6 181C     	 mov r0,r3
 1301 01c8 211C     	 mov r1,r4
 1302 01ca FFF7FEFF 	 bl __aeabi_d2f
 1303 01ce 021C     	 add r2,r0,#0
 1304 01d0 584B     	 ldr r3,.L115+68
 1305 01d2 1A60     	 str r2,[r3]
 203:../main.c     **** 
 204:../main.c     **** 			if((R_TRUN_MIN < R_Turn) && (R_Turn < R_TRUN_MAX)){
 1306              	 .loc 6 204 0
 1307 01d4 524B     	 ldr r3,.L115+48
 1308 01d6 1B68     	 ldr r3,[r3]
 1309 01d8 181C     	 add r0,r3,#0
 1310 01da FFF7FEFF 	 bl __aeabi_f2d
 1311 01de 031C     	 mov r3,r0
 1312 01e0 0C1C     	 mov r4,r1
 1313 01e2 181C     	 mov r0,r3
 1314 01e4 211C     	 mov r1,r4
 1315 01e6 444A     	 ldr r2,.L115+8
 1316 01e8 444B     	 ldr r3,.L115+12
 1317 01ea FFF7FEFF 	 bl __aeabi_dcmpgt
 1318 01ee 031E     	 sub r3,r0,#0
 1319 01f0 00D1     	 bne .LCB689
 1320 01f2 AFE0     	 b .L50
 1321              	.LCB689:
 1322              	 .loc 6 204 0 is_stmt 0 discriminator 1
 1323 01f4 4A4B     	 ldr r3,.L115+48
 1324 01f6 1B68     	 ldr r3,[r3]
 1325 01f8 181C     	 add r0,r3,#0
 1326 01fa 4F49     	 ldr r1,.L115+72
 1327 01fc FFF7FEFF 	 bl __aeabi_fcmplt
 1328 0200 031E     	 sub r3,r0,#0
 1329 0202 00D1     	 bne .LCB697
 1330 0204 A6E0     	 b .L50
 1331              	.LCB697:
 205:../main.c     **** 				angle_fl = RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn + HALF_TRACK_WIDTH)); // out wheel
 1332              	 .loc 6 205 0 is_stmt 1
 1333 0206 464B     	 ldr r3,.L115+48
 1334 0208 1B68     	 ldr r3,[r3]
 1335 020a 181C     	 add r0,r3,#0
 1336 020c FFF7FEFF 	 bl __aeabi_f2d
 1337 0210 031C     	 mov r3,r0
 1338 0212 0C1C     	 mov r4,r1
 1339 0214 181C     	 mov r0,r3
 1340 0216 211C     	 mov r1,r4
 1341 0218 424A     	 ldr r2,.L115+52
 1342 021a 434B     	 ldr r3,.L115+56
 1343 021c FFF7FEFF 	 bl __aeabi_dadd
 1344 0220 031C     	 mov r3,r0
 1345 0222 0C1C     	 mov r4,r1
 1346 0224 3C48     	 ldr r0,.L115+40
 1347 0226 3D49     	 ldr r1,.L115+44
 1348 0228 1A1C     	 mov r2,r3
 1349 022a 231C     	 mov r3,r4
 1350 022c FFF7FEFF 	 bl __aeabi_ddiv
 1351 0230 031C     	 mov r3,r0
 1352 0232 0C1C     	 mov r4,r1
 1353 0234 181C     	 mov r0,r3
 1354 0236 211C     	 mov r1,r4
 1355 0238 FFF7FEFF 	 bl atan
 1356 023c 031C     	 mov r3,r0
 1357 023e 0C1C     	 mov r4,r1
 1358 0240 181C     	 mov r0,r3
 1359 0242 211C     	 mov r1,r4
 1360 0244 324A     	 ldr r2,.L115+32
 1361 0246 334B     	 ldr r3,.L115+36
 1362 0248 FFF7FEFF 	 bl __aeabi_dmul
 1363 024c 031C     	 mov r3,r0
 1364 024e 0C1C     	 mov r4,r1
 1365 0250 181C     	 mov r0,r3
 1366 0252 211C     	 mov r1,r4
 1367 0254 FFF7FEFF 	 bl __aeabi_d2f
 1368 0258 021C     	 add r2,r0,#0
 1369 025a 384B     	 ldr r3,.L115+76
 1370 025c 1A60     	 str r2,[r3]
 206:../main.c     **** 				angle_fr = RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn - HALF_TRACK_WIDTH)); // in wheel
 1371              	 .loc 6 206 0
 1372 025e 304B     	 ldr r3,.L115+48
 1373 0260 1B68     	 ldr r3,[r3]
 1374 0262 181C     	 add r0,r3,#0
 1375 0264 FFF7FEFF 	 bl __aeabi_f2d
 1376 0268 031C     	 mov r3,r0
 1377 026a 0C1C     	 mov r4,r1
 1378 026c 181C     	 mov r0,r3
 1379 026e 211C     	 mov r1,r4
 1380 0270 2C4A     	 ldr r2,.L115+52
 1381 0272 2D4B     	 ldr r3,.L115+56
 1382 0274 FFF7FEFF 	 bl __aeabi_dsub
 1383 0278 031C     	 mov r3,r0
 1384 027a 0C1C     	 mov r4,r1
 1385 027c 2648     	 ldr r0,.L115+40
 1386 027e 2749     	 ldr r1,.L115+44
 1387 0280 1A1C     	 mov r2,r3
 1388 0282 231C     	 mov r3,r4
 1389 0284 FFF7FEFF 	 bl __aeabi_ddiv
 1390 0288 031C     	 mov r3,r0
 1391 028a 0C1C     	 mov r4,r1
 1392 028c 181C     	 mov r0,r3
 1393 028e 211C     	 mov r1,r4
 1394 0290 FFF7FEFF 	 bl atan
 1395 0294 031C     	 mov r3,r0
 1396 0296 0C1C     	 mov r4,r1
 1397 0298 181C     	 mov r0,r3
 1398 029a 211C     	 mov r1,r4
 1399 029c 1C4A     	 ldr r2,.L115+32
 1400 029e 1D4B     	 ldr r3,.L115+36
 1401 02a0 FFF7FEFF 	 bl __aeabi_dmul
 1402 02a4 031C     	 mov r3,r0
 1403 02a6 0C1C     	 mov r4,r1
 1404 02a8 181C     	 mov r0,r3
 1405 02aa 211C     	 mov r1,r4
 1406 02ac FFF7FEFF 	 bl __aeabi_d2f
 1407 02b0 021C     	 add r2,r0,#0
 1408 02b2 234B     	 ldr r3,.L115+80
 1409 02b4 1A60     	 str r2,[r3]
 207:../main.c     **** 
 208:../main.c     **** 				speed_fl = Driving_speed_cal * Speed_ratio;
 1410              	 .loc 6 208 0
 1411 02b6 1F4B     	 ldr r3,.L115+68
 1412 02b8 1B68     	 ldr r3,[r3]
 1413 02ba 181C     	 add r0,r3,#0
 1414 02bc B968     	 ldr r1,[r7,#8]
 1415 02be FFF7FEFF 	 bl __aeabi_fmul
 1416 02c2 031C     	 add r3,r0,#0
 1417 02c4 1A1C     	 add r2,r3,#0
 1418 02c6 1F4B     	 ldr r3,.L115+84
 1419 02c8 1A60     	 str r2,[r3]
 209:../main.c     **** 				speed_fr = Driving_speed_cal / Speed_ratio;
 1420              	 .loc 6 209 0
 1421 02ca 1A4B     	 ldr r3,.L115+68
 1422 02cc 1B68     	 ldr r3,[r3]
 1423 02ce B868     	 ldr r0,[r7,#8]
 1424 02d0 191C     	 add r1,r3,#0
 1425 02d2 FFF7FEFF 	 bl __aeabi_fdiv
 1426 02d6 031C     	 add r3,r0,#0
 1427 02d8 1A1C     	 add r2,r3,#0
 1428 02da 1B4B     	 ldr r3,.L115+88
 1429 02dc 1A60     	 str r2,[r3]
 210:../main.c     **** 				//speed_rl = Driving_speed_cal * Speed_ratio;
 211:../main.c     **** 				//speed_rr = Driving_speed_cal / Speed_ratio;
 212:../main.c     **** 
 213:../main.c     **** 				speed_rl = speed_fl;
 1430              	 .loc 6 213 0
 1431 02de 194B     	 ldr r3,.L115+84
 1432 02e0 1A68     	 ldr r2,[r3]
 1433 02e2 1A4B     	 ldr r3,.L115+92
 1434 02e4 1A60     	 str r2,[r3]
 214:../main.c     **** 				speed_rr = speed_fr;
 1435              	 .loc 6 214 0
 1436 02e6 184B     	 ldr r3,.L115+88
 1437 02e8 1A68     	 ldr r2,[r3]
 1438 02ea 194B     	 ldr r3,.L115+96
 1439 02ec 1A60     	 str r2,[r3]
 1440 02ee D0E0     	 b .L53
 1441              	.L116:
 1442              	 .align 2
 1443              	.L115:
 1444 02f0 00000000 	 .word New_Input
 1445 02f4 000080BF 	 .word -1082130432
 1446 02f8 9A999999 	 .word -1717986918
 1447 02fc 9999A93F 	 .word 1068079513
 1448 0300 9999A9BF 	 .word -1079404135
 1449 0304 00000000 	 .word .L41
 1450 0308 00004842 	 .word 1112014848
 1451 030c 000048C2 	 .word -1035468800
 1452 0310 D9CEF753 	 .word 1408749273
 1453 0314 E3A54C40 	 .word 1078765027
 1454 0318 79E92631 	 .word 824633721
 1455 031c 08ACDC3F 	 .word 1071426568
 1456 0320 00000000 	 .word R_Turn
 1457 0324 77BE9F1A 	 .word 446676599
 1458 0328 2FDDC43F 	 .word 1069866287
 1459 032c 182D4454 	 .word 1413754136
 1460 0330 FB210940 	 .word 1074340347
 1461 0334 00000000 	 .word Speed_ratio
 1462 0338 0000A041 	 .word 1101004800
 1463 033c 00000000 	 .word angle_fl
 1464 0340 00000000 	 .word angle_fr
 1465 0344 00000000 	 .word speed_fl
 1466 0348 00000000 	 .word speed_fr
 1467 034c 00000000 	 .word speed_rl
 1468 0350 00000000 	 .word speed_rr
 1469              	.L50:
 215:../main.c     **** 			}
 216:../main.c     **** 			else if((- R_TRUN_MIN > R_Turn) && (R_Turn > -R_TRUN_MAX)){
 1470              	 .loc 6 216 0
 1471 0354 D84B     	 ldr r3,.L117
 1472 0356 1B68     	 ldr r3,[r3]
 1473 0358 181C     	 add r0,r3,#0
 1474 035a FFF7FEFF 	 bl __aeabi_f2d
 1475 035e 031C     	 mov r3,r0
 1476 0360 0C1C     	 mov r4,r1
 1477 0362 181C     	 mov r0,r3
 1478 0364 211C     	 mov r1,r4
 1479 0366 D54A     	 ldr r2,.L117+4
 1480 0368 D54B     	 ldr r3,.L117+8
 1481 036a FFF7FEFF 	 bl __aeabi_dcmplt
 1482 036e 031E     	 sub r3,r0,#0
 1483 0370 00D1     	 bne .LCB847
 1484 0372 7CE0     	 b .L54
 1485              	.LCB847:
 1486              	 .loc 6 216 0 is_stmt 0 discriminator 1
 1487 0374 D04B     	 ldr r3,.L117
 1488 0376 1B68     	 ldr r3,[r3]
 1489 0378 181C     	 add r0,r3,#0
 1490 037a D249     	 ldr r1,.L117+12
 1491 037c FFF7FEFF 	 bl __aeabi_fcmpgt
 1492 0380 031E     	 sub r3,r0,#0
 1493 0382 74D0     	 beq .L54
 217:../main.c     **** 				angle_fl = RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn + HALF_TRACK_WIDTH)); // in wheel
 1494              	 .loc 6 217 0 is_stmt 1
 1495 0384 CC4B     	 ldr r3,.L117
 1496 0386 1B68     	 ldr r3,[r3]
 1497 0388 181C     	 add r0,r3,#0
 1498 038a FFF7FEFF 	 bl __aeabi_f2d
 1499 038e 031C     	 mov r3,r0
 1500 0390 0C1C     	 mov r4,r1
 1501 0392 181C     	 mov r0,r3
 1502 0394 211C     	 mov r1,r4
 1503 0396 CC4A     	 ldr r2,.L117+16
 1504 0398 CC4B     	 ldr r3,.L117+20
 1505 039a FFF7FEFF 	 bl __aeabi_dadd
 1506 039e 031C     	 mov r3,r0
 1507 03a0 0C1C     	 mov r4,r1
 1508 03a2 CB48     	 ldr r0,.L117+24
 1509 03a4 CB49     	 ldr r1,.L117+28
 1510 03a6 1A1C     	 mov r2,r3
 1511 03a8 231C     	 mov r3,r4
 1512 03aa FFF7FEFF 	 bl __aeabi_ddiv
 1513 03ae 031C     	 mov r3,r0
 1514 03b0 0C1C     	 mov r4,r1
 1515 03b2 181C     	 mov r0,r3
 1516 03b4 211C     	 mov r1,r4
 1517 03b6 FFF7FEFF 	 bl atan
 1518 03ba 031C     	 mov r3,r0
 1519 03bc 0C1C     	 mov r4,r1
 1520 03be 181C     	 mov r0,r3
 1521 03c0 211C     	 mov r1,r4
 1522 03c2 C54A     	 ldr r2,.L117+32
 1523 03c4 C54B     	 ldr r3,.L117+36
 1524 03c6 FFF7FEFF 	 bl __aeabi_dmul
 1525 03ca 031C     	 mov r3,r0
 1526 03cc 0C1C     	 mov r4,r1
 1527 03ce 181C     	 mov r0,r3
 1528 03d0 211C     	 mov r1,r4
 1529 03d2 FFF7FEFF 	 bl __aeabi_d2f
 1530 03d6 021C     	 add r2,r0,#0
 1531 03d8 C14B     	 ldr r3,.L117+40
 1532 03da 1A60     	 str r2,[r3]
 218:../main.c     **** 				angle_fr = RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn - HALF_TRACK_WIDTH)); // out wheel
 1533              	 .loc 6 218 0
 1534 03dc B64B     	 ldr r3,.L117
 1535 03de 1B68     	 ldr r3,[r3]
 1536 03e0 181C     	 add r0,r3,#0
 1537 03e2 FFF7FEFF 	 bl __aeabi_f2d
 1538 03e6 031C     	 mov r3,r0
 1539 03e8 0C1C     	 mov r4,r1
 1540 03ea 181C     	 mov r0,r3
 1541 03ec 211C     	 mov r1,r4
 1542 03ee B64A     	 ldr r2,.L117+16
 1543 03f0 B64B     	 ldr r3,.L117+20
 1544 03f2 FFF7FEFF 	 bl __aeabi_dsub
 1545 03f6 031C     	 mov r3,r0
 1546 03f8 0C1C     	 mov r4,r1
 1547 03fa B548     	 ldr r0,.L117+24
 1548 03fc B549     	 ldr r1,.L117+28
 1549 03fe 1A1C     	 mov r2,r3
 1550 0400 231C     	 mov r3,r4
 1551 0402 FFF7FEFF 	 bl __aeabi_ddiv
 1552 0406 031C     	 mov r3,r0
 1553 0408 0C1C     	 mov r4,r1
 1554 040a 181C     	 mov r0,r3
 1555 040c 211C     	 mov r1,r4
 1556 040e FFF7FEFF 	 bl atan
 1557 0412 031C     	 mov r3,r0
 1558 0414 0C1C     	 mov r4,r1
 1559 0416 181C     	 mov r0,r3
 1560 0418 211C     	 mov r1,r4
 1561 041a AF4A     	 ldr r2,.L117+32
 1562 041c AF4B     	 ldr r3,.L117+36
 1563 041e FFF7FEFF 	 bl __aeabi_dmul
 1564 0422 031C     	 mov r3,r0
 1565 0424 0C1C     	 mov r4,r1
 1566 0426 181C     	 mov r0,r3
 1567 0428 211C     	 mov r1,r4
 1568 042a FFF7FEFF 	 bl __aeabi_d2f
 1569 042e 021C     	 add r2,r0,#0
 1570 0430 AC4B     	 ldr r3,.L117+44
 1571 0432 1A60     	 str r2,[r3]
 219:../main.c     **** 
 220:../main.c     **** 				speed_fl = Driving_speed_cal / Speed_ratio;
 1572              	 .loc 6 220 0
 1573 0434 AC4B     	 ldr r3,.L117+48
 1574 0436 1B68     	 ldr r3,[r3]
 1575 0438 B868     	 ldr r0,[r7,#8]
 1576 043a 191C     	 add r1,r3,#0
 1577 043c FFF7FEFF 	 bl __aeabi_fdiv
 1578 0440 031C     	 add r3,r0,#0
 1579 0442 1A1C     	 add r2,r3,#0
 1580 0444 A94B     	 ldr r3,.L117+52
 1581 0446 1A60     	 str r2,[r3]
 221:../main.c     **** 				speed_fr = Driving_speed_cal * Speed_ratio;
 1582              	 .loc 6 221 0
 1583 0448 A74B     	 ldr r3,.L117+48
 1584 044a 1B68     	 ldr r3,[r3]
 1585 044c 181C     	 add r0,r3,#0
 1586 044e B968     	 ldr r1,[r7,#8]
 1587 0450 FFF7FEFF 	 bl __aeabi_fmul
 1588 0454 031C     	 add r3,r0,#0
 1589 0456 1A1C     	 add r2,r3,#0
 1590 0458 A54B     	 ldr r3,.L117+56
 1591 045a 1A60     	 str r2,[r3]
 222:../main.c     **** 				//speed_rl = Driving_speed_cal / Speed_ratio;
 223:../main.c     **** 				//speed_rr = Driving_speed_cal * Speed_ratio;
 224:../main.c     **** 
 225:../main.c     **** 				speed_rl = speed_fl;
 1592              	 .loc 6 225 0
 1593 045c A34B     	 ldr r3,.L117+52
 1594 045e 1A68     	 ldr r2,[r3]
 1595 0460 A44B     	 ldr r3,.L117+60
 1596 0462 1A60     	 str r2,[r3]
 226:../main.c     **** 				speed_rr = speed_fr;
 1597              	 .loc 6 226 0
 1598 0464 A24B     	 ldr r3,.L117+56
 1599 0466 1A68     	 ldr r2,[r3]
 1600 0468 A34B     	 ldr r3,.L117+64
 1601 046a 1A60     	 str r2,[r3]
 1602 046c 11E0     	 b .L53
 1603              	.L54:
 227:../main.c     **** 			}
 228:../main.c     **** 			else{
 229:../main.c     **** 				angle_fl = 0;
 1604              	 .loc 6 229 0
 1605 046e 9C4B     	 ldr r3,.L117+40
 1606 0470 0022     	 mov r2,#0
 1607 0472 1A60     	 str r2,[r3]
 230:../main.c     **** 				angle_fr = 0;
 1608              	 .loc 6 230 0
 1609 0474 9B4B     	 ldr r3,.L117+44
 1610 0476 0022     	 mov r2,#0
 1611 0478 1A60     	 str r2,[r3]
 231:../main.c     **** 
 232:../main.c     **** 				speed_fl = Driving_speed_cal;
 1612              	 .loc 6 232 0
 1613 047a 9C4B     	 ldr r3,.L117+52
 1614 047c BA68     	 ldr r2,[r7,#8]
 1615 047e 1A60     	 str r2,[r3]
 233:../main.c     **** 				speed_fr = Driving_speed_cal;
 1616              	 .loc 6 233 0
 1617 0480 9B4B     	 ldr r3,.L117+56
 1618 0482 BA68     	 ldr r2,[r7,#8]
 1619 0484 1A60     	 str r2,[r3]
 234:../main.c     **** 				speed_rl = Driving_speed_cal;
 1620              	 .loc 6 234 0
 1621 0486 9B4B     	 ldr r3,.L117+60
 1622 0488 BA68     	 ldr r2,[r7,#8]
 1623 048a 1A60     	 str r2,[r3]
 235:../main.c     **** 				speed_rr = Driving_speed_cal;
 1624              	 .loc 6 235 0
 1625 048c 9A4B     	 ldr r3,.L117+64
 1626 048e BA68     	 ldr r2,[r7,#8]
 1627 0490 1A60     	 str r2,[r3]
 1628              	.L53:
 236:../main.c     **** 			}
 237:../main.c     **** 
 238:../main.c     **** 			//rear axle
 239:../main.c     **** 			angle_rl = 0;
 1629              	 .loc 6 239 0
 1630 0492 9A4B     	 ldr r3,.L117+68
 1631 0494 0022     	 mov r2,#0
 1632 0496 1A60     	 str r2,[r3]
 240:../main.c     **** 			angle_rr = 0;
 1633              	 .loc 6 240 0
 1634 0498 994B     	 ldr r3,.L117+72
 1635 049a 0022     	 mov r2,#0
 1636 049c 1A60     	 str r2,[r3]
 241:../main.c     **** 			break;
 1637              	 .loc 6 241 0
 1638 049e 00F079FC 	 bl .L57
 1639              	.L42:
 242:../main.c     **** 
 243:../main.c     **** 		case BACK:// rear #############################################################
 244:../main.c     **** 			// steering limits
 245:../main.c     **** 			if(Steering_direction_cal > 50) Steering_direction_cal = 50;
 1640              	 .loc 6 245 0
 1641 04a2 F868     	 ldr r0,[r7,#12]
 1642 04a4 9749     	 ldr r1,.L117+76
 1643 04a6 FFF7FEFF 	 bl __aeabi_fcmpgt
 1644 04aa 031E     	 sub r3,r0,#0
 1645 04ac 01D0     	 beq .L58
 1646              	 .loc 6 245 0 is_stmt 0 discriminator 1
 1647 04ae 954B     	 ldr r3,.L117+76
 1648 04b0 FB60     	 str r3,[r7,#12]
 1649              	.L58:
 246:../main.c     **** 			if(Steering_direction_cal < -50) Steering_direction_cal = -50;
 1650              	 .loc 6 246 0 is_stmt 1
 1651 04b2 F868     	 ldr r0,[r7,#12]
 1652 04b4 9449     	 ldr r1,.L117+80
 1653 04b6 FFF7FEFF 	 bl __aeabi_fcmplt
 1654 04ba 031E     	 sub r3,r0,#0
 1655 04bc 01D0     	 beq .L60
 1656              	 .loc 6 246 0 is_stmt 0 discriminator 1
 1657 04be 924B     	 ldr r3,.L117+80
 1658 04c0 FB60     	 str r3,[r7,#12]
 1659              	.L60:
 247:../main.c     **** 
 248:../main.c     **** 			// pre calc
 249:../main.c     **** 			R_Turn = WHEEL_BASE / tan(Steering_direction_cal / RAD_TO_DEG); // to truni graduis converstion
 1660              	 .loc 6 249 0 is_stmt 1
 1661 04c2 F868     	 ldr r0,[r7,#12]
 1662 04c4 FFF7FEFF 	 bl __aeabi_f2d
 1663 04c8 031C     	 mov r3,r0
 1664 04ca 0C1C     	 mov r4,r1
 1665 04cc 181C     	 mov r0,r3
 1666 04ce 211C     	 mov r1,r4
 1667 04d0 814A     	 ldr r2,.L117+32
 1668 04d2 824B     	 ldr r3,.L117+36
 1669 04d4 FFF7FEFF 	 bl __aeabi_ddiv
 1670 04d8 031C     	 mov r3,r0
 1671 04da 0C1C     	 mov r4,r1
 1672 04dc 181C     	 mov r0,r3
 1673 04de 211C     	 mov r1,r4
 1674 04e0 FFF7FEFF 	 bl tan
 1675 04e4 031C     	 mov r3,r0
 1676 04e6 0C1C     	 mov r4,r1
 1677 04e8 7948     	 ldr r0,.L117+24
 1678 04ea 7A49     	 ldr r1,.L117+28
 1679 04ec 1A1C     	 mov r2,r3
 1680 04ee 231C     	 mov r3,r4
 1681 04f0 FFF7FEFF 	 bl __aeabi_ddiv
 1682 04f4 031C     	 mov r3,r0
 1683 04f6 0C1C     	 mov r4,r1
 1684 04f8 181C     	 mov r0,r3
 1685 04fa 211C     	 mov r1,r4
 1686 04fc FFF7FEFF 	 bl __aeabi_d2f
 1687 0500 021C     	 add r2,r0,#0
 1688 0502 6D4B     	 ldr r3,.L117
 1689 0504 1A60     	 str r2,[r3]
 250:../main.c     **** 			Speed_ratio = (2 * (copysign(R_Turn,1) + HALF_TRACK_WIDTH) * M_PI) / (2 * copysign(R_Turn,1) * M
 1690              	 .loc 6 250 0
 1691 0506 6C4B     	 ldr r3,.L117
 1692 0508 1B68     	 ldr r3,[r3]
 1693 050a 5B00     	 lsl r3,r3,#1
 1694 050c 5B08     	 lsr r3,r3,#1
 1695 050e 181C     	 add r0,r3,#0
 1696 0510 FFF7FEFF 	 bl __aeabi_f2d
 1697 0514 031C     	 mov r3,r0
 1698 0516 0C1C     	 mov r4,r1
 1699 0518 181C     	 mov r0,r3
 1700 051a 211C     	 mov r1,r4
 1701 051c 6A4A     	 ldr r2,.L117+16
 1702 051e 6B4B     	 ldr r3,.L117+20
 1703 0520 FFF7FEFF 	 bl __aeabi_dadd
 1704 0524 031C     	 mov r3,r0
 1705 0526 0C1C     	 mov r4,r1
 1706 0528 181C     	 mov r0,r3
 1707 052a 211C     	 mov r1,r4
 1708 052c 1A1C     	 mov r2,r3
 1709 052e 231C     	 mov r3,r4
 1710 0530 FFF7FEFF 	 bl __aeabi_dadd
 1711 0534 031C     	 mov r3,r0
 1712 0536 0C1C     	 mov r4,r1
 1713 0538 181C     	 mov r0,r3
 1714 053a 211C     	 mov r1,r4
 1715 053c 734A     	 ldr r2,.L117+84
 1716 053e 744B     	 ldr r3,.L117+88
 1717 0540 FFF7FEFF 	 bl __aeabi_dmul
 1718 0544 031C     	 mov r3,r0
 1719 0546 0C1C     	 mov r4,r1
 1720 0548 1D1C     	 mov r5,r3
 1721 054a 261C     	 mov r6,r4
 1722 054c 5A4B     	 ldr r3,.L117
 1723 054e 1B68     	 ldr r3,[r3]
 1724 0550 5B00     	 lsl r3,r3,#1
 1725 0552 5B08     	 lsr r3,r3,#1
 1726 0554 181C     	 add r0,r3,#0
 1727 0556 FFF7FEFF 	 bl __aeabi_f2d
 1728 055a 031C     	 mov r3,r0
 1729 055c 0C1C     	 mov r4,r1
 1730 055e 181C     	 mov r0,r3
 1731 0560 211C     	 mov r1,r4
 1732 0562 1A1C     	 mov r2,r3
 1733 0564 231C     	 mov r3,r4
 1734 0566 FFF7FEFF 	 bl __aeabi_dadd
 1735 056a 031C     	 mov r3,r0
 1736 056c 0C1C     	 mov r4,r1
 1737 056e 181C     	 mov r0,r3
 1738 0570 211C     	 mov r1,r4
 1739 0572 664A     	 ldr r2,.L117+84
 1740 0574 664B     	 ldr r3,.L117+88
 1741 0576 FFF7FEFF 	 bl __aeabi_dmul
 1742 057a 031C     	 mov r3,r0
 1743 057c 0C1C     	 mov r4,r1
 1744 057e 281C     	 mov r0,r5
 1745 0580 311C     	 mov r1,r6
 1746 0582 1A1C     	 mov r2,r3
 1747 0584 231C     	 mov r3,r4
 1748 0586 FFF7FEFF 	 bl __aeabi_ddiv
 1749 058a 031C     	 mov r3,r0
 1750 058c 0C1C     	 mov r4,r1
 1751 058e 181C     	 mov r0,r3
 1752 0590 211C     	 mov r1,r4
 1753 0592 FFF7FEFF 	 bl __aeabi_d2f
 1754 0596 021C     	 add r2,r0,#0
 1755 0598 534B     	 ldr r3,.L117+48
 1756 059a 1A60     	 str r2,[r3]
 251:../main.c     **** 
 252:../main.c     **** 			if((R_TRUN_MIN < R_Turn) && (R_Turn < R_TRUN_MAX)){
 1757              	 .loc 6 252 0
 1758 059c 464B     	 ldr r3,.L117
 1759 059e 1B68     	 ldr r3,[r3]
 1760 05a0 181C     	 add r0,r3,#0
 1761 05a2 FFF7FEFF 	 bl __aeabi_f2d
 1762 05a6 031C     	 mov r3,r0
 1763 05a8 0C1C     	 mov r4,r1
 1764 05aa 181C     	 mov r0,r3
 1765 05ac 211C     	 mov r1,r4
 1766 05ae 434A     	 ldr r2,.L117+4
 1767 05b0 584B     	 ldr r3,.L117+92
 1768 05b2 FFF7FEFF 	 bl __aeabi_dcmpgt
 1769 05b6 031E     	 sub r3,r0,#0
 1770 05b8 00D1     	 bne .LCB1120
 1771 05ba B1E0     	 b .L62
 1772              	.LCB1120:
 1773              	 .loc 6 252 0 is_stmt 0 discriminator 1
 1774 05bc 3E4B     	 ldr r3,.L117
 1775 05be 1B68     	 ldr r3,[r3]
 1776 05c0 181C     	 add r0,r3,#0
 1777 05c2 5549     	 ldr r1,.L117+96
 1778 05c4 FFF7FEFF 	 bl __aeabi_fcmplt
 1779 05c8 031E     	 sub r3,r0,#0
 1780 05ca 00D1     	 bne .LCB1128
 1781 05cc A8E0     	 b .L62
 1782              	.LCB1128:
 253:../main.c     **** 				angle_rl = - RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn + HALF_TRACK_WIDTH)); // out wheel
 1783              	 .loc 6 253 0 is_stmt 1
 1784 05ce 3A4B     	 ldr r3,.L117
 1785 05d0 1B68     	 ldr r3,[r3]
 1786 05d2 181C     	 add r0,r3,#0
 1787 05d4 FFF7FEFF 	 bl __aeabi_f2d
 1788 05d8 031C     	 mov r3,r0
 1789 05da 0C1C     	 mov r4,r1
 1790 05dc 181C     	 mov r0,r3
 1791 05de 211C     	 mov r1,r4
 1792 05e0 394A     	 ldr r2,.L117+16
 1793 05e2 3A4B     	 ldr r3,.L117+20
 1794 05e4 FFF7FEFF 	 bl __aeabi_dadd
 1795 05e8 031C     	 mov r3,r0
 1796 05ea 0C1C     	 mov r4,r1
 1797 05ec 3848     	 ldr r0,.L117+24
 1798 05ee 3949     	 ldr r1,.L117+28
 1799 05f0 1A1C     	 mov r2,r3
 1800 05f2 231C     	 mov r3,r4
 1801 05f4 FFF7FEFF 	 bl __aeabi_ddiv
 1802 05f8 031C     	 mov r3,r0
 1803 05fa 0C1C     	 mov r4,r1
 1804 05fc 181C     	 mov r0,r3
 1805 05fe 211C     	 mov r1,r4
 1806 0600 FFF7FEFF 	 bl atan
 1807 0604 031C     	 mov r3,r0
 1808 0606 0C1C     	 mov r4,r1
 1809 0608 181C     	 mov r0,r3
 1810 060a 211C     	 mov r1,r4
 1811 060c 324A     	 ldr r2,.L117+32
 1812 060e 434B     	 ldr r3,.L117+100
 1813 0610 FFF7FEFF 	 bl __aeabi_dmul
 1814 0614 031C     	 mov r3,r0
 1815 0616 0C1C     	 mov r4,r1
 1816 0618 181C     	 mov r0,r3
 1817 061a 211C     	 mov r1,r4
 1818 061c FFF7FEFF 	 bl __aeabi_d2f
 1819 0620 021C     	 add r2,r0,#0
 1820 0622 364B     	 ldr r3,.L117+68
 1821 0624 1A60     	 str r2,[r3]
 254:../main.c     **** 				angle_rr = - RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn - HALF_TRACK_WIDTH)); // in wheel
 1822              	 .loc 6 254 0
 1823 0626 244B     	 ldr r3,.L117
 1824 0628 1B68     	 ldr r3,[r3]
 1825 062a 181C     	 add r0,r3,#0
 1826 062c FFF7FEFF 	 bl __aeabi_f2d
 1827 0630 031C     	 mov r3,r0
 1828 0632 0C1C     	 mov r4,r1
 1829 0634 181C     	 mov r0,r3
 1830 0636 211C     	 mov r1,r4
 1831 0638 234A     	 ldr r2,.L117+16
 1832 063a 244B     	 ldr r3,.L117+20
 1833 063c FFF7FEFF 	 bl __aeabi_dsub
 1834 0640 031C     	 mov r3,r0
 1835 0642 0C1C     	 mov r4,r1
 1836 0644 2248     	 ldr r0,.L117+24
 1837 0646 2349     	 ldr r1,.L117+28
 1838 0648 1A1C     	 mov r2,r3
 1839 064a 231C     	 mov r3,r4
 1840 064c FFF7FEFF 	 bl __aeabi_ddiv
 1841 0650 031C     	 mov r3,r0
 1842 0652 0C1C     	 mov r4,r1
 1843 0654 181C     	 mov r0,r3
 1844 0656 211C     	 mov r1,r4
 1845 0658 FFF7FEFF 	 bl atan
 1846 065c 031C     	 mov r3,r0
 1847 065e 0C1C     	 mov r4,r1
 1848 0660 181C     	 mov r0,r3
 1849 0662 211C     	 mov r1,r4
 1850 0664 1C4A     	 ldr r2,.L117+32
 1851 0666 2D4B     	 ldr r3,.L117+100
 1852 0668 FFF7FEFF 	 bl __aeabi_dmul
 1853 066c 031C     	 mov r3,r0
 1854 066e 0C1C     	 mov r4,r1
 1855 0670 181C     	 mov r0,r3
 1856 0672 211C     	 mov r1,r4
 1857 0674 FFF7FEFF 	 bl __aeabi_d2f
 1858 0678 021C     	 add r2,r0,#0
 1859 067a 214B     	 ldr r3,.L117+72
 1860 067c 1A60     	 str r2,[r3]
 255:../main.c     **** 
 256:../main.c     **** 
 257:../main.c     **** 				speed_fl = Driving_speed_cal * Speed_ratio;
 1861              	 .loc 6 257 0
 1862 067e 1A4B     	 ldr r3,.L117+48
 1863 0680 1B68     	 ldr r3,[r3]
 1864 0682 181C     	 add r0,r3,#0
 1865 0684 B968     	 ldr r1,[r7,#8]
 1866 0686 FFF7FEFF 	 bl __aeabi_fmul
 1867 068a 031C     	 add r3,r0,#0
 1868 068c 1A1C     	 add r2,r3,#0
 1869 068e 174B     	 ldr r3,.L117+52
 1870 0690 1A60     	 str r2,[r3]
 258:../main.c     **** 				speed_fr = Driving_speed_cal / Speed_ratio;
 1871              	 .loc 6 258 0
 1872 0692 154B     	 ldr r3,.L117+48
 1873 0694 1B68     	 ldr r3,[r3]
 1874 0696 B868     	 ldr r0,[r7,#8]
 1875 0698 191C     	 add r1,r3,#0
 1876 069a FFF7FEFF 	 bl __aeabi_fdiv
 1877 069e 031C     	 add r3,r0,#0
 1878 06a0 1A1C     	 add r2,r3,#0
 1879 06a2 134B     	 ldr r3,.L117+56
 1880 06a4 1A60     	 str r2,[r3]
 259:../main.c     **** 				//speed_rl = Driving_speed_cal * Speed_ratio;
 260:../main.c     **** 				//speed_rr = Driving_speed_cal / Speed_ratio;
 261:../main.c     **** 
 262:../main.c     **** 				speed_rl = speed_fl;
 1881              	 .loc 6 262 0
 1882 06a6 114B     	 ldr r3,.L117+52
 1883 06a8 1A68     	 ldr r2,[r3]
 1884 06aa 124B     	 ldr r3,.L117+60
 1885 06ac 1A60     	 str r2,[r3]
 263:../main.c     **** 				speed_rr = speed_fr;
 1886              	 .loc 6 263 0
 1887 06ae 104B     	 ldr r3,.L117+56
 1888 06b0 1A68     	 ldr r2,[r3]
 1889 06b2 114B     	 ldr r3,.L117+64
 1890 06b4 1A60     	 str r2,[r3]
 1891 06b6 D2E0     	 b .L65
 1892              	.L118:
 1893              	 .align 2
 1894              	.L117:
 1895 06b8 00000000 	 .word R_Turn
 1896 06bc 9A999999 	 .word -1717986918
 1897 06c0 9999A9BF 	 .word -1079404135
 1898 06c4 0000A0C1 	 .word -1046478848
 1899 06c8 77BE9F1A 	 .word 446676599
 1900 06cc 2FDDC43F 	 .word 1069866287
 1901 06d0 79E92631 	 .word 824633721
 1902 06d4 08ACDC3F 	 .word 1071426568
 1903 06d8 D9CEF753 	 .word 1408749273
 1904 06dc E3A54C40 	 .word 1078765027
 1905 06e0 00000000 	 .word angle_fl
 1906 06e4 00000000 	 .word angle_fr
 1907 06e8 00000000 	 .word Speed_ratio
 1908 06ec 00000000 	 .word speed_fl
 1909 06f0 00000000 	 .word speed_fr
 1910 06f4 00000000 	 .word speed_rl
 1911 06f8 00000000 	 .word speed_rr
 1912 06fc 00000000 	 .word angle_rl
 1913 0700 00000000 	 .word angle_rr
 1914 0704 00004842 	 .word 1112014848
 1915 0708 000048C2 	 .word -1035468800
 1916 070c 182D4454 	 .word 1413754136
 1917 0710 FB210940 	 .word 1074340347
 1918 0714 9999A93F 	 .word 1068079513
 1919 0718 0000A041 	 .word 1101004800
 1920 071c E3A54CC0 	 .word -1068718621
 1921              	.L62:
 264:../main.c     **** 			}
 265:../main.c     **** 			else if((- R_TRUN_MIN > R_Turn) && (R_Turn > -R_TRUN_MAX)){
 1922              	 .loc 6 265 0
 1923 0720 DF4B     	 ldr r3,.L119
 1924 0722 1B68     	 ldr r3,[r3]
 1925 0724 181C     	 add r0,r3,#0
 1926 0726 FFF7FEFF 	 bl __aeabi_f2d
 1927 072a 031C     	 mov r3,r0
 1928 072c 0C1C     	 mov r4,r1
 1929 072e 181C     	 mov r0,r3
 1930 0730 211C     	 mov r1,r4
 1931 0732 DC4A     	 ldr r2,.L119+4
 1932 0734 DC4B     	 ldr r3,.L119+8
 1933 0736 FFF7FEFF 	 bl __aeabi_dcmplt
 1934 073a 031E     	 sub r3,r0,#0
 1935 073c 00D1     	 bne .LCB1279
 1936 073e 7CE0     	 b .L66
 1937              	.LCB1279:
 1938              	 .loc 6 265 0 is_stmt 0 discriminator 1
 1939 0740 D74B     	 ldr r3,.L119
 1940 0742 1B68     	 ldr r3,[r3]
 1941 0744 181C     	 add r0,r3,#0
 1942 0746 D949     	 ldr r1,.L119+12
 1943 0748 FFF7FEFF 	 bl __aeabi_fcmpgt
 1944 074c 031E     	 sub r3,r0,#0
 1945 074e 74D0     	 beq .L66
 266:../main.c     **** 				angle_rl = - RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn + HALF_TRACK_WIDTH)); // in wheel
 1946              	 .loc 6 266 0 is_stmt 1
 1947 0750 D34B     	 ldr r3,.L119
 1948 0752 1B68     	 ldr r3,[r3]
 1949 0754 181C     	 add r0,r3,#0
 1950 0756 FFF7FEFF 	 bl __aeabi_f2d
 1951 075a 031C     	 mov r3,r0
 1952 075c 0C1C     	 mov r4,r1
 1953 075e 181C     	 mov r0,r3
 1954 0760 211C     	 mov r1,r4
 1955 0762 D34A     	 ldr r2,.L119+16
 1956 0764 D34B     	 ldr r3,.L119+20
 1957 0766 FFF7FEFF 	 bl __aeabi_dadd
 1958 076a 031C     	 mov r3,r0
 1959 076c 0C1C     	 mov r4,r1
 1960 076e D248     	 ldr r0,.L119+24
 1961 0770 D249     	 ldr r1,.L119+28
 1962 0772 1A1C     	 mov r2,r3
 1963 0774 231C     	 mov r3,r4
 1964 0776 FFF7FEFF 	 bl __aeabi_ddiv
 1965 077a 031C     	 mov r3,r0
 1966 077c 0C1C     	 mov r4,r1
 1967 077e 181C     	 mov r0,r3
 1968 0780 211C     	 mov r1,r4
 1969 0782 FFF7FEFF 	 bl atan
 1970 0786 031C     	 mov r3,r0
 1971 0788 0C1C     	 mov r4,r1
 1972 078a 181C     	 mov r0,r3
 1973 078c 211C     	 mov r1,r4
 1974 078e CC4A     	 ldr r2,.L119+32
 1975 0790 CC4B     	 ldr r3,.L119+36
 1976 0792 FFF7FEFF 	 bl __aeabi_dmul
 1977 0796 031C     	 mov r3,r0
 1978 0798 0C1C     	 mov r4,r1
 1979 079a 181C     	 mov r0,r3
 1980 079c 211C     	 mov r1,r4
 1981 079e FFF7FEFF 	 bl __aeabi_d2f
 1982 07a2 021C     	 add r2,r0,#0
 1983 07a4 C84B     	 ldr r3,.L119+40
 1984 07a6 1A60     	 str r2,[r3]
 267:../main.c     **** 				angle_rr = - RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn - HALF_TRACK_WIDTH)); // out wheel
 1985              	 .loc 6 267 0
 1986 07a8 BD4B     	 ldr r3,.L119
 1987 07aa 1B68     	 ldr r3,[r3]
 1988 07ac 181C     	 add r0,r3,#0
 1989 07ae FFF7FEFF 	 bl __aeabi_f2d
 1990 07b2 031C     	 mov r3,r0
 1991 07b4 0C1C     	 mov r4,r1
 1992 07b6 181C     	 mov r0,r3
 1993 07b8 211C     	 mov r1,r4
 1994 07ba BD4A     	 ldr r2,.L119+16
 1995 07bc BD4B     	 ldr r3,.L119+20
 1996 07be FFF7FEFF 	 bl __aeabi_dsub
 1997 07c2 031C     	 mov r3,r0
 1998 07c4 0C1C     	 mov r4,r1
 1999 07c6 BC48     	 ldr r0,.L119+24
 2000 07c8 BC49     	 ldr r1,.L119+28
 2001 07ca 1A1C     	 mov r2,r3
 2002 07cc 231C     	 mov r3,r4
 2003 07ce FFF7FEFF 	 bl __aeabi_ddiv
 2004 07d2 031C     	 mov r3,r0
 2005 07d4 0C1C     	 mov r4,r1
 2006 07d6 181C     	 mov r0,r3
 2007 07d8 211C     	 mov r1,r4
 2008 07da FFF7FEFF 	 bl atan
 2009 07de 031C     	 mov r3,r0
 2010 07e0 0C1C     	 mov r4,r1
 2011 07e2 181C     	 mov r0,r3
 2012 07e4 211C     	 mov r1,r4
 2013 07e6 B64A     	 ldr r2,.L119+32
 2014 07e8 B64B     	 ldr r3,.L119+36
 2015 07ea FFF7FEFF 	 bl __aeabi_dmul
 2016 07ee 031C     	 mov r3,r0
 2017 07f0 0C1C     	 mov r4,r1
 2018 07f2 181C     	 mov r0,r3
 2019 07f4 211C     	 mov r1,r4
 2020 07f6 FFF7FEFF 	 bl __aeabi_d2f
 2021 07fa 021C     	 add r2,r0,#0
 2022 07fc B34B     	 ldr r3,.L119+44
 2023 07fe 1A60     	 str r2,[r3]
 268:../main.c     **** 
 269:../main.c     **** 				speed_fl = Driving_speed_cal / Speed_ratio;
 2024              	 .loc 6 269 0
 2025 0800 B34B     	 ldr r3,.L119+48
 2026 0802 1B68     	 ldr r3,[r3]
 2027 0804 B868     	 ldr r0,[r7,#8]
 2028 0806 191C     	 add r1,r3,#0
 2029 0808 FFF7FEFF 	 bl __aeabi_fdiv
 2030 080c 031C     	 add r3,r0,#0
 2031 080e 1A1C     	 add r2,r3,#0
 2032 0810 B04B     	 ldr r3,.L119+52
 2033 0812 1A60     	 str r2,[r3]
 270:../main.c     **** 				speed_fr = Driving_speed_cal * Speed_ratio;
 2034              	 .loc 6 270 0
 2035 0814 AE4B     	 ldr r3,.L119+48
 2036 0816 1B68     	 ldr r3,[r3]
 2037 0818 181C     	 add r0,r3,#0
 2038 081a B968     	 ldr r1,[r7,#8]
 2039 081c FFF7FEFF 	 bl __aeabi_fmul
 2040 0820 031C     	 add r3,r0,#0
 2041 0822 1A1C     	 add r2,r3,#0
 2042 0824 AC4B     	 ldr r3,.L119+56
 2043 0826 1A60     	 str r2,[r3]
 271:../main.c     **** 				//speed_rl = Driving_speed_cal / Speed_ratio;
 272:../main.c     **** 				//speed_rr = Driving_speed_cal * Speed_ratio;
 273:../main.c     **** 
 274:../main.c     **** 				speed_rl = speed_fl;
 2044              	 .loc 6 274 0
 2045 0828 AA4B     	 ldr r3,.L119+52
 2046 082a 1A68     	 ldr r2,[r3]
 2047 082c AB4B     	 ldr r3,.L119+60
 2048 082e 1A60     	 str r2,[r3]
 275:../main.c     **** 				speed_rr = speed_fr;
 2049              	 .loc 6 275 0
 2050 0830 A94B     	 ldr r3,.L119+56
 2051 0832 1A68     	 ldr r2,[r3]
 2052 0834 AA4B     	 ldr r3,.L119+64
 2053 0836 1A60     	 str r2,[r3]
 2054 0838 11E0     	 b .L65
 2055              	.L66:
 276:../main.c     **** 			}
 277:../main.c     **** 			else{
 278:../main.c     **** 				angle_rl = 0;
 2056              	 .loc 6 278 0
 2057 083a A34B     	 ldr r3,.L119+40
 2058 083c 0022     	 mov r2,#0
 2059 083e 1A60     	 str r2,[r3]
 279:../main.c     **** 				angle_rr = 0;
 2060              	 .loc 6 279 0
 2061 0840 A24B     	 ldr r3,.L119+44
 2062 0842 0022     	 mov r2,#0
 2063 0844 1A60     	 str r2,[r3]
 280:../main.c     **** 
 281:../main.c     **** 				speed_fl = Driving_speed_cal;
 2064              	 .loc 6 281 0
 2065 0846 A34B     	 ldr r3,.L119+52
 2066 0848 BA68     	 ldr r2,[r7,#8]
 2067 084a 1A60     	 str r2,[r3]
 282:../main.c     **** 				speed_fr = Driving_speed_cal;
 2068              	 .loc 6 282 0
 2069 084c A24B     	 ldr r3,.L119+56
 2070 084e BA68     	 ldr r2,[r7,#8]
 2071 0850 1A60     	 str r2,[r3]
 283:../main.c     **** 				speed_rl = Driving_speed_cal;
 2072              	 .loc 6 283 0
 2073 0852 A24B     	 ldr r3,.L119+60
 2074 0854 BA68     	 ldr r2,[r7,#8]
 2075 0856 1A60     	 str r2,[r3]
 284:../main.c     **** 				speed_rr = Driving_speed_cal;
 2076              	 .loc 6 284 0
 2077 0858 A14B     	 ldr r3,.L119+64
 2078 085a BA68     	 ldr r2,[r7,#8]
 2079 085c 1A60     	 str r2,[r3]
 2080              	.L65:
 285:../main.c     **** 			}
 286:../main.c     **** 
 287:../main.c     **** 			//rear axle
 288:../main.c     **** 			angle_fl = 0;
 2081              	 .loc 6 288 0
 2082 085e A14B     	 ldr r3,.L119+68
 2083 0860 0022     	 mov r2,#0
 2084 0862 1A60     	 str r2,[r3]
 289:../main.c     **** 			angle_fr = 0;
 2085              	 .loc 6 289 0
 2086 0864 A04B     	 ldr r3,.L119+72
 2087 0866 0022     	 mov r2,#0
 2088 0868 1A60     	 str r2,[r3]
 290:../main.c     **** 			break;
 2089              	 .loc 6 290 0
 2090 086a 93E2     	 b .L57
 2091              	.L43:
 291:../main.c     **** 
 292:../main.c     **** 		case ALL_WHEEL: // 4 wheel #############################################################
 293:../main.c     **** 			// steering limits
 294:../main.c     **** 			if(Steering_direction_cal > 30) Steering_direction_cal = 30;
 2092              	 .loc 6 294 0
 2093 086c F868     	 ldr r0,[r7,#12]
 2094 086e 9F49     	 ldr r1,.L119+76
 2095 0870 FFF7FEFF 	 bl __aeabi_fcmpgt
 2096 0874 031E     	 sub r3,r0,#0
 2097 0876 01D0     	 beq .L69
 2098              	 .loc 6 294 0 is_stmt 0 discriminator 1
 2099 0878 9C4B     	 ldr r3,.L119+76
 2100 087a FB60     	 str r3,[r7,#12]
 2101              	.L69:
 295:../main.c     **** 			if(Steering_direction_cal < -30) Steering_direction_cal = -30;
 2102              	 .loc 6 295 0 is_stmt 1
 2103 087c F868     	 ldr r0,[r7,#12]
 2104 087e 9C49     	 ldr r1,.L119+80
 2105 0880 FFF7FEFF 	 bl __aeabi_fcmplt
 2106 0884 031E     	 sub r3,r0,#0
 2107 0886 01D0     	 beq .L71
 2108              	 .loc 6 295 0 is_stmt 0 discriminator 1
 2109 0888 994B     	 ldr r3,.L119+80
 2110 088a FB60     	 str r3,[r7,#12]
 2111              	.L71:
 296:../main.c     **** 
 297:../main.c     **** 			// pre calc
 298:../main.c     **** 			R_Turn = HALF_WHEEL_BASE / tan(Steering_direction_cal / RAD_TO_DEG); // to truni graduis convers
 2112              	 .loc 6 298 0 is_stmt 1
 2113 088c F868     	 ldr r0,[r7,#12]
 2114 088e FFF7FEFF 	 bl __aeabi_f2d
 2115 0892 031C     	 mov r3,r0
 2116 0894 0C1C     	 mov r4,r1
 2117 0896 181C     	 mov r0,r3
 2118 0898 211C     	 mov r1,r4
 2119 089a 894A     	 ldr r2,.L119+32
 2120 089c 954B     	 ldr r3,.L119+84
 2121 089e FFF7FEFF 	 bl __aeabi_ddiv
 2122 08a2 031C     	 mov r3,r0
 2123 08a4 0C1C     	 mov r4,r1
 2124 08a6 181C     	 mov r0,r3
 2125 08a8 211C     	 mov r1,r4
 2126 08aa FFF7FEFF 	 bl tan
 2127 08ae 031C     	 mov r3,r0
 2128 08b0 0C1C     	 mov r4,r1
 2129 08b2 9148     	 ldr r0,.L119+88
 2130 08b4 9149     	 ldr r1,.L119+92
 2131 08b6 1A1C     	 mov r2,r3
 2132 08b8 231C     	 mov r3,r4
 2133 08ba FFF7FEFF 	 bl __aeabi_ddiv
 2134 08be 031C     	 mov r3,r0
 2135 08c0 0C1C     	 mov r4,r1
 2136 08c2 181C     	 mov r0,r3
 2137 08c4 211C     	 mov r1,r4
 2138 08c6 FFF7FEFF 	 bl __aeabi_d2f
 2139 08ca 021C     	 add r2,r0,#0
 2140 08cc 744B     	 ldr r3,.L119
 2141 08ce 1A60     	 str r2,[r3]
 299:../main.c     **** 			Speed_ratio = (2 * (copysign(R_Turn,1) + HALF_TRACK_WIDTH) * M_PI) / (2 * copysign(R_Turn,1) * M
 2142              	 .loc 6 299 0
 2143 08d0 734B     	 ldr r3,.L119
 2144 08d2 1B68     	 ldr r3,[r3]
 2145 08d4 5B00     	 lsl r3,r3,#1
 2146 08d6 5B08     	 lsr r3,r3,#1
 2147 08d8 181C     	 add r0,r3,#0
 2148 08da FFF7FEFF 	 bl __aeabi_f2d
 2149 08de 031C     	 mov r3,r0
 2150 08e0 0C1C     	 mov r4,r1
 2151 08e2 181C     	 mov r0,r3
 2152 08e4 211C     	 mov r1,r4
 2153 08e6 724A     	 ldr r2,.L119+16
 2154 08e8 724B     	 ldr r3,.L119+20
 2155 08ea FFF7FEFF 	 bl __aeabi_dadd
 2156 08ee 031C     	 mov r3,r0
 2157 08f0 0C1C     	 mov r4,r1
 2158 08f2 181C     	 mov r0,r3
 2159 08f4 211C     	 mov r1,r4
 2160 08f6 1A1C     	 mov r2,r3
 2161 08f8 231C     	 mov r3,r4
 2162 08fa FFF7FEFF 	 bl __aeabi_dadd
 2163 08fe 031C     	 mov r3,r0
 2164 0900 0C1C     	 mov r4,r1
 2165 0902 181C     	 mov r0,r3
 2166 0904 211C     	 mov r1,r4
 2167 0906 7E4A     	 ldr r2,.L119+96
 2168 0908 7E4B     	 ldr r3,.L119+100
 2169 090a FFF7FEFF 	 bl __aeabi_dmul
 2170 090e 031C     	 mov r3,r0
 2171 0910 0C1C     	 mov r4,r1
 2172 0912 1D1C     	 mov r5,r3
 2173 0914 261C     	 mov r6,r4
 2174 0916 624B     	 ldr r3,.L119
 2175 0918 1B68     	 ldr r3,[r3]
 2176 091a 5B00     	 lsl r3,r3,#1
 2177 091c 5B08     	 lsr r3,r3,#1
 2178 091e 181C     	 add r0,r3,#0
 2179 0920 FFF7FEFF 	 bl __aeabi_f2d
 2180 0924 031C     	 mov r3,r0
 2181 0926 0C1C     	 mov r4,r1
 2182 0928 181C     	 mov r0,r3
 2183 092a 211C     	 mov r1,r4
 2184 092c 1A1C     	 mov r2,r3
 2185 092e 231C     	 mov r3,r4
 2186 0930 FFF7FEFF 	 bl __aeabi_dadd
 2187 0934 031C     	 mov r3,r0
 2188 0936 0C1C     	 mov r4,r1
 2189 0938 181C     	 mov r0,r3
 2190 093a 211C     	 mov r1,r4
 2191 093c 704A     	 ldr r2,.L119+96
 2192 093e 714B     	 ldr r3,.L119+100
 2193 0940 FFF7FEFF 	 bl __aeabi_dmul
 2194 0944 031C     	 mov r3,r0
 2195 0946 0C1C     	 mov r4,r1
 2196 0948 281C     	 mov r0,r5
 2197 094a 311C     	 mov r1,r6
 2198 094c 1A1C     	 mov r2,r3
 2199 094e 231C     	 mov r3,r4
 2200 0950 FFF7FEFF 	 bl __aeabi_ddiv
 2201 0954 031C     	 mov r3,r0
 2202 0956 0C1C     	 mov r4,r1
 2203 0958 181C     	 mov r0,r3
 2204 095a 211C     	 mov r1,r4
 2205 095c FFF7FEFF 	 bl __aeabi_d2f
 2206 0960 021C     	 add r2,r0,#0
 2207 0962 5B4B     	 ldr r3,.L119+48
 2208 0964 1A60     	 str r2,[r3]
 300:../main.c     **** 
 301:../main.c     **** 			if((R_TRUN_MIN < R_Turn) && (R_Turn < R_TRUN_MAX)){ // trun right positive R
 2209              	 .loc 6 301 0
 2210 0966 4E4B     	 ldr r3,.L119
 2211 0968 1B68     	 ldr r3,[r3]
 2212 096a 181C     	 add r0,r3,#0
 2213 096c FFF7FEFF 	 bl __aeabi_f2d
 2214 0970 031C     	 mov r3,r0
 2215 0972 0C1C     	 mov r4,r1
 2216 0974 181C     	 mov r0,r3
 2217 0976 211C     	 mov r1,r4
 2218 0978 4A4A     	 ldr r2,.L119+4
 2219 097a 634B     	 ldr r3,.L119+104
 2220 097c FFF7FEFF 	 bl __aeabi_dcmpgt
 2221 0980 031E     	 sub r3,r0,#0
 2222 0982 00D1     	 bne .LCB1552
 2223 0984 C4E0     	 b .L73
 2224              	.LCB1552:
 2225              	 .loc 6 301 0 is_stmt 0 discriminator 1
 2226 0986 464B     	 ldr r3,.L119
 2227 0988 1B68     	 ldr r3,[r3]
 2228 098a 181C     	 add r0,r3,#0
 2229 098c 5F49     	 ldr r1,.L119+108
 2230 098e FFF7FEFF 	 bl __aeabi_fcmplt
 2231 0992 031E     	 sub r3,r0,#0
 2232 0994 00D1     	 bne .LCB1560
 2233 0996 BBE0     	 b .L73
 2234              	.LCB1560:
 302:../main.c     **** 				angle_fl = RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn + HALF_TRACK_WIDTH)); // out wheel
 2235              	 .loc 6 302 0 is_stmt 1
 2236 0998 414B     	 ldr r3,.L119
 2237 099a 1B68     	 ldr r3,[r3]
 2238 099c 181C     	 add r0,r3,#0
 2239 099e FFF7FEFF 	 bl __aeabi_f2d
 2240 09a2 031C     	 mov r3,r0
 2241 09a4 0C1C     	 mov r4,r1
 2242 09a6 181C     	 mov r0,r3
 2243 09a8 211C     	 mov r1,r4
 2244 09aa 414A     	 ldr r2,.L119+16
 2245 09ac 414B     	 ldr r3,.L119+20
 2246 09ae FFF7FEFF 	 bl __aeabi_dadd
 2247 09b2 031C     	 mov r3,r0
 2248 09b4 0C1C     	 mov r4,r1
 2249 09b6 4048     	 ldr r0,.L119+24
 2250 09b8 4049     	 ldr r1,.L119+28
 2251 09ba 1A1C     	 mov r2,r3
 2252 09bc 231C     	 mov r3,r4
 2253 09be FFF7FEFF 	 bl __aeabi_ddiv
 2254 09c2 031C     	 mov r3,r0
 2255 09c4 0C1C     	 mov r4,r1
 2256 09c6 181C     	 mov r0,r3
 2257 09c8 211C     	 mov r1,r4
 2258 09ca FFF7FEFF 	 bl atan
 2259 09ce 031C     	 mov r3,r0
 2260 09d0 0C1C     	 mov r4,r1
 2261 09d2 181C     	 mov r0,r3
 2262 09d4 211C     	 mov r1,r4
 2263 09d6 3A4A     	 ldr r2,.L119+32
 2264 09d8 464B     	 ldr r3,.L119+84
 2265 09da FFF7FEFF 	 bl __aeabi_dmul
 2266 09de 031C     	 mov r3,r0
 2267 09e0 0C1C     	 mov r4,r1
 2268 09e2 181C     	 mov r0,r3
 2269 09e4 211C     	 mov r1,r4
 2270 09e6 FFF7FEFF 	 bl __aeabi_d2f
 2271 09ea 021C     	 add r2,r0,#0
 2272 09ec 3D4B     	 ldr r3,.L119+68
 2273 09ee 1A60     	 str r2,[r3]
 303:../main.c     **** 				angle_fr = RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn - HALF_TRACK_WIDTH)); // in wheel
 2274              	 .loc 6 303 0
 2275 09f0 2B4B     	 ldr r3,.L119
 2276 09f2 1B68     	 ldr r3,[r3]
 2277 09f4 181C     	 add r0,r3,#0
 2278 09f6 FFF7FEFF 	 bl __aeabi_f2d
 2279 09fa 031C     	 mov r3,r0
 2280 09fc 0C1C     	 mov r4,r1
 2281 09fe 181C     	 mov r0,r3
 2282 0a00 211C     	 mov r1,r4
 2283 0a02 2B4A     	 ldr r2,.L119+16
 2284 0a04 2B4B     	 ldr r3,.L119+20
 2285 0a06 FFF7FEFF 	 bl __aeabi_dsub
 2286 0a0a 031C     	 mov r3,r0
 2287 0a0c 0C1C     	 mov r4,r1
 2288 0a0e 2A48     	 ldr r0,.L119+24
 2289 0a10 2A49     	 ldr r1,.L119+28
 2290 0a12 1A1C     	 mov r2,r3
 2291 0a14 231C     	 mov r3,r4
 2292 0a16 FFF7FEFF 	 bl __aeabi_ddiv
 2293 0a1a 031C     	 mov r3,r0
 2294 0a1c 0C1C     	 mov r4,r1
 2295 0a1e 181C     	 mov r0,r3
 2296 0a20 211C     	 mov r1,r4
 2297 0a22 FFF7FEFF 	 bl atan
 2298 0a26 031C     	 mov r3,r0
 2299 0a28 0C1C     	 mov r4,r1
 2300 0a2a 181C     	 mov r0,r3
 2301 0a2c 211C     	 mov r1,r4
 2302 0a2e 244A     	 ldr r2,.L119+32
 2303 0a30 304B     	 ldr r3,.L119+84
 2304 0a32 FFF7FEFF 	 bl __aeabi_dmul
 2305 0a36 031C     	 mov r3,r0
 2306 0a38 0C1C     	 mov r4,r1
 2307 0a3a 181C     	 mov r0,r3
 2308 0a3c 211C     	 mov r1,r4
 2309 0a3e FFF7FEFF 	 bl __aeabi_d2f
 2310 0a42 021C     	 add r2,r0,#0
 2311 0a44 284B     	 ldr r3,.L119+72
 2312 0a46 1A60     	 str r2,[r3]
 304:../main.c     **** 				//angle_rl = - RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn + HALF_TRACK_WIDTH)); // out wheel
 305:../main.c     **** 				//angle_rr = - RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn - HALF_TRACK_WIDTH)); // in wheel
 306:../main.c     **** 
 307:../main.c     **** 				angle_rl = -angle_fl;
 2313              	 .loc 6 307 0
 2314 0a48 264B     	 ldr r3,.L119+68
 2315 0a4a 1B68     	 ldr r3,[r3]
 2316 0a4c 8022     	 mov r2,#128
 2317 0a4e 1206     	 lsl r2,r2,#24
 2318 0a50 5A40     	 eor r2,r3
 2319 0a52 1D4B     	 ldr r3,.L119+40
 2320 0a54 1A60     	 str r2,[r3]
 308:../main.c     **** 				angle_rr = -angle_fr;
 2321              	 .loc 6 308 0
 2322 0a56 244B     	 ldr r3,.L119+72
 2323 0a58 1B68     	 ldr r3,[r3]
 2324 0a5a 8022     	 mov r2,#128
 2325 0a5c 1206     	 lsl r2,r2,#24
 2326 0a5e 5A40     	 eor r2,r3
 2327 0a60 1A4B     	 ldr r3,.L119+44
 2328 0a62 1A60     	 str r2,[r3]
 309:../main.c     **** 
 310:../main.c     **** 				speed_fl = Driving_speed_cal * Speed_ratio;
 2329              	 .loc 6 310 0
 2330 0a64 1A4B     	 ldr r3,.L119+48
 2331 0a66 1B68     	 ldr r3,[r3]
 2332 0a68 181C     	 add r0,r3,#0
 2333 0a6a B968     	 ldr r1,[r7,#8]
 2334 0a6c FFF7FEFF 	 bl __aeabi_fmul
 2335 0a70 031C     	 add r3,r0,#0
 2336 0a72 1A1C     	 add r2,r3,#0
 2337 0a74 174B     	 ldr r3,.L119+52
 2338 0a76 1A60     	 str r2,[r3]
 311:../main.c     **** 				speed_fr = Driving_speed_cal / Speed_ratio;
 2339              	 .loc 6 311 0
 2340 0a78 154B     	 ldr r3,.L119+48
 2341 0a7a 1B68     	 ldr r3,[r3]
 2342 0a7c B868     	 ldr r0,[r7,#8]
 2343 0a7e 191C     	 add r1,r3,#0
 2344 0a80 FFF7FEFF 	 bl __aeabi_fdiv
 2345 0a84 031C     	 add r3,r0,#0
 2346 0a86 1A1C     	 add r2,r3,#0
 2347 0a88 134B     	 ldr r3,.L119+56
 2348 0a8a 1A60     	 str r2,[r3]
 312:../main.c     **** 				//speed_rl = Driving_speed_cal * Speed_ratio;
 313:../main.c     **** 				//speed_rr = Driving_speed_cal / Speed_ratio;
 314:../main.c     **** 
 315:../main.c     **** 				speed_rl = speed_fl;
 2349              	 .loc 6 315 0
 2350 0a8c 114B     	 ldr r3,.L119+52
 2351 0a8e 1A68     	 ldr r2,[r3]
 2352 0a90 124B     	 ldr r3,.L119+60
 2353 0a92 1A60     	 str r2,[r3]
 316:../main.c     **** 				speed_rr = speed_fr;
 2354              	 .loc 6 316 0
 2355 0a94 104B     	 ldr r3,.L119+56
 2356 0a96 1A68     	 ldr r2,[r3]
 2357 0a98 114B     	 ldr r3,.L119+64
 2358 0a9a 1A60     	 str r2,[r3]
 2359 0a9c EDE0     	 b .L76
 2360              	.L120:
 2361 0a9e C046     	 .align 2
 2362              	.L119:
 2363 0aa0 00000000 	 .word R_Turn
 2364 0aa4 9A999999 	 .word -1717986918
 2365 0aa8 9999A9BF 	 .word -1079404135
 2366 0aac 0000A0C1 	 .word -1046478848
 2367 0ab0 77BE9F1A 	 .word 446676599
 2368 0ab4 2FDDC43F 	 .word 1069866287
 2369 0ab8 79E92631 	 .word 824633721
 2370 0abc 08ACDC3F 	 .word 1071426568
 2371 0ac0 D9CEF753 	 .word 1408749273
 2372 0ac4 E3A54CC0 	 .word -1068718621
 2373 0ac8 00000000 	 .word angle_rl
 2374 0acc 00000000 	 .word angle_rr
 2375 0ad0 00000000 	 .word Speed_ratio
 2376 0ad4 00000000 	 .word speed_fl
 2377 0ad8 00000000 	 .word speed_fr
 2378 0adc 00000000 	 .word speed_rl
 2379 0ae0 00000000 	 .word speed_rr
 2380 0ae4 00000000 	 .word angle_fl
 2381 0ae8 00000000 	 .word angle_fr
 2382 0aec 0000F041 	 .word 1106247680
 2383 0af0 0000F0C1 	 .word -1041235968
 2384 0af4 E3A54C40 	 .word 1078765027
 2385 0af8 295C8FC2 	 .word -1030792151
 2386 0afc F528CC3F 	 .word 1070344437
 2387 0b00 182D4454 	 .word 1413754136
 2388 0b04 FB210940 	 .word 1074340347
 2389 0b08 9999A93F 	 .word 1068079513
 2390 0b0c 0000A041 	 .word 1101004800
 2391              	.L73:
 317:../main.c     **** 			}
 318:../main.c     **** 			else if((- R_TRUN_MIN > R_Turn) && (R_Turn > -R_TRUN_MAX)){ // trun left positive R
 2392              	 .loc 6 318 0
 2393 0b10 B24B     	 ldr r3,.L121
 2394 0b12 1B68     	 ldr r3,[r3]
 2395 0b14 181C     	 add r0,r3,#0
 2396 0b16 FFF7FEFF 	 bl __aeabi_f2d
 2397 0b1a 031C     	 mov r3,r0
 2398 0b1c 0C1C     	 mov r4,r1
 2399 0b1e 181C     	 mov r0,r3
 2400 0b20 211C     	 mov r1,r4
 2401 0b22 AF4A     	 ldr r2,.L121+4
 2402 0b24 AF4B     	 ldr r3,.L121+8
 2403 0b26 FFF7FEFF 	 bl __aeabi_dcmplt
 2404 0b2a 031E     	 sub r3,r0,#0
 2405 0b2c 00D1     	 bne .LCB1727
 2406 0b2e 8BE0     	 b .L77
 2407              	.LCB1727:
 2408              	 .loc 6 318 0 is_stmt 0 discriminator 1
 2409 0b30 AA4B     	 ldr r3,.L121
 2410 0b32 1B68     	 ldr r3,[r3]
 2411 0b34 181C     	 add r0,r3,#0
 2412 0b36 AC49     	 ldr r1,.L121+12
 2413 0b38 FFF7FEFF 	 bl __aeabi_fcmpgt
 2414 0b3c 031E     	 sub r3,r0,#0
 2415 0b3e 00D1     	 bne .LCB1735
 2416 0b40 82E0     	 b .L77
 2417              	.LCB1735:
 319:../main.c     **** 				angle_fl = RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn + HALF_TRACK_WIDTH)); // in wheel
 2418              	 .loc 6 319 0 is_stmt 1
 2419 0b42 A64B     	 ldr r3,.L121
 2420 0b44 1B68     	 ldr r3,[r3]
 2421 0b46 181C     	 add r0,r3,#0
 2422 0b48 FFF7FEFF 	 bl __aeabi_f2d
 2423 0b4c 031C     	 mov r3,r0
 2424 0b4e 0C1C     	 mov r4,r1
 2425 0b50 181C     	 mov r0,r3
 2426 0b52 211C     	 mov r1,r4
 2427 0b54 A54A     	 ldr r2,.L121+16
 2428 0b56 A64B     	 ldr r3,.L121+20
 2429 0b58 FFF7FEFF 	 bl __aeabi_dadd
 2430 0b5c 031C     	 mov r3,r0
 2431 0b5e 0C1C     	 mov r4,r1
 2432 0b60 A448     	 ldr r0,.L121+24
 2433 0b62 A549     	 ldr r1,.L121+28
 2434 0b64 1A1C     	 mov r2,r3
 2435 0b66 231C     	 mov r3,r4
 2436 0b68 FFF7FEFF 	 bl __aeabi_ddiv
 2437 0b6c 031C     	 mov r3,r0
 2438 0b6e 0C1C     	 mov r4,r1
 2439 0b70 181C     	 mov r0,r3
 2440 0b72 211C     	 mov r1,r4
 2441 0b74 FFF7FEFF 	 bl atan
 2442 0b78 031C     	 mov r3,r0
 2443 0b7a 0C1C     	 mov r4,r1
 2444 0b7c 181C     	 mov r0,r3
 2445 0b7e 211C     	 mov r1,r4
 2446 0b80 9E4A     	 ldr r2,.L121+32
 2447 0b82 9F4B     	 ldr r3,.L121+36
 2448 0b84 FFF7FEFF 	 bl __aeabi_dmul
 2449 0b88 031C     	 mov r3,r0
 2450 0b8a 0C1C     	 mov r4,r1
 2451 0b8c 181C     	 mov r0,r3
 2452 0b8e 211C     	 mov r1,r4
 2453 0b90 FFF7FEFF 	 bl __aeabi_d2f
 2454 0b94 021C     	 add r2,r0,#0
 2455 0b96 9B4B     	 ldr r3,.L121+40
 2456 0b98 1A60     	 str r2,[r3]
 320:../main.c     **** 				angle_fr = RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn - HALF_TRACK_WIDTH)); // out wheel
 2457              	 .loc 6 320 0
 2458 0b9a 904B     	 ldr r3,.L121
 2459 0b9c 1B68     	 ldr r3,[r3]
 2460 0b9e 181C     	 add r0,r3,#0
 2461 0ba0 FFF7FEFF 	 bl __aeabi_f2d
 2462 0ba4 031C     	 mov r3,r0
 2463 0ba6 0C1C     	 mov r4,r1
 2464 0ba8 181C     	 mov r0,r3
 2465 0baa 211C     	 mov r1,r4
 2466 0bac 8F4A     	 ldr r2,.L121+16
 2467 0bae 904B     	 ldr r3,.L121+20
 2468 0bb0 FFF7FEFF 	 bl __aeabi_dsub
 2469 0bb4 031C     	 mov r3,r0
 2470 0bb6 0C1C     	 mov r4,r1
 2471 0bb8 8E48     	 ldr r0,.L121+24
 2472 0bba 8F49     	 ldr r1,.L121+28
 2473 0bbc 1A1C     	 mov r2,r3
 2474 0bbe 231C     	 mov r3,r4
 2475 0bc0 FFF7FEFF 	 bl __aeabi_ddiv
 2476 0bc4 031C     	 mov r3,r0
 2477 0bc6 0C1C     	 mov r4,r1
 2478 0bc8 181C     	 mov r0,r3
 2479 0bca 211C     	 mov r1,r4
 2480 0bcc FFF7FEFF 	 bl atan
 2481 0bd0 031C     	 mov r3,r0
 2482 0bd2 0C1C     	 mov r4,r1
 2483 0bd4 181C     	 mov r0,r3
 2484 0bd6 211C     	 mov r1,r4
 2485 0bd8 884A     	 ldr r2,.L121+32
 2486 0bda 894B     	 ldr r3,.L121+36
 2487 0bdc FFF7FEFF 	 bl __aeabi_dmul
 2488 0be0 031C     	 mov r3,r0
 2489 0be2 0C1C     	 mov r4,r1
 2490 0be4 181C     	 mov r0,r3
 2491 0be6 211C     	 mov r1,r4
 2492 0be8 FFF7FEFF 	 bl __aeabi_d2f
 2493 0bec 021C     	 add r2,r0,#0
 2494 0bee 864B     	 ldr r3,.L121+44
 2495 0bf0 1A60     	 str r2,[r3]
 321:../main.c     **** 				//angle_rl = - RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn + HALF_TRACK_WIDTH)); // in wheel
 322:../main.c     **** 				//angle_rr = - RAD_TO_DEG * atan(WHEEL_BASE /(R_Turn - HALF_TRACK_WIDTH)); // in wheel
 323:../main.c     **** 
 324:../main.c     **** 				angle_rl = -angle_fl;
 2496              	 .loc 6 324 0
 2497 0bf2 844B     	 ldr r3,.L121+40
 2498 0bf4 1B68     	 ldr r3,[r3]
 2499 0bf6 8022     	 mov r2,#128
 2500 0bf8 1206     	 lsl r2,r2,#24
 2501 0bfa 5A40     	 eor r2,r3
 2502 0bfc 834B     	 ldr r3,.L121+48
 2503 0bfe 1A60     	 str r2,[r3]
 325:../main.c     **** 				angle_rr = -angle_fr;
 2504              	 .loc 6 325 0
 2505 0c00 814B     	 ldr r3,.L121+44
 2506 0c02 1B68     	 ldr r3,[r3]
 2507 0c04 8022     	 mov r2,#128
 2508 0c06 1206     	 lsl r2,r2,#24
 2509 0c08 5A40     	 eor r2,r3
 2510 0c0a 814B     	 ldr r3,.L121+52
 2511 0c0c 1A60     	 str r2,[r3]
 326:../main.c     **** 
 327:../main.c     **** 				speed_fl = Driving_speed_cal / Speed_ratio;
 2512              	 .loc 6 327 0
 2513 0c0e 814B     	 ldr r3,.L121+56
 2514 0c10 1B68     	 ldr r3,[r3]
 2515 0c12 B868     	 ldr r0,[r7,#8]
 2516 0c14 191C     	 add r1,r3,#0
 2517 0c16 FFF7FEFF 	 bl __aeabi_fdiv
 2518 0c1a 031C     	 add r3,r0,#0
 2519 0c1c 1A1C     	 add r2,r3,#0
 2520 0c1e 7E4B     	 ldr r3,.L121+60
 2521 0c20 1A60     	 str r2,[r3]
 328:../main.c     **** 				speed_fr = Driving_speed_cal * Speed_ratio;
 2522              	 .loc 6 328 0
 2523 0c22 7C4B     	 ldr r3,.L121+56
 2524 0c24 1B68     	 ldr r3,[r3]
 2525 0c26 181C     	 add r0,r3,#0
 2526 0c28 B968     	 ldr r1,[r7,#8]
 2527 0c2a FFF7FEFF 	 bl __aeabi_fmul
 2528 0c2e 031C     	 add r3,r0,#0
 2529 0c30 1A1C     	 add r2,r3,#0
 2530 0c32 7A4B     	 ldr r3,.L121+64
 2531 0c34 1A60     	 str r2,[r3]
 329:../main.c     **** 				//speed_rl = Driving_speed_cal / Speed_ratio;
 330:../main.c     **** 				//speed_rr = Driving_speed_cal * Speed_ratio;
 331:../main.c     **** 
 332:../main.c     **** 				speed_rl = speed_fl;
 2532              	 .loc 6 332 0
 2533 0c36 784B     	 ldr r3,.L121+60
 2534 0c38 1A68     	 ldr r2,[r3]
 2535 0c3a 794B     	 ldr r3,.L121+68
 2536 0c3c 1A60     	 str r2,[r3]
 333:../main.c     **** 				speed_rr = speed_fr;
 2537              	 .loc 6 333 0
 2538 0c3e 774B     	 ldr r3,.L121+64
 2539 0c40 1A68     	 ldr r2,[r3]
 2540 0c42 784B     	 ldr r3,.L121+72
 2541 0c44 1A60     	 str r2,[r3]
 2542 0c46 18E0     	 b .L76
 2543              	.L77:
 334:../main.c     **** 			}
 335:../main.c     **** 			else{// starigt driving
 336:../main.c     **** 				angle_fl = 0;
 2544              	 .loc 6 336 0
 2545 0c48 6E4B     	 ldr r3,.L121+40
 2546 0c4a 0022     	 mov r2,#0
 2547 0c4c 1A60     	 str r2,[r3]
 337:../main.c     **** 				angle_fr = 0;
 2548              	 .loc 6 337 0
 2549 0c4e 6E4B     	 ldr r3,.L121+44
 2550 0c50 0022     	 mov r2,#0
 2551 0c52 1A60     	 str r2,[r3]
 338:../main.c     **** 				angle_rl = 0;
 2552              	 .loc 6 338 0
 2553 0c54 6D4B     	 ldr r3,.L121+48
 2554 0c56 0022     	 mov r2,#0
 2555 0c58 1A60     	 str r2,[r3]
 339:../main.c     **** 				angle_rr = 0;
 2556              	 .loc 6 339 0
 2557 0c5a 6D4B     	 ldr r3,.L121+52
 2558 0c5c 0022     	 mov r2,#0
 2559 0c5e 1A60     	 str r2,[r3]
 340:../main.c     **** 
 341:../main.c     **** 				speed_fl = Driving_speed_cal;
 2560              	 .loc 6 341 0
 2561 0c60 6D4B     	 ldr r3,.L121+60
 2562 0c62 BA68     	 ldr r2,[r7,#8]
 2563 0c64 1A60     	 str r2,[r3]
 342:../main.c     **** 				speed_fr = Driving_speed_cal;
 2564              	 .loc 6 342 0
 2565 0c66 6D4B     	 ldr r3,.L121+64
 2566 0c68 BA68     	 ldr r2,[r7,#8]
 2567 0c6a 1A60     	 str r2,[r3]
 343:../main.c     **** 				speed_rl = Driving_speed_cal;
 2568              	 .loc 6 343 0
 2569 0c6c 6C4B     	 ldr r3,.L121+68
 2570 0c6e BA68     	 ldr r2,[r7,#8]
 2571 0c70 1A60     	 str r2,[r3]
 344:../main.c     **** 				speed_rr = Driving_speed_cal;
 2572              	 .loc 6 344 0
 2573 0c72 6C4B     	 ldr r3,.L121+72
 2574 0c74 BA68     	 ldr r2,[r7,#8]
 2575 0c76 1A60     	 str r2,[r3]
 345:../main.c     **** 			}
 346:../main.c     **** 			break;
 2576              	 .loc 6 346 0
 2577 0c78 8CE0     	 b .L57
 2578              	.L76:
 2579 0c7a 8BE0     	 b .L57
 2580              	.L44:
 347:../main.c     **** 
 348:../main.c     **** 		case CRAB:  //carb //#############################################################
 349:../main.c     **** 			Steering_direction_cal = Steering_direction_cal * 4; // mach data from remote
 2581              	 .loc 6 349 0
 2582 0c7c F868     	 ldr r0,[r7,#12]
 2583 0c7e 8121     	 mov r1,#129
 2584 0c80 C905     	 lsl r1,r1,#23
 2585 0c82 FFF7FEFF 	 bl __aeabi_fmul
 2586 0c86 031C     	 add r3,r0,#0
 2587 0c88 FB60     	 str r3,[r7,#12]
 350:../main.c     **** 			if(Steering_direction_cal > 190) Steering_direction_cal = 190;
 2588              	 .loc 6 350 0
 2589 0c8a F868     	 ldr r0,[r7,#12]
 2590 0c8c 6649     	 ldr r1,.L121+76
 2591 0c8e FFF7FEFF 	 bl __aeabi_fcmpgt
 2592 0c92 031E     	 sub r3,r0,#0
 2593 0c94 01D0     	 beq .L80
 2594              	 .loc 6 350 0 is_stmt 0 discriminator 1
 2595 0c96 644B     	 ldr r3,.L121+76
 2596 0c98 FB60     	 str r3,[r7,#12]
 2597              	.L80:
 351:../main.c     **** 			if(Steering_direction_cal < -190) Steering_direction_cal = -190;
 2598              	 .loc 6 351 0 is_stmt 1
 2599 0c9a F868     	 ldr r0,[r7,#12]
 2600 0c9c 6349     	 ldr r1,.L121+80
 2601 0c9e FFF7FEFF 	 bl __aeabi_fcmplt
 2602 0ca2 031E     	 sub r3,r0,#0
 2603 0ca4 01D0     	 beq .L82
 2604              	 .loc 6 351 0 is_stmt 0 discriminator 1
 2605 0ca6 614B     	 ldr r3,.L121+80
 2606 0ca8 FB60     	 str r3,[r7,#12]
 2607              	.L82:
 352:../main.c     **** 			// steering
 353:../main.c     **** 			angle_fl = Steering_direction_cal;
 2608              	 .loc 6 353 0 is_stmt 1
 2609 0caa 564B     	 ldr r3,.L121+40
 2610 0cac FA68     	 ldr r2,[r7,#12]
 2611 0cae 1A60     	 str r2,[r3]
 354:../main.c     **** 			angle_fr = Steering_direction_cal;
 2612              	 .loc 6 354 0
 2613 0cb0 554B     	 ldr r3,.L121+44
 2614 0cb2 FA68     	 ldr r2,[r7,#12]
 2615 0cb4 1A60     	 str r2,[r3]
 355:../main.c     **** 			angle_rl = Steering_direction_cal;
 2616              	 .loc 6 355 0
 2617 0cb6 554B     	 ldr r3,.L121+48
 2618 0cb8 FA68     	 ldr r2,[r7,#12]
 2619 0cba 1A60     	 str r2,[r3]
 356:../main.c     **** 			angle_rr = Steering_direction_cal;
 2620              	 .loc 6 356 0
 2621 0cbc 544B     	 ldr r3,.L121+52
 2622 0cbe FA68     	 ldr r2,[r7,#12]
 2623 0cc0 1A60     	 str r2,[r3]
 357:../main.c     **** 			 // speed
 358:../main.c     **** 			 speed_fl = Driving_speed_cal;
 2624              	 .loc 6 358 0
 2625 0cc2 554B     	 ldr r3,.L121+60
 2626 0cc4 BA68     	 ldr r2,[r7,#8]
 2627 0cc6 1A60     	 str r2,[r3]
 359:../main.c     **** 			 speed_fr = Driving_speed_cal;
 2628              	 .loc 6 359 0
 2629 0cc8 544B     	 ldr r3,.L121+64
 2630 0cca BA68     	 ldr r2,[r7,#8]
 2631 0ccc 1A60     	 str r2,[r3]
 360:../main.c     **** 			 speed_rl = Driving_speed_cal;
 2632              	 .loc 6 360 0
 2633 0cce 544B     	 ldr r3,.L121+68
 2634 0cd0 BA68     	 ldr r2,[r7,#8]
 2635 0cd2 1A60     	 str r2,[r3]
 361:../main.c     **** 			 speed_rr = Driving_speed_cal;
 2636              	 .loc 6 361 0
 2637 0cd4 534B     	 ldr r3,.L121+72
 2638 0cd6 BA68     	 ldr r2,[r7,#8]
 2639 0cd8 1A60     	 str r2,[r3]
 362:../main.c     **** 			break;
 2640              	 .loc 6 362 0
 2641 0cda 5BE0     	 b .L57
 2642              	.L45:
 363:../main.c     **** 
 364:../main.c     **** 		case ROTATE: // rotate #############################################################
 365:../main.c     **** 			// steering agel for turng in place
 366:../main.c     **** 			angle_fl = ROTATION_ANGLE + ROTATION_ANGLE_OFFSET;
 2643              	 .loc 6 366 0
 2644 0cdc 494B     	 ldr r3,.L121+40
 2645 0cde 544A     	 ldr r2,.L121+84
 2646 0ce0 1A60     	 str r2,[r3]
 367:../main.c     **** 			angle_fr = -ROTATION_ANGLE + ROTATION_ANGLE_OFFSET;
 2647              	 .loc 6 367 0
 2648 0ce2 494B     	 ldr r3,.L121+44
 2649 0ce4 534A     	 ldr r2,.L121+88
 2650 0ce6 1A60     	 str r2,[r3]
 368:../main.c     **** 			angle_rl = -ROTATION_ANGLE + ROTATION_ANGLE_OFFSET;
 2651              	 .loc 6 368 0
 2652 0ce8 484B     	 ldr r3,.L121+48
 2653 0cea 524A     	 ldr r2,.L121+88
 2654 0cec 1A60     	 str r2,[r3]
 369:../main.c     **** 			angle_rr = ROTATION_ANGLE + ROTATION_ANGLE_OFFSET;
 2655              	 .loc 6 369 0
 2656 0cee 484B     	 ldr r3,.L121+52
 2657 0cf0 4F4A     	 ldr r2,.L121+84
 2658 0cf2 1A60     	 str r2,[r3]
 370:../main.c     **** 
 371:../main.c     **** 			 // speed
 372:../main.c     **** 			if (Steering_direction_cal > 10){
 2659              	 .loc 6 372 0
 2660 0cf4 F868     	 ldr r0,[r7,#12]
 2661 0cf6 5049     	 ldr r1,.L121+92
 2662 0cf8 FFF7FEFF 	 bl __aeabi_fcmpgt
 2663 0cfc 031E     	 sub r3,r0,#0
 2664 0cfe 0ED0     	 beq .L113
 373:../main.c     **** 				speed_fl = ROTATION_SPEED;
 2665              	 .loc 6 373 0
 2666 0d00 454B     	 ldr r3,.L121+60
 2667 0d02 FA22     	 mov r2,#250
 2668 0d04 9205     	 lsl r2,r2,#22
 2669 0d06 1A60     	 str r2,[r3]
 374:../main.c     **** 				speed_fr = -ROTATION_SPEED;
 2670              	 .loc 6 374 0
 2671 0d08 444B     	 ldr r3,.L121+64
 2672 0d0a 4C4A     	 ldr r2,.L121+96
 2673 0d0c 1A60     	 str r2,[r3]
 375:../main.c     **** 				speed_rl = ROTATION_SPEED;
 2674              	 .loc 6 375 0
 2675 0d0e 444B     	 ldr r3,.L121+68
 2676 0d10 FA22     	 mov r2,#250
 2677 0d12 9205     	 lsl r2,r2,#22
 2678 0d14 1A60     	 str r2,[r3]
 376:../main.c     **** 				speed_rr = -ROTATION_SPEED;
 2679              	 .loc 6 376 0
 2680 0d16 434B     	 ldr r3,.L121+72
 2681 0d18 484A     	 ldr r2,.L121+96
 2682 0d1a 1A60     	 str r2,[r3]
 2683 0d1c 21E0     	 b .L86
 2684              	.L113:
 377:../main.c     **** 			}
 378:../main.c     **** 			else if(Steering_direction_cal < -10){
 2685              	 .loc 6 378 0
 2686 0d1e F868     	 ldr r0,[r7,#12]
 2687 0d20 4749     	 ldr r1,.L121+100
 2688 0d22 FFF7FEFF 	 bl __aeabi_fcmplt
 2689 0d26 031E     	 sub r3,r0,#0
 2690 0d28 0ED0     	 beq .L114
 379:../main.c     **** 				speed_fl = -ROTATION_SPEED;
 2691              	 .loc 6 379 0
 2692 0d2a 3B4B     	 ldr r3,.L121+60
 2693 0d2c 434A     	 ldr r2,.L121+96
 2694 0d2e 1A60     	 str r2,[r3]
 380:../main.c     **** 				speed_fr = ROTATION_SPEED;
 2695              	 .loc 6 380 0
 2696 0d30 3A4B     	 ldr r3,.L121+64
 2697 0d32 FA22     	 mov r2,#250
 2698 0d34 9205     	 lsl r2,r2,#22
 2699 0d36 1A60     	 str r2,[r3]
 381:../main.c     **** 				speed_rl = -ROTATION_SPEED;
 2700              	 .loc 6 381 0
 2701 0d38 394B     	 ldr r3,.L121+68
 2702 0d3a 404A     	 ldr r2,.L121+96
 2703 0d3c 1A60     	 str r2,[r3]
 382:../main.c     **** 				speed_rr = ROTATION_SPEED;
 2704              	 .loc 6 382 0
 2705 0d3e 394B     	 ldr r3,.L121+72
 2706 0d40 FA22     	 mov r2,#250
 2707 0d42 9205     	 lsl r2,r2,#22
 2708 0d44 1A60     	 str r2,[r3]
 2709 0d46 0CE0     	 b .L86
 2710              	.L114:
 383:../main.c     **** 			}
 384:../main.c     **** 			else{
 385:../main.c     **** 				speed_fl = 0;
 2711              	 .loc 6 385 0
 2712 0d48 334B     	 ldr r3,.L121+60
 2713 0d4a 0022     	 mov r2,#0
 2714 0d4c 1A60     	 str r2,[r3]
 386:../main.c     **** 				speed_fr = 0;
 2715              	 .loc 6 386 0
 2716 0d4e 334B     	 ldr r3,.L121+64
 2717 0d50 0022     	 mov r2,#0
 2718 0d52 1A60     	 str r2,[r3]
 387:../main.c     **** 				speed_rl = 0;
 2719              	 .loc 6 387 0
 2720 0d54 324B     	 ldr r3,.L121+68
 2721 0d56 0022     	 mov r2,#0
 2722 0d58 1A60     	 str r2,[r3]
 388:../main.c     **** 				speed_rr = 0;
 2723              	 .loc 6 388 0
 2724 0d5a 324B     	 ldr r3,.L121+72
 2725 0d5c 0022     	 mov r2,#0
 2726 0d5e 1A60     	 str r2,[r3]
 389:../main.c     **** 			}
 390:../main.c     **** 			break;
 2727              	 .loc 6 390 0
 2728 0d60 18E0     	 b .L57
 2729              	.L86:
 2730 0d62 17E0     	 b .L57
 2731              	.L39:
 391:../main.c     **** 
 392:../main.c     **** 		default:
 393:../main.c     **** 			angle_fl = 0;
 2732              	 .loc 6 393 0
 2733 0d64 274B     	 ldr r3,.L121+40
 2734 0d66 0022     	 mov r2,#0
 2735 0d68 1A60     	 str r2,[r3]
 394:../main.c     **** 			angle_fr = 0;
 2736              	 .loc 6 394 0
 2737 0d6a 274B     	 ldr r3,.L121+44
 2738 0d6c 0022     	 mov r2,#0
 2739 0d6e 1A60     	 str r2,[r3]
 395:../main.c     **** 			angle_rl = 0;
 2740              	 .loc 6 395 0
 2741 0d70 264B     	 ldr r3,.L121+48
 2742 0d72 0022     	 mov r2,#0
 2743 0d74 1A60     	 str r2,[r3]
 396:../main.c     **** 			angle_rr = 0;
 2744              	 .loc 6 396 0
 2745 0d76 264B     	 ldr r3,.L121+52
 2746 0d78 0022     	 mov r2,#0
 2747 0d7a 1A60     	 str r2,[r3]
 397:../main.c     **** 
 398:../main.c     **** 			speed_fl = 0;
 2748              	 .loc 6 398 0
 2749 0d7c 264B     	 ldr r3,.L121+60
 2750 0d7e 0022     	 mov r2,#0
 2751 0d80 1A60     	 str r2,[r3]
 399:../main.c     **** 			speed_fr = 0;
 2752              	 .loc 6 399 0
 2753 0d82 264B     	 ldr r3,.L121+64
 2754 0d84 0022     	 mov r2,#0
 2755 0d86 1A60     	 str r2,[r3]
 400:../main.c     **** 			speed_rl = 0;
 2756              	 .loc 6 400 0
 2757 0d88 254B     	 ldr r3,.L121+68
 2758 0d8a 0022     	 mov r2,#0
 2759 0d8c 1A60     	 str r2,[r3]
 401:../main.c     **** 			speed_rr = 0;
 2760              	 .loc 6 401 0
 2761 0d8e 254B     	 ldr r3,.L121+72
 2762 0d90 0022     	 mov r2,#0
 2763 0d92 1A60     	 str r2,[r3]
 2764              	.L57:
 402:../main.c     **** 
 403:../main.c     **** 	}
 404:../main.c     ****   // set gobal vars
 405:../main.c     ****   Steering_Angles[0] = angle_fl;
 2765              	 .loc 6 405 0
 2766 0d94 1B4B     	 ldr r3,.L121+40
 2767 0d96 1A68     	 ldr r2,[r3]
 2768 0d98 2A4B     	 ldr r3,.L121+104
 2769 0d9a 1A60     	 str r2,[r3]
 406:../main.c     ****   Steering_Angles[1] = angle_fr;
 2770              	 .loc 6 406 0
 2771 0d9c 1A4B     	 ldr r3,.L121+44
 2772 0d9e 1A68     	 ldr r2,[r3]
 2773 0da0 284B     	 ldr r3,.L121+104
 2774 0da2 5A60     	 str r2,[r3,#4]
 407:../main.c     ****   Steering_Angles[2] = angle_rl;
 2775              	 .loc 6 407 0
 2776 0da4 194B     	 ldr r3,.L121+48
 2777 0da6 1A68     	 ldr r2,[r3]
 2778 0da8 264B     	 ldr r3,.L121+104
 2779 0daa 9A60     	 str r2,[r3,#8]
 408:../main.c     ****   Steering_Angles[3] = angle_rr;
 2780              	 .loc 6 408 0
 2781 0dac 184B     	 ldr r3,.L121+52
 2782 0dae 1A68     	 ldr r2,[r3]
 2783 0db0 244B     	 ldr r3,.L121+104
 2784 0db2 DA60     	 str r2,[r3,#12]
 409:../main.c     **** 
 410:../main.c     ****   Speeds[0] = speed_fl;
 2785              	 .loc 6 410 0
 2786 0db4 184B     	 ldr r3,.L121+60
 2787 0db6 1A68     	 ldr r2,[r3]
 2788 0db8 234B     	 ldr r3,.L121+108
 2789 0dba 1A60     	 str r2,[r3]
 411:../main.c     ****   Speeds[1] = speed_fr;
 2790              	 .loc 6 411 0
 2791 0dbc 174B     	 ldr r3,.L121+64
 2792 0dbe 1A68     	 ldr r2,[r3]
 2793 0dc0 214B     	 ldr r3,.L121+108
 2794 0dc2 5A60     	 str r2,[r3,#4]
 412:../main.c     ****   Speeds[2] = speed_rl;
 2795              	 .loc 6 412 0
 2796 0dc4 164B     	 ldr r3,.L121+68
 2797 0dc6 1A68     	 ldr r2,[r3]
 2798 0dc8 1F4B     	 ldr r3,.L121+108
 2799 0dca 9A60     	 str r2,[r3,#8]
 413:../main.c     ****   Speeds[3] = speed_rr;
 2800              	 .loc 6 413 0
 2801 0dcc 154B     	 ldr r3,.L121+72
 2802 0dce 1A68     	 ldr r2,[r3]
 2803 0dd0 1D4B     	 ldr r3,.L121+108
 2804 0dd2 DA60     	 str r2,[r3,#12]
 414:../main.c     **** 
 415:../main.c     **** }
 2805              	 .loc 6 415 0
 2806 0dd4 BD46     	 mov sp,r7
 2807 0dd6 05B0     	 add sp,sp,#20
 2808              	 
 2809 0dd8 F0BD     	 pop {r4,r5,r6,r7,pc}
 2810              	.L122:
 2811 0dda C046     	 .align 2
 2812              	.L121:
 2813 0ddc 00000000 	 .word R_Turn
 2814 0de0 9A999999 	 .word -1717986918
 2815 0de4 9999A9BF 	 .word -1079404135
 2816 0de8 0000A0C1 	 .word -1046478848
 2817 0dec 77BE9F1A 	 .word 446676599
 2818 0df0 2FDDC43F 	 .word 1069866287
 2819 0df4 79E92631 	 .word 824633721
 2820 0df8 08ACDC3F 	 .word 1071426568
 2821 0dfc D9CEF753 	 .word 1408749273
 2822 0e00 E3A54C40 	 .word 1078765027
 2823 0e04 00000000 	 .word angle_fl
 2824 0e08 00000000 	 .word angle_fr
 2825 0e0c 00000000 	 .word angle_rl
 2826 0e10 00000000 	 .word angle_rr
 2827 0e14 00000000 	 .word Speed_ratio
 2828 0e18 00000000 	 .word speed_fl
 2829 0e1c 00000000 	 .word speed_fr
 2830 0e20 00000000 	 .word speed_rl
 2831 0e24 00000000 	 .word speed_rr
 2832 0e28 00003E43 	 .word 1128136704
 2833 0e2c 00003EC3 	 .word -1019346944
 2834 0e30 0AD76B42 	 .word 1114363658
 2835 0e34 0AD743C2 	 .word -1035741430
 2836 0e38 00002041 	 .word 1092616192
 2837 0e3c 000080BE 	 .word -1098907648
 2838 0e40 000020C1 	 .word -1054867456
 2839 0e44 00000000 	 .word Steering_Angles
 2840 0e48 00000000 	 .word Speeds
 2841              	 .cfi_endproc
 2842              	.LFE225:
 2844              	 .section .text.IRQ4_Handler,"ax",%progbits
 2845              	 .align 2
 2846              	 .global IRQ4_Handler
 2847              	 .code 16
 2848              	 .thumb_func
 2850              	IRQ4_Handler:
 2851              	.LFB226:
 416:../main.c     **** 
 417:../main.c     **** void CAN_RX_ULTRASONIC_ISR(void) { // recide data
 2852              	 .loc 6 417 0
 2853              	 .cfi_startproc
 2854 0000 90B5     	 push {r4,r7,lr}
 2855              	.LCFI36:
 2856              	 .cfi_def_cfa_offset 12
 2857              	 .cfi_offset 4,-12
 2858              	 .cfi_offset 7,-8
 2859              	 .cfi_offset 14,-4
 2860 0002 87B0     	 sub sp,sp,#28
 2861              	.LCFI37:
 2862              	 .cfi_def_cfa_offset 40
 2863 0004 02AF     	 add r7,sp,#8
 2864              	.LCFI38:
 2865              	 .cfi_def_cfa 7,32
 418:../main.c     **** 	XMC_CAN_MO_t* lmsgobjct_ptr_1 = CAN_NODE_0.lmobj_ptr[6]->mo_ptr;
 2866              	 .loc 6 418 0
 2867 0006 374B     	 ldr r3,.L126
 2868 0008 5B6A     	 ldr r3,[r3,#36]
 2869 000a 1B68     	 ldr r3,[r3]
 2870 000c BB60     	 str r3,[r7,#8]
 419:../main.c     **** 	CAN_NODE_MO_Receive((void*) CAN_NODE_0.lmobj_ptr[6]);
 2871              	 .loc 6 419 0
 2872 000e 354B     	 ldr r3,.L126
 2873 0010 5B6A     	 ldr r3,[r3,#36]
 2874 0012 181C     	 mov r0,r3
 2875 0014 FFF7FEFF 	 bl CAN_NODE_MO_Receive
 420:../main.c     **** 
 421:../main.c     **** 	uint8_t data_RX[8];
 422:../main.c     **** 	uint8_t i;
 423:../main.c     **** 	for(i = 0 ; i < 8 ; i ++){
 2876              	 .loc 6 423 0
 2877 0018 0F23     	 mov r3,#15
 2878 001a FB18     	 add r3,r7,r3
 2879 001c 0022     	 mov r2,#0
 2880 001e 1A70     	 strb r2,[r3]
 2881 0020 11E0     	 b .L124
 2882              	.L125:
 424:../main.c     **** 		 data_RX[i] = lmsgobjct_ptr_1->can_data_byte[i];
 2883              	 .loc 6 424 0 discriminator 3
 2884 0022 0F23     	 mov r3,#15
 2885 0024 FB18     	 add r3,r7,r3
 2886 0026 1B78     	 ldrb r3,[r3]
 2887 0028 0F22     	 mov r2,#15
 2888 002a BA18     	 add r2,r7,r2
 2889 002c 1278     	 ldrb r2,[r2]
 2890 002e B968     	 ldr r1,[r7,#8]
 2891 0030 8A18     	 add r2,r1,r2
 2892 0032 117C     	 ldrb r1,[r2,#16]
 2893 0034 3A1C     	 mov r2,r7
 2894 0036 D154     	 strb r1,[r2,r3]
 423:../main.c     **** 		 data_RX[i] = lmsgobjct_ptr_1->can_data_byte[i];
 2895              	 .loc 6 423 0 discriminator 3
 2896 0038 0F23     	 mov r3,#15
 2897 003a FB18     	 add r3,r7,r3
 2898 003c 1A78     	 ldrb r2,[r3]
 2899 003e 0F23     	 mov r3,#15
 2900 0040 FB18     	 add r3,r7,r3
 2901 0042 0132     	 add r2,r2,#1
 2902 0044 1A70     	 strb r2,[r3]
 2903              	.L124:
 423:../main.c     **** 		 data_RX[i] = lmsgobjct_ptr_1->can_data_byte[i];
 2904              	 .loc 6 423 0 is_stmt 0 discriminator 1
 2905 0046 0F23     	 mov r3,#15
 2906 0048 FB18     	 add r3,r7,r3
 2907 004a 1B78     	 ldrb r3,[r3]
 2908 004c 072B     	 cmp r3,#7
 2909 004e E8D9     	 bls .L125
 425:../main.c     **** 	}
 426:../main.c     **** 
 427:../main.c     **** 	CAN_state_Ultrasonic = (data_RX[0 * 2 + 1] << 8) | data_RX[0 * 2];
 2910              	 .loc 6 427 0 is_stmt 1
 2911 0050 3B1C     	 mov r3,r7
 2912 0052 5B78     	 ldrb r3,[r3,#1]
 2913 0054 1B02     	 lsl r3,r3,#8
 2914 0056 DAB2     	 uxtb r2,r3
 2915 0058 3B1C     	 mov r3,r7
 2916 005a 1B78     	 ldrb r3,[r3]
 2917 005c DBB2     	 uxtb r3,r3
 2918 005e 1343     	 orr r3,r2
 2919 0060 DBB2     	 uxtb r3,r3
 2920 0062 DAB2     	 uxtb r2,r3
 2921 0064 204B     	 ldr r3,.L126+4
 2922 0066 1A70     	 strb r2,[r3]
 428:../main.c     **** 	Ultrasonic_cm_C = (data_RX[1 * 2 + 1] << 8) | data_RX[1 * 2];
 2923              	 .loc 6 428 0
 2924 0068 3B1C     	 mov r3,r7
 2925 006a DB78     	 ldrb r3,[r3,#3]
 2926 006c 1B02     	 lsl r3,r3,#8
 2927 006e 9AB2     	 uxth r2,r3
 2928 0070 3B1C     	 mov r3,r7
 2929 0072 9B78     	 ldrb r3,[r3,#2]
 2930 0074 9BB2     	 uxth r3,r3
 2931 0076 1343     	 orr r3,r2
 2932 0078 9BB2     	 uxth r3,r3
 2933 007a 9AB2     	 uxth r2,r3
 2934 007c 1B4B     	 ldr r3,.L126+8
 2935 007e 1A80     	 strh r2,[r3]
 429:../main.c     **** 	Ultrasonic_cm_L = (data_RX[2 * 2 + 1] << 8) | data_RX[2 * 2];
 2936              	 .loc 6 429 0
 2937 0080 3B1C     	 mov r3,r7
 2938 0082 5B79     	 ldrb r3,[r3,#5]
 2939 0084 1B02     	 lsl r3,r3,#8
 2940 0086 9AB2     	 uxth r2,r3
 2941 0088 3B1C     	 mov r3,r7
 2942 008a 1B79     	 ldrb r3,[r3,#4]
 2943 008c 9BB2     	 uxth r3,r3
 2944 008e 1343     	 orr r3,r2
 2945 0090 9BB2     	 uxth r3,r3
 2946 0092 9AB2     	 uxth r2,r3
 2947 0094 164B     	 ldr r3,.L126+12
 2948 0096 1A80     	 strh r2,[r3]
 430:../main.c     **** 	Ultrasonic_cm_R = (data_RX[3 * 2 + 1] << 8) | data_RX[3 * 2];
 2949              	 .loc 6 430 0
 2950 0098 3B1C     	 mov r3,r7
 2951 009a DB79     	 ldrb r3,[r3,#7]
 2952 009c 1B02     	 lsl r3,r3,#8
 2953 009e 9AB2     	 uxth r2,r3
 2954 00a0 3B1C     	 mov r3,r7
 2955 00a2 9B79     	 ldrb r3,[r3,#6]
 2956 00a4 9BB2     	 uxth r3,r3
 2957 00a6 1343     	 orr r3,r2
 2958 00a8 9BB2     	 uxth r3,r3
 2959 00aa 9AB2     	 uxth r2,r3
 2960 00ac 114B     	 ldr r3,.L126+16
 2961 00ae 1A80     	 strh r2,[r3]
 431:../main.c     **** 
 432:../main.c     **** 	Ultra_sonic_filter(Ultrasonic_cm_C,  Ultrasonic_cm_L,  Ultrasonic_cm_R,  Steering_Angles,  ALPHA_U
 2962              	 .loc 6 432 0
 2963 00b0 0E4B     	 ldr r3,.L126+8
 2964 00b2 1B88     	 ldrh r3,[r3]
 2965 00b4 9BB2     	 uxth r3,r3
 2966 00b6 98B2     	 uxth r0,r3
 2967 00b8 0D4B     	 ldr r3,.L126+12
 2968 00ba 1B88     	 ldrh r3,[r3]
 2969 00bc 9BB2     	 uxth r3,r3
 2970 00be 99B2     	 uxth r1,r3
 2971 00c0 0C4B     	 ldr r3,.L126+16
 2972 00c2 1B88     	 ldrh r3,[r3]
 2973 00c4 9BB2     	 uxth r3,r3
 2974 00c6 9AB2     	 uxth r2,r3
 2975 00c8 0B4B     	 ldr r3,.L126+20
 2976 00ca 1B68     	 ldr r3,[r3]
 2977 00cc 00B2     	 sxth r0,r0
 2978 00ce 09B2     	 sxth r1,r1
 2979 00d0 12B2     	 sxth r2,r2
 2980 00d2 0A4C     	 ldr r4,.L126+24
 2981 00d4 0093     	 str r3,[sp]
 2982 00d6 231C     	 mov r3,r4
 2983 00d8 FFF7FEFF 	 bl Ultra_sonic_filter
 433:../main.c     **** }
 2984              	 .loc 6 433 0
 2985 00dc BD46     	 mov sp,r7
 2986 00de 05B0     	 add sp,sp,#20
 2987              	 
 2988 00e0 90BD     	 pop {r4,r7,pc}
 2989              	.L127:
 2990 00e2 C046     	 .align 2
 2991              	.L126:
 2992 00e4 00000000 	 .word CAN_NODE_0
 2993 00e8 00000000 	 .word CAN_state_Ultrasonic
 2994 00ec 00000000 	 .word Ultrasonic_cm_C
 2995 00f0 00000000 	 .word Ultrasonic_cm_L
 2996 00f4 00000000 	 .word Ultrasonic_cm_R
 2997 00f8 00000000 	 .word ALPHA_ULTARSONIC
 2998 00fc 00000000 	 .word Steering_Angles
 2999              	 .cfi_endproc
 3000              	.LFE226:
 3002              	 .global __aeabi_i2f
 3003              	 .section .text.Ultra_sonic_filter,"ax",%progbits
 3004              	 .align 2
 3005              	 .global Ultra_sonic_filter
 3006              	 .code 16
 3007              	 .thumb_func
 3009              	Ultra_sonic_filter:
 3010              	.LFB227:
 434:../main.c     **** 
 435:../main.c     **** void Ultra_sonic_filter(int16_t Ultrasonic_cm_C_clc, int16_t Ultrasonic_cm_L_clc, int16_t Ultrasoni
 3011              	 .loc 6 435 0
 3012              	 .cfi_startproc
 3013 0000 F0B5     	 push {r4,r5,r6,r7,lr}
 3014              	.LCFI39:
 3015              	 .cfi_def_cfa_offset 20
 3016              	 .cfi_offset 4,-20
 3017              	 .cfi_offset 5,-16
 3018              	 .cfi_offset 6,-12
 3019              	 .cfi_offset 7,-8
 3020              	 .cfi_offset 14,-4
 3021 0002 87B0     	 sub sp,sp,#28
 3022              	.LCFI40:
 3023              	 .cfi_def_cfa_offset 48
 3024 0004 00AF     	 add r7,sp,#0
 3025              	.LCFI41:
 3026              	 .cfi_def_cfa_register 7
 3027 0006 041C     	 mov r4,r0
 3028 0008 081C     	 mov r0,r1
 3029 000a 111C     	 mov r1,r2
 3030 000c 7B60     	 str r3,[r7,#4]
 3031 000e 0E23     	 mov r3,#14
 3032 0010 FB18     	 add r3,r7,r3
 3033 0012 221C     	 add r2,r4,#0
 3034 0014 1A80     	 strh r2,[r3]
 3035 0016 0C23     	 mov r3,#12
 3036 0018 FB18     	 add r3,r7,r3
 3037 001a 021C     	 add r2,r0,#0
 3038 001c 1A80     	 strh r2,[r3]
 3039 001e 0A23     	 mov r3,#10
 3040 0020 FB18     	 add r3,r7,r3
 3041 0022 0A1C     	 add r2,r1,#0
 3042 0024 1A80     	 strh r2,[r3]
 436:../main.c     **** 	uint8_t Ultrsonic_data_vaild[3] = {0, 0, 0};
 3043              	 .loc 6 436 0
 3044 0026 1423     	 mov r3,#20
 3045 0028 FB18     	 add r3,r7,r3
 3046 002a 0022     	 mov r2,#0
 3047 002c 1A70     	 strb r2,[r3]
 3048 002e 1423     	 mov r3,#20
 3049 0030 FB18     	 add r3,r7,r3
 3050 0032 0022     	 mov r2,#0
 3051 0034 5A70     	 strb r2,[r3,#1]
 3052 0036 1423     	 mov r3,#20
 3053 0038 FB18     	 add r3,r7,r3
 3054 003a 0022     	 mov r2,#0
 3055 003c 9A70     	 strb r2,[r3,#2]
 437:../main.c     **** 
 438:../main.c     **** 	if(Ultrasonic_cm_C_clc != 0){
 3056              	 .loc 6 438 0
 3057 003e 0E23     	 mov r3,#14
 3058 0040 FB18     	 add r3,r7,r3
 3059 0042 0022     	 mov r2,#0
 3060 0044 9B5E     	 ldrsh r3,[r3,r2]
 3061 0046 002B     	 cmp r3,#0
 3062 0048 16D0     	 beq .L129
 439:../main.c     **** 		Ultrsonic_data_vaild[0] = 1;
 3063              	 .loc 6 439 0
 3064 004a 1423     	 mov r3,#20
 3065 004c FB18     	 add r3,r7,r3
 3066 004e 0122     	 mov r2,#1
 3067 0050 1A70     	 strb r2,[r3]
 440:../main.c     **** 		Fil_Ultrasonic_m_C = Exp_moving_average(Ultrasonic_cm_C_clc, Fil_Ultrasonic_m_C, ALPHA_ULTARSONIC
 3068              	 .loc 6 440 0
 3069 0052 0E23     	 mov r3,#14
 3070 0054 FB18     	 add r3,r7,r3
 3071 0056 0022     	 mov r2,#0
 3072 0058 9B5E     	 ldrsh r3,[r3,r2]
 3073 005a 181C     	 mov r0,r3
 3074 005c FFF7FEFF 	 bl __aeabi_i2f
 3075 0060 011C     	 add r1,r0,#0
 3076 0062 9C4B     	 ldr r3,.L135
 3077 0064 1A68     	 ldr r2,[r3]
 3078 0066 3B6B     	 ldr r3,[r7,#48]
 3079 0068 081C     	 add r0,r1,#0
 3080 006a 111C     	 add r1,r2,#0
 3081 006c 1A1C     	 add r2,r3,#0
 3082 006e FFF7FEFF 	 bl Exp_moving_average
 3083 0072 021C     	 add r2,r0,#0
 3084 0074 974B     	 ldr r3,.L135
 3085 0076 1A60     	 str r2,[r3]
 3086              	.L129:
 441:../main.c     **** 	}
 442:../main.c     **** 	if(Ultrasonic_cm_L_clc != 0){
 3087              	 .loc 6 442 0
 3088 0078 0C23     	 mov r3,#12
 3089 007a FB18     	 add r3,r7,r3
 3090 007c 0022     	 mov r2,#0
 3091 007e 9B5E     	 ldrsh r3,[r3,r2]
 3092 0080 002B     	 cmp r3,#0
 3093 0082 23D0     	 beq .L130
 443:../main.c     **** 		obstructed_L = Ultrasoinc_Obstructet_Test(Steering_Angles_clc[0]);
 3094              	 .loc 6 443 0
 3095 0084 7B68     	 ldr r3,[r7,#4]
 3096 0086 1B68     	 ldr r3,[r3]
 3097 0088 181C     	 add r0,r3,#0
 3098 008a FFF7FEFF 	 bl Ultrasoinc_Obstructet_Test
 3099 008e 031C     	 mov r3,r0
 3100 0090 1A1C     	 mov r2,r3
 3101 0092 914B     	 ldr r3,.L135+4
 3102 0094 1A70     	 strb r2,[r3]
 444:../main.c     **** 		if(obstructed_L == 0) {
 3103              	 .loc 6 444 0
 3104 0096 904B     	 ldr r3,.L135+4
 3105 0098 1B78     	 ldrb r3,[r3]
 3106 009a 002B     	 cmp r3,#0
 3107 009c 16D1     	 bne .L130
 445:../main.c     **** 			Ultrsonic_data_vaild[1] = 1;
 3108              	 .loc 6 445 0
 3109 009e 1423     	 mov r3,#20
 3110 00a0 FB18     	 add r3,r7,r3
 3111 00a2 0122     	 mov r2,#1
 3112 00a4 5A70     	 strb r2,[r3,#1]
 446:../main.c     **** 			Fil_Ultrasonic_m_L = Exp_moving_average(Ultrasonic_cm_L_clc, Fil_Ultrasonic_m_L, ALPHA_ULTARSONI
 3113              	 .loc 6 446 0
 3114 00a6 0C23     	 mov r3,#12
 3115 00a8 FB18     	 add r3,r7,r3
 3116 00aa 0022     	 mov r2,#0
 3117 00ac 9B5E     	 ldrsh r3,[r3,r2]
 3118 00ae 181C     	 mov r0,r3
 3119 00b0 FFF7FEFF 	 bl __aeabi_i2f
 3120 00b4 011C     	 add r1,r0,#0
 3121 00b6 894B     	 ldr r3,.L135+8
 3122 00b8 1A68     	 ldr r2,[r3]
 3123 00ba 3B6B     	 ldr r3,[r7,#48]
 3124 00bc 081C     	 add r0,r1,#0
 3125 00be 111C     	 add r1,r2,#0
 3126 00c0 1A1C     	 add r2,r3,#0
 3127 00c2 FFF7FEFF 	 bl Exp_moving_average
 3128 00c6 021C     	 add r2,r0,#0
 3129 00c8 844B     	 ldr r3,.L135+8
 3130 00ca 1A60     	 str r2,[r3]
 3131              	.L130:
 447:../main.c     **** 		}
 448:../main.c     **** 	}
 449:../main.c     **** 	if(Ultrasonic_cm_R_clc != 0){
 3132              	 .loc 6 449 0
 3133 00cc 0A23     	 mov r3,#10
 3134 00ce FB18     	 add r3,r7,r3
 3135 00d0 0022     	 mov r2,#0
 3136 00d2 9B5E     	 ldrsh r3,[r3,r2]
 3137 00d4 002B     	 cmp r3,#0
 3138 00d6 27D0     	 beq .L131
 450:../main.c     **** 		obstructed_R = Ultrasoinc_Obstructet_Test( - Steering_Angles_clc[1]); // neagtiv becasue right wh
 3139              	 .loc 6 450 0
 3140 00d8 7B68     	 ldr r3,[r7,#4]
 3141 00da 0433     	 add r3,r3,#4
 3142 00dc 1B68     	 ldr r3,[r3]
 3143 00de 8022     	 mov r2,#128
 3144 00e0 1206     	 lsl r2,r2,#24
 3145 00e2 5340     	 eor r3,r2
 3146 00e4 181C     	 add r0,r3,#0
 3147 00e6 FFF7FEFF 	 bl Ultrasoinc_Obstructet_Test
 3148 00ea 031C     	 mov r3,r0
 3149 00ec 1A1C     	 mov r2,r3
 3150 00ee 7C4B     	 ldr r3,.L135+12
 3151 00f0 1A70     	 strb r2,[r3]
 451:../main.c     **** 		if(obstructed_R == 0){
 3152              	 .loc 6 451 0
 3153 00f2 7B4B     	 ldr r3,.L135+12
 3154 00f4 1B78     	 ldrb r3,[r3]
 3155 00f6 002B     	 cmp r3,#0
 3156 00f8 16D1     	 bne .L131
 452:../main.c     **** 			Fil_Ultrasonic_m_R = Exp_moving_average(Ultrasonic_cm_R_clc, Fil_Ultrasonic_m_R, ALPHA_ULTARSONI
 3157              	 .loc 6 452 0
 3158 00fa 0A23     	 mov r3,#10
 3159 00fc FB18     	 add r3,r7,r3
 3160 00fe 0022     	 mov r2,#0
 3161 0100 9B5E     	 ldrsh r3,[r3,r2]
 3162 0102 181C     	 mov r0,r3
 3163 0104 FFF7FEFF 	 bl __aeabi_i2f
 3164 0108 011C     	 add r1,r0,#0
 3165 010a 764B     	 ldr r3,.L135+16
 3166 010c 1A68     	 ldr r2,[r3]
 3167 010e 3B6B     	 ldr r3,[r7,#48]
 3168 0110 081C     	 add r0,r1,#0
 3169 0112 111C     	 add r1,r2,#0
 3170 0114 1A1C     	 add r2,r3,#0
 3171 0116 FFF7FEFF 	 bl Exp_moving_average
 3172 011a 021C     	 add r2,r0,#0
 3173 011c 714B     	 ldr r3,.L135+16
 3174 011e 1A60     	 str r2,[r3]
 453:../main.c     **** 			Ultrsonic_data_vaild[2] = 1;
 3175              	 .loc 6 453 0
 3176 0120 1423     	 mov r3,#20
 3177 0122 FB18     	 add r3,r7,r3
 3178 0124 0122     	 mov r2,#1
 3179 0126 9A70     	 strb r2,[r3,#2]
 3180              	.L131:
 454:../main.c     **** 		}
 455:../main.c     **** 	}
 456:../main.c     **** 
 457:../main.c     **** 	// front obstacel
 458:../main.c     **** 	if(Ultrsonic_data_vaild[0] == 1){
 3181              	 .loc 6 458 0
 3182 0128 1423     	 mov r3,#20
 3183 012a FB18     	 add r3,r7,r3
 3184 012c 1B78     	 ldrb r3,[r3]
 3185 012e 012B     	 cmp r3,#1
 3186 0130 03D1     	 bne .L132
 459:../main.c     **** 		Obstacel_F[0] = Fil_Ultrasonic_m_C;
 3187              	 .loc 6 459 0
 3188 0132 684B     	 ldr r3,.L135
 3189 0134 1A68     	 ldr r2,[r3]
 3190 0136 6C4B     	 ldr r3,.L135+20
 3191 0138 1A60     	 str r2,[r3]
 3192              	.L132:
 460:../main.c     **** 	}
 461:../main.c     **** 
 462:../main.c     **** 	if(Ultrsonic_data_vaild[1] == 1){
 3193              	 .loc 6 462 0
 3194 013a 1423     	 mov r3,#20
 3195 013c FB18     	 add r3,r7,r3
 3196 013e 5B78     	 ldrb r3,[r3,#1]
 3197 0140 012B     	 cmp r3,#1
 3198 0142 55D1     	 bne .L133
 463:../main.c     **** 		Obstacel_L[0] = Fil_Ultrasonic_m_L * cos(Steering_Angles[0] / RAD_TO_DEG);
 3199              	 .loc 6 463 0
 3200 0144 654B     	 ldr r3,.L135+8
 3201 0146 1B68     	 ldr r3,[r3]
 3202 0148 181C     	 add r0,r3,#0
 3203 014a FFF7FEFF 	 bl __aeabi_f2d
 3204 014e 051C     	 mov r5,r0
 3205 0150 0E1C     	 mov r6,r1
 3206 0152 664B     	 ldr r3,.L135+24
 3207 0154 1B68     	 ldr r3,[r3]
 3208 0156 181C     	 add r0,r3,#0
 3209 0158 FFF7FEFF 	 bl __aeabi_f2d
 3210 015c 031C     	 mov r3,r0
 3211 015e 0C1C     	 mov r4,r1
 3212 0160 181C     	 mov r0,r3
 3213 0162 211C     	 mov r1,r4
 3214 0164 624A     	 ldr r2,.L135+28
 3215 0166 634B     	 ldr r3,.L135+32
 3216 0168 FFF7FEFF 	 bl __aeabi_ddiv
 3217 016c 031C     	 mov r3,r0
 3218 016e 0C1C     	 mov r4,r1
 3219 0170 181C     	 mov r0,r3
 3220 0172 211C     	 mov r1,r4
 3221 0174 FFF7FEFF 	 bl cos
 3222 0178 031C     	 mov r3,r0
 3223 017a 0C1C     	 mov r4,r1
 3224 017c 281C     	 mov r0,r5
 3225 017e 311C     	 mov r1,r6
 3226 0180 1A1C     	 mov r2,r3
 3227 0182 231C     	 mov r3,r4
 3228 0184 FFF7FEFF 	 bl __aeabi_dmul
 3229 0188 031C     	 mov r3,r0
 3230 018a 0C1C     	 mov r4,r1
 3231 018c 181C     	 mov r0,r3
 3232 018e 211C     	 mov r1,r4
 3233 0190 FFF7FEFF 	 bl __aeabi_d2f
 3234 0194 021C     	 add r2,r0,#0
 3235 0196 584B     	 ldr r3,.L135+36
 3236 0198 1A60     	 str r2,[r3]
 464:../main.c     **** 		Obstacel_L[1] = Fil_Ultrasonic_m_L * sin(Steering_Angles[0] / RAD_TO_DEG);
 3237              	 .loc 6 464 0
 3238 019a 504B     	 ldr r3,.L135+8
 3239 019c 1B68     	 ldr r3,[r3]
 3240 019e 181C     	 add r0,r3,#0
 3241 01a0 FFF7FEFF 	 bl __aeabi_f2d
 3242 01a4 051C     	 mov r5,r0
 3243 01a6 0E1C     	 mov r6,r1
 3244 01a8 504B     	 ldr r3,.L135+24
 3245 01aa 1B68     	 ldr r3,[r3]
 3246 01ac 181C     	 add r0,r3,#0
 3247 01ae FFF7FEFF 	 bl __aeabi_f2d
 3248 01b2 031C     	 mov r3,r0
 3249 01b4 0C1C     	 mov r4,r1
 3250 01b6 181C     	 mov r0,r3
 3251 01b8 211C     	 mov r1,r4
 3252 01ba 4D4A     	 ldr r2,.L135+28
 3253 01bc 4D4B     	 ldr r3,.L135+32
 3254 01be FFF7FEFF 	 bl __aeabi_ddiv
 3255 01c2 031C     	 mov r3,r0
 3256 01c4 0C1C     	 mov r4,r1
 3257 01c6 181C     	 mov r0,r3
 3258 01c8 211C     	 mov r1,r4
 3259 01ca FFF7FEFF 	 bl sin
 3260 01ce 031C     	 mov r3,r0
 3261 01d0 0C1C     	 mov r4,r1
 3262 01d2 281C     	 mov r0,r5
 3263 01d4 311C     	 mov r1,r6
 3264 01d6 1A1C     	 mov r2,r3
 3265 01d8 231C     	 mov r3,r4
 3266 01da FFF7FEFF 	 bl __aeabi_dmul
 3267 01de 031C     	 mov r3,r0
 3268 01e0 0C1C     	 mov r4,r1
 3269 01e2 181C     	 mov r0,r3
 3270 01e4 211C     	 mov r1,r4
 3271 01e6 FFF7FEFF 	 bl __aeabi_d2f
 3272 01ea 021C     	 add r2,r0,#0
 3273 01ec 424B     	 ldr r3,.L135+36
 3274 01ee 5A60     	 str r2,[r3,#4]
 3275              	.L133:
 465:../main.c     **** 	}
 466:../main.c     **** 
 467:../main.c     **** 	if(Ultrsonic_data_vaild[2] == 1){
 3276              	 .loc 6 467 0
 3277 01f0 1423     	 mov r3,#20
 3278 01f2 FB18     	 add r3,r7,r3
 3279 01f4 9B78     	 ldrb r3,[r3,#2]
 3280 01f6 012B     	 cmp r3,#1
 3281 01f8 55D1     	 bne .L134
 468:../main.c     **** 		Obstacel_R[0] = Fil_Ultrasonic_m_R * cos(Steering_Angles[1] / RAD_TO_DEG);
 3282              	 .loc 6 468 0
 3283 01fa 3A4B     	 ldr r3,.L135+16
 3284 01fc 1B68     	 ldr r3,[r3]
 3285 01fe 181C     	 add r0,r3,#0
 3286 0200 FFF7FEFF 	 bl __aeabi_f2d
 3287 0204 051C     	 mov r5,r0
 3288 0206 0E1C     	 mov r6,r1
 3289 0208 384B     	 ldr r3,.L135+24
 3290 020a 5B68     	 ldr r3,[r3,#4]
 3291 020c 181C     	 add r0,r3,#0
 3292 020e FFF7FEFF 	 bl __aeabi_f2d
 3293 0212 031C     	 mov r3,r0
 3294 0214 0C1C     	 mov r4,r1
 3295 0216 181C     	 mov r0,r3
 3296 0218 211C     	 mov r1,r4
 3297 021a 354A     	 ldr r2,.L135+28
 3298 021c 354B     	 ldr r3,.L135+32
 3299 021e FFF7FEFF 	 bl __aeabi_ddiv
 3300 0222 031C     	 mov r3,r0
 3301 0224 0C1C     	 mov r4,r1
 3302 0226 181C     	 mov r0,r3
 3303 0228 211C     	 mov r1,r4
 3304 022a FFF7FEFF 	 bl cos
 3305 022e 031C     	 mov r3,r0
 3306 0230 0C1C     	 mov r4,r1
 3307 0232 281C     	 mov r0,r5
 3308 0234 311C     	 mov r1,r6
 3309 0236 1A1C     	 mov r2,r3
 3310 0238 231C     	 mov r3,r4
 3311 023a FFF7FEFF 	 bl __aeabi_dmul
 3312 023e 031C     	 mov r3,r0
 3313 0240 0C1C     	 mov r4,r1
 3314 0242 181C     	 mov r0,r3
 3315 0244 211C     	 mov r1,r4
 3316 0246 FFF7FEFF 	 bl __aeabi_d2f
 3317 024a 021C     	 add r2,r0,#0
 3318 024c 2B4B     	 ldr r3,.L135+40
 3319 024e 1A60     	 str r2,[r3]
 469:../main.c     **** 		Obstacel_R[1] = Fil_Ultrasonic_m_R * sin(Steering_Angles[1] / RAD_TO_DEG);
 3320              	 .loc 6 469 0
 3321 0250 244B     	 ldr r3,.L135+16
 3322 0252 1B68     	 ldr r3,[r3]
 3323 0254 181C     	 add r0,r3,#0
 3324 0256 FFF7FEFF 	 bl __aeabi_f2d
 3325 025a 051C     	 mov r5,r0
 3326 025c 0E1C     	 mov r6,r1
 3327 025e 234B     	 ldr r3,.L135+24
 3328 0260 5B68     	 ldr r3,[r3,#4]
 3329 0262 181C     	 add r0,r3,#0
 3330 0264 FFF7FEFF 	 bl __aeabi_f2d
 3331 0268 031C     	 mov r3,r0
 3332 026a 0C1C     	 mov r4,r1
 3333 026c 181C     	 mov r0,r3
 3334 026e 211C     	 mov r1,r4
 3335 0270 1F4A     	 ldr r2,.L135+28
 3336 0272 204B     	 ldr r3,.L135+32
 3337 0274 FFF7FEFF 	 bl __aeabi_ddiv
 3338 0278 031C     	 mov r3,r0
 3339 027a 0C1C     	 mov r4,r1
 3340 027c 181C     	 mov r0,r3
 3341 027e 211C     	 mov r1,r4
 3342 0280 FFF7FEFF 	 bl sin
 3343 0284 031C     	 mov r3,r0
 3344 0286 0C1C     	 mov r4,r1
 3345 0288 281C     	 mov r0,r5
 3346 028a 311C     	 mov r1,r6
 3347 028c 1A1C     	 mov r2,r3
 3348 028e 231C     	 mov r3,r4
 3349 0290 FFF7FEFF 	 bl __aeabi_dmul
 3350 0294 031C     	 mov r3,r0
 3351 0296 0C1C     	 mov r4,r1
 3352 0298 181C     	 mov r0,r3
 3353 029a 211C     	 mov r1,r4
 3354 029c FFF7FEFF 	 bl __aeabi_d2f
 3355 02a0 021C     	 add r2,r0,#0
 3356 02a2 164B     	 ldr r3,.L135+40
 3357 02a4 5A60     	 str r2,[r3,#4]
 3358              	.L134:
 470:../main.c     **** 	}
 471:../main.c     **** 	obstacel_F_x = Obstacel_F[0];
 3359              	 .loc 6 471 0
 3360 02a6 104B     	 ldr r3,.L135+20
 3361 02a8 1A68     	 ldr r2,[r3]
 3362 02aa 154B     	 ldr r3,.L135+44
 3363 02ac 1A60     	 str r2,[r3]
 472:../main.c     **** 	obstacel_L_x = Obstacel_L[0];
 3364              	 .loc 6 472 0
 3365 02ae 124B     	 ldr r3,.L135+36
 3366 02b0 1A68     	 ldr r2,[r3]
 3367 02b2 144B     	 ldr r3,.L135+48
 3368 02b4 1A60     	 str r2,[r3]
 473:../main.c     **** 	obstacel_L_y = Obstacel_L[1];
 3369              	 .loc 6 473 0
 3370 02b6 104B     	 ldr r3,.L135+36
 3371 02b8 5A68     	 ldr r2,[r3,#4]
 3372 02ba 134B     	 ldr r3,.L135+52
 3373 02bc 1A60     	 str r2,[r3]
 474:../main.c     **** 	obstacel_R_x = Obstacel_R[0];
 3374              	 .loc 6 474 0
 3375 02be 0F4B     	 ldr r3,.L135+40
 3376 02c0 1A68     	 ldr r2,[r3]
 3377 02c2 124B     	 ldr r3,.L135+56
 3378 02c4 1A60     	 str r2,[r3]
 475:../main.c     **** 	obstacel_R_y = Obstacel_R[1];
 3379              	 .loc 6 475 0
 3380 02c6 0D4B     	 ldr r3,.L135+40
 3381 02c8 5A68     	 ldr r2,[r3,#4]
 3382 02ca 114B     	 ldr r3,.L135+60
 3383 02cc 1A60     	 str r2,[r3]
 476:../main.c     **** 
 477:../main.c     **** 
 478:../main.c     **** }
 3384              	 .loc 6 478 0
 3385 02ce BD46     	 mov sp,r7
 3386 02d0 07B0     	 add sp,sp,#28
 3387              	 
 3388 02d2 F0BD     	 pop {r4,r5,r6,r7,pc}
 3389              	.L136:
 3390              	 .align 2
 3391              	.L135:
 3392 02d4 00000000 	 .word Fil_Ultrasonic_m_C
 3393 02d8 00000000 	 .word obstructed_L
 3394 02dc 00000000 	 .word Fil_Ultrasonic_m_L
 3395 02e0 00000000 	 .word obstructed_R
 3396 02e4 00000000 	 .word Fil_Ultrasonic_m_R
 3397 02e8 00000000 	 .word Obstacel_F
 3398 02ec 00000000 	 .word Steering_Angles
 3399 02f0 D9CEF753 	 .word 1408749273
 3400 02f4 E3A54C40 	 .word 1078765027
 3401 02f8 00000000 	 .word Obstacel_L
 3402 02fc 00000000 	 .word Obstacel_R
 3403 0300 00000000 	 .word obstacel_F_x
 3404 0304 00000000 	 .word obstacel_L_x
 3405 0308 00000000 	 .word obstacel_L_y
 3406 030c 00000000 	 .word obstacel_R_x
 3407 0310 00000000 	 .word obstacel_R_y
 3408              	 .cfi_endproc
 3409              	.LFE227:
 3411              	 .global __aeabi_fsub
 3412              	 .global __aeabi_fcmple
 3413              	 .section .text.Ultrasoinc_Obstructet_Test,"ax",%progbits
 3414              	 .align 2
 3415              	 .global Ultrasoinc_Obstructet_Test
 3416              	 .code 16
 3417              	 .thumb_func
 3419              	Ultrasoinc_Obstructet_Test:
 3420              	.LFB228:
 479:../main.c     **** 
 480:../main.c     **** uint8_t Ultrasoinc_Obstructet_Test(float Angle){
 3421              	 .loc 6 480 0
 3422              	 .cfi_startproc
 3423 0000 90B5     	 push {r4,r7,lr}
 3424              	.LCFI42:
 3425              	 .cfi_def_cfa_offset 12
 3426              	 .cfi_offset 4,-12
 3427              	 .cfi_offset 7,-8
 3428              	 .cfi_offset 14,-4
 3429 0002 85B0     	 sub sp,sp,#20
 3430              	.LCFI43:
 3431              	 .cfi_def_cfa_offset 32
 3432 0004 00AF     	 add r7,sp,#0
 3433              	.LCFI44:
 3434              	 .cfi_def_cfa_register 7
 3435 0006 7860     	 str r0,[r7,#4]
 481:../main.c     **** 	uint8_t i;
 482:../main.c     **** 	for(i = 0; i < 3; i++){ // if rotate around multipel times
 3436              	 .loc 6 482 0
 3437 0008 0F23     	 mov r3,#15
 3438 000a FB18     	 add r3,r7,r3
 3439 000c 0022     	 mov r2,#0
 3440 000e 1A70     	 strb r2,[r3]
 3441 0010 6DE0     	 b .L138
 3442              	.L146:
 483:../main.c     **** 		if(Angle > 0){
 3443              	 .loc 6 483 0
 3444 0012 7868     	 ldr r0,[r7,#4]
 3445 0014 0021     	 mov r1,#0
 3446 0016 FFF7FEFF 	 bl __aeabi_fcmpgt
 3447 001a 031E     	 sub r3,r0,#0
 3448 001c 2DD0     	 beq .L139
 484:../main.c     **** 			if((Angle - (POS_OBSTRUCTED_ANGLE_MIN + (i * 360))) * (Angle - (POS_OBSTRUCTED_ANGLE_MAX + (i * 
 3449              	 .loc 6 484 0
 3450 001e 0F23     	 mov r3,#15
 3451 0020 FB18     	 add r3,r7,r3
 3452 0022 1B78     	 ldrb r3,[r3]
 3453 0024 B422     	 mov r2,#180
 3454 0026 5200     	 lsl r2,r2,#1
 3455 0028 5343     	 mul r3,r2
 3456 002a 3233     	 add r3,r3,#50
 3457 002c 181C     	 mov r0,r3
 3458 002e FFF7FEFF 	 bl __aeabi_i2f
 3459 0032 031C     	 add r3,r0,#0
 3460 0034 7868     	 ldr r0,[r7,#4]
 3461 0036 191C     	 add r1,r3,#0
 3462 0038 FFF7FEFF 	 bl __aeabi_fsub
 3463 003c 031C     	 add r3,r0,#0
 3464 003e 1C1C     	 add r4,r3,#0
 3465 0040 0F23     	 mov r3,#15
 3466 0042 FB18     	 add r3,r7,r3
 3467 0044 1B78     	 ldrb r3,[r3]
 3468 0046 B422     	 mov r2,#180
 3469 0048 5200     	 lsl r2,r2,#1
 3470 004a 5343     	 mul r3,r2
 3471 004c D233     	 add r3,r3,#210
 3472 004e 181C     	 mov r0,r3
 3473 0050 FFF7FEFF 	 bl __aeabi_i2f
 3474 0054 031C     	 add r3,r0,#0
 3475 0056 7868     	 ldr r0,[r7,#4]
 3476 0058 191C     	 add r1,r3,#0
 3477 005a FFF7FEFF 	 bl __aeabi_fsub
 3478 005e 031C     	 add r3,r0,#0
 3479 0060 201C     	 add r0,r4,#0
 3480 0062 191C     	 add r1,r3,#0
 3481 0064 FFF7FEFF 	 bl __aeabi_fmul
 3482 0068 031C     	 add r3,r0,#0
 3483 006a 181C     	 add r0,r3,#0
 3484 006c 0021     	 mov r1,#0
 3485 006e FFF7FEFF 	 bl __aeabi_fcmple
 3486 0072 031E     	 sub r3,r0,#0
 3487 0074 01D0     	 beq .L139
 485:../main.c     **** 				return 1;
 3488              	 .loc 6 485 0
 3489 0076 0123     	 mov r3,#1
 3490 0078 3FE0     	 b .L142
 3491              	.L139:
 486:../main.c     **** 			}
 487:../main.c     **** 		}
 488:../main.c     **** 
 489:../main.c     **** 		if(Angle < 0){
 3492              	 .loc 6 489 0
 3493 007a 7868     	 ldr r0,[r7,#4]
 3494 007c 0021     	 mov r1,#0
 3495 007e FFF7FEFF 	 bl __aeabi_fcmplt
 3496 0082 031E     	 sub r3,r0,#0
 3497 0084 2CD0     	 beq .L143
 490:../main.c     **** 			if((Angle - (NEG_OBSTRUCTED_ANGLE_MIN - (i * 360))) * (Angle - (NEG_OBSTRUCTED_ANGLE_MAX - (i * 
 3498              	 .loc 6 490 0
 3499 0086 0F23     	 mov r3,#15
 3500 0088 FB18     	 add r3,r7,r3
 3501 008a 1B78     	 ldrb r3,[r3]
 3502 008c 1D4A     	 ldr r2,.L151
 3503 008e 5343     	 mul r3,r2
 3504 0090 963B     	 sub r3,r3,#150
 3505 0092 181C     	 mov r0,r3
 3506 0094 FFF7FEFF 	 bl __aeabi_i2f
 3507 0098 031C     	 add r3,r0,#0
 3508 009a 7868     	 ldr r0,[r7,#4]
 3509 009c 191C     	 add r1,r3,#0
 3510 009e FFF7FEFF 	 bl __aeabi_fsub
 3511 00a2 031C     	 add r3,r0,#0
 3512 00a4 1C1C     	 add r4,r3,#0
 3513 00a6 0F23     	 mov r3,#15
 3514 00a8 FB18     	 add r3,r7,r3
 3515 00aa 1B78     	 ldrb r3,[r3]
 3516 00ac 154A     	 ldr r2,.L151
 3517 00ae 5343     	 mul r3,r2
 3518 00b0 373B     	 sub r3,r3,#55
 3519 00b2 FF3B     	 sub r3,r3,#255
 3520 00b4 181C     	 mov r0,r3
 3521 00b6 FFF7FEFF 	 bl __aeabi_i2f
 3522 00ba 031C     	 add r3,r0,#0
 3523 00bc 7868     	 ldr r0,[r7,#4]
 3524 00be 191C     	 add r1,r3,#0
 3525 00c0 FFF7FEFF 	 bl __aeabi_fsub
 3526 00c4 031C     	 add r3,r0,#0
 3527 00c6 201C     	 add r0,r4,#0
 3528 00c8 191C     	 add r1,r3,#0
 3529 00ca FFF7FEFF 	 bl __aeabi_fmul
 3530 00ce 031C     	 add r3,r0,#0
 3531 00d0 181C     	 add r0,r3,#0
 3532 00d2 0021     	 mov r1,#0
 3533 00d4 FFF7FEFF 	 bl __aeabi_fcmple
 3534 00d8 031E     	 sub r3,r0,#0
 3535 00da 01D0     	 beq .L143
 491:../main.c     **** 						return 1;
 3536              	 .loc 6 491 0
 3537 00dc 0123     	 mov r3,#1
 3538 00de 0CE0     	 b .L142
 3539              	.L143:
 482:../main.c     **** 		if(Angle > 0){
 3540              	 .loc 6 482 0 discriminator 2
 3541 00e0 0F23     	 mov r3,#15
 3542 00e2 FB18     	 add r3,r7,r3
 3543 00e4 1A78     	 ldrb r2,[r3]
 3544 00e6 0F23     	 mov r3,#15
 3545 00e8 FB18     	 add r3,r7,r3
 3546 00ea 0132     	 add r2,r2,#1
 3547 00ec 1A70     	 strb r2,[r3]
 3548              	.L138:
 482:../main.c     **** 		if(Angle > 0){
 3549              	 .loc 6 482 0 is_stmt 0 discriminator 1
 3550 00ee 0F23     	 mov r3,#15
 3551 00f0 FB18     	 add r3,r7,r3
 3552 00f2 1B78     	 ldrb r3,[r3]
 3553 00f4 022B     	 cmp r3,#2
 3554 00f6 8CD9     	 bls .L146
 492:../main.c     **** 			}
 493:../main.c     **** 		}
 494:../main.c     **** 	}
 495:../main.c     **** 
 496:../main.c     **** 	return 0;
 3555              	 .loc 6 496 0 is_stmt 1
 3556 00f8 0023     	 mov r3,#0
 3557              	.L142:
 497:../main.c     **** }
 3558              	 .loc 6 497 0
 3559 00fa 181C     	 mov r0,r3
 3560 00fc BD46     	 mov sp,r7
 3561 00fe 05B0     	 add sp,sp,#20
 3562              	 
 3563 0100 90BD     	 pop {r4,r7,pc}
 3564              	.L152:
 3565 0102 C046     	 .align 2
 3566              	.L151:
 3567 0104 98FEFFFF 	 .word -360
 3568              	 .cfi_endproc
 3569              	.LFE228:
 3571              	 .global __aeabi_fadd
 3572              	 .section .text.Exp_moving_average,"ax",%progbits
 3573              	 .align 2
 3574              	 .global Exp_moving_average
 3575              	 .code 16
 3576              	 .thumb_func
 3578              	Exp_moving_average:
 3579              	.LFB229:
 498:../main.c     **** 
 499:../main.c     **** float Exp_moving_average(float new_value, float value, float ALPHA){
 3580              	 .loc 6 499 0
 3581              	 .cfi_startproc
 3582 0000 90B5     	 push {r4,r7,lr}
 3583              	.LCFI45:
 3584              	 .cfi_def_cfa_offset 12
 3585              	 .cfi_offset 4,-12
 3586              	 .cfi_offset 7,-8
 3587              	 .cfi_offset 14,-4
 3588 0002 85B0     	 sub sp,sp,#20
 3589              	.LCFI46:
 3590              	 .cfi_def_cfa_offset 32
 3591 0004 00AF     	 add r7,sp,#0
 3592              	.LCFI47:
 3593              	 .cfi_def_cfa_register 7
 3594 0006 F860     	 str r0,[r7,#12]
 3595 0008 B960     	 str r1,[r7,#8]
 3596 000a 7A60     	 str r2,[r7,#4]
 500:../main.c     **** 	return new_value * ALPHA + (1 - ALPHA) * value;
 3597              	 .loc 6 500 0
 3598 000c F868     	 ldr r0,[r7,#12]
 3599 000e 7968     	 ldr r1,[r7,#4]
 3600 0010 FFF7FEFF 	 bl __aeabi_fmul
 3601 0014 031C     	 add r3,r0,#0
 3602 0016 1C1C     	 add r4,r3,#0
 3603 0018 FE20     	 mov r0,#254
 3604 001a 8005     	 lsl r0,r0,#22
 3605 001c 7968     	 ldr r1,[r7,#4]
 3606 001e FFF7FEFF 	 bl __aeabi_fsub
 3607 0022 031C     	 add r3,r0,#0
 3608 0024 181C     	 add r0,r3,#0
 3609 0026 B968     	 ldr r1,[r7,#8]
 3610 0028 FFF7FEFF 	 bl __aeabi_fmul
 3611 002c 031C     	 add r3,r0,#0
 3612 002e 201C     	 add r0,r4,#0
 3613 0030 191C     	 add r1,r3,#0
 3614 0032 FFF7FEFF 	 bl __aeabi_fadd
 3615 0036 031C     	 add r3,r0,#0
 501:../main.c     **** }
 3616              	 .loc 6 501 0
 3617 0038 181C     	 add r0,r3,#0
 3618 003a BD46     	 mov sp,r7
 3619 003c 05B0     	 add sp,sp,#20
 3620              	 
 3621 003e 90BD     	 pop {r4,r7,pc}
 3622              	 .cfi_endproc
 3623              	.LFE229:
 3625              	 .section .text.IRQ3_Handler,"ax",%progbits
 3626              	 .align 2
 3627              	 .global IRQ3_Handler
 3628              	 .code 16
 3629              	 .thumb_func
 3631              	IRQ3_Handler:
 3632              	.LFB230:
 502:../main.c     **** 
 503:../main.c     **** void CAN_RX_INVERTER_ISR(void) {
 3633              	 .loc 6 503 0
 3634              	 .cfi_startproc
 3635 0000 80B5     	 push {r7,lr}
 3636              	.LCFI48:
 3637              	 .cfi_def_cfa_offset 8
 3638              	 .cfi_offset 7,-8
 3639              	 .cfi_offset 14,-4
 3640 0002 00AF     	 add r7,sp,#0
 3641              	.LCFI49:
 3642              	 .cfi_def_cfa_register 7
 504:../main.c     **** 	WATCHDOG_Service();
 3643              	 .loc 6 504 0
 3644 0004 FFF7FEFF 	 bl WATCHDOG_Service
 505:../main.c     **** 	DIGITAL_IO_SetOutputLow(&WATCHDOG_LED_BLUE);
 3645              	 .loc 6 505 0
 3646 0008 094B     	 ldr r3,.L157
 3647 000a 181C     	 mov r0,r3
 3648 000c FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 506:../main.c     **** 
 507:../main.c     **** 	CAN_RX_Inverter_count++;
 3649              	 .loc 6 507 0
 3650 0010 084B     	 ldr r3,.L157+4
 3651 0012 1B78     	 ldrb r3,[r3]
 3652 0014 DBB2     	 uxtb r3,r3
 3653 0016 0133     	 add r3,r3,#1
 3654 0018 DAB2     	 uxtb r2,r3
 3655 001a 064B     	 ldr r3,.L157+4
 3656 001c 1A70     	 strb r2,[r3]
 508:../main.c     **** 	if(CAN_RX_Inverter_count == 4) CAN_RX_Inverter_Read_Data(); // read data after all for have revice
 3657              	 .loc 6 508 0
 3658 001e 054B     	 ldr r3,.L157+4
 3659 0020 1B78     	 ldrb r3,[r3]
 3660 0022 DBB2     	 uxtb r3,r3
 3661 0024 042B     	 cmp r3,#4
 3662 0026 01D1     	 bne .L155
 3663              	 .loc 6 508 0 is_stmt 0 discriminator 1
 3664 0028 FFF7FEFF 	 bl CAN_RX_Inverter_Read_Data
 3665              	.L155:
 509:../main.c     **** }
 3666              	 .loc 6 509 0 is_stmt 1
 3667 002c BD46     	 mov sp,r7
 3668              	 
 3669 002e 80BD     	 pop {r7,pc}
 3670              	.L158:
 3671              	 .align 2
 3672              	.L157:
 3673 0030 00000000 	 .word WATCHDOG_LED_BLUE
 3674 0034 00000000 	 .word CAN_RX_Inverter_count
 3675              	 .cfi_endproc
 3676              	.LFE230:
 3678              	 .section .text.CAN_RX_Inverter_Read_Data,"ax",%progbits
 3679              	 .align 2
 3680              	 .global CAN_RX_Inverter_Read_Data
 3681              	 .code 16
 3682              	 .thumb_func
 3684              	CAN_RX_Inverter_Read_Data:
 3685              	.LFB231:
 510:../main.c     **** 
 511:../main.c     **** void CAN_RX_Inverter_Read_Data(){
 3686              	 .loc 6 511 0
 3687              	 .cfi_startproc
 3688 0000 90B5     	 push {r4,r7,lr}
 3689              	.LCFI50:
 3690              	 .cfi_def_cfa_offset 12
 3691              	 .cfi_offset 4,-12
 3692              	 .cfi_offset 7,-8
 3693              	 .cfi_offset 14,-4
 3694 0002 89B0     	 sub sp,sp,#36
 3695              	.LCFI51:
 3696              	 .cfi_def_cfa_offset 48
 3697 0004 00AF     	 add r7,sp,#0
 3698              	.LCFI52:
 3699              	 .cfi_def_cfa_register 7
 512:../main.c     **** 	uint8_t Motor_on_rover;
 513:../main.c     **** 	for(Motor_on_rover = 0; Motor_on_rover < 4; Motor_on_rover ++){
 3700              	 .loc 6 513 0
 3701 0006 1F23     	 mov r3,#31
 3702 0008 FB18     	 add r3,r7,r3
 3703 000a 0022     	 mov r2,#0
 3704 000c 1A70     	 strb r2,[r3]
 3705 000e 03E1     	 b .L160
 3706              	.L170:
 3707              	.LBB2:
 514:../main.c     **** 		XMC_CAN_MO_t* lmsgobjct_ptr_1 = CAN_NODE_0.lmobj_ptr[Motor_on_rover + 2]->mo_ptr;
 3708              	 .loc 6 514 0
 3709 0010 1F23     	 mov r3,#31
 3710 0012 FB18     	 add r3,r7,r3
 3711 0014 1B78     	 ldrb r3,[r3]
 3712 0016 0233     	 add r3,r3,#2
 3713 0018 944A     	 ldr r2,.L171
 3714 001a 0233     	 add r3,r3,#2
 3715 001c 9B00     	 lsl r3,r3,#2
 3716 001e D318     	 add r3,r2,r3
 3717 0020 5B68     	 ldr r3,[r3,#4]
 3718 0022 1B68     	 ldr r3,[r3]
 3719 0024 BB61     	 str r3,[r7,#24]
 515:../main.c     **** 		CAN_NODE_MO_Receive((void*) CAN_NODE_0.lmobj_ptr[Motor_on_rover + 2]);
 3720              	 .loc 6 515 0
 3721 0026 1F23     	 mov r3,#31
 3722 0028 FB18     	 add r3,r7,r3
 3723 002a 1B78     	 ldrb r3,[r3]
 3724 002c 0233     	 add r3,r3,#2
 3725 002e 8F4A     	 ldr r2,.L171
 3726 0030 0233     	 add r3,r3,#2
 3727 0032 9B00     	 lsl r3,r3,#2
 3728 0034 D318     	 add r3,r2,r3
 3729 0036 5B68     	 ldr r3,[r3,#4]
 3730 0038 181C     	 mov r0,r3
 3731 003a FFF7FEFF 	 bl CAN_NODE_MO_Receive
 516:../main.c     **** 
 517:../main.c     **** 		uint8_t data_RX[8];
 518:../main.c     **** 		uint8_t i;
 519:../main.c     **** 		for(i = 0 ; i < 8 ; i ++){
 3732              	 .loc 6 519 0
 3733 003e 1E23     	 mov r3,#30
 3734 0040 FB18     	 add r3,r7,r3
 3735 0042 0022     	 mov r2,#0
 3736 0044 1A70     	 strb r2,[r3]
 3737 0046 12E0     	 b .L161
 3738              	.L162:
 520:../main.c     **** 			 data_RX[i] = lmsgobjct_ptr_1->can_data_byte[i];
 3739              	 .loc 6 520 0 discriminator 3
 3740 0048 1E23     	 mov r3,#30
 3741 004a FB18     	 add r3,r7,r3
 3742 004c 1B78     	 ldrb r3,[r3]
 3743 004e 1E22     	 mov r2,#30
 3744 0050 BA18     	 add r2,r7,r2
 3745 0052 1278     	 ldrb r2,[r2]
 3746 0054 B969     	 ldr r1,[r7,#24]
 3747 0056 8A18     	 add r2,r1,r2
 3748 0058 117C     	 ldrb r1,[r2,#16]
 3749 005a 0C22     	 mov r2,#12
 3750 005c BA18     	 add r2,r7,r2
 3751 005e D154     	 strb r1,[r2,r3]
 519:../main.c     **** 			 data_RX[i] = lmsgobjct_ptr_1->can_data_byte[i];
 3752              	 .loc 6 519 0 discriminator 3
 3753 0060 1E23     	 mov r3,#30
 3754 0062 FB18     	 add r3,r7,r3
 3755 0064 1A78     	 ldrb r2,[r3]
 3756 0066 1E23     	 mov r3,#30
 3757 0068 FB18     	 add r3,r7,r3
 3758 006a 0132     	 add r2,r2,#1
 3759 006c 1A70     	 strb r2,[r3]
 3760              	.L161:
 519:../main.c     **** 			 data_RX[i] = lmsgobjct_ptr_1->can_data_byte[i];
 3761              	 .loc 6 519 0 is_stmt 0 discriminator 1
 3762 006e 1E23     	 mov r3,#30
 3763 0070 FB18     	 add r3,r7,r3
 3764 0072 1B78     	 ldrb r3,[r3]
 3765 0074 072B     	 cmp r3,#7
 3766 0076 E7D9     	 bls .L162
 521:../main.c     **** 		}
 522:../main.c     **** 
 523:../main.c     **** 		uint8_t Motor_on_rover_RX = (data_RX[0 * 2 + 1] << 8) | data_RX[0 * 2];
 3767              	 .loc 6 523 0 is_stmt 1
 3768 0078 0C23     	 mov r3,#12
 3769 007a FB18     	 add r3,r7,r3
 3770 007c 5B78     	 ldrb r3,[r3,#1]
 3771 007e 1B02     	 lsl r3,r3,#8
 3772 0080 DAB2     	 uxtb r2,r3
 3773 0082 0C23     	 mov r3,#12
 3774 0084 FB18     	 add r3,r7,r3
 3775 0086 1B78     	 ldrb r3,[r3]
 3776 0088 DBB2     	 uxtb r3,r3
 3777 008a 1343     	 orr r3,r2
 3778 008c DAB2     	 uxtb r2,r3
 3779 008e 1723     	 mov r3,#23
 3780 0090 FB18     	 add r3,r7,r3
 3781 0092 1A70     	 strb r2,[r3]
 524:../main.c     **** 		if(Motor_on_rover_RX == Motor_on_rover){
 3782              	 .loc 6 524 0
 3783 0094 1723     	 mov r3,#23
 3784 0096 FA18     	 add r2,r7,r3
 3785 0098 1F23     	 mov r3,#31
 3786 009a FB18     	 add r3,r7,r3
 3787 009c 1278     	 ldrb r2,[r2]
 3788 009e 1B78     	 ldrb r3,[r3]
 3789 00a0 9A42     	 cmp r2,r3
 3790 00a2 00D0     	 beq .LCB3009
 3791 00a4 ADE0     	 b .L163
 3792              	.LCB3009:
 3793              	.LBB3:
 525:../main.c     **** 			DIGITAL_IO_SetOutputLow(&LED_CAN_ERROR);
 3794              	 .loc 6 525 0
 3795 00a6 724B     	 ldr r3,.L171+4
 3796 00a8 181C     	 mov r0,r3
 3797 00aa FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 526:../main.c     **** 
 527:../main.c     **** 			uint8_t i;
 528:../main.c     **** 			int16_t values_int16[3] = {0};
 3798              	 .loc 6 528 0
 3799 00ae 3B1D     	 add r3,r7,#4
 3800 00b0 0022     	 mov r2,#0
 3801 00b2 1A60     	 str r2,[r3]
 3802 00b4 0022     	 mov r2,#0
 3803 00b6 9A80     	 strh r2,[r3,#4]
 529:../main.c     **** 			for(i = 1 ; i < 4 ; i ++){
 3804              	 .loc 6 529 0
 3805 00b8 1D23     	 mov r3,#29
 3806 00ba FB18     	 add r3,r7,r3
 3807 00bc 0122     	 mov r2,#1
 3808 00be 1A70     	 strb r2,[r3]
 3809 00c0 6BE0     	 b .L164
 3810              	.L168:
 530:../main.c     **** 				 if(i == 1) values_int16[i - 1] = (data_RX[i * 2 + 1] << 8) | data_RX[i * 2];
 3811              	 .loc 6 530 0
 3812 00c2 1D23     	 mov r3,#29
 3813 00c4 FB18     	 add r3,r7,r3
 3814 00c6 1B78     	 ldrb r3,[r3]
 3815 00c8 012B     	 cmp r3,#1
 3816 00ca 1CD1     	 bne .L165
 3817              	 .loc 6 530 0 is_stmt 0 discriminator 1
 3818 00cc 1D23     	 mov r3,#29
 3819 00ce FB18     	 add r3,r7,r3
 3820 00d0 1B78     	 ldrb r3,[r3]
 3821 00d2 5A1E     	 sub r2,r3,#1
 3822 00d4 1D23     	 mov r3,#29
 3823 00d6 FB18     	 add r3,r7,r3
 3824 00d8 1B78     	 ldrb r3,[r3]
 3825 00da 5B00     	 lsl r3,r3,#1
 3826 00dc 0133     	 add r3,r3,#1
 3827 00de 0C21     	 mov r1,#12
 3828 00e0 7918     	 add r1,r7,r1
 3829 00e2 CB5C     	 ldrb r3,[r1,r3]
 3830 00e4 1B02     	 lsl r3,r3,#8
 3831 00e6 98B2     	 uxth r0,r3
 3832 00e8 1D23     	 mov r3,#29
 3833 00ea FB18     	 add r3,r7,r3
 3834 00ec 1B78     	 ldrb r3,[r3]
 3835 00ee 5B00     	 lsl r3,r3,#1
 3836 00f0 0C21     	 mov r1,#12
 3837 00f2 7918     	 add r1,r7,r1
 3838 00f4 CB5C     	 ldrb r3,[r1,r3]
 3839 00f6 9BB2     	 uxth r3,r3
 3840 00f8 011C     	 add r1,r0,#0
 3841 00fa 0B43     	 orr r3,r1
 3842 00fc 99B2     	 uxth r1,r3
 3843 00fe 3B1D     	 add r3,r7,#4
 3844 0100 5200     	 lsl r2,r2,#1
 3845 0102 D152     	 strh r1,[r2,r3]
 3846 0104 42E0     	 b .L166
 3847              	.L165:
 531:../main.c     **** 				 else if(i == 2) values_int16[i - 1] = (data_RX[i * 2 + 1] << 8) | data_RX[i * 2];
 3848              	 .loc 6 531 0 is_stmt 1
 3849 0106 1D23     	 mov r3,#29
 3850 0108 FB18     	 add r3,r7,r3
 3851 010a 1B78     	 ldrb r3,[r3]
 3852 010c 022B     	 cmp r3,#2
 3853 010e 1CD1     	 bne .L167
 3854              	 .loc 6 531 0 is_stmt 0 discriminator 1
 3855 0110 1D23     	 mov r3,#29
 3856 0112 FB18     	 add r3,r7,r3
 3857 0114 1B78     	 ldrb r3,[r3]
 3858 0116 5A1E     	 sub r2,r3,#1
 3859 0118 1D23     	 mov r3,#29
 3860 011a FB18     	 add r3,r7,r3
 3861 011c 1B78     	 ldrb r3,[r3]
 3862 011e 5B00     	 lsl r3,r3,#1
 3863 0120 0133     	 add r3,r3,#1
 3864 0122 0C21     	 mov r1,#12
 3865 0124 7918     	 add r1,r7,r1
 3866 0126 CB5C     	 ldrb r3,[r1,r3]
 3867 0128 1B02     	 lsl r3,r3,#8
 3868 012a 98B2     	 uxth r0,r3
 3869 012c 1D23     	 mov r3,#29
 3870 012e FB18     	 add r3,r7,r3
 3871 0130 1B78     	 ldrb r3,[r3]
 3872 0132 5B00     	 lsl r3,r3,#1
 3873 0134 0C21     	 mov r1,#12
 3874 0136 7918     	 add r1,r7,r1
 3875 0138 CB5C     	 ldrb r3,[r1,r3]
 3876 013a 9BB2     	 uxth r3,r3
 3877 013c 011C     	 add r1,r0,#0
 3878 013e 0B43     	 orr r3,r1
 3879 0140 99B2     	 uxth r1,r3
 3880 0142 3B1D     	 add r3,r7,#4
 3881 0144 5200     	 lsl r2,r2,#1
 3882 0146 D152     	 strh r1,[r2,r3]
 3883 0148 20E0     	 b .L166
 3884              	.L167:
 532:../main.c     **** 				 else if(i == 3) values_int16[i - 1] = (data_RX[i * 2 + 1] << 8) | data_RX[i * 2];
 3885              	 .loc 6 532 0 is_stmt 1
 3886 014a 1D23     	 mov r3,#29
 3887 014c FB18     	 add r3,r7,r3
 3888 014e 1B78     	 ldrb r3,[r3]
 3889 0150 032B     	 cmp r3,#3
 3890 0152 1BD1     	 bne .L166
 3891              	 .loc 6 532 0 is_stmt 0 discriminator 1
 3892 0154 1D23     	 mov r3,#29
 3893 0156 FB18     	 add r3,r7,r3
 3894 0158 1B78     	 ldrb r3,[r3]
 3895 015a 5A1E     	 sub r2,r3,#1
 3896 015c 1D23     	 mov r3,#29
 3897 015e FB18     	 add r3,r7,r3
 3898 0160 1B78     	 ldrb r3,[r3]
 3899 0162 5B00     	 lsl r3,r3,#1
 3900 0164 0133     	 add r3,r3,#1
 3901 0166 0C21     	 mov r1,#12
 3902 0168 7918     	 add r1,r7,r1
 3903 016a CB5C     	 ldrb r3,[r1,r3]
 3904 016c 1B02     	 lsl r3,r3,#8
 3905 016e 98B2     	 uxth r0,r3
 3906 0170 1D23     	 mov r3,#29
 3907 0172 FB18     	 add r3,r7,r3
 3908 0174 1B78     	 ldrb r3,[r3]
 3909 0176 5B00     	 lsl r3,r3,#1
 3910 0178 0C21     	 mov r1,#12
 3911 017a 7918     	 add r1,r7,r1
 3912 017c CB5C     	 ldrb r3,[r1,r3]
 3913 017e 9BB2     	 uxth r3,r3
 3914 0180 011C     	 add r1,r0,#0
 3915 0182 0B43     	 orr r3,r1
 3916 0184 99B2     	 uxth r1,r3
 3917 0186 3B1D     	 add r3,r7,#4
 3918 0188 5200     	 lsl r2,r2,#1
 3919 018a D152     	 strh r1,[r2,r3]
 3920              	.L166:
 529:../main.c     **** 				 if(i == 1) values_int16[i - 1] = (data_RX[i * 2 + 1] << 8) | data_RX[i * 2];
 3921              	 .loc 6 529 0 is_stmt 1 discriminator 2
 3922 018c 1D23     	 mov r3,#29
 3923 018e FB18     	 add r3,r7,r3
 3924 0190 1A78     	 ldrb r2,[r3]
 3925 0192 1D23     	 mov r3,#29
 3926 0194 FB18     	 add r3,r7,r3
 3927 0196 0132     	 add r2,r2,#1
 3928 0198 1A70     	 strb r2,[r3]
 3929              	.L164:
 529:../main.c     **** 				 if(i == 1) values_int16[i - 1] = (data_RX[i * 2 + 1] << 8) | data_RX[i * 2];
 3930              	 .loc 6 529 0 is_stmt 0 discriminator 1
 3931 019a 1D23     	 mov r3,#29
 3932 019c FB18     	 add r3,r7,r3
 3933 019e 1B78     	 ldrb r3,[r3]
 3934 01a0 032B     	 cmp r3,#3
 3935 01a2 8ED9     	 bls .L168
 533:../main.c     **** 			 }
 534:../main.c     **** 
 535:../main.c     **** 			Inveter_CAN_OK[Motor_on_rover] = values_int16[0];
 3936              	 .loc 6 535 0 is_stmt 1
 3937 01a4 1F23     	 mov r3,#31
 3938 01a6 FB18     	 add r3,r7,r3
 3939 01a8 1B78     	 ldrb r3,[r3]
 3940 01aa 3A1D     	 add r2,r7,#4
 3941 01ac 1288     	 ldrh r2,[r2]
 3942 01ae D1B2     	 uxtb r1,r2
 3943 01b0 304A     	 ldr r2,.L171+8
 3944 01b2 D154     	 strb r1,[r2,r3]
 536:../main.c     **** 			Actual_Speeds[Motor_on_rover] = (float)values_int16[1] / 1000;
 3945              	 .loc 6 536 0
 3946 01b4 1F23     	 mov r3,#31
 3947 01b6 FB18     	 add r3,r7,r3
 3948 01b8 1C78     	 ldrb r4,[r3]
 3949 01ba 3B1D     	 add r3,r7,#4
 3950 01bc 5B88     	 ldrh r3,[r3,#2]
 3951 01be 1BB2     	 sxth r3,r3
 3952 01c0 181C     	 mov r0,r3
 3953 01c2 FFF7FEFF 	 bl __aeabi_i2f
 3954 01c6 031C     	 add r3,r0,#0
 3955 01c8 181C     	 add r0,r3,#0
 3956 01ca 2B49     	 ldr r1,.L171+12
 3957 01cc FFF7FEFF 	 bl __aeabi_fdiv
 3958 01d0 031C     	 add r3,r0,#0
 3959 01d2 191C     	 add r1,r3,#0
 3960 01d4 294B     	 ldr r3,.L171+16
 3961 01d6 A200     	 lsl r2,r4,#2
 3962 01d8 D150     	 str r1,[r2,r3]
 537:../main.c     **** 			Actual_Distance[Motor_on_rover] = (float)values_int16[2] / 1000;
 3963              	 .loc 6 537 0
 3964 01da 1F23     	 mov r3,#31
 3965 01dc FB18     	 add r3,r7,r3
 3966 01de 1C78     	 ldrb r4,[r3]
 3967 01e0 3B1D     	 add r3,r7,#4
 3968 01e2 9B88     	 ldrh r3,[r3,#4]
 3969 01e4 1BB2     	 sxth r3,r3
 3970 01e6 181C     	 mov r0,r3
 3971 01e8 FFF7FEFF 	 bl __aeabi_i2f
 3972 01ec 031C     	 add r3,r0,#0
 3973 01ee 181C     	 add r0,r3,#0
 3974 01f0 2149     	 ldr r1,.L171+12
 3975 01f2 FFF7FEFF 	 bl __aeabi_fdiv
 3976 01f6 031C     	 add r3,r0,#0
 3977 01f8 191C     	 add r1,r3,#0
 3978 01fa 214B     	 ldr r3,.L171+20
 3979 01fc A200     	 lsl r2,r4,#2
 3980 01fe D150     	 str r1,[r2,r3]
 3981              	.LBE3:
 3982 0200 03E0     	 b .L169
 3983              	.L163:
 538:../main.c     **** 
 539:../main.c     **** 
 540:../main.c     **** 			}
 541:../main.c     **** 		else DIGITAL_IO_SetOutputHigh(&LED_CAN_ERROR);
 3984              	 .loc 6 541 0
 3985 0202 1B4B     	 ldr r3,.L171+4
 3986 0204 181C     	 mov r0,r3
 3987 0206 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 3988              	.L169:
 3989              	.LBE2:
 513:../main.c     **** 		XMC_CAN_MO_t* lmsgobjct_ptr_1 = CAN_NODE_0.lmobj_ptr[Motor_on_rover + 2]->mo_ptr;
 3990              	 .loc 6 513 0 discriminator 1
 3991 020a 1F23     	 mov r3,#31
 3992 020c FB18     	 add r3,r7,r3
 3993 020e 1A78     	 ldrb r2,[r3]
 3994 0210 1F23     	 mov r3,#31
 3995 0212 FB18     	 add r3,r7,r3
 3996 0214 0132     	 add r2,r2,#1
 3997 0216 1A70     	 strb r2,[r3]
 3998              	.L160:
 513:../main.c     **** 		XMC_CAN_MO_t* lmsgobjct_ptr_1 = CAN_NODE_0.lmobj_ptr[Motor_on_rover + 2]->mo_ptr;
 3999              	 .loc 6 513 0 is_stmt 0 discriminator 2
 4000 0218 1F23     	 mov r3,#31
 4001 021a FB18     	 add r3,r7,r3
 4002 021c 1B78     	 ldrb r3,[r3]
 4003 021e 032B     	 cmp r3,#3
 4004 0220 00D8     	 bhi .LCB3216
 4005 0222 F5E6     	 b .L170
 4006              	.LCB3216:
 542:../main.c     **** 	}
 543:../main.c     **** 
 544:../main.c     **** 	speed_fl_act = Actual_Speeds[0];
 4007              	 .loc 6 544 0 is_stmt 1
 4008 0224 154B     	 ldr r3,.L171+16
 4009 0226 1A68     	 ldr r2,[r3]
 4010 0228 164B     	 ldr r3,.L171+24
 4011 022a 1A60     	 str r2,[r3]
 545:../main.c     **** 	speed_fr_act = Actual_Speeds[1];
 4012              	 .loc 6 545 0
 4013 022c 134B     	 ldr r3,.L171+16
 4014 022e 5A68     	 ldr r2,[r3,#4]
 4015 0230 154B     	 ldr r3,.L171+28
 4016 0232 1A60     	 str r2,[r3]
 546:../main.c     **** 	speed_rl_act = Actual_Speeds[2];
 4017              	 .loc 6 546 0
 4018 0234 114B     	 ldr r3,.L171+16
 4019 0236 9A68     	 ldr r2,[r3,#8]
 4020 0238 144B     	 ldr r3,.L171+32
 4021 023a 1A60     	 str r2,[r3]
 547:../main.c     **** 	speed_rr_act = Actual_Speeds[3];
 4022              	 .loc 6 547 0
 4023 023c 0F4B     	 ldr r3,.L171+16
 4024 023e DA68     	 ldr r2,[r3,#12]
 4025 0240 134B     	 ldr r3,.L171+36
 4026 0242 1A60     	 str r2,[r3]
 548:../main.c     **** 
 549:../main.c     **** 	distance_fl_act = Actual_Distance[0];
 4027              	 .loc 6 549 0
 4028 0244 0E4B     	 ldr r3,.L171+20
 4029 0246 1A68     	 ldr r2,[r3]
 4030 0248 124B     	 ldr r3,.L171+40
 4031 024a 1A60     	 str r2,[r3]
 550:../main.c     **** 	distance_fr_act = Actual_Distance[1];
 4032              	 .loc 6 550 0
 4033 024c 0C4B     	 ldr r3,.L171+20
 4034 024e 5A68     	 ldr r2,[r3,#4]
 4035 0250 114B     	 ldr r3,.L171+44
 4036 0252 1A60     	 str r2,[r3]
 551:../main.c     **** 	distance_rl_act = Actual_Distance[2];
 4037              	 .loc 6 551 0
 4038 0254 0A4B     	 ldr r3,.L171+20
 4039 0256 9A68     	 ldr r2,[r3,#8]
 4040 0258 104B     	 ldr r3,.L171+48
 4041 025a 1A60     	 str r2,[r3]
 552:../main.c     **** 	distance_rr_act = Actual_Distance[3];
 4042              	 .loc 6 552 0
 4043 025c 084B     	 ldr r3,.L171+20
 4044 025e DA68     	 ldr r2,[r3,#12]
 4045 0260 0F4B     	 ldr r3,.L171+52
 4046 0262 1A60     	 str r2,[r3]
 553:../main.c     **** 
 554:../main.c     **** }
 4047              	 .loc 6 554 0
 4048 0264 BD46     	 mov sp,r7
 4049 0266 09B0     	 add sp,sp,#36
 4050              	 
 4051 0268 90BD     	 pop {r4,r7,pc}
 4052              	.L172:
 4053 026a C046     	 .align 2
 4054              	.L171:
 4055 026c 00000000 	 .word CAN_NODE_0
 4056 0270 00000000 	 .word LED_CAN_ERROR
 4057 0274 00000000 	 .word Inveter_CAN_OK
 4058 0278 00007A44 	 .word 1148846080
 4059 027c 00000000 	 .word Actual_Speeds
 4060 0280 00000000 	 .word Actual_Distance
 4061 0284 00000000 	 .word speed_fl_act
 4062 0288 00000000 	 .word speed_fr_act
 4063 028c 00000000 	 .word speed_rl_act
 4064 0290 00000000 	 .word speed_rr_act
 4065 0294 00000000 	 .word distance_fl_act
 4066 0298 00000000 	 .word distance_fr_act
 4067 029c 00000000 	 .word distance_rl_act
 4068 02a0 00000000 	 .word distance_rr_act
 4069              	 .cfi_endproc
 4070              	.LFE231:
 4072              	 .section .text.Watchdog_Handler,"ax",%progbits
 4073              	 .align 2
 4074              	 .global Watchdog_Handler
 4075              	 .code 16
 4076              	 .thumb_func
 4078              	Watchdog_Handler:
 4079              	.LFB232:
 555:../main.c     **** 
 556:../main.c     **** void Watchdog_Handler(void) // to do restates if can is not working a problem wenn power from the b
 557:../main.c     **** {
 4080              	 .loc 6 557 0
 4081              	 .cfi_startproc
 4082 0000 80B5     	 push {r7,lr}
 4083              	.LCFI53:
 4084              	 .cfi_def_cfa_offset 8
 4085              	 .cfi_offset 7,-8
 4086              	 .cfi_offset 14,-4
 4087 0002 00AF     	 add r7,sp,#0
 4088              	.LCFI54:
 4089              	 .cfi_def_cfa_register 7
 558:../main.c     ****   WATCHDOG_ClearAlarm(); /* Clear the alarm event */
 4090              	 .loc 6 558 0
 4091 0004 FFF7FEFF 	 bl WATCHDOG_ClearAlarm
 559:../main.c     ****   DIGITAL_IO_SetOutputHigh(&WATCHDOG_LED_BLUE);
 4092              	 .loc 6 559 0
 4093 0008 024B     	 ldr r3,.L174
 4094 000a 181C     	 mov r0,r3
 4095 000c FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 560:../main.c     **** }
 4096              	 .loc 6 560 0
 4097 0010 BD46     	 mov sp,r7
 4098              	 
 4099 0012 80BD     	 pop {r7,pc}
 4100              	.L175:
 4101              	 .align 2
 4102              	.L174:
 4103 0014 00000000 	 .word WATCHDOG_LED_BLUE
 4104              	 .cfi_endproc
 4105              	.LFE232:
 4107              	 .section .text.CAN_reset_distance,"ax",%progbits
 4108              	 .align 2
 4109              	 .global CAN_reset_distance
 4110              	 .code 16
 4111              	 .thumb_func
 4113              	CAN_reset_distance:
 4114              	.LFB233:
 561:../main.c     **** 
 562:../main.c     **** void CAN_reset_distance(uint8_t distance_to_reset[4]){
 4115              	 .loc 6 562 0
 4116              	 .cfi_startproc
 4117 0000 80B5     	 push {r7,lr}
 4118              	.LCFI55:
 4119              	 .cfi_def_cfa_offset 8
 4120              	 .cfi_offset 7,-8
 4121              	 .cfi_offset 14,-4
 4122 0002 86B0     	 sub sp,sp,#24
 4123              	.LCFI56:
 4124              	 .cfi_def_cfa_offset 32
 4125 0004 00AF     	 add r7,sp,#0
 4126              	.LCFI57:
 4127              	 .cfi_def_cfa_register 7
 4128 0006 7860     	 str r0,[r7,#4]
 563:../main.c     **** 	uint8_t TX[8] ={0};
 4129              	 .loc 6 563 0
 4130 0008 0C23     	 mov r3,#12
 4131 000a FB18     	 add r3,r7,r3
 4132 000c 0022     	 mov r2,#0
 4133 000e 1A60     	 str r2,[r3]
 4134 0010 0022     	 mov r2,#0
 4135 0012 5A60     	 str r2,[r3,#4]
 564:../main.c     **** 	uint8_t i;
 565:../main.c     **** 	for(i = 0; i < 4; i++){	TX[i] = distance_to_reset[i];}
 4136              	 .loc 6 565 0
 4137 0014 1723     	 mov r3,#23
 4138 0016 FB18     	 add r3,r7,r3
 4139 0018 0022     	 mov r2,#0
 4140 001a 1A70     	 strb r2,[r3]
 4141 001c 12E0     	 b .L177
 4142              	.L178:
 4143              	 .loc 6 565 0 is_stmt 0 discriminator 3
 4144 001e 1723     	 mov r3,#23
 4145 0020 FB18     	 add r3,r7,r3
 4146 0022 1B78     	 ldrb r3,[r3]
 4147 0024 1722     	 mov r2,#23
 4148 0026 BA18     	 add r2,r7,r2
 4149 0028 1278     	 ldrb r2,[r2]
 4150 002a 7968     	 ldr r1,[r7,#4]
 4151 002c 8A18     	 add r2,r1,r2
 4152 002e 1178     	 ldrb r1,[r2]
 4153 0030 0C22     	 mov r2,#12
 4154 0032 BA18     	 add r2,r7,r2
 4155 0034 D154     	 strb r1,[r2,r3]
 4156 0036 1723     	 mov r3,#23
 4157 0038 FB18     	 add r3,r7,r3
 4158 003a 1A78     	 ldrb r2,[r3]
 4159 003c 1723     	 mov r3,#23
 4160 003e FB18     	 add r3,r7,r3
 4161 0040 0132     	 add r2,r2,#1
 4162 0042 1A70     	 strb r2,[r3]
 4163              	.L177:
 4164              	 .loc 6 565 0 discriminator 1
 4165 0044 1723     	 mov r3,#23
 4166 0046 FB18     	 add r3,r7,r3
 4167 0048 1B78     	 ldrb r3,[r3]
 4168 004a 032B     	 cmp r3,#3
 4169 004c E7D9     	 bls .L178
 566:../main.c     **** 
 567:../main.c     **** 	CAN_NODE_MO_UpdateData((void*) CAN_NODE_0.lmobj_ptr[1], (uint8_t*)TX);
 4170              	 .loc 6 567 0 is_stmt 1
 4171 004e 084B     	 ldr r3,.L179
 4172 0050 1A69     	 ldr r2,[r3,#16]
 4173 0052 0C23     	 mov r3,#12
 4174 0054 FB18     	 add r3,r7,r3
 4175 0056 101C     	 mov r0,r2
 4176 0058 191C     	 mov r1,r3
 4177 005a FFF7FEFF 	 bl CAN_NODE_MO_UpdateData
 568:../main.c     **** 	CAN_NODE_MO_Transmit((void*) CAN_NODE_0.lmobj_ptr[1]); //Transmit the data of message object1
 4178              	 .loc 6 568 0
 4179 005e 044B     	 ldr r3,.L179
 4180 0060 1B69     	 ldr r3,[r3,#16]
 4181 0062 181C     	 mov r0,r3
 4182 0064 FFF7FEFF 	 bl CAN_NODE_MO_Transmit
 569:../main.c     **** }
 4183              	 .loc 6 569 0
 4184 0068 BD46     	 mov sp,r7
 4185 006a 06B0     	 add sp,sp,#24
 4186              	 
 4187 006c 80BD     	 pop {r7,pc}
 4188              	.L180:
 4189 006e C046     	 .align 2
 4190              	.L179:
 4191 0070 00000000 	 .word CAN_NODE_0
 4192              	 .cfi_endproc
 4193              	.LFE233:
 4195              	 .global __aeabi_f2iz
 4196              	 .section .text.CAN_send_Speeds,"ax",%progbits
 4197              	 .align 2
 4198              	 .global CAN_send_Speeds
 4199              	 .code 16
 4200              	 .thumb_func
 4202              	CAN_send_Speeds:
 4203              	.LFB234:
 570:../main.c     **** 
 571:../main.c     **** void CAN_send_Speeds(float Speed_data[4]){
 4204              	 .loc 6 571 0
 4205              	 .cfi_startproc
 4206 0000 80B5     	 push {r7,lr}
 4207              	.LCFI58:
 4208              	 .cfi_def_cfa_offset 8
 4209              	 .cfi_offset 7,-8
 4210              	 .cfi_offset 14,-4
 4211 0002 84B0     	 sub sp,sp,#16
 4212              	.LCFI59:
 4213              	 .cfi_def_cfa_offset 24
 4214 0004 00AF     	 add r7,sp,#0
 4215              	.LCFI60:
 4216              	 .cfi_def_cfa_register 7
 4217 0006 7860     	 str r0,[r7,#4]
 572:../main.c     **** 
 573:../main.c     **** 	int16_t Speeds_int16[4] ={Speed_data[0] *1000, Speed_data[1] *1000, Speed_data[2] *1000, Speed_dat
 4218              	 .loc 6 573 0
 4219 0008 7B68     	 ldr r3,[r7,#4]
 4220 000a 1B68     	 ldr r3,[r3]
 4221 000c 181C     	 add r0,r3,#0
 4222 000e 2649     	 ldr r1,.L182
 4223 0010 FFF7FEFF 	 bl __aeabi_fmul
 4224 0014 031C     	 add r3,r0,#0
 4225 0016 181C     	 add r0,r3,#0
 4226 0018 FFF7FEFF 	 bl __aeabi_f2iz
 4227 001c 031C     	 mov r3,r0
 4228 001e 9AB2     	 uxth r2,r3
 4229 0020 0823     	 mov r3,#8
 4230 0022 FB18     	 add r3,r7,r3
 4231 0024 1A80     	 strh r2,[r3]
 4232 0026 7B68     	 ldr r3,[r7,#4]
 4233 0028 0433     	 add r3,r3,#4
 4234 002a 1B68     	 ldr r3,[r3]
 4235 002c 181C     	 add r0,r3,#0
 4236 002e 1E49     	 ldr r1,.L182
 4237 0030 FFF7FEFF 	 bl __aeabi_fmul
 4238 0034 031C     	 add r3,r0,#0
 4239 0036 181C     	 add r0,r3,#0
 4240 0038 FFF7FEFF 	 bl __aeabi_f2iz
 4241 003c 031C     	 mov r3,r0
 4242 003e 9AB2     	 uxth r2,r3
 4243 0040 0823     	 mov r3,#8
 4244 0042 FB18     	 add r3,r7,r3
 4245 0044 5A80     	 strh r2,[r3,#2]
 4246 0046 7B68     	 ldr r3,[r7,#4]
 4247 0048 0833     	 add r3,r3,#8
 4248 004a 1B68     	 ldr r3,[r3]
 4249 004c 181C     	 add r0,r3,#0
 4250 004e 1649     	 ldr r1,.L182
 4251 0050 FFF7FEFF 	 bl __aeabi_fmul
 4252 0054 031C     	 add r3,r0,#0
 4253 0056 181C     	 add r0,r3,#0
 4254 0058 FFF7FEFF 	 bl __aeabi_f2iz
 4255 005c 031C     	 mov r3,r0
 4256 005e 9AB2     	 uxth r2,r3
 4257 0060 0823     	 mov r3,#8
 4258 0062 FB18     	 add r3,r7,r3
 4259 0064 9A80     	 strh r2,[r3,#4]
 4260 0066 7B68     	 ldr r3,[r7,#4]
 4261 0068 0C33     	 add r3,r3,#12
 4262 006a 1B68     	 ldr r3,[r3]
 4263 006c 181C     	 add r0,r3,#0
 4264 006e 0E49     	 ldr r1,.L182
 4265 0070 FFF7FEFF 	 bl __aeabi_fmul
 4266 0074 031C     	 add r3,r0,#0
 4267 0076 181C     	 add r0,r3,#0
 4268 0078 FFF7FEFF 	 bl __aeabi_f2iz
 4269 007c 031C     	 mov r3,r0
 4270 007e 9AB2     	 uxth r2,r3
 4271 0080 0823     	 mov r3,#8
 4272 0082 FB18     	 add r3,r7,r3
 4273 0084 DA80     	 strh r2,[r3,#6]
 574:../main.c     **** 
 575:../main.c     **** 	CAN_NODE_MO_UpdateData((void*) CAN_NODE_0.lmobj_ptr[0], (uint8_t*)Speeds_int16);
 4274              	 .loc 6 575 0
 4275 0086 094B     	 ldr r3,.L182+4
 4276 0088 DA68     	 ldr r2,[r3,#12]
 4277 008a 0823     	 mov r3,#8
 4278 008c FB18     	 add r3,r7,r3
 4279 008e 101C     	 mov r0,r2
 4280 0090 191C     	 mov r1,r3
 4281 0092 FFF7FEFF 	 bl CAN_NODE_MO_UpdateData
 576:../main.c     **** 	CAN_NODE_MO_Transmit((void*) CAN_NODE_0.lmobj_ptr[0]); //Transmit the data of message object1
 4282              	 .loc 6 576 0
 4283 0096 054B     	 ldr r3,.L182+4
 4284 0098 DB68     	 ldr r3,[r3,#12]
 4285 009a 181C     	 mov r0,r3
 4286 009c FFF7FEFF 	 bl CAN_NODE_MO_Transmit
 577:../main.c     **** 
 578:../main.c     **** }
 4287              	 .loc 6 578 0
 4288 00a0 BD46     	 mov sp,r7
 4289 00a2 04B0     	 add sp,sp,#16
 4290              	 
 4291 00a4 80BD     	 pop {r7,pc}
 4292              	.L183:
 4293 00a6 C046     	 .align 2
 4294              	.L182:
 4295 00a8 00007A44 	 .word 1148846080
 4296 00ac 00000000 	 .word CAN_NODE_0
 4297              	 .cfi_endproc
 4298              	.LFE234:
 4300              	 .section .text.IRQ8_Handler,"ax",%progbits
 4301              	 .align 2
 4302              	 .global IRQ8_Handler
 4303              	 .code 16
 4304              	 .thumb_func
 4306              	IRQ8_Handler:
 4307              	.LFB235:
 579:../main.c     **** 
 580:../main.c     **** void INTERRUPT_TIMER_10us_ISR(void){ // every 1ms so 10kHz
 4308              	 .loc 6 580 0
 4309              	 .cfi_startproc
 4310 0000 80B5     	 push {r7,lr}
 4311              	.LCFI61:
 4312              	 .cfi_def_cfa_offset 8
 4313              	 .cfi_offset 7,-8
 4314              	 .cfi_offset 14,-4
 4315 0002 00AF     	 add r7,sp,#0
 4316              	.LCFI62:
 4317              	 .cfi_def_cfa_register 7
 581:../main.c     **** 	if(RC_Gear_state == 1)RC_gear_100us_counter ++;
 4318              	 .loc 6 581 0
 4319 0004 0A4B     	 ldr r3,.L187
 4320 0006 1B78     	 ldrb r3,[r3]
 4321 0008 DBB2     	 uxtb r3,r3
 4322 000a 012B     	 cmp r3,#1
 4323 000c 04D1     	 bne .L185
 4324              	 .loc 6 581 0 is_stmt 0 discriminator 1
 4325 000e 094B     	 ldr r3,.L187+4
 4326 0010 1B68     	 ldr r3,[r3]
 4327 0012 5A1C     	 add r2,r3,#1
 4328 0014 074B     	 ldr r3,.L187+4
 4329 0016 1A60     	 str r2,[r3]
 4330              	.L185:
 582:../main.c     **** 	if(RC_AUX1_state == 1)RC_AUX1_100us_counter ++;
 4331              	 .loc 6 582 0 is_stmt 1
 4332 0018 074B     	 ldr r3,.L187+8
 4333 001a 1B78     	 ldrb r3,[r3]
 4334 001c DBB2     	 uxtb r3,r3
 4335 001e 012B     	 cmp r3,#1
 4336 0020 04D1     	 bne .L184
 4337              	 .loc 6 582 0 is_stmt 0 discriminator 1
 4338 0022 064B     	 ldr r3,.L187+12
 4339 0024 1B68     	 ldr r3,[r3]
 4340 0026 5A1C     	 add r2,r3,#1
 4341 0028 044B     	 ldr r3,.L187+12
 4342 002a 1A60     	 str r2,[r3]
 4343              	.L184:
 583:../main.c     **** }
 4344              	 .loc 6 583 0 is_stmt 1
 4345 002c BD46     	 mov sp,r7
 4346              	 
 4347 002e 80BD     	 pop {r7,pc}
 4348              	.L188:
 4349              	 .align 2
 4350              	.L187:
 4351 0030 00000000 	 .word RC_Gear_state
 4352 0034 00000000 	 .word RC_gear_100us_counter
 4353 0038 00000000 	 .word RC_AUX1_state
 4354 003c 00000000 	 .word RC_AUX1_100us_counter
 4355              	 .cfi_endproc
 4356              	.LFE235:
 4358              	 .global __aeabi_f2uiz
 4359              	 .section .text.Steering_set_Angles,"ax",%progbits
 4360              	 .align 2
 4361              	 .global Steering_set_Angles
 4362              	 .code 16
 4363              	 .thumb_func
 4365              	Steering_set_Angles:
 4366              	.LFB236:
 584:../main.c     **** 
 585:../main.c     **** void Steering_set_Angles(float Angles_data[4]){
 4367              	 .loc 6 585 0
 4368              	 .cfi_startproc
 4369 0000 90B5     	 push {r4,r7,lr}
 4370              	.LCFI63:
 4371              	 .cfi_def_cfa_offset 12
 4372              	 .cfi_offset 4,-12
 4373              	 .cfi_offset 7,-8
 4374              	 .cfi_offset 14,-4
 4375 0002 85B0     	 sub sp,sp,#20
 4376              	.LCFI64:
 4377              	 .cfi_def_cfa_offset 32
 4378 0004 00AF     	 add r7,sp,#0
 4379              	.LCFI65:
 4380              	 .cfi_def_cfa_register 7
 4381 0006 7860     	 str r0,[r7,#4]
 586:../main.c     **** 	float deg_PWM = 0.645; // deg to PWM singlan converstion factor
 4382              	 .loc 6 586 0
 4383 0008 3E4B     	 ldr r3,.L200
 4384 000a BB60     	 str r3,[r7,#8]
 587:../main.c     **** 
 588:../main.c     **** 	// calcuation of PWM for Angle on each wheel
 589:../main.c     **** 	int i;
 590:../main.c     **** 	for(i = 0 ; i < 4 ; i ++){
 4385              	 .loc 6 590 0
 4386 000c 0023     	 mov r3,#0
 4387 000e FB60     	 str r3,[r7,#12]
 4388 0010 1FE0     	 b .L190
 4389              	.L191:
 591:../main.c     **** 		Servo_PWMs[i] = Angles_data[i]*deg_PWM + NP[i];
 4390              	 .loc 6 591 0 discriminator 3
 4391 0012 FB68     	 ldr r3,[r7,#12]
 4392 0014 9B00     	 lsl r3,r3,#2
 4393 0016 7A68     	 ldr r2,[r7,#4]
 4394 0018 D318     	 add r3,r2,r3
 4395 001a 1B68     	 ldr r3,[r3]
 4396 001c 181C     	 add r0,r3,#0
 4397 001e B968     	 ldr r1,[r7,#8]
 4398 0020 FFF7FEFF 	 bl __aeabi_fmul
 4399 0024 031C     	 add r3,r0,#0
 4400 0026 1C1C     	 add r4,r3,#0
 4401 0028 374B     	 ldr r3,.L200+4
 4402 002a FA68     	 ldr r2,[r7,#12]
 4403 002c 9200     	 lsl r2,r2,#2
 4404 002e D358     	 ldr r3,[r2,r3]
 4405 0030 181C     	 mov r0,r3
 4406 0032 FFF7FEFF 	 bl __aeabi_i2f
 4407 0036 031C     	 add r3,r0,#0
 4408 0038 201C     	 add r0,r4,#0
 4409 003a 191C     	 add r1,r3,#0
 4410 003c FFF7FEFF 	 bl __aeabi_fadd
 4411 0040 031C     	 add r3,r0,#0
 4412 0042 191C     	 add r1,r3,#0
 4413 0044 314B     	 ldr r3,.L200+8
 4414 0046 FA68     	 ldr r2,[r7,#12]
 4415 0048 9200     	 lsl r2,r2,#2
 4416 004a D150     	 str r1,[r2,r3]
 590:../main.c     **** 		Servo_PWMs[i] = Angles_data[i]*deg_PWM + NP[i];
 4417              	 .loc 6 590 0 discriminator 3
 4418 004c FB68     	 ldr r3,[r7,#12]
 4419 004e 0133     	 add r3,r3,#1
 4420 0050 FB60     	 str r3,[r7,#12]
 4421              	.L190:
 590:../main.c     **** 		Servo_PWMs[i] = Angles_data[i]*deg_PWM + NP[i];
 4422              	 .loc 6 590 0 is_stmt 0 discriminator 1
 4423 0052 FB68     	 ldr r3,[r7,#12]
 4424 0054 032B     	 cmp r3,#3
 4425 0056 DCDD     	 ble .L191
 592:../main.c     **** 		}
 593:../main.c     **** 
 594:../main.c     **** 	//limitinbg max servor Angle to 1.75 rot in each dirction
 595:../main.c     **** 	for(i = 0 ; i < 4 ; i ++){
 4426              	 .loc 6 595 0 is_stmt 1
 4427 0058 0023     	 mov r3,#0
 4428 005a FB60     	 str r3,[r7,#12]
 4429 005c 20E0     	 b .L192
 4430              	.L197:
 596:../main.c     **** 		if(Servo_PWMs[i] > 950) { Servo_PWMs[i] = 950;}
 4431              	 .loc 6 596 0
 4432 005e 2B4B     	 ldr r3,.L200+8
 4433 0060 FA68     	 ldr r2,[r7,#12]
 4434 0062 9200     	 lsl r2,r2,#2
 4435 0064 D358     	 ldr r3,[r2,r3]
 4436 0066 181C     	 add r0,r3,#0
 4437 0068 2949     	 ldr r1,.L200+12
 4438 006a FFF7FEFF 	 bl __aeabi_fcmpgt
 4439 006e 031E     	 sub r3,r0,#0
 4440 0070 04D0     	 beq .L193
 4441              	 .loc 6 596 0 is_stmt 0 discriminator 1
 4442 0072 264B     	 ldr r3,.L200+8
 4443 0074 FA68     	 ldr r2,[r7,#12]
 4444 0076 9200     	 lsl r2,r2,#2
 4445 0078 2549     	 ldr r1,.L200+12
 4446 007a D150     	 str r1,[r2,r3]
 4447              	.L193:
 597:../main.c     **** 		if(Servo_PWMs[i] < 550) { Servo_PWMs[i] = 550;}
 4448              	 .loc 6 597 0 is_stmt 1
 4449 007c 234B     	 ldr r3,.L200+8
 4450 007e FA68     	 ldr r2,[r7,#12]
 4451 0080 9200     	 lsl r2,r2,#2
 4452 0082 D358     	 ldr r3,[r2,r3]
 4453 0084 181C     	 add r0,r3,#0
 4454 0086 2349     	 ldr r1,.L200+16
 4455 0088 FFF7FEFF 	 bl __aeabi_fcmplt
 4456 008c 031E     	 sub r3,r0,#0
 4457 008e 04D0     	 beq .L195
 4458              	 .loc 6 597 0 is_stmt 0 discriminator 1
 4459 0090 1E4B     	 ldr r3,.L200+8
 4460 0092 FA68     	 ldr r2,[r7,#12]
 4461 0094 9200     	 lsl r2,r2,#2
 4462 0096 1F49     	 ldr r1,.L200+16
 4463 0098 D150     	 str r1,[r2,r3]
 4464              	.L195:
 595:../main.c     **** 		if(Servo_PWMs[i] > 950) { Servo_PWMs[i] = 950;}
 4465              	 .loc 6 595 0 is_stmt 1 discriminator 2
 4466 009a FB68     	 ldr r3,[r7,#12]
 4467 009c 0133     	 add r3,r3,#1
 4468 009e FB60     	 str r3,[r7,#12]
 4469              	.L192:
 595:../main.c     **** 		if(Servo_PWMs[i] > 950) { Servo_PWMs[i] = 950;}
 4470              	 .loc 6 595 0 is_stmt 0 discriminator 1
 4471 00a0 FB68     	 ldr r3,[r7,#12]
 4472 00a2 032B     	 cmp r3,#3
 4473 00a4 DBDD     	 ble .L197
 598:../main.c     **** 	}
 599:../main.c     **** 
 600:../main.c     **** 	//seting PWM values
 601:../main.c     **** 	PWM_SetDutyCycle(&PWM_servo_fl,Servo_PWMs[0]);
 4474              	 .loc 6 601 0 is_stmt 1
 4475 00a6 194B     	 ldr r3,.L200+8
 4476 00a8 1B68     	 ldr r3,[r3]
 4477 00aa 181C     	 add r0,r3,#0
 4478 00ac FFF7FEFF 	 bl __aeabi_f2uiz
 4479 00b0 021C     	 mov r2,r0
 4480 00b2 194B     	 ldr r3,.L200+20
 4481 00b4 181C     	 mov r0,r3
 4482 00b6 111C     	 mov r1,r2
 4483 00b8 FFF7FEFF 	 bl PWM_SetDutyCycle
 602:../main.c     **** 	PWM_SetDutyCycle(&PWM_servo_fr,Servo_PWMs[1]);
 4484              	 .loc 6 602 0
 4485 00bc 134B     	 ldr r3,.L200+8
 4486 00be 5B68     	 ldr r3,[r3,#4]
 4487 00c0 181C     	 add r0,r3,#0
 4488 00c2 FFF7FEFF 	 bl __aeabi_f2uiz
 4489 00c6 021C     	 mov r2,r0
 4490 00c8 144B     	 ldr r3,.L200+24
 4491 00ca 181C     	 mov r0,r3
 4492 00cc 111C     	 mov r1,r2
 4493 00ce FFF7FEFF 	 bl PWM_SetDutyCycle
 603:../main.c     **** 	PWM_SetDutyCycle(&PWM_servo_rl,Servo_PWMs[2]);
 4494              	 .loc 6 603 0
 4495 00d2 0E4B     	 ldr r3,.L200+8
 4496 00d4 9B68     	 ldr r3,[r3,#8]
 4497 00d6 181C     	 add r0,r3,#0
 4498 00d8 FFF7FEFF 	 bl __aeabi_f2uiz
 4499 00dc 021C     	 mov r2,r0
 4500 00de 104B     	 ldr r3,.L200+28
 4501 00e0 181C     	 mov r0,r3
 4502 00e2 111C     	 mov r1,r2
 4503 00e4 FFF7FEFF 	 bl PWM_SetDutyCycle
 604:../main.c     **** 	PWM_SetDutyCycle(&PWM_servo_rr,Servo_PWMs[3]);
 4504              	 .loc 6 604 0
 4505 00e8 084B     	 ldr r3,.L200+8
 4506 00ea DB68     	 ldr r3,[r3,#12]
 4507 00ec 181C     	 add r0,r3,#0
 4508 00ee FFF7FEFF 	 bl __aeabi_f2uiz
 4509 00f2 021C     	 mov r2,r0
 4510 00f4 0B4B     	 ldr r3,.L200+32
 4511 00f6 181C     	 mov r0,r3
 4512 00f8 111C     	 mov r1,r2
 4513 00fa FFF7FEFF 	 bl PWM_SetDutyCycle
 605:../main.c     **** 
 606:../main.c     **** }
 4514              	 .loc 6 606 0
 4515 00fe BD46     	 mov sp,r7
 4516 0100 05B0     	 add sp,sp,#20
 4517              	 
 4518 0102 90BD     	 pop {r4,r7,pc}
 4519              	.L201:
 4520              	 .align 2
 4521              	.L200:
 4522 0104 B81E253F 	 .word 1059397304
 4523 0108 00000000 	 .word NP
 4524 010c 00000000 	 .word Servo_PWMs
 4525 0110 00806D44 	 .word 1148026880
 4526 0114 00800944 	 .word 1141473280
 4527 0118 00000000 	 .word PWM_servo_fl
 4528 011c 00000000 	 .word PWM_servo_fr
 4529 0120 00000000 	 .word PWM_servo_rl
 4530 0124 00000000 	 .word PWM_servo_rr
 4531              	 .cfi_endproc
 4532              	.LFE236:
 4534              	 .global __aeabi_ui2d
 4535              	 .section .text.RC_Recive,"ax",%progbits
 4536              	 .align 2
 4537              	 .global RC_Recive
 4538              	 .code 16
 4539              	 .thumb_func
 4541              	RC_Recive:
 4542              	.LFB237:
 607:../main.c     **** 
 608:../main.c     **** void RC_Recive(void){
 4543              	 .loc 6 608 0
 4544              	 .cfi_startproc
 4545 0000 F8B5     	 push {r3,r4,r5,r6,r7,lr}
 4546              	.LCFI66:
 4547              	 .cfi_def_cfa_offset 24
 4548              	 .cfi_offset 3,-24
 4549              	 .cfi_offset 4,-20
 4550              	 .cfi_offset 5,-16
 4551              	 .cfi_offset 6,-12
 4552              	 .cfi_offset 7,-8
 4553              	 .cfi_offset 14,-4
 4554 0002 00AF     	 add r7,sp,#0
 4555              	.LCFI67:
 4556              	 .cfi_def_cfa_register 7
 609:../main.c     **** 
 610:../main.c     **** 	CAPTURE_Start(&CAPTURE_RC_Steering);
 4557              	 .loc 6 610 0
 4558 0004 784B     	 ldr r3,.L222
 4559 0006 181C     	 mov r0,r3
 4560 0008 FFF7FEFF 	 bl CAPTURE_Start
 611:../main.c     **** 	CAPTURE_Start(&CAPTURE_RC_Speed);
 4561              	 .loc 6 611 0
 4562 000c 774B     	 ldr r3,.L222+4
 4563 000e 181C     	 mov r0,r3
 4564 0010 FFF7FEFF 	 bl CAPTURE_Start
 612:../main.c     **** 
 613:../main.c     **** 	CAPTURE_GetCapturedTimeInNanoSec(&CAPTURE_RC_Steering, &captured_time_Steering);
 4565              	 .loc 6 613 0
 4566 0014 744A     	 ldr r2,.L222
 4567 0016 764B     	 ldr r3,.L222+8
 4568 0018 101C     	 mov r0,r2
 4569 001a 191C     	 mov r1,r3
 4570 001c FFF7FEFF 	 bl CAPTURE_GetCapturedTimeInNanoSec
 614:../main.c     **** 	CAPTURE_GetCapturedTimeInNanoSec(&CAPTURE_RC_Speed, &captured_time_Speed);
 4571              	 .loc 6 614 0
 4572 0020 724A     	 ldr r2,.L222+4
 4573 0022 744B     	 ldr r3,.L222+12
 4574 0024 101C     	 mov r0,r2
 4575 0026 191C     	 mov r1,r3
 4576 0028 FFF7FEFF 	 bl CAPTURE_GetCapturedTimeInNanoSec
 615:../main.c     **** 
 616:../main.c     **** 	if(RC_Speed_Stop == 1){
 4577              	 .loc 6 616 0
 4578 002c 724B     	 ldr r3,.L222+16
 4579 002e 1B78     	 ldrb r3,[r3]
 4580 0030 012B     	 cmp r3,#1
 4581 0032 5CD1     	 bne .L203
 617:../main.c     **** 		if((captured_time_Speed >= 1000000) && (captured_time_Speed <= 2000000)){
 4582              	 .loc 6 617 0
 4583 0034 6F4B     	 ldr r3,.L222+12
 4584 0036 1B68     	 ldr r3,[r3]
 4585 0038 704A     	 ldr r2,.L222+20
 4586 003a 9342     	 cmp r3,r2
 4587 003c 50D9     	 bls .L204
 4588              	 .loc 6 617 0 is_stmt 0 discriminator 1
 4589 003e 6D4B     	 ldr r3,.L222+12
 4590 0040 1B68     	 ldr r3,[r3]
 4591 0042 6F4A     	 ldr r2,.L222+24
 4592 0044 9342     	 cmp r3,r2
 4593 0046 4BD8     	 bhi .L204
 618:../main.c     **** 		  RC_Speed = ((double)captured_time_Speed - RC_NP_SPEED) * RC_Speed_ns_to_mps; // form +-0.6m/s
 4594              	 .loc 6 618 0 is_stmt 1
 4595 0048 6A4B     	 ldr r3,.L222+12
 4596 004a 1B68     	 ldr r3,[r3]
 4597 004c 181C     	 mov r0,r3
 4598 004e FFF7FEFF 	 bl __aeabi_ui2d
 4599 0052 031C     	 mov r3,r0
 4600 0054 0C1C     	 mov r4,r1
 4601 0056 181C     	 mov r0,r3
 4602 0058 211C     	 mov r1,r4
 4603 005a 0022     	 mov r2,#0
 4604 005c 694B     	 ldr r3,.L222+28
 4605 005e FFF7FEFF 	 bl __aeabi_dsub
 4606 0062 031C     	 mov r3,r0
 4607 0064 0C1C     	 mov r4,r1
 4608 0066 1D1C     	 mov r5,r3
 4609 0068 261C     	 mov r6,r4
 4610 006a 674B     	 ldr r3,.L222+32
 4611 006c 1B68     	 ldr r3,[r3]
 4612 006e 181C     	 add r0,r3,#0
 4613 0070 FFF7FEFF 	 bl __aeabi_f2d
 4614 0074 031C     	 mov r3,r0
 4615 0076 0C1C     	 mov r4,r1
 4616 0078 281C     	 mov r0,r5
 4617 007a 311C     	 mov r1,r6
 4618 007c 1A1C     	 mov r2,r3
 4619 007e 231C     	 mov r3,r4
 4620 0080 FFF7FEFF 	 bl __aeabi_dmul
 4621 0084 031C     	 mov r3,r0
 4622 0086 0C1C     	 mov r4,r1
 4623 0088 181C     	 mov r0,r3
 4624 008a 211C     	 mov r1,r4
 4625 008c FFF7FEFF 	 bl __aeabi_d2f
 4626 0090 021C     	 add r2,r0,#0
 4627 0092 5E4B     	 ldr r3,.L222+36
 4628 0094 1A60     	 str r2,[r3]
 619:../main.c     **** 		  if((RC_Speed < 0.1) && (RC_Speed > -0.1)) RC_Speed = 0; // to have accutal 0
 4629              	 .loc 6 619 0
 4630 0096 5D4B     	 ldr r3,.L222+36
 4631 0098 1B68     	 ldr r3,[r3]
 4632 009a 181C     	 add r0,r3,#0
 4633 009c FFF7FEFF 	 bl __aeabi_f2d
 4634 00a0 031C     	 mov r3,r0
 4635 00a2 0C1C     	 mov r4,r1
 4636 00a4 181C     	 mov r0,r3
 4637 00a6 211C     	 mov r1,r4
 4638 00a8 594A     	 ldr r2,.L222+40
 4639 00aa 5A4B     	 ldr r3,.L222+44
 4640 00ac FFF7FEFF 	 bl __aeabi_dcmplt
 4641 00b0 031E     	 sub r3,r0,#0
 4642 00b2 11D0     	 beq .L205
 4643              	 .loc 6 619 0 is_stmt 0 discriminator 1
 4644 00b4 554B     	 ldr r3,.L222+36
 4645 00b6 1B68     	 ldr r3,[r3]
 4646 00b8 181C     	 add r0,r3,#0
 4647 00ba FFF7FEFF 	 bl __aeabi_f2d
 4648 00be 031C     	 mov r3,r0
 4649 00c0 0C1C     	 mov r4,r1
 4650 00c2 181C     	 mov r0,r3
 4651 00c4 211C     	 mov r1,r4
 4652 00c6 524A     	 ldr r2,.L222+40
 4653 00c8 534B     	 ldr r3,.L222+48
 4654 00ca FFF7FEFF 	 bl __aeabi_dcmpgt
 4655 00ce 031E     	 sub r3,r0,#0
 4656 00d0 02D0     	 beq .L205
 4657              	 .loc 6 619 0 discriminator 2
 4658 00d2 4E4B     	 ldr r3,.L222+36
 4659 00d4 0022     	 mov r2,#0
 4660 00d6 1A60     	 str r2,[r3]
 4661              	.L205:
 620:../main.c     **** 		  RC_no_Speed_data_counter = 0;
 4662              	 .loc 6 620 0 is_stmt 1
 4663 00d8 504B     	 ldr r3,.L222+52
 4664 00da 0022     	 mov r2,#0
 4665 00dc 1A70     	 strb r2,[r3]
 4666 00de 09E0     	 b .L209
 4667              	.L204:
 621:../main.c     **** 		}
 622:../main.c     **** 		else{
 623:../main.c     **** 			RC_no_Speed_data_counter ++;
 4668              	 .loc 6 623 0
 4669 00e0 4E4B     	 ldr r3,.L222+52
 4670 00e2 1B78     	 ldrb r3,[r3]
 4671 00e4 0133     	 add r3,r3,#1
 4672 00e6 DAB2     	 uxtb r2,r3
 4673 00e8 4C4B     	 ldr r3,.L222+52
 4674 00ea 1A70     	 strb r2,[r3]
 4675 00ec 02E0     	 b .L209
 4676              	.L203:
 624:../main.c     **** 		}
 625:../main.c     **** 	}
 626:../main.c     **** 	else RC_Speed = 0;
 4677              	 .loc 6 626 0
 4678 00ee 474B     	 ldr r3,.L222+36
 4679 00f0 0022     	 mov r2,#0
 4680 00f2 1A60     	 str r2,[r3]
 4681              	.L209:
 627:../main.c     **** 
 628:../main.c     **** 	if((captured_time_Steering >= 1000000) && (captured_time_Steering <= 2000000)){
 4682              	 .loc 6 628 0
 4683 00f4 3E4B     	 ldr r3,.L222+8
 4684 00f6 1B68     	 ldr r3,[r3]
 4685 00f8 404A     	 ldr r2,.L222+20
 4686 00fa 9342     	 cmp r3,r2
 4687 00fc 44D9     	 bls .L210
 4688              	 .loc 6 628 0 is_stmt 0 discriminator 1
 4689 00fe 3C4B     	 ldr r3,.L222+8
 4690 0100 1B68     	 ldr r3,[r3]
 4691 0102 3F4A     	 ldr r2,.L222+24
 4692 0104 9342     	 cmp r3,r2
 4693 0106 3FD8     	 bhi .L210
 629:../main.c     **** 	  RC_Steering = (((double)captured_time_Steering - RC_NP_STEERING) * RC_Steering_ns_to_deg); // fo
 4694              	 .loc 6 629 0 is_stmt 1
 4695 0108 394B     	 ldr r3,.L222+8
 4696 010a 1B68     	 ldr r3,[r3]
 4697 010c 181C     	 mov r0,r3
 4698 010e FFF7FEFF 	 bl __aeabi_ui2d
 4699 0112 031C     	 mov r3,r0
 4700 0114 0C1C     	 mov r4,r1
 4701 0116 181C     	 mov r0,r3
 4702 0118 211C     	 mov r1,r4
 4703 011a 0022     	 mov r2,#0
 4704 011c 404B     	 ldr r3,.L222+56
 4705 011e FFF7FEFF 	 bl __aeabi_dsub
 4706 0122 031C     	 mov r3,r0
 4707 0124 0C1C     	 mov r4,r1
 4708 0126 1D1C     	 mov r5,r3
 4709 0128 261C     	 mov r6,r4
 4710 012a 3E4B     	 ldr r3,.L222+60
 4711 012c 1B68     	 ldr r3,[r3]
 4712 012e 181C     	 add r0,r3,#0
 4713 0130 FFF7FEFF 	 bl __aeabi_f2d
 4714 0134 031C     	 mov r3,r0
 4715 0136 0C1C     	 mov r4,r1
 4716 0138 281C     	 mov r0,r5
 4717 013a 311C     	 mov r1,r6
 4718 013c 1A1C     	 mov r2,r3
 4719 013e 231C     	 mov r3,r4
 4720 0140 FFF7FEFF 	 bl __aeabi_dmul
 4721 0144 031C     	 mov r3,r0
 4722 0146 0C1C     	 mov r4,r1
 4723 0148 181C     	 mov r0,r3
 4724 014a 211C     	 mov r1,r4
 4725 014c FFF7FEFF 	 bl __aeabi_d2f
 4726 0150 021C     	 add r2,r0,#0
 4727 0152 354B     	 ldr r3,.L222+64
 4728 0154 1A60     	 str r2,[r3]
 630:../main.c     **** 	  if((RC_Steering < 2) && (RC_Steering > -2)) RC_Steering = 0; // to have accutal 0
 4729              	 .loc 6 630 0
 4730 0156 344B     	 ldr r3,.L222+64
 4731 0158 1B68     	 ldr r3,[r3]
 4732 015a 181C     	 add r0,r3,#0
 4733 015c 8021     	 mov r1,#128
 4734 015e C905     	 lsl r1,r1,#23
 4735 0160 FFF7FEFF 	 bl __aeabi_fcmplt
 4736 0164 031E     	 sub r3,r0,#0
 4737 0166 0BD0     	 beq .L211
 4738              	 .loc 6 630 0 is_stmt 0 discriminator 1
 4739 0168 2F4B     	 ldr r3,.L222+64
 4740 016a 1B68     	 ldr r3,[r3]
 4741 016c 181C     	 add r0,r3,#0
 4742 016e C021     	 mov r1,#192
 4743 0170 0906     	 lsl r1,r1,#24
 4744 0172 FFF7FEFF 	 bl __aeabi_fcmpgt
 4745 0176 031E     	 sub r3,r0,#0
 4746 0178 02D0     	 beq .L211
 4747              	 .loc 6 630 0 discriminator 2
 4748 017a 2B4B     	 ldr r3,.L222+64
 4749 017c 0022     	 mov r2,#0
 4750 017e 1A60     	 str r2,[r3]
 4751              	.L211:
 631:../main.c     **** 	  RC_no_Steering_data_counter = 0;
 4752              	 .loc 6 631 0 is_stmt 1
 4753 0180 2A4B     	 ldr r3,.L222+68
 4754 0182 0022     	 mov r2,#0
 4755 0184 1A70     	 strb r2,[r3]
 4756 0186 05E0     	 b .L214
 4757              	.L210:
 632:../main.c     **** 	}
 633:../main.c     **** 	else{
 634:../main.c     **** 	  RC_no_Steering_data_counter ++;
 4758              	 .loc 6 634 0
 4759 0188 284B     	 ldr r3,.L222+68
 4760 018a 1B78     	 ldrb r3,[r3]
 4761 018c 0133     	 add r3,r3,#1
 4762 018e DAB2     	 uxtb r2,r3
 4763 0190 264B     	 ldr r3,.L222+68
 4764 0192 1A70     	 strb r2,[r3]
 4765              	.L214:
 635:../main.c     **** 	}
 636:../main.c     **** 
 637:../main.c     **** 	if(RC_no_Speed_data_counter > 20 || RC_no_Steering_data_counter > 20 ){ // internall values not ok
 4766              	 .loc 6 637 0
 4767 0194 214B     	 ldr r3,.L222+52
 4768 0196 1B78     	 ldrb r3,[r3]
 4769 0198 142B     	 cmp r3,#20
 4770 019a 03D8     	 bhi .L215
 4771              	 .loc 6 637 0 is_stmt 0 discriminator 1
 4772 019c 234B     	 ldr r3,.L222+68
 4773 019e 1B78     	 ldrb r3,[r3]
 4774 01a0 142B     	 cmp r3,#20
 4775 01a2 10D9     	 bls .L216
 4776              	.L215:
 638:../main.c     **** 	  DIGITAL_IO_SetOutputLow(&RC_no_data_LED);
 4777              	 .loc 6 638 0 is_stmt 1
 4778 01a4 224B     	 ldr r3,.L222+72
 4779 01a6 181C     	 mov r0,r3
 4780 01a8 FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 639:../main.c     **** 	  RC_no_Speed_data_counter = 20;
 4781              	 .loc 6 639 0
 4782 01ac 1B4B     	 ldr r3,.L222+52
 4783 01ae 1422     	 mov r2,#20
 4784 01b0 1A70     	 strb r2,[r3]
 640:../main.c     **** 	  RC_no_Steering_data_counter = 20;
 4785              	 .loc 6 640 0
 4786 01b2 1E4B     	 ldr r3,.L222+68
 4787 01b4 1422     	 mov r2,#20
 4788 01b6 1A70     	 strb r2,[r3]
 641:../main.c     **** 
 642:../main.c     **** 	  //set gobal vars 0
 643:../main.c     **** 	  Driving_speed = 0;
 4789              	 .loc 6 643 0
 4790 01b8 1E4B     	 ldr r3,.L222+76
 4791 01ba 0022     	 mov r2,#0
 4792 01bc 1A60     	 str r2,[r3]
 644:../main.c     **** 	  Steering_direction = 0;
 4793              	 .loc 6 644 0
 4794 01be 1E4B     	 ldr r3,.L222+80
 4795 01c0 0022     	 mov r2,#0
 4796 01c2 1A60     	 str r2,[r3]
 4797 01c4 0BE0     	 b .L217
 4798              	.L216:
 645:../main.c     **** 	}
 646:../main.c     **** 	else{ // values filternig
 647:../main.c     **** 	  DIGITAL_IO_SetOutputHigh(&RC_no_data_LED);
 4799              	 .loc 6 647 0
 4800 01c6 1A4B     	 ldr r3,.L222+72
 4801 01c8 181C     	 mov r0,r3
 4802 01ca FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 648:../main.c     **** 
 649:../main.c     **** 	  //set gobal vars stanart
 650:../main.c     **** 	  Driving_speed = RC_Speed;
 4803              	 .loc 6 650 0
 4804 01ce 0F4B     	 ldr r3,.L222+36
 4805 01d0 1A68     	 ldr r2,[r3]
 4806 01d2 184B     	 ldr r3,.L222+76
 4807 01d4 1A60     	 str r2,[r3]
 651:../main.c     **** 	  Steering_direction = RC_Steering;
 4808              	 .loc 6 651 0
 4809 01d6 144B     	 ldr r3,.L222+64
 4810 01d8 1A68     	 ldr r2,[r3]
 4811 01da 174B     	 ldr r3,.L222+80
 4812 01dc 1A60     	 str r2,[r3]
 4813              	.L217:
 652:../main.c     **** 	}
 653:../main.c     **** 
 654:../main.c     **** 	New_Input = 1; //goalb var to tell it that there in new data to calculate
 4814              	 .loc 6 654 0
 4815 01de 174B     	 ldr r3,.L222+84
 4816 01e0 0122     	 mov r2,#1
 4817 01e2 1A70     	 strb r2,[r3]
 655:../main.c     **** }
 4818              	 .loc 6 655 0
 4819 01e4 BD46     	 mov sp,r7
 4820              	 
 4821 01e6 F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 4822              	.L223:
 4823              	 .align 2
 4824              	.L222:
 4825 01e8 00000000 	 .word CAPTURE_RC_Steering
 4826 01ec 00000000 	 .word CAPTURE_RC_Speed
 4827 01f0 00000000 	 .word captured_time_Steering
 4828 01f4 00000000 	 .word captured_time_Speed
 4829 01f8 00000000 	 .word RC_Speed_Stop
 4830 01fc 3F420F00 	 .word 999999
 4831 0200 80841E00 	 .word 2000000
 4832 0204 60E33641 	 .word 1094116192
 4833 0208 00000000 	 .word RC_Speed_ns_to_mps
 4834 020c 00000000 	 .word RC_Speed
 4835 0210 9A999999 	 .word -1717986918
 4836 0214 9999B93F 	 .word 1069128089
 4837 0218 9999B9BF 	 .word -1078355559
 4838 021c 00000000 	 .word RC_no_Speed_data_counter
 4839 0220 A07F3741 	 .word 1094156192
 4840 0224 00000000 	 .word RC_Steering_ns_to_deg
 4841 0228 00000000 	 .word RC_Steering
 4842 022c 00000000 	 .word RC_no_Steering_data_counter
 4843 0230 00000000 	 .word RC_no_data_LED
 4844 0234 00000000 	 .word Driving_speed
 4845 0238 00000000 	 .word Steering_direction
 4846 023c 00000000 	 .word New_Input
 4847              	 .cfi_endproc
 4848              	.LFE237:
 4850              	 .section .text.IRQ12_Handler,"ax",%progbits
 4851              	 .align 2
 4852              	 .global IRQ12_Handler
 4853              	 .code 16
 4854              	 .thumb_func
 4856              	IRQ12_Handler:
 4857              	.LFB238:
 656:../main.c     **** 
 657:../main.c     **** void RC_Connected_ISR(void){
 4858              	 .loc 6 657 0
 4859              	 .cfi_startproc
 4860 0000 80B5     	 push {r7,lr}
 4861              	.LCFI68:
 4862              	 .cfi_def_cfa_offset 8
 4863              	 .cfi_offset 7,-8
 4864              	 .cfi_offset 14,-4
 4865 0002 82B0     	 sub sp,sp,#8
 4866              	.LCFI69:
 4867              	 .cfi_def_cfa_offset 16
 4868 0004 00AF     	 add r7,sp,#0
 4869              	.LCFI70:
 4870              	 .cfi_def_cfa_register 7
 658:../main.c     **** 
 659:../main.c     **** 	if(RC_controll == 1){
 4871              	 .loc 6 659 0
 4872 0006 294B     	 ldr r3,.L230
 4873 0008 1B78     	 ldrb r3,[r3]
 4874 000a DBB2     	 uxtb r3,r3
 4875 000c 012B     	 cmp r3,#1
 4876 000e 49D1     	 bne .L224
 660:../main.c     **** 
 661:../main.c     **** 		RC_Gear_state =  PIN_INTERRUPT_GetPinValue(&RC_Connected); // pin haig or low
 4877              	 .loc 6 661 0
 4878 0010 274B     	 ldr r3,.L230+4
 4879 0012 181C     	 mov r0,r3
 4880 0014 FFF7FEFF 	 bl PIN_INTERRUPT_GetPinValue
 4881 0018 031C     	 mov r3,r0
 4882 001a DAB2     	 uxtb r2,r3
 4883 001c 254B     	 ldr r3,.L230+8
 4884 001e 1A70     	 strb r2,[r3]
 662:../main.c     **** 
 663:../main.c     **** 		if(RC_Gear_state == 0){// do nothing during high
 4885              	 .loc 6 663 0
 4886 0020 244B     	 ldr r3,.L230+8
 4887 0022 1B78     	 ldrb r3,[r3]
 4888 0024 DBB2     	 uxtb r3,r3
 4889 0026 002B     	 cmp r3,#0
 4890 0028 3CD1     	 bne .L224
 4891              	.LBB4:
 664:../main.c     **** 
 665:../main.c     **** 			RC_Recive(); // get speed and steering data
 4892              	 .loc 6 665 0
 4893 002a FFF7FEFF 	 bl RC_Recive
 666:../main.c     **** 
 667:../main.c     **** 			uint32_t RC_Gear_on_time_100us = RC_gear_100us_counter;
 4894              	 .loc 6 667 0
 4895 002e 224B     	 ldr r3,.L230+12
 4896 0030 1B68     	 ldr r3,[r3]
 4897 0032 7B60     	 str r3,[r7,#4]
 668:../main.c     **** 			RC_gear_100us_counter = 0;
 4898              	 .loc 6 668 0
 4899 0034 204B     	 ldr r3,.L230+12
 4900 0036 0022     	 mov r2,#0
 4901 0038 1A60     	 str r2,[r3]
 669:../main.c     **** 
 670:../main.c     **** 			if((80 < RC_Gear_on_time_100us) && (RC_Gear_on_time_100us < 150)) RC_Gear_duty= 0;
 4902              	 .loc 6 670 0
 4903 003a 7B68     	 ldr r3,[r7,#4]
 4904 003c 502B     	 cmp r3,#80
 4905 003e 06D9     	 bls .L226
 4906              	 .loc 6 670 0 is_stmt 0 discriminator 1
 4907 0040 7B68     	 ldr r3,[r7,#4]
 4908 0042 952B     	 cmp r3,#149
 4909 0044 03D8     	 bhi .L226
 4910              	 .loc 6 670 0 discriminator 2
 4911 0046 1D4B     	 ldr r3,.L230+16
 4912 0048 0022     	 mov r2,#0
 4913 004a 1A70     	 strb r2,[r3]
 4914 004c 0CE0     	 b .L227
 4915              	.L226:
 671:../main.c     **** 			else if ((150 < RC_Gear_on_time_100us) && (RC_Gear_on_time_100us < 210)) RC_Gear_duty = 1;
 4916              	 .loc 6 671 0 is_stmt 1
 4917 004e 7B68     	 ldr r3,[r7,#4]
 4918 0050 962B     	 cmp r3,#150
 4919 0052 06D9     	 bls .L228
 4920              	 .loc 6 671 0 is_stmt 0 discriminator 1
 4921 0054 7B68     	 ldr r3,[r7,#4]
 4922 0056 D12B     	 cmp r3,#209
 4923 0058 03D8     	 bhi .L228
 4924              	 .loc 6 671 0 discriminator 2
 4925 005a 184B     	 ldr r3,.L230+16
 4926 005c 0122     	 mov r2,#1
 4927 005e 1A70     	 strb r2,[r3]
 4928 0060 02E0     	 b .L227
 4929              	.L228:
 672:../main.c     **** 			else RC_Gear_duty = 2;
 4930              	 .loc 6 672 0 is_stmt 1
 4931 0062 164B     	 ldr r3,.L230+16
 4932 0064 0222     	 mov r2,#2
 4933 0066 1A70     	 strb r2,[r3]
 4934              	.L227:
 673:../main.c     **** 
 674:../main.c     **** 			if(RC_Gear_duty == 1 && RC_Gear_duty_OLD == 0){
 4935              	 .loc 6 674 0
 4936 0068 144B     	 ldr r3,.L230+16
 4937 006a 1B78     	 ldrb r3,[r3]
 4938 006c DBB2     	 uxtb r3,r3
 4939 006e 012B     	 cmp r3,#1
 4940 0070 13D1     	 bne .L229
 4941              	 .loc 6 674 0 is_stmt 0 discriminator 1
 4942 0072 134B     	 ldr r3,.L230+20
 4943 0074 1B78     	 ldrb r3,[r3]
 4944 0076 DBB2     	 uxtb r3,r3
 4945 0078 002B     	 cmp r3,#0
 4946 007a 0ED1     	 bne .L229
 675:../main.c     **** 				Steering_mode ++;
 4947              	 .loc 6 675 0 is_stmt 1
 4948 007c 114B     	 ldr r3,.L230+24
 4949 007e 1B78     	 ldrb r3,[r3]
 4950 0080 DBB2     	 uxtb r3,r3
 4951 0082 0133     	 add r3,r3,#1
 4952 0084 DAB2     	 uxtb r2,r3
 4953 0086 0F4B     	 ldr r3,.L230+24
 4954 0088 1A70     	 strb r2,[r3]
 676:../main.c     **** 				if(Steering_mode > 5)Steering_mode = 0;
 4955              	 .loc 6 676 0
 4956 008a 0E4B     	 ldr r3,.L230+24
 4957 008c 1B78     	 ldrb r3,[r3]
 4958 008e DBB2     	 uxtb r3,r3
 4959 0090 052B     	 cmp r3,#5
 4960 0092 02D9     	 bls .L229
 4961              	 .loc 6 676 0 is_stmt 0 discriminator 1
 4962 0094 0B4B     	 ldr r3,.L230+24
 4963 0096 0022     	 mov r2,#0
 4964 0098 1A70     	 strb r2,[r3]
 4965              	.L229:
 677:../main.c     **** 			}
 678:../main.c     **** 		RC_Gear_duty_OLD = RC_Gear_duty;
 4966              	 .loc 6 678 0 is_stmt 1
 4967 009a 084B     	 ldr r3,.L230+16
 4968 009c 1B78     	 ldrb r3,[r3]
 4969 009e DAB2     	 uxtb r2,r3
 4970 00a0 074B     	 ldr r3,.L230+20
 4971 00a2 1A70     	 strb r2,[r3]
 4972              	.L224:
 4973              	.LBE4:
 679:../main.c     **** 		}
 680:../main.c     **** 	}
 681:../main.c     **** }
 4974              	 .loc 6 681 0
 4975 00a4 BD46     	 mov sp,r7
 4976 00a6 02B0     	 add sp,sp,#8
 4977              	 
 4978 00a8 80BD     	 pop {r7,pc}
 4979              	.L231:
 4980 00aa C046     	 .align 2
 4981              	.L230:
 4982 00ac 00000000 	 .word RC_controll
 4983 00b0 00000000 	 .word RC_Connected
 4984 00b4 00000000 	 .word RC_Gear_state
 4985 00b8 00000000 	 .word RC_gear_100us_counter
 4986 00bc 00000000 	 .word RC_Gear_duty
 4987 00c0 00000000 	 .word RC_Gear_duty_OLD
 4988 00c4 00000000 	 .word Steering_mode
 4989              	 .cfi_endproc
 4990              	.LFE238:
 4992              	 .section .text.IRQ6_Handler,"ax",%progbits
 4993              	 .align 2
 4994              	 .global IRQ6_Handler
 4995              	 .code 16
 4996              	 .thumb_func
 4998              	IRQ6_Handler:
 4999              	.LFB239:
 682:../main.c     **** 
 683:../main.c     **** void RC_AUX1_ISR(void){
 5000              	 .loc 6 683 0
 5001              	 .cfi_startproc
 5002 0000 80B5     	 push {r7,lr}
 5003              	.LCFI71:
 5004              	 .cfi_def_cfa_offset 8
 5005              	 .cfi_offset 7,-8
 5006              	 .cfi_offset 14,-4
 5007 0002 82B0     	 sub sp,sp,#8
 5008              	.LCFI72:
 5009              	 .cfi_def_cfa_offset 16
 5010 0004 00AF     	 add r7,sp,#0
 5011              	.LCFI73:
 5012              	 .cfi_def_cfa_register 7
 684:../main.c     **** 	if(RC_controll == 1){
 5013              	 .loc 6 684 0
 5014 0006 1F4B     	 ldr r3,.L238
 5015 0008 1B78     	 ldrb r3,[r3]
 5016 000a DBB2     	 uxtb r3,r3
 5017 000c 012B     	 cmp r3,#1
 5018 000e 35D1     	 bne .L232
 685:../main.c     **** 		RC_AUX1_state =  PIN_INTERRUPT_GetPinValue(&RC_AUX1); // pin haig or low
 5019              	 .loc 6 685 0
 5020 0010 1D4B     	 ldr r3,.L238+4
 5021 0012 181C     	 mov r0,r3
 5022 0014 FFF7FEFF 	 bl PIN_INTERRUPT_GetPinValue
 5023 0018 031C     	 mov r3,r0
 5024 001a DAB2     	 uxtb r2,r3
 5025 001c 1B4B     	 ldr r3,.L238+8
 5026 001e 1A70     	 strb r2,[r3]
 686:../main.c     **** 
 687:../main.c     **** 		if(RC_AUX1_state == 0){// do nothing during high
 5027              	 .loc 6 687 0
 5028 0020 1A4B     	 ldr r3,.L238+8
 5029 0022 1B78     	 ldrb r3,[r3]
 5030 0024 DBB2     	 uxtb r3,r3
 5031 0026 002B     	 cmp r3,#0
 5032 0028 28D1     	 bne .L232
 5033              	.LBB5:
 688:../main.c     **** 			uint32_t RC_AUX1_on_time_100us = RC_AUX1_100us_counter;
 5034              	 .loc 6 688 0
 5035 002a 194B     	 ldr r3,.L238+12
 5036 002c 1B68     	 ldr r3,[r3]
 5037 002e 7B60     	 str r3,[r7,#4]
 689:../main.c     **** 			RC_AUX1_100us_counter = 0;
 5038              	 .loc 6 689 0
 5039 0030 174B     	 ldr r3,.L238+12
 5040 0032 0022     	 mov r2,#0
 5041 0034 1A60     	 str r2,[r3]
 690:../main.c     **** 
 691:../main.c     **** 			if((80 < RC_AUX1_on_time_100us) && (RC_AUX1_on_time_100us < 150)) RC_AUX1_duty= 0;
 5042              	 .loc 6 691 0
 5043 0036 7B68     	 ldr r3,[r7,#4]
 5044 0038 502B     	 cmp r3,#80
 5045 003a 06D9     	 bls .L234
 5046              	 .loc 6 691 0 is_stmt 0 discriminator 1
 5047 003c 7B68     	 ldr r3,[r7,#4]
 5048 003e 952B     	 cmp r3,#149
 5049 0040 03D8     	 bhi .L234
 5050              	 .loc 6 691 0 discriminator 2
 5051 0042 144B     	 ldr r3,.L238+16
 5052 0044 0022     	 mov r2,#0
 5053 0046 1A70     	 strb r2,[r3]
 5054 0048 0CE0     	 b .L235
 5055              	.L234:
 692:../main.c     **** 			else if ((150 < RC_AUX1_on_time_100us) && (RC_AUX1_on_time_100us < 210)) RC_AUX1_duty = 1;
 5056              	 .loc 6 692 0 is_stmt 1
 5057 004a 7B68     	 ldr r3,[r7,#4]
 5058 004c 962B     	 cmp r3,#150
 5059 004e 06D9     	 bls .L236
 5060              	 .loc 6 692 0 is_stmt 0 discriminator 1
 5061 0050 7B68     	 ldr r3,[r7,#4]
 5062 0052 D12B     	 cmp r3,#209
 5063 0054 03D8     	 bhi .L236
 5064              	 .loc 6 692 0 discriminator 2
 5065 0056 0F4B     	 ldr r3,.L238+16
 5066 0058 0122     	 mov r2,#1
 5067 005a 1A70     	 strb r2,[r3]
 5068 005c 02E0     	 b .L235
 5069              	.L236:
 693:../main.c     **** 			else RC_AUX1_duty = 2;
 5070              	 .loc 6 693 0 is_stmt 1
 5071 005e 0D4B     	 ldr r3,.L238+16
 5072 0060 0222     	 mov r2,#2
 5073 0062 1A70     	 strb r2,[r3]
 5074              	.L235:
 694:../main.c     **** 
 695:../main.c     **** 
 696:../main.c     **** 			if(RC_AUX1_duty == 1)RC_Speed_Stop = 1;
 5075              	 .loc 6 696 0
 5076 0064 0B4B     	 ldr r3,.L238+16
 5077 0066 1B78     	 ldrb r3,[r3]
 5078 0068 DBB2     	 uxtb r3,r3
 5079 006a 012B     	 cmp r3,#1
 5080 006c 03D1     	 bne .L237
 5081              	 .loc 6 696 0 is_stmt 0 discriminator 1
 5082 006e 0A4B     	 ldr r3,.L238+20
 5083 0070 0122     	 mov r2,#1
 5084 0072 1A70     	 strb r2,[r3]
 5085 0074 02E0     	 b .L232
 5086              	.L237:
 697:../main.c     **** 			else RC_Speed_Stop = 0;
 5087              	 .loc 6 697 0 is_stmt 1
 5088 0076 084B     	 ldr r3,.L238+20
 5089 0078 0022     	 mov r2,#0
 5090 007a 1A70     	 strb r2,[r3]
 5091              	.L232:
 5092              	.LBE5:
 698:../main.c     **** 		}
 699:../main.c     **** 	}
 700:../main.c     **** }
 5093              	 .loc 6 700 0
 5094 007c BD46     	 mov sp,r7
 5095 007e 02B0     	 add sp,sp,#8
 5096              	 
 5097 0080 80BD     	 pop {r7,pc}
 5098              	.L239:
 5099 0082 C046     	 .align 2
 5100              	.L238:
 5101 0084 00000000 	 .word RC_controll
 5102 0088 00000000 	 .word RC_AUX1
 5103 008c 00000000 	 .word RC_AUX1_state
 5104 0090 00000000 	 .word RC_AUX1_100us_counter
 5105 0094 00000000 	 .word RC_AUX1_duty
 5106 0098 00000000 	 .word RC_Speed_Stop
 5107              	 .cfi_endproc
 5108              	.LFE239:
 5110              	 .section .rodata
 5111              	 .align 2
 5112              	.LC0:
 5113 0000 01       	 .byte 1
 5114 0001 01       	 .byte 1
 5115 0002 01       	 .byte 1
 5116 0003 01       	 .byte 1
 5117              	 .section .text.IRQ7_Handler,"ax",%progbits
 5118              	 .align 2
 5119              	 .global IRQ7_Handler
 5120              	 .code 16
 5121              	 .thumb_func
 5123              	IRQ7_Handler:
 5124              	.LFB240:
 701:../main.c     **** 
 702:../main.c     **** void TIMER_CONTROL_ISR(void){
 5125              	 .loc 6 702 0
 5126              	 .cfi_startproc
 5127 0000 80B5     	 push {r7,lr}
 5128              	.LCFI74:
 5129              	 .cfi_def_cfa_offset 8
 5130              	 .cfi_offset 7,-8
 5131              	 .cfi_offset 14,-4
 5132 0002 82B0     	 sub sp,sp,#8
 5133              	.LCFI75:
 5134              	 .cfi_def_cfa_offset 16
 5135 0004 00AF     	 add r7,sp,#0
 5136              	.LCFI76:
 5137              	 .cfi_def_cfa_register 7
 703:../main.c     **** 	DIGITAL_IO_SetOutputHigh(&CALC_TIME_INDICATOR);
 5138              	 .loc 6 703 0
 5139 0006 3A4B     	 ldr r3,.L245
 5140 0008 181C     	 mov r0,r3
 5141 000a FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 704:../main.c     **** 	mode_led(Steering_mode);
 5142              	 .loc 6 704 0
 5143 000e 394B     	 ldr r3,.L245+4
 5144 0010 1B78     	 ldrb r3,[r3]
 5145 0012 DBB2     	 uxtb r3,r3
 5146 0014 181C     	 mov r0,r3
 5147 0016 FFF7FEFF 	 bl mode_led
 705:../main.c     **** 
 706:../main.c     **** 	if(RC_controll == 1){
 5148              	 .loc 6 706 0
 5149 001a 374B     	 ldr r3,.L245+8
 5150 001c 1B78     	 ldrb r3,[r3]
 5151 001e DBB2     	 uxtb r3,r3
 5152 0020 012B     	 cmp r3,#1
 5153 0022 07D1     	 bne .L241
 707:../main.c     **** 		if( NO_New_Input_counter > 9){
 5154              	 .loc 6 707 0
 5155 0024 354B     	 ldr r3,.L245+12
 5156 0026 1B68     	 ldr r3,[r3]
 5157 0028 092B     	 cmp r3,#9
 5158 002a 03D9     	 bls .L241
 708:../main.c     **** 			DIGITAL_IO_SetOutputLow(&RC_no_data_LED);
 5159              	 .loc 6 708 0
 5160 002c 344B     	 ldr r3,.L245+16
 5161 002e 181C     	 mov r0,r3
 5162 0030 FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 5163              	.L241:
 709:../main.c     **** 		}
 710:../main.c     **** 	}
 711:../main.c     **** 
 712:../main.c     **** 
 713:../main.c     **** 	if(New_Input == 1){
 5164              	 .loc 6 713 0
 5165 0034 334B     	 ldr r3,.L245+20
 5166 0036 1B78     	 ldrb r3,[r3]
 5167 0038 DBB2     	 uxtb r3,r3
 5168 003a 012B     	 cmp r3,#1
 5169 003c 0FD1     	 bne .L242
 714:../main.c     **** 	Steering_Function(Steering_direction, Driving_speed, Steering_mode);
 5170              	 .loc 6 714 0
 5171 003e 324B     	 ldr r3,.L245+24
 5172 0040 1968     	 ldr r1,[r3]
 5173 0042 324B     	 ldr r3,.L245+28
 5174 0044 1A68     	 ldr r2,[r3]
 5175 0046 2B4B     	 ldr r3,.L245+4
 5176 0048 1B78     	 ldrb r3,[r3]
 5177 004a DBB2     	 uxtb r3,r3
 5178 004c 081C     	 add r0,r1,#0
 5179 004e 111C     	 add r1,r2,#0
 5180 0050 1A1C     	 mov r2,r3
 5181 0052 FFF7FEFF 	 bl Steering_Function
 715:../main.c     **** 	NO_New_Input_counter = 0;
 5182              	 .loc 6 715 0
 5183 0056 294B     	 ldr r3,.L245+12
 5184 0058 0022     	 mov r2,#0
 5185 005a 1A60     	 str r2,[r3]
 5186 005c 23E0     	 b .L243
 5187              	.L242:
 716:../main.c     **** 	}
 717:../main.c     **** 	else{
 718:../main.c     **** 		NO_New_Input_counter ++;
 5188              	 .loc 6 718 0
 5189 005e 274B     	 ldr r3,.L245+12
 5190 0060 1B68     	 ldr r3,[r3]
 5191 0062 5A1C     	 add r2,r3,#1
 5192 0064 254B     	 ldr r3,.L245+12
 5193 0066 1A60     	 str r2,[r3]
 719:../main.c     **** 		if( NO_New_Input_counter > 10){
 5194              	 .loc 6 719 0
 5195 0068 244B     	 ldr r3,.L245+12
 5196 006a 1B68     	 ldr r3,[r3]
 5197 006c 0A2B     	 cmp r3,#10
 5198 006e 1AD9     	 bls .L243
 720:../main.c     **** 			NO_New_Input_counter = 10;
 5199              	 .loc 6 720 0
 5200 0070 224B     	 ldr r3,.L245+12
 5201 0072 0A22     	 mov r2,#10
 5202 0074 1A60     	 str r2,[r3]
 721:../main.c     **** 
 722:../main.c     **** 			  Steering_Angles[0] = 0;
 5203              	 .loc 6 722 0
 5204 0076 264B     	 ldr r3,.L245+32
 5205 0078 0022     	 mov r2,#0
 5206 007a 1A60     	 str r2,[r3]
 723:../main.c     **** 			  Steering_Angles[1] = 0;
 5207              	 .loc 6 723 0
 5208 007c 244B     	 ldr r3,.L245+32
 5209 007e 0022     	 mov r2,#0
 5210 0080 5A60     	 str r2,[r3,#4]
 724:../main.c     **** 			  Steering_Angles[2] = 0;
 5211              	 .loc 6 724 0
 5212 0082 234B     	 ldr r3,.L245+32
 5213 0084 0022     	 mov r2,#0
 5214 0086 9A60     	 str r2,[r3,#8]
 725:../main.c     **** 			  Steering_Angles[3] = 0;
 5215              	 .loc 6 725 0
 5216 0088 214B     	 ldr r3,.L245+32
 5217 008a 0022     	 mov r2,#0
 5218 008c DA60     	 str r2,[r3,#12]
 726:../main.c     **** 
 727:../main.c     **** 			  Speeds[0] = 0;
 5219              	 .loc 6 727 0
 5220 008e 214B     	 ldr r3,.L245+36
 5221 0090 0022     	 mov r2,#0
 5222 0092 1A60     	 str r2,[r3]
 728:../main.c     **** 			  Speeds[1] = 0;
 5223              	 .loc 6 728 0
 5224 0094 1F4B     	 ldr r3,.L245+36
 5225 0096 0022     	 mov r2,#0
 5226 0098 5A60     	 str r2,[r3,#4]
 729:../main.c     **** 			  Speeds[2] = 0;
 5227              	 .loc 6 729 0
 5228 009a 1E4B     	 ldr r3,.L245+36
 5229 009c 0022     	 mov r2,#0
 5230 009e 9A60     	 str r2,[r3,#8]
 730:../main.c     **** 			  Speeds[3] = 0;
 5231              	 .loc 6 730 0
 5232 00a0 1C4B     	 ldr r3,.L245+36
 5233 00a2 0022     	 mov r2,#0
 5234 00a4 DA60     	 str r2,[r3,#12]
 5235              	.L243:
 731:../main.c     **** 		}
 732:../main.c     **** 	}
 733:../main.c     **** 
 734:../main.c     **** 	//trajectoryact calc
 735:../main.c     **** 	//calc_act_trajctory();
 736:../main.c     **** 
 737:../main.c     **** 
 738:../main.c     **** 	//set Angles PWM
 739:../main.c     **** 	Steering_set_Angles(Steering_Angles);
 5236              	 .loc 6 739 0
 5237 00a6 1A4B     	 ldr r3,.L245+32
 5238 00a8 181C     	 mov r0,r3
 5239 00aa FFF7FEFF 	 bl Steering_set_Angles
 740:../main.c     **** 
 741:../main.c     **** 	//send traget speeds to inverter
 742:../main.c     **** 	CAN_send_Speeds(Speeds);
 5240              	 .loc 6 742 0
 5241 00ae 194B     	 ldr r3,.L245+36
 5242 00b0 181C     	 mov r0,r3
 5243 00b2 FFF7FEFF 	 bl CAN_send_Speeds
 743:../main.c     **** 
 744:../main.c     **** 	//
 745:../main.c     **** 	if(reset_distance == 1){
 5244              	 .loc 6 745 0
 5245 00b6 184B     	 ldr r3,.L245+40
 5246 00b8 1B78     	 ldrb r3,[r3]
 5247 00ba DBB2     	 uxtb r3,r3
 5248 00bc 012B     	 cmp r3,#1
 5249 00be 10D1     	 bne .L244
 5250              	.LBB6:
 746:../main.c     **** 		reset_distance = 0;
 5251              	 .loc 6 746 0
 5252 00c0 154B     	 ldr r3,.L245+40
 5253 00c2 0022     	 mov r2,#0
 5254 00c4 1A70     	 strb r2,[r3]
 747:../main.c     **** 		uint8_t all[4] = {1,1,1,1};
 5255              	 .loc 6 747 0
 5256 00c6 3A1D     	 add r2,r7,#4
 5257 00c8 144B     	 ldr r3,.L245+44
 5258 00ca 111C     	 mov r1,r2
 5259 00cc 1A1C     	 mov r2,r3
 5260 00ce 0423     	 mov r3,#4
 5261 00d0 081C     	 mov r0,r1
 5262 00d2 111C     	 mov r1,r2
 5263 00d4 1A1C     	 mov r2,r3
 5264 00d6 FFF7FEFF 	 bl memcpy
 748:../main.c     **** 		CAN_reset_distance(all);
 5265              	 .loc 6 748 0
 5266 00da 3B1D     	 add r3,r7,#4
 5267 00dc 181C     	 mov r0,r3
 5268 00de FFF7FEFF 	 bl CAN_reset_distance
 5269              	.L244:
 5270              	.LBE6:
 749:../main.c     **** 	}
 750:../main.c     **** 
 751:../main.c     **** 
 752:../main.c     **** 	DIGITAL_IO_SetOutputLow(&CALC_TIME_INDICATOR);
 5271              	 .loc 6 752 0
 5272 00e2 034B     	 ldr r3,.L245
 5273 00e4 181C     	 mov r0,r3
 5274 00e6 FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 753:../main.c     **** }
 5275              	 .loc 6 753 0
 5276 00ea BD46     	 mov sp,r7
 5277 00ec 02B0     	 add sp,sp,#8
 5278              	 
 5279 00ee 80BD     	 pop {r7,pc}
 5280              	.L246:
 5281              	 .align 2
 5282              	.L245:
 5283 00f0 00000000 	 .word CALC_TIME_INDICATOR
 5284 00f4 00000000 	 .word Steering_mode
 5285 00f8 00000000 	 .word RC_controll
 5286 00fc 00000000 	 .word NO_New_Input_counter
 5287 0100 00000000 	 .word RC_no_data_LED
 5288 0104 00000000 	 .word New_Input
 5289 0108 00000000 	 .word Steering_direction
 5290 010c 00000000 	 .word Driving_speed
 5291 0110 00000000 	 .word Steering_Angles
 5292 0114 00000000 	 .word Speeds
 5293 0118 00000000 	 .word reset_distance
 5294 011c 00000000 	 .word .LC0
 5295              	 .cfi_endproc
 5296              	.LFE240:
 5298              	 .section .text.Servo_NP_setting,"ax",%progbits
 5299              	 .align 2
 5300              	 .global Servo_NP_setting
 5301              	 .code 16
 5302              	 .thumb_func
 5304              	Servo_NP_setting:
 5305              	.LFB241:
 754:../main.c     **** 
 755:../main.c     **** /*
 756:../main.c     **** void calc_act_trajctory(){
 757:../main.c     **** 	float avg_Actual_Speeds = average(Actual_Speeds,4);
 758:../main.c     **** 
 759:../main.c     **** 	switch(Steering_mode_cal) // options 'Front'; 'Rear'; '4_Wheel'; 'Carb'; 'Rotate'
 760:../main.c     **** 		{
 761:../main.c     **** 			case FRONT://#############################################################
 762:../main.c     **** 				//act_trajctory_x =
 763:../main.c     **** 				break;
 764:../main.c     **** 
 765:../main.c     **** 			case BACK:// rear #############################################################
 766:../main.c     **** 
 767:../main.c     **** 
 768:../main.c     **** 			case ALL_WHEEL: // 4 wheel #############################################################
 769:../main.c     **** 
 770:../main.c     **** 				break;
 771:../main.c     **** 
 772:../main.c     **** 			case CRAB:  //carb //#############################################################
 773:../main.c     **** 				act_trajctory_x = avg_Actual_Speeds * cos(Steering_Angles[0]);
 774:../main.c     **** 				act_trajctory_y = avg_Actual_Speeds * sin(Steering_Angles[0]);
 775:../main.c     **** 				break;
 776:../main.c     **** 
 777:../main.c     **** 			case ROTATE: // rotate #############################################################
 778:../main.c     **** 				// steering agel for turng in place
 779:../main.c     **** 				angle_fl = ROTATION_ANGLE + ROTATION_ANGLE_OFFSET;
 780:../main.c     **** 				angle_fr = -ROTATION_ANGLE + ROTATION_ANGLE_OFFSET;
 781:../main.c     **** 				angle_rl = -ROTATION_ANGLE + ROTATION_ANGLE_OFFSET;
 782:../main.c     **** 				angle_rr = ROTATION_ANGLE + ROTATION_ANGLE_OFFSET;
 783:../main.c     **** 
 784:../main.c     **** 				 // speed
 785:../main.c     **** 				if (Steering_direction_cal > 10){
 786:../main.c     **** 					speed_fl = ROTATION_SPEED;
 787:../main.c     **** 					speed_fr = -ROTATION_SPEED;
 788:../main.c     **** 					speed_rl = ROTATION_SPEED;
 789:../main.c     **** 					speed_rr = -ROTATION_SPEED;
 790:../main.c     **** 				}
 791:../main.c     **** 				else if(Steering_direction_cal < -10){
 792:../main.c     **** 					speed_fl = -ROTATION_SPEED;
 793:../main.c     **** 					speed_fr = ROTATION_SPEED;
 794:../main.c     **** 					speed_rl = -ROTATION_SPEED;
 795:../main.c     **** 					speed_rr = ROTATION_SPEED;
 796:../main.c     **** 				}
 797:../main.c     **** 				else{
 798:../main.c     **** 					speed_fl = 0;
 799:../main.c     **** 					speed_fr = 0;
 800:../main.c     **** 					speed_rl = 0;
 801:../main.c     **** 					speed_rr = 0;
 802:../main.c     **** 				}
 803:../main.c     **** 				break;
 804:../main.c     **** 
 805:../main.c     **** 			default:
 806:../main.c     **** 
 807:../main.c     **** 		}
 808:../main.c     **** 
 809:../main.c     **** }
 810:../main.c     **** */
 811:../main.c     **** 
 812:../main.c     **** void Servo_NP_setting(void){
 5306              	 .loc 6 812 0
 5307              	 .cfi_startproc
 5308 0000 80B5     	 push {r7,lr}
 5309              	.LCFI77:
 5310              	 .cfi_def_cfa_offset 8
 5311              	 .cfi_offset 7,-8
 5312              	 .cfi_offset 14,-4
 5313 0002 00AF     	 add r7,sp,#0
 5314              	.LCFI78:
 5315              	 .cfi_def_cfa_register 7
 813:../main.c     **** 	  NP[0] = NPfl;
 5316              	 .loc 6 813 0
 5317 0004 084B     	 ldr r3,.L248
 5318 0006 1A68     	 ldr r2,[r3]
 5319 0008 084B     	 ldr r3,.L248+4
 5320 000a 1A60     	 str r2,[r3]
 814:../main.c     **** 	  NP[1] = NPfr;
 5321              	 .loc 6 814 0
 5322 000c 084B     	 ldr r3,.L248+8
 5323 000e 1A68     	 ldr r2,[r3]
 5324 0010 064B     	 ldr r3,.L248+4
 5325 0012 5A60     	 str r2,[r3,#4]
 815:../main.c     **** 	  NP[2] = NPrl;
 5326              	 .loc 6 815 0
 5327 0014 074B     	 ldr r3,.L248+12
 5328 0016 1A68     	 ldr r2,[r3]
 5329 0018 044B     	 ldr r3,.L248+4
 5330 001a 9A60     	 str r2,[r3,#8]
 816:../main.c     **** 	  NP[3] = NPrr;
 5331              	 .loc 6 816 0
 5332 001c 064B     	 ldr r3,.L248+16
 5333 001e 1A68     	 ldr r2,[r3]
 5334 0020 024B     	 ldr r3,.L248+4
 5335 0022 DA60     	 str r2,[r3,#12]
 817:../main.c     **** }
 5336              	 .loc 6 817 0
 5337 0024 BD46     	 mov sp,r7
 5338              	 
 5339 0026 80BD     	 pop {r7,pc}
 5340              	.L249:
 5341              	 .align 2
 5342              	.L248:
 5343 0028 00000000 	 .word NPfl
 5344 002c 00000000 	 .word NP
 5345 0030 00000000 	 .word NPfr
 5346 0034 00000000 	 .word NPrl
 5347 0038 00000000 	 .word NPrr
 5348              	 .cfi_endproc
 5349              	.LFE241:
 5351              	 .section .text.average,"ax",%progbits
 5352              	 .align 2
 5353              	 .global average
 5354              	 .code 16
 5355              	 .thumb_func
 5357              	average:
 5358              	.LFB242:
 818:../main.c     **** 
 819:../main.c     **** float average(float a[],int num_values) {
 5359              	 .loc 6 819 0
 5360              	 .cfi_startproc
 5361 0000 80B5     	 push {r7,lr}
 5362              	.LCFI79:
 5363              	 .cfi_def_cfa_offset 8
 5364              	 .cfi_offset 7,-8
 5365              	 .cfi_offset 14,-4
 5366 0002 84B0     	 sub sp,sp,#16
 5367              	.LCFI80:
 5368              	 .cfi_def_cfa_offset 24
 5369 0004 00AF     	 add r7,sp,#0
 5370              	.LCFI81:
 5371              	 .cfi_def_cfa_register 7
 5372 0006 7860     	 str r0,[r7,#4]
 5373 0008 3960     	 str r1,[r7]
 820:../main.c     ****     float sum = 0;
 5374              	 .loc 6 820 0
 5375 000a 0023     	 mov r3,#0
 5376 000c FB60     	 str r3,[r7,#12]
 821:../main.c     ****     int i;
 822:../main.c     ****     for(i = 0; i < num_values; i++){
 5377              	 .loc 6 822 0
 5378 000e 0023     	 mov r3,#0
 5379 0010 BB60     	 str r3,[r7,#8]
 5380 0012 0DE0     	 b .L251
 5381              	.L252:
 823:../main.c     ****         sum += a[i];
 5382              	 .loc 6 823 0 discriminator 3
 5383 0014 BB68     	 ldr r3,[r7,#8]
 5384 0016 9B00     	 lsl r3,r3,#2
 5385 0018 7A68     	 ldr r2,[r7,#4]
 5386 001a D318     	 add r3,r2,r3
 5387 001c 1B68     	 ldr r3,[r3]
 5388 001e F868     	 ldr r0,[r7,#12]
 5389 0020 191C     	 add r1,r3,#0
 5390 0022 FFF7FEFF 	 bl __aeabi_fadd
 5391 0026 031C     	 add r3,r0,#0
 5392 0028 FB60     	 str r3,[r7,#12]
 822:../main.c     ****         sum += a[i];
 5393              	 .loc 6 822 0 discriminator 3
 5394 002a BB68     	 ldr r3,[r7,#8]
 5395 002c 0133     	 add r3,r3,#1
 5396 002e BB60     	 str r3,[r7,#8]
 5397              	.L251:
 822:../main.c     ****         sum += a[i];
 5398              	 .loc 6 822 0 is_stmt 0 discriminator 1
 5399 0030 BA68     	 ldr r2,[r7,#8]
 5400 0032 3B68     	 ldr r3,[r7]
 5401 0034 9A42     	 cmp r2,r3
 5402 0036 EDDB     	 blt .L252
 824:../main.c     ****     }
 825:../main.c     ****     return sum / num_values;
 5403              	 .loc 6 825 0 is_stmt 1
 5404 0038 3868     	 ldr r0,[r7]
 5405 003a FFF7FEFF 	 bl __aeabi_i2f
 5406 003e 031C     	 add r3,r0,#0
 5407 0040 F868     	 ldr r0,[r7,#12]
 5408 0042 191C     	 add r1,r3,#0
 5409 0044 FFF7FEFF 	 bl __aeabi_fdiv
 5410 0048 031C     	 add r3,r0,#0
 826:../main.c     **** }
 5411              	 .loc 6 826 0
 5412 004a 181C     	 add r0,r3,#0
 5413 004c BD46     	 mov sp,r7
 5414 004e 04B0     	 add sp,sp,#16
 5415              	 
 5416 0050 80BD     	 pop {r7,pc}
 5417              	 .cfi_endproc
 5418              	.LFE242:
 5420 0052 C046     	 .section .text.mode_led,"ax",%progbits
 5421              	 .align 2
 5422              	 .global mode_led
 5423              	 .code 16
 5424              	 .thumb_func
 5426              	mode_led:
 5427              	.LFB243:
 827:../main.c     **** 
 828:../main.c     **** void mode_led(uint8_t var){
 5428              	 .loc 6 828 0
 5429              	 .cfi_startproc
 5430 0000 80B5     	 push {r7,lr}
 5431              	.LCFI82:
 5432              	 .cfi_def_cfa_offset 8
 5433              	 .cfi_offset 7,-8
 5434              	 .cfi_offset 14,-4
 5435 0002 82B0     	 sub sp,sp,#8
 5436              	.LCFI83:
 5437              	 .cfi_def_cfa_offset 16
 5438 0004 00AF     	 add r7,sp,#0
 5439              	.LCFI84:
 5440              	 .cfi_def_cfa_register 7
 5441 0006 021C     	 mov r2,r0
 5442 0008 FB1D     	 add r3,r7,#7
 5443 000a 1A70     	 strb r2,[r3]
 829:../main.c     **** 	if(CHECK_BIT(var,0)){
 5444              	 .loc 6 829 0
 5445 000c FB1D     	 add r3,r7,#7
 5446 000e 1B78     	 ldrb r3,[r3]
 5447 0010 0122     	 mov r2,#1
 5448 0012 1340     	 and r3,r2
 5449 0014 04D0     	 beq .L255
 830:../main.c     **** 		DIGITAL_IO_SetOutputLow(&MODE_001);
 5450              	 .loc 6 830 0
 5451 0016 174B     	 ldr r3,.L261
 5452 0018 181C     	 mov r0,r3
 5453 001a FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 5454 001e 03E0     	 b .L256
 5455              	.L255:
 831:../main.c     **** 	}
 832:../main.c     **** 	else{
 833:../main.c     **** 		DIGITAL_IO_SetOutputHigh(&MODE_001);
 5456              	 .loc 6 833 0
 5457 0020 144B     	 ldr r3,.L261
 5458 0022 181C     	 mov r0,r3
 5459 0024 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 5460              	.L256:
 834:../main.c     **** 	}
 835:../main.c     **** 
 836:../main.c     **** 	if(CHECK_BIT(var,1)){
 5461              	 .loc 6 836 0
 5462 0028 FB1D     	 add r3,r7,#7
 5463 002a 1B78     	 ldrb r3,[r3]
 5464 002c 5B08     	 lsr r3,r3,#1
 5465 002e DBB2     	 uxtb r3,r3
 5466 0030 1A1C     	 mov r2,r3
 5467 0032 0123     	 mov r3,#1
 5468 0034 1340     	 and r3,r2
 5469 0036 04D0     	 beq .L257
 837:../main.c     **** 		DIGITAL_IO_SetOutputLow(&MODE_010);
 5470              	 .loc 6 837 0
 5471 0038 0F4B     	 ldr r3,.L261+4
 5472 003a 181C     	 mov r0,r3
 5473 003c FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 5474 0040 03E0     	 b .L258
 5475              	.L257:
 838:../main.c     **** 	}
 839:../main.c     **** 	else{
 840:../main.c     **** 		DIGITAL_IO_SetOutputHigh(&MODE_010);
 5476              	 .loc 6 840 0
 5477 0042 0D4B     	 ldr r3,.L261+4
 5478 0044 181C     	 mov r0,r3
 5479 0046 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 5480              	.L258:
 841:../main.c     **** 	}
 842:../main.c     **** 
 843:../main.c     **** 	if(CHECK_BIT(var,2)){
 5481              	 .loc 6 843 0
 5482 004a FB1D     	 add r3,r7,#7
 5483 004c 1B78     	 ldrb r3,[r3]
 5484 004e 9B08     	 lsr r3,r3,#2
 5485 0050 DBB2     	 uxtb r3,r3
 5486 0052 1A1C     	 mov r2,r3
 5487 0054 0123     	 mov r3,#1
 5488 0056 1340     	 and r3,r2
 5489 0058 04D0     	 beq .L259
 844:../main.c     **** 		DIGITAL_IO_SetOutputLow(&MODE_100);
 5490              	 .loc 6 844 0
 5491 005a 084B     	 ldr r3,.L261+8
 5492 005c 181C     	 mov r0,r3
 5493 005e FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 5494 0062 03E0     	 b .L254
 5495              	.L259:
 845:../main.c     **** 	}
 846:../main.c     **** 	else{
 847:../main.c     **** 		DIGITAL_IO_SetOutputHigh(&MODE_100);
 5496              	 .loc 6 847 0
 5497 0064 054B     	 ldr r3,.L261+8
 5498 0066 181C     	 mov r0,r3
 5499 0068 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 5500              	.L254:
 848:../main.c     **** 	}
 849:../main.c     **** }
 5501              	 .loc 6 849 0
 5502 006c BD46     	 mov sp,r7
 5503 006e 02B0     	 add sp,sp,#8
 5504              	 
 5505 0070 80BD     	 pop {r7,pc}
 5506              	.L262:
 5507 0072 C046     	 .align 2
 5508              	.L261:
 5509 0074 00000000 	 .word MODE_001
 5510 0078 00000000 	 .word MODE_010
 5511 007c 00000000 	 .word MODE_100
 5512              	 .cfi_endproc
 5513              	.LFE243:
 5515              	 .text
 5516              	.Letext0:
 5517              	 .file 7 "c:\\dave\\dave-ide-4.4.2-64bit\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 5518              	 .file 8 "c:\\dave\\dave-ide-4.4.2-64bit\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 5519              	 .file 9 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/CMSIS/Infineon/XMC1400_series/Include/XMC1400.h"
 5520              	 .file 10 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc/xmc1_scu.h"
 5521              	 .file 11 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc/xmc_can.h"
 5522              	 .file 12 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/GLOBAL_CAN/global_can.h"
 5523              	 .file 13 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc/xmc1_gpio.h"
 5524              	 .file 14 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/CAN_NODE/can_node.h"
 5525              	 .file 15 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc/xmc_ccu4.h"
 5526              	 .file 16 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/GLOBAL_CCU4/global_ccu4.h"
 5527              	 .file 17 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PWM/pwm.h"
 5528              	 .file 18 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/CAPTURE/capture.h"
 5529              	 .file 19 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc/xmc_eru.h"
 5530              	 .file 20 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DAVE.h"
 5531              	 .file 21 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/CMSIS/Include/cmsis_gcc.h"
 5532              	 .file 22 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/CMSIS/Infineon/XMC1400_series/Include/system_XMC1400.h"
 5533              	 .file 23 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/CAN_NODE/can_node_extern.h"
 5534              	 .file 24 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PWM/PWM_Extern.h"
 5535              	 .file 25 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/CAPTURE/capture_extern.h"
 5536              	 .file 26 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO/digital_io_extern.h"
 5537              	 .file 27 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PIN_INTERRUPT/pin_interrupt_extern.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
    {standard input}:18     .text.XMC_GPIO_SetOutputHigh:00000000 $t
    {standard input}:22     .text.XMC_GPIO_SetOutputHigh:00000000 XMC_GPIO_SetOutputHigh
    {standard input}:58     .text.XMC_GPIO_SetOutputLow:00000000 $t
    {standard input}:62     .text.XMC_GPIO_SetOutputLow:00000000 XMC_GPIO_SetOutputLow
    {standard input}:98     .text.XMC_GPIO_GetInput:00000000 $t
    {standard input}:102    .text.XMC_GPIO_GetInput:00000000 XMC_GPIO_GetInput
    {standard input}:140    .text.DIGITAL_IO_SetOutputHigh:00000000 $t
    {standard input}:144    .text.DIGITAL_IO_SetOutputHigh:00000000 DIGITAL_IO_SetOutputHigh
    {standard input}:178    .text.DIGITAL_IO_SetOutputLow:00000000 $t
    {standard input}:182    .text.DIGITAL_IO_SetOutputLow:00000000 DIGITAL_IO_SetOutputLow
    {standard input}:215    .text.PIN_INTERRUPT_GetPinValue:00000000 $t
    {standard input}:219    .text.PIN_INTERRUPT_GetPinValue:00000000 PIN_INTERRUPT_GetPinValue
    {standard input}:255    .text.XMC_WDT_Start:00000000 $t
    {standard input}:259    .text.XMC_WDT_Start:00000000 XMC_WDT_Start
    {standard input}:286    .text.XMC_WDT_Start:00000014 $d
    {standard input}:291    .text.XMC_WDT_Service:00000000 $t
    {standard input}:295    .text.XMC_WDT_Service:00000000 XMC_WDT_Service
    {standard input}:318    .text.XMC_WDT_Service:00000010 $d
    {standard input}:324    .text.XMC_WDT_ClearAlarm:00000000 $t
    {standard input}:328    .text.XMC_WDT_ClearAlarm:00000000 XMC_WDT_ClearAlarm
    {standard input}:351    .text.XMC_WDT_ClearAlarm:00000010 $d
    {standard input}:356    .text.WATCHDOG_Start:00000000 $t
    {standard input}:360    .text.WATCHDOG_Start:00000000 WATCHDOG_Start
    {standard input}:383    .text.WATCHDOG_Service:00000000 $t
    {standard input}:387    .text.WATCHDOG_Service:00000000 WATCHDOG_Service
    {standard input}:409    .text.WATCHDOG_ClearAlarm:00000000 $t
    {standard input}:413    .text.WATCHDOG_ClearAlarm:00000000 WATCHDOG_ClearAlarm
    {standard input}:439    .data.NP:00000000 NP
    {standard input}:436    .data.NP:00000000 $d
    {standard input}:449    .data.NPfl:00000000 NPfl
    {standard input}:446    .data.NPfl:00000000 $d
    {standard input}:456    .data.NPfr:00000000 NPfr
    {standard input}:453    .data.NPfr:00000000 $d
    {standard input}:463    .data.NPrl:00000000 NPrl
    {standard input}:460    .data.NPrl:00000000 $d
    {standard input}:470    .data.NPrr:00000000 NPrr
    {standard input}:467    .data.NPrr:00000000 $d
    {standard input}:476    .data.RC_controll:00000000 RC_controll
    {standard input}:482    .data.Steering_mode:00000000 Steering_mode
    {standard input}:488    .bss.New_Input:00000000 New_Input
    {standard input}:489    .bss.New_Input:00000000 $d
    {standard input}:495    .bss.NO_New_Input_counter:00000000 NO_New_Input_counter
    {standard input}:492    .bss.NO_New_Input_counter:00000000 $d
    {standard input}:502    .bss.Speeds_int16_r:00000000 Speeds_int16_r
    {standard input}:499    .bss.Speeds_int16_r:00000000 $d
    {standard input}:509    .bss.CAN_RX_0:00000000 CAN_RX_0
    {standard input}:506    .bss.CAN_RX_0:00000000 $d
                            *COM*:00000001 init_status
    {standard input}:517    .bss.CAN_OK:00000000 CAN_OK
    {standard input}:514    .bss.CAN_OK:00000000 $d
    {standard input}:524    .bss.Inverters_CAN_state:00000000 Inverters_CAN_state
    {standard input}:521    .bss.Inverters_CAN_state:00000000 $d
    {standard input}:531    .bss.CAN_10ms_counter:00000000 CAN_10ms_counter
    {standard input}:528    .bss.CAN_10ms_counter:00000000 $d
    {standard input}:537    .bss.reset_distance:00000000 reset_distance
    {standard input}:538    .bss.reset_distance:00000000 $d
    {standard input}:544    .bss.speed_fl_act:00000000 speed_fl_act
    {standard input}:541    .bss.speed_fl_act:00000000 $d
    {standard input}:551    .bss.speed_fr_act:00000000 speed_fr_act
    {standard input}:548    .bss.speed_fr_act:00000000 $d
    {standard input}:558    .bss.speed_rl_act:00000000 speed_rl_act
    {standard input}:555    .bss.speed_rl_act:00000000 $d
    {standard input}:565    .bss.speed_rr_act:00000000 speed_rr_act
    {standard input}:562    .bss.speed_rr_act:00000000 $d
    {standard input}:572    .bss.distance_fl_act:00000000 distance_fl_act
    {standard input}:569    .bss.distance_fl_act:00000000 $d
    {standard input}:579    .bss.distance_fr_act:00000000 distance_fr_act
    {standard input}:576    .bss.distance_fr_act:00000000 $d
    {standard input}:586    .bss.distance_rl_act:00000000 distance_rl_act
    {standard input}:583    .bss.distance_rl_act:00000000 $d
    {standard input}:593    .bss.distance_rr_act:00000000 distance_rr_act
    {standard input}:590    .bss.distance_rr_act:00000000 $d
    {standard input}:599    .bss.CAN_RX_Inverter_count:00000000 CAN_RX_Inverter_count
    {standard input}:600    .bss.CAN_RX_Inverter_count:00000000 $d
    {standard input}:605    .bss.CAN_state_Ultrasonic:00000000 CAN_state_Ultrasonic
    {standard input}:606    .bss.CAN_state_Ultrasonic:00000000 $d
    {standard input}:612    .bss.Ultrasonic_cm_C:00000000 Ultrasonic_cm_C
    {standard input}:609    .bss.Ultrasonic_cm_C:00000000 $d
    {standard input}:619    .bss.Ultrasonic_cm_L:00000000 Ultrasonic_cm_L
    {standard input}:616    .bss.Ultrasonic_cm_L:00000000 $d
    {standard input}:626    .bss.Ultrasonic_cm_R:00000000 Ultrasonic_cm_R
    {standard input}:623    .bss.Ultrasonic_cm_R:00000000 $d
    {standard input}:633    .data.ALPHA_ULTARSONIC:00000000 ALPHA_ULTARSONIC
    {standard input}:630    .data.ALPHA_ULTARSONIC:00000000 $d
    {standard input}:639    .bss.obstructed_L:00000000 obstructed_L
    {standard input}:640    .bss.obstructed_L:00000000 $d
    {standard input}:645    .bss.obstructed_R:00000000 obstructed_R
    {standard input}:646    .bss.obstructed_R:00000000 $d
    {standard input}:652    .bss.Fil_Ultrasonic_m_C:00000000 Fil_Ultrasonic_m_C
    {standard input}:649    .bss.Fil_Ultrasonic_m_C:00000000 $d
    {standard input}:659    .bss.Fil_Ultrasonic_m_L:00000000 Fil_Ultrasonic_m_L
    {standard input}:656    .bss.Fil_Ultrasonic_m_L:00000000 $d
    {standard input}:666    .bss.Fil_Ultrasonic_m_R:00000000 Fil_Ultrasonic_m_R
    {standard input}:663    .bss.Fil_Ultrasonic_m_R:00000000 $d
    {standard input}:673    .data.Obstacel_F:00000000 Obstacel_F
    {standard input}:670    .data.Obstacel_F:00000000 $d
    {standard input}:681    .data.Obstacel_L:00000000 Obstacel_L
    {standard input}:678    .data.Obstacel_L:00000000 $d
    {standard input}:689    .data.Obstacel_R:00000000 Obstacel_R
    {standard input}:686    .data.Obstacel_R:00000000 $d
    {standard input}:697    .bss.obstacel_F_x:00000000 obstacel_F_x
    {standard input}:694    .bss.obstacel_F_x:00000000 $d
    {standard input}:704    .bss.obstacel_L_x:00000000 obstacel_L_x
    {standard input}:701    .bss.obstacel_L_x:00000000 $d
    {standard input}:711    .bss.obstacel_L_y:00000000 obstacel_L_y
    {standard input}:708    .bss.obstacel_L_y:00000000 $d
    {standard input}:718    .bss.obstacel_R_x:00000000 obstacel_R_x
    {standard input}:715    .bss.obstacel_R_x:00000000 $d
    {standard input}:725    .bss.obstacel_R_y:00000000 obstacel_R_y
    {standard input}:722    .bss.obstacel_R_y:00000000 $d
    {standard input}:731    .bss.RC_Signal_OK:00000000 RC_Signal_OK
    {standard input}:732    .bss.RC_Signal_OK:00000000 $d
    {standard input}:737    .bss.RC_Signal_not_OK_counter:00000000 RC_Signal_not_OK_counter
    {standard input}:738    .bss.RC_Signal_not_OK_counter:00000000 $d
    {standard input}:744    .bss.captured_time_Steering:00000000 captured_time_Steering
    {standard input}:741    .bss.captured_time_Steering:00000000 $d
    {standard input}:751    .bss.captured_time_Speed:00000000 captured_time_Speed
    {standard input}:748    .bss.captured_time_Speed:00000000 $d
    {standard input}:757    .bss.RC_no_Speed_data_counter:00000000 RC_no_Speed_data_counter
    {standard input}:758    .bss.RC_no_Speed_data_counter:00000000 $d
    {standard input}:763    .bss.RC_no_Steering_data_counter:00000000 RC_no_Steering_data_counter
    {standard input}:764    .bss.RC_no_Steering_data_counter:00000000 $d
    {standard input}:770    .bss.RC_Speed:00000000 RC_Speed
    {standard input}:767    .bss.RC_Speed:00000000 $d
    {standard input}:777    .bss.RC_Steering:00000000 RC_Steering
    {standard input}:774    .bss.RC_Steering:00000000 $d
    {standard input}:784    .data.RC_Speed_ns_to_mps:00000000 RC_Speed_ns_to_mps
    {standard input}:781    .data.RC_Speed_ns_to_mps:00000000 $d
    {standard input}:791    .data.RC_Steering_ns_to_deg:00000000 RC_Steering_ns_to_deg
    {standard input}:788    .data.RC_Steering_ns_to_deg:00000000 $d
    {standard input}:798    .bss.RC_gear_100us_counter:00000000 RC_gear_100us_counter
    {standard input}:795    .bss.RC_gear_100us_counter:00000000 $d
    {standard input}:805    .bss.RC_AUX1_100us_counter:00000000 RC_AUX1_100us_counter
    {standard input}:802    .bss.RC_AUX1_100us_counter:00000000 $d
    {standard input}:811    .data.RC_Gear_state:00000000 RC_Gear_state
    {standard input}:817    .data.RC_AUX1_state:00000000 RC_AUX1_state
    {standard input}:823    .data.RC_Gear_duty:00000000 RC_Gear_duty
    {standard input}:829    .data.RC_Gear_duty_OLD:00000000 RC_Gear_duty_OLD
    {standard input}:835    .data.RC_AUX1_duty:00000000 RC_AUX1_duty
    {standard input}:841    .data.RC_Speed_Stop:00000000 RC_Speed_Stop
    {standard input}:848    .bss.Steering_direction:00000000 Steering_direction
    {standard input}:845    .bss.Steering_direction:00000000 $d
    {standard input}:855    .bss.Driving_speed:00000000 Driving_speed
    {standard input}:852    .bss.Driving_speed:00000000 $d
                            *COM*:00000004 R_Turn
                            *COM*:00000004 Speed_ratio
    {standard input}:864    .bss.speed_fl:00000000 speed_fl
    {standard input}:861    .bss.speed_fl:00000000 $d
    {standard input}:871    .bss.speed_fr:00000000 speed_fr
    {standard input}:868    .bss.speed_fr:00000000 $d
    {standard input}:878    .bss.speed_rl:00000000 speed_rl
    {standard input}:875    .bss.speed_rl:00000000 $d
    {standard input}:885    .bss.speed_rr:00000000 speed_rr
    {standard input}:882    .bss.speed_rr:00000000 $d
    {standard input}:892    .bss.angle_fl:00000000 angle_fl
    {standard input}:889    .bss.angle_fl:00000000 $d
    {standard input}:899    .bss.angle_fr:00000000 angle_fr
    {standard input}:896    .bss.angle_fr:00000000 $d
    {standard input}:906    .bss.angle_rl:00000000 angle_rl
    {standard input}:903    .bss.angle_rl:00000000 $d
    {standard input}:913    .bss.angle_rr:00000000 angle_rr
    {standard input}:910    .bss.angle_rr:00000000 $d
    {standard input}:920    .bss.Speeds:00000000 Speeds
    {standard input}:917    .bss.Speeds:00000000 $d
    {standard input}:927    .bss.Steering_Angles:00000000 Steering_Angles
    {standard input}:924    .bss.Steering_Angles:00000000 $d
    {standard input}:934    .bss.Servo_PWMs:00000000 Servo_PWMs
    {standard input}:931    .bss.Servo_PWMs:00000000 $d
    {standard input}:941    .bss.Inveter_CAN_OK:00000000 Inveter_CAN_OK
    {standard input}:938    .bss.Inveter_CAN_OK:00000000 $d
    {standard input}:948    .bss.Actual_Speeds:00000000 Actual_Speeds
    {standard input}:945    .bss.Actual_Speeds:00000000 $d
    {standard input}:955    .bss.Actual_Distance:00000000 Actual_Distance
    {standard input}:952    .bss.Actual_Distance:00000000 $d
    {standard input}:958    .text.main:00000000 $t
    {standard input}:963    .text.main:00000000 main
    {standard input}:1020   .text.main:00000040 $d
    {standard input}:1039   .text.Steering_Function:00000000 $t
    {standard input}:1044   .text.Steering_Function:00000000 Steering_Function
    {standard input}:1179   .rodata.Steering_Function:00000000 $d
    {standard input}:1444   .text.Steering_Function:000002f0 $d
    {standard input}:1471   .text.Steering_Function:00000354 $t
    {standard input}:1895   .text.Steering_Function:000006b8 $d
    {standard input}:1923   .text.Steering_Function:00000720 $t
    {standard input}:2363   .text.Steering_Function:00000aa0 $d
    {standard input}:2393   .text.Steering_Function:00000b10 $t
    {standard input}:2813   .text.Steering_Function:00000ddc $d
    {standard input}:2845   .text.IRQ4_Handler:00000000 $t
    {standard input}:2850   .text.IRQ4_Handler:00000000 IRQ4_Handler
    {standard input}:3009   .text.Ultra_sonic_filter:00000000 Ultra_sonic_filter
    {standard input}:2992   .text.IRQ4_Handler:000000e4 $d
    {standard input}:3004   .text.Ultra_sonic_filter:00000000 $t
    {standard input}:3578   .text.Exp_moving_average:00000000 Exp_moving_average
    {standard input}:3419   .text.Ultrasoinc_Obstructet_Test:00000000 Ultrasoinc_Obstructet_Test
    {standard input}:3392   .text.Ultra_sonic_filter:000002d4 $d
    {standard input}:3414   .text.Ultrasoinc_Obstructet_Test:00000000 $t
    {standard input}:3567   .text.Ultrasoinc_Obstructet_Test:00000104 $d
    {standard input}:3573   .text.Exp_moving_average:00000000 $t
    {standard input}:3626   .text.IRQ3_Handler:00000000 $t
    {standard input}:3631   .text.IRQ3_Handler:00000000 IRQ3_Handler
    {standard input}:3684   .text.CAN_RX_Inverter_Read_Data:00000000 CAN_RX_Inverter_Read_Data
    {standard input}:3673   .text.IRQ3_Handler:00000030 $d
    {standard input}:3679   .text.CAN_RX_Inverter_Read_Data:00000000 $t
    {standard input}:4055   .text.CAN_RX_Inverter_Read_Data:0000026c $d
    {standard input}:4073   .text.Watchdog_Handler:00000000 $t
    {standard input}:4078   .text.Watchdog_Handler:00000000 Watchdog_Handler
    {standard input}:4103   .text.Watchdog_Handler:00000014 $d
    {standard input}:4108   .text.CAN_reset_distance:00000000 $t
    {standard input}:4113   .text.CAN_reset_distance:00000000 CAN_reset_distance
    {standard input}:4191   .text.CAN_reset_distance:00000070 $d
    {standard input}:4197   .text.CAN_send_Speeds:00000000 $t
    {standard input}:4202   .text.CAN_send_Speeds:00000000 CAN_send_Speeds
    {standard input}:4295   .text.CAN_send_Speeds:000000a8 $d
    {standard input}:4301   .text.IRQ8_Handler:00000000 $t
    {standard input}:4306   .text.IRQ8_Handler:00000000 IRQ8_Handler
    {standard input}:4351   .text.IRQ8_Handler:00000030 $d
    {standard input}:4360   .text.Steering_set_Angles:00000000 $t
    {standard input}:4365   .text.Steering_set_Angles:00000000 Steering_set_Angles
    {standard input}:4522   .text.Steering_set_Angles:00000104 $d
    {standard input}:4536   .text.RC_Recive:00000000 $t
    {standard input}:4541   .text.RC_Recive:00000000 RC_Recive
    {standard input}:4825   .text.RC_Recive:000001e8 $d
    {standard input}:4851   .text.IRQ12_Handler:00000000 $t
    {standard input}:4856   .text.IRQ12_Handler:00000000 IRQ12_Handler
    {standard input}:4982   .text.IRQ12_Handler:000000ac $d
    {standard input}:4993   .text.IRQ6_Handler:00000000 $t
    {standard input}:4998   .text.IRQ6_Handler:00000000 IRQ6_Handler
    {standard input}:5101   .text.IRQ6_Handler:00000084 $d
    {standard input}:5111   .rodata:00000000 $d
    {standard input}:5118   .text.IRQ7_Handler:00000000 $t
    {standard input}:5123   .text.IRQ7_Handler:00000000 IRQ7_Handler
    {standard input}:5426   .text.mode_led:00000000 mode_led
    {standard input}:5283   .text.IRQ7_Handler:000000f0 $d
    {standard input}:5299   .text.Servo_NP_setting:00000000 $t
    {standard input}:5304   .text.Servo_NP_setting:00000000 Servo_NP_setting
    {standard input}:5343   .text.Servo_NP_setting:00000028 $d
    {standard input}:5352   .text.average:00000000 $t
    {standard input}:5357   .text.average:00000000 average
    {standard input}:5421   .text.mode_led:00000000 $t
    {standard input}:5509   .text.mode_led:00000074 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
DAVE_Init
CAN_NODE_Init
CAN_NODE_0
__aeabi_fcmpgt
__aeabi_fcmplt
__aeabi_f2d
__aeabi_dcmplt
__aeabi_dcmpgt
__aeabi_ddiv
__aeabi_d2f
__aeabi_dadd
__aeabi_dmul
__aeabi_dsub
__aeabi_fmul
__aeabi_fdiv
tan
atan
CAN_NODE_MO_Receive
__aeabi_i2f
cos
sin
__aeabi_fsub
__aeabi_fcmple
__aeabi_fadd
WATCHDOG_LED_BLUE
LED_CAN_ERROR
CAN_NODE_MO_UpdateData
CAN_NODE_MO_Transmit
__aeabi_f2iz
__aeabi_f2uiz
PWM_SetDutyCycle
PWM_servo_fl
PWM_servo_fr
PWM_servo_rl
PWM_servo_rr
__aeabi_ui2d
CAPTURE_Start
CAPTURE_GetCapturedTimeInNanoSec
CAPTURE_RC_Steering
CAPTURE_RC_Speed
RC_no_data_LED
RC_Connected
RC_AUX1
memcpy
CALC_TIME_INDICATOR
MODE_001
MODE_010
MODE_100
