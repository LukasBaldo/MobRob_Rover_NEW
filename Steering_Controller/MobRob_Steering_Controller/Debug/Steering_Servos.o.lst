   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,6
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "Steering_Servos.c"
  14              	 .text
  15              	.Ltext0:
  16              	 .cfi_sections .debug_frame
  17              	 .global NP
  18              	 .section .data.NP,"aw",%progbits
  19              	 .align 2
  22              	NP:
  23 0000 4803     	 .short 840
  24 0002 F502     	 .short 757
  25 0004 7402     	 .short 628
  26 0006 2003     	 .short 800
  27              	 .global NPfl
  28              	 .section .data.NPfl,"aw",%progbits
  29              	 .align 1
  32              	NPfl:
  33 0000 4803     	 .short 840
  34              	 .global NPfr
  35              	 .section .data.NPfr,"aw",%progbits
  36              	 .align 2
  39              	NPfr:
  40 0000 F5020000 	 .word 757
  41              	 .global NPrl
  42              	 .section .data.NPrl,"aw",%progbits
  43              	 .align 2
  46              	NPrl:
  47 0000 74020000 	 .word 628
  48              	 .global NPrr
  49              	 .section .data.NPrr,"aw",%progbits
  50              	 .align 2
  53              	NPrr:
  54 0000 20030000 	 .word 800
  55              	 .global Servo_PWMs
  56              	 .section .bss.Servo_PWMs,"aw",%nobits
  57              	 .align 2
  60              	Servo_PWMs:
  61 0000 00000000 	 .space 16
  61      00000000 
  61      00000000 
  61      00000000 
  62              	 .global __aeabi_f2d
  63              	 .global __aeabi_dmul
  64              	 .global __aeabi_i2d
  65              	 .global __aeabi_dadd
  66              	 .global __aeabi_d2f
  67              	 .global __aeabi_fcmpgt
  68              	 .global __aeabi_fcmplt
  69              	 .global __aeabi_f2uiz
  70              	 .section .text.Steering_set_Angles,"ax",%progbits
  71              	 .align 2
  72              	 .global Steering_set_Angles
  73              	 .code 16
  74              	 .thumb_func
  76              	Steering_set_Angles:
  77              	.LFB224:
  78              	 .file 1 "../Steering_Servos.c"
   1:../Steering_Servos.c **** /*
   2:../Steering_Servos.c ****  * Steering_Servos.c
   3:../Steering_Servos.c ****  *
   4:../Steering_Servos.c ****  *  Created on: 1 Jul 2022
   5:../Steering_Servos.c ****  *      Author: lukas
   6:../Steering_Servos.c ****  */
   7:../Steering_Servos.c **** #include "Steering_Servos.h"
   8:../Steering_Servos.c **** 
   9:../Steering_Servos.c **** #define deg_PWM  0.645 // deg to PWM singlan converstion factor
  10:../Steering_Servos.c **** 
  11:../Steering_Servos.c **** volatile uint16_t NP[4] = {840, 757, 628, 800}; //servo nutral points PWM duty values
  12:../Steering_Servos.c **** uint16_t NPfl = 840; int NPfr = 757; int NPrl = 628; int NPrr = 800; // serov defalut 750
  13:../Steering_Servos.c **** 
  14:../Steering_Servos.c **** float Servo_PWMs[4] = {0, 0, 0, 0};
  15:../Steering_Servos.c **** 
  16:../Steering_Servos.c **** void Steering_set_Angles(float Angles_data[4]){
  79              	 .loc 1 16 0
  80              	 .cfi_startproc
  81 0000 F0B5     	 push {r4,r5,r6,r7,lr}
  82              	.LCFI0:
  83              	 .cfi_def_cfa_offset 20
  84              	 .cfi_offset 4,-20
  85              	 .cfi_offset 5,-16
  86              	 .cfi_offset 6,-12
  87              	 .cfi_offset 7,-8
  88              	 .cfi_offset 14,-4
  89 0002 85B0     	 sub sp,sp,#20
  90              	.LCFI1:
  91              	 .cfi_def_cfa_offset 40
  92 0004 00AF     	 add r7,sp,#0
  93              	.LCFI2:
  94              	 .cfi_def_cfa_register 7
  95 0006 7860     	 str r0,[r7,#4]
  96              	.LBB2:
  17:../Steering_Servos.c **** 	for(uint8_t i = 0 ; i < 4 ; i ++){
  97              	 .loc 1 17 0
  98 0008 0F23     	 mov r3,#15
  99 000a FB18     	 add r3,r7,r3
 100 000c 0022     	 mov r2,#0
 101 000e 1A70     	 strb r2,[r3]
 102 0010 63E0     	 b .L2
 103              	.L7:
  18:../Steering_Servos.c **** 		Servo_PWMs[i] = -Angles_data[i]*deg_PWM + NP[i]; // calcuation of PWM for Angle on each wheel
 104              	 .loc 1 18 0
 105 0012 0F23     	 mov r3,#15
 106 0014 FB18     	 add r3,r7,r3
 107 0016 1C78     	 ldrb r4,[r3]
 108 0018 0F23     	 mov r3,#15
 109 001a FB18     	 add r3,r7,r3
 110 001c 1B78     	 ldrb r3,[r3]
 111 001e 9B00     	 lsl r3,r3,#2
 112 0020 7A68     	 ldr r2,[r7,#4]
 113 0022 D318     	 add r3,r2,r3
 114 0024 1B68     	 ldr r3,[r3]
 115 0026 8022     	 mov r2,#128
 116 0028 1206     	 lsl r2,r2,#24
 117 002a 5340     	 eor r3,r2
 118 002c 181C     	 add r0,r3,#0
 119 002e FFF7FEFF 	 bl __aeabi_f2d
 120 0032 021C     	 mov r2,r0
 121 0034 0B1C     	 mov r3,r1
 122 0036 101C     	 mov r0,r2
 123 0038 191C     	 mov r1,r3
 124 003a 424A     	 ldr r2,.L11
 125 003c 424B     	 ldr r3,.L11+4
 126 003e FFF7FEFF 	 bl __aeabi_dmul
 127 0042 021C     	 mov r2,r0
 128 0044 0B1C     	 mov r3,r1
 129 0046 151C     	 mov r5,r2
 130 0048 1E1C     	 mov r6,r3
 131 004a 0F23     	 mov r3,#15
 132 004c FB18     	 add r3,r7,r3
 133 004e 1A78     	 ldrb r2,[r3]
 134 0050 3E4B     	 ldr r3,.L11+8
 135 0052 5200     	 lsl r2,r2,#1
 136 0054 D35A     	 ldrh r3,[r2,r3]
 137 0056 9BB2     	 uxth r3,r3
 138 0058 181C     	 mov r0,r3
 139 005a FFF7FEFF 	 bl __aeabi_i2d
 140 005e 021C     	 mov r2,r0
 141 0060 0B1C     	 mov r3,r1
 142 0062 281C     	 mov r0,r5
 143 0064 311C     	 mov r1,r6
 144 0066 FFF7FEFF 	 bl __aeabi_dadd
 145 006a 021C     	 mov r2,r0
 146 006c 0B1C     	 mov r3,r1
 147 006e 101C     	 mov r0,r2
 148 0070 191C     	 mov r1,r3
 149 0072 FFF7FEFF 	 bl __aeabi_d2f
 150 0076 011C     	 add r1,r0,#0
 151 0078 354B     	 ldr r3,.L11+12
 152 007a A200     	 lsl r2,r4,#2
 153 007c D150     	 str r1,[r2,r3]
  19:../Steering_Servos.c **** 
  20:../Steering_Servos.c **** 		//limitinbg max servor Angle to 1.75 rot in each dirction
  21:../Steering_Servos.c **** 		if(Servo_PWMs[i] > 950) { Servo_PWMs[i] = 950;}
 154              	 .loc 1 21 0
 155 007e 0F23     	 mov r3,#15
 156 0080 FB18     	 add r3,r7,r3
 157 0082 1A78     	 ldrb r2,[r3]
 158 0084 324B     	 ldr r3,.L11+12
 159 0086 9200     	 lsl r2,r2,#2
 160 0088 D358     	 ldr r3,[r2,r3]
 161 008a 181C     	 add r0,r3,#0
 162 008c 3149     	 ldr r1,.L11+16
 163 008e FFF7FEFF 	 bl __aeabi_fcmpgt
 164 0092 031E     	 sub r3,r0,#0
 165 0094 07D0     	 beq .L10
 166              	 .loc 1 21 0 is_stmt 0 discriminator 1
 167 0096 0F23     	 mov r3,#15
 168 0098 FB18     	 add r3,r7,r3
 169 009a 1A78     	 ldrb r2,[r3]
 170 009c 2C4B     	 ldr r3,.L11+12
 171 009e 9200     	 lsl r2,r2,#2
 172 00a0 2C49     	 ldr r1,.L11+16
 173 00a2 D150     	 str r1,[r2,r3]
 174 00a4 12E0     	 b .L5
 175              	.L10:
  22:../Steering_Servos.c **** 		else if(Servo_PWMs[i] < 550) { Servo_PWMs[i] = 550;}
 176              	 .loc 1 22 0 is_stmt 1
 177 00a6 0F23     	 mov r3,#15
 178 00a8 FB18     	 add r3,r7,r3
 179 00aa 1A78     	 ldrb r2,[r3]
 180 00ac 284B     	 ldr r3,.L11+12
 181 00ae 9200     	 lsl r2,r2,#2
 182 00b0 D358     	 ldr r3,[r2,r3]
 183 00b2 181C     	 add r0,r3,#0
 184 00b4 2849     	 ldr r1,.L11+20
 185 00b6 FFF7FEFF 	 bl __aeabi_fcmplt
 186 00ba 031E     	 sub r3,r0,#0
 187 00bc 06D0     	 beq .L5
 188              	 .loc 1 22 0 is_stmt 0 discriminator 1
 189 00be 0F23     	 mov r3,#15
 190 00c0 FB18     	 add r3,r7,r3
 191 00c2 1A78     	 ldrb r2,[r3]
 192 00c4 224B     	 ldr r3,.L11+12
 193 00c6 9200     	 lsl r2,r2,#2
 194 00c8 2349     	 ldr r1,.L11+20
 195 00ca D150     	 str r1,[r2,r3]
 196              	.L5:
  17:../Steering_Servos.c **** 		Servo_PWMs[i] = -Angles_data[i]*deg_PWM + NP[i]; // calcuation of PWM for Angle on each wheel
 197              	 .loc 1 17 0 is_stmt 1 discriminator 2
 198 00cc 0F23     	 mov r3,#15
 199 00ce FB18     	 add r3,r7,r3
 200 00d0 1A78     	 ldrb r2,[r3]
 201 00d2 0F23     	 mov r3,#15
 202 00d4 FB18     	 add r3,r7,r3
 203 00d6 0132     	 add r2,r2,#1
 204 00d8 1A70     	 strb r2,[r3]
 205              	.L2:
  17:../Steering_Servos.c **** 		Servo_PWMs[i] = -Angles_data[i]*deg_PWM + NP[i]; // calcuation of PWM for Angle on each wheel
 206              	 .loc 1 17 0 is_stmt 0 discriminator 1
 207 00da 0F23     	 mov r3,#15
 208 00dc FB18     	 add r3,r7,r3
 209 00de 1B78     	 ldrb r3,[r3]
 210 00e0 032B     	 cmp r3,#3
 211 00e2 96D9     	 bls .L7
 212              	.LBE2:
  23:../Steering_Servos.c **** 		}
  24:../Steering_Servos.c **** 
  25:../Steering_Servos.c **** 	//seting PWM values
  26:../Steering_Servos.c **** 	PWM_SetDutyCycle(&PWM_servo_fl,Servo_PWMs[0]);
 213              	 .loc 1 26 0 is_stmt 1
 214 00e4 1A4B     	 ldr r3,.L11+12
 215 00e6 1B68     	 ldr r3,[r3]
 216 00e8 181C     	 add r0,r3,#0
 217 00ea FFF7FEFF 	 bl __aeabi_f2uiz
 218 00ee 021C     	 mov r2,r0
 219 00f0 1A4B     	 ldr r3,.L11+24
 220 00f2 181C     	 mov r0,r3
 221 00f4 111C     	 mov r1,r2
 222 00f6 FFF7FEFF 	 bl PWM_SetDutyCycle
  27:../Steering_Servos.c **** 	PWM_SetDutyCycle(&PWM_servo_fr,Servo_PWMs[1]);
 223              	 .loc 1 27 0
 224 00fa 154B     	 ldr r3,.L11+12
 225 00fc 5B68     	 ldr r3,[r3,#4]
 226 00fe 181C     	 add r0,r3,#0
 227 0100 FFF7FEFF 	 bl __aeabi_f2uiz
 228 0104 021C     	 mov r2,r0
 229 0106 164B     	 ldr r3,.L11+28
 230 0108 181C     	 mov r0,r3
 231 010a 111C     	 mov r1,r2
 232 010c FFF7FEFF 	 bl PWM_SetDutyCycle
  28:../Steering_Servos.c **** 	PWM_SetDutyCycle(&PWM_servo_rl,Servo_PWMs[2]);
 233              	 .loc 1 28 0
 234 0110 0F4B     	 ldr r3,.L11+12
 235 0112 9B68     	 ldr r3,[r3,#8]
 236 0114 181C     	 add r0,r3,#0
 237 0116 FFF7FEFF 	 bl __aeabi_f2uiz
 238 011a 021C     	 mov r2,r0
 239 011c 114B     	 ldr r3,.L11+32
 240 011e 181C     	 mov r0,r3
 241 0120 111C     	 mov r1,r2
 242 0122 FFF7FEFF 	 bl PWM_SetDutyCycle
  29:../Steering_Servos.c **** 	PWM_SetDutyCycle(&PWM_servo_rr,Servo_PWMs[3]);
 243              	 .loc 1 29 0
 244 0126 0A4B     	 ldr r3,.L11+12
 245 0128 DB68     	 ldr r3,[r3,#12]
 246 012a 181C     	 add r0,r3,#0
 247 012c FFF7FEFF 	 bl __aeabi_f2uiz
 248 0130 021C     	 mov r2,r0
 249 0132 0D4B     	 ldr r3,.L11+36
 250 0134 181C     	 mov r0,r3
 251 0136 111C     	 mov r1,r2
 252 0138 FFF7FEFF 	 bl PWM_SetDutyCycle
  30:../Steering_Servos.c **** 
  31:../Steering_Servos.c **** }
 253              	 .loc 1 31 0
 254 013c BD46     	 mov sp,r7
 255 013e 05B0     	 add sp,sp,#20
 256              	 
 257 0140 F0BD     	 pop {r4,r5,r6,r7,pc}
 258              	.L12:
 259 0142 C046     	 .align 2
 260              	.L11:
 261 0144 A4703D0A 	 .word 171798692
 262 0148 D7A3E43F 	 .word 1071948759
 263 014c 00000000 	 .word NP
 264 0150 00000000 	 .word Servo_PWMs
 265 0154 00806D44 	 .word 1148026880
 266 0158 00800944 	 .word 1141473280
 267 015c 00000000 	 .word PWM_servo_fl
 268 0160 00000000 	 .word PWM_servo_fr
 269 0164 00000000 	 .word PWM_servo_rl
 270 0168 00000000 	 .word PWM_servo_rr
 271              	 .cfi_endproc
 272              	.LFE224:
 274              	 .section .text.Servo_NP_setting,"ax",%progbits
 275              	 .align 2
 276              	 .global Servo_NP_setting
 277              	 .code 16
 278              	 .thumb_func
 280              	Servo_NP_setting:
 281              	.LFB225:
  32:../Steering_Servos.c **** 
  33:../Steering_Servos.c **** void Servo_NP_setting(void){
 282              	 .loc 1 33 0
 283              	 .cfi_startproc
 284 0000 80B5     	 push {r7,lr}
 285              	.LCFI3:
 286              	 .cfi_def_cfa_offset 8
 287              	 .cfi_offset 7,-8
 288              	 .cfi_offset 14,-4
 289 0002 00AF     	 add r7,sp,#0
 290              	.LCFI4:
 291              	 .cfi_def_cfa_register 7
  34:../Steering_Servos.c **** 	  NP[0] = NPfl;
 292              	 .loc 1 34 0
 293 0004 0A4B     	 ldr r3,.L14
 294 0006 1A88     	 ldrh r2,[r3]
 295 0008 0A4B     	 ldr r3,.L14+4
 296 000a 1A80     	 strh r2,[r3]
  35:../Steering_Servos.c **** 	  NP[1] = NPfr;
 297              	 .loc 1 35 0
 298 000c 0A4B     	 ldr r3,.L14+8
 299 000e 1B68     	 ldr r3,[r3]
 300 0010 9AB2     	 uxth r2,r3
 301 0012 084B     	 ldr r3,.L14+4
 302 0014 5A80     	 strh r2,[r3,#2]
  36:../Steering_Servos.c **** 	  NP[2] = NPrl;
 303              	 .loc 1 36 0
 304 0016 094B     	 ldr r3,.L14+12
 305 0018 1B68     	 ldr r3,[r3]
 306 001a 9AB2     	 uxth r2,r3
 307 001c 054B     	 ldr r3,.L14+4
 308 001e 9A80     	 strh r2,[r3,#4]
  37:../Steering_Servos.c **** 	  NP[3] = NPrr;
 309              	 .loc 1 37 0
 310 0020 074B     	 ldr r3,.L14+16
 311 0022 1B68     	 ldr r3,[r3]
 312 0024 9AB2     	 uxth r2,r3
 313 0026 034B     	 ldr r3,.L14+4
 314 0028 DA80     	 strh r2,[r3,#6]
  38:../Steering_Servos.c **** }
 315              	 .loc 1 38 0
 316 002a BD46     	 mov sp,r7
 317              	 
 318 002c 80BD     	 pop {r7,pc}
 319              	.L15:
 320 002e C046     	 .align 2
 321              	.L14:
 322 0030 00000000 	 .word NPfl
 323 0034 00000000 	 .word NP
 324 0038 00000000 	 .word NPfr
 325 003c 00000000 	 .word NPrl
 326 0040 00000000 	 .word NPrr
 327              	 .cfi_endproc
 328              	.LFE225:
 330              	 .text
 331              	.Letext0:
 332              	 .file 2 "c:\\dave\\dave-ide-4.4.2-64bit\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 333              	 .file 3 "c:\\dave\\dave-ide-4.4.2-64bit\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 334              	 .file 4 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/CMSIS/Infineon/XMC1400_series/Include/XMC1400.h"
 335              	 .file 5 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc/xmc1_scu.h"
 336              	 .file 6 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc/xmc_gpio.h"
 337              	 .file 7 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc/xmc1_gpio.h"
 338              	 .file 8 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc/xmc_ccu4.h"
 339              	 .file 9 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/GLOBAL_CCU4/global_ccu4.h"
 340              	 .file 10 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PWM/pwm.h"
 341              	 .file 11 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/CMSIS/Include/cmsis_gcc.h"
 342              	 .file 12 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/CMSIS/Infineon/XMC1400_series/Include/system_XMC1400.h"
 343              	 .file 13 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/PWM/PWM_Extern.h"
DEFINED SYMBOLS
                            *ABS*:00000000 Steering_Servos.c
    {standard input}:22     .data.NP:00000000 NP
    {standard input}:19     .data.NP:00000000 $d
    {standard input}:32     .data.NPfl:00000000 NPfl
    {standard input}:29     .data.NPfl:00000000 $d
    {standard input}:39     .data.NPfr:00000000 NPfr
    {standard input}:36     .data.NPfr:00000000 $d
    {standard input}:46     .data.NPrl:00000000 NPrl
    {standard input}:43     .data.NPrl:00000000 $d
    {standard input}:53     .data.NPrr:00000000 NPrr
    {standard input}:50     .data.NPrr:00000000 $d
    {standard input}:60     .bss.Servo_PWMs:00000000 Servo_PWMs
    {standard input}:57     .bss.Servo_PWMs:00000000 $d
    {standard input}:71     .text.Steering_set_Angles:00000000 $t
    {standard input}:76     .text.Steering_set_Angles:00000000 Steering_set_Angles
    {standard input}:261    .text.Steering_set_Angles:00000144 $d
    {standard input}:275    .text.Servo_NP_setting:00000000 $t
    {standard input}:280    .text.Servo_NP_setting:00000000 Servo_NP_setting
    {standard input}:322    .text.Servo_NP_setting:00000030 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__aeabi_f2d
__aeabi_dmul
__aeabi_i2d
__aeabi_dadd
__aeabi_d2f
__aeabi_fcmpgt
__aeabi_fcmplt
__aeabi_f2uiz
PWM_SetDutyCycle
PWM_servo_fl
PWM_servo_fr
PWM_servo_rl
PWM_servo_rr
