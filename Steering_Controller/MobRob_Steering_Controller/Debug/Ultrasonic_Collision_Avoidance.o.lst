   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,6
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "Ultrasonic_Collision_Avoidance.c"
  14              	 .text
  15              	.Ltext0:
  16              	 .cfi_sections .debug_frame
  17              	 .comm RC_controll,1,1
  18              	 .section .text.XMC_GPIO_SetOutputHigh,"ax",%progbits
  19              	 .align 2
  20              	 .code 16
  21              	 .thumb_func
  23              	XMC_GPIO_SetOutputHigh:
  24              	.LFB122:
  25              	 .file 1 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc/xmc_gpio.h"
   1:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
   2:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @file xmc_gpio.h
   3:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @date 2015-06-20
   4:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   5:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @cond
   6:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *****************************************************************************
   7:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   9:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * All rights reserved.
  11:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  12:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  14:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Permission is hereby granted, free of charge, to any person or organization
  15:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * obtaining a copy of the software and accompanying documentation covered by
  16:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * do so, all subject to the following:
  20:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  21:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * The copyright notices in the Software and this entire statement, including
  22:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * the above license grant, this restriction and the following disclaimer,
  23:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * must be included in all copies of the Software, in whole or in part, and
  24:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * all derivative works of the Software, unless such copies or derivative
  25:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * works are solely in the form of machine-executable object code generated by
  26:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * a source language processor.
  27:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  28:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * DEALINGS IN THE SOFTWARE.
  35:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  36:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * To improve the quality of the software, users are encouraged to share
  37:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * at XMCSupport@infineon.com.
  39:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *****************************************************************************
  40:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  41:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Change History
  42:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * --------------
  43:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  44:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-02-20:
  45:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Initial draft<br>
  46:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Documentation improved <br>
  47:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  48:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-06-20:
  49:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  50:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  51:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @endcond
  52:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  53:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  54:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
  55:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #ifndef XMC_GPIO_H
  56:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_H
  57:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
  58:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  59:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * HEADER FILES
  60:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  61:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
  62:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc_common.h"
  63:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
  64:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  65:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup XMClib XMC Peripheral Library
  66:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @{
  67:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  68:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
  69:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  70:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup GPIO
  71:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @brief General Purpose Input Output (GPIO) driver for the XMC microcontroller family.
  72:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  73:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * GPIO driver provide a generic and very flexible software interface for all standard digital I/O 
  74:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Each port slice has individual interfaces for the operation as General Purpose I/O and it furthe
  75:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * connectivity to the on-chip periphery and the control for the pad characteristics.
  76:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  77:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * The driver is divided into Input and Output mode.
  78:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  79:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Input mode features:
  80:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Configuration structure XMC_GPIO_CONFIG_t and initialization function XMC_GPIO_Init()
  81:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of weak pull-up or pull-down device. Configuration structure XMC_GPIO_MO
  82:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
  83:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of input hysteresis. XMC_GPIO_SetInputHysteresis()
  84:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  85:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  86:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  87:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Output mode features:
  88:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of push pull/open drain and Alternate output. Configuration structure XM
  89:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
  90:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of pad driver strength. Configuration structure XMC_GPIO_OUTPUT_STRENGTH
  91:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  92:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  93:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of initial output level. Configuration structure XMC_GPIO_OUTPUT_LEVEL_t
  94:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  95:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *@{
  96:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  97:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
  98:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  99:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * MACROS
 100:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 101:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 102:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Pos PORT0_IOCR0_PC0_Pos
 103:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Msk PORT0_IOCR0_PC0_Msk
 104:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 105:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Size 				(8U)
 106:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 107:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 108:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_OUTPUT_LEVEL(level) ((level == XMC_GPIO_OUTPUT_LEVEL_LOW) || \
 109:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****                                             (level == XMC_GPIO_OUTPUT_LEVEL_HIGH))
 110:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 111:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_HWCTRL(hwctrl) ((hwctrl == XMC_GPIO_HWCTRL_DISABLED) || \
 112:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL1) || \
 113:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL2))
 114:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 115:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 116:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * ENUMS
 117:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 118:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 119:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 120:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 121:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines output level of a pin. Use type \a XMC_GPIO_OUTPUT_LEVEL_t for this enum.
 122:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 123:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_OUTPUT_LEVEL
 124:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** {
 125:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_LOW  = 0x10000U, /**<  Reset bit */
 126:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_HIGH = 0x1U, 	/**< Set bit  */
 127:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_OUTPUT_LEVEL_t;
 128:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 129:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 130:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines direct hardware control characteristics of the pin . Use type \a XMC_GPIO_HWCTRL_t for t
 131:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 132:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_HWCTRL
 133:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** {
 134:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_DISABLED     = 0x0U, /**<  Software control only */
 135:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL1  = 0x1U, /**<  HWI0/HWO0 control path can override the software confi
 136:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL2  = 0x2U  /**<  HWI1/HWO1 control path can override the software confi
 137:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_HWCTRL_t;
 138:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 139:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 140:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * DEVICE FAMILY EXTENSIONS
 141:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 142:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 143:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #if UC_FAMILY == XMC1
 144:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc1_gpio.h"
 145:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #elif UC_FAMILY == XMC4
 146:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc4_gpio.h"
 147:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #else
 148:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #error "xmc_gpio.h: family device not supported"
 149:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 150:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 151:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 152:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * API PROTOTYPES
 153:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 154:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 155:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #ifdef __cplusplus
 156:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** extern "C" {
 157:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 158:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 159:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 160:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 161:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	  Constant pointer pointing to GPIO port, to access port registers like Pn_OUT,Pn_O
 162:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	  Port pin number.
 163:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  config GPIO configuration data structure. Refer data structure @ref XMC_GPIO_CONFIG_t fo
 164:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 165:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 166:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 167:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 168:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
 169:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,hysteresis, push pull
 170:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for a selected \a po
 171:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \a config provides selected I/O settings. It configures hardware registers Pn_IOCR,Pn_OUT, Pn_OM
 172:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 173:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
 174:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,push pull /open drain
 175:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for selected \a port
 176:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * It configures hardware registers Pn_IOCR,Pn_OUT,Pn_OMR,Pn_PDISC and Pn_PDR.\n
 177:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 178:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 179:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 180:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 181:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 182:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 183:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * This API is called in definition of DAVE_init by code generation and therefore should not be exp
 184:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * for the normal operation. Use other APIs only after DAVE_init is called successfully (returns DA
 185:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 186:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 187:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 188:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 189:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 190:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_Init(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_CONFIG_t *const c
 191:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 192:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 193:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 194:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	Constant pointer pointing to GPIO port, to access hardware register Pn_IOCR.
 195:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 196:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  mode input / output functionality selection. Refer @ref XMC_GPIO_MODE_t for valid values
 197:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 198:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 199:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 200:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 201:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets digital input and output driver functionality and characteristics of a GPIO port pin. It co
 202:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * registers Pn_IOCR. \a mode is initially configured during initialization in XMC_GPIO_Init(). Cal
 203:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * the port direction functionality as needed later in the program.
 204:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 205:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 206:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 207:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 208:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 209:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 210:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_SetMode(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_MODE_t mode);
 211:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 212:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 213:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 214:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 215:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	 Constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 216:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	 Port pin number.
 217:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  level output level selection. Refer @ref XMC_GPIO_OUTPUT_LEVEL_t for valid values.
 218:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 219:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 220:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 221:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 222:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Set port pin output level to high or low.It configures hardware registers Pn_OMR.\a level is ini
 223:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * configured during initialization in XMC_GPIO_Init(). Call this API to alter output level as need
 224:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 225:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 226:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 227:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 228:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 229:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 230:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 231:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 232:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 233:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 234:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLevel(XMC_GPIO_PORT_t *const port, const uint8_t pin, const 
 235:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** {
 236:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 237:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid output level", XMC_GPIO_CHECK_OUTPUT_LEVEL(level));
 238:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 239:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)level << pin;
 240:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** }
 241:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 242:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 243:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 244:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 245:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 246:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 247:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 248:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 249:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 250:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *  Sets port pin output to high. It configures hardware registers Pn_OMR.
 251:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 252:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *  \par<b>Related APIs:</b><BR>
 253:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputLow()
 254:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 255:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 256:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().\n
 257:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 258:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 259:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 260:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 261:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputHigh(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 262:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** {
  26              	 .loc 1 262 0
  27              	 .cfi_startproc
  28 0000 80B5     	 push {r7,lr}
  29              	.LCFI0:
  30              	 .cfi_def_cfa_offset 8
  31              	 .cfi_offset 7,-8
  32              	 .cfi_offset 14,-4
  33 0002 82B0     	 sub sp,sp,#8
  34              	.LCFI1:
  35              	 .cfi_def_cfa_offset 16
  36 0004 00AF     	 add r7,sp,#0
  37              	.LCFI2:
  38              	 .cfi_def_cfa_register 7
  39 0006 7860     	 str r0,[r7,#4]
  40 0008 0A1C     	 mov r2,r1
  41 000a FB1C     	 add r3,r7,#3
  42 000c 1A70     	 strb r2,[r3]
 263:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputHigh: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 264:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 265:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)0x1U << pin;
  43              	 .loc 1 265 0
  44 000e FB1C     	 add r3,r7,#3
  45 0010 1B78     	 ldrb r3,[r3]
  46 0012 0122     	 mov r2,#1
  47 0014 9A40     	 lsl r2,r2,r3
  48 0016 7B68     	 ldr r3,[r7,#4]
  49 0018 5A60     	 str r2,[r3,#4]
 266:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** }
  50              	 .loc 1 266 0
  51 001a BD46     	 mov sp,r7
  52 001c 02B0     	 add sp,sp,#8
  53              	 
  54 001e 80BD     	 pop {r7,pc}
  55              	 .cfi_endproc
  56              	.LFE122:
  58              	 .section .text.XMC_GPIO_SetOutputLow,"ax",%progbits
  59              	 .align 2
  60              	 .code 16
  61              	 .thumb_func
  63              	XMC_GPIO_SetOutputLow:
  64              	.LFB123:
 267:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 268:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 269:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 270:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 271:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	port pin number.
 272:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 273:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return  None
 274:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 275:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Description:</b><br>
 276:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets port pin output to low. It configures hardware registers Pn_OMR.\n
 277:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 278:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>>
 279:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh()
 280:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 281:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Note:</b><br>
 282:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 283:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 284:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 285:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 286:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 287:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLow(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 288:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** {
  65              	 .loc 1 288 0
  66              	 .cfi_startproc
  67 0000 80B5     	 push {r7,lr}
  68              	.LCFI3:
  69              	 .cfi_def_cfa_offset 8
  70              	 .cfi_offset 7,-8
  71              	 .cfi_offset 14,-4
  72 0002 82B0     	 sub sp,sp,#8
  73              	.LCFI4:
  74              	 .cfi_def_cfa_offset 16
  75 0004 00AF     	 add r7,sp,#0
  76              	.LCFI5:
  77              	 .cfi_def_cfa_register 7
  78 0006 7860     	 str r0,[r7,#4]
  79 0008 0A1C     	 mov r2,r1
  80 000a FB1C     	 add r3,r7,#3
  81 000c 1A70     	 strb r2,[r3]
 289:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLow: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 290:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 291:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10000U << pin;
  82              	 .loc 1 291 0
  83 000e FB1C     	 add r3,r7,#3
  84 0010 1B78     	 ldrb r3,[r3]
  85 0012 8022     	 mov r2,#128
  86 0014 5202     	 lsl r2,r2,#9
  87 0016 9A40     	 lsl r2,r2,r3
  88 0018 7B68     	 ldr r3,[r7,#4]
  89 001a 5A60     	 str r2,[r3,#4]
 292:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** }
  90              	 .loc 1 292 0
  91 001c BD46     	 mov sp,r7
  92 001e 02B0     	 add sp,sp,#8
  93              	 
  94 0020 80BD     	 pop {r7,pc}
  95              	 .cfi_endproc
  96              	.LFE123:
  98 0022 C046     	 .section .text.XMC_GPIO_ToggleOutput,"ax",%progbits
  99              	 .align 2
 100              	 .code 16
 101              	 .thumb_func
 103              	XMC_GPIO_ToggleOutput:
 104              	.LFB124:
 293:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 294:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 295:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 296:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 297:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param pin  port pin number.
 298:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 299:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 300:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 301:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 302:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Configures port pin output to Toggle. It configures hardware registers Pn_OMR.
 303:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 304:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 305:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 306:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 307:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 308:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode(). Regis
 309:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * and does not contain any flip-flop. A read action delivers the value of 0.
 310:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 311:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 312:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 313:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_ToggleOutput(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 314:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** {
 105              	 .loc 1 314 0
 106              	 .cfi_startproc
 107 0000 80B5     	 push {r7,lr}
 108              	.LCFI6:
 109              	 .cfi_def_cfa_offset 8
 110              	 .cfi_offset 7,-8
 111              	 .cfi_offset 14,-4
 112 0002 82B0     	 sub sp,sp,#8
 113              	.LCFI7:
 114              	 .cfi_def_cfa_offset 16
 115 0004 00AF     	 add r7,sp,#0
 116              	.LCFI8:
 117              	 .cfi_def_cfa_register 7
 118 0006 7860     	 str r0,[r7,#4]
 119 0008 0A1C     	 mov r2,r1
 120 000a FB1C     	 add r3,r7,#3
 121 000c 1A70     	 strb r2,[r3]
 315:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_ToggleOutput: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 316:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 317:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10001U << pin;
 122              	 .loc 1 317 0
 123 000e FB1C     	 add r3,r7,#3
 124 0010 1B78     	 ldrb r3,[r3]
 125 0012 034A     	 ldr r2,.L4
 126 0014 9A40     	 lsl r2,r2,r3
 127 0016 7B68     	 ldr r3,[r7,#4]
 128 0018 5A60     	 str r2,[r3,#4]
 318:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** }
 129              	 .loc 1 318 0
 130 001a BD46     	 mov sp,r7
 131 001c 02B0     	 add sp,sp,#8
 132              	 
 133 001e 80BD     	 pop {r7,pc}
 134              	.L5:
 135              	 .align 2
 136              	.L4:
 137 0020 01000100 	 .word 65537
 138              	 .cfi_endproc
 139              	.LFE124:
 141              	 .section .text.DIGITAL_IO_SetOutputHigh,"ax",%progbits
 142              	 .align 2
 143              	 .code 16
 144              	 .thumb_func
 146              	DIGITAL_IO_SetOutputHigh:
 147              	.LFB195:
 148              	 .file 2 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO/digital_io.h"
   1:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /*
   2:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   3:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @file digital_io.h
   4:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @date 2021-01-08
   5:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   6:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * NOTE:
   7:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   8:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   9:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @cond
  10:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  11:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DIGITAL_IO v4.0.18 - The DIGITAL_IO APP is used to configure a port pin as digital Input/Output.
  12:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  13:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  14:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * All rights reserved.
  15:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  16:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  17:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * following conditions are met:
  18:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  19:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  20:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   disclaimer.
  21:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  22:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  23:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  24:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  25:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  26:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   products derived from this software without specific prior written permission.
  27:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  28:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  29:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  30:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  31:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  32:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  33:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  34:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  36:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  37:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * with Infineon Technologies AG (dave@infineon.com).
  38:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  39:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  40:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Change History
  41:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * --------------
  42:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  43:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-02-16
  44:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Initial version
  45:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  46:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-04-22
  47:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - XMC_ASSERT is added in static inline functions.<br>
  48:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  49:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-06-20
  50:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Version check added for XMCLib dependency.<br>
  51:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  52:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-12-22
  53:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Added hardware controlled IO feature.
  54:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2016-07-08:
  55:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Fixed incorrect case for an included header.<br>
  56:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2021-01-08:
  57:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Modified check for minimum XMCLib version
  58:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  59:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @endcond
  60:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  61:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  */
  62:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  63:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
  64:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * HEADER FILES
  65:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  66:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  67:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #ifndef DIGITAL_IO_H
  68:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #define DIGITAL_IO_H
  69:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  70:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #include "xmc_gpio.h"
  71:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #include "DAVE_Common.h"
  72:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #include "digital_io_conf.h"
  73:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  74:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
  75:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * MACROS
  76:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  77:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #define DIGITAL_IO_XMC_LIB_MAJOR_VERSION 2
  78:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #define DIGITAL_IO_XMC_LIB_MINOR_VERSION 0
  79:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #define DIGITAL_IO_XMC_LIB_PATCH_VERSION 0
  80:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  81:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #if !((XMC_LIB_MAJOR_VERSION > DIGITAL_IO_XMC_LIB_MAJOR_VERSION) ||\
  82:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****       ((XMC_LIB_MAJOR_VERSION == DIGITAL_IO_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION > DIGI
  83:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****       ((XMC_LIB_MAJOR_VERSION == DIGITAL_IO_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION == DIG
  84:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #error "DIGITAL_IO requires XMC Peripheral Library v2.0.0 or higher"
  85:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #endif
  86:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  87:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  /*************************************************************************************************
  88:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * ENUMS
  89:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  90:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  91:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
  92:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_enumerations
  93:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
  94:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
  95:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  96:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
  97:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Initialization status of DIGITAL_IO APP.
  98:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
  99:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** typedef enum DIGITAL_IO_STATUS
 100:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 101:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   DIGITAL_IO_STATUS_OK = 0U,/**< 0=Status OK */
 102:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   DIGITAL_IO_STATUS_FAILURE = 1U/**< 1=Status Failed */
 103:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** } DIGITAL_IO_STATUS_t;
 104:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 105:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 106:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @}
 107:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 108:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 109:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
 110:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DATA STRUCTURES
 111:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
 112:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 113:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_datastructures
 114:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
 115:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 116:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 117:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 118:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Initialization data structure of DIGITAL_IO APP
 119:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 120:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** typedef struct DIGITAL_IO
 121:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 122:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_PORT_t *const gpio_port;             /**< port number */
 123:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   const XMC_GPIO_CONFIG_t gpio_config;          /**< mode, initial output level and pad driver stre
 124:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   const uint8_t gpio_pin;                       /**< pin number */
 125:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   const XMC_GPIO_HWCTRL_t hwctrl;               /**< Hardware port control */
 126:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** } DIGITAL_IO_t;
 127:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 128:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 129:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 130:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @}
 131:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 132:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 133:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 134:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
 135:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * API Prototypes
 136:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
 137:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 138:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 139:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #ifdef __cplusplus
 140:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** extern "C" {
 141:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #endif
 142:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 143:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 144:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_apidoc
 145:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
 146:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 147:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 148:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 149:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 150:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 151:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Get DIGITAL_IO APP version
 152:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return DAVE_APP_VERSION_t APP version information (major, minor and patch number)
 153:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 154:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description: </b><br>
 155:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * The function can be used to check application software compatibility with a
 156:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * specific version of the APP.
 157:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 158:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 159:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 160:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 161:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include "DAVE.h"
 162:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 163:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 164:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 165:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t init_status;
 166:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_APP_VERSION_t version;
 167:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 168:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   // Initialize DIGITAL_IO APP:
 169:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   // DIGITAL_IO_Init() is called from within DAVE_Init().
 170:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   init_status = DAVE_Init();
 171:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(init_status == DAVE_STATUS_SUCCESS)
 172:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 173:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     version = DIGITAL_IO_GetAppVersion();
 174:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     if (version.major != 4U) {
 175:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // Probably, not the right version.
 176:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 177:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 178:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 179:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // More code here
 180:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1) {
 181:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 182:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 183:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     return (1);
 184:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  }
 185:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @endcode<BR>
 186:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 187:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 188:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** DAVE_APP_VERSION_t DIGITAL_IO_GetAppVersion(void);
 189:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 190:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 191:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 192:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to initialize the port pin as per UI settings.
 193:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 194:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return DIGITAL_IO_STATUS_t DIGITAL_IO APP status. Refer @ref DIGITAL_IO_STATUS_t structure for d
 195:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 196:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 197:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function initializes GPIO port registers IOCR,PDISC,OMR,PDR/PHCR to configure pin direction,
 198:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * and pad driver strength/hysteresis.
 199:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 200:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 201:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * None
 202:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 203:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 204:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 205:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include "DAVE.h" //Declarations from DAVE Code Generation (includes SFR declaration)
 206:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 207:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 208:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 209:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 210:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 211:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 212:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 213:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 214:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 215:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 216:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 217:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 218:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1U)
 219:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 220:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 221:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 222:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 223:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 224:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 225:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 226:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return 1U;
 227:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  }
 228:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 229:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 230:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 231:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** DIGITAL_IO_STATUS_t DIGITAL_IO_Init(const DIGITAL_IO_t *const handler);
 232:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 233:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 234:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 235:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to set port pin high.
 236:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 237:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return None
 238:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 239:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 240:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to make port pin to high level
 241:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 242:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 243:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  DIGITAL_IO_SetOutputLow()
 244:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 245:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 246:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 247:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include "DAVE.h" //Declarations from DAVE Code Generation (includes SFR declaration)
 248:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 249:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 250:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 251:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 252:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 253:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 254:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 255:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 256:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 257:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 258:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 259:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 260:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1U)
 261:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 262:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 263:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 264:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 265:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DIGITAL_IO_SetOutputHigh(&DIGITAL_IO_0);
 266:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 267:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 268:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // Add application code here
 269:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 270:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 271:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 272:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 273:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 274:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 275:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 276:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_SetOutputHigh(const DIGITAL_IO_t *const handler)
 277:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 149              	 .loc 2 277 0
 150              	 .cfi_startproc
 151 0000 80B5     	 push {r7,lr}
 152              	.LCFI9:
 153              	 .cfi_def_cfa_offset 8
 154              	 .cfi_offset 7,-8
 155              	 .cfi_offset 14,-4
 156 0002 82B0     	 sub sp,sp,#8
 157              	.LCFI10:
 158              	 .cfi_def_cfa_offset 16
 159 0004 00AF     	 add r7,sp,#0
 160              	.LCFI11:
 161              	 .cfi_def_cfa_register 7
 162 0006 7860     	 str r0,[r7,#4]
 278:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_SetOutputHigh: handler null pointer", handler != NULL);
 279:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_SetOutputHigh(handler->gpio_port, handler->gpio_pin);
 163              	 .loc 2 279 0
 164 0008 7B68     	 ldr r3,[r7,#4]
 165 000a 1A68     	 ldr r2,[r3]
 166 000c 7B68     	 ldr r3,[r7,#4]
 167 000e 1B7B     	 ldrb r3,[r3,#12]
 168 0010 101C     	 mov r0,r2
 169 0012 191C     	 mov r1,r3
 170 0014 FFF7FEFF 	 bl XMC_GPIO_SetOutputHigh
 280:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 171              	 .loc 2 280 0
 172 0018 BD46     	 mov sp,r7
 173 001a 02B0     	 add sp,sp,#8
 174              	 
 175 001c 80BD     	 pop {r7,pc}
 176              	 .cfi_endproc
 177              	.LFE195:
 179 001e C046     	 .section .text.DIGITAL_IO_SetOutputLow,"ax",%progbits
 180              	 .align 2
 181              	 .code 16
 182              	 .thumb_func
 184              	DIGITAL_IO_SetOutputLow:
 185              	.LFB196:
 281:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 282:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 283:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to reset port pin.
 284:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 285:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return None
 286:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 287:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 288:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to make port pin to low level.
 289:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 290:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 291:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * DIGITAL_IO_SetOutputHigh()
 292:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 293:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 294:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 295:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  #include "DAVE.h" //Declarations from DAVE Code Generation (includes SFR declaration)
 296:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 297:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  int main(void)
 298:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  {
 299:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    DAVE_STATUS_t status;
 300:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_I
 301:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    if(status == DAVE_STATUS_SUCCESS)
 302:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 303:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG("DAVE Apps initialization success\n");
 304:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 305:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    else
 306:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 307:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 308:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *      while(1U)
 309:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *      {
 310:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *      }
 311:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 312:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    //Placeholder for user application code. The while loop below can be replaced with user applic
 313:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    DIGITAL_IO_SetOutputLow(&DIGITAL_IO_0);
 314:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    while(1U)
 315:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 316:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *      // Add application code here
 317:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 318:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 319:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 320:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 321:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 322:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 323:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 324:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_SetOutputLow(const DIGITAL_IO_t *const handler)
 325:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 186              	 .loc 2 325 0
 187              	 .cfi_startproc
 188 0000 80B5     	 push {r7,lr}
 189              	.LCFI12:
 190              	 .cfi_def_cfa_offset 8
 191              	 .cfi_offset 7,-8
 192              	 .cfi_offset 14,-4
 193 0002 82B0     	 sub sp,sp,#8
 194              	.LCFI13:
 195              	 .cfi_def_cfa_offset 16
 196 0004 00AF     	 add r7,sp,#0
 197              	.LCFI14:
 198              	 .cfi_def_cfa_register 7
 199 0006 7860     	 str r0,[r7,#4]
 326:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_SetOutputLow: handler null pointer", handler != NULL);
 327:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_SetOutputLow(handler->gpio_port,handler->gpio_pin);
 200              	 .loc 2 327 0
 201 0008 7B68     	 ldr r3,[r7,#4]
 202 000a 1A68     	 ldr r2,[r3]
 203 000c 7B68     	 ldr r3,[r7,#4]
 204 000e 1B7B     	 ldrb r3,[r3,#12]
 205 0010 101C     	 mov r0,r2
 206 0012 191C     	 mov r1,r3
 207 0014 FFF7FEFF 	 bl XMC_GPIO_SetOutputLow
 328:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 208              	 .loc 2 328 0
 209 0018 BD46     	 mov sp,r7
 210 001a 02B0     	 add sp,sp,#8
 211              	 
 212 001c 80BD     	 pop {r7,pc}
 213              	 .cfi_endproc
 214              	.LFE196:
 216 001e C046     	 .section .text.DIGITAL_IO_ToggleOutput,"ax",%progbits
 217              	 .align 2
 218              	 .code 16
 219              	 .thumb_func
 221              	DIGITAL_IO_ToggleOutput:
 222              	.LFB197:
 329:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 330:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 331:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to Toggle port pin.
 332:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 333:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return None
 334:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 335:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 336:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to toggle port pin.
 337:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 338:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 339:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * DIGITAL_IO_SetOutputLow(), DIGITAL_IO_SetOutputHigh()
 340:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 341:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 342:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 343:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 344:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include "DAVE.h" //Declarations from DAVE Code Generation (includes SFR declaration)
 345:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 346:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 347:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 348:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 349:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   uint32_t delay_count;;
 350:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 351:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 352:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 353:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 354:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 355:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 356:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 357:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 358:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *      while(1U)
 359:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *      {
 360:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *      }
 361:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 362:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 363:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 364:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 365:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *      DIGITAL_IO_ToggleOutput(&DIGITAL_IO_0); //toggles : 1 -> 0 (if initial output level is logic
 366:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *      //Add application code here
 367:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *      for(delay_count = 0;delay_count<0xfffff;delay_count++);
 368:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *      DIGITAL_IO_ToggleOutput(&DIGITAL_IO_0); //toggles : 0 -> 1
 369:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *      //Add application code here
 370:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *      for(delay_count = 0;delay_count<0xfffff;delay_count++);
 371:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 372:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 373:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 374:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 375:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 376:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 377:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_ToggleOutput(const DIGITAL_IO_t *const handler)
 378:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 223              	 .loc 2 378 0
 224              	 .cfi_startproc
 225 0000 80B5     	 push {r7,lr}
 226              	.LCFI15:
 227              	 .cfi_def_cfa_offset 8
 228              	 .cfi_offset 7,-8
 229              	 .cfi_offset 14,-4
 230 0002 82B0     	 sub sp,sp,#8
 231              	.LCFI16:
 232              	 .cfi_def_cfa_offset 16
 233 0004 00AF     	 add r7,sp,#0
 234              	.LCFI17:
 235              	 .cfi_def_cfa_register 7
 236 0006 7860     	 str r0,[r7,#4]
 379:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_ToggleOutput: handler null pointer", handler != NULL);
 380:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_ToggleOutput(handler->gpio_port, handler->gpio_pin);
 237              	 .loc 2 380 0
 238 0008 7B68     	 ldr r3,[r7,#4]
 239 000a 1A68     	 ldr r2,[r3]
 240 000c 7B68     	 ldr r3,[r7,#4]
 241 000e 1B7B     	 ldrb r3,[r3,#12]
 242 0010 101C     	 mov r0,r2
 243 0012 191C     	 mov r1,r3
 244 0014 FFF7FEFF 	 bl XMC_GPIO_ToggleOutput
 381:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 245              	 .loc 2 381 0
 246 0018 BD46     	 mov sp,r7
 247 001a 02B0     	 add sp,sp,#8
 248              	 
 249 001c 80BD     	 pop {r7,pc}
 250              	 .cfi_endproc
 251              	.LFE197:
 253              	 .global obstructed_L
 254 001e C046     	 .section .bss.obstructed_L,"aw",%nobits
 257              	obstructed_L:
 258 0000 00       	 .space 1
 259              	 .global obstructed_R
 260              	 .section .bss.obstructed_R,"aw",%nobits
 263              	obstructed_R:
 264 0000 00       	 .space 1
 265              	 .global Ultra_m_C
 266              	 .section .data.Ultra_m_C,"aw",%progbits
 267              	 .align 2
 270              	Ultra_m_C:
 271 0000 00008040 	 .word 1082130432
 272              	 .global Ultra_m_L
 273              	 .section .data.Ultra_m_L,"aw",%progbits
 274              	 .align 2
 277              	Ultra_m_L:
 278 0000 00008040 	 .word 1082130432
 279              	 .global Ultra_m_R
 280              	 .section .data.Ultra_m_R,"aw",%progbits
 281              	 .align 2
 284              	Ultra_m_R:
 285 0000 00008040 	 .word 1082130432
 286              	 .global Ultrsonic_data_invaildcounter
 287              	 .section .data.Ultrsonic_data_invaildcounter,"aw",%progbits
 288              	 .align 2
 291              	Ultrsonic_data_invaildcounter:
 292 0000 14       	 .byte 20
 293 0001 14       	 .byte 20
 294 0002 14       	 .byte 20
 295              	 .global Obstacel_valid
 296 0003 00       	 .section .bss.Obstacel_valid,"aw",%nobits
 297              	 .align 2
 300              	Obstacel_valid:
 301 0000 000000   	 .space 3
 302              	 .comm Obstacel_F,20,4
 303              	 .comm Obstacel_L,20,4
 304              	 .comm Obstacel_R,20,4
 305              	 .global Speed_reduction_ratio
 306 0003 00       	 .section .data.Speed_reduction_ratio,"aw",%progbits
 307              	 .align 2
 310              	Speed_reduction_ratio:
 311 0000 0000803F 	 .word 1065353216
 312              	 .global Speed_limit
 313              	 .section .data.Speed_limit,"aw",%progbits
 314              	 .align 2
 317              	Speed_limit:
 318 0000 0000C03F 	 .word 1069547520
 319              	 .global new_Speed_limit
 320              	 .section .data.new_Speed_limit,"aw",%progbits
 321              	 .align 2
 324              	new_Speed_limit:
 325 0000 0000C03F 	 .word 1069547520
 326              	 .global aktive_addition
 327              	 .section .bss.aktive_addition,"aw",%nobits
 328              	 .align 2
 331              	aktive_addition:
 332 0000 00000000 	 .space 4
 333              	 .global speed_CA_fl
 334              	 .section .bss.speed_CA_fl,"aw",%nobits
 335              	 .align 2
 338              	speed_CA_fl:
 339 0000 00000000 	 .space 4
 340              	 .global speed_CA_fr
 341              	 .section .bss.speed_CA_fr,"aw",%nobits
 342              	 .align 2
 345              	speed_CA_fr:
 346 0000 00000000 	 .space 4
 347              	 .global speed_CA_rl
 348              	 .section .bss.speed_CA_rl,"aw",%nobits
 349              	 .align 2
 352              	speed_CA_rl:
 353 0000 00000000 	 .space 4
 354              	 .global speed_CA_rr
 355              	 .section .bss.speed_CA_rr,"aw",%nobits
 356              	 .align 2
 359              	speed_CA_rr:
 360 0000 00000000 	 .space 4
 361              	 .global init
 362              	 .section .bss.init,"aw",%nobits
 365              	init:
 366 0000 00       	 .space 1
 367              	 .global __aeabi_i2f
 368              	 .global __aeabi_fdiv
 369              	 .global __aeabi_f2d
 370              	 .global __aeabi_ddiv
 371              	 .global __aeabi_dmul
 372              	 .global __aeabi_d2f
 373              	 .section .text.Ultra_sonic_filter,"ax",%progbits
 374              	 .align 2
 375              	 .global Ultra_sonic_filter
 376              	 .code 16
 377              	 .thumb_func
 379              	Ultra_sonic_filter:
 380              	.LFB224:
 381              	 .file 3 "../Ultrasonic_Collision_Avoidance.c"
   1:../Ultrasonic_Collision_Avoidance.c **** /*
   2:../Ultrasonic_Collision_Avoidance.c ****  * Ultrasonic_Collision_Avoidance.c
   3:../Ultrasonic_Collision_Avoidance.c ****  *
   4:../Ultrasonic_Collision_Avoidance.c ****  *  Created on: 1 Jul 2022
   5:../Ultrasonic_Collision_Avoidance.c ****  *      Author: lukas
   6:../Ultrasonic_Collision_Avoidance.c ****  */
   7:../Ultrasonic_Collision_Avoidance.c **** #include "Ultrasonic_Collision_Avoidance.h"
   8:../Ultrasonic_Collision_Avoidance.c **** #include<stdio.h>
   9:../Ultrasonic_Collision_Avoidance.c **** 
  10:../Ultrasonic_Collision_Avoidance.c **** // filtering
  11:../Ultrasonic_Collision_Avoidance.c **** //float ALPHA_ULTARSONIC = 0.3; // giltering prameter for the Exponential moving average
  12:../Ultrasonic_Collision_Avoidance.c **** #define POS_OBSTRUCTED_ANGLE_MIN 50
  13:../Ultrasonic_Collision_Avoidance.c **** #define POS_OBSTRUCTED_ANGLE_MAX 210
  14:../Ultrasonic_Collision_Avoidance.c **** #define NEG_OBSTRUCTED_ANGLE_MIN -150
  15:../Ultrasonic_Collision_Avoidance.c **** #define NEG_OBSTRUCTED_ANGLE_MAX -310
  16:../Ultrasonic_Collision_Avoidance.c **** uint8_t obstructed_L = 0, obstructed_R = 0;
  17:../Ultrasonic_Collision_Avoidance.c **** 
  18:../Ultrasonic_Collision_Avoidance.c **** float Ultra_m_C = 4, Ultra_m_L = 4, Ultra_m_R = 4;
  19:../Ultrasonic_Collision_Avoidance.c **** 
  20:../Ultrasonic_Collision_Avoidance.c **** 
  21:../Ultrasonic_Collision_Avoidance.c **** // collison avdoidance
  22:../Ultrasonic_Collision_Avoidance.c **** #define ULRTA_NUM_NO_DATA_INVALID 20
  23:../Ultrasonic_Collision_Avoidance.c **** uint8_t Ultrsonic_data_invaildcounter[3] = {ULRTA_NUM_NO_DATA_INVALID, ULRTA_NUM_NO_DATA_INVALID, U
  24:../Ultrasonic_Collision_Avoidance.c **** 
  25:../Ultrasonic_Collision_Avoidance.c **** uint8_t Obstacel_valid[3] = {0, 0, 0};
  26:../Ultrasonic_Collision_Avoidance.c **** 
  27:../Ultrasonic_Collision_Avoidance.c **** #define CA_START 1
  28:../Ultrasonic_Collision_Avoidance.c **** #define CA_STOP 0.2
  29:../Ultrasonic_Collision_Avoidance.c **** #define CA_ANGLE 15
  30:../Ultrasonic_Collision_Avoidance.c **** 
  31:../Ultrasonic_Collision_Avoidance.c **** Obstacel Obstacel_F;
  32:../Ultrasonic_Collision_Avoidance.c **** Obstacel Obstacel_L;
  33:../Ultrasonic_Collision_Avoidance.c **** Obstacel Obstacel_R;
  34:../Ultrasonic_Collision_Avoidance.c **** 
  35:../Ultrasonic_Collision_Avoidance.c **** float Speed_reduction_ratio = 1;
  36:../Ultrasonic_Collision_Avoidance.c **** float Speed_limit = MAX_Speed;
  37:../Ultrasonic_Collision_Avoidance.c **** float new_Speed_limit = MAX_Speed;
  38:../Ultrasonic_Collision_Avoidance.c **** float aktive_addition = 0;
  39:../Ultrasonic_Collision_Avoidance.c **** 
  40:../Ultrasonic_Collision_Avoidance.c **** float speed_CA_fl = 0;
  41:../Ultrasonic_Collision_Avoidance.c **** float speed_CA_fr = 0;
  42:../Ultrasonic_Collision_Avoidance.c **** float speed_CA_rl = 0;
  43:../Ultrasonic_Collision_Avoidance.c **** float speed_CA_rr = 0;
  44:../Ultrasonic_Collision_Avoidance.c **** 
  45:../Ultrasonic_Collision_Avoidance.c **** uint8_t init = 0;
  46:../Ultrasonic_Collision_Avoidance.c **** 
  47:../Ultrasonic_Collision_Avoidance.c **** void Ultra_sonic_filter(int16_t Ultrasonic_cm_C_clc, int16_t Ultrasonic_cm_L_clc, int16_t Ultrasoni
 382              	 .loc 3 47 0
 383              	 .cfi_startproc
 384 0000 F0B5     	 push {r4,r5,r6,r7,lr}
 385              	.LCFI18:
 386              	 .cfi_def_cfa_offset 20
 387              	 .cfi_offset 4,-20
 388              	 .cfi_offset 5,-16
 389              	 .cfi_offset 6,-12
 390              	 .cfi_offset 7,-8
 391              	 .cfi_offset 14,-4
 392 0002 87B0     	 sub sp,sp,#28
 393              	.LCFI19:
 394              	 .cfi_def_cfa_offset 48
 395 0004 00AF     	 add r7,sp,#0
 396              	.LCFI20:
 397              	 .cfi_def_cfa_register 7
 398 0006 041C     	 mov r4,r0
 399 0008 081C     	 mov r0,r1
 400 000a 111C     	 mov r1,r2
 401 000c 7B60     	 str r3,[r7,#4]
 402 000e 0E23     	 mov r3,#14
 403 0010 FB18     	 add r3,r7,r3
 404 0012 221C     	 add r2,r4,#0
 405 0014 1A80     	 strh r2,[r3]
 406 0016 0C23     	 mov r3,#12
 407 0018 FB18     	 add r3,r7,r3
 408 001a 021C     	 add r2,r0,#0
 409 001c 1A80     	 strh r2,[r3]
 410 001e 0A23     	 mov r3,#10
 411 0020 FB18     	 add r3,r7,r3
 412 0022 0A1C     	 add r2,r1,#0
 413 0024 1A80     	 strh r2,[r3]
  48:../Ultrasonic_Collision_Avoidance.c **** 
  49:../Ultrasonic_Collision_Avoidance.c **** 	if(Ultrasonic_cm_C_clc != 0){
 414              	 .loc 3 49 0
 415 0026 0E23     	 mov r3,#14
 416 0028 FB18     	 add r3,r7,r3
 417 002a 0022     	 mov r2,#0
 418 002c 9B5E     	 ldrsh r3,[r3,r2]
 419 002e 002B     	 cmp r3,#0
 420 0030 1CD0     	 beq .L10
  50:../Ultrasonic_Collision_Avoidance.c **** 		Ultrsonic_data_invaildcounter[0] = 0;
 421              	 .loc 3 50 0
 422 0032 CF4B     	 ldr r3,.L27
 423 0034 0022     	 mov r2,#0
 424 0036 1A70     	 strb r2,[r3]
  51:../Ultrasonic_Collision_Avoidance.c **** 		Ultra_m_C = Exp_moving_average((float)Ultrasonic_cm_C_clc / 100 , Ultra_m_C, ALPHA_ULTARSONIC);
 425              	 .loc 3 51 0
 426 0038 0E23     	 mov r3,#14
 427 003a FB18     	 add r3,r7,r3
 428 003c 0022     	 mov r2,#0
 429 003e 9B5E     	 ldrsh r3,[r3,r2]
 430 0040 181C     	 mov r0,r3
 431 0042 FFF7FEFF 	 bl __aeabi_i2f
 432 0046 031C     	 add r3,r0,#0
 433 0048 181C     	 add r0,r3,#0
 434 004a CA49     	 ldr r1,.L27+4
 435 004c FFF7FEFF 	 bl __aeabi_fdiv
 436 0050 031C     	 add r3,r0,#0
 437 0052 191C     	 add r1,r3,#0
 438 0054 C84B     	 ldr r3,.L27+8
 439 0056 1A68     	 ldr r2,[r3]
 440 0058 7B68     	 ldr r3,[r7,#4]
 441 005a 081C     	 add r0,r1,#0
 442 005c 111C     	 add r1,r2,#0
 443 005e 1A1C     	 add r2,r3,#0
 444 0060 FFF7FEFF 	 bl Exp_moving_average
 445 0064 021C     	 add r2,r0,#0
 446 0066 C44B     	 ldr r3,.L27+8
 447 0068 1A60     	 str r2,[r3]
 448 006a 05E0     	 b .L11
 449              	.L10:
  52:../Ultrasonic_Collision_Avoidance.c **** 	}
  53:../Ultrasonic_Collision_Avoidance.c **** 	else Ultrsonic_data_invaildcounter[0]++;
 450              	 .loc 3 53 0
 451 006c C04B     	 ldr r3,.L27
 452 006e 1B78     	 ldrb r3,[r3]
 453 0070 0133     	 add r3,r3,#1
 454 0072 DAB2     	 uxtb r2,r3
 455 0074 BE4B     	 ldr r3,.L27
 456 0076 1A70     	 strb r2,[r3]
 457              	.L11:
  54:../Ultrasonic_Collision_Avoidance.c **** 
  55:../Ultrasonic_Collision_Avoidance.c **** 	if(Ultrasonic_cm_L_clc != 0){
 458              	 .loc 3 55 0
 459 0078 0C23     	 mov r3,#12
 460 007a FB18     	 add r3,r7,r3
 461 007c 0022     	 mov r2,#0
 462 007e 9B5E     	 ldrsh r3,[r3,r2]
 463 0080 002B     	 cmp r3,#0
 464 0082 2CD0     	 beq .L12
  56:../Ultrasonic_Collision_Avoidance.c **** 		obstructed_L = Ultrasoinc_Obstructet_Test(-Steering_Angles[0]);
 465              	 .loc 3 56 0
 466 0084 BD4B     	 ldr r3,.L27+12
 467 0086 1B68     	 ldr r3,[r3]
 468 0088 8022     	 mov r2,#128
 469 008a 1206     	 lsl r2,r2,#24
 470 008c 5340     	 eor r3,r2
 471 008e 181C     	 add r0,r3,#0
 472 0090 FFF7FEFF 	 bl Ultrasoinc_Obstructet_Test
 473 0094 031C     	 mov r3,r0
 474 0096 1A1C     	 mov r2,r3
 475 0098 B94B     	 ldr r3,.L27+16
 476 009a 1A70     	 strb r2,[r3]
  57:../Ultrasonic_Collision_Avoidance.c **** 		if(obstructed_L == 0) {
 477              	 .loc 3 57 0
 478 009c B84B     	 ldr r3,.L27+16
 479 009e 1B78     	 ldrb r3,[r3]
 480 00a0 002B     	 cmp r3,#0
 481 00a2 22D1     	 bne .L14
  58:../Ultrasonic_Collision_Avoidance.c **** 			Ultrsonic_data_invaildcounter[1] = 0;
 482              	 .loc 3 58 0
 483 00a4 B24B     	 ldr r3,.L27
 484 00a6 0022     	 mov r2,#0
 485 00a8 5A70     	 strb r2,[r3,#1]
  59:../Ultrasonic_Collision_Avoidance.c **** 			Ultra_m_L = Exp_moving_average((float)Ultrasonic_cm_L_clc / 100 , Ultra_m_L, ALPHA_ULTARSONIC);
 486              	 .loc 3 59 0
 487 00aa 0C23     	 mov r3,#12
 488 00ac FB18     	 add r3,r7,r3
 489 00ae 0022     	 mov r2,#0
 490 00b0 9B5E     	 ldrsh r3,[r3,r2]
 491 00b2 181C     	 mov r0,r3
 492 00b4 FFF7FEFF 	 bl __aeabi_i2f
 493 00b8 031C     	 add r3,r0,#0
 494 00ba 181C     	 add r0,r3,#0
 495 00bc AD49     	 ldr r1,.L27+4
 496 00be FFF7FEFF 	 bl __aeabi_fdiv
 497 00c2 031C     	 add r3,r0,#0
 498 00c4 191C     	 add r1,r3,#0
 499 00c6 AF4B     	 ldr r3,.L27+20
 500 00c8 1A68     	 ldr r2,[r3]
 501 00ca 7B68     	 ldr r3,[r7,#4]
 502 00cc 081C     	 add r0,r1,#0
 503 00ce 111C     	 add r1,r2,#0
 504 00d0 1A1C     	 add r2,r3,#0
 505 00d2 FFF7FEFF 	 bl Exp_moving_average
 506 00d6 021C     	 add r2,r0,#0
 507 00d8 AA4B     	 ldr r3,.L27+20
 508 00da 1A60     	 str r2,[r3]
 509 00dc 05E0     	 b .L14
 510              	.L12:
  60:../Ultrasonic_Collision_Avoidance.c **** 		}
  61:../Ultrasonic_Collision_Avoidance.c **** 	}
  62:../Ultrasonic_Collision_Avoidance.c **** 	else Ultrsonic_data_invaildcounter[1]++;
 511              	 .loc 3 62 0
 512 00de A44B     	 ldr r3,.L27
 513 00e0 5B78     	 ldrb r3,[r3,#1]
 514 00e2 0133     	 add r3,r3,#1
 515 00e4 DAB2     	 uxtb r2,r3
 516 00e6 A24B     	 ldr r3,.L27
 517 00e8 5A70     	 strb r2,[r3,#1]
 518              	.L14:
  63:../Ultrasonic_Collision_Avoidance.c **** 
  64:../Ultrasonic_Collision_Avoidance.c **** 	if(Ultrasonic_cm_R_clc != 0){
 519              	 .loc 3 64 0
 520 00ea 0A23     	 mov r3,#10
 521 00ec FB18     	 add r3,r7,r3
 522 00ee 0022     	 mov r2,#0
 523 00f0 9B5E     	 ldrsh r3,[r3,r2]
 524 00f2 002B     	 cmp r3,#0
 525 00f4 29D0     	 beq .L15
  65:../Ultrasonic_Collision_Avoidance.c **** 		obstructed_R = Ultrasoinc_Obstructet_Test(Steering_Angles[1]); // neagtiv becasue right wheel
 526              	 .loc 3 65 0
 527 00f6 A14B     	 ldr r3,.L27+12
 528 00f8 5B68     	 ldr r3,[r3,#4]
 529 00fa 181C     	 add r0,r3,#0
 530 00fc FFF7FEFF 	 bl Ultrasoinc_Obstructet_Test
 531 0100 031C     	 mov r3,r0
 532 0102 1A1C     	 mov r2,r3
 533 0104 A04B     	 ldr r3,.L27+24
 534 0106 1A70     	 strb r2,[r3]
  66:../Ultrasonic_Collision_Avoidance.c **** 		if(obstructed_R == 0){
 535              	 .loc 3 66 0
 536 0108 9F4B     	 ldr r3,.L27+24
 537 010a 1B78     	 ldrb r3,[r3]
 538 010c 002B     	 cmp r3,#0
 539 010e 22D1     	 bne .L17
  67:../Ultrasonic_Collision_Avoidance.c **** 			Ultrsonic_data_invaildcounter[2] = 0;
 540              	 .loc 3 67 0
 541 0110 974B     	 ldr r3,.L27
 542 0112 0022     	 mov r2,#0
 543 0114 9A70     	 strb r2,[r3,#2]
  68:../Ultrasonic_Collision_Avoidance.c **** 			Ultra_m_R = Exp_moving_average((float)Ultrasonic_cm_R_clc / 100 , Ultra_m_R, ALPHA_ULTARSONIC);
 544              	 .loc 3 68 0
 545 0116 0A23     	 mov r3,#10
 546 0118 FB18     	 add r3,r7,r3
 547 011a 0022     	 mov r2,#0
 548 011c 9B5E     	 ldrsh r3,[r3,r2]
 549 011e 181C     	 mov r0,r3
 550 0120 FFF7FEFF 	 bl __aeabi_i2f
 551 0124 031C     	 add r3,r0,#0
 552 0126 181C     	 add r0,r3,#0
 553 0128 9249     	 ldr r1,.L27+4
 554 012a FFF7FEFF 	 bl __aeabi_fdiv
 555 012e 031C     	 add r3,r0,#0
 556 0130 191C     	 add r1,r3,#0
 557 0132 964B     	 ldr r3,.L27+28
 558 0134 1A68     	 ldr r2,[r3]
 559 0136 7B68     	 ldr r3,[r7,#4]
 560 0138 081C     	 add r0,r1,#0
 561 013a 111C     	 add r1,r2,#0
 562 013c 1A1C     	 add r2,r3,#0
 563 013e FFF7FEFF 	 bl Exp_moving_average
 564 0142 021C     	 add r2,r0,#0
 565 0144 914B     	 ldr r3,.L27+28
 566 0146 1A60     	 str r2,[r3]
 567 0148 05E0     	 b .L17
 568              	.L15:
  69:../Ultrasonic_Collision_Avoidance.c **** 		}
  70:../Ultrasonic_Collision_Avoidance.c **** 	}
  71:../Ultrasonic_Collision_Avoidance.c **** 	else Ultrsonic_data_invaildcounter[2]++;
 569              	 .loc 3 71 0
 570 014a 894B     	 ldr r3,.L27
 571 014c 9B78     	 ldrb r3,[r3,#2]
 572 014e 0133     	 add r3,r3,#1
 573 0150 DAB2     	 uxtb r2,r3
 574 0152 874B     	 ldr r3,.L27
 575 0154 9A70     	 strb r2,[r3,#2]
 576              	.L17:
 577              	.LBB2:
  72:../Ultrasonic_Collision_Avoidance.c **** 
  73:../Ultrasonic_Collision_Avoidance.c **** 	for(uint8_t i = 0; i < 3; i++){ // counter overflow stop
 578              	 .loc 3 73 0
 579 0156 1723     	 mov r3,#23
 580 0158 FB18     	 add r3,r7,r3
 581 015a 0022     	 mov r2,#0
 582 015c 1A70     	 strb r2,[r3]
 583 015e 13E0     	 b .L18
 584              	.L20:
  74:../Ultrasonic_Collision_Avoidance.c **** 		if( Ultrsonic_data_invaildcounter[i] > ULRTA_NUM_NO_DATA_INVALID) Ultrsonic_data_invaildcounter[i
 585              	 .loc 3 74 0
 586 0160 1723     	 mov r3,#23
 587 0162 FB18     	 add r3,r7,r3
 588 0164 1B78     	 ldrb r3,[r3]
 589 0166 824A     	 ldr r2,.L27
 590 0168 D35C     	 ldrb r3,[r2,r3]
 591 016a 142B     	 cmp r3,#20
 592 016c 05D9     	 bls .L19
 593              	 .loc 3 74 0 is_stmt 0 discriminator 1
 594 016e 1723     	 mov r3,#23
 595 0170 FB18     	 add r3,r7,r3
 596 0172 1B78     	 ldrb r3,[r3]
 597 0174 7E4A     	 ldr r2,.L27
 598 0176 1421     	 mov r1,#20
 599 0178 D154     	 strb r1,[r2,r3]
 600              	.L19:
  73:../Ultrasonic_Collision_Avoidance.c **** 		if( Ultrsonic_data_invaildcounter[i] > ULRTA_NUM_NO_DATA_INVALID) Ultrsonic_data_invaildcounter[i
 601              	 .loc 3 73 0 is_stmt 1 discriminator 2
 602 017a 1723     	 mov r3,#23
 603 017c FB18     	 add r3,r7,r3
 604 017e 1A78     	 ldrb r2,[r3]
 605 0180 1723     	 mov r3,#23
 606 0182 FB18     	 add r3,r7,r3
 607 0184 0132     	 add r2,r2,#1
 608 0186 1A70     	 strb r2,[r3]
 609              	.L18:
  73:../Ultrasonic_Collision_Avoidance.c **** 		if( Ultrsonic_data_invaildcounter[i] > ULRTA_NUM_NO_DATA_INVALID) Ultrsonic_data_invaildcounter[i
 610              	 .loc 3 73 0 is_stmt 0 discriminator 1
 611 0188 1723     	 mov r3,#23
 612 018a FB18     	 add r3,r7,r3
 613 018c 1B78     	 ldrb r3,[r3]
 614 018e 022B     	 cmp r3,#2
 615 0190 E6D9     	 bls .L20
 616              	.LBE2:
  75:../Ultrasonic_Collision_Avoidance.c **** 	}
  76:../Ultrasonic_Collision_Avoidance.c **** 
  77:../Ultrasonic_Collision_Avoidance.c **** 	if(Ultrsonic_data_invaildcounter[0] < ULRTA_NUM_NO_DATA_INVALID ){
 617              	 .loc 3 77 0 is_stmt 1
 618 0192 774B     	 ldr r3,.L27
 619 0194 1B78     	 ldrb r3,[r3]
 620 0196 132B     	 cmp r3,#19
 621 0198 11D8     	 bhi .L21
  78:../Ultrasonic_Collision_Avoidance.c **** 		Obstacel_F.angle = 0;
 622              	 .loc 3 78 0
 623 019a 7D4B     	 ldr r3,.L27+32
 624 019c 0022     	 mov r2,#0
 625 019e 9A60     	 str r2,[r3,#8]
  79:../Ultrasonic_Collision_Avoidance.c **** 		Obstacel_F.distance = Ultra_m_C;
 626              	 .loc 3 79 0
 627 01a0 754B     	 ldr r3,.L27+8
 628 01a2 1A68     	 ldr r2,[r3]
 629 01a4 7A4B     	 ldr r3,.L27+32
 630 01a6 5A60     	 str r2,[r3,#4]
  80:../Ultrasonic_Collision_Avoidance.c **** 		Obstacel_F.isValid = 1;
 631              	 .loc 3 80 0
 632 01a8 794B     	 ldr r3,.L27+32
 633 01aa 0122     	 mov r2,#1
 634 01ac 1A70     	 strb r2,[r3]
  81:../Ultrasonic_Collision_Avoidance.c **** 		Obstacel_F.vector[0] = Obstacel_F.distance;
 635              	 .loc 3 81 0
 636 01ae 784B     	 ldr r3,.L27+32
 637 01b0 5A68     	 ldr r2,[r3,#4]
 638 01b2 774B     	 ldr r3,.L27+32
 639 01b4 DA60     	 str r2,[r3,#12]
  82:../Ultrasonic_Collision_Avoidance.c **** 		Obstacel_F.vector[1] = 0;
 640              	 .loc 3 82 0
 641 01b6 764B     	 ldr r3,.L27+32
 642 01b8 0022     	 mov r2,#0
 643 01ba 1A61     	 str r2,[r3,#16]
 644 01bc 02E0     	 b .L22
 645              	.L21:
  83:../Ultrasonic_Collision_Avoidance.c **** 	}
  84:../Ultrasonic_Collision_Avoidance.c **** 	else Obstacel_F.isValid = 0;
 646              	 .loc 3 84 0
 647 01be 744B     	 ldr r3,.L27+32
 648 01c0 0022     	 mov r2,#0
 649 01c2 1A70     	 strb r2,[r3]
 650              	.L22:
  85:../Ultrasonic_Collision_Avoidance.c **** 
  86:../Ultrasonic_Collision_Avoidance.c **** 	if(Ultrsonic_data_invaildcounter[1] < ULRTA_NUM_NO_DATA_INVALID ){
 651              	 .loc 3 86 0
 652 01c4 6A4B     	 ldr r3,.L27
 653 01c6 5B78     	 ldrb r3,[r3,#1]
 654 01c8 132B     	 cmp r3,#19
 655 01ca 61D8     	 bhi .L23
  87:../Ultrasonic_Collision_Avoidance.c **** 		Obstacel_L.angle = Steering_Angles[0];
 656              	 .loc 3 87 0
 657 01cc 6B4B     	 ldr r3,.L27+12
 658 01ce 1A68     	 ldr r2,[r3]
 659 01d0 704B     	 ldr r3,.L27+36
 660 01d2 9A60     	 str r2,[r3,#8]
  88:../Ultrasonic_Collision_Avoidance.c **** 		Obstacel_L.distance = Ultra_m_L;
 661              	 .loc 3 88 0
 662 01d4 6B4B     	 ldr r3,.L27+20
 663 01d6 1A68     	 ldr r2,[r3]
 664 01d8 6E4B     	 ldr r3,.L27+36
 665 01da 5A60     	 str r2,[r3,#4]
  89:../Ultrasonic_Collision_Avoidance.c **** 		Obstacel_L.isValid = 1;
 666              	 .loc 3 89 0
 667 01dc 6D4B     	 ldr r3,.L27+36
 668 01de 0122     	 mov r2,#1
 669 01e0 1A70     	 strb r2,[r3]
  90:../Ultrasonic_Collision_Avoidance.c **** 		Obstacel_L.vector[0] = Obstacel_L.distance * cos(Obstacel_L.angle / RAD_TO_DEG);
 670              	 .loc 3 90 0
 671 01e2 6C4B     	 ldr r3,.L27+36
 672 01e4 5B68     	 ldr r3,[r3,#4]
 673 01e6 181C     	 add r0,r3,#0
 674 01e8 FFF7FEFF 	 bl __aeabi_f2d
 675 01ec 051C     	 mov r5,r0
 676 01ee 0E1C     	 mov r6,r1
 677 01f0 684B     	 ldr r3,.L27+36
 678 01f2 9B68     	 ldr r3,[r3,#8]
 679 01f4 181C     	 add r0,r3,#0
 680 01f6 FFF7FEFF 	 bl __aeabi_f2d
 681 01fa 031C     	 mov r3,r0
 682 01fc 0C1C     	 mov r4,r1
 683 01fe 181C     	 mov r0,r3
 684 0200 211C     	 mov r1,r4
 685 0202 654A     	 ldr r2,.L27+40
 686 0204 654B     	 ldr r3,.L27+44
 687 0206 FFF7FEFF 	 bl __aeabi_ddiv
 688 020a 031C     	 mov r3,r0
 689 020c 0C1C     	 mov r4,r1
 690 020e 181C     	 mov r0,r3
 691 0210 211C     	 mov r1,r4
 692 0212 FFF7FEFF 	 bl cos
 693 0216 031C     	 mov r3,r0
 694 0218 0C1C     	 mov r4,r1
 695 021a 281C     	 mov r0,r5
 696 021c 311C     	 mov r1,r6
 697 021e 1A1C     	 mov r2,r3
 698 0220 231C     	 mov r3,r4
 699 0222 FFF7FEFF 	 bl __aeabi_dmul
 700 0226 031C     	 mov r3,r0
 701 0228 0C1C     	 mov r4,r1
 702 022a 181C     	 mov r0,r3
 703 022c 211C     	 mov r1,r4
 704 022e FFF7FEFF 	 bl __aeabi_d2f
 705 0232 021C     	 add r2,r0,#0
 706 0234 574B     	 ldr r3,.L27+36
 707 0236 DA60     	 str r2,[r3,#12]
  91:../Ultrasonic_Collision_Avoidance.c **** 		Obstacel_L.vector[1] = Obstacel_L.distance * sin(Obstacel_L.angle / RAD_TO_DEG);
 708              	 .loc 3 91 0
 709 0238 564B     	 ldr r3,.L27+36
 710 023a 5B68     	 ldr r3,[r3,#4]
 711 023c 181C     	 add r0,r3,#0
 712 023e FFF7FEFF 	 bl __aeabi_f2d
 713 0242 051C     	 mov r5,r0
 714 0244 0E1C     	 mov r6,r1
 715 0246 534B     	 ldr r3,.L27+36
 716 0248 9B68     	 ldr r3,[r3,#8]
 717 024a 181C     	 add r0,r3,#0
 718 024c FFF7FEFF 	 bl __aeabi_f2d
 719 0250 031C     	 mov r3,r0
 720 0252 0C1C     	 mov r4,r1
 721 0254 181C     	 mov r0,r3
 722 0256 211C     	 mov r1,r4
 723 0258 4F4A     	 ldr r2,.L27+40
 724 025a 504B     	 ldr r3,.L27+44
 725 025c FFF7FEFF 	 bl __aeabi_ddiv
 726 0260 031C     	 mov r3,r0
 727 0262 0C1C     	 mov r4,r1
 728 0264 181C     	 mov r0,r3
 729 0266 211C     	 mov r1,r4
 730 0268 FFF7FEFF 	 bl sin
 731 026c 031C     	 mov r3,r0
 732 026e 0C1C     	 mov r4,r1
 733 0270 281C     	 mov r0,r5
 734 0272 311C     	 mov r1,r6
 735 0274 1A1C     	 mov r2,r3
 736 0276 231C     	 mov r3,r4
 737 0278 FFF7FEFF 	 bl __aeabi_dmul
 738 027c 031C     	 mov r3,r0
 739 027e 0C1C     	 mov r4,r1
 740 0280 181C     	 mov r0,r3
 741 0282 211C     	 mov r1,r4
 742 0284 FFF7FEFF 	 bl __aeabi_d2f
 743 0288 021C     	 add r2,r0,#0
 744 028a 424B     	 ldr r3,.L27+36
 745 028c 1A61     	 str r2,[r3,#16]
 746 028e 02E0     	 b .L24
 747              	.L23:
  92:../Ultrasonic_Collision_Avoidance.c **** 
  93:../Ultrasonic_Collision_Avoidance.c **** 	}
  94:../Ultrasonic_Collision_Avoidance.c **** 	else Obstacel_L.isValid = 0;
 748              	 .loc 3 94 0
 749 0290 404B     	 ldr r3,.L27+36
 750 0292 0022     	 mov r2,#0
 751 0294 1A70     	 strb r2,[r3]
 752              	.L24:
  95:../Ultrasonic_Collision_Avoidance.c **** 
  96:../Ultrasonic_Collision_Avoidance.c **** 	if(Ultrsonic_data_invaildcounter[2] < ULRTA_NUM_NO_DATA_INVALID ){
 753              	 .loc 3 96 0
 754 0296 364B     	 ldr r3,.L27
 755 0298 9B78     	 ldrb r3,[r3,#2]
 756 029a 132B     	 cmp r3,#19
 757 029c 61D8     	 bhi .L25
  97:../Ultrasonic_Collision_Avoidance.c **** 		Obstacel_R.angle = Steering_Angles[1];
 758              	 .loc 3 97 0
 759 029e 374B     	 ldr r3,.L27+12
 760 02a0 5A68     	 ldr r2,[r3,#4]
 761 02a2 3F4B     	 ldr r3,.L27+48
 762 02a4 9A60     	 str r2,[r3,#8]
  98:../Ultrasonic_Collision_Avoidance.c **** 		Obstacel_R.distance = Ultra_m_R;
 763              	 .loc 3 98 0
 764 02a6 394B     	 ldr r3,.L27+28
 765 02a8 1A68     	 ldr r2,[r3]
 766 02aa 3D4B     	 ldr r3,.L27+48
 767 02ac 5A60     	 str r2,[r3,#4]
  99:../Ultrasonic_Collision_Avoidance.c **** 		Obstacel_R.isValid = 1;
 768              	 .loc 3 99 0
 769 02ae 3C4B     	 ldr r3,.L27+48
 770 02b0 0122     	 mov r2,#1
 771 02b2 1A70     	 strb r2,[r3]
 100:../Ultrasonic_Collision_Avoidance.c **** 		Obstacel_R.vector[0] = Obstacel_R.distance * cos(Obstacel_R.angle / RAD_TO_DEG);
 772              	 .loc 3 100 0
 773 02b4 3A4B     	 ldr r3,.L27+48
 774 02b6 5B68     	 ldr r3,[r3,#4]
 775 02b8 181C     	 add r0,r3,#0
 776 02ba FFF7FEFF 	 bl __aeabi_f2d
 777 02be 051C     	 mov r5,r0
 778 02c0 0E1C     	 mov r6,r1
 779 02c2 374B     	 ldr r3,.L27+48
 780 02c4 9B68     	 ldr r3,[r3,#8]
 781 02c6 181C     	 add r0,r3,#0
 782 02c8 FFF7FEFF 	 bl __aeabi_f2d
 783 02cc 031C     	 mov r3,r0
 784 02ce 0C1C     	 mov r4,r1
 785 02d0 181C     	 mov r0,r3
 786 02d2 211C     	 mov r1,r4
 787 02d4 304A     	 ldr r2,.L27+40
 788 02d6 314B     	 ldr r3,.L27+44
 789 02d8 FFF7FEFF 	 bl __aeabi_ddiv
 790 02dc 031C     	 mov r3,r0
 791 02de 0C1C     	 mov r4,r1
 792 02e0 181C     	 mov r0,r3
 793 02e2 211C     	 mov r1,r4
 794 02e4 FFF7FEFF 	 bl cos
 795 02e8 031C     	 mov r3,r0
 796 02ea 0C1C     	 mov r4,r1
 797 02ec 281C     	 mov r0,r5
 798 02ee 311C     	 mov r1,r6
 799 02f0 1A1C     	 mov r2,r3
 800 02f2 231C     	 mov r3,r4
 801 02f4 FFF7FEFF 	 bl __aeabi_dmul
 802 02f8 031C     	 mov r3,r0
 803 02fa 0C1C     	 mov r4,r1
 804 02fc 181C     	 mov r0,r3
 805 02fe 211C     	 mov r1,r4
 806 0300 FFF7FEFF 	 bl __aeabi_d2f
 807 0304 021C     	 add r2,r0,#0
 808 0306 264B     	 ldr r3,.L27+48
 809 0308 DA60     	 str r2,[r3,#12]
 101:../Ultrasonic_Collision_Avoidance.c **** 		Obstacel_R.vector[1] = Obstacel_R.distance * sin(Obstacel_R.angle / RAD_TO_DEG);
 810              	 .loc 3 101 0
 811 030a 254B     	 ldr r3,.L27+48
 812 030c 5B68     	 ldr r3,[r3,#4]
 813 030e 181C     	 add r0,r3,#0
 814 0310 FFF7FEFF 	 bl __aeabi_f2d
 815 0314 051C     	 mov r5,r0
 816 0316 0E1C     	 mov r6,r1
 817 0318 214B     	 ldr r3,.L27+48
 818 031a 9B68     	 ldr r3,[r3,#8]
 819 031c 181C     	 add r0,r3,#0
 820 031e FFF7FEFF 	 bl __aeabi_f2d
 821 0322 031C     	 mov r3,r0
 822 0324 0C1C     	 mov r4,r1
 823 0326 181C     	 mov r0,r3
 824 0328 211C     	 mov r1,r4
 825 032a 1B4A     	 ldr r2,.L27+40
 826 032c 1B4B     	 ldr r3,.L27+44
 827 032e FFF7FEFF 	 bl __aeabi_ddiv
 828 0332 031C     	 mov r3,r0
 829 0334 0C1C     	 mov r4,r1
 830 0336 181C     	 mov r0,r3
 831 0338 211C     	 mov r1,r4
 832 033a FFF7FEFF 	 bl sin
 833 033e 031C     	 mov r3,r0
 834 0340 0C1C     	 mov r4,r1
 835 0342 281C     	 mov r0,r5
 836 0344 311C     	 mov r1,r6
 837 0346 1A1C     	 mov r2,r3
 838 0348 231C     	 mov r3,r4
 839 034a FFF7FEFF 	 bl __aeabi_dmul
 840 034e 031C     	 mov r3,r0
 841 0350 0C1C     	 mov r4,r1
 842 0352 181C     	 mov r0,r3
 843 0354 211C     	 mov r1,r4
 844 0356 FFF7FEFF 	 bl __aeabi_d2f
 845 035a 021C     	 add r2,r0,#0
 846 035c 104B     	 ldr r3,.L27+48
 847 035e 1A61     	 str r2,[r3,#16]
 848 0360 02E0     	 b .L9
 849              	.L25:
 102:../Ultrasonic_Collision_Avoidance.c **** 	}
 103:../Ultrasonic_Collision_Avoidance.c **** 	else Obstacel_R.isValid = 0;
 850              	 .loc 3 103 0
 851 0362 0F4B     	 ldr r3,.L27+48
 852 0364 0022     	 mov r2,#0
 853 0366 1A70     	 strb r2,[r3]
 854              	.L9:
 104:../Ultrasonic_Collision_Avoidance.c **** }
 855              	 .loc 3 104 0
 856 0368 BD46     	 mov sp,r7
 857 036a 07B0     	 add sp,sp,#28
 858              	 
 859 036c F0BD     	 pop {r4,r5,r6,r7,pc}
 860              	.L28:
 861 036e C046     	 .align 2
 862              	.L27:
 863 0370 00000000 	 .word Ultrsonic_data_invaildcounter
 864 0374 0000C842 	 .word 1120403456
 865 0378 00000000 	 .word Ultra_m_C
 866 037c 00000000 	 .word Steering_Angles
 867 0380 00000000 	 .word obstructed_L
 868 0384 00000000 	 .word Ultra_m_L
 869 0388 00000000 	 .word obstructed_R
 870 038c 00000000 	 .word Ultra_m_R
 871 0390 00000000 	 .word Obstacel_F
 872 0394 00000000 	 .word Obstacel_L
 873 0398 C7F48425 	 .word 629470407
 874 039c 1EA64C40 	 .word 1078765086
 875 03a0 00000000 	 .word Obstacel_R
 876              	 .cfi_endproc
 877              	.LFE224:
 879              	 .global __aeabi_fcmpgt
 880              	 .global __aeabi_fcmplt
 881              	 .section .text.Ultrasoinc_Obstructet_Test,"ax",%progbits
 882              	 .align 2
 883              	 .global Ultrasoinc_Obstructet_Test
 884              	 .code 16
 885              	 .thumb_func
 887              	Ultrasoinc_Obstructet_Test:
 888              	.LFB225:
 105:../Ultrasonic_Collision_Avoidance.c **** 
 106:../Ultrasonic_Collision_Avoidance.c **** 
 107:../Ultrasonic_Collision_Avoidance.c **** /*
 108:../Ultrasonic_Collision_Avoidance.c **** uint8_t Ultrasoinc_Obstructet_Test(float Angle){
 109:../Ultrasonic_Collision_Avoidance.c **** 	uint8_t i;
 110:../Ultrasonic_Collision_Avoidance.c **** 	for(i = 0; i < 3; i++){ // if rotate around multipel times
 111:../Ultrasonic_Collision_Avoidance.c **** 		if(Angle > 0){
 112:../Ultrasonic_Collision_Avoidance.c **** 			if((Angle - (POS_OBSTRUCTED_ANGLE_MIN + (i * 360))) * (Angle - (POS_OBSTRUCTED_ANGLE_MAX + (i * 
 113:../Ultrasonic_Collision_Avoidance.c **** 				return 1;
 114:../Ultrasonic_Collision_Avoidance.c **** 			}
 115:../Ultrasonic_Collision_Avoidance.c **** 		}
 116:../Ultrasonic_Collision_Avoidance.c **** 
 117:../Ultrasonic_Collision_Avoidance.c **** 		if(Angle < 0){
 118:../Ultrasonic_Collision_Avoidance.c **** 			if((Angle - (NEG_OBSTRUCTED_ANGLE_MIN - (i * 360))) * (Angle - (NEG_OBSTRUCTED_ANGLE_MAX - (i * 
 119:../Ultrasonic_Collision_Avoidance.c **** 						return 1;
 120:../Ultrasonic_Collision_Avoidance.c **** 			}
 121:../Ultrasonic_Collision_Avoidance.c **** 		}
 122:../Ultrasonic_Collision_Avoidance.c **** 	}
 123:../Ultrasonic_Collision_Avoidance.c **** 
 124:../Ultrasonic_Collision_Avoidance.c **** 	return 0;
 125:../Ultrasonic_Collision_Avoidance.c **** }
 126:../Ultrasonic_Collision_Avoidance.c **** */
 127:../Ultrasonic_Collision_Avoidance.c **** 
 128:../Ultrasonic_Collision_Avoidance.c **** 
 129:../Ultrasonic_Collision_Avoidance.c **** uint8_t Ultrasoinc_Obstructet_Test(float Angle){
 889              	 .loc 3 129 0
 890              	 .cfi_startproc
 891 0000 80B5     	 push {r7,lr}
 892              	.LCFI21:
 893              	 .cfi_def_cfa_offset 8
 894              	 .cfi_offset 7,-8
 895              	 .cfi_offset 14,-4
 896 0002 82B0     	 sub sp,sp,#8
 897              	.LCFI22:
 898              	 .cfi_def_cfa_offset 16
 899 0004 00AF     	 add r7,sp,#0
 900              	.LCFI23:
 901              	 .cfi_def_cfa_register 7
 902 0006 7860     	 str r0,[r7,#4]
 130:../Ultrasonic_Collision_Avoidance.c **** 		if(Angle > 0){
 903              	 .loc 3 130 0
 904 0008 7868     	 ldr r0,[r7,#4]
 905 000a 0021     	 mov r1,#0
 906 000c FFF7FEFF 	 bl __aeabi_fcmpgt
 907 0010 031E     	 sub r3,r0,#0
 908 0012 09D0     	 beq .L30
 131:../Ultrasonic_Collision_Avoidance.c **** 			if(within_MAX_MIN(Angle, POS_OBSTRUCTED_ANGLE_MAX , POS_OBSTRUCTED_ANGLE_MIN)){
 909              	 .loc 3 131 0
 910 0014 7B68     	 ldr r3,[r7,#4]
 911 0016 0F49     	 ldr r1,.L37
 912 0018 0F4A     	 ldr r2,.L37+4
 913 001a 181C     	 add r0,r3,#0
 914 001c FFF7FEFF 	 bl within_MAX_MIN
 915 0020 031E     	 sub r3,r0,#0
 916 0022 01D0     	 beq .L30
 132:../Ultrasonic_Collision_Avoidance.c **** 				return 1;
 917              	 .loc 3 132 0
 918 0024 0123     	 mov r3,#1
 919 0026 10E0     	 b .L32
 920              	.L30:
 133:../Ultrasonic_Collision_Avoidance.c **** 			}
 134:../Ultrasonic_Collision_Avoidance.c **** 		}
 135:../Ultrasonic_Collision_Avoidance.c **** 
 136:../Ultrasonic_Collision_Avoidance.c **** 		if(Angle < 0){
 921              	 .loc 3 136 0
 922 0028 7868     	 ldr r0,[r7,#4]
 923 002a 0021     	 mov r1,#0
 924 002c FFF7FEFF 	 bl __aeabi_fcmplt
 925 0030 031E     	 sub r3,r0,#0
 926 0032 09D0     	 beq .L33
 137:../Ultrasonic_Collision_Avoidance.c **** 			if(within_MAX_MIN(Angle, NEG_OBSTRUCTED_ANGLE_MIN , NEG_OBSTRUCTED_ANGLE_MAX)){
 927              	 .loc 3 137 0
 928 0034 7B68     	 ldr r3,[r7,#4]
 929 0036 0949     	 ldr r1,.L37+8
 930 0038 094A     	 ldr r2,.L37+12
 931 003a 181C     	 add r0,r3,#0
 932 003c FFF7FEFF 	 bl within_MAX_MIN
 933 0040 031E     	 sub r3,r0,#0
 934 0042 01D0     	 beq .L33
 138:../Ultrasonic_Collision_Avoidance.c **** 				return 1;
 935              	 .loc 3 138 0
 936 0044 0123     	 mov r3,#1
 937 0046 00E0     	 b .L32
 938              	.L33:
 139:../Ultrasonic_Collision_Avoidance.c **** 			}
 140:../Ultrasonic_Collision_Avoidance.c **** 		}
 141:../Ultrasonic_Collision_Avoidance.c **** 
 142:../Ultrasonic_Collision_Avoidance.c **** 	return 0;
 939              	 .loc 3 142 0
 940 0048 0023     	 mov r3,#0
 941              	.L32:
 143:../Ultrasonic_Collision_Avoidance.c **** }
 942              	 .loc 3 143 0
 943 004a 181C     	 mov r0,r3
 944 004c BD46     	 mov sp,r7
 945 004e 02B0     	 add sp,sp,#8
 946              	 
 947 0050 80BD     	 pop {r7,pc}
 948              	.L38:
 949 0052 C046     	 .align 2
 950              	.L37:
 951 0054 00005243 	 .word 1129447424
 952 0058 00004842 	 .word 1112014848
 953 005c 000016C3 	 .word -1021968384
 954 0060 00009BC3 	 .word -1013252096
 955              	 .cfi_endproc
 956              	.LFE225:
 958              	 .global __aeabi_fcmpeq
 959              	 .global __aeabi_fsub
 960              	 .global __aeabi_fmul
 961              	 .section .text.Collision_voidance,"ax",%progbits
 962              	 .align 2
 963              	 .global Collision_voidance
 964              	 .code 16
 965              	 .thumb_func
 967              	Collision_voidance:
 968              	.LFB226:
 144:../Ultrasonic_Collision_Avoidance.c **** 
 145:../Ultrasonic_Collision_Avoidance.c **** void Collision_voidance(){
 969              	 .loc 3 145 0
 970              	 .cfi_startproc
 971 0000 90B5     	 push {r4,r7,lr}
 972              	.LCFI24:
 973              	 .cfi_def_cfa_offset 12
 974              	 .cfi_offset 4,-12
 975              	 .cfi_offset 7,-8
 976              	 .cfi_offset 14,-4
 977 0002 85B0     	 sub sp,sp,#20
 978              	.LCFI25:
 979              	 .cfi_def_cfa_offset 32
 980 0004 02AF     	 add r7,sp,#8
 981              	.LCFI26:
 982              	 .cfi_def_cfa 7,24
 146:../Ultrasonic_Collision_Avoidance.c **** 	if(init == 0){
 983              	 .loc 3 146 0
 984 0006 514B     	 ldr r3,.L57
 985 0008 1B78     	 ldrb r3,[r3]
 986 000a 002B     	 cmp r3,#0
 987 000c 0BD1     	 bne .L40
 147:../Ultrasonic_Collision_Avoidance.c **** 		Obstacel_F.Sensor = FRONT_;
 988              	 .loc 3 147 0
 989 000e 504B     	 ldr r3,.L57+4
 990 0010 0022     	 mov r2,#0
 991 0012 5A70     	 strb r2,[r3,#1]
 148:../Ultrasonic_Collision_Avoidance.c **** 		Obstacel_L.Sensor = LEFT;
 992              	 .loc 3 148 0
 993 0014 4F4B     	 ldr r3,.L57+8
 994 0016 0122     	 mov r2,#1
 995 0018 5A70     	 strb r2,[r3,#1]
 149:../Ultrasonic_Collision_Avoidance.c **** 		Obstacel_R.Sensor = RIGHT;
 996              	 .loc 3 149 0
 997 001a 4F4B     	 ldr r3,.L57+12
 998 001c 0222     	 mov r2,#2
 999 001e 5A70     	 strb r2,[r3,#1]
 150:../Ultrasonic_Collision_Avoidance.c **** 		init = 1;
 1000              	 .loc 3 150 0
 1001 0020 4A4B     	 ldr r3,.L57
 1002 0022 0122     	 mov r2,#1
 1003 0024 1A70     	 strb r2,[r3]
 1004              	.L40:
 151:../Ultrasonic_Collision_Avoidance.c **** 	}
 152:../Ultrasonic_Collision_Avoidance.c **** 
 153:../Ultrasonic_Collision_Avoidance.c **** 
 154:../Ultrasonic_Collision_Avoidance.c **** 
 155:../Ultrasonic_Collision_Avoidance.c **** 	// check if reciveing from Ulatrasoic sesnors node
 156:../Ultrasonic_Collision_Avoidance.c **** 	CAN_Ultrasonic_No_messasge_count ++;
 1005              	 .loc 3 156 0
 1006 0026 4D4B     	 ldr r3,.L57+16
 1007 0028 1B78     	 ldrb r3,[r3]
 1008 002a DBB2     	 uxtb r3,r3
 1009 002c 0133     	 add r3,r3,#1
 1010 002e DAB2     	 uxtb r2,r3
 1011 0030 4A4B     	 ldr r3,.L57+16
 1012 0032 1A70     	 strb r2,[r3]
 157:../Ultrasonic_Collision_Avoidance.c **** 	if(CAN_Ultrasonic_No_messasge_count > 200) {
 1013              	 .loc 3 157 0
 1014 0034 494B     	 ldr r3,.L57+16
 1015 0036 1B78     	 ldrb r3,[r3]
 1016 0038 DBB2     	 uxtb r3,r3
 1017 003a C82B     	 cmp r3,#200
 1018 003c 03D9     	 bls .L41
 158:../Ultrasonic_Collision_Avoidance.c **** 		CAN_Ultrasonic_No_messasge_count = 200;
 1019              	 .loc 3 158 0
 1020 003e 474B     	 ldr r3,.L57+16
 1021 0040 C822     	 mov r2,#200
 1022 0042 1A70     	 strb r2,[r3]
 159:../Ultrasonic_Collision_Avoidance.c **** 		return;
 1023              	 .loc 3 159 0
 1024 0044 7FE0     	 b .L39
 1025              	.L41:
 160:../Ultrasonic_Collision_Avoidance.c **** 	}
 161:../Ultrasonic_Collision_Avoidance.c **** 
 162:../Ultrasonic_Collision_Avoidance.c **** 	Speed_reduction_ratio = 1;
 1026              	 .loc 3 162 0
 1027 0046 464B     	 ldr r3,.L57+20
 1028 0048 FE22     	 mov r2,#254
 1029 004a 9205     	 lsl r2,r2,#22
 1030 004c 1A60     	 str r2,[r3]
 163:../Ultrasonic_Collision_Avoidance.c **** 	Speed_limit = MAX_Speed + 0.01; // + 0.01 to avoid float bs
 1031              	 .loc 3 163 0
 1032 004e 454B     	 ldr r3,.L57+24
 1033 0050 454A     	 ldr r2,.L57+28
 1034 0052 1A60     	 str r2,[r3]
 164:../Ultrasonic_Collision_Avoidance.c **** 	new_Speed_limit = MAX_Speed;
 1035              	 .loc 3 164 0
 1036 0054 454B     	 ldr r3,.L57+32
 1037 0056 FF22     	 mov r2,#255
 1038 0058 9205     	 lsl r2,r2,#22
 1039 005a 1A60     	 str r2,[r3]
 165:../Ultrasonic_Collision_Avoidance.c **** 
 166:../Ultrasonic_Collision_Avoidance.c **** 
 167:../Ultrasonic_Collision_Avoidance.c **** 	Obstacel_CA_check(Obstacel_F);
 1040              	 .loc 3 167 0
 1041 005c 3C4B     	 ldr r3,.L57+4
 1042 005e 6A46     	 mov r2,sp
 1043 0060 1969     	 ldr r1,[r3,#16]
 1044 0062 1160     	 str r1,[r2]
 1045 0064 1868     	 ldr r0,[r3]
 1046 0066 5968     	 ldr r1,[r3,#4]
 1047 0068 9A68     	 ldr r2,[r3,#8]
 1048 006a DB68     	 ldr r3,[r3,#12]
 1049 006c FFF7FEFF 	 bl Obstacel_CA_check
 168:../Ultrasonic_Collision_Avoidance.c **** 	//Obstacel_CA_check(Obstacel_L);
 169:../Ultrasonic_Collision_Avoidance.c **** 	//Obstacel_CA_check(Obstacel_R);#
 170:../Ultrasonic_Collision_Avoidance.c **** 
 171:../Ultrasonic_Collision_Avoidance.c **** 	//CA aktive
 172:../Ultrasonic_Collision_Avoidance.c **** 	if(Speed_reduction_ratio == 0) aktive_addition = 0.05 ;
 1050              	 .loc 3 172 0
 1051 0070 3B4B     	 ldr r3,.L57+20
 1052 0072 1B68     	 ldr r3,[r3]
 1053 0074 181C     	 add r0,r3,#0
 1054 0076 0021     	 mov r1,#0
 1055 0078 FFF7FEFF 	 bl __aeabi_fcmpeq
 1056 007c 031E     	 sub r3,r0,#0
 1057 007e 03D0     	 beq .L56
 1058              	 .loc 3 172 0 is_stmt 0 discriminator 1
 1059 0080 3B4B     	 ldr r3,.L57+36
 1060 0082 3C4A     	 ldr r2,.L57+40
 1061 0084 1A60     	 str r2,[r3]
 1062 0086 12E0     	 b .L45
 1063              	.L56:
 173:../Ultrasonic_Collision_Avoidance.c **** 	else if(aktive_addition > 0) aktive_addition --;
 1064              	 .loc 3 173 0 is_stmt 1
 1065 0088 394B     	 ldr r3,.L57+36
 1066 008a 1B68     	 ldr r3,[r3]
 1067 008c 181C     	 add r0,r3,#0
 1068 008e 0021     	 mov r1,#0
 1069 0090 FFF7FEFF 	 bl __aeabi_fcmpgt
 1070 0094 031E     	 sub r3,r0,#0
 1071 0096 0AD0     	 beq .L45
 1072              	 .loc 3 173 0 is_stmt 0 discriminator 1
 1073 0098 354B     	 ldr r3,.L57+36
 1074 009a 1B68     	 ldr r3,[r3]
 1075 009c 181C     	 add r0,r3,#0
 1076 009e FE21     	 mov r1,#254
 1077 00a0 8905     	 lsl r1,r1,#22
 1078 00a2 FFF7FEFF 	 bl __aeabi_fsub
 1079 00a6 031C     	 add r3,r0,#0
 1080 00a8 1A1C     	 add r2,r3,#0
 1081 00aa 314B     	 ldr r3,.L57+36
 1082 00ac 1A60     	 str r2,[r3]
 1083              	.L45:
 174:../Ultrasonic_Collision_Avoidance.c **** 
 175:../Ultrasonic_Collision_Avoidance.c **** 	if(Speed_limit < MAX_Speed){
 1084              	 .loc 3 175 0 is_stmt 1
 1085 00ae 2D4B     	 ldr r3,.L57+24
 1086 00b0 1B68     	 ldr r3,[r3]
 1087 00b2 181C     	 add r0,r3,#0
 1088 00b4 FF21     	 mov r1,#255
 1089 00b6 8905     	 lsl r1,r1,#22
 1090 00b8 FFF7FEFF 	 bl __aeabi_fcmplt
 1091 00bc 031E     	 sub r3,r0,#0
 1092 00be 13D0     	 beq .L47
 176:../Ultrasonic_Collision_Avoidance.c **** 		if(Speeds[0] != 0) Speed_reduction_ratio = Speed_limit / Speeds[0];
 1093              	 .loc 3 176 0
 1094 00c0 2D4B     	 ldr r3,.L57+44
 1095 00c2 1B68     	 ldr r3,[r3]
 1096 00c4 181C     	 add r0,r3,#0
 1097 00c6 0021     	 mov r1,#0
 1098 00c8 FFF7FEFF 	 bl __aeabi_fcmpeq
 1099 00cc 031E     	 sub r3,r0,#0
 1100 00ce 0BD1     	 bne .L47
 1101              	 .loc 3 176 0 is_stmt 0 discriminator 1
 1102 00d0 244B     	 ldr r3,.L57+24
 1103 00d2 1A68     	 ldr r2,[r3]
 1104 00d4 284B     	 ldr r3,.L57+44
 1105 00d6 1B68     	 ldr r3,[r3]
 1106 00d8 101C     	 add r0,r2,#0
 1107 00da 191C     	 add r1,r3,#0
 1108 00dc FFF7FEFF 	 bl __aeabi_fdiv
 1109 00e0 031C     	 add r3,r0,#0
 1110 00e2 1A1C     	 add r2,r3,#0
 1111 00e4 1E4B     	 ldr r3,.L57+20
 1112 00e6 1A60     	 str r2,[r3]
 1113              	.L47:
 1114              	.LBB3:
 177:../Ultrasonic_Collision_Avoidance.c **** 	}
 178:../Ultrasonic_Collision_Avoidance.c **** 
 179:../Ultrasonic_Collision_Avoidance.c **** 	// speed output with reduction if CA active
 180:../Ultrasonic_Collision_Avoidance.c **** 	for(uint8_t i = 0; i < 4; i ++){
 1115              	 .loc 3 180 0 is_stmt 1
 1116 00e8 FB1D     	 add r3,r7,#7
 1117 00ea 0022     	 mov r2,#0
 1118 00ec 1A70     	 strb r2,[r3]
 1119 00ee 16E0     	 b .L50
 1120              	.L51:
 181:../Ultrasonic_Collision_Avoidance.c **** 		Speeds_CA[i] = Speeds[i] * Speed_reduction_ratio;
 1121              	 .loc 3 181 0 discriminator 3
 1122 00f0 FB1D     	 add r3,r7,#7
 1123 00f2 1C78     	 ldrb r4,[r3]
 1124 00f4 FB1D     	 add r3,r7,#7
 1125 00f6 1A78     	 ldrb r2,[r3]
 1126 00f8 1F4B     	 ldr r3,.L57+44
 1127 00fa 9200     	 lsl r2,r2,#2
 1128 00fc D258     	 ldr r2,[r2,r3]
 1129 00fe 184B     	 ldr r3,.L57+20
 1130 0100 1B68     	 ldr r3,[r3]
 1131 0102 101C     	 add r0,r2,#0
 1132 0104 191C     	 add r1,r3,#0
 1133 0106 FFF7FEFF 	 bl __aeabi_fmul
 1134 010a 031C     	 add r3,r0,#0
 1135 010c 191C     	 add r1,r3,#0
 1136 010e 1B4B     	 ldr r3,.L57+48
 1137 0110 A200     	 lsl r2,r4,#2
 1138 0112 D150     	 str r1,[r2,r3]
 180:../Ultrasonic_Collision_Avoidance.c **** 		Speeds_CA[i] = Speeds[i] * Speed_reduction_ratio;
 1139              	 .loc 3 180 0 discriminator 3
 1140 0114 FB1D     	 add r3,r7,#7
 1141 0116 1A78     	 ldrb r2,[r3]
 1142 0118 FB1D     	 add r3,r7,#7
 1143 011a 0132     	 add r2,r2,#1
 1144 011c 1A70     	 strb r2,[r3]
 1145              	.L50:
 180:../Ultrasonic_Collision_Avoidance.c **** 		Speeds_CA[i] = Speeds[i] * Speed_reduction_ratio;
 1146              	 .loc 3 180 0 is_stmt 0 discriminator 1
 1147 011e FB1D     	 add r3,r7,#7
 1148 0120 1B78     	 ldrb r3,[r3]
 1149 0122 032B     	 cmp r3,#3
 1150 0124 E4D9     	 bls .L51
 1151              	.LBE3:
 182:../Ultrasonic_Collision_Avoidance.c **** 	}
 183:../Ultrasonic_Collision_Avoidance.c **** 
 184:../Ultrasonic_Collision_Avoidance.c **** 	speed_CA_fl = Speeds_CA[0];
 1152              	 .loc 3 184 0 is_stmt 1
 1153 0126 154B     	 ldr r3,.L57+48
 1154 0128 1A68     	 ldr r2,[r3]
 1155 012a 154B     	 ldr r3,.L57+52
 1156 012c 1A60     	 str r2,[r3]
 185:../Ultrasonic_Collision_Avoidance.c **** 	speed_CA_fr = Speeds_CA[1];
 1157              	 .loc 3 185 0
 1158 012e 134B     	 ldr r3,.L57+48
 1159 0130 5A68     	 ldr r2,[r3,#4]
 1160 0132 144B     	 ldr r3,.L57+56
 1161 0134 1A60     	 str r2,[r3]
 186:../Ultrasonic_Collision_Avoidance.c **** 	speed_CA_rl = Speeds_CA[2];
 1162              	 .loc 3 186 0
 1163 0136 114B     	 ldr r3,.L57+48
 1164 0138 9A68     	 ldr r2,[r3,#8]
 1165 013a 134B     	 ldr r3,.L57+60
 1166 013c 1A60     	 str r2,[r3]
 187:../Ultrasonic_Collision_Avoidance.c **** 	speed_CA_rr = Speeds_CA[3];
 1167              	 .loc 3 187 0
 1168 013e 0F4B     	 ldr r3,.L57+48
 1169 0140 DA68     	 ldr r2,[r3,#12]
 1170 0142 124B     	 ldr r3,.L57+64
 1171 0144 1A60     	 str r2,[r3]
 1172              	.L39:
 188:../Ultrasonic_Collision_Avoidance.c **** 
 189:../Ultrasonic_Collision_Avoidance.c **** }
 1173              	 .loc 3 189 0
 1174 0146 BD46     	 mov sp,r7
 1175 0148 03B0     	 add sp,sp,#12
 1176              	 
 1177 014a 90BD     	 pop {r4,r7,pc}
 1178              	.L58:
 1179              	 .align 2
 1180              	.L57:
 1181 014c 00000000 	 .word init
 1182 0150 00000000 	 .word Obstacel_F
 1183 0154 00000000 	 .word Obstacel_L
 1184 0158 00000000 	 .word Obstacel_R
 1185 015c 00000000 	 .word CAN_Ultrasonic_No_messasge_count
 1186 0160 00000000 	 .word Speed_reduction_ratio
 1187 0164 00000000 	 .word Speed_limit
 1188 0168 AE47C13F 	 .word 1069631406
 1189 016c 00000000 	 .word new_Speed_limit
 1190 0170 00000000 	 .word aktive_addition
 1191 0174 CDCC4C3D 	 .word 1028443341
 1192 0178 00000000 	 .word Speeds
 1193 017c 00000000 	 .word Speeds_CA
 1194 0180 00000000 	 .word speed_CA_fl
 1195 0184 00000000 	 .word speed_CA_fr
 1196 0188 00000000 	 .word speed_CA_rl
 1197 018c 00000000 	 .word speed_CA_rr
 1198              	 .cfi_endproc
 1199              	.LFE226:
 1201              	 .global __aeabi_dcmplt
 1202              	 .global __aeabi_dadd
 1203              	 .global __aeabi_dsub
 1204              	 .global __aeabi_dcmpgt
 1205              	 .section .text.Obstacel_CA_check,"ax",%progbits
 1206              	 .align 2
 1207              	 .global Obstacel_CA_check
 1208              	 .code 16
 1209              	 .thumb_func
 1211              	Obstacel_CA_check:
 1212              	.LFB227:
 190:../Ultrasonic_Collision_Avoidance.c **** 
 191:../Ultrasonic_Collision_Avoidance.c **** void Obstacel_CA_check(Obstacel obstacel){
 1213              	 .loc 3 191 0
 1214              	 .cfi_startproc
 1215 0000 84B0     	 sub sp,sp,#16
 1216              	.LCFI27:
 1217              	 .cfi_def_cfa_offset 16
 1218 0002 F0B5     	 push {r4,r5,r6,r7,lr}
 1219              	.LCFI28:
 1220              	 .cfi_def_cfa_offset 36
 1221              	 .cfi_offset 4,-36
 1222              	 .cfi_offset 5,-32
 1223              	 .cfi_offset 6,-28
 1224              	 .cfi_offset 7,-24
 1225              	 .cfi_offset 14,-20
 1226 0004 83B0     	 sub sp,sp,#12
 1227              	.LCFI29:
 1228              	 .cfi_def_cfa_offset 48
 1229 0006 00AF     	 add r7,sp,#0
 1230              	.LCFI30:
 1231              	 .cfi_def_cfa_register 7
 1232 0008 2024     	 mov r4,#32
 1233 000a 3C19     	 add r4,r7,r4
 1234 000c 2060     	 str r0,[r4]
 1235 000e 6160     	 str r1,[r4,#4]
 1236 0010 A260     	 str r2,[r4,#8]
 1237 0012 E360     	 str r3,[r4,#12]
 192:../Ultrasonic_Collision_Avoidance.c **** 	set_CA_LED(obstacel.Sensor,0);
 1238              	 .loc 3 192 0
 1239 0014 2023     	 mov r3,#32
 1240 0016 FB18     	 add r3,r7,r3
 1241 0018 5B78     	 ldrb r3,[r3,#1]
 1242 001a 181C     	 mov r0,r3
 1243 001c 0021     	 mov r1,#0
 1244 001e FFF7FEFF 	 bl set_CA_LED
 193:../Ultrasonic_Collision_Avoidance.c **** 	if(obstacel.isValid == 0) return;
 1245              	 .loc 3 193 0
 1246 0022 2023     	 mov r3,#32
 1247 0024 FB18     	 add r3,r7,r3
 1248 0026 1B78     	 ldrb r3,[r3]
 1249 0028 0122     	 mov r2,#1
 1250 002a 5340     	 eor r3,r2
 1251 002c DBB2     	 uxtb r3,r3
 1252 002e 002B     	 cmp r3,#0
 1253 0030 00D0     	 beq .L60
 1254 0032 96E0     	 b .L59
 1255              	.L60:
 194:../Ultrasonic_Collision_Avoidance.c **** 
 195:../Ultrasonic_Collision_Avoidance.c **** 	if(obstacel.distance > CA_START) return; // not far away no CA
 1256              	 .loc 3 195 0
 1257 0034 2023     	 mov r3,#32
 1258 0036 FB18     	 add r3,r7,r3
 1259 0038 5B68     	 ldr r3,[r3,#4]
 1260 003a 181C     	 add r0,r3,#0
 1261 003c FE21     	 mov r1,#254
 1262 003e 8905     	 lsl r1,r1,#22
 1263 0040 FFF7FEFF 	 bl __aeabi_fcmpgt
 1264 0044 031E     	 sub r3,r0,#0
 1265 0046 00D0     	 beq .L75
 1266              	 .loc 3 195 0 is_stmt 0 discriminator 2
 1267 0048 8BE0     	 b .L59
 1268              	.L75:
 196:../Ultrasonic_Collision_Avoidance.c **** 
 197:../Ultrasonic_Collision_Avoidance.c **** 	float Trajctory_at_obstacel_abs = vector_projection_abs(Trajctory, obstacel.vector);
 1269              	 .loc 3 197 0 is_stmt 1
 1270 004a 494A     	 ldr r2,.L78
 1271 004c 2023     	 mov r3,#32
 1272 004e FB18     	 add r3,r7,r3
 1273 0050 0C33     	 add r3,r3,#12
 1274 0052 101C     	 mov r0,r2
 1275 0054 191C     	 mov r1,r3
 1276 0056 FFF7FEFF 	 bl vector_projection_abs
 1277 005a 031C     	 add r3,r0,#0
 1278 005c 7B60     	 str r3,[r7,#4]
 198:../Ultrasonic_Collision_Avoidance.c **** 	if(Trajctory_at_obstacel_abs < 0.05) return; // if trajcetor in diection of obstacel is smaller th
 1279              	 .loc 3 198 0
 1280 005e 7868     	 ldr r0,[r7,#4]
 1281 0060 FFF7FEFF 	 bl __aeabi_f2d
 1282 0064 031C     	 mov r3,r0
 1283 0066 0C1C     	 mov r4,r1
 1284 0068 181C     	 mov r0,r3
 1285 006a 211C     	 mov r1,r4
 1286 006c 414A     	 ldr r2,.L78+4
 1287 006e 424B     	 ldr r3,.L78+8
 1288 0070 FFF7FEFF 	 bl __aeabi_dcmplt
 1289 0074 031E     	 sub r3,r0,#0
 1290 0076 00D0     	 beq .L76
 1291              	 .loc 3 198 0 is_stmt 0 discriminator 3
 1292 0078 73E0     	 b .L59
 1293              	.L76:
 199:../Ultrasonic_Collision_Avoidance.c **** 
 200:../Ultrasonic_Collision_Avoidance.c **** 	if(obstacel.distance  < CA_STOP + aktive_addition){
 1294              	 .loc 3 200 0 is_stmt 1
 1295 007a 2023     	 mov r3,#32
 1296 007c FB18     	 add r3,r7,r3
 1297 007e 5B68     	 ldr r3,[r3,#4]
 1298 0080 181C     	 add r0,r3,#0
 1299 0082 FFF7FEFF 	 bl __aeabi_f2d
 1300 0086 051C     	 mov r5,r0
 1301 0088 0E1C     	 mov r6,r1
 1302 008a 3C4B     	 ldr r3,.L78+12
 1303 008c 1B68     	 ldr r3,[r3]
 1304 008e 181C     	 add r0,r3,#0
 1305 0090 FFF7FEFF 	 bl __aeabi_f2d
 1306 0094 031C     	 mov r3,r0
 1307 0096 0C1C     	 mov r4,r1
 1308 0098 181C     	 mov r0,r3
 1309 009a 211C     	 mov r1,r4
 1310 009c 354A     	 ldr r2,.L78+4
 1311 009e 384B     	 ldr r3,.L78+16
 1312 00a0 FFF7FEFF 	 bl __aeabi_dadd
 1313 00a4 031C     	 mov r3,r0
 1314 00a6 0C1C     	 mov r4,r1
 1315 00a8 281C     	 mov r0,r5
 1316 00aa 311C     	 mov r1,r6
 1317 00ac 1A1C     	 mov r2,r3
 1318 00ae 231C     	 mov r3,r4
 1319 00b0 FFF7FEFF 	 bl __aeabi_dcmplt
 1320 00b4 031E     	 sub r3,r0,#0
 1321 00b6 0AD0     	 beq .L77
 201:../Ultrasonic_Collision_Avoidance.c **** 						Speed_reduction_ratio = 0; // stop
 1322              	 .loc 3 201 0
 1323 00b8 324B     	 ldr r3,.L78+20
 1324 00ba 0022     	 mov r2,#0
 1325 00bc 1A60     	 str r2,[r3]
 202:../Ultrasonic_Collision_Avoidance.c **** 						set_CA_LED(obstacel.Sensor,1);
 1326              	 .loc 3 202 0
 1327 00be 2023     	 mov r3,#32
 1328 00c0 FB18     	 add r3,r7,r3
 1329 00c2 5B78     	 ldrb r3,[r3,#1]
 1330 00c4 181C     	 mov r0,r3
 1331 00c6 0121     	 mov r1,#1
 1332 00c8 FFF7FEFF 	 bl set_CA_LED
 203:../Ultrasonic_Collision_Avoidance.c **** 						return;
 1333              	 .loc 3 203 0
 1334 00cc 49E0     	 b .L59
 1335              	.L77:
 204:../Ultrasonic_Collision_Avoidance.c **** 	}
 205:../Ultrasonic_Collision_Avoidance.c **** 	else if(Trajctory_at_obstacel_abs > obstacel.distance  - CA_STOP){
 1336              	 .loc 3 205 0
 1337 00ce 7868     	 ldr r0,[r7,#4]
 1338 00d0 FFF7FEFF 	 bl __aeabi_f2d
 1339 00d4 051C     	 mov r5,r0
 1340 00d6 0E1C     	 mov r6,r1
 1341 00d8 2023     	 mov r3,#32
 1342 00da FB18     	 add r3,r7,r3
 1343 00dc 5B68     	 ldr r3,[r3,#4]
 1344 00de 181C     	 add r0,r3,#0
 1345 00e0 FFF7FEFF 	 bl __aeabi_f2d
 1346 00e4 031C     	 mov r3,r0
 1347 00e6 0C1C     	 mov r4,r1
 1348 00e8 181C     	 mov r0,r3
 1349 00ea 211C     	 mov r1,r4
 1350 00ec 214A     	 ldr r2,.L78+4
 1351 00ee 244B     	 ldr r3,.L78+16
 1352 00f0 FFF7FEFF 	 bl __aeabi_dsub
 1353 00f4 031C     	 mov r3,r0
 1354 00f6 0C1C     	 mov r4,r1
 1355 00f8 281C     	 mov r0,r5
 1356 00fa 311C     	 mov r1,r6
 1357 00fc 1A1C     	 mov r2,r3
 1358 00fe 231C     	 mov r3,r4
 1359 0100 FFF7FEFF 	 bl __aeabi_dcmpgt
 1360 0104 031E     	 sub r3,r0,#0
 1361 0106 2CD0     	 beq .L59
 206:../Ultrasonic_Collision_Avoidance.c **** 		   new_Speed_limit = obstacel.distance  - CA_STOP; // speed reduction
 1362              	 .loc 3 206 0
 1363 0108 2023     	 mov r3,#32
 1364 010a FB18     	 add r3,r7,r3
 1365 010c 5B68     	 ldr r3,[r3,#4]
 1366 010e 181C     	 add r0,r3,#0
 1367 0110 FFF7FEFF 	 bl __aeabi_f2d
 1368 0114 031C     	 mov r3,r0
 1369 0116 0C1C     	 mov r4,r1
 1370 0118 181C     	 mov r0,r3
 1371 011a 211C     	 mov r1,r4
 1372 011c 154A     	 ldr r2,.L78+4
 1373 011e 184B     	 ldr r3,.L78+16
 1374 0120 FFF7FEFF 	 bl __aeabi_dsub
 1375 0124 031C     	 mov r3,r0
 1376 0126 0C1C     	 mov r4,r1
 1377 0128 181C     	 mov r0,r3
 1378 012a 211C     	 mov r1,r4
 1379 012c FFF7FEFF 	 bl __aeabi_d2f
 1380 0130 021C     	 add r2,r0,#0
 1381 0132 154B     	 ldr r3,.L78+24
 1382 0134 1A60     	 str r2,[r3]
 207:../Ultrasonic_Collision_Avoidance.c **** 		if( Speed_limit > new_Speed_limit) {
 1383              	 .loc 3 207 0
 1384 0136 154B     	 ldr r3,.L78+28
 1385 0138 1A68     	 ldr r2,[r3]
 1386 013a 134B     	 ldr r3,.L78+24
 1387 013c 1B68     	 ldr r3,[r3]
 1388 013e 101C     	 add r0,r2,#0
 1389 0140 191C     	 add r1,r3,#0
 1390 0142 FFF7FEFF 	 bl __aeabi_fcmpgt
 1391 0146 031E     	 sub r3,r0,#0
 1392 0148 0BD0     	 beq .L59
 208:../Ultrasonic_Collision_Avoidance.c **** 			Speed_limit = new_Speed_limit;
 1393              	 .loc 3 208 0
 1394 014a 0F4B     	 ldr r3,.L78+24
 1395 014c 1A68     	 ldr r2,[r3]
 1396 014e 0F4B     	 ldr r3,.L78+28
 1397 0150 1A60     	 str r2,[r3]
 209:../Ultrasonic_Collision_Avoidance.c **** 			set_CA_LED(obstacel.Sensor,2); //led on
 1398              	 .loc 3 209 0
 1399 0152 2023     	 mov r3,#32
 1400 0154 FB18     	 add r3,r7,r3
 1401 0156 5B78     	 ldrb r3,[r3,#1]
 1402 0158 181C     	 mov r0,r3
 1403 015a 0221     	 mov r1,#2
 1404 015c FFF7FEFF 	 bl set_CA_LED
 210:../Ultrasonic_Collision_Avoidance.c **** 			return;
 1405              	 .loc 3 210 0
 1406 0160 C046     	 mov r8,r8
 1407              	.L59:
 211:../Ultrasonic_Collision_Avoidance.c **** 		}
 212:../Ultrasonic_Collision_Avoidance.c **** 	}
 213:../Ultrasonic_Collision_Avoidance.c **** }
 1408              	 .loc 3 213 0
 1409 0162 BD46     	 mov sp,r7
 1410 0164 03B0     	 add sp,sp,#12
 1411              	 
 1412 0166 F0BC     	 pop {r4,r5,r6,r7}
 1413 0168 08BC     	 pop {r3}
 1414 016a 04B0     	 add sp,sp,#16
 1415 016c 1847     	 bx r3
 1416              	.L79:
 1417 016e C046     	 .align 2
 1418              	.L78:
 1419 0170 00000000 	 .word Trajctory
 1420 0174 9A999999 	 .word -1717986918
 1421 0178 9999A93F 	 .word 1068079513
 1422 017c 00000000 	 .word aktive_addition
 1423 0180 9999C93F 	 .word 1070176665
 1424 0184 00000000 	 .word Speed_reduction_ratio
 1425 0188 00000000 	 .word new_Speed_limit
 1426 018c 00000000 	 .word Speed_limit
 1427              	 .cfi_endproc
 1428              	.LFE227:
 1430              	 .global toggel_ervy_x
 1431              	 .section .bss.toggel_ervy_x,"aw",%nobits
 1434              	toggel_ervy_x:
 1435 0000 00       	 .space 1
 1436              	 .section .text.set_CA_LED,"ax",%progbits
 1437              	 .align 2
 1438              	 .global set_CA_LED
 1439              	 .code 16
 1440              	 .thumb_func
 1442              	set_CA_LED:
 1443              	.LFB228:
 214:../Ultrasonic_Collision_Avoidance.c **** 
 215:../Ultrasonic_Collision_Avoidance.c **** uint8_t toggel_ervy_x = 0;
 216:../Ultrasonic_Collision_Avoidance.c **** 
 217:../Ultrasonic_Collision_Avoidance.c **** void set_CA_LED(uint8_t Sensor, uint8_t mode){
 1444              	 .loc 3 217 0
 1445              	 .cfi_startproc
 1446 0000 80B5     	 push {r7,lr}
 1447              	.LCFI31:
 1448              	 .cfi_def_cfa_offset 8
 1449              	 .cfi_offset 7,-8
 1450              	 .cfi_offset 14,-4
 1451 0002 82B0     	 sub sp,sp,#8
 1452              	.LCFI32:
 1453              	 .cfi_def_cfa_offset 16
 1454 0004 00AF     	 add r7,sp,#0
 1455              	.LCFI33:
 1456              	 .cfi_def_cfa_register 7
 1457 0006 021C     	 mov r2,r0
 1458 0008 FB1D     	 add r3,r7,#7
 1459 000a 1A70     	 strb r2,[r3]
 1460 000c BB1D     	 add r3,r7,#6
 1461 000e 0A1C     	 add r2,r1,#0
 1462 0010 1A70     	 strb r2,[r3]
 218:../Ultrasonic_Collision_Avoidance.c **** 	if(Sensor == 0)
 1463              	 .loc 3 218 0
 1464 0012 FB1D     	 add r3,r7,#7
 1465 0014 1B78     	 ldrb r3,[r3]
 1466 0016 002B     	 cmp r3,#0
 1467 0018 1ED1     	 bne .L81
 219:../Ultrasonic_Collision_Avoidance.c **** 		{
 220:../Ultrasonic_Collision_Avoidance.c **** 		if(mode == 0)DIGITAL_IO_SetOutputLow(&LED_CA_FRONT);
 1468              	 .loc 3 220 0
 1469 001a BB1D     	 add r3,r7,#6
 1470 001c 1B78     	 ldrb r3,[r3]
 1471 001e 002B     	 cmp r3,#0
 1472 0020 04D1     	 bne .L82
 1473              	 .loc 3 220 0 is_stmt 0 discriminator 1
 1474 0022 384B     	 ldr r3,.L93
 1475 0024 181C     	 mov r0,r3
 1476 0026 FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 1477 002a 5AE0     	 b .L85
 1478              	.L82:
 221:../Ultrasonic_Collision_Avoidance.c **** 		else if(mode == 1)DIGITAL_IO_SetOutputHigh(&LED_CA_FRONT);
 1479              	 .loc 3 221 0 is_stmt 1
 1480 002c BB1D     	 add r3,r7,#6
 1481 002e 1B78     	 ldrb r3,[r3]
 1482 0030 012B     	 cmp r3,#1
 1483 0032 04D1     	 bne .L84
 1484              	 .loc 3 221 0 is_stmt 0 discriminator 1
 1485 0034 334B     	 ldr r3,.L93
 1486 0036 181C     	 mov r0,r3
 1487 0038 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 1488 003c 51E0     	 b .L85
 1489              	.L84:
 222:../Ultrasonic_Collision_Avoidance.c **** 		else if(mode == 2 && toggel_ervy_x == 0) DIGITAL_IO_ToggleOutput(&LED_CA_FRONT);
 1490              	 .loc 3 222 0 is_stmt 1
 1491 003e BB1D     	 add r3,r7,#6
 1492 0040 1B78     	 ldrb r3,[r3]
 1493 0042 022B     	 cmp r3,#2
 1494 0044 4DD1     	 bne .L85
 1495              	 .loc 3 222 0 is_stmt 0 discriminator 1
 1496 0046 304B     	 ldr r3,.L93+4
 1497 0048 1B78     	 ldrb r3,[r3]
 1498 004a 002B     	 cmp r3,#0
 1499 004c 49D1     	 bne .L85
 1500              	 .loc 3 222 0 discriminator 2
 1501 004e 2D4B     	 ldr r3,.L93
 1502 0050 181C     	 mov r0,r3
 1503 0052 FFF7FEFF 	 bl DIGITAL_IO_ToggleOutput
 1504 0056 44E0     	 b .L85
 1505              	.L81:
 223:../Ultrasonic_Collision_Avoidance.c **** 		}
 224:../Ultrasonic_Collision_Avoidance.c **** 	else if (Sensor == 1){
 1506              	 .loc 3 224 0 is_stmt 1
 1507 0058 FB1D     	 add r3,r7,#7
 1508 005a 1B78     	 ldrb r3,[r3]
 1509 005c 012B     	 cmp r3,#1
 1510 005e 1ED1     	 bne .L86
 225:../Ultrasonic_Collision_Avoidance.c **** 		if(mode == 0)DIGITAL_IO_SetOutputLow(&LED_CA_LEFT);
 1511              	 .loc 3 225 0
 1512 0060 BB1D     	 add r3,r7,#6
 1513 0062 1B78     	 ldrb r3,[r3]
 1514 0064 002B     	 cmp r3,#0
 1515 0066 04D1     	 bne .L87
 1516              	 .loc 3 225 0 is_stmt 0 discriminator 1
 1517 0068 284B     	 ldr r3,.L93+8
 1518 006a 181C     	 mov r0,r3
 1519 006c FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 1520 0070 37E0     	 b .L85
 1521              	.L87:
 226:../Ultrasonic_Collision_Avoidance.c **** 		else if(mode == 1)DIGITAL_IO_SetOutputHigh(&LED_CA_LEFT);
 1522              	 .loc 3 226 0 is_stmt 1
 1523 0072 BB1D     	 add r3,r7,#6
 1524 0074 1B78     	 ldrb r3,[r3]
 1525 0076 012B     	 cmp r3,#1
 1526 0078 04D1     	 bne .L89
 1527              	 .loc 3 226 0 is_stmt 0 discriminator 1
 1528 007a 244B     	 ldr r3,.L93+8
 1529 007c 181C     	 mov r0,r3
 1530 007e FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 1531 0082 2EE0     	 b .L85
 1532              	.L89:
 227:../Ultrasonic_Collision_Avoidance.c **** 		else if(mode == 2 && toggel_ervy_x == 0) DIGITAL_IO_ToggleOutput(&LED_CA_LEFT);
 1533              	 .loc 3 227 0 is_stmt 1
 1534 0084 BB1D     	 add r3,r7,#6
 1535 0086 1B78     	 ldrb r3,[r3]
 1536 0088 022B     	 cmp r3,#2
 1537 008a 2AD1     	 bne .L85
 1538              	 .loc 3 227 0 is_stmt 0 discriminator 1
 1539 008c 1E4B     	 ldr r3,.L93+4
 1540 008e 1B78     	 ldrb r3,[r3]
 1541 0090 002B     	 cmp r3,#0
 1542 0092 26D1     	 bne .L85
 1543              	 .loc 3 227 0 discriminator 2
 1544 0094 1D4B     	 ldr r3,.L93+8
 1545 0096 181C     	 mov r0,r3
 1546 0098 FFF7FEFF 	 bl DIGITAL_IO_ToggleOutput
 1547 009c 21E0     	 b .L85
 1548              	.L86:
 228:../Ultrasonic_Collision_Avoidance.c **** 	}
 229:../Ultrasonic_Collision_Avoidance.c **** 	else if (Sensor == 2){
 1549              	 .loc 3 229 0 is_stmt 1
 1550 009e FB1D     	 add r3,r7,#7
 1551 00a0 1B78     	 ldrb r3,[r3]
 1552 00a2 022B     	 cmp r3,#2
 1553 00a4 1DD1     	 bne .L85
 230:../Ultrasonic_Collision_Avoidance.c **** 		if(mode == 0)DIGITAL_IO_SetOutputLow(&LED_CA_RIGHT);
 1554              	 .loc 3 230 0
 1555 00a6 BB1D     	 add r3,r7,#6
 1556 00a8 1B78     	 ldrb r3,[r3]
 1557 00aa 002B     	 cmp r3,#0
 1558 00ac 04D1     	 bne .L90
 1559              	 .loc 3 230 0 is_stmt 0 discriminator 1
 1560 00ae 184B     	 ldr r3,.L93+12
 1561 00b0 181C     	 mov r0,r3
 1562 00b2 FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 1563 00b6 14E0     	 b .L85
 1564              	.L90:
 231:../Ultrasonic_Collision_Avoidance.c **** 		else if(mode == 1)DIGITAL_IO_SetOutputHigh(&LED_CA_RIGHT);
 1565              	 .loc 3 231 0 is_stmt 1
 1566 00b8 BB1D     	 add r3,r7,#6
 1567 00ba 1B78     	 ldrb r3,[r3]
 1568 00bc 012B     	 cmp r3,#1
 1569 00be 04D1     	 bne .L91
 1570              	 .loc 3 231 0 is_stmt 0 discriminator 1
 1571 00c0 134B     	 ldr r3,.L93+12
 1572 00c2 181C     	 mov r0,r3
 1573 00c4 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 1574 00c8 0BE0     	 b .L85
 1575              	.L91:
 232:../Ultrasonic_Collision_Avoidance.c **** 		else if(mode == 2 && toggel_ervy_x == 0) DIGITAL_IO_ToggleOutput(&LED_CA_RIGHT);
 1576              	 .loc 3 232 0 is_stmt 1
 1577 00ca BB1D     	 add r3,r7,#6
 1578 00cc 1B78     	 ldrb r3,[r3]
 1579 00ce 022B     	 cmp r3,#2
 1580 00d0 07D1     	 bne .L85
 1581              	 .loc 3 232 0 is_stmt 0 discriminator 1
 1582 00d2 0D4B     	 ldr r3,.L93+4
 1583 00d4 1B78     	 ldrb r3,[r3]
 1584 00d6 002B     	 cmp r3,#0
 1585 00d8 03D1     	 bne .L85
 1586              	 .loc 3 232 0 discriminator 2
 1587 00da 0D4B     	 ldr r3,.L93+12
 1588 00dc 181C     	 mov r0,r3
 1589 00de FFF7FEFF 	 bl DIGITAL_IO_ToggleOutput
 1590              	.L85:
 233:../Ultrasonic_Collision_Avoidance.c **** 	}
 234:../Ultrasonic_Collision_Avoidance.c **** 
 235:../Ultrasonic_Collision_Avoidance.c **** 	toggel_ervy_x++;
 1591              	 .loc 3 235 0 is_stmt 1
 1592 00e2 094B     	 ldr r3,.L93+4
 1593 00e4 1B78     	 ldrb r3,[r3]
 1594 00e6 0133     	 add r3,r3,#1
 1595 00e8 DAB2     	 uxtb r2,r3
 1596 00ea 074B     	 ldr r3,.L93+4
 1597 00ec 1A70     	 strb r2,[r3]
 236:../Ultrasonic_Collision_Avoidance.c **** 	if(toggel_ervy_x > 8) toggel_ervy_x = 0;
 1598              	 .loc 3 236 0
 1599 00ee 064B     	 ldr r3,.L93+4
 1600 00f0 1B78     	 ldrb r3,[r3]
 1601 00f2 082B     	 cmp r3,#8
 1602 00f4 02D9     	 bls .L80
 1603              	 .loc 3 236 0 is_stmt 0 discriminator 1
 1604 00f6 044B     	 ldr r3,.L93+4
 1605 00f8 0022     	 mov r2,#0
 1606 00fa 1A70     	 strb r2,[r3]
 1607              	.L80:
 237:../Ultrasonic_Collision_Avoidance.c **** }
 1608              	 .loc 3 237 0 is_stmt 1
 1609 00fc BD46     	 mov sp,r7
 1610 00fe 02B0     	 add sp,sp,#8
 1611              	 
 1612 0100 80BD     	 pop {r7,pc}
 1613              	.L94:
 1614 0102 C046     	 .align 2
 1615              	.L93:
 1616 0104 00000000 	 .word LED_CA_FRONT
 1617 0108 00000000 	 .word toggel_ervy_x
 1618 010c 00000000 	 .word LED_CA_LEFT
 1619 0110 00000000 	 .word LED_CA_RIGHT
 1620              	 .cfi_endproc
 1621              	.LFE228:
 1623              	 .text
 1624              	.Letext0:
 1625              	 .file 4 "c:\\dave\\dave-ide-4.4.2-64bit\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1626              	 .file 5 "c:\\dave\\dave-ide-4.4.2-64bit\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1627              	 .file 6 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc/xmc1_gpio.h"
 1628              	 .file 7 "../Ultrasonic_Collision_Avoidance.h"
 1629              	 .file 8 "../Globals.h"
 1630              	 .file 9 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/CMSIS/Include/cmsis_gcc.h"
 1631              	 .file 10 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/CMSIS/Infineon/XMC1400_series/Include/system_XMC1400.h"
 1632              	 .file 11 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO/digital_io_extern.h"
 1633              	 .file 12 "../CAN.h"
DEFINED SYMBOLS
                            *ABS*:00000000 Ultrasonic_Collision_Avoidance.c
                            *COM*:00000001 RC_controll
    {standard input}:19     .text.XMC_GPIO_SetOutputHigh:00000000 $t
    {standard input}:23     .text.XMC_GPIO_SetOutputHigh:00000000 XMC_GPIO_SetOutputHigh
    {standard input}:59     .text.XMC_GPIO_SetOutputLow:00000000 $t
    {standard input}:63     .text.XMC_GPIO_SetOutputLow:00000000 XMC_GPIO_SetOutputLow
    {standard input}:99     .text.XMC_GPIO_ToggleOutput:00000000 $t
    {standard input}:103    .text.XMC_GPIO_ToggleOutput:00000000 XMC_GPIO_ToggleOutput
    {standard input}:137    .text.XMC_GPIO_ToggleOutput:00000020 $d
    {standard input}:142    .text.DIGITAL_IO_SetOutputHigh:00000000 $t
    {standard input}:146    .text.DIGITAL_IO_SetOutputHigh:00000000 DIGITAL_IO_SetOutputHigh
    {standard input}:180    .text.DIGITAL_IO_SetOutputLow:00000000 $t
    {standard input}:184    .text.DIGITAL_IO_SetOutputLow:00000000 DIGITAL_IO_SetOutputLow
    {standard input}:217    .text.DIGITAL_IO_ToggleOutput:00000000 $t
    {standard input}:221    .text.DIGITAL_IO_ToggleOutput:00000000 DIGITAL_IO_ToggleOutput
    {standard input}:257    .bss.obstructed_L:00000000 obstructed_L
    {standard input}:258    .bss.obstructed_L:00000000 $d
    {standard input}:263    .bss.obstructed_R:00000000 obstructed_R
    {standard input}:264    .bss.obstructed_R:00000000 $d
    {standard input}:270    .data.Ultra_m_C:00000000 Ultra_m_C
    {standard input}:267    .data.Ultra_m_C:00000000 $d
    {standard input}:277    .data.Ultra_m_L:00000000 Ultra_m_L
    {standard input}:274    .data.Ultra_m_L:00000000 $d
    {standard input}:284    .data.Ultra_m_R:00000000 Ultra_m_R
    {standard input}:281    .data.Ultra_m_R:00000000 $d
    {standard input}:291    .data.Ultrsonic_data_invaildcounter:00000000 Ultrsonic_data_invaildcounter
    {standard input}:288    .data.Ultrsonic_data_invaildcounter:00000000 $d
    {standard input}:300    .bss.Obstacel_valid:00000000 Obstacel_valid
    {standard input}:297    .bss.Obstacel_valid:00000000 $d
                            *COM*:00000014 Obstacel_F
                            *COM*:00000014 Obstacel_L
                            *COM*:00000014 Obstacel_R
    {standard input}:310    .data.Speed_reduction_ratio:00000000 Speed_reduction_ratio
    {standard input}:307    .data.Speed_reduction_ratio:00000000 $d
    {standard input}:317    .data.Speed_limit:00000000 Speed_limit
    {standard input}:314    .data.Speed_limit:00000000 $d
    {standard input}:324    .data.new_Speed_limit:00000000 new_Speed_limit
    {standard input}:321    .data.new_Speed_limit:00000000 $d
    {standard input}:331    .bss.aktive_addition:00000000 aktive_addition
    {standard input}:328    .bss.aktive_addition:00000000 $d
    {standard input}:338    .bss.speed_CA_fl:00000000 speed_CA_fl
    {standard input}:335    .bss.speed_CA_fl:00000000 $d
    {standard input}:345    .bss.speed_CA_fr:00000000 speed_CA_fr
    {standard input}:342    .bss.speed_CA_fr:00000000 $d
    {standard input}:352    .bss.speed_CA_rl:00000000 speed_CA_rl
    {standard input}:349    .bss.speed_CA_rl:00000000 $d
    {standard input}:359    .bss.speed_CA_rr:00000000 speed_CA_rr
    {standard input}:356    .bss.speed_CA_rr:00000000 $d
    {standard input}:365    .bss.init:00000000 init
    {standard input}:366    .bss.init:00000000 $d
    {standard input}:374    .text.Ultra_sonic_filter:00000000 $t
    {standard input}:379    .text.Ultra_sonic_filter:00000000 Ultra_sonic_filter
    {standard input}:887    .text.Ultrasoinc_Obstructet_Test:00000000 Ultrasoinc_Obstructet_Test
    {standard input}:863    .text.Ultra_sonic_filter:00000370 $d
    {standard input}:882    .text.Ultrasoinc_Obstructet_Test:00000000 $t
    {standard input}:951    .text.Ultrasoinc_Obstructet_Test:00000054 $d
    {standard input}:962    .text.Collision_voidance:00000000 $t
    {standard input}:967    .text.Collision_voidance:00000000 Collision_voidance
    {standard input}:1211   .text.Obstacel_CA_check:00000000 Obstacel_CA_check
    {standard input}:1181   .text.Collision_voidance:0000014c $d
    {standard input}:1206   .text.Obstacel_CA_check:00000000 $t
    {standard input}:1442   .text.set_CA_LED:00000000 set_CA_LED
    {standard input}:1419   .text.Obstacel_CA_check:00000170 $d
    {standard input}:1434   .bss.toggel_ervy_x:00000000 toggel_ervy_x
    {standard input}:1435   .bss.toggel_ervy_x:00000000 $d
    {standard input}:1437   .text.set_CA_LED:00000000 $t
    {standard input}:1616   .text.set_CA_LED:00000104 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__aeabi_i2f
__aeabi_fdiv
__aeabi_f2d
__aeabi_ddiv
__aeabi_dmul
__aeabi_d2f
Exp_moving_average
cos
sin
Steering_Angles
__aeabi_fcmpgt
__aeabi_fcmplt
within_MAX_MIN
__aeabi_fcmpeq
__aeabi_fsub
__aeabi_fmul
CAN_Ultrasonic_No_messasge_count
Speeds
Speeds_CA
__aeabi_dcmplt
__aeabi_dadd
__aeabi_dsub
__aeabi_dcmpgt
vector_projection_abs
Trajctory
LED_CA_FRONT
LED_CA_LEFT
LED_CA_RIGHT
