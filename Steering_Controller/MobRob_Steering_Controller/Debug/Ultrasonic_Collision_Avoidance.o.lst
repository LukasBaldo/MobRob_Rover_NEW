   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,6
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "Ultrasonic_Collision_Avoidance.c"
  14              	 .text
  15              	.Ltext0:
  16              	 .cfi_sections .debug_frame
  17              	 .comm RC_controll,1,1
  18              	 .section .text.XMC_GPIO_SetOutputHigh,"ax",%progbits
  19              	 .align 2
  20              	 .code 16
  21              	 .thumb_func
  23              	XMC_GPIO_SetOutputHigh:
  24              	.LFB122:
  25              	 .file 1 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc/xmc_gpio.h"
   1:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
   2:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @file xmc_gpio.h
   3:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @date 2015-06-20
   4:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   5:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @cond
   6:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *****************************************************************************
   7:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   9:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * All rights reserved.
  11:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  12:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  14:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Permission is hereby granted, free of charge, to any person or organization
  15:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * obtaining a copy of the software and accompanying documentation covered by
  16:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * do so, all subject to the following:
  20:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  21:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * The copyright notices in the Software and this entire statement, including
  22:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * the above license grant, this restriction and the following disclaimer,
  23:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * must be included in all copies of the Software, in whole or in part, and
  24:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * all derivative works of the Software, unless such copies or derivative
  25:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * works are solely in the form of machine-executable object code generated by
  26:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * a source language processor.
  27:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  28:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * DEALINGS IN THE SOFTWARE.
  35:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  36:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * To improve the quality of the software, users are encouraged to share
  37:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * at XMCSupport@infineon.com.
  39:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *****************************************************************************
  40:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  41:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Change History
  42:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * --------------
  43:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  44:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-02-20:
  45:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Initial draft<br>
  46:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Documentation improved <br>
  47:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  48:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-06-20:
  49:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  50:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  51:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @endcond
  52:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  53:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  54:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
  55:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #ifndef XMC_GPIO_H
  56:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_H
  57:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
  58:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  59:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * HEADER FILES
  60:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  61:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
  62:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc_common.h"
  63:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
  64:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  65:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup XMClib XMC Peripheral Library
  66:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @{
  67:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  68:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
  69:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  70:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup GPIO
  71:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @brief General Purpose Input Output (GPIO) driver for the XMC microcontroller family.
  72:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  73:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * GPIO driver provide a generic and very flexible software interface for all standard digital I/O 
  74:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Each port slice has individual interfaces for the operation as General Purpose I/O and it furthe
  75:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * connectivity to the on-chip periphery and the control for the pad characteristics.
  76:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  77:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * The driver is divided into Input and Output mode.
  78:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  79:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Input mode features:
  80:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Configuration structure XMC_GPIO_CONFIG_t and initialization function XMC_GPIO_Init()
  81:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of weak pull-up or pull-down device. Configuration structure XMC_GPIO_MO
  82:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
  83:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of input hysteresis. XMC_GPIO_SetInputHysteresis()
  84:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  85:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  86:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  87:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Output mode features:
  88:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of push pull/open drain and Alternate output. Configuration structure XM
  89:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
  90:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of pad driver strength. Configuration structure XMC_GPIO_OUTPUT_STRENGTH
  91:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  92:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  93:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of initial output level. Configuration structure XMC_GPIO_OUTPUT_LEVEL_t
  94:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  95:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *@{
  96:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  97:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
  98:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  99:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * MACROS
 100:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 101:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 102:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Pos PORT0_IOCR0_PC0_Pos
 103:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Msk PORT0_IOCR0_PC0_Msk
 104:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 105:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Size 				(8U)
 106:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 107:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 108:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_OUTPUT_LEVEL(level) ((level == XMC_GPIO_OUTPUT_LEVEL_LOW) || \
 109:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****                                             (level == XMC_GPIO_OUTPUT_LEVEL_HIGH))
 110:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 111:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_HWCTRL(hwctrl) ((hwctrl == XMC_GPIO_HWCTRL_DISABLED) || \
 112:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL1) || \
 113:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL2))
 114:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 115:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 116:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * ENUMS
 117:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 118:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 119:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 120:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 121:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines output level of a pin. Use type \a XMC_GPIO_OUTPUT_LEVEL_t for this enum.
 122:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 123:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_OUTPUT_LEVEL
 124:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** {
 125:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_LOW  = 0x10000U, /**<  Reset bit */
 126:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_HIGH = 0x1U, 	/**< Set bit  */
 127:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_OUTPUT_LEVEL_t;
 128:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 129:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 130:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines direct hardware control characteristics of the pin . Use type \a XMC_GPIO_HWCTRL_t for t
 131:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 132:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_HWCTRL
 133:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** {
 134:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_DISABLED     = 0x0U, /**<  Software control only */
 135:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL1  = 0x1U, /**<  HWI0/HWO0 control path can override the software confi
 136:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL2  = 0x2U  /**<  HWI1/HWO1 control path can override the software confi
 137:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_HWCTRL_t;
 138:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 139:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 140:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * DEVICE FAMILY EXTENSIONS
 141:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 142:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 143:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #if UC_FAMILY == XMC1
 144:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc1_gpio.h"
 145:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #elif UC_FAMILY == XMC4
 146:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc4_gpio.h"
 147:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #else
 148:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #error "xmc_gpio.h: family device not supported"
 149:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 150:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 151:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 152:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * API PROTOTYPES
 153:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 154:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 155:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #ifdef __cplusplus
 156:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** extern "C" {
 157:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 158:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 159:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 160:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 161:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	  Constant pointer pointing to GPIO port, to access port registers like Pn_OUT,Pn_O
 162:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	  Port pin number.
 163:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  config GPIO configuration data structure. Refer data structure @ref XMC_GPIO_CONFIG_t fo
 164:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 165:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 166:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 167:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 168:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
 169:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,hysteresis, push pull
 170:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for a selected \a po
 171:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \a config provides selected I/O settings. It configures hardware registers Pn_IOCR,Pn_OUT, Pn_OM
 172:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 173:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
 174:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,push pull /open drain
 175:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for selected \a port
 176:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * It configures hardware registers Pn_IOCR,Pn_OUT,Pn_OMR,Pn_PDISC and Pn_PDR.\n
 177:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 178:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 179:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 180:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 181:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 182:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 183:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * This API is called in definition of DAVE_init by code generation and therefore should not be exp
 184:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * for the normal operation. Use other APIs only after DAVE_init is called successfully (returns DA
 185:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 186:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 187:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 188:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 189:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 190:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_Init(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_CONFIG_t *const c
 191:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 192:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 193:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 194:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	Constant pointer pointing to GPIO port, to access hardware register Pn_IOCR.
 195:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 196:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  mode input / output functionality selection. Refer @ref XMC_GPIO_MODE_t for valid values
 197:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 198:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 199:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 200:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 201:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets digital input and output driver functionality and characteristics of a GPIO port pin. It co
 202:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * registers Pn_IOCR. \a mode is initially configured during initialization in XMC_GPIO_Init(). Cal
 203:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * the port direction functionality as needed later in the program.
 204:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 205:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 206:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 207:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 208:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 209:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 210:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_SetMode(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_MODE_t mode);
 211:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 212:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 213:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 214:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 215:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	 Constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 216:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	 Port pin number.
 217:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  level output level selection. Refer @ref XMC_GPIO_OUTPUT_LEVEL_t for valid values.
 218:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 219:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 220:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 221:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 222:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Set port pin output level to high or low.It configures hardware registers Pn_OMR.\a level is ini
 223:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * configured during initialization in XMC_GPIO_Init(). Call this API to alter output level as need
 224:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 225:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 226:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 227:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 228:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 229:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 230:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 231:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 232:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 233:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 234:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLevel(XMC_GPIO_PORT_t *const port, const uint8_t pin, const 
 235:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** {
 236:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 237:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid output level", XMC_GPIO_CHECK_OUTPUT_LEVEL(level));
 238:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 239:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)level << pin;
 240:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** }
 241:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 242:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 243:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 244:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 245:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 246:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 247:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 248:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 249:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 250:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *  Sets port pin output to high. It configures hardware registers Pn_OMR.
 251:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 252:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *  \par<b>Related APIs:</b><BR>
 253:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputLow()
 254:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 255:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 256:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().\n
 257:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 258:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 259:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 260:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 261:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputHigh(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 262:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** {
  26              	 .loc 1 262 0
  27              	 .cfi_startproc
  28 0000 80B5     	 push {r7,lr}
  29              	.LCFI0:
  30              	 .cfi_def_cfa_offset 8
  31              	 .cfi_offset 7,-8
  32              	 .cfi_offset 14,-4
  33 0002 82B0     	 sub sp,sp,#8
  34              	.LCFI1:
  35              	 .cfi_def_cfa_offset 16
  36 0004 00AF     	 add r7,sp,#0
  37              	.LCFI2:
  38              	 .cfi_def_cfa_register 7
  39 0006 7860     	 str r0,[r7,#4]
  40 0008 0A1C     	 mov r2,r1
  41 000a FB1C     	 add r3,r7,#3
  42 000c 1A70     	 strb r2,[r3]
 263:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputHigh: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 264:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 265:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)0x1U << pin;
  43              	 .loc 1 265 0
  44 000e FB1C     	 add r3,r7,#3
  45 0010 1B78     	 ldrb r3,[r3]
  46 0012 0122     	 mov r2,#1
  47 0014 9A40     	 lsl r2,r2,r3
  48 0016 7B68     	 ldr r3,[r7,#4]
  49 0018 5A60     	 str r2,[r3,#4]
 266:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** }
  50              	 .loc 1 266 0
  51 001a BD46     	 mov sp,r7
  52 001c 02B0     	 add sp,sp,#8
  53              	 
  54 001e 80BD     	 pop {r7,pc}
  55              	 .cfi_endproc
  56              	.LFE122:
  58              	 .section .text.XMC_GPIO_SetOutputLow,"ax",%progbits
  59              	 .align 2
  60              	 .code 16
  61              	 .thumb_func
  63              	XMC_GPIO_SetOutputLow:
  64              	.LFB123:
 267:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 268:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 269:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 270:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 271:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	port pin number.
 272:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 273:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return  None
 274:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 275:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Description:</b><br>
 276:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets port pin output to low. It configures hardware registers Pn_OMR.\n
 277:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 278:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>>
 279:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh()
 280:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 281:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Note:</b><br>
 282:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 283:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 284:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 285:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 286:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 287:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLow(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 288:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** {
  65              	 .loc 1 288 0
  66              	 .cfi_startproc
  67 0000 80B5     	 push {r7,lr}
  68              	.LCFI3:
  69              	 .cfi_def_cfa_offset 8
  70              	 .cfi_offset 7,-8
  71              	 .cfi_offset 14,-4
  72 0002 82B0     	 sub sp,sp,#8
  73              	.LCFI4:
  74              	 .cfi_def_cfa_offset 16
  75 0004 00AF     	 add r7,sp,#0
  76              	.LCFI5:
  77              	 .cfi_def_cfa_register 7
  78 0006 7860     	 str r0,[r7,#4]
  79 0008 0A1C     	 mov r2,r1
  80 000a FB1C     	 add r3,r7,#3
  81 000c 1A70     	 strb r2,[r3]
 289:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLow: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 290:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 291:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10000U << pin;
  82              	 .loc 1 291 0
  83 000e FB1C     	 add r3,r7,#3
  84 0010 1B78     	 ldrb r3,[r3]
  85 0012 8022     	 mov r2,#128
  86 0014 5202     	 lsl r2,r2,#9
  87 0016 9A40     	 lsl r2,r2,r3
  88 0018 7B68     	 ldr r3,[r7,#4]
  89 001a 5A60     	 str r2,[r3,#4]
 292:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** }
  90              	 .loc 1 292 0
  91 001c BD46     	 mov sp,r7
  92 001e 02B0     	 add sp,sp,#8
  93              	 
  94 0020 80BD     	 pop {r7,pc}
  95              	 .cfi_endproc
  96              	.LFE123:
  98 0022 C046     	 .section .text.XMC_GPIO_ToggleOutput,"ax",%progbits
  99              	 .align 2
 100              	 .code 16
 101              	 .thumb_func
 103              	XMC_GPIO_ToggleOutput:
 104              	.LFB124:
 293:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 294:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 295:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 296:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 297:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param pin  port pin number.
 298:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 299:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 300:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 301:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 302:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Configures port pin output to Toggle. It configures hardware registers Pn_OMR.
 303:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 304:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 305:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 306:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 307:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 308:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode(). Regis
 309:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  * and does not contain any flip-flop. A read action delivers the value of 0.
 310:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 311:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 312:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 313:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_ToggleOutput(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 314:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** {
 105              	 .loc 1 314 0
 106              	 .cfi_startproc
 107 0000 80B5     	 push {r7,lr}
 108              	.LCFI6:
 109              	 .cfi_def_cfa_offset 8
 110              	 .cfi_offset 7,-8
 111              	 .cfi_offset 14,-4
 112 0002 82B0     	 sub sp,sp,#8
 113              	.LCFI7:
 114              	 .cfi_def_cfa_offset 16
 115 0004 00AF     	 add r7,sp,#0
 116              	.LCFI8:
 117              	 .cfi_def_cfa_register 7
 118 0006 7860     	 str r0,[r7,#4]
 119 0008 0A1C     	 mov r2,r1
 120 000a FB1C     	 add r3,r7,#3
 121 000c 1A70     	 strb r2,[r3]
 315:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_ToggleOutput: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 316:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** 
 317:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10001U << pin;
 122              	 .loc 1 317 0
 123 000e FB1C     	 add r3,r7,#3
 124 0010 1B78     	 ldrb r3,[r3]
 125 0012 034A     	 ldr r2,.L4
 126 0014 9A40     	 lsl r2,r2,r3
 127 0016 7B68     	 ldr r3,[r7,#4]
 128 0018 5A60     	 str r2,[r3,#4]
 318:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc\xmc_gpio.h **** }
 129              	 .loc 1 318 0
 130 001a BD46     	 mov sp,r7
 131 001c 02B0     	 add sp,sp,#8
 132              	 
 133 001e 80BD     	 pop {r7,pc}
 134              	.L5:
 135              	 .align 2
 136              	.L4:
 137 0020 01000100 	 .word 65537
 138              	 .cfi_endproc
 139              	.LFE124:
 141              	 .section .text.DIGITAL_IO_SetOutputHigh,"ax",%progbits
 142              	 .align 2
 143              	 .code 16
 144              	 .thumb_func
 146              	DIGITAL_IO_SetOutputHigh:
 147              	.LFB195:
 148              	 .file 2 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO/digital_io.h"
   1:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /*
   2:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   3:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @file digital_io.h
   4:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @date 2021-01-08
   5:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   6:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * NOTE:
   7:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   8:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   9:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @cond
  10:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  11:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DIGITAL_IO v4.0.18 - The DIGITAL_IO APP is used to configure a port pin as digital Input/Output.
  12:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  13:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  14:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * All rights reserved.
  15:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  16:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  17:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * following conditions are met:
  18:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  19:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  20:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   disclaimer.
  21:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  22:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  23:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  24:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  25:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  26:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   products derived from this software without specific prior written permission.
  27:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  28:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  29:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  30:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  31:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  32:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  33:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  34:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  36:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  37:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * with Infineon Technologies AG (dave@infineon.com).
  38:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  39:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  40:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Change History
  41:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * --------------
  42:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  43:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-02-16
  44:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Initial version
  45:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  46:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-04-22
  47:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - XMC_ASSERT is added in static inline functions.<br>
  48:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  49:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-06-20
  50:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Version check added for XMCLib dependency.<br>
  51:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  52:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-12-22
  53:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Added hardware controlled IO feature.
  54:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2016-07-08:
  55:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Fixed incorrect case for an included header.<br>
  56:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2021-01-08:
  57:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Modified check for minimum XMCLib version
  58:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  59:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @endcond
  60:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  61:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  */
  62:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  63:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
  64:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * HEADER FILES
  65:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  66:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  67:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #ifndef DIGITAL_IO_H
  68:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #define DIGITAL_IO_H
  69:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  70:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #include "xmc_gpio.h"
  71:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #include "DAVE_Common.h"
  72:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #include "digital_io_conf.h"
  73:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  74:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
  75:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * MACROS
  76:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  77:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #define DIGITAL_IO_XMC_LIB_MAJOR_VERSION 2
  78:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #define DIGITAL_IO_XMC_LIB_MINOR_VERSION 0
  79:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #define DIGITAL_IO_XMC_LIB_PATCH_VERSION 0
  80:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  81:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #if !((XMC_LIB_MAJOR_VERSION > DIGITAL_IO_XMC_LIB_MAJOR_VERSION) ||\
  82:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****       ((XMC_LIB_MAJOR_VERSION == DIGITAL_IO_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION > DIGI
  83:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****       ((XMC_LIB_MAJOR_VERSION == DIGITAL_IO_XMC_LIB_MAJOR_VERSION) && (XMC_LIB_MINOR_VERSION == DIG
  84:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #error "DIGITAL_IO requires XMC Peripheral Library v2.0.0 or higher"
  85:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #endif
  86:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  87:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  /*************************************************************************************************
  88:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * ENUMS
  89:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  90:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  91:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
  92:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_enumerations
  93:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
  94:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
  95:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  96:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
  97:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Initialization status of DIGITAL_IO APP.
  98:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
  99:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** typedef enum DIGITAL_IO_STATUS
 100:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 101:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   DIGITAL_IO_STATUS_OK = 0U,/**< 0=Status OK */
 102:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   DIGITAL_IO_STATUS_FAILURE = 1U/**< 1=Status Failed */
 103:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** } DIGITAL_IO_STATUS_t;
 104:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 105:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 106:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @}
 107:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 108:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 109:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
 110:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DATA STRUCTURES
 111:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
 112:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 113:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_datastructures
 114:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
 115:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 116:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 117:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 118:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Initialization data structure of DIGITAL_IO APP
 119:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 120:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** typedef struct DIGITAL_IO
 121:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 122:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_PORT_t *const gpio_port;             /**< port number */
 123:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   const XMC_GPIO_CONFIG_t gpio_config;          /**< mode, initial output level and pad driver stre
 124:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   const uint8_t gpio_pin;                       /**< pin number */
 125:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   const XMC_GPIO_HWCTRL_t hwctrl;               /**< Hardware port control */
 126:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** } DIGITAL_IO_t;
 127:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 128:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 129:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 130:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @}
 131:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 132:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 133:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 134:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
 135:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  * API Prototypes
 136:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
 137:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 138:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 139:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #ifdef __cplusplus
 140:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** extern "C" {
 141:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** #endif
 142:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 143:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 144:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_apidoc
 145:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
 146:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 147:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 148:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 149:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 150:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 151:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Get DIGITAL_IO APP version
 152:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return DAVE_APP_VERSION_t APP version information (major, minor and patch number)
 153:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 154:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description: </b><br>
 155:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * The function can be used to check application software compatibility with a
 156:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * specific version of the APP.
 157:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 158:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 159:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 160:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 161:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include "DAVE.h"
 162:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 163:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 164:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 165:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t init_status;
 166:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_APP_VERSION_t version;
 167:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 168:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   // Initialize DIGITAL_IO APP:
 169:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   // DIGITAL_IO_Init() is called from within DAVE_Init().
 170:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   init_status = DAVE_Init();
 171:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(init_status == DAVE_STATUS_SUCCESS)
 172:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 173:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     version = DIGITAL_IO_GetAppVersion();
 174:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     if (version.major != 4U) {
 175:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // Probably, not the right version.
 176:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 177:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 178:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 179:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // More code here
 180:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1) {
 181:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 182:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 183:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     return (1);
 184:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  }
 185:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @endcode<BR>
 186:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 187:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 188:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** DAVE_APP_VERSION_t DIGITAL_IO_GetAppVersion(void);
 189:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 190:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 191:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 192:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to initialize the port pin as per UI settings.
 193:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 194:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return DIGITAL_IO_STATUS_t DIGITAL_IO APP status. Refer @ref DIGITAL_IO_STATUS_t structure for d
 195:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 196:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 197:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function initializes GPIO port registers IOCR,PDISC,OMR,PDR/PHCR to configure pin direction,
 198:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * and pad driver strength/hysteresis.
 199:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 200:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 201:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * None
 202:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 203:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 204:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 205:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include "DAVE.h" //Declarations from DAVE Code Generation (includes SFR declaration)
 206:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 207:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 208:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 209:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 210:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 211:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 212:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 213:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 214:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 215:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 216:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 217:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 218:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1U)
 219:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 220:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 221:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 222:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 223:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 224:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 225:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 226:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return 1U;
 227:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  }
 228:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 229:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 230:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 231:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** DIGITAL_IO_STATUS_t DIGITAL_IO_Init(const DIGITAL_IO_t *const handler);
 232:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 233:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 234:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 235:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to set port pin high.
 236:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 237:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return None
 238:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 239:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 240:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to make port pin to high level
 241:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 242:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 243:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  DIGITAL_IO_SetOutputLow()
 244:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 245:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 246:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 247:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include "DAVE.h" //Declarations from DAVE Code Generation (includes SFR declaration)
 248:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 249:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 250:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 251:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 252:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 253:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 254:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 255:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 256:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 257:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 258:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 259:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 260:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1U)
 261:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 262:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 263:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 264:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 265:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DIGITAL_IO_SetOutputHigh(&DIGITAL_IO_0);
 266:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 267:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 268:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // Add application code here
 269:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 270:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 271:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 272:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 273:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 274:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 275:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 276:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_SetOutputHigh(const DIGITAL_IO_t *const handler)
 277:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 149              	 .loc 2 277 0
 150              	 .cfi_startproc
 151 0000 80B5     	 push {r7,lr}
 152              	.LCFI9:
 153              	 .cfi_def_cfa_offset 8
 154              	 .cfi_offset 7,-8
 155              	 .cfi_offset 14,-4
 156 0002 82B0     	 sub sp,sp,#8
 157              	.LCFI10:
 158              	 .cfi_def_cfa_offset 16
 159 0004 00AF     	 add r7,sp,#0
 160              	.LCFI11:
 161              	 .cfi_def_cfa_register 7
 162 0006 7860     	 str r0,[r7,#4]
 278:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_SetOutputHigh: handler null pointer", handler != NULL);
 279:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_SetOutputHigh(handler->gpio_port, handler->gpio_pin);
 163              	 .loc 2 279 0
 164 0008 7B68     	 ldr r3,[r7,#4]
 165 000a 1A68     	 ldr r2,[r3]
 166 000c 7B68     	 ldr r3,[r7,#4]
 167 000e 1B7B     	 ldrb r3,[r3,#12]
 168 0010 101C     	 mov r0,r2
 169 0012 191C     	 mov r1,r3
 170 0014 FFF7FEFF 	 bl XMC_GPIO_SetOutputHigh
 280:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 171              	 .loc 2 280 0
 172 0018 BD46     	 mov sp,r7
 173 001a 02B0     	 add sp,sp,#8
 174              	 
 175 001c 80BD     	 pop {r7,pc}
 176              	 .cfi_endproc
 177              	.LFE195:
 179 001e C046     	 .section .text.DIGITAL_IO_SetOutputLow,"ax",%progbits
 180              	 .align 2
 181              	 .code 16
 182              	 .thumb_func
 184              	DIGITAL_IO_SetOutputLow:
 185              	.LFB196:
 281:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 282:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 283:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to reset port pin.
 284:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 285:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return None
 286:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 287:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 288:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to make port pin to low level.
 289:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 290:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 291:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * DIGITAL_IO_SetOutputHigh()
 292:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 293:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 294:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 295:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  #include "DAVE.h" //Declarations from DAVE Code Generation (includes SFR declaration)
 296:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 297:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  int main(void)
 298:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  {
 299:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    DAVE_STATUS_t status;
 300:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_I
 301:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    if(status == DAVE_STATUS_SUCCESS)
 302:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 303:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG("DAVE Apps initialization success\n");
 304:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 305:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    else
 306:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 307:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 308:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *      while(1U)
 309:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *      {
 310:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *      }
 311:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 312:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    //Placeholder for user application code. The while loop below can be replaced with user applic
 313:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    DIGITAL_IO_SetOutputLow(&DIGITAL_IO_0);
 314:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    while(1U)
 315:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 316:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *      // Add application code here
 317:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 318:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 319:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 320:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 321:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 322:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 323:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 324:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_SetOutputLow(const DIGITAL_IO_t *const handler)
 325:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 186              	 .loc 2 325 0
 187              	 .cfi_startproc
 188 0000 80B5     	 push {r7,lr}
 189              	.LCFI12:
 190              	 .cfi_def_cfa_offset 8
 191              	 .cfi_offset 7,-8
 192              	 .cfi_offset 14,-4
 193 0002 82B0     	 sub sp,sp,#8
 194              	.LCFI13:
 195              	 .cfi_def_cfa_offset 16
 196 0004 00AF     	 add r7,sp,#0
 197              	.LCFI14:
 198              	 .cfi_def_cfa_register 7
 199 0006 7860     	 str r0,[r7,#4]
 326:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_SetOutputLow: handler null pointer", handler != NULL);
 327:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_SetOutputLow(handler->gpio_port,handler->gpio_pin);
 200              	 .loc 2 327 0
 201 0008 7B68     	 ldr r3,[r7,#4]
 202 000a 1A68     	 ldr r2,[r3]
 203 000c 7B68     	 ldr r3,[r7,#4]
 204 000e 1B7B     	 ldrb r3,[r3,#12]
 205 0010 101C     	 mov r0,r2
 206 0012 191C     	 mov r1,r3
 207 0014 FFF7FEFF 	 bl XMC_GPIO_SetOutputLow
 328:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 208              	 .loc 2 328 0
 209 0018 BD46     	 mov sp,r7
 210 001a 02B0     	 add sp,sp,#8
 211              	 
 212 001c 80BD     	 pop {r7,pc}
 213              	 .cfi_endproc
 214              	.LFE196:
 216 001e C046     	 .section .text.DIGITAL_IO_ToggleOutput,"ax",%progbits
 217              	 .align 2
 218              	 .code 16
 219              	 .thumb_func
 221              	DIGITAL_IO_ToggleOutput:
 222              	.LFB197:
 329:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 330:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 331:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to Toggle port pin.
 332:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 333:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return None
 334:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 335:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 336:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to toggle port pin.
 337:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 338:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 339:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * DIGITAL_IO_SetOutputLow(), DIGITAL_IO_SetOutputHigh()
 340:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 341:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 342:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 343:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 344:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include "DAVE.h" //Declarations from DAVE Code Generation (includes SFR declaration)
 345:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 346:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 347:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 348:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 349:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   uint32_t delay_count;;
 350:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 351:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 352:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 353:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 354:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 355:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 356:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 357:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 358:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *      while(1U)
 359:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *      {
 360:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *      }
 361:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 362:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 363:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 364:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 365:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *      DIGITAL_IO_ToggleOutput(&DIGITAL_IO_0); //toggles : 1 -> 0 (if initial output level is logic
 366:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *      //Add application code here
 367:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *      for(delay_count = 0;delay_count<0xfffff;delay_count++);
 368:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *      DIGITAL_IO_ToggleOutput(&DIGITAL_IO_0); //toggles : 0 -> 1
 369:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *      //Add application code here
 370:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *      for(delay_count = 0;delay_count<0xfffff;delay_count++);
 371:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 372:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 373:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 374:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 375:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 376:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 377:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_ToggleOutput(const DIGITAL_IO_t *const handler)
 378:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 223              	 .loc 2 378 0
 224              	 .cfi_startproc
 225 0000 80B5     	 push {r7,lr}
 226              	.LCFI15:
 227              	 .cfi_def_cfa_offset 8
 228              	 .cfi_offset 7,-8
 229              	 .cfi_offset 14,-4
 230 0002 82B0     	 sub sp,sp,#8
 231              	.LCFI16:
 232              	 .cfi_def_cfa_offset 16
 233 0004 00AF     	 add r7,sp,#0
 234              	.LCFI17:
 235              	 .cfi_def_cfa_register 7
 236 0006 7860     	 str r0,[r7,#4]
 379:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_ToggleOutput: handler null pointer", handler != NULL);
 380:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_ToggleOutput(handler->gpio_port, handler->gpio_pin);
 237              	 .loc 2 380 0
 238 0008 7B68     	 ldr r3,[r7,#4]
 239 000a 1A68     	 ldr r2,[r3]
 240 000c 7B68     	 ldr r3,[r7,#4]
 241 000e 1B7B     	 ldrb r3,[r3,#12]
 242 0010 101C     	 mov r0,r2
 243 0012 191C     	 mov r1,r3
 244 0014 FFF7FEFF 	 bl XMC_GPIO_ToggleOutput
 381:C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 245              	 .loc 2 381 0
 246 0018 BD46     	 mov sp,r7
 247 001a 02B0     	 add sp,sp,#8
 248              	 
 249 001c 80BD     	 pop {r7,pc}
 250              	 .cfi_endproc
 251              	.LFE197:
 253              	 .global obstructed_L
 254 001e C046     	 .section .bss.obstructed_L,"aw",%nobits
 257              	obstructed_L:
 258 0000 00       	 .space 1
 259              	 .global obstructed_R
 260              	 .section .bss.obstructed_R,"aw",%nobits
 263              	obstructed_R:
 264 0000 00       	 .space 1
 265              	 .global Ultra_m_C
 266              	 .section .data.Ultra_m_C,"aw",%progbits
 267              	 .align 2
 270              	Ultra_m_C:
 271 0000 00008040 	 .word 1082130432
 272              	 .global Ultra_m_L
 273              	 .section .data.Ultra_m_L,"aw",%progbits
 274              	 .align 2
 277              	Ultra_m_L:
 278 0000 00008040 	 .word 1082130432
 279              	 .global Ultra_m_R
 280              	 .section .data.Ultra_m_R,"aw",%progbits
 281              	 .align 2
 284              	Ultra_m_R:
 285 0000 00008040 	 .word 1082130432
 286              	 .global Ultrsonic_data_invaildcounter
 287              	 .section .data.Ultrsonic_data_invaildcounter,"aw",%progbits
 288              	 .align 2
 291              	Ultrsonic_data_invaildcounter:
 292 0000 14       	 .byte 20
 293 0001 14       	 .byte 20
 294 0002 14       	 .byte 20
 295              	 .global Obstacel_valid
 296 0003 00       	 .section .bss.Obstacel_valid,"aw",%nobits
 297              	 .align 2
 300              	Obstacel_valid:
 301 0000 000000   	 .space 3
 302              	 .comm Obstacel_F,12,4
 303              	 .comm Obstacel_L,12,4
 304              	 .comm Obstacel_R,12,4
 305              	 .global Speed_reduction_ratio
 306 0003 00       	 .section .data.Speed_reduction_ratio,"aw",%progbits
 307              	 .align 2
 310              	Speed_reduction_ratio:
 311 0000 0000803F 	 .word 1065353216
 312              	 .global Speed_limit
 313              	 .section .data.Speed_limit,"aw",%progbits
 314              	 .align 2
 317              	Speed_limit:
 318 0000 0000803F 	 .word 1065353216
 319              	 .global new_Speed_limit
 320              	 .section .data.new_Speed_limit,"aw",%progbits
 321              	 .align 2
 324              	new_Speed_limit:
 325 0000 0000803F 	 .word 1065353216
 326              	 .global aktive_addition
 327              	 .section .bss.aktive_addition,"aw",%nobits
 328              	 .align 2
 331              	aktive_addition:
 332 0000 00000000 	 .space 4
 333              	 .global speed_CA_fl
 334              	 .section .bss.speed_CA_fl,"aw",%nobits
 335              	 .align 2
 338              	speed_CA_fl:
 339 0000 00000000 	 .space 4
 340              	 .global speed_CA_fr
 341              	 .section .bss.speed_CA_fr,"aw",%nobits
 342              	 .align 2
 345              	speed_CA_fr:
 346 0000 00000000 	 .space 4
 347              	 .global speed_CA_rl
 348              	 .section .bss.speed_CA_rl,"aw",%nobits
 349              	 .align 2
 352              	speed_CA_rl:
 353 0000 00000000 	 .space 4
 354              	 .global speed_CA_rr
 355              	 .section .bss.speed_CA_rr,"aw",%nobits
 356              	 .align 2
 359              	speed_CA_rr:
 360 0000 00000000 	 .space 4
 361              	 .global init
 362              	 .section .bss.init,"aw",%nobits
 365              	init:
 366 0000 00       	 .space 1
 367              	 .global __aeabi_i2f
 368              	 .global __aeabi_fdiv
 369              	 .section .text.Ultra_sonic_filter,"ax",%progbits
 370              	 .align 2
 371              	 .global Ultra_sonic_filter
 372              	 .code 16
 373              	 .thumb_func
 375              	Ultra_sonic_filter:
 376              	.LFB224:
 377              	 .file 3 "../Ultrasonic_Collision_Avoidance.c"
   1:../Ultrasonic_Collision_Avoidance.c **** /*
   2:../Ultrasonic_Collision_Avoidance.c ****  * Ultrasonic_Collision_Avoidance.c
   3:../Ultrasonic_Collision_Avoidance.c ****  *
   4:../Ultrasonic_Collision_Avoidance.c ****  *  Created on: 1 Jul 2022
   5:../Ultrasonic_Collision_Avoidance.c ****  *      Author: lukas
   6:../Ultrasonic_Collision_Avoidance.c ****  */
   7:../Ultrasonic_Collision_Avoidance.c **** #include "Ultrasonic_Collision_Avoidance.h"
   8:../Ultrasonic_Collision_Avoidance.c **** #include<stdio.h>
   9:../Ultrasonic_Collision_Avoidance.c **** 
  10:../Ultrasonic_Collision_Avoidance.c **** // filtering
  11:../Ultrasonic_Collision_Avoidance.c **** //float ALPHA_ULTARSONIC = 0.3; // giltering prameter for the Exponential moving average
  12:../Ultrasonic_Collision_Avoidance.c **** #define POS_OBSTRUCTED_ANGLE_MIN 50
  13:../Ultrasonic_Collision_Avoidance.c **** #define POS_OBSTRUCTED_ANGLE_MAX 210
  14:../Ultrasonic_Collision_Avoidance.c **** #define NEG_OBSTRUCTED_ANGLE_MIN -150
  15:../Ultrasonic_Collision_Avoidance.c **** #define NEG_OBSTRUCTED_ANGLE_MAX -310
  16:../Ultrasonic_Collision_Avoidance.c **** uint8_t obstructed_L = 0, obstructed_R = 0;
  17:../Ultrasonic_Collision_Avoidance.c **** 
  18:../Ultrasonic_Collision_Avoidance.c **** float Ultra_m_C = 4, Ultra_m_L = 4, Ultra_m_R = 4;
  19:../Ultrasonic_Collision_Avoidance.c **** 
  20:../Ultrasonic_Collision_Avoidance.c **** 
  21:../Ultrasonic_Collision_Avoidance.c **** // collison avdoidance
  22:../Ultrasonic_Collision_Avoidance.c **** #define ULRTA_NUM_NO_DATA_INVALID 20
  23:../Ultrasonic_Collision_Avoidance.c **** uint8_t Ultrsonic_data_invaildcounter[3] = {ULRTA_NUM_NO_DATA_INVALID, ULRTA_NUM_NO_DATA_INVALID, U
  24:../Ultrasonic_Collision_Avoidance.c **** 
  25:../Ultrasonic_Collision_Avoidance.c **** uint8_t Obstacel_valid[3] = {0, 0, 0};
  26:../Ultrasonic_Collision_Avoidance.c **** 
  27:../Ultrasonic_Collision_Avoidance.c **** #define CA_START 1
  28:../Ultrasonic_Collision_Avoidance.c **** #define CA_STOP 0.2
  29:../Ultrasonic_Collision_Avoidance.c **** #define CA_ANGLE 15
  30:../Ultrasonic_Collision_Avoidance.c **** 
  31:../Ultrasonic_Collision_Avoidance.c **** Obstacel Obstacel_F;
  32:../Ultrasonic_Collision_Avoidance.c **** Obstacel Obstacel_L;
  33:../Ultrasonic_Collision_Avoidance.c **** Obstacel Obstacel_R;
  34:../Ultrasonic_Collision_Avoidance.c **** 
  35:../Ultrasonic_Collision_Avoidance.c **** float Speed_reduction_ratio = 1;
  36:../Ultrasonic_Collision_Avoidance.c **** float Speed_limit = MAX_Speed;
  37:../Ultrasonic_Collision_Avoidance.c **** float new_Speed_limit = MAX_Speed;
  38:../Ultrasonic_Collision_Avoidance.c **** float aktive_addition = 0;
  39:../Ultrasonic_Collision_Avoidance.c **** 
  40:../Ultrasonic_Collision_Avoidance.c **** float speed_CA_fl = 0;
  41:../Ultrasonic_Collision_Avoidance.c **** float speed_CA_fr = 0;
  42:../Ultrasonic_Collision_Avoidance.c **** float speed_CA_rl = 0;
  43:../Ultrasonic_Collision_Avoidance.c **** float speed_CA_rr = 0;
  44:../Ultrasonic_Collision_Avoidance.c **** 
  45:../Ultrasonic_Collision_Avoidance.c **** uint8_t init = 0;
  46:../Ultrasonic_Collision_Avoidance.c **** 
  47:../Ultrasonic_Collision_Avoidance.c **** void Ultra_sonic_filter(int16_t Ultrasonic_cm_C_clc, int16_t Ultrasonic_cm_L_clc, int16_t Ultrasoni
 378              	 .loc 3 47 0
 379              	 .cfi_startproc
 380 0000 90B5     	 push {r4,r7,lr}
 381              	.LCFI18:
 382              	 .cfi_def_cfa_offset 12
 383              	 .cfi_offset 4,-12
 384              	 .cfi_offset 7,-8
 385              	 .cfi_offset 14,-4
 386 0002 87B0     	 sub sp,sp,#28
 387              	.LCFI19:
 388              	 .cfi_def_cfa_offset 40
 389 0004 00AF     	 add r7,sp,#0
 390              	.LCFI20:
 391              	 .cfi_def_cfa_register 7
 392 0006 041C     	 mov r4,r0
 393 0008 081C     	 mov r0,r1
 394 000a 111C     	 mov r1,r2
 395 000c 7B60     	 str r3,[r7,#4]
 396 000e 0E23     	 mov r3,#14
 397 0010 FB18     	 add r3,r7,r3
 398 0012 221C     	 add r2,r4,#0
 399 0014 1A80     	 strh r2,[r3]
 400 0016 0C23     	 mov r3,#12
 401 0018 FB18     	 add r3,r7,r3
 402 001a 021C     	 add r2,r0,#0
 403 001c 1A80     	 strh r2,[r3]
 404 001e 0A23     	 mov r3,#10
 405 0020 FB18     	 add r3,r7,r3
 406 0022 0A1C     	 add r2,r1,#0
 407 0024 1A80     	 strh r2,[r3]
  48:../Ultrasonic_Collision_Avoidance.c **** 
  49:../Ultrasonic_Collision_Avoidance.c **** 	if(Ultrasonic_cm_C_clc != 0){
 408              	 .loc 3 49 0
 409 0026 0E23     	 mov r3,#14
 410 0028 FB18     	 add r3,r7,r3
 411 002a 0022     	 mov r2,#0
 412 002c 9B5E     	 ldrsh r3,[r3,r2]
 413 002e 002B     	 cmp r3,#0
 414 0030 1CD0     	 beq .L10
  50:../Ultrasonic_Collision_Avoidance.c **** 		Ultrsonic_data_invaildcounter[0] = 0;
 415              	 .loc 3 50 0
 416 0032 754B     	 ldr r3,.L27
 417 0034 0022     	 mov r2,#0
 418 0036 1A70     	 strb r2,[r3]
  51:../Ultrasonic_Collision_Avoidance.c **** 		Ultra_m_C = Exp_moving_average((float)Ultrasonic_cm_C_clc / 100 , Ultra_m_C, ALPHA_ULTARSONIC);
 419              	 .loc 3 51 0
 420 0038 0E23     	 mov r3,#14
 421 003a FB18     	 add r3,r7,r3
 422 003c 0022     	 mov r2,#0
 423 003e 9B5E     	 ldrsh r3,[r3,r2]
 424 0040 181C     	 mov r0,r3
 425 0042 FFF7FEFF 	 bl __aeabi_i2f
 426 0046 031C     	 add r3,r0,#0
 427 0048 181C     	 add r0,r3,#0
 428 004a 7049     	 ldr r1,.L27+4
 429 004c FFF7FEFF 	 bl __aeabi_fdiv
 430 0050 031C     	 add r3,r0,#0
 431 0052 191C     	 add r1,r3,#0
 432 0054 6E4B     	 ldr r3,.L27+8
 433 0056 1A68     	 ldr r2,[r3]
 434 0058 7B68     	 ldr r3,[r7,#4]
 435 005a 081C     	 add r0,r1,#0
 436 005c 111C     	 add r1,r2,#0
 437 005e 1A1C     	 add r2,r3,#0
 438 0060 FFF7FEFF 	 bl Exp_moving_average
 439 0064 021C     	 add r2,r0,#0
 440 0066 6A4B     	 ldr r3,.L27+8
 441 0068 1A60     	 str r2,[r3]
 442 006a 05E0     	 b .L11
 443              	.L10:
  52:../Ultrasonic_Collision_Avoidance.c **** 	}
  53:../Ultrasonic_Collision_Avoidance.c **** 	else Ultrsonic_data_invaildcounter[0]++;
 444              	 .loc 3 53 0
 445 006c 664B     	 ldr r3,.L27
 446 006e 1B78     	 ldrb r3,[r3]
 447 0070 0133     	 add r3,r3,#1
 448 0072 DAB2     	 uxtb r2,r3
 449 0074 644B     	 ldr r3,.L27
 450 0076 1A70     	 strb r2,[r3]
 451              	.L11:
  54:../Ultrasonic_Collision_Avoidance.c **** 
  55:../Ultrasonic_Collision_Avoidance.c **** 	if(Ultrasonic_cm_L_clc != 0){
 452              	 .loc 3 55 0
 453 0078 0C23     	 mov r3,#12
 454 007a FB18     	 add r3,r7,r3
 455 007c 0022     	 mov r2,#0
 456 007e 9B5E     	 ldrsh r3,[r3,r2]
 457 0080 002B     	 cmp r3,#0
 458 0082 2CD0     	 beq .L12
  56:../Ultrasonic_Collision_Avoidance.c **** 		obstructed_L = Ultrasoinc_Obstructet_Test(-Steering_Angles[0]);
 459              	 .loc 3 56 0
 460 0084 634B     	 ldr r3,.L27+12
 461 0086 1B68     	 ldr r3,[r3]
 462 0088 8022     	 mov r2,#128
 463 008a 1206     	 lsl r2,r2,#24
 464 008c 5340     	 eor r3,r2
 465 008e 181C     	 add r0,r3,#0
 466 0090 FFF7FEFF 	 bl Ultrasoinc_Obstructet_Test
 467 0094 031C     	 mov r3,r0
 468 0096 1A1C     	 mov r2,r3
 469 0098 5F4B     	 ldr r3,.L27+16
 470 009a 1A70     	 strb r2,[r3]
  57:../Ultrasonic_Collision_Avoidance.c **** 		if(obstructed_L == 0) {
 471              	 .loc 3 57 0
 472 009c 5E4B     	 ldr r3,.L27+16
 473 009e 1B78     	 ldrb r3,[r3]
 474 00a0 002B     	 cmp r3,#0
 475 00a2 22D1     	 bne .L14
  58:../Ultrasonic_Collision_Avoidance.c **** 			Ultrsonic_data_invaildcounter[1] = 0;
 476              	 .loc 3 58 0
 477 00a4 584B     	 ldr r3,.L27
 478 00a6 0022     	 mov r2,#0
 479 00a8 5A70     	 strb r2,[r3,#1]
  59:../Ultrasonic_Collision_Avoidance.c **** 			Ultra_m_L = Exp_moving_average((float)Ultrasonic_cm_L_clc / 100 , Ultra_m_L, ALPHA_ULTARSONIC);
 480              	 .loc 3 59 0
 481 00aa 0C23     	 mov r3,#12
 482 00ac FB18     	 add r3,r7,r3
 483 00ae 0022     	 mov r2,#0
 484 00b0 9B5E     	 ldrsh r3,[r3,r2]
 485 00b2 181C     	 mov r0,r3
 486 00b4 FFF7FEFF 	 bl __aeabi_i2f
 487 00b8 031C     	 add r3,r0,#0
 488 00ba 181C     	 add r0,r3,#0
 489 00bc 5349     	 ldr r1,.L27+4
 490 00be FFF7FEFF 	 bl __aeabi_fdiv
 491 00c2 031C     	 add r3,r0,#0
 492 00c4 191C     	 add r1,r3,#0
 493 00c6 554B     	 ldr r3,.L27+20
 494 00c8 1A68     	 ldr r2,[r3]
 495 00ca 7B68     	 ldr r3,[r7,#4]
 496 00cc 081C     	 add r0,r1,#0
 497 00ce 111C     	 add r1,r2,#0
 498 00d0 1A1C     	 add r2,r3,#0
 499 00d2 FFF7FEFF 	 bl Exp_moving_average
 500 00d6 021C     	 add r2,r0,#0
 501 00d8 504B     	 ldr r3,.L27+20
 502 00da 1A60     	 str r2,[r3]
 503 00dc 05E0     	 b .L14
 504              	.L12:
  60:../Ultrasonic_Collision_Avoidance.c **** 		}
  61:../Ultrasonic_Collision_Avoidance.c **** 	}
  62:../Ultrasonic_Collision_Avoidance.c **** 	else Ultrsonic_data_invaildcounter[1]++;
 505              	 .loc 3 62 0
 506 00de 4A4B     	 ldr r3,.L27
 507 00e0 5B78     	 ldrb r3,[r3,#1]
 508 00e2 0133     	 add r3,r3,#1
 509 00e4 DAB2     	 uxtb r2,r3
 510 00e6 484B     	 ldr r3,.L27
 511 00e8 5A70     	 strb r2,[r3,#1]
 512              	.L14:
  63:../Ultrasonic_Collision_Avoidance.c **** 
  64:../Ultrasonic_Collision_Avoidance.c **** 	if(Ultrasonic_cm_R_clc != 0){
 513              	 .loc 3 64 0
 514 00ea 0A23     	 mov r3,#10
 515 00ec FB18     	 add r3,r7,r3
 516 00ee 0022     	 mov r2,#0
 517 00f0 9B5E     	 ldrsh r3,[r3,r2]
 518 00f2 002B     	 cmp r3,#0
 519 00f4 29D0     	 beq .L15
  65:../Ultrasonic_Collision_Avoidance.c **** 		obstructed_R = Ultrasoinc_Obstructet_Test(Steering_Angles[1]); // neagtiv becasue right wheel
 520              	 .loc 3 65 0
 521 00f6 474B     	 ldr r3,.L27+12
 522 00f8 5B68     	 ldr r3,[r3,#4]
 523 00fa 181C     	 add r0,r3,#0
 524 00fc FFF7FEFF 	 bl Ultrasoinc_Obstructet_Test
 525 0100 031C     	 mov r3,r0
 526 0102 1A1C     	 mov r2,r3
 527 0104 464B     	 ldr r3,.L27+24
 528 0106 1A70     	 strb r2,[r3]
  66:../Ultrasonic_Collision_Avoidance.c **** 		if(obstructed_R == 0){
 529              	 .loc 3 66 0
 530 0108 454B     	 ldr r3,.L27+24
 531 010a 1B78     	 ldrb r3,[r3]
 532 010c 002B     	 cmp r3,#0
 533 010e 22D1     	 bne .L17
  67:../Ultrasonic_Collision_Avoidance.c **** 			Ultrsonic_data_invaildcounter[2] = 0;
 534              	 .loc 3 67 0
 535 0110 3D4B     	 ldr r3,.L27
 536 0112 0022     	 mov r2,#0
 537 0114 9A70     	 strb r2,[r3,#2]
  68:../Ultrasonic_Collision_Avoidance.c **** 			Ultra_m_R = Exp_moving_average((float)Ultrasonic_cm_R_clc / 100 , Ultra_m_R, ALPHA_ULTARSONIC);
 538              	 .loc 3 68 0
 539 0116 0A23     	 mov r3,#10
 540 0118 FB18     	 add r3,r7,r3
 541 011a 0022     	 mov r2,#0
 542 011c 9B5E     	 ldrsh r3,[r3,r2]
 543 011e 181C     	 mov r0,r3
 544 0120 FFF7FEFF 	 bl __aeabi_i2f
 545 0124 031C     	 add r3,r0,#0
 546 0126 181C     	 add r0,r3,#0
 547 0128 3849     	 ldr r1,.L27+4
 548 012a FFF7FEFF 	 bl __aeabi_fdiv
 549 012e 031C     	 add r3,r0,#0
 550 0130 191C     	 add r1,r3,#0
 551 0132 3C4B     	 ldr r3,.L27+28
 552 0134 1A68     	 ldr r2,[r3]
 553 0136 7B68     	 ldr r3,[r7,#4]
 554 0138 081C     	 add r0,r1,#0
 555 013a 111C     	 add r1,r2,#0
 556 013c 1A1C     	 add r2,r3,#0
 557 013e FFF7FEFF 	 bl Exp_moving_average
 558 0142 021C     	 add r2,r0,#0
 559 0144 374B     	 ldr r3,.L27+28
 560 0146 1A60     	 str r2,[r3]
 561 0148 05E0     	 b .L17
 562              	.L15:
  69:../Ultrasonic_Collision_Avoidance.c **** 		}
  70:../Ultrasonic_Collision_Avoidance.c **** 	}
  71:../Ultrasonic_Collision_Avoidance.c **** 	else Ultrsonic_data_invaildcounter[2]++;
 563              	 .loc 3 71 0
 564 014a 2F4B     	 ldr r3,.L27
 565 014c 9B78     	 ldrb r3,[r3,#2]
 566 014e 0133     	 add r3,r3,#1
 567 0150 DAB2     	 uxtb r2,r3
 568 0152 2D4B     	 ldr r3,.L27
 569 0154 9A70     	 strb r2,[r3,#2]
 570              	.L17:
 571              	.LBB2:
  72:../Ultrasonic_Collision_Avoidance.c **** 
  73:../Ultrasonic_Collision_Avoidance.c **** 	for(uint8_t i = 0; i < 3; i++){ // counter overflow stop
 572              	 .loc 3 73 0
 573 0156 1723     	 mov r3,#23
 574 0158 FB18     	 add r3,r7,r3
 575 015a 0022     	 mov r2,#0
 576 015c 1A70     	 strb r2,[r3]
 577 015e 13E0     	 b .L18
 578              	.L20:
  74:../Ultrasonic_Collision_Avoidance.c **** 		if( Ultrsonic_data_invaildcounter[i] > ULRTA_NUM_NO_DATA_INVALID) Ultrsonic_data_invaildcounter[i
 579              	 .loc 3 74 0
 580 0160 1723     	 mov r3,#23
 581 0162 FB18     	 add r3,r7,r3
 582 0164 1B78     	 ldrb r3,[r3]
 583 0166 284A     	 ldr r2,.L27
 584 0168 D35C     	 ldrb r3,[r2,r3]
 585 016a 142B     	 cmp r3,#20
 586 016c 05D9     	 bls .L19
 587              	 .loc 3 74 0 is_stmt 0 discriminator 1
 588 016e 1723     	 mov r3,#23
 589 0170 FB18     	 add r3,r7,r3
 590 0172 1B78     	 ldrb r3,[r3]
 591 0174 244A     	 ldr r2,.L27
 592 0176 1421     	 mov r1,#20
 593 0178 D154     	 strb r1,[r2,r3]
 594              	.L19:
  73:../Ultrasonic_Collision_Avoidance.c **** 		if( Ultrsonic_data_invaildcounter[i] > ULRTA_NUM_NO_DATA_INVALID) Ultrsonic_data_invaildcounter[i
 595              	 .loc 3 73 0 is_stmt 1 discriminator 2
 596 017a 1723     	 mov r3,#23
 597 017c FB18     	 add r3,r7,r3
 598 017e 1A78     	 ldrb r2,[r3]
 599 0180 1723     	 mov r3,#23
 600 0182 FB18     	 add r3,r7,r3
 601 0184 0132     	 add r2,r2,#1
 602 0186 1A70     	 strb r2,[r3]
 603              	.L18:
  73:../Ultrasonic_Collision_Avoidance.c **** 		if( Ultrsonic_data_invaildcounter[i] > ULRTA_NUM_NO_DATA_INVALID) Ultrsonic_data_invaildcounter[i
 604              	 .loc 3 73 0 is_stmt 0 discriminator 1
 605 0188 1723     	 mov r3,#23
 606 018a FB18     	 add r3,r7,r3
 607 018c 1B78     	 ldrb r3,[r3]
 608 018e 022B     	 cmp r3,#2
 609 0190 E6D9     	 bls .L20
 610              	.LBE2:
  75:../Ultrasonic_Collision_Avoidance.c **** 	}
  76:../Ultrasonic_Collision_Avoidance.c **** 
  77:../Ultrasonic_Collision_Avoidance.c **** 	if(Ultrsonic_data_invaildcounter[0] < ULRTA_NUM_NO_DATA_INVALID ){
 611              	 .loc 3 77 0 is_stmt 1
 612 0192 1D4B     	 ldr r3,.L27
 613 0194 1B78     	 ldrb r3,[r3]
 614 0196 132B     	 cmp r3,#19
 615 0198 0AD8     	 bhi .L21
  78:../Ultrasonic_Collision_Avoidance.c **** 		Obstacel_F.angle = 0;
 616              	 .loc 3 78 0
 617 019a 234B     	 ldr r3,.L27+32
 618 019c 0022     	 mov r2,#0
 619 019e 9A60     	 str r2,[r3,#8]
  79:../Ultrasonic_Collision_Avoidance.c **** 		Obstacel_F.distance = Ultra_m_C;
 620              	 .loc 3 79 0
 621 01a0 1B4B     	 ldr r3,.L27+8
 622 01a2 1A68     	 ldr r2,[r3]
 623 01a4 204B     	 ldr r3,.L27+32
 624 01a6 5A60     	 str r2,[r3,#4]
  80:../Ultrasonic_Collision_Avoidance.c **** 		Obstacel_F.isValid = 1;
 625              	 .loc 3 80 0
 626 01a8 1F4B     	 ldr r3,.L27+32
 627 01aa 0122     	 mov r2,#1
 628 01ac 1A70     	 strb r2,[r3]
 629 01ae 02E0     	 b .L22
 630              	.L21:
  81:../Ultrasonic_Collision_Avoidance.c **** 	}
  82:../Ultrasonic_Collision_Avoidance.c **** 	else Obstacel_F.isValid = 0;
 631              	 .loc 3 82 0
 632 01b0 1D4B     	 ldr r3,.L27+32
 633 01b2 0022     	 mov r2,#0
 634 01b4 1A70     	 strb r2,[r3]
 635              	.L22:
  83:../Ultrasonic_Collision_Avoidance.c **** 
  84:../Ultrasonic_Collision_Avoidance.c **** 	if(Ultrsonic_data_invaildcounter[1] < ULRTA_NUM_NO_DATA_INVALID ){
 636              	 .loc 3 84 0
 637 01b6 144B     	 ldr r3,.L27
 638 01b8 5B78     	 ldrb r3,[r3,#1]
 639 01ba 132B     	 cmp r3,#19
 640 01bc 0BD8     	 bhi .L23
  85:../Ultrasonic_Collision_Avoidance.c **** 		Obstacel_L.angle = Steering_Angles[0];
 641              	 .loc 3 85 0
 642 01be 154B     	 ldr r3,.L27+12
 643 01c0 1A68     	 ldr r2,[r3]
 644 01c2 1A4B     	 ldr r3,.L27+36
 645 01c4 9A60     	 str r2,[r3,#8]
  86:../Ultrasonic_Collision_Avoidance.c **** 		Obstacel_L.distance = Ultra_m_L;
 646              	 .loc 3 86 0
 647 01c6 154B     	 ldr r3,.L27+20
 648 01c8 1A68     	 ldr r2,[r3]
 649 01ca 184B     	 ldr r3,.L27+36
 650 01cc 5A60     	 str r2,[r3,#4]
  87:../Ultrasonic_Collision_Avoidance.c **** 		Obstacel_L.isValid = 1;
 651              	 .loc 3 87 0
 652 01ce 174B     	 ldr r3,.L27+36
 653 01d0 0122     	 mov r2,#1
 654 01d2 1A70     	 strb r2,[r3]
 655 01d4 02E0     	 b .L24
 656              	.L23:
  88:../Ultrasonic_Collision_Avoidance.c **** 	}
  89:../Ultrasonic_Collision_Avoidance.c **** 	else Obstacel_L.isValid = 0;
 657              	 .loc 3 89 0
 658 01d6 154B     	 ldr r3,.L27+36
 659 01d8 0022     	 mov r2,#0
 660 01da 1A70     	 strb r2,[r3]
 661              	.L24:
  90:../Ultrasonic_Collision_Avoidance.c **** 
  91:../Ultrasonic_Collision_Avoidance.c **** 	if(Ultrsonic_data_invaildcounter[2] < ULRTA_NUM_NO_DATA_INVALID ){
 662              	 .loc 3 91 0
 663 01dc 0A4B     	 ldr r3,.L27
 664 01de 9B78     	 ldrb r3,[r3,#2]
 665 01e0 132B     	 cmp r3,#19
 666 01e2 0BD8     	 bhi .L25
  92:../Ultrasonic_Collision_Avoidance.c **** 		Obstacel_R.angle = Steering_Angles[1];
 667              	 .loc 3 92 0
 668 01e4 0B4B     	 ldr r3,.L27+12
 669 01e6 5A68     	 ldr r2,[r3,#4]
 670 01e8 114B     	 ldr r3,.L27+40
 671 01ea 9A60     	 str r2,[r3,#8]
  93:../Ultrasonic_Collision_Avoidance.c **** 		Obstacel_R.distance = Ultra_m_R;
 672              	 .loc 3 93 0
 673 01ec 0D4B     	 ldr r3,.L27+28
 674 01ee 1A68     	 ldr r2,[r3]
 675 01f0 0F4B     	 ldr r3,.L27+40
 676 01f2 5A60     	 str r2,[r3,#4]
  94:../Ultrasonic_Collision_Avoidance.c **** 		Obstacel_R.isValid = 1;
 677              	 .loc 3 94 0
 678 01f4 0E4B     	 ldr r3,.L27+40
 679 01f6 0122     	 mov r2,#1
 680 01f8 1A70     	 strb r2,[r3]
 681 01fa 02E0     	 b .L9
 682              	.L25:
  95:../Ultrasonic_Collision_Avoidance.c **** 	}
  96:../Ultrasonic_Collision_Avoidance.c **** 	else Obstacel_R.isValid = 0;
 683              	 .loc 3 96 0
 684 01fc 0C4B     	 ldr r3,.L27+40
 685 01fe 0022     	 mov r2,#0
 686 0200 1A70     	 strb r2,[r3]
 687              	.L9:
  97:../Ultrasonic_Collision_Avoidance.c **** }
 688              	 .loc 3 97 0
 689 0202 BD46     	 mov sp,r7
 690 0204 07B0     	 add sp,sp,#28
 691              	 
 692 0206 90BD     	 pop {r4,r7,pc}
 693              	.L28:
 694              	 .align 2
 695              	.L27:
 696 0208 00000000 	 .word Ultrsonic_data_invaildcounter
 697 020c 0000C842 	 .word 1120403456
 698 0210 00000000 	 .word Ultra_m_C
 699 0214 00000000 	 .word Steering_Angles
 700 0218 00000000 	 .word obstructed_L
 701 021c 00000000 	 .word Ultra_m_L
 702 0220 00000000 	 .word obstructed_R
 703 0224 00000000 	 .word Ultra_m_R
 704 0228 00000000 	 .word Obstacel_F
 705 022c 00000000 	 .word Obstacel_L
 706 0230 00000000 	 .word Obstacel_R
 707              	 .cfi_endproc
 708              	.LFE224:
 710              	 .global __aeabi_fcmpgt
 711              	 .global __aeabi_fcmplt
 712              	 .section .text.Ultrasoinc_Obstructet_Test,"ax",%progbits
 713              	 .align 2
 714              	 .global Ultrasoinc_Obstructet_Test
 715              	 .code 16
 716              	 .thumb_func
 718              	Ultrasoinc_Obstructet_Test:
 719              	.LFB225:
  98:../Ultrasonic_Collision_Avoidance.c **** 
  99:../Ultrasonic_Collision_Avoidance.c **** 
 100:../Ultrasonic_Collision_Avoidance.c **** /*
 101:../Ultrasonic_Collision_Avoidance.c **** uint8_t Ultrasoinc_Obstructet_Test(float Angle){
 102:../Ultrasonic_Collision_Avoidance.c **** 	uint8_t i;
 103:../Ultrasonic_Collision_Avoidance.c **** 	for(i = 0; i < 3; i++){ // if rotate around multipel times
 104:../Ultrasonic_Collision_Avoidance.c **** 		if(Angle > 0){
 105:../Ultrasonic_Collision_Avoidance.c **** 			if((Angle - (POS_OBSTRUCTED_ANGLE_MIN + (i * 360))) * (Angle - (POS_OBSTRUCTED_ANGLE_MAX + (i * 
 106:../Ultrasonic_Collision_Avoidance.c **** 				return 1;
 107:../Ultrasonic_Collision_Avoidance.c **** 			}
 108:../Ultrasonic_Collision_Avoidance.c **** 		}
 109:../Ultrasonic_Collision_Avoidance.c **** 
 110:../Ultrasonic_Collision_Avoidance.c **** 		if(Angle < 0){
 111:../Ultrasonic_Collision_Avoidance.c **** 			if((Angle - (NEG_OBSTRUCTED_ANGLE_MIN - (i * 360))) * (Angle - (NEG_OBSTRUCTED_ANGLE_MAX - (i * 
 112:../Ultrasonic_Collision_Avoidance.c **** 						return 1;
 113:../Ultrasonic_Collision_Avoidance.c **** 			}
 114:../Ultrasonic_Collision_Avoidance.c **** 		}
 115:../Ultrasonic_Collision_Avoidance.c **** 	}
 116:../Ultrasonic_Collision_Avoidance.c **** 
 117:../Ultrasonic_Collision_Avoidance.c **** 	return 0;
 118:../Ultrasonic_Collision_Avoidance.c **** }
 119:../Ultrasonic_Collision_Avoidance.c **** */
 120:../Ultrasonic_Collision_Avoidance.c **** 
 121:../Ultrasonic_Collision_Avoidance.c **** 
 122:../Ultrasonic_Collision_Avoidance.c **** uint8_t Ultrasoinc_Obstructet_Test(float Angle){
 720              	 .loc 3 122 0
 721              	 .cfi_startproc
 722 0000 80B5     	 push {r7,lr}
 723              	.LCFI21:
 724              	 .cfi_def_cfa_offset 8
 725              	 .cfi_offset 7,-8
 726              	 .cfi_offset 14,-4
 727 0002 82B0     	 sub sp,sp,#8
 728              	.LCFI22:
 729              	 .cfi_def_cfa_offset 16
 730 0004 00AF     	 add r7,sp,#0
 731              	.LCFI23:
 732              	 .cfi_def_cfa_register 7
 733 0006 7860     	 str r0,[r7,#4]
 123:../Ultrasonic_Collision_Avoidance.c **** 		if(Angle > 0){
 734              	 .loc 3 123 0
 735 0008 7868     	 ldr r0,[r7,#4]
 736 000a 0021     	 mov r1,#0
 737 000c FFF7FEFF 	 bl __aeabi_fcmpgt
 738 0010 031E     	 sub r3,r0,#0
 739 0012 09D0     	 beq .L30
 124:../Ultrasonic_Collision_Avoidance.c **** 			if(within_MAX_MIN(Angle, POS_OBSTRUCTED_ANGLE_MAX , POS_OBSTRUCTED_ANGLE_MIN)){
 740              	 .loc 3 124 0
 741 0014 7B68     	 ldr r3,[r7,#4]
 742 0016 0F49     	 ldr r1,.L37
 743 0018 0F4A     	 ldr r2,.L37+4
 744 001a 181C     	 add r0,r3,#0
 745 001c FFF7FEFF 	 bl within_MAX_MIN
 746 0020 031E     	 sub r3,r0,#0
 747 0022 01D0     	 beq .L30
 125:../Ultrasonic_Collision_Avoidance.c **** 				return 1;
 748              	 .loc 3 125 0
 749 0024 0123     	 mov r3,#1
 750 0026 10E0     	 b .L32
 751              	.L30:
 126:../Ultrasonic_Collision_Avoidance.c **** 			}
 127:../Ultrasonic_Collision_Avoidance.c **** 		}
 128:../Ultrasonic_Collision_Avoidance.c **** 
 129:../Ultrasonic_Collision_Avoidance.c **** 		if(Angle < 0){
 752              	 .loc 3 129 0
 753 0028 7868     	 ldr r0,[r7,#4]
 754 002a 0021     	 mov r1,#0
 755 002c FFF7FEFF 	 bl __aeabi_fcmplt
 756 0030 031E     	 sub r3,r0,#0
 757 0032 09D0     	 beq .L33
 130:../Ultrasonic_Collision_Avoidance.c **** 			if(within_MAX_MIN(Angle, NEG_OBSTRUCTED_ANGLE_MIN , NEG_OBSTRUCTED_ANGLE_MAX)){
 758              	 .loc 3 130 0
 759 0034 7B68     	 ldr r3,[r7,#4]
 760 0036 0949     	 ldr r1,.L37+8
 761 0038 094A     	 ldr r2,.L37+12
 762 003a 181C     	 add r0,r3,#0
 763 003c FFF7FEFF 	 bl within_MAX_MIN
 764 0040 031E     	 sub r3,r0,#0
 765 0042 01D0     	 beq .L33
 131:../Ultrasonic_Collision_Avoidance.c **** 				return 1;
 766              	 .loc 3 131 0
 767 0044 0123     	 mov r3,#1
 768 0046 00E0     	 b .L32
 769              	.L33:
 132:../Ultrasonic_Collision_Avoidance.c **** 			}
 133:../Ultrasonic_Collision_Avoidance.c **** 		}
 134:../Ultrasonic_Collision_Avoidance.c **** 
 135:../Ultrasonic_Collision_Avoidance.c **** 	return 0;
 770              	 .loc 3 135 0
 771 0048 0023     	 mov r3,#0
 772              	.L32:
 136:../Ultrasonic_Collision_Avoidance.c **** }
 773              	 .loc 3 136 0
 774 004a 181C     	 mov r0,r3
 775 004c BD46     	 mov sp,r7
 776 004e 02B0     	 add sp,sp,#8
 777              	 
 778 0050 80BD     	 pop {r7,pc}
 779              	.L38:
 780 0052 C046     	 .align 2
 781              	.L37:
 782 0054 00005243 	 .word 1129447424
 783 0058 00004842 	 .word 1112014848
 784 005c 000016C3 	 .word -1021968384
 785 0060 00009BC3 	 .word -1013252096
 786              	 .cfi_endproc
 787              	.LFE225:
 789              	 .global __aeabi_fcmpeq
 790              	 .global __aeabi_fsub
 791              	 .global __aeabi_fmul
 792              	 .section .text.Collision_voidance,"ax",%progbits
 793              	 .align 2
 794              	 .global Collision_voidance
 795              	 .code 16
 796              	 .thumb_func
 798              	Collision_voidance:
 799              	.LFB226:
 137:../Ultrasonic_Collision_Avoidance.c **** 
 138:../Ultrasonic_Collision_Avoidance.c **** void Collision_voidance(){
 800              	 .loc 3 138 0
 801              	 .cfi_startproc
 802 0000 90B5     	 push {r4,r7,lr}
 803              	.LCFI24:
 804              	 .cfi_def_cfa_offset 12
 805              	 .cfi_offset 4,-12
 806              	 .cfi_offset 7,-8
 807              	 .cfi_offset 14,-4
 808 0002 83B0     	 sub sp,sp,#12
 809              	.LCFI25:
 810              	 .cfi_def_cfa_offset 24
 811 0004 00AF     	 add r7,sp,#0
 812              	.LCFI26:
 813              	 .cfi_def_cfa_register 7
 139:../Ultrasonic_Collision_Avoidance.c **** 	if(init == 0){
 814              	 .loc 3 139 0
 815 0006 4F4B     	 ldr r3,.L57
 816 0008 1B78     	 ldrb r3,[r3]
 817 000a 002B     	 cmp r3,#0
 818 000c 0BD1     	 bne .L40
 140:../Ultrasonic_Collision_Avoidance.c **** 		Obstacel_F.Sensor = FRONT_;
 819              	 .loc 3 140 0
 820 000e 4E4B     	 ldr r3,.L57+4
 821 0010 0022     	 mov r2,#0
 822 0012 5A70     	 strb r2,[r3,#1]
 141:../Ultrasonic_Collision_Avoidance.c **** 		Obstacel_L.Sensor = LEFT;
 823              	 .loc 3 141 0
 824 0014 4D4B     	 ldr r3,.L57+8
 825 0016 0122     	 mov r2,#1
 826 0018 5A70     	 strb r2,[r3,#1]
 142:../Ultrasonic_Collision_Avoidance.c **** 		Obstacel_R.Sensor = RIGHT;
 827              	 .loc 3 142 0
 828 001a 4D4B     	 ldr r3,.L57+12
 829 001c 0222     	 mov r2,#2
 830 001e 5A70     	 strb r2,[r3,#1]
 143:../Ultrasonic_Collision_Avoidance.c **** 		init = 1;
 831              	 .loc 3 143 0
 832 0020 484B     	 ldr r3,.L57
 833 0022 0122     	 mov r2,#1
 834 0024 1A70     	 strb r2,[r3]
 835              	.L40:
 144:../Ultrasonic_Collision_Avoidance.c **** 	}
 145:../Ultrasonic_Collision_Avoidance.c **** 
 146:../Ultrasonic_Collision_Avoidance.c **** 
 147:../Ultrasonic_Collision_Avoidance.c **** 
 148:../Ultrasonic_Collision_Avoidance.c **** 	// check if reciveing from Ulatrasoic sesnors node
 149:../Ultrasonic_Collision_Avoidance.c **** 	CAN_Ultrasonic_No_messasge_count ++;
 836              	 .loc 3 149 0
 837 0026 4B4B     	 ldr r3,.L57+16
 838 0028 1B78     	 ldrb r3,[r3]
 839 002a DBB2     	 uxtb r3,r3
 840 002c 0133     	 add r3,r3,#1
 841 002e DAB2     	 uxtb r2,r3
 842 0030 484B     	 ldr r3,.L57+16
 843 0032 1A70     	 strb r2,[r3]
 150:../Ultrasonic_Collision_Avoidance.c **** 	if(CAN_Ultrasonic_No_messasge_count > 200) {
 844              	 .loc 3 150 0
 845 0034 474B     	 ldr r3,.L57+16
 846 0036 1B78     	 ldrb r3,[r3]
 847 0038 DBB2     	 uxtb r3,r3
 848 003a C82B     	 cmp r3,#200
 849 003c 03D9     	 bls .L41
 151:../Ultrasonic_Collision_Avoidance.c **** 		CAN_Ultrasonic_No_messasge_count = 200;
 850              	 .loc 3 151 0
 851 003e 454B     	 ldr r3,.L57+16
 852 0040 C822     	 mov r2,#200
 853 0042 1A70     	 strb r2,[r3]
 152:../Ultrasonic_Collision_Avoidance.c **** 		return;
 854              	 .loc 3 152 0
 855 0044 7BE0     	 b .L39
 856              	.L41:
 153:../Ultrasonic_Collision_Avoidance.c **** 	}
 154:../Ultrasonic_Collision_Avoidance.c **** 
 155:../Ultrasonic_Collision_Avoidance.c **** 	Speed_reduction_ratio = 1;
 857              	 .loc 3 155 0
 858 0046 444B     	 ldr r3,.L57+20
 859 0048 FE22     	 mov r2,#254
 860 004a 9205     	 lsl r2,r2,#22
 861 004c 1A60     	 str r2,[r3]
 156:../Ultrasonic_Collision_Avoidance.c **** 	Speed_limit = MAX_Speed + 0.01; // + 0.01 to avoid float bs
 862              	 .loc 3 156 0
 863 004e 434B     	 ldr r3,.L57+24
 864 0050 434A     	 ldr r2,.L57+28
 865 0052 1A60     	 str r2,[r3]
 157:../Ultrasonic_Collision_Avoidance.c **** 	new_Speed_limit = MAX_Speed;
 866              	 .loc 3 157 0
 867 0054 434B     	 ldr r3,.L57+32
 868 0056 FE22     	 mov r2,#254
 869 0058 9205     	 lsl r2,r2,#22
 870 005a 1A60     	 str r2,[r3]
 158:../Ultrasonic_Collision_Avoidance.c **** 
 159:../Ultrasonic_Collision_Avoidance.c **** 
 160:../Ultrasonic_Collision_Avoidance.c **** 	Obstacel_CA_check(Obstacel_F);
 871              	 .loc 3 160 0
 872 005c 3A4B     	 ldr r3,.L57+4
 873 005e 1868     	 ldr r0,[r3]
 874 0060 5968     	 ldr r1,[r3,#4]
 875 0062 9A68     	 ldr r2,[r3,#8]
 876 0064 FFF7FEFF 	 bl Obstacel_CA_check
 161:../Ultrasonic_Collision_Avoidance.c **** 	//Obstacel_CA_check(Obstacel_L);
 162:../Ultrasonic_Collision_Avoidance.c **** 	//Obstacel_CA_check(Obstacel_R);#
 163:../Ultrasonic_Collision_Avoidance.c **** 
 164:../Ultrasonic_Collision_Avoidance.c **** 	//CA aktive
 165:../Ultrasonic_Collision_Avoidance.c **** 	if(Speed_reduction_ratio == 0) aktive_addition = 0.05 ;
 877              	 .loc 3 165 0
 878 0068 3B4B     	 ldr r3,.L57+20
 879 006a 1B68     	 ldr r3,[r3]
 880 006c 181C     	 add r0,r3,#0
 881 006e 0021     	 mov r1,#0
 882 0070 FFF7FEFF 	 bl __aeabi_fcmpeq
 883 0074 031E     	 sub r3,r0,#0
 884 0076 03D0     	 beq .L56
 885              	 .loc 3 165 0 is_stmt 0 discriminator 1
 886 0078 3B4B     	 ldr r3,.L57+36
 887 007a 3C4A     	 ldr r2,.L57+40
 888 007c 1A60     	 str r2,[r3]
 889 007e 12E0     	 b .L45
 890              	.L56:
 166:../Ultrasonic_Collision_Avoidance.c **** 	else if(aktive_addition > 0) aktive_addition --;
 891              	 .loc 3 166 0 is_stmt 1
 892 0080 394B     	 ldr r3,.L57+36
 893 0082 1B68     	 ldr r3,[r3]
 894 0084 181C     	 add r0,r3,#0
 895 0086 0021     	 mov r1,#0
 896 0088 FFF7FEFF 	 bl __aeabi_fcmpgt
 897 008c 031E     	 sub r3,r0,#0
 898 008e 0AD0     	 beq .L45
 899              	 .loc 3 166 0 is_stmt 0 discriminator 1
 900 0090 354B     	 ldr r3,.L57+36
 901 0092 1B68     	 ldr r3,[r3]
 902 0094 181C     	 add r0,r3,#0
 903 0096 FE21     	 mov r1,#254
 904 0098 8905     	 lsl r1,r1,#22
 905 009a FFF7FEFF 	 bl __aeabi_fsub
 906 009e 031C     	 add r3,r0,#0
 907 00a0 1A1C     	 add r2,r3,#0
 908 00a2 314B     	 ldr r3,.L57+36
 909 00a4 1A60     	 str r2,[r3]
 910              	.L45:
 167:../Ultrasonic_Collision_Avoidance.c **** 
 168:../Ultrasonic_Collision_Avoidance.c **** 	if(Speed_limit < MAX_Speed){
 911              	 .loc 3 168 0 is_stmt 1
 912 00a6 2D4B     	 ldr r3,.L57+24
 913 00a8 1B68     	 ldr r3,[r3]
 914 00aa 181C     	 add r0,r3,#0
 915 00ac FE21     	 mov r1,#254
 916 00ae 8905     	 lsl r1,r1,#22
 917 00b0 FFF7FEFF 	 bl __aeabi_fcmplt
 918 00b4 031E     	 sub r3,r0,#0
 919 00b6 13D0     	 beq .L47
 169:../Ultrasonic_Collision_Avoidance.c **** 		if(Speeds[0] != 0) Speed_reduction_ratio = Speed_limit / Speeds[0];
 920              	 .loc 3 169 0
 921 00b8 2D4B     	 ldr r3,.L57+44
 922 00ba 1B68     	 ldr r3,[r3]
 923 00bc 181C     	 add r0,r3,#0
 924 00be 0021     	 mov r1,#0
 925 00c0 FFF7FEFF 	 bl __aeabi_fcmpeq
 926 00c4 031E     	 sub r3,r0,#0
 927 00c6 0BD1     	 bne .L47
 928              	 .loc 3 169 0 is_stmt 0 discriminator 1
 929 00c8 244B     	 ldr r3,.L57+24
 930 00ca 1A68     	 ldr r2,[r3]
 931 00cc 284B     	 ldr r3,.L57+44
 932 00ce 1B68     	 ldr r3,[r3]
 933 00d0 101C     	 add r0,r2,#0
 934 00d2 191C     	 add r1,r3,#0
 935 00d4 FFF7FEFF 	 bl __aeabi_fdiv
 936 00d8 031C     	 add r3,r0,#0
 937 00da 1A1C     	 add r2,r3,#0
 938 00dc 1E4B     	 ldr r3,.L57+20
 939 00de 1A60     	 str r2,[r3]
 940              	.L47:
 941              	.LBB3:
 170:../Ultrasonic_Collision_Avoidance.c **** 	}
 171:../Ultrasonic_Collision_Avoidance.c **** 
 172:../Ultrasonic_Collision_Avoidance.c **** 	// speed output with reduction if CA active
 173:../Ultrasonic_Collision_Avoidance.c **** 	for(uint8_t i = 0; i < 4; i ++){
 942              	 .loc 3 173 0 is_stmt 1
 943 00e0 FB1D     	 add r3,r7,#7
 944 00e2 0022     	 mov r2,#0
 945 00e4 1A70     	 strb r2,[r3]
 946 00e6 16E0     	 b .L50
 947              	.L51:
 174:../Ultrasonic_Collision_Avoidance.c **** 		Speeds_CA[i] = Speeds[i] * Speed_reduction_ratio;
 948              	 .loc 3 174 0 discriminator 3
 949 00e8 FB1D     	 add r3,r7,#7
 950 00ea 1C78     	 ldrb r4,[r3]
 951 00ec FB1D     	 add r3,r7,#7
 952 00ee 1A78     	 ldrb r2,[r3]
 953 00f0 1F4B     	 ldr r3,.L57+44
 954 00f2 9200     	 lsl r2,r2,#2
 955 00f4 D258     	 ldr r2,[r2,r3]
 956 00f6 184B     	 ldr r3,.L57+20
 957 00f8 1B68     	 ldr r3,[r3]
 958 00fa 101C     	 add r0,r2,#0
 959 00fc 191C     	 add r1,r3,#0
 960 00fe FFF7FEFF 	 bl __aeabi_fmul
 961 0102 031C     	 add r3,r0,#0
 962 0104 191C     	 add r1,r3,#0
 963 0106 1B4B     	 ldr r3,.L57+48
 964 0108 A200     	 lsl r2,r4,#2
 965 010a D150     	 str r1,[r2,r3]
 173:../Ultrasonic_Collision_Avoidance.c **** 		Speeds_CA[i] = Speeds[i] * Speed_reduction_ratio;
 966              	 .loc 3 173 0 discriminator 3
 967 010c FB1D     	 add r3,r7,#7
 968 010e 1A78     	 ldrb r2,[r3]
 969 0110 FB1D     	 add r3,r7,#7
 970 0112 0132     	 add r2,r2,#1
 971 0114 1A70     	 strb r2,[r3]
 972              	.L50:
 173:../Ultrasonic_Collision_Avoidance.c **** 		Speeds_CA[i] = Speeds[i] * Speed_reduction_ratio;
 973              	 .loc 3 173 0 is_stmt 0 discriminator 1
 974 0116 FB1D     	 add r3,r7,#7
 975 0118 1B78     	 ldrb r3,[r3]
 976 011a 032B     	 cmp r3,#3
 977 011c E4D9     	 bls .L51
 978              	.LBE3:
 175:../Ultrasonic_Collision_Avoidance.c **** 	}
 176:../Ultrasonic_Collision_Avoidance.c **** 
 177:../Ultrasonic_Collision_Avoidance.c **** 	speed_CA_fl = Speeds_CA[0];
 979              	 .loc 3 177 0 is_stmt 1
 980 011e 154B     	 ldr r3,.L57+48
 981 0120 1A68     	 ldr r2,[r3]
 982 0122 154B     	 ldr r3,.L57+52
 983 0124 1A60     	 str r2,[r3]
 178:../Ultrasonic_Collision_Avoidance.c **** 	speed_CA_fr = Speeds_CA[1];
 984              	 .loc 3 178 0
 985 0126 134B     	 ldr r3,.L57+48
 986 0128 5A68     	 ldr r2,[r3,#4]
 987 012a 144B     	 ldr r3,.L57+56
 988 012c 1A60     	 str r2,[r3]
 179:../Ultrasonic_Collision_Avoidance.c **** 	speed_CA_rl = Speeds_CA[2];
 989              	 .loc 3 179 0
 990 012e 114B     	 ldr r3,.L57+48
 991 0130 9A68     	 ldr r2,[r3,#8]
 992 0132 134B     	 ldr r3,.L57+60
 993 0134 1A60     	 str r2,[r3]
 180:../Ultrasonic_Collision_Avoidance.c **** 	speed_CA_rr = Speeds_CA[3];
 994              	 .loc 3 180 0
 995 0136 0F4B     	 ldr r3,.L57+48
 996 0138 DA68     	 ldr r2,[r3,#12]
 997 013a 124B     	 ldr r3,.L57+64
 998 013c 1A60     	 str r2,[r3]
 999              	.L39:
 181:../Ultrasonic_Collision_Avoidance.c **** 
 182:../Ultrasonic_Collision_Avoidance.c **** }
 1000              	 .loc 3 182 0
 1001 013e BD46     	 mov sp,r7
 1002 0140 03B0     	 add sp,sp,#12
 1003              	 
 1004 0142 90BD     	 pop {r4,r7,pc}
 1005              	.L58:
 1006              	 .align 2
 1007              	.L57:
 1008 0144 00000000 	 .word init
 1009 0148 00000000 	 .word Obstacel_F
 1010 014c 00000000 	 .word Obstacel_L
 1011 0150 00000000 	 .word Obstacel_R
 1012 0154 00000000 	 .word CAN_Ultrasonic_No_messasge_count
 1013 0158 00000000 	 .word Speed_reduction_ratio
 1014 015c 00000000 	 .word Speed_limit
 1015 0160 AE47813F 	 .word 1065437102
 1016 0164 00000000 	 .word new_Speed_limit
 1017 0168 00000000 	 .word aktive_addition
 1018 016c CDCC4C3D 	 .word 1028443341
 1019 0170 00000000 	 .word Speeds
 1020 0174 00000000 	 .word Speeds_CA
 1021 0178 00000000 	 .word speed_CA_fl
 1022 017c 00000000 	 .word speed_CA_fr
 1023 0180 00000000 	 .word speed_CA_rl
 1024 0184 00000000 	 .word speed_CA_rr
 1025              	 .cfi_endproc
 1026              	.LFE226:
 1028              	 .global __aeabi_fadd
 1029              	 .global __aeabi_f2d
 1030              	 .global __aeabi_dcmpgt
 1031              	 .global __aeabi_dadd
 1032              	 .global __aeabi_dcmplt
 1033              	 .global __aeabi_dsub
 1034              	 .global __aeabi_d2f
 1035              	 .section .text.Obstacel_CA_check,"ax",%progbits
 1036              	 .align 2
 1037              	 .global Obstacel_CA_check
 1038              	 .code 16
 1039              	 .thumb_func
 1041              	Obstacel_CA_check:
 1042              	.LFB227:
 183:../Ultrasonic_Collision_Avoidance.c **** 
 184:../Ultrasonic_Collision_Avoidance.c **** void Obstacel_CA_check(Obstacel obstacel){
 1043              	 .loc 3 184 0
 1044              	 .cfi_startproc
 1045 0000 F0B5     	 push {r4,r5,r6,r7,lr}
 1046              	.LCFI27:
 1047              	 .cfi_def_cfa_offset 20
 1048              	 .cfi_offset 4,-20
 1049              	 .cfi_offset 5,-16
 1050              	 .cfi_offset 6,-12
 1051              	 .cfi_offset 7,-8
 1052              	 .cfi_offset 14,-4
 1053 0002 87B0     	 sub sp,sp,#28
 1054              	.LCFI28:
 1055              	 .cfi_def_cfa_offset 48
 1056 0004 00AF     	 add r7,sp,#0
 1057              	.LCFI29:
 1058              	 .cfi_def_cfa_register 7
 1059 0006 3B1D     	 add r3,r7,#4
 1060 0008 1860     	 str r0,[r3]
 1061 000a 5960     	 str r1,[r3,#4]
 1062 000c 9A60     	 str r2,[r3,#8]
 185:../Ultrasonic_Collision_Avoidance.c **** 	if(obstacel.isValid){
 1063              	 .loc 3 185 0
 1064 000e 3B1D     	 add r3,r7,#4
 1065 0010 1B78     	 ldrb r3,[r3]
 1066 0012 002B     	 cmp r3,#0
 1067 0014 00D1     	 bne .LCB849
 1068 0016 A4E0     	 b .L60
 1069              	.LCB849:
 186:../Ultrasonic_Collision_Avoidance.c **** 		if(obstacel.distance < CA_START){ // not far away
 1070              	 .loc 3 186 0
 1071 0018 3B1D     	 add r3,r7,#4
 1072 001a 5B68     	 ldr r3,[r3,#4]
 1073 001c 181C     	 add r0,r3,#0
 1074 001e FE21     	 mov r1,#254
 1075 0020 8905     	 lsl r1,r1,#22
 1076 0022 FFF7FEFF 	 bl __aeabi_fcmplt
 1077 0026 031E     	 sub r3,r0,#0
 1078 0028 00D1     	 bne .LCB858
 1079 002a 9AE0     	 b .L60
 1080              	.LCB858:
 187:../Ultrasonic_Collision_Avoidance.c **** 			if(within_MAX_MIN(obstacel.angle, trajectory_angle + CA_ANGLE, trajectory_angle - CA_ANGLE)){ //
 1081              	 .loc 3 187 0
 1082 002c 3B1D     	 add r3,r7,#4
 1083 002e 9C68     	 ldr r4,[r3,#8]
 1084 0030 504B     	 ldr r3,.L74
 1085 0032 1B68     	 ldr r3,[r3]
 1086 0034 181C     	 add r0,r3,#0
 1087 0036 5049     	 ldr r1,.L74+4
 1088 0038 FFF7FEFF 	 bl __aeabi_fadd
 1089 003c 031C     	 add r3,r0,#0
 1090 003e 1D1C     	 add r5,r3,#0
 1091 0040 4C4B     	 ldr r3,.L74
 1092 0042 1B68     	 ldr r3,[r3]
 1093 0044 181C     	 add r0,r3,#0
 1094 0046 4C49     	 ldr r1,.L74+4
 1095 0048 FFF7FEFF 	 bl __aeabi_fsub
 1096 004c 031C     	 add r3,r0,#0
 1097 004e 201C     	 add r0,r4,#0
 1098 0050 291C     	 add r1,r5,#0
 1099 0052 1A1C     	 add r2,r3,#0
 1100 0054 FFF7FEFF 	 bl within_MAX_MIN
 1101 0058 031E     	 sub r3,r0,#0
 1102 005a 00D1     	 bne .LCB880
 1103 005c 81E0     	 b .L60
 1104              	.LCB880:
 1105              	.LBB4:
 188:../Ultrasonic_Collision_Avoidance.c **** 				float abs_trajctory = vector_abs_value(Trajctory);
 1106              	 .loc 3 188 0
 1107 005e 474B     	 ldr r3,.L74+8
 1108 0060 181C     	 mov r0,r3
 1109 0062 FFF7FEFF 	 bl vector_abs_value
 1110 0066 031C     	 add r3,r0,#0
 1111 0068 7B61     	 str r3,[r7,#20]
 189:../Ultrasonic_Collision_Avoidance.c **** 				if( abs_trajctory > 0.01){
 1112              	 .loc 3 189 0
 1113 006a 7869     	 ldr r0,[r7,#20]
 1114 006c FFF7FEFF 	 bl __aeabi_f2d
 1115 0070 031C     	 mov r3,r0
 1116 0072 0C1C     	 mov r4,r1
 1117 0074 181C     	 mov r0,r3
 1118 0076 211C     	 mov r1,r4
 1119 0078 414A     	 ldr r2,.L74+12
 1120 007a 424B     	 ldr r3,.L74+16
 1121 007c FFF7FEFF 	 bl __aeabi_dcmpgt
 1122 0080 031E     	 sub r3,r0,#0
 1123 0082 6ED0     	 beq .L60
 190:../Ultrasonic_Collision_Avoidance.c **** 					if(obstacel.distance  < CA_STOP + aktive_addition){
 1124              	 .loc 3 190 0
 1125 0084 3B1D     	 add r3,r7,#4
 1126 0086 5B68     	 ldr r3,[r3,#4]
 1127 0088 181C     	 add r0,r3,#0
 1128 008a FFF7FEFF 	 bl __aeabi_f2d
 1129 008e 051C     	 mov r5,r0
 1130 0090 0E1C     	 mov r6,r1
 1131 0092 3D4B     	 ldr r3,.L74+20
 1132 0094 1B68     	 ldr r3,[r3]
 1133 0096 181C     	 add r0,r3,#0
 1134 0098 FFF7FEFF 	 bl __aeabi_f2d
 1135 009c 031C     	 mov r3,r0
 1136 009e 0C1C     	 mov r4,r1
 1137 00a0 181C     	 mov r0,r3
 1138 00a2 211C     	 mov r1,r4
 1139 00a4 394A     	 ldr r2,.L74+24
 1140 00a6 3A4B     	 ldr r3,.L74+28
 1141 00a8 FFF7FEFF 	 bl __aeabi_dadd
 1142 00ac 031C     	 mov r3,r0
 1143 00ae 0C1C     	 mov r4,r1
 1144 00b0 281C     	 mov r0,r5
 1145 00b2 311C     	 mov r1,r6
 1146 00b4 1A1C     	 mov r2,r3
 1147 00b6 231C     	 mov r3,r4
 1148 00b8 FFF7FEFF 	 bl __aeabi_dcmplt
 1149 00bc 031E     	 sub r3,r0,#0
 1150 00be 09D0     	 beq .L73
 191:../Ultrasonic_Collision_Avoidance.c **** 						Speed_reduction_ratio = 0; // stop
 1151              	 .loc 3 191 0
 1152 00c0 344B     	 ldr r3,.L74+32
 1153 00c2 0022     	 mov r2,#0
 1154 00c4 1A60     	 str r2,[r3]
 192:../Ultrasonic_Collision_Avoidance.c **** 						set_CA_LED(obstacel.Sensor,1);
 1155              	 .loc 3 192 0
 1156 00c6 3B1D     	 add r3,r7,#4
 1157 00c8 5B78     	 ldrb r3,[r3,#1]
 1158 00ca 181C     	 mov r0,r3
 1159 00cc 0121     	 mov r1,#1
 1160 00ce FFF7FEFF 	 bl set_CA_LED
 193:../Ultrasonic_Collision_Avoidance.c **** 						return;
 1161              	 .loc 3 193 0
 1162 00d2 4CE0     	 b .L59
 1163              	.L73:
 194:../Ultrasonic_Collision_Avoidance.c **** 					}
 195:../Ultrasonic_Collision_Avoidance.c **** 					else if(abs_trajctory > obstacel.distance  - CA_STOP){
 1164              	 .loc 3 195 0
 1165 00d4 7869     	 ldr r0,[r7,#20]
 1166 00d6 FFF7FEFF 	 bl __aeabi_f2d
 1167 00da 051C     	 mov r5,r0
 1168 00dc 0E1C     	 mov r6,r1
 1169 00de 3B1D     	 add r3,r7,#4
 1170 00e0 5B68     	 ldr r3,[r3,#4]
 1171 00e2 181C     	 add r0,r3,#0
 1172 00e4 FFF7FEFF 	 bl __aeabi_f2d
 1173 00e8 031C     	 mov r3,r0
 1174 00ea 0C1C     	 mov r4,r1
 1175 00ec 181C     	 mov r0,r3
 1176 00ee 211C     	 mov r1,r4
 1177 00f0 264A     	 ldr r2,.L74+24
 1178 00f2 274B     	 ldr r3,.L74+28
 1179 00f4 FFF7FEFF 	 bl __aeabi_dsub
 1180 00f8 031C     	 mov r3,r0
 1181 00fa 0C1C     	 mov r4,r1
 1182 00fc 281C     	 mov r0,r5
 1183 00fe 311C     	 mov r1,r6
 1184 0100 1A1C     	 mov r2,r3
 1185 0102 231C     	 mov r3,r4
 1186 0104 FFF7FEFF 	 bl __aeabi_dcmpgt
 1187 0108 031E     	 sub r3,r0,#0
 1188 010a 2AD0     	 beq .L60
 196:../Ultrasonic_Collision_Avoidance.c **** 						   new_Speed_limit = obstacel.distance  - CA_STOP; // speed reduction
 1189              	 .loc 3 196 0
 1190 010c 3B1D     	 add r3,r7,#4
 1191 010e 5B68     	 ldr r3,[r3,#4]
 1192 0110 181C     	 add r0,r3,#0
 1193 0112 FFF7FEFF 	 bl __aeabi_f2d
 1194 0116 031C     	 mov r3,r0
 1195 0118 0C1C     	 mov r4,r1
 1196 011a 181C     	 mov r0,r3
 1197 011c 211C     	 mov r1,r4
 1198 011e 1B4A     	 ldr r2,.L74+24
 1199 0120 1B4B     	 ldr r3,.L74+28
 1200 0122 FFF7FEFF 	 bl __aeabi_dsub
 1201 0126 031C     	 mov r3,r0
 1202 0128 0C1C     	 mov r4,r1
 1203 012a 181C     	 mov r0,r3
 1204 012c 211C     	 mov r1,r4
 1205 012e FFF7FEFF 	 bl __aeabi_d2f
 1206 0132 021C     	 add r2,r0,#0
 1207 0134 184B     	 ldr r3,.L74+36
 1208 0136 1A60     	 str r2,[r3]
 197:../Ultrasonic_Collision_Avoidance.c **** 						if( Speed_limit > new_Speed_limit) {
 1209              	 .loc 3 197 0
 1210 0138 184B     	 ldr r3,.L74+40
 1211 013a 1A68     	 ldr r2,[r3]
 1212 013c 164B     	 ldr r3,.L74+36
 1213 013e 1B68     	 ldr r3,[r3]
 1214 0140 101C     	 add r0,r2,#0
 1215 0142 191C     	 add r1,r3,#0
 1216 0144 FFF7FEFF 	 bl __aeabi_fcmpgt
 1217 0148 031E     	 sub r3,r0,#0
 1218 014a 0AD0     	 beq .L60
 198:../Ultrasonic_Collision_Avoidance.c **** 							Speed_limit = new_Speed_limit;
 1219              	 .loc 3 198 0
 1220 014c 124B     	 ldr r3,.L74+36
 1221 014e 1A68     	 ldr r2,[r3]
 1222 0150 124B     	 ldr r3,.L74+40
 1223 0152 1A60     	 str r2,[r3]
 199:../Ultrasonic_Collision_Avoidance.c **** 							set_CA_LED(obstacel.Sensor,2); //led on
 1224              	 .loc 3 199 0
 1225 0154 3B1D     	 add r3,r7,#4
 1226 0156 5B78     	 ldrb r3,[r3,#1]
 1227 0158 181C     	 mov r0,r3
 1228 015a 0221     	 mov r1,#2
 1229 015c FFF7FEFF 	 bl set_CA_LED
 200:../Ultrasonic_Collision_Avoidance.c **** 							return;
 1230              	 .loc 3 200 0
 1231 0160 05E0     	 b .L59
 1232              	.L60:
 1233              	.LBE4:
 201:../Ultrasonic_Collision_Avoidance.c **** 						}
 202:../Ultrasonic_Collision_Avoidance.c **** 					}
 203:../Ultrasonic_Collision_Avoidance.c **** 				}
 204:../Ultrasonic_Collision_Avoidance.c **** 			}
 205:../Ultrasonic_Collision_Avoidance.c **** 		}
 206:../Ultrasonic_Collision_Avoidance.c **** 	}
 207:../Ultrasonic_Collision_Avoidance.c **** 	set_CA_LED(obstacel.Sensor,0);
 1234              	 .loc 3 207 0
 1235 0162 3B1D     	 add r3,r7,#4
 1236 0164 5B78     	 ldrb r3,[r3,#1]
 1237 0166 181C     	 mov r0,r3
 1238 0168 0021     	 mov r1,#0
 1239 016a FFF7FEFF 	 bl set_CA_LED
 1240              	.L59:
 208:../Ultrasonic_Collision_Avoidance.c **** }
 1241              	 .loc 3 208 0
 1242 016e BD46     	 mov sp,r7
 1243 0170 07B0     	 add sp,sp,#28
 1244              	 
 1245 0172 F0BD     	 pop {r4,r5,r6,r7,pc}
 1246              	.L75:
 1247              	 .align 2
 1248              	.L74:
 1249 0174 00000000 	 .word trajectory_angle
 1250 0178 00007041 	 .word 1097859072
 1251 017c 00000000 	 .word Trajctory
 1252 0180 7B14AE47 	 .word 1202590843
 1253 0184 E17A843F 	 .word 1065646817
 1254 0188 00000000 	 .word aktive_addition
 1255 018c 9A999999 	 .word -1717986918
 1256 0190 9999C93F 	 .word 1070176665
 1257 0194 00000000 	 .word Speed_reduction_ratio
 1258 0198 00000000 	 .word new_Speed_limit
 1259 019c 00000000 	 .word Speed_limit
 1260              	 .cfi_endproc
 1261              	.LFE227:
 1263              	 .global toggel_ervy_x
 1264              	 .section .bss.toggel_ervy_x,"aw",%nobits
 1267              	toggel_ervy_x:
 1268 0000 00       	 .space 1
 1269              	 .section .text.set_CA_LED,"ax",%progbits
 1270              	 .align 2
 1271              	 .global set_CA_LED
 1272              	 .code 16
 1273              	 .thumb_func
 1275              	set_CA_LED:
 1276              	.LFB228:
 209:../Ultrasonic_Collision_Avoidance.c **** 
 210:../Ultrasonic_Collision_Avoidance.c **** uint8_t toggel_ervy_x = 0;
 211:../Ultrasonic_Collision_Avoidance.c **** 
 212:../Ultrasonic_Collision_Avoidance.c **** void set_CA_LED(uint8_t Sensor, uint8_t mode){
 1277              	 .loc 3 212 0
 1278              	 .cfi_startproc
 1279 0000 80B5     	 push {r7,lr}
 1280              	.LCFI30:
 1281              	 .cfi_def_cfa_offset 8
 1282              	 .cfi_offset 7,-8
 1283              	 .cfi_offset 14,-4
 1284 0002 82B0     	 sub sp,sp,#8
 1285              	.LCFI31:
 1286              	 .cfi_def_cfa_offset 16
 1287 0004 00AF     	 add r7,sp,#0
 1288              	.LCFI32:
 1289              	 .cfi_def_cfa_register 7
 1290 0006 021C     	 mov r2,r0
 1291 0008 FB1D     	 add r3,r7,#7
 1292 000a 1A70     	 strb r2,[r3]
 1293 000c BB1D     	 add r3,r7,#6
 1294 000e 0A1C     	 add r2,r1,#0
 1295 0010 1A70     	 strb r2,[r3]
 213:../Ultrasonic_Collision_Avoidance.c **** 	if(Sensor == 0)
 1296              	 .loc 3 213 0
 1297 0012 FB1D     	 add r3,r7,#7
 1298 0014 1B78     	 ldrb r3,[r3]
 1299 0016 002B     	 cmp r3,#0
 1300 0018 1ED1     	 bne .L77
 214:../Ultrasonic_Collision_Avoidance.c **** 		{
 215:../Ultrasonic_Collision_Avoidance.c **** 		if(mode == 0)DIGITAL_IO_SetOutputLow(&LED_CA_FRONT);
 1301              	 .loc 3 215 0
 1302 001a BB1D     	 add r3,r7,#6
 1303 001c 1B78     	 ldrb r3,[r3]
 1304 001e 002B     	 cmp r3,#0
 1305 0020 04D1     	 bne .L78
 1306              	 .loc 3 215 0 is_stmt 0 discriminator 1
 1307 0022 384B     	 ldr r3,.L89
 1308 0024 181C     	 mov r0,r3
 1309 0026 FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 1310 002a 5AE0     	 b .L81
 1311              	.L78:
 216:../Ultrasonic_Collision_Avoidance.c **** 		else if(mode == 1)DIGITAL_IO_SetOutputHigh(&LED_CA_FRONT);
 1312              	 .loc 3 216 0 is_stmt 1
 1313 002c BB1D     	 add r3,r7,#6
 1314 002e 1B78     	 ldrb r3,[r3]
 1315 0030 012B     	 cmp r3,#1
 1316 0032 04D1     	 bne .L80
 1317              	 .loc 3 216 0 is_stmt 0 discriminator 1
 1318 0034 334B     	 ldr r3,.L89
 1319 0036 181C     	 mov r0,r3
 1320 0038 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 1321 003c 51E0     	 b .L81
 1322              	.L80:
 217:../Ultrasonic_Collision_Avoidance.c **** 		else if(mode == 2 && toggel_ervy_x == 0) DIGITAL_IO_ToggleOutput(&LED_CA_FRONT);
 1323              	 .loc 3 217 0 is_stmt 1
 1324 003e BB1D     	 add r3,r7,#6
 1325 0040 1B78     	 ldrb r3,[r3]
 1326 0042 022B     	 cmp r3,#2
 1327 0044 4DD1     	 bne .L81
 1328              	 .loc 3 217 0 is_stmt 0 discriminator 1
 1329 0046 304B     	 ldr r3,.L89+4
 1330 0048 1B78     	 ldrb r3,[r3]
 1331 004a 002B     	 cmp r3,#0
 1332 004c 49D1     	 bne .L81
 1333              	 .loc 3 217 0 discriminator 2
 1334 004e 2D4B     	 ldr r3,.L89
 1335 0050 181C     	 mov r0,r3
 1336 0052 FFF7FEFF 	 bl DIGITAL_IO_ToggleOutput
 1337 0056 44E0     	 b .L81
 1338              	.L77:
 218:../Ultrasonic_Collision_Avoidance.c **** 		}
 219:../Ultrasonic_Collision_Avoidance.c **** 	else if (Sensor == 1){
 1339              	 .loc 3 219 0 is_stmt 1
 1340 0058 FB1D     	 add r3,r7,#7
 1341 005a 1B78     	 ldrb r3,[r3]
 1342 005c 012B     	 cmp r3,#1
 1343 005e 1ED1     	 bne .L82
 220:../Ultrasonic_Collision_Avoidance.c **** 		if(mode == 0)DIGITAL_IO_SetOutputLow(&LED_CA_LEFT);
 1344              	 .loc 3 220 0
 1345 0060 BB1D     	 add r3,r7,#6
 1346 0062 1B78     	 ldrb r3,[r3]
 1347 0064 002B     	 cmp r3,#0
 1348 0066 04D1     	 bne .L83
 1349              	 .loc 3 220 0 is_stmt 0 discriminator 1
 1350 0068 284B     	 ldr r3,.L89+8
 1351 006a 181C     	 mov r0,r3
 1352 006c FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 1353 0070 37E0     	 b .L81
 1354              	.L83:
 221:../Ultrasonic_Collision_Avoidance.c **** 		else if(mode == 1)DIGITAL_IO_SetOutputHigh(&LED_CA_LEFT);
 1355              	 .loc 3 221 0 is_stmt 1
 1356 0072 BB1D     	 add r3,r7,#6
 1357 0074 1B78     	 ldrb r3,[r3]
 1358 0076 012B     	 cmp r3,#1
 1359 0078 04D1     	 bne .L85
 1360              	 .loc 3 221 0 is_stmt 0 discriminator 1
 1361 007a 244B     	 ldr r3,.L89+8
 1362 007c 181C     	 mov r0,r3
 1363 007e FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 1364 0082 2EE0     	 b .L81
 1365              	.L85:
 222:../Ultrasonic_Collision_Avoidance.c **** 		else if(mode == 2 && toggel_ervy_x == 0) DIGITAL_IO_ToggleOutput(&LED_CA_LEFT);
 1366              	 .loc 3 222 0 is_stmt 1
 1367 0084 BB1D     	 add r3,r7,#6
 1368 0086 1B78     	 ldrb r3,[r3]
 1369 0088 022B     	 cmp r3,#2
 1370 008a 2AD1     	 bne .L81
 1371              	 .loc 3 222 0 is_stmt 0 discriminator 1
 1372 008c 1E4B     	 ldr r3,.L89+4
 1373 008e 1B78     	 ldrb r3,[r3]
 1374 0090 002B     	 cmp r3,#0
 1375 0092 26D1     	 bne .L81
 1376              	 .loc 3 222 0 discriminator 2
 1377 0094 1D4B     	 ldr r3,.L89+8
 1378 0096 181C     	 mov r0,r3
 1379 0098 FFF7FEFF 	 bl DIGITAL_IO_ToggleOutput
 1380 009c 21E0     	 b .L81
 1381              	.L82:
 223:../Ultrasonic_Collision_Avoidance.c **** 	}
 224:../Ultrasonic_Collision_Avoidance.c **** 	else if (Sensor == 2){
 1382              	 .loc 3 224 0 is_stmt 1
 1383 009e FB1D     	 add r3,r7,#7
 1384 00a0 1B78     	 ldrb r3,[r3]
 1385 00a2 022B     	 cmp r3,#2
 1386 00a4 1DD1     	 bne .L81
 225:../Ultrasonic_Collision_Avoidance.c **** 		if(mode == 0)DIGITAL_IO_SetOutputLow(&LED_CA_RIGHT);
 1387              	 .loc 3 225 0
 1388 00a6 BB1D     	 add r3,r7,#6
 1389 00a8 1B78     	 ldrb r3,[r3]
 1390 00aa 002B     	 cmp r3,#0
 1391 00ac 04D1     	 bne .L86
 1392              	 .loc 3 225 0 is_stmt 0 discriminator 1
 1393 00ae 184B     	 ldr r3,.L89+12
 1394 00b0 181C     	 mov r0,r3
 1395 00b2 FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 1396 00b6 14E0     	 b .L81
 1397              	.L86:
 226:../Ultrasonic_Collision_Avoidance.c **** 		else if(mode == 1)DIGITAL_IO_SetOutputHigh(&LED_CA_RIGHT);
 1398              	 .loc 3 226 0 is_stmt 1
 1399 00b8 BB1D     	 add r3,r7,#6
 1400 00ba 1B78     	 ldrb r3,[r3]
 1401 00bc 012B     	 cmp r3,#1
 1402 00be 04D1     	 bne .L87
 1403              	 .loc 3 226 0 is_stmt 0 discriminator 1
 1404 00c0 134B     	 ldr r3,.L89+12
 1405 00c2 181C     	 mov r0,r3
 1406 00c4 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 1407 00c8 0BE0     	 b .L81
 1408              	.L87:
 227:../Ultrasonic_Collision_Avoidance.c **** 		else if(mode == 2 && toggel_ervy_x == 0) DIGITAL_IO_ToggleOutput(&LED_CA_RIGHT);
 1409              	 .loc 3 227 0 is_stmt 1
 1410 00ca BB1D     	 add r3,r7,#6
 1411 00cc 1B78     	 ldrb r3,[r3]
 1412 00ce 022B     	 cmp r3,#2
 1413 00d0 07D1     	 bne .L81
 1414              	 .loc 3 227 0 is_stmt 0 discriminator 1
 1415 00d2 0D4B     	 ldr r3,.L89+4
 1416 00d4 1B78     	 ldrb r3,[r3]
 1417 00d6 002B     	 cmp r3,#0
 1418 00d8 03D1     	 bne .L81
 1419              	 .loc 3 227 0 discriminator 2
 1420 00da 0D4B     	 ldr r3,.L89+12
 1421 00dc 181C     	 mov r0,r3
 1422 00de FFF7FEFF 	 bl DIGITAL_IO_ToggleOutput
 1423              	.L81:
 228:../Ultrasonic_Collision_Avoidance.c **** 	}
 229:../Ultrasonic_Collision_Avoidance.c **** 
 230:../Ultrasonic_Collision_Avoidance.c **** 	toggel_ervy_x++;
 1424              	 .loc 3 230 0 is_stmt 1
 1425 00e2 094B     	 ldr r3,.L89+4
 1426 00e4 1B78     	 ldrb r3,[r3]
 1427 00e6 0133     	 add r3,r3,#1
 1428 00e8 DAB2     	 uxtb r2,r3
 1429 00ea 074B     	 ldr r3,.L89+4
 1430 00ec 1A70     	 strb r2,[r3]
 231:../Ultrasonic_Collision_Avoidance.c **** 	if(toggel_ervy_x > 8) toggel_ervy_x = 0;
 1431              	 .loc 3 231 0
 1432 00ee 064B     	 ldr r3,.L89+4
 1433 00f0 1B78     	 ldrb r3,[r3]
 1434 00f2 082B     	 cmp r3,#8
 1435 00f4 02D9     	 bls .L76
 1436              	 .loc 3 231 0 is_stmt 0 discriminator 1
 1437 00f6 044B     	 ldr r3,.L89+4
 1438 00f8 0022     	 mov r2,#0
 1439 00fa 1A70     	 strb r2,[r3]
 1440              	.L76:
 232:../Ultrasonic_Collision_Avoidance.c **** }
 1441              	 .loc 3 232 0 is_stmt 1
 1442 00fc BD46     	 mov sp,r7
 1443 00fe 02B0     	 add sp,sp,#8
 1444              	 
 1445 0100 80BD     	 pop {r7,pc}
 1446              	.L90:
 1447 0102 C046     	 .align 2
 1448              	.L89:
 1449 0104 00000000 	 .word LED_CA_FRONT
 1450 0108 00000000 	 .word toggel_ervy_x
 1451 010c 00000000 	 .word LED_CA_LEFT
 1452 0110 00000000 	 .word LED_CA_RIGHT
 1453              	 .cfi_endproc
 1454              	.LFE228:
 1456              	 .text
 1457              	.Letext0:
 1458              	 .file 4 "c:\\dave\\dave-ide-4.4.2-64bit\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1459              	 .file 5 "c:\\dave\\dave-ide-4.4.2-64bit\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1460              	 .file 6 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/XMCLib/inc/xmc1_gpio.h"
 1461              	 .file 7 "../Ultrasonic_Collision_Avoidance.h"
 1462              	 .file 8 "../Globals.h"
 1463              	 .file 9 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/CMSIS/Include/cmsis_gcc.h"
 1464              	 .file 10 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Libraries/CMSIS/Infineon/XMC1400_series/Include/system_XMC1400.h"
 1465              	 .file 11 "C:/GitHub/MobRob_Rover_NEW/Steering_Controller/MobRob_Steering_Controller/Dave/Generated/DIGITAL_IO/digital_io_extern.h"
 1466              	 .file 12 "../CAN.h"
DEFINED SYMBOLS
                            *ABS*:00000000 Ultrasonic_Collision_Avoidance.c
                            *COM*:00000001 RC_controll
    {standard input}:19     .text.XMC_GPIO_SetOutputHigh:00000000 $t
    {standard input}:23     .text.XMC_GPIO_SetOutputHigh:00000000 XMC_GPIO_SetOutputHigh
    {standard input}:59     .text.XMC_GPIO_SetOutputLow:00000000 $t
    {standard input}:63     .text.XMC_GPIO_SetOutputLow:00000000 XMC_GPIO_SetOutputLow
    {standard input}:99     .text.XMC_GPIO_ToggleOutput:00000000 $t
    {standard input}:103    .text.XMC_GPIO_ToggleOutput:00000000 XMC_GPIO_ToggleOutput
    {standard input}:137    .text.XMC_GPIO_ToggleOutput:00000020 $d
    {standard input}:142    .text.DIGITAL_IO_SetOutputHigh:00000000 $t
    {standard input}:146    .text.DIGITAL_IO_SetOutputHigh:00000000 DIGITAL_IO_SetOutputHigh
    {standard input}:180    .text.DIGITAL_IO_SetOutputLow:00000000 $t
    {standard input}:184    .text.DIGITAL_IO_SetOutputLow:00000000 DIGITAL_IO_SetOutputLow
    {standard input}:217    .text.DIGITAL_IO_ToggleOutput:00000000 $t
    {standard input}:221    .text.DIGITAL_IO_ToggleOutput:00000000 DIGITAL_IO_ToggleOutput
    {standard input}:257    .bss.obstructed_L:00000000 obstructed_L
    {standard input}:258    .bss.obstructed_L:00000000 $d
    {standard input}:263    .bss.obstructed_R:00000000 obstructed_R
    {standard input}:264    .bss.obstructed_R:00000000 $d
    {standard input}:270    .data.Ultra_m_C:00000000 Ultra_m_C
    {standard input}:267    .data.Ultra_m_C:00000000 $d
    {standard input}:277    .data.Ultra_m_L:00000000 Ultra_m_L
    {standard input}:274    .data.Ultra_m_L:00000000 $d
    {standard input}:284    .data.Ultra_m_R:00000000 Ultra_m_R
    {standard input}:281    .data.Ultra_m_R:00000000 $d
    {standard input}:291    .data.Ultrsonic_data_invaildcounter:00000000 Ultrsonic_data_invaildcounter
    {standard input}:288    .data.Ultrsonic_data_invaildcounter:00000000 $d
    {standard input}:300    .bss.Obstacel_valid:00000000 Obstacel_valid
    {standard input}:297    .bss.Obstacel_valid:00000000 $d
                            *COM*:0000000c Obstacel_F
                            *COM*:0000000c Obstacel_L
                            *COM*:0000000c Obstacel_R
    {standard input}:310    .data.Speed_reduction_ratio:00000000 Speed_reduction_ratio
    {standard input}:307    .data.Speed_reduction_ratio:00000000 $d
    {standard input}:317    .data.Speed_limit:00000000 Speed_limit
    {standard input}:314    .data.Speed_limit:00000000 $d
    {standard input}:324    .data.new_Speed_limit:00000000 new_Speed_limit
    {standard input}:321    .data.new_Speed_limit:00000000 $d
    {standard input}:331    .bss.aktive_addition:00000000 aktive_addition
    {standard input}:328    .bss.aktive_addition:00000000 $d
    {standard input}:338    .bss.speed_CA_fl:00000000 speed_CA_fl
    {standard input}:335    .bss.speed_CA_fl:00000000 $d
    {standard input}:345    .bss.speed_CA_fr:00000000 speed_CA_fr
    {standard input}:342    .bss.speed_CA_fr:00000000 $d
    {standard input}:352    .bss.speed_CA_rl:00000000 speed_CA_rl
    {standard input}:349    .bss.speed_CA_rl:00000000 $d
    {standard input}:359    .bss.speed_CA_rr:00000000 speed_CA_rr
    {standard input}:356    .bss.speed_CA_rr:00000000 $d
    {standard input}:365    .bss.init:00000000 init
    {standard input}:366    .bss.init:00000000 $d
    {standard input}:370    .text.Ultra_sonic_filter:00000000 $t
    {standard input}:375    .text.Ultra_sonic_filter:00000000 Ultra_sonic_filter
    {standard input}:718    .text.Ultrasoinc_Obstructet_Test:00000000 Ultrasoinc_Obstructet_Test
    {standard input}:696    .text.Ultra_sonic_filter:00000208 $d
    {standard input}:713    .text.Ultrasoinc_Obstructet_Test:00000000 $t
    {standard input}:782    .text.Ultrasoinc_Obstructet_Test:00000054 $d
    {standard input}:793    .text.Collision_voidance:00000000 $t
    {standard input}:798    .text.Collision_voidance:00000000 Collision_voidance
    {standard input}:1041   .text.Obstacel_CA_check:00000000 Obstacel_CA_check
    {standard input}:1008   .text.Collision_voidance:00000144 $d
    {standard input}:1036   .text.Obstacel_CA_check:00000000 $t
    {standard input}:1275   .text.set_CA_LED:00000000 set_CA_LED
    {standard input}:1249   .text.Obstacel_CA_check:00000174 $d
    {standard input}:1267   .bss.toggel_ervy_x:00000000 toggel_ervy_x
    {standard input}:1268   .bss.toggel_ervy_x:00000000 $d
    {standard input}:1270   .text.set_CA_LED:00000000 $t
    {standard input}:1449   .text.set_CA_LED:00000104 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__aeabi_i2f
__aeabi_fdiv
Exp_moving_average
Steering_Angles
__aeabi_fcmpgt
__aeabi_fcmplt
within_MAX_MIN
__aeabi_fcmpeq
__aeabi_fsub
__aeabi_fmul
CAN_Ultrasonic_No_messasge_count
Speeds
Speeds_CA
__aeabi_fadd
__aeabi_f2d
__aeabi_dcmpgt
__aeabi_dadd
__aeabi_dcmplt
__aeabi_dsub
__aeabi_d2f
vector_abs_value
trajectory_angle
Trajctory
LED_CA_FRONT
LED_CA_LEFT
LED_CA_RIGHT
