   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "global_ccu8.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_CCU8_StartPrescaler,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_CCU8_StartPrescaler:
  25              	.LFB137:
  26              	 .file 1 "C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc/xmc_ccu8.h"
   1:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
   2:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @file xmc_ccu8.h
   3:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @date 2017-09-15
   4:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
   5:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @cond
   6:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
   7:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMClib v2.1.20 - XMC Peripheral Driver Library 
   8:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
   9:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Copyright (c) 2015-2018, Infineon Technologies AG
  10:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * All rights reserved.                        
  11:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                                             
  12:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * following conditions are met:   
  14:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                                                                              
  15:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * disclaimer.                        
  17:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
  18:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
  21:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                                                                              
  24:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                                                                              
  32:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
  35:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  36:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Change History
  37:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * --------------
  38:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  39:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-02-20:
  40:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Initial <br>
  41:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Documentation updates <br>
  42:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  43:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-06-20:
  44:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  45:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Added XMC_CCU8_SLICE_LoadSelector() API, to select which compare register value has to be 
  46:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       during external load event.
  47:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  48:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-07-01:
  49:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - In XMC_CCU8_SLICE_CHECK_INTERRUPT macro, fixed the missing item for compare match down for
  50:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  51:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-07-24:
  52:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent() is updated to support XMC14 device. <br>
  53:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  54:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-08-17:
  55:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_PRESCALER_t enum is added to set the prescaler divider. <br>
  56:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_t is added for all the devices except XMC45 devices, t
  57:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       shadow transfer has to happen. <br>
  58:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SOURCE_OUT0_t, XMC_CCU8_SOURCE_OUT1_t, XMC_CCU8_SOURCE_OUT2_t, XMC_CCU8_SOURCE_OU
  59:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       to maps one of the ST to OUT0, OUT1, OUT3, OUT4 signals.
  60:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - In XMC_CCU8_SLICE_COMPARE_CONFIG_t structure, selector_out0, selector_out1, selector_out2,
  61:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       added to support XMC14 devices.
  62:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_EnableShadowTransfer() API is made as inline, to improve the speed. <br>
  63:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_EnableCascadedShadowTransfer(), XMC_CCU8_SLICE_DisableCascadedShadowTransfe
  64:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       XMC_CCU8_SLICE_SetShadowTransferMode() API are supported for all the devices except XMC45.
  65:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  66:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-09-29:
  67:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - In XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_t, two more enum items are added to support exte
  68:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       settings.
  69:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  70:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-10-07:
  71:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_SetTimerCompareMatchChannel1(), XMC_CCU8_SLICE_SetTimerCompareMatchChannel2
  72:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       added to update the respective compare registers directly.
  73:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_GetEvent() is made as inline.
  74:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_MULTI_IRQ_ID_t is added to support the XMC_CCU8_SLICE_EnableMultipleEvents(
  75:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       XMC_CCU8_SLICE_DisableMultipleEvents() APIs.
  76:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - DOC updates for the newly added APIs.
  77:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  78:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2016-03-09:
  79:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Optimization of write only registers
  80:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  81:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2016-05-20:
  82:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Added XMC_CCU8_SLICE_StopClearTimer()
  83:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Changed XMC_CCU8_SLICE_StopTimer() and XMC_CCU8_SLICE_ClearTimer() 
  84:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  85:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2017-04-27:
  86:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_SetPrescaler() changed div_val parameter to type XMC_CCU8_SLICE_PRESCALER_t
  87:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  88:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2017-09-15:
  89:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Fix XMC_CCU8_SLICE_SetShadowTransferMode()
  90:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Added parity checking functionality
  91:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  92:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @endcond
  93:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
  94:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
  95:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** #ifndef XMC_CCU8_H
  96:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** #define XMC_CCU8_H
  97:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
  98:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
  99:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * HEADER FILES
 100:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
 101:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** #include "xmc_common.h"
 102:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 103:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU80)
 104:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 105:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** #if UC_FAMILY == XMC1
 106:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  #include "xmc1_ccu8_map.h"
 107:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 108:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 109:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** #if UC_FAMILY == XMC4
 110:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  #include "xmc4_ccu8_map.h"
 111:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 112:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 113:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 114:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @addtogroup XMClib XMC Peripheral Library
 115:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @{
 116:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 117:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 118:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 119:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @addtogroup CCU8
 120:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 121:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @brief Capture Compare Unit 8 (CCU8) low level driver for XMC family of microcontrollers<br>
 122:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 123:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The CCU8 peripheral functions play a major role in applications that need complex Pulse Width Mo
 124:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * generation, with complementary high side and low side switches, multi phase control. These funct
 125:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * with a very flexible and programmable signal conditioning scheme, make the CCU8 the must have pe
 126:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * of the art motor control, multi phase and multi level power electronics systems.\n
 127:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Each CCU8 module is comprised of four identical 16 bit Capture/Compare Timer slices, CC8y (where
 128:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * timer slice can work in compare mode or in capture mode.
 129:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 130:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * APIs provided in this file cover the following functional blocks of CCU8:
 131:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -- Timer configuration, Capture configuration, Function/Event configuration, Interrupt configura
 132:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par Note:
 133:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 1. SLICE (APIs prefixed with e.g. XMC_CCU8_SLICE_)
 134:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2. Module (APIs are not having any prefix e.g. XMC_CCU8_)
 135:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 136:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par Timer(Compare mode) configuration:
 137:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This section of the LLD provides the configuration structure XMC_CCU8_SLICE_COMPARE_CONFIG_t, 
 138:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_DEAD_TIME_CONFIG_t and the initialization functions XMC_CCU8_SLICE_CompareInit(),
 139:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 140:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It can be used to:
 141:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Start and Stop the timer. (XMC_CCU8_SLICE_StartTimer(), XMC_CCU8_SLICE_StopTimer())
 142:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Update the period, compare, Dither, Prescaler  and Passive values. (XMC_CCU8_SLICE_SetTimerPe
 143:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    XMC_CCU8_SLICE_SetTimerCompareMatch(), XMC_CCU8_SLICE_SetPrescaler(), XMC_CCU8_SLICE_SetDithe
 144:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    XMC_CCU8_SLICE_SetPassiveLevel())
 145:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Configure the dead time.(XMC_CCU8_SLICE_SetDeadTimeValue(), XMC_CCU8_SLICE_SetDeadTimePrescal
 146:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Enable the slices to support multichannel mode. (XMC_CCU8_SLICE_EnableMultiChannelMode())
 147:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
 148:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par Capture configuration:
 149:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This section of the LLD provides the configuration structure XMC_CCU8_SLICE_CAPTURE_CONFIG_t and
 150:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * function XMC_CCU8_SLICE_CaptureInit().
 151:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 152:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It can be used to:
 153:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Configure the capture functionality. (XMC_CCU8_SLICE_Capture0Config(), XMC_CCU8_SLICE_Capture
 154:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Read the captured values along with the status, which indicate the value is latest or not.
 155:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    (XMC_CCU8_SLICE_GetCaptureRegisterValue())
 156:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
 157:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par Function/Event configuration:
 158:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This section of the LLD provides the configuration structure XMC_CCU8_SLICE_EVENT_CONFIG_t.
 159:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
 160:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It can be used to:
 161:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Enable and Disable the events. (XMC_CCU8_SLICE_EnableEvent(), XMC_CCU8_SLICE_DisableEvent())
 162:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Configure to start and stop the timer on external events.(XMC_CCU8_SLICE_StartConfig(), XMC_C
 163:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Modulation, external load and Gating of the timer output.(XMC_CCU8_SLICE_ModulationConfig(), 
 164:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    XMC_CCU8_SLICE_LoadConfig(), XMC_CCU8_SLICE_GateConfig())
 165:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Control the count direction of the timer based on the external event. (XMC_CCU8_SLICE_Directi
 166:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Count the external events.(XMC_CCU8_SLICE_CountConfig())
 167:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# External Trap. Which can be used as protective feature.(XMC_CCU8_SLICE_EnableTrap(), XMC_CCU8
 168:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    XMC_CCU8_SLICE_TrapConfig())
 169:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 170:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par Interrupt configuration:
 171:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This section of the LLD provides the function to configure the interrupt node to each event (XMC
 172:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 173:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @{
 174:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 175:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 176:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
 177:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * MACROS
 178:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
 179:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** #define XMC_CCU8_SLICE_CHECK_INTERRUPT(interrupt) \
 180:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****     ((interrupt == XMC_CCU8_SLICE_IRQ_ID_PERIOD_MATCH)           || \
 181:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_ONE_MATCH)              || \
 182:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_1)  || \
 183:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_1)|| \
 184:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_2)  || \
 185:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_2)|| \
 186:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_EVENT0)                 || \
 187:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_EVENT1)                 || \
 188:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_EVENT2)                 || \
 189:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_TRAP))
 190:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****      
 191:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** /* Macro to check if the slice ptr passed is valid */
 192:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** #define XMC_CCU8_SLICE_CHECK_COMP_CHANNEL(cmp_channel) \
 193:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****     ((cmp_channel == XMC_CCU8_SLICE_COMPARE_CHANNEL_1) || \
 194:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****      (cmp_channel == XMC_CCU8_SLICE_COMPARE_CHANNEL_2))
 195:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 196:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
 197:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * ENUMS
 198:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
 199:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 200:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 201:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Typedef for CCU8 Global data structure
 202:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 203:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef CCU8_GLOBAL_TypeDef XMC_CCU8_MODULE_t;
 204:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 205:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 206:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Typedef for CCU8 Slice data structure
 207:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 208:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef CCU8_CC8_TypeDef XMC_CCU8_SLICE_t;
 209:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 210:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 211:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Return Value of an API
 212:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 213:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_STATUS
 214:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 215:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_STATUS_OK      = 0U, /**< API fulfils request */
 216:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_STATUS_ERROR       , /**< API cannot fulfil request */
 217:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_STATUS_RUNNING     , /**< The timer slice is currently running */
 218:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_STATUS_IDLE          /**< The timer slice is currently idle */
 219:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_STATUS_t;
 220:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 221:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 222:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CCU8 module clock
 223:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 224:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_CLOCK
 225:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 226:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_CLOCK_SCU        = 0U, /**< Select the fCCU as the clock */
 227:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_CLOCK_EXTERNAL_A     , /**< External clock-A */
 228:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_CLOCK_EXTERNAL_B     , /**< External clock-B */
 229:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_CLOCK_EXTERNAL_C       /**< External clock-C */
 230:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_CLOCK_t;
 231:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 232:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 233:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CCU8 set the shadow transfer type for multichannel mode
 234:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 235:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER
 236:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 237:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE0       = (uint32_t)0x4000000, /**< Shadow transfe
 238:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                      only for slice
 239:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE0  = (uint32_t)0x4000400, /**< Shadow transfe
 240:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                      and hardware f
 241:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE1       = (uint32_t)0x8000000, /**< Shadow transfe
 242:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                      only for slice
 243:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE1  = (uint32_t)0x8000800, /**< Shadow transfe
 244:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                      and hardware f
 245:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE2       = (uint32_t)0x10000000, /**< Shadow transf
 246:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                       only for slic
 247:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE2  = (uint32_t)0x10001000, /**< Shadow transf
 248:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                       and hardware 
 249:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE3       = (uint32_t)0x20000000, /**< Shadow transf
 250:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                       only for slic
 251:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE3  = (uint32_t)0x20002000  /**< Shadow transf
 252:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                       and hardware 
 253:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_t;
 254:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 255:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 256:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Operational modes of CCU8 slice
 257:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 258:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MODE
 259:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 260:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODE_COMPARE  = 0U, /**< slice(CC8y) operates in Compare Mode */
 261:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODE_CAPTURE        /**< slice(CC8y) operates in Capture Mode */
 262:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MODE_t;
 263:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 264:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 265:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Slice Output selection
 266:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 267:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_OUTPUT
 268:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 269:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_0  = 1U, /**< Slice Output-0 */
 270:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_1  = 2U, /**< Slice Output-1 */
 271:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_2  = 4U, /**< Slice Output-2 */
 272:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_3  = 8U  /**< Slice Output-3 */
 273:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_OUTPUT_t;
 274:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 275:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 276:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Timer counting modes for the slice
 277:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 278:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TIMER_COUNT_MODE
 279:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 280:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_COUNT_MODE_EA  = 0U, /**< Edge Aligned Mode */
 281:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA        /**< Centre Aligned Mode */
 282:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TIMER_COUNT_MODE_t;
 283:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 284:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 285:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Timer repetition mode for the slice
 286:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 287:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TIMER_REPEAT_MODE
 288:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 289:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_REPEAT_MODE_REPEAT = 0U, /**< Repetitive mode: continuous mode of operation 
 290:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_REPEAT_MODE_SINGLE       /**< Single shot mode: Once a Period match/One matc
 291:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                      occurs timer goes to idle state */
 292:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t;
 293:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 294:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 295:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Timer counting direction for the CCU8 slice
 296:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 297:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TIMER_COUNT_DIR
 298:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 299:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_COUNT_DIR_UP   = 0U, /**< Counting up */
 300:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_COUNT_DIR_DOWN       /**< Counting down */
 301:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TIMER_COUNT_DIR_t;
 302:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 303:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 304:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Capture mode register sets
 305:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 306:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_CAP_REG_SET
 307:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 308:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_CAP_REG_SET_LOW  = 0U, /**< Capture register-0, Capture register-1 used */
 309:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_CAP_REG_SET_HIGH       /**< Capture register-0, Capture register-1 used */
 310:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_CAP_REG_SET_t;
 311:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 312:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 313:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Prescaler mode
 314:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 315:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_PRESCALER_MODE
 316:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 317:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_MODE_NORMAL = 0U, /**< Fixed division of module clock */
 318:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_MODE_FLOAT        /**< Floating divider */
 319:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_PRESCALER_MODE_t;
 320:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 321:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 322:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Timer output passive level
 323:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 324:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL
 325:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 326:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_LOW  = 0U, /**< Passive level = Low */
 327:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_HIGH       /**< Passive level = High */
 328:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t;
 329:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 330:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 331:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Compare Channel selection
 332:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 333:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_COMPARE_CHANNEL
 334:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 335:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_COMPARE_CHANNEL_1  = 0U, /**< Compare Channel-1 */
 336:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_COMPARE_CHANNEL_2        /**< Compare Channel-2 */
 337:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_COMPARE_CHANNEL_t;
 338:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 339:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 340:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Timer clock Divider
 341:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 342:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_PRESCALER
 343:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 344:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_1  = 0U, /**< Slice Clock = fccu8 */
 345:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_2      , /**< Slice Clock = fccu8/2 */
 346:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_4      , /**< Slice Clock = fccu8/4 */
 347:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_8      , /**< Slice Clock = fccu8/8 */
 348:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_16     , /**< Slice Clock = fccu8/16 */
 349:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_32     , /**< Slice Clock = fccu8/32 */
 350:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_64     , /**< Slice Clock = fccu8/64 */
 351:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_128    , /**< Slice Clock = fccu8/128 */
 352:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_256    , /**< Slice Clock = fccu8/256 */
 353:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_512    , /**< Slice Clock = fccu8/512 */
 354:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_1024   , /**< Slice Clock = fccu8/1024 */
 355:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_2048   , /**< Slice Clock = fccu8/2048 */
 356:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_4096   , /**< Slice Clock = fccu8/4096 */
 357:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_8192   , /**< Slice Clock = fccu8/8192 */
 358:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_16384  , /**< Slice Clock = fccu8/16384 */
 359:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_32768    /**< Slice Clock = fccu8/32768 */
 360:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_PRESCALER_t;
 361:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 362:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 363:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Dead Time Generator Clock Divider
 364:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 365:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_DTC_DIV
 366:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 367:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_DTC_DIV_1  = 0U, /**< DTC clock = Slice Clock */
 368:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_DTC_DIV_2      , /**< DTC clock = Slice Clock/2 */
 369:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_DTC_DIV_4      , /**< DTC clock = Slice Clock/4 */
 370:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_DTC_DIV_8        /**< DTC clock = Slice Clock/8 */
 371:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_DTC_DIV_t;
 372:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 373:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 374:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 375:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  The compare channel output which is routed to the slice output signal(STy).
 376:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 377:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_STATUS
 378:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 379:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_CHANNEL_1        = 0U, /**< Channel-1 status connected to Slice Status */
 380:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_CHANNEL_2            , /**< Channel-2 status connected to Slice Status */
 381:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_CHANNEL_1_AND_2      , /**< \b Wired \b AND of Channel-1 and Channel-2 stat
 382:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                     Slice status */
 383:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** #if ((UC_SERIES == XMC13) || (UC_SERIES == XMC14)) || defined(DOXYGEN)
 384:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_CHANNEL_1_OR_2         /**< \b Wired \b OR of Channel-1 and Channel-2 statu
 385:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                     status. @note Only available for XMC1300 and XM
 386:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 387:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_STATUS_t;
 388:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 389:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 390:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Compare channel for which modulation has to be applied
 391:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 392:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MODULATION_CHANNEL
 393:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 394:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_CHANNEL_NONE  = 0U, /**< No modulation */
 395:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_CHANNEL_1         , /**< Modulation for Compare Channel-1 */
 396:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_CHANNEL_2         , /**< Modulation for Compare Channel-2 */
 397:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_CHANNEL_1_AND_2     /**< Modulation for Compare Channel-1 and Compare C
 398:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MODULATION_CHANNEL_t;
 399:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 400:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 401:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  External Function list
 402:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 403:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_FUNCTION
 404:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 405:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_START           = 0U, /**< Start function */
 406:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_STOP                , /**< Stop function */
 407:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_CAPTURE_EVENT0      , /**< Capture Event-0 function, CCycapt0 signal is u
 408:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                      generation */
 409:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_CAPTURE_EVENT1      , /**< Capture Event-1 function, CCycapt1 signal is u
 410:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                      generation */
 411:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_GATING              , /**< Gating function */
 412:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_DIRECTION           , /**< Direction function */
 413:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_LOAD                , /**< Load function */
 414:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_COUNT               , /**< Counting function */
 415:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_OVERRIDE            , /**< Override function */
 416:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_MODULATION          , /**< Modulation function */
 417:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_TRAP                  /**< Trap function */
 418:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_FUNCTION_t;
 419:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 420:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 421:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  External Event list
 422:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 423:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_EVENT
 424:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 425:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_NONE  = 0U, /**< None */
 426:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_0         , /**< Event-0 */
 427:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_1         , /**< Event-1 */
 428:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_2           /**< Event-2 */
 429:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_t;
 430:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 431:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 432:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  External Event trigger criteria  - Edge sensitivity
 433:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 434:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY
 435:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 436:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_NONE          = 0U, /**< None */
 437:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_RISING_EDGE       , /**< Rising Edge of the input signal ge
 438:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                  event trigger */
 439:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_FALLING_EDGE      , /**< Falling Edge of the input signal g
 440:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                  trigger */
 441:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_DUAL_EDGE           /**< Both Rising and Falling edges caus
 442:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_t;
 443:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 444:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 445:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  External Event trigger criteria  - Level sensitivity
 446:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 447:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY
 448:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 449:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_HIGH = 0U, /**< Level sensitive functions react to 
 450:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_LOW  = 1U, /**< Level sensitive functions react to 
 451:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****     /* Below enum items can be utilised specific to the functionality */
 452:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_COUNT_UP_ON_LOW = 0U, /**< Timer counts up, during Low sta
 453:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_COUNT_UP_ON_HIGH = 1U /**< Timer counts up, during High st
 454:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_t;
 455:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 456:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 457:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Low pass filter Configuration. The External Event input should be stable for a selected number 
 458:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 459:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_EVENT_FILTER
 460:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 461:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_DISABLED  = 0U, /**< No Low Pass Filtering is applied */
 462:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_3_CYCLES      , /**< Input should be stable for 3 clock cycles */
 463:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_5_CYCLES      , /**< Input should be stable for 5 clock cycles */
 464:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_7_CYCLES        /**< Input should be stable for 7 clock cycles */
 465:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_FILTER_t;
 466:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 467:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 468:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  External Event Input list. This list depicts the possible input connections to the CCU8 slice.
 469:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Interconnects are specific to each device.
 470:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 471:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef uint8_t XMC_CCU8_SLICE_INPUT_t;
 472:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 473:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 474:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 475:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Actions that can be performed upon detection of an external Timer STOP event
 476:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 477:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_END_MODE
 478:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 479:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_END_MODE_TIMER_STOP       = 0U, /**< Stops the timer, without clearing TIMER regis
 480:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_END_MODE_TIMER_CLEAR          , /**< Without stopping timer, clears the TIMER regi
 481:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_END_MODE_TIMER_STOP_CLEAR       /**< Stops the timer and clears the TIMER register
 482:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_END_MODE_t;
 483:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 484:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 485:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Actions that can be performed upon detection of an external Timer START event
 486:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 487:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_START_MODE
 488:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 489:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_START_MODE_TIMER_START       = 0U, /**< Start the timer from the current count of 
 490:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_START_MODE_TIMER_START_CLEAR       /**< Clears the TIMER register and start the ti
 491:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_START_MODE_t;
 492:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 493:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 494:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Modulation of timer output signals
 495:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 496:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MODULATION_MODE
 497:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 498:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_MODE_CLEAR_ST_OUT  = 0U, /**< Clear ST and OUT signals */
 499:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_MODE_CLEAR_OUT           /**< Clear only the OUT signal */
 500:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MODULATION_MODE_t;
 501:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 502:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 503:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Trap exit mode
 504:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 505:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TRAP_EXIT_MODE
 506:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 507:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TRAP_EXIT_MODE_AUTOMATIC = 0U, /**< Clear trap state as soon as the trap signal is
 508:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TRAP_EXIT_MODE_SW              /**< Clear only when acknowledged by software */
 509:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TRAP_EXIT_MODE_t;
 510:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 511:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 512:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Timer clear on capture
 513:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 514:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TIMER_CLEAR_MODE
 515:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 516:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_CLEAR_MODE_NEVER    = 0U, /**< Never clear the timer on any capture event */
 517:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_CLEAR_MODE_CAP_HIGH     , /**< Clear only when timer value has been captured
 518:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_CLEAR_MODE_CAP_LOW      , /**< Clear only when timer value has been captured
 519:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_CLEAR_MODE_ALWAYS         /**< Always clear the timer upon detection of any 
 520:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TIMER_CLEAR_MODE_t;
 521:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 522:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 523:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Multi Channel Shadow transfer request configuration options
 524:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 525:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MCMS_ACTION
 526:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 527:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR          = 0U, /**< Transfer Compare and Period Shadow 
 528:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                 the actual registers upon MCS xfer 
 529:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP     = 1U, /**< Transfer Compare, Period and Presca
 530:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                 register values to the actual regis
 531:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                 request */
 532:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP_DIT = 3U  /**< Transfer Compare, Period ,Prescaler
 533:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                 Compare register values to the actu
 534:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                 MCS xfer request */
 535:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MCMS_ACTION_t;
 536:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 537:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 538:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Available Interrupt Event Ids
 539:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 540:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_IRQ_ID
 541:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 542:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_PERIOD_MATCH            = 0U , /**< Period match counting up */
 543:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_ONE_MATCH               = 1U , /**< One match counting down */
 544:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_1   = 2U , /**< Compare match counting up for channel 1
 545:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_1 = 3U , /**< Compare match counting down for channel
 546:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_2   = 4U , /**< Compare match counting up for channel 2
 547:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_2 = 5U , /**< Compare match counting down for channel
 548:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_EVENT0                  = 8U , /**< Event-0 occurrence */
 549:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_EVENT1                  = 9U , /**< Event-1 occurrence */
 550:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_EVENT2                  = 10U, /**< Event-2 occurrence */
 551:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_TRAP                    = 11U  /**< Trap occurrence */
 552:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_IRQ_ID_t;
 553:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 554:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 555:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Available Interrupt Event Ids, which is added to support multi event APIs
 556:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 557:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MULTI_IRQ_ID
 558:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 559:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_PERIOD_MATCH            = 0x1U,   /**< Period match counting up */
 560:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_ONE_MATCH               = 0x2U,   /**< One match counting down */
 561:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_UP_CH_1   = 0x4U,   /**< Compare match counting up for 
 562:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_DOWN_CH_1 = 0x8U,   /**< Compare match counting down fo
 563:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_UP_CH_2   = 0x10U,  /**< Compare match counting up for 
 564:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_DOWN_CH_2 = 0x20U,  /**< Compare match counting down fo
 565:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_EVENT0                  = 0x100U, /**< Event-0 occurrence */
 566:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_EVENT1                  = 0x200U, /**< Event-1 occurrence */
 567:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_EVENT2                  = 0x400U, /**< Event-2 occurrence */
 568:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MULTI_IRQ_ID_t;
 569:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 570:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 571:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Service Request Lines for CCU8. Event are mapped to these SR lines and these are used to generat
 572:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 573:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_SR_ID
 574:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 575:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SR_ID_0    = 0U, /**< Service Request Line-0 selected  */
 576:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SR_ID_1        , /**< Service Request Line-1 selected  */
 577:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SR_ID_2        , /**< Service Request Line-2 selected  */
 578:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SR_ID_3          /**< Service Request Line-3 selected  */
 579:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_SR_ID_t;
 580:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 581:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 582:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 583:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Slice shadow transfer options.
 584:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 585:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SHADOW_TRANSFER
 586:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 587:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_SLICE_0            = CCU8_GCSS_S0SE_Msk,  /**< Transfer Period, Compare 
 588:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           shadow register values to
 589:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           SLICE-0 */
 590:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_DITHER_SLICE_0     = CCU8_GCSS_S0DSE_Msk, /**< Transfer Dither compare s
 591:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           to actual register for SL
 592:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_PRESCALER_SLICE_0  = CCU8_GCSS_S0PSE_Msk, /**< Transfer Prescaler shadow
 593:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           actual register for SLICE
 594:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_SLICE_1            = CCU8_GCSS_S1SE_Msk,  /**< Transfer Period, Compare 
 595:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           shadow register values to
 596:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           SLICE-1 */
 597:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_DITHER_SLICE_1     = CCU8_GCSS_S1DSE_Msk, /**< Transfer Dither compare s
 598:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           to actual registers for S
 599:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_PRESCALER_SLICE_1  = CCU8_GCSS_S1PSE_Msk, /**< Transfer Prescaler shadow
 600:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           actual register for SLICE
 601:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_SLICE_2            = CCU8_GCSS_S2SE_Msk,  /**< Transfer Period, Compare 
 602:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           shadow register values to
 603:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           SLICE-2 */
 604:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_DITHER_SLICE_2     = CCU8_GCSS_S2DSE_Msk, /**< Transfer Dither compare s
 605:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           to actual register for SL
 606:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_PRESCALER_SLICE_2  = CCU8_GCSS_S2PSE_Msk, /**< Transfer Prescaler shadow
 607:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           actual register for SLICE
 608:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_SLICE_3            = CCU8_GCSS_S3SE_Msk,  /**< Transfer Period, Compare 
 609:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           shadow register values to
 610:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           SLICE-3 */
 611:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_DITHER_SLICE_3     = CCU8_GCSS_S3DSE_Msk, /**< Transfer Dither compare s
 612:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           to actual register for SL
 613:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_PRESCALER_SLICE_3  = CCU8_GCSS_S3PSE_Msk  /**< Transfer Prescaler shadow
 614:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           actual register for SLICE
 615:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SHADOW_TRANSFER_t;
 616:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 617:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** #if (UC_SERIES != XMC45) || defined(DOXYGEN)
 618:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 619:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Slice shadow transfer mode options.
 620:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @note Not available for XMC4500 series
 621:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 622:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE
 623:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 624:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_IN_PERIOD_MATCH_AND_ONE_MATCH = 0U, /**< Shadow transfer is d
 625:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                One match. */
 626:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_ONLY_IN_PERIOD_MATCH = 1U,  /**< Shadow transfer is done only
 627:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_ONLY_IN_ONE_MATCH = 2U  /**< Shadow transfer is done only in 
 628:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_t;
 629:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 630:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 631:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU8V3) || defined(DOXYGEN) /* Defined for XMC1400 devices only */
 632:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 633:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Output sources for OUTy0 signal
 634:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @note Only available for XMC1400 series
 635:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 636:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  typedef enum XMC_CCU8_SOURCE_OUT0
 637:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 638:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT0_ST1      = (uint32_t)0x0, /**< CCU8yST1 signal path is connected the CCU8x.O
 639:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT0_INV_ST1  = (uint32_t)0x1, /**< Inverted CCU8yST1 signal path is connected th
 640:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT0_ST2      = (uint32_t)0x2, /**< CCU8yST2 signal path is connected the CCU8x.O
 641:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT0_INV_ST2  = (uint32_t)0x3  /**< Inverted CCU8yST2 signal path is connected th
 642:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SOURCE_OUT0_t;
 643:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 644:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 645:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Output sources for OUTy1 signal
 646:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  @note Only available for XMC1400 series
 647:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 648:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  typedef enum XMC_CCU8_SOURCE_OUT1
 649:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 650:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT1_ST1      = (uint32_t)0x1, /**< CCU8yST1 signal path is connected the CCU8x.O
 651:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT1_INV_ST1  = (uint32_t)0x0, /**< Inverted CCU8yST1 signal path is connected th
 652:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT1_ST2      = (uint32_t)0x3, /**< CCU8yST2 signal path is connected the CCU8x.O
 653:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT1_INV_ST2  = (uint32_t)0x2  /**< Inverted CCU8yST2 signal path is connected th
 654:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SOURCE_OUT1_t;
 655:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 656:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 657:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Output sources for OUTy2 signal
 658:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @note Only available for XMC1400 series
 659:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 660:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  typedef enum XMC_CCU8_SOURCE_OUT2
 661:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 662:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT2_ST2      = (uint32_t)0x0, /**< CCU8yST2 signal path is connected the CCU8x.O
 663:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT2_INV_ST2  = (uint32_t)0x1, /**< Inverted CCU8yST2 signal path is connected th
 664:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT2_ST1      = (uint32_t)0x2, /**< CCU8yST1 signal path is connected the CCU8x.O
 665:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT2_INV_ST1  = (uint32_t)0x3  /**< Inverted CCU8yST1 signal path is connected th
 666:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SOURCE_OUT2_t;
 667:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 668:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 669:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Output sources for OUTy3 signal
 670:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  @note Only available for XMC1400 series
 671:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 672:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  typedef enum XMC_CCU8_SOURCE_OUT3
 673:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 674:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT3_ST2      = (uint32_t)0x1, /**< CCU8yST2 signal path is connected the CCU8x.O
 675:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT3_INV_ST2  = (uint32_t)0x0, /**< Inverted CCU8yST2 signal path is connected th
 676:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT3_ST1      = (uint32_t)0x3, /**< CCU8yST1 signal path is connected the CCU8x.O
 677:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT3_INV_ST1  = (uint32_t)0x2  /**< Inverted CCU8yST1 signal path is connected th
 678:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SOURCE_OUT3_t;
 679:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 680:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 681:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 682:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 683:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Output selector for CCU8x.OUT0-3
 684:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 685:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** #if !defined(CCU8V3) /* Defined for all devices except XMC1400 */
 686:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_OUT_PATH
 687:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 688:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_ST1      = (uint32_t)0x20000, /**< CCU8yST1 signal path is connected the C
 689:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_INV_ST1  = (uint32_t)0x20002, /**< Inverted CCU8yST1 signal path is connec
 690:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_ST1      = (uint32_t)0x40000, /**< CCU8yST1 signal path is connected the C
 691:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_INV_ST1  = (uint32_t)0x40004, /**< Inverted CCU8yST1 signal path is connec
 692:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_ST2      = (uint32_t)0x80000, /**< CCU8yST2 signal path is connected the C
 693:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_INV_ST2  = (uint32_t)0x80008, /**< Inverted CCU8yST2 signal path is connec
 694:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_ST2      = (uint32_t)0x100000,/**< CCU8yST2 signal path is connected the C
 695:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_INV_ST1  = (uint32_t)0x100010 /**< Inverted CCU8yST2 signal path is connec
 696:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_OUT_PATH_t;
 697:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** #else
 698:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_OUT_PATH
 699:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 700:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_ST1      = (uint32_t)0x000C0, /**< CCU8yST1 signal path is connected the C
 701:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_INV_ST1  = (uint32_t)0x000D0, /**< Inverted CCU8yST1 signal path is connec
 702:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_ST2      = (uint32_t)0x000E0, /**< CCU8yST2 signal path is connected the C
 703:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_INV_ST2  = (uint32_t)0x000F0, /**< Inverted CCU8yST2 signal path is connec
 704:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_ST1      = (uint32_t)0x00D00, /**< CCU8yST1 signal path is connected the C
 705:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_INV_ST1  = (uint32_t)0x00C00, /**< Inverted CCU8yST1 signal path is connec
 706:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_ST2      = (uint32_t)0x00F00, /**< CCU8yST2 signal path is connected the C
 707:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_INV_ST2  = (uint32_t)0x00E00, /**< Inverted CCU8yST2 signal path is connec
 708:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_ST2      = (uint32_t)0x0C000, /**< CCU8yST2 signal path is connected the C
 709:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_INV_ST2  = (uint32_t)0x0D000, /**< Inverted CCU8yST2 signal path is connec
 710:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_ST1      = (uint32_t)0x0E000, /**< CCU8yST1 signal path is connected the C
 711:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_INV_ST1  = (uint32_t)0x0F000, /**< Inverted CCU8yST1 signal path is connec
 712:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_ST2      = (uint32_t)0xD0000, /**< CCU8yST2 signal path is connected the C
 713:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_INV_ST2  = (uint32_t)0xC0000, /**< Inverted CCU8yST2 signal path is connec
 714:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_ST1      = (uint32_t)0xF0000, /**< CCU8yST1 signal path is connected the C
 715:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_INV_ST1  = (uint32_t)0xE0000  /**< Inverted CCU8yST1 signal path is connec
 716:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_OUT_PATH_t;
 717:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 718:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 719:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Immediate write into configuration register
 720:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  @note Only available for XMC1400 series
 721:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 722:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_WRITE_INTO
 723:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 724:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_PERIOD_CONFIGURATION = CCU8_CC8_STC_IRPC_Msk,                  /**< Imm
 725:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 726:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Con
 727:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_COMPARE1_CONFIGURATION = CCU8_CC8_STC_IRCC1_Msk,               /**< Imm
 728:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 729:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Con
 730:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_COMPARE2_CONFIGURATION = CCU8_CC8_STC_IRCC2_Msk,               /**< Imm
 731:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 732:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Con
 733:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_PASSIVE_LEVEL_CONFIGURATION = CCU8_CC8_STC_IRLC_Msk,           /**< Imm
 734:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 735:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                            Config
 736:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_DITHER_VALUE_CONFIGURATION = CCU8_CC8_STC_IRDC_Msk,            /**< Imm
 737:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 738:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                            Config
 739:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_FLOATING_PRESCALER_VALUE_CONFIGURATION = CCU8_CC8_STC_IRFC_Msk /**< Imm
 740:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 741:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Val
 742:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_WRITE_INTO_t;
 743:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 744:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 745:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 746:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Automatic Shadow Transfer request when writing into shadow register
 747:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  @note Only available for XMC1400 series
 748:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 749:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO
 750:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 751:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_PERIOD_SHADOW = CCU8_CC8_STC_ASPC_Msk,        
 752:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 753:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 754:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 755:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_COMPARE1_SHADOW = CCU8_CC8_STC_ASCC1_Msk,     
 756:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 757:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 758:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 759:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_COMPARE2_SHADOW = CCU8_CC8_STC_ASCC2_Msk,     
 760:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 761:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 762:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 763:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_PASSIVE_LEVEL = CCU8_CC8_STC_ASLC_Msk,        
 764:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 765:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 766:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_DITHER_SHADOW = CCU8_CC8_STC_ASDC_Msk,        
 767:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 768:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 769:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_FLOATING_PRESCALER_SHADOW = CCU8_CC8_STC_ASFC_
 770:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 771:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 772:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 773:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 774:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_t;
 775:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 776:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 777:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 778:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  CCU8 slice mask which can be used for the APIs as input where multi slice support is available
 779:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 780:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MASK
 781:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 782:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MASK_SLICE_0  = 1U , /**< SLICE-0 */
 783:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MASK_SLICE_1  = 2U , /**< SLICE-1 */
 784:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MASK_SLICE_2  = 4U , /**< SLICE-2 */
 785:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MASK_SLICE_3  = 8U   /**< SLICE-3 */
 786:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MASK_t;
 787:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 788:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 789:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Selects which signal is controlling the delay between the change at the CCU8 outputs and effect
 790:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 791:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_PARITY_CHECKER_DELAY_INPUT
 792:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 793:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DELAY_INPUT_IGBTA = 0 << CCU8_GPCHK_PCDS_Pos,
 794:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DELAY_INPUT_IGBTB = 1 << CCU8_GPCHK_PCDS_Pos,
 795:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DELAY_INPUT_IGBTC = 2 << CCU8_GPCHK_PCDS_Pos,
 796:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DELAY_INPUT_IGBTD = 3 << CCU8_GPCHK_PCDS_Pos
 797:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_PARITY_CHECKER_DELAY_INPUT_t;
 798:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 799:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 800:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 801:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Selects which signal contains the driver parity information
 802:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 803:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_PARITY_CHECKER_DRIVER_INPUT
 804:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 805:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DRIVER_INPUT_SLICE_0 = 0 << CCU8_GPCHK_PISEL_Pos,
 806:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DRIVER_INPUT_SLICE_1 = 1 << CCU8_GPCHK_PISEL_Pos,
 807:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DRIVER_INPUT_SLICE_2 = 2 << CCU8_GPCHK_PISEL_Pos,
 808:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DRIVER_INPUT_SLICE_3 = 3 << CCU8_GPCHK_PISEL_Pos,
 809:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_PARITY_CHECKER_DRIVER_INPUT_t;
 810:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 811:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 812:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Selects if we have an odd or even parity
 813:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 814:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_PARITY_CHECKER_TYPE
 815:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 816:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_TYPE_EVEN = 0 << CCU8_GPCHK_PCTS_Pos,
 817:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_TYPE_ODD = 1 << CCU8_GPCHK_PCTS_Pos,
 818:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_PARITY_CHECKER_TYPE_t;
 819:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 820:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
 821:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * DATA STRUCTURES
 822:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
 823:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 824:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 825:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Configuration data structure of an External Event(Event-0/1/2).
 826:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Needed to configure the various aspects of an External Event.
 827:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  This structure will not connect the external event with an external function.
 828:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 829:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef struct XMC_CCU8_SLICE_EVENT_CONFIG
 830:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 831:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_INPUT_t                   mapped_input; /**< Required input signal for the Event. 
 832:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_t  edge;         /**< Select the event edge of the input si
 833:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                               This is needed for an edge sensitive 
 834:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_t level;        /**< Select the event level of the input s
 835:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                               This is needed for an level sensitive
 836:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_t            duration;     /**< Low Pass filter duration in terms of 
 837:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_CONFIG_t;
 838:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 839:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** /*Anonymous structure/union guard start*/
 840:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(__CC_ARM)
 841:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   #pragma push
 842:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   #pragma anon_unions
 843:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** #elif defined(__TASKING__)
 844:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   #pragma warning 586
 845:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 846:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 847:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 848:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Dead Time configuration
 849:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 850:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef struct XMC_CCU8_SLICE_DEAD_TIME_CONFIG
 851:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 852:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 853:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 854:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 855:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 856:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t enable_dead_time_channel1 : 1; /**< Enable dead time for Compare Channel-1 */
 857:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t enable_dead_time_channel2 : 1; /**< Enable dead time for Compare Channel-2 */
 858:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel1_st_path : 1;          /**< Should dead time be applied to ST output of Comp
 859:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel1_inv_st_path : 1;      /**< Should dead time be applied to inverse ST output
 860:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                    Compare Channel-1? */
 861:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel2_st_path : 1;          /**< Should dead time be applied to ST output of Comp
 862:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel2_inv_st_path : 1;      /**< Should dead time be applied to inverse ST output
 863:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                    Compare Channel-2? */
 864:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t div : 2;                       /**< Dead time prescaler divider value.
 865:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                    Accepts enum ::XMC_CCU8_SLICE_DTC_DIV_t*/
 866:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 24;
 867:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 868:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t dtc;
 869:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 870:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 871:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 872:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 873:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 874:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel1_st_rising_edge_counter : 8; /**< Contains the delay value that is applied t
 875:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                       for compare channel-1. Range: [0x0 to 0xFF]
 876:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel1_st_falling_edge_counter : 8; /**< Contains the delay value that is applied 
 877:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                        for compare channel-1. Range: [0x0 to 0xFF
 878:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 16;
 879:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 880:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t dc1r;
 881:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 882:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 883:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 884:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 885:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 886:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel2_st_rising_edge_counter : 8; /**< Contains the delay value that is applied t
 887:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                     for compare channel-2. Range: [0x0 to 0xFF]*/
 888:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel2_st_falling_edge_counter : 8; /**< Contains the delay value that is applied 
 889:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                     for compare channel-2. Range: [0x0 to 0xFF]*/
 890:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 16;
 891:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 892:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t dc2r;
 893:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 894:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_DEAD_TIME_CONFIG_t;
 895:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 896:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 897:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Configuration data structure for CCU8 slice. Specifically configures the CCU8 slice to compare 
 898:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  This excludes event and function configuration.
 899:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 900:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef struct XMC_CCU8_SLICE_COMPARE_CONFIG
 901:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 902:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 903:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 904:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 905:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 906:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t timer_mode : 1;         /**< Edge aligned or Centre Aligned.
 907:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SLICE_TIMER_COUNT_MODE_t */
 908:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t monoshot : 1;           /**< Single shot or Continuous mode .
 909:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t */
 910:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t shadow_xfer_clear : 1; /**< Should PR and CR shadow xfer happen when timer is cleare
 911:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 10;
 912:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t dither_timer_period: 1; /**< Can the period of the timer dither? */
 913:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t dither_duty_cycle : 1;  /**< Can the compare match of the timer dither? */
 914:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 1;
 915:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t prescaler_mode: 1;      /**< Normal or floating prescaler mode.
 916:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SLICE_PRESCALER_MODE_t */
 917:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 8;
 918:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t mcm_ch1_enable : 1;     /**< Multi-Channel mode for compare channel 1 enable? */
 919:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t mcm_ch2_enable : 1;     /**< Multi-Channel mode for compare channel 2 enable? */
 920:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 2;
 921:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t slice_status : 2;       /**< Which of the two channels drives the slice status outpu
 922:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_STATUS_t*/
 923:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 1;
 924:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 925:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t tc;
 926:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 927:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 928:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 929:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 930:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 931:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t passive_level_out0 : 1; /**< ST and OUT passive levels Configuration for OUT0. 
 932:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t */
 933:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t passive_level_out1 : 1; /**< ST and OUT passive levels Configuration for OUT1. 
 934:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t */
 935:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t passive_level_out2 : 1; /**< ST and OUT passive levels Configuration for OUT2. 
 936:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t */
 937:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t passive_level_out3 : 1; /**< ST and OUT passive levels Configuration for OUT3. 
 938:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t */
 939:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 28;
 940:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 941:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t psl;
 942:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 943:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 944:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 945:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 946:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 947:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t asymmetric_pwm : 1;     /**< Should the PWM be a function of the 2 compare channels
 948:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             rather than period value? */
 949:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   #if !defined(CCU8V3)    /* Defined for all devices except XMC1400 */                             
 950:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t invert_out0 : 1;        /**< Should inverted ST of Channel-1 be connected to OUT0? *
 951:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t invert_out1 : 1;        /**< Should inverted ST of Channel-1 be connected to OUT1? *
 952:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t invert_out2 : 1;        /**< Should inverted ST of Channel-2 be connected to OUT2? *
 953:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t invert_out3 : 1;        /**< Should inverted ST of Channel-2 be connected to OUT3? *
 954:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 27;
 955:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   #else
 956:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 3;
 957:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t selector_out0 : 2;      /**< Connect ST or inverted ST of Channel-1 or Channel-2 be 
 958:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SOURCE_OUT0_t 
 959:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             refer OCS1 bit-field of CHC register. 
 960:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 											@note Only available for XMC1400 series */
 961:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 2;
 962:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t selector_out1 : 2;      /**< Connect ST or inverted ST of Channel-1 or Channel-2 be 
 963:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SOURCE_OUT1_t 
 964:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             refer OCS2 bit-field of CHC register. 
 965:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 											@note Only available for XMC1400 series */
 966:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 2;
 967:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t selector_out2 : 2;      /**< Connect ST or inverted ST of Channel-1 or Channel-2 be 
 968:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SOURCE_OUT2_t 
 969:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             refer OCS3 bit-field of CHC register.
 970:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 											@note Only available for XMC1400 series */
 971:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 2;
 972:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t selector_out3 : 2;      /**< Connect ST or inverted ST of Channel-1 or Channel-2 be 
 973:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SOURCE_OUT3_t 
 974:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             refer OCS4 bit-field of CHC register.
 975:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 											@note Only available for XMC1400 series */
 976:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 14;
 977:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   #endif
 978:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 979:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t chc;
 980:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 981:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t prescaler_initval : 4;      /**< Initial prescaler divider value 
 982:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SLICE_PRESCALER_t */
 983:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t float_limit : 4;            /**< The max value which the prescaler divider can increment
 984:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Range : [0 to 15] */
 985:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t dither_limit : 4;           /**< The value that determines the spreading of dithering 
 986:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Range : [0 to 15] */
 987:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t timer_concatenation : 1;    /**< Enables the concatenation of the timer if true*/
 988:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_COMPARE_CONFIG_t;
 989:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 990:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 991:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Configuration data structure for CCU8 slice. Specifically configures the CCU8 slice to capture 
 992:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  This excludes event and function configuration.
 993:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 994:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef struct XMC_CCU8_SLICE_CAPTURE_CONFIG
 995:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 996:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 997:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 998:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 999:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
1000:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 4;
1001:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t fifo_enable : 1;      /**< Should the capture registers be setup as a FIFO?(Extended
1002:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t timer_clear_mode : 2; /**< How should the timer register be cleared upon detection o
1003:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****                                           Accepts enum ::XMC_CCU8_SLICE_TIMER_CLEAR_MODE_t */
1004:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 4;
1005:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t same_event : 1;       /**< Should the capture event for C1V/C0V and C3V/C2V be same 
1006:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t ignore_full_flag : 1; /**< Should updates to capture registers follow full flag rule
1007:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 3;
1008:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t prescaler_mode: 1;    /**< Normal or floating prescaler Accepts enum :: XMC_CCU8_SLI
1009:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 15;
1010:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
1011:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t tc;
1012:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
1013:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t prescaler_initval : 4;    /**< Prescaler divider value */
1014:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t float_limit : 4;          /**< The max value which the prescaler divider can increment t
1015:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t timer_concatenation : 1;    /**< Enables the concatenation of the timer */
1016:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_CAPTURE_CONFIG_t;
1017:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** /*Anonymous structure/union guard end*/
1018:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(__CC_ARM)
1019:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   #pragma pop
1020:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** #elif defined(__TASKING__)
1021:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   #pragma warning restore
1022:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1023:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
1024:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * API Prototypes
1025:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
1026:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** #ifdef __cplusplus
1027:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** extern "C" {
1028:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1029:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1030:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_IsValidModule(const XMC_CCU8_MODULE_t *const module)
1031:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1032:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   bool tmp = false;
1033:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   
1034:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = (module == CCU80);
1035:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   
1036:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81)
1037:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (module == CCU81);
1038:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1039:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   
1040:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   return tmp;  
1041:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** } 
1042:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1043:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_IsValidSlice(const XMC_CCU8_SLICE_t *const slice)
1044:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1045:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   bool tmp = false;
1046:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   
1047:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = (slice == CCU80_CC80);
1048:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU80_CC81)  
1049:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU80_CC81);
1050:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1051:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU80_CC82)  
1052:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU80_CC82);
1053:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1054:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU80_CC83)  
1055:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU80_CC83);
1056:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1057:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81)  
1058:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU81_CC80);
1059:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81_CC81)  
1060:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU81_CC81);
1061:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1062:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81_CC82)  
1063:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU81_CC82);
1064:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1065:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81_CC83)  
1066:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU81_CC83);
1067:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1068:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif 
1069:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  
1070:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   return tmp;  
1071:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** } 
1072:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1073:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1074:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1075:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mcs_action multi-channel shadow transfer request configuration
1076:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1077:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1078:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1079:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1080:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Initialization of global register GCTRL.\n\n
1081:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  As part of module initialization, behaviour of the module upon detection
1082:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Multi-Channel Mode trigger is configured. Will also invoke the XMC_CCU8_EnableModule().
1083:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  The API call would bring up the required CCU8 module and also initialize the module for
1084:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  the required multi-channel shadow transfer.
1085:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1086:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1087:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_CompareInit()<BR> XMC_CCU8_SLICE_CaptureInit().
1088:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1089:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_Init(XMC_CCU8_MODULE_t *const module, const XMC_CCU8_SLICE_MCMS_ACTION_t mcs_action);
1090:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1091:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1092:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1093:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1094:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1095:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1096:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1097:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables the CCU8 module and brings it to active state.\n\n
1098:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Also disables the gating of the clock signal (if applicable depending on the device being select
1099:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Invoke this API before any operations are done on the CCU8 module. Invoked from  XMC_CCU8_Init()
1100:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1101:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1102:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SetModuleClock()<BR>  XMC_CCU8_DisableModule()<BR>  XMC_CCU8_StartPrescaler().
1103:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1104:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_EnableModule(XMC_CCU8_MODULE_t *const module);
1105:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1106:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1107:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1108:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1109:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1110:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1111:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1112:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Brings the CCU8 module to reset state and enables gating of the clock signal(if applicable depen
1113:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * on the device being selected).\n\n
1114:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Invoke this API when a CCU8 module needs to be disabled completely.
1115:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Any operation on the CCU8 module will have no effect after this API is called.
1116:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1117:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1118:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableModule()<BR> XMC_CCU8_DisableModule().
1119:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1120:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_DisableModule(XMC_CCU8_MODULE_t *const module);
1121:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1122:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1123:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1124:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param clock Choice of input clock to the module
1125:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1126:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1127:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1128:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1129:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Selects the Module Clock by configuring GCTRL.PCIS bits.\n\n
1130:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  There are 3 potential clock sources. This API helps to select the required clock source.
1131:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Call to this API is valid after the XMC_CCU8_Init().
1132:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1133:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1134:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * None.<BR>
1135:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1136:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SetModuleClock(XMC_CCU8_MODULE_t *const module, const XMC_CCU8_CLOCK_t clock);
1137:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1138:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1139:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1140:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1141:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1142:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1143:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1144:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1145:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Starts the prescaler and restores clocks to the timer slices, by setting GIDLC.SPRB bit.<br>\n
1146:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Once the input to the prescaler has been chosen and the prescaler divider of all slices program
1147:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  the prescaler itself may be started. Invoke this  API after XMC_CCU8_Init()
1148:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  (Mandatory to fully initialize the module).
1149:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1150:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1151:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_Init()<BR>  XMC_CCU8_EnableClock()<BR>  XMC_CCU8_DisableClock()<BR>  XMC_CCU8_StartPres
1152:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_StopPrescaler().
1153:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1154:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_StartPrescaler(XMC_CCU8_MODULE_t *const module)
1155:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** {
  27              	 .loc 1 1155 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
1156:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_StartPrescaler:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1157:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLC |= (uint32_t) CCU8_GIDLC_SPRB_Msk;
  43              	 .loc 1 1157 0
  44 0008 7B68     	 ldr r3,[r7,#4]
  45 000a DB68     	 ldr r3,[r3,#12]
  46 000c 43F48072 	 orr r2,r3,#256
  47 0010 7B68     	 ldr r3,[r7,#4]
  48 0012 DA60     	 str r2,[r3,#12]
1158:C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_ccu8.h **** }
  49              	 .loc 1 1158 0
  50 0014 0C37     	 adds r7,r7,#12
  51              	.LCFI3:
  52              	 .cfi_def_cfa_offset 4
  53 0016 BD46     	 mov sp,r7
  54              	.LCFI4:
  55              	 .cfi_def_cfa_register 13
  56              	 
  57 0018 5DF8047B 	 ldr r7,[sp],#4
  58              	.LCFI5:
  59              	 .cfi_restore 7
  60              	 .cfi_def_cfa_offset 0
  61 001c 7047     	 bx lr
  62              	 .cfi_endproc
  63              	.LFE137:
  65 001e 00BF     	 .section .text.GLOBAL_CCU8_GetAppVersion,"ax",%progbits
  66              	 .align 2
  67              	 .global GLOBAL_CCU8_GetAppVersion
  68              	 .thumb
  69              	 .thumb_func
  71              	GLOBAL_CCU8_GetAppVersion:
  72              	.LFB224:
  73              	 .file 2 "../Dave/Generated/GLOBAL_CCU8/global_ccu8.c"
   1:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c **** /**
   2:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c ****  * @file global_ccu8.c
   3:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c ****  * @date 2016-02-10
   4:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c ****  *
   5:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c ****  * NOTE:
   6:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c ****  *
   8:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c ****  * @cond
   9:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c ****  **************************************************************************************************
  10:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c ****  * GLOBAL_CCU8 v4.1.12 - Configures the global properties of CCU8x peripheral instance.
  11:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c ****  *
  12:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c ****  * Copyright (c) 2016, Infineon Technologies AG
  13:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c ****  * All rights reserved.
  14:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c ****  *
  15:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  16:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c ****  * following conditions are met:
  17:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c ****  *
  18:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  19:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c ****  *   disclaimer.
  20:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c ****  *
  21:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  22:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  23:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c ****  *
  24:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  25:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c ****  *   products derived from this software without specific prior written permission.
  26:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c ****  *
  27:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  28:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  29:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  30:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  31:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  32:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  33:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  34:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c ****  *
  35:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  36:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c ****  * with Infineon Technologies AG (dave@infineon.com).
  37:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c ****  **************************************************************************************************
  38:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c ****  *
  39:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c ****  * Change History
  40:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c ****  * --------------
  41:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c ****  *
  42:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c ****  * 2015-02-16:
  43:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c ****  *     - Initial version<br>
  44:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c ****  *
  45:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c ****  * @endcond
  46:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c ****  *
  47:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c ****  */
  48:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c **** /**************************************************************************************************
  49:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c ****  * HEADER FILES
  50:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c ****  **************************************************************************************************
  51:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c **** 
  52:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c **** #include "global_ccu8.h"
  53:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c **** 
  54:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c **** /**************************************************************************************************
  55:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c ****  * MACROS
  56:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c ****  **************************************************************************************************
  57:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c **** 
  58:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c **** /**************************************************************************************************
  59:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c ****  * LOCAL DATA
  60:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c ****  **************************************************************************************************
  61:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c ****  
  62:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c **** /**************************************************************************************************
  63:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c ****  * LOCAL ROUTINES
  64:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c ****  **************************************************************************************************
  65:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c **** 
  66:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c ****  /*************************************************************************************************
  67:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c ****  * API IMPLEMENTATION
  68:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c ****  **************************************************************************************************
  69:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c **** /* Returns the version of the GLOBAL_CCU8 APP. */
  70:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c **** DAVE_APP_VERSION_t GLOBAL_CCU8_GetAppVersion(void)
  71:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c **** {
  74              	 .loc 2 71 0
  75              	 .cfi_startproc
  76              	 
  77              	 
  78              	 
  79 0000 80B4     	 push {r7}
  80              	.LCFI6:
  81              	 .cfi_def_cfa_offset 4
  82              	 .cfi_offset 7,-4
  83 0002 83B0     	 sub sp,sp,#12
  84              	.LCFI7:
  85              	 .cfi_def_cfa_offset 16
  86 0004 00AF     	 add r7,sp,#0
  87              	.LCFI8:
  88              	 .cfi_def_cfa_register 7
  72:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c ****   DAVE_APP_VERSION_t version;
  73:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c **** 
  74:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c ****   version.major = GLOBAL_CCU8_MAJOR_VERSION;
  89              	 .loc 2 74 0
  90 0006 0423     	 movs r3,#4
  91 0008 3B70     	 strb r3,[r7]
  75:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c ****   version.minor = GLOBAL_CCU8_MINOR_VERSION;
  92              	 .loc 2 75 0
  93 000a 0123     	 movs r3,#1
  94 000c 7B70     	 strb r3,[r7,#1]
  76:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c ****   version.patch = GLOBAL_CCU8_PATCH_VERSION;
  95              	 .loc 2 76 0
  96 000e 0C23     	 movs r3,#12
  97 0010 BB70     	 strb r3,[r7,#2]
  77:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c **** 
  78:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c ****   return version;
  98              	 .loc 2 78 0
  99 0012 3B1D     	 adds r3,r7,#4
 100 0014 3A46     	 mov r2,r7
 101 0016 1268     	 ldr r2,[r2]
 102 0018 1146     	 mov r1,r2
 103 001a 1980     	 strh r1,[r3]
 104 001c 0233     	 adds r3,r3,#2
 105 001e 120C     	 lsrs r2,r2,#16
 106 0020 1A70     	 strb r2,[r3]
 107 0022 0023     	 movs r3,#0
 108 0024 3A79     	 ldrb r2,[r7,#4]
 109 0026 62F30703 	 bfi r3,r2,#0,#8
 110 002a 7A79     	 ldrb r2,[r7,#5]
 111 002c 62F30F23 	 bfi r3,r2,#8,#8
 112 0030 BA79     	 ldrb r2,[r7,#6]
 113 0032 62F31743 	 bfi r3,r2,#16,#8
  79:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c **** }
 114              	 .loc 2 79 0
 115 0036 1846     	 mov r0,r3
 116 0038 0C37     	 adds r7,r7,#12
 117              	.LCFI9:
 118              	 .cfi_def_cfa_offset 4
 119 003a BD46     	 mov sp,r7
 120              	.LCFI10:
 121              	 .cfi_def_cfa_register 13
 122              	 
 123 003c 5DF8047B 	 ldr r7,[sp],#4
 124              	.LCFI11:
 125              	 .cfi_restore 7
 126              	 .cfi_def_cfa_offset 0
 127 0040 7047     	 bx lr
 128              	 .cfi_endproc
 129              	.LFE224:
 131 0042 00BF     	 .section .text.GLOBAL_CCU8_Init,"ax",%progbits
 132              	 .align 2
 133              	 .global GLOBAL_CCU8_Init
 134              	 .thumb
 135              	 .thumb_func
 137              	GLOBAL_CCU8_Init:
 138              	.LFB225:
  80:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c **** 
  81:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c **** /* Initializes the slice with the generated configuration */
  82:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c **** GLOBAL_CCU8_STATUS_t GLOBAL_CCU8_Init(GLOBAL_CCU8_t* handle)
  83:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c **** {
 139              	 .loc 2 83 0
 140              	 .cfi_startproc
 141              	 
 142              	 
 143 0000 80B5     	 push {r7,lr}
 144              	.LCFI12:
 145              	 .cfi_def_cfa_offset 8
 146              	 .cfi_offset 7,-8
 147              	 .cfi_offset 14,-4
 148 0002 82B0     	 sub sp,sp,#8
 149              	.LCFI13:
 150              	 .cfi_def_cfa_offset 16
 151 0004 00AF     	 add r7,sp,#0
 152              	.LCFI14:
 153              	 .cfi_def_cfa_register 7
 154 0006 7860     	 str r0,[r7,#4]
  84:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c ****   XMC_ASSERT("GLOBAL_CCU8_Init:NULL handler", (NULL != handle));
  85:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c **** 
  86:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c ****   if (false == handle->is_initialized)
 155              	 .loc 2 86 0
 156 0008 7B68     	 ldr r3,[r7,#4]
 157 000a 5B7B     	 ldrb r3,[r3,#13]
 158 000c 83F00103 	 eor r3,r3,#1
 159 0010 DBB2     	 uxtb r3,r3
 160 0012 002B     	 cmp r3,#0
 161 0014 0FD0     	 beq .L5
  87:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c ****   {
  88:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c ****     /* Enable CCU8 module */
  89:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c ****     XMC_CCU8_Init(handle->module_ptr,handle->mcs_action);
 162              	 .loc 2 89 0
 163 0016 7B68     	 ldr r3,[r7,#4]
 164 0018 9A68     	 ldr r2,[r3,#8]
 165 001a 7B68     	 ldr r3,[r7,#4]
 166 001c 1B7B     	 ldrb r3,[r3,#12]
 167 001e 1046     	 mov r0,r2
 168 0020 1946     	 mov r1,r3
 169 0022 FFF7FEFF 	 bl XMC_CCU8_Init
  90:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c ****     /* Start the prescaler */
  91:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c ****     XMC_CCU8_StartPrescaler(handle->module_ptr);
 170              	 .loc 2 91 0
 171 0026 7B68     	 ldr r3,[r7,#4]
 172 0028 9B68     	 ldr r3,[r3,#8]
 173 002a 1846     	 mov r0,r3
 174 002c FFF7FEFF 	 bl XMC_CCU8_StartPrescaler
  92:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c ****     /* Restricts multiple initializations */
  93:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c ****     handle->is_initialized = true;
 175              	 .loc 2 93 0
 176 0030 7B68     	 ldr r3,[r7,#4]
 177 0032 0122     	 movs r2,#1
 178 0034 5A73     	 strb r2,[r3,#13]
 179              	.L5:
  94:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c ****   }
  95:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c **** 
  96:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c ****   return (GLOBAL_CCU8_STATUS_SUCCESS);
 180              	 .loc 2 96 0
 181 0036 0023     	 movs r3,#0
  97:../Dave/Generated/GLOBAL_CCU8/global_ccu8.c **** }
 182              	 .loc 2 97 0
 183 0038 1846     	 mov r0,r3
 184 003a 0837     	 adds r7,r7,#8
 185              	.LCFI15:
 186              	 .cfi_def_cfa_offset 8
 187 003c BD46     	 mov sp,r7
 188              	.LCFI16:
 189              	 .cfi_def_cfa_register 13
 190              	 
 191 003e 80BD     	 pop {r7,pc}
 192              	 .cfi_endproc
 193              	.LFE225:
 195              	 .text
 196              	.Letext0:
 197              	 .file 3 "c:\\dave\\dave-ide-4.4.2-64bit\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 198              	 .file 4 "c:\\dave\\dave-ide-4.4.2-64bit\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 199              	 .file 5 "C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 200              	 .file 6 "C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/XMCLib/inc/xmc4_scu.h"
 201              	 .file 7 "C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Dave/Generated/DAVE_Common.h"
 202              	 .file 8 "../Dave/Generated/GLOBAL_CCU8/global_ccu8.h"
 203              	 .file 9 "C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/CMSIS/Include/core_cm4.h"
 204              	 .file 10 "C:/GitHub/Inverter_abgabe/Mobrob_Inverter/Libraries/CMSIS/Infineon/XMC4500_series/Include/system_XMC4500.h"
DEFINED SYMBOLS
                            *ABS*:00000000 global_ccu8.c
    {standard input}:20     .text.XMC_CCU8_StartPrescaler:00000000 $t
    {standard input}:24     .text.XMC_CCU8_StartPrescaler:00000000 XMC_CCU8_StartPrescaler
    {standard input}:66     .text.GLOBAL_CCU8_GetAppVersion:00000000 $t
    {standard input}:71     .text.GLOBAL_CCU8_GetAppVersion:00000000 GLOBAL_CCU8_GetAppVersion
    {standard input}:132    .text.GLOBAL_CCU8_Init:00000000 $t
    {standard input}:137    .text.GLOBAL_CCU8_Init:00000000 GLOBAL_CCU8_Init
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_CCU8_Init
