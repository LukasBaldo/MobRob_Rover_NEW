   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "main.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_GPIO_SetOutputHigh,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_GPIO_SetOutputHigh:
  25              	.LFB137:
  26              	 .file 1 "C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc/xmc_gpio.h"
   1:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** /**
   2:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * @file xmc_gpio.h
   3:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * @date 2015-06-20
   4:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   5:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * @cond
   6:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
   7:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMClib v2.1.20 - XMC Peripheral Driver Library 
   8:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   9:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * Copyright (c) 2015-2018, Infineon Technologies AG
  10:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * All rights reserved.                        
  11:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                             
  12:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * following conditions are met:   
  14:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  15:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * disclaimer.                        
  17:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  18:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  21:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  24:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  32:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  35:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  36:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * Change History
  37:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * --------------
  38:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  39:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-02-20:
  40:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Initial draft<br>
  41:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Documentation improved <br>
  42:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  *      
  43:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-06-20:
  44:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  45:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  46:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * @endcond
  47:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  48:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  49:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** 
  50:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** #ifndef XMC_GPIO_H
  51:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_H
  52:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** 
  53:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  54:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * HEADER FILES
  55:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  56:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** 
  57:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc_common.h"
  58:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** 
  59:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  60:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup XMClib XMC Peripheral Library
  61:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * @{
  62:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  63:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** 
  64:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  65:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup GPIO
  66:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * @brief General Purpose Input Output (GPIO) driver for the XMC microcontroller family.
  67:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  68:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * GPIO driver provide a generic and very flexible software interface for all standard digital I/O 
  69:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * Each port slice has individual interfaces for the operation as General Purpose I/O and it furthe
  70:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * connectivity to the on-chip periphery and the control for the pad characteristics. 
  71:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  72:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * The driver is divided into Input and Output mode.
  73:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  74:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * Input mode features:
  75:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Configuration structure XMC_GPIO_CONFIG_t and initialization function XMC_GPIO_Init()
  76:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of weak pull-up or pull-down device. Configuration structure XMC_GPIO_MO
  77:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
  78:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of input hysteresis. XMC_GPIO_SetInputHysteresis()
  79:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  80:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  81:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  82:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * Output mode features:
  83:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of push pull/open drain and Alternate output. Configuration structure XM
  84:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
  85:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of pad driver strength. Configuration structure XMC_GPIO_OUTPUT_STRENGTH
  86:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  87:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  88:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of initial output level. Configuration structure XMC_GPIO_OUTPUT_LEVEL_t
  89:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  90:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  *@{
  91:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  92:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  
  93:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  94:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * MACROS
  95:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  96:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** 
  97:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Pos PORT0_IOCR0_PC0_Pos
  98:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Msk PORT0_IOCR0_PC0_Msk
  99:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** 
 100:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Size 				(8U)
 101:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** 											
 102:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** 
 103:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_OUTPUT_LEVEL(level) ((level == XMC_GPIO_OUTPUT_LEVEL_LOW) || \
 104:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****                                             (level == XMC_GPIO_OUTPUT_LEVEL_HIGH))
 105:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****                                             
 106:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_HWCTRL(hwctrl) ((hwctrl == XMC_GPIO_HWCTRL_DISABLED) || \
 107:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL1) || \
 108:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL2))                    
 109:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****                                             
 110:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 111:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * ENUMS
 112:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 113:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** 
 114:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** 
 115:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 116:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines output level of a pin. Use type \a XMC_GPIO_OUTPUT_LEVEL_t for this enum.
 117:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 118:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_OUTPUT_LEVEL
 119:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** {
 120:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_LOW  = 0x10000U, /**<  Reset bit */
 121:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_HIGH = 0x1U, 	/**< Set bit  */
 122:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_OUTPUT_LEVEL_t;
 123:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** 
 124:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 125:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines direct hardware control characteristics of the pin . Use type \a XMC_GPIO_HWCTRL_t for t
 126:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 127:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_HWCTRL
 128:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** {
 129:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_DISABLED     = 0x0U, /**<  Software control only */
 130:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL1  = 0x1U, /**<  HWI0/HWO0 control path can override the software confi
 131:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL2  = 0x2U  /**<  HWI1/HWO1 control path can override the software confi
 132:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_HWCTRL_t;
 133:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** 
 134:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 135:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * DEVICE FAMILY EXTENSIONS
 136:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 137:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** 
 138:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  #if UC_FAMILY == XMC1
 139:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc1_gpio.h"
 140:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** #elif UC_FAMILY == XMC4
 141:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc4_gpio.h"
 142:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** #else
 143:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** #error "xmc_gpio.h: family device not supported"
 144:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 145:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** 
 146:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 147:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * API PROTOTYPES
 148:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 149:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** 
 150:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** #ifdef __cplusplus
 151:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** extern "C" {
 152:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 153:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** 
 154:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** 
 155:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 156:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	  Constant pointer pointing to GPIO port, to access port registers like Pn_OUT,Pn_O
 157:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	  Port pin number.
 158:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  config GPIO configuration data structure. Refer data structure @ref XMC_GPIO_CONFIG_t fo
 159:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 160:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 161:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 162:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 163:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
 164:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,hysteresis, push pull
 165:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for a selected \a po
 166:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * \a config provides selected I/O settings. It configures hardware registers Pn_IOCR,Pn_OUT, Pn_OM
 167:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 168:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
 169:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,push pull /open drain
 170:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for selected \a port
 171:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * It configures hardware registers Pn_IOCR,Pn_OUT,Pn_OMR,Pn_PDISC and Pn_PDR.\n
 172:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 173:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 174:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 175:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 176:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 177:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 178:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * This API is called in definition of DAVE_init by code generation and therefore should not be exp
 179:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * for the normal operation. Use other APIs only after DAVE_init is called successfully (returns DA
 180:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 181:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 182:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 183:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** 
 184:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  
 185:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_Init(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_CONFIG_t *const c
 186:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  
 187:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 188:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 189:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	Constant pointer pointing to GPIO port, to access hardware register Pn_IOCR.
 190:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 191:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  mode input / output functionality selection. Refer @ref XMC_GPIO_MODE_t for valid values
 192:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 193:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 194:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 195:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 196:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets digital input and output driver functionality and characteristics of a GPIO port pin. It co
 197:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * registers Pn_IOCR. \a mode is initially configured during initialization in XMC_GPIO_Init(). Cal
 198:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * the port direction functionality as needed later in the program.
 199:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 200:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 201:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 202:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 203:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 204:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** 
 205:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_SetMode(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_MODE_t mode);
 206:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** 
 207:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** 
 208:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 209:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 210:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	 Constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 211:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	 Port pin number.
 212:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  level output level selection. Refer @ref XMC_GPIO_OUTPUT_LEVEL_t for valid values.
 213:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 214:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 215:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 216:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 217:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * Set port pin output level to high or low.It configures hardware registers Pn_OMR.\a level is ini
 218:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * configured during initialization in XMC_GPIO_Init(). Call this API to alter output level as need
 219:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 220:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 221:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 222:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 223:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 224:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 225:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 226:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 227:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** 
 228:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** 
 229:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLevel(XMC_GPIO_PORT_t *const port, const uint8_t pin, const 
 230:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** {
 231:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 232:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid output level", XMC_GPIO_CHECK_OUTPUT_LEVEL(level));
 233:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****   
 234:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)level << pin;
 235:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** }
 236:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** 
 237:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** 
 238:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 239:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 240:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 241:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 242:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 243:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 244:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 245:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  *  Sets port pin output to high. It configures hardware registers Pn_OMR.
 246:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 247:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  *  \par<b>Related APIs:</b><BR>
 248:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputLow()
 249:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 250:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 251:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().\n
 252:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 253:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 254:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 255:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** 
 256:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputHigh(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 257:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** {
  27              	 .loc 1 257 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
  43 0008 0B46     	 mov r3,r1
  44 000a FB70     	 strb r3,[r7,#3]
 258:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputHigh: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 259:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** 
 260:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)0x1U << pin;
  45              	 .loc 1 260 0
  46 000c FB78     	 ldrb r3,[r7,#3]
  47 000e 0122     	 movs r2,#1
  48 0010 9A40     	 lsls r2,r2,r3
  49 0012 7B68     	 ldr r3,[r7,#4]
  50 0014 5A60     	 str r2,[r3,#4]
 261:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** }
  51              	 .loc 1 261 0
  52 0016 0C37     	 adds r7,r7,#12
  53              	.LCFI3:
  54              	 .cfi_def_cfa_offset 4
  55 0018 BD46     	 mov sp,r7
  56              	.LCFI4:
  57              	 .cfi_def_cfa_register 13
  58              	 
  59 001a 5DF8047B 	 ldr r7,[sp],#4
  60              	.LCFI5:
  61              	 .cfi_restore 7
  62              	 .cfi_def_cfa_offset 0
  63 001e 7047     	 bx lr
  64              	 .cfi_endproc
  65              	.LFE137:
  67              	 .section .text.XMC_GPIO_SetOutputLow,"ax",%progbits
  68              	 .align 2
  69              	 .thumb
  70              	 .thumb_func
  72              	XMC_GPIO_SetOutputLow:
  73              	.LFB138:
 262:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** 
 263:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 264:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 265:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 266:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	port pin number.
 267:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 268:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return  None
 269:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 270:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Description:</b><br>
 271:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets port pin output to low. It configures hardware registers Pn_OMR.\n
 272:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 273:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>>
 274:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh()
 275:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 276:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Note:</b><br>
 277:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 278:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 279:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 280:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 281:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** 
 282:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLow(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 283:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** {
  74              	 .loc 1 283 0
  75              	 .cfi_startproc
  76              	 
  77              	 
  78              	 
  79 0000 80B4     	 push {r7}
  80              	.LCFI6:
  81              	 .cfi_def_cfa_offset 4
  82              	 .cfi_offset 7,-4
  83 0002 83B0     	 sub sp,sp,#12
  84              	.LCFI7:
  85              	 .cfi_def_cfa_offset 16
  86 0004 00AF     	 add r7,sp,#0
  87              	.LCFI8:
  88              	 .cfi_def_cfa_register 7
  89 0006 7860     	 str r0,[r7,#4]
  90 0008 0B46     	 mov r3,r1
  91 000a FB70     	 strb r3,[r7,#3]
 284:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLow: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 285:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** 
 286:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10000U << pin;
  92              	 .loc 1 286 0
  93 000c FB78     	 ldrb r3,[r7,#3]
  94 000e 4FF48032 	 mov r2,#65536
  95 0012 9A40     	 lsls r2,r2,r3
  96 0014 7B68     	 ldr r3,[r7,#4]
  97 0016 5A60     	 str r2,[r3,#4]
 287:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc\xmc_gpio.h **** }
  98              	 .loc 1 287 0
  99 0018 0C37     	 adds r7,r7,#12
 100              	.LCFI9:
 101              	 .cfi_def_cfa_offset 4
 102 001a BD46     	 mov sp,r7
 103              	.LCFI10:
 104              	 .cfi_def_cfa_register 13
 105              	 
 106 001c 5DF8047B 	 ldr r7,[sp],#4
 107              	.LCFI11:
 108              	 .cfi_restore 7
 109              	 .cfi_def_cfa_offset 0
 110 0020 7047     	 bx lr
 111              	 .cfi_endproc
 112              	.LFE138:
 114 0022 00BF     	 .section .text.DIGITAL_IO_SetOutputHigh,"ax",%progbits
 115              	 .align 2
 116              	 .thumb
 117              	 .thumb_func
 119              	DIGITAL_IO_SetOutputHigh:
 120              	.LFB145:
 121              	 .file 2 "C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO/digital_io.h"
   1:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** /*
   2:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   3:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @file digital_io.h
   4:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @date 2016-07-08
   5:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   6:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****  * NOTE:
   7:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   8:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   9:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @cond
  10:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  11:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DIGITAL_IO v4.0.16 - The DIGITAL_IO APP is used to configure a port pin as digital Input/Output.
  12:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  13:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  14:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****  * All rights reserved.
  15:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  16:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  17:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****  * following conditions are met:
  18:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  19:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  20:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   disclaimer.
  21:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  22:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  23:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  24:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  25:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  26:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   products derived from this software without specific prior written permission.
  27:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  28:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  29:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  30:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  31:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  32:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  33:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  34:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  36:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  37:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****  * with Infineon Technologies AG (dave@infineon.com).
  38:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  39:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  40:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Change History
  41:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****  * --------------
  42:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  43:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-02-16
  44:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Initial version
  45:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  46:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-04-22
  47:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - XMC_ASSERT is added in static inline functions.<br>
  48:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  49:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-06-20
  50:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Version check added for XMCLib dependency.<br>
  51:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  52:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-12-22
  53:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Added hardware controlled IO feature.
  54:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2016-07-08:
  55:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Fixed incorrect case for an included header.<br>
  56:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  57:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @endcond
  58:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  59:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****  */
  60:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  61:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
  62:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****  * HEADER FILES
  63:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  64:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  65:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** #ifndef DIGITAL_IO_H
  66:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** #define DIGITAL_IO_H
  67:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  68:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** #include <xmc_gpio.h>
  69:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** #include <DAVE_Common.h>
  70:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** #include "digital_io_conf.h"
  71:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  72:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
  73:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****  * MACROS
  74:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  75:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** #if (!((XMC_LIB_MAJOR_VERSION == 2U) && \
  76:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****        (XMC_LIB_MINOR_VERSION >= 0U) && \
  77:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****        (XMC_LIB_PATCH_VERSION >= 0U)))
  78:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** #error "DIGITAL_IO requires XMC Peripheral Library v2.0.0 or higher"
  79:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** #endif
  80:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  81:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****  /*************************************************************************************************
  82:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****  * ENUMS
  83:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  84:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  85:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
  86:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_enumerations
  87:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
  88:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** */
  89:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  90:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
  91:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Initialization status of DIGITAL_IO APP.
  92:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** */
  93:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** typedef enum DIGITAL_IO_STATUS
  94:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** {
  95:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****   DIGITAL_IO_STATUS_OK = 0U,/**< 0=Status OK */
  96:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****   DIGITAL_IO_STATUS_FAILURE = 1U/**< 1=Status Failed */
  97:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** } DIGITAL_IO_STATUS_t;
  98:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  99:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 100:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** * @}
 101:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 102:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 103:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
 104:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DATA STRUCTURES
 105:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
 106:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 107:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_datastructures
 108:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
 109:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 110:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 111:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 112:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Initialization data structure of DIGITAL_IO APP
 113:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 114:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** typedef struct DIGITAL_IO
 115:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 116:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_PORT_t *const gpio_port;             /**< port number */
 117:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****   const XMC_GPIO_CONFIG_t gpio_config;          /**< mode, initial output level and pad driver stre
 118:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****   const uint8_t gpio_pin;                       /**< pin number */
 119:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****   const XMC_GPIO_HWCTRL_t hwctrl;               /**< Hardware port control */
 120:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** } DIGITAL_IO_t;
 121:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 122:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 123:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 124:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** * @}
 125:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 126:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 127:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 128:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
 129:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****  * API Prototypes
 130:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
 131:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 132:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 133:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** #ifdef __cplusplus
 134:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** extern "C" {
 135:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** #endif
 136:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 137:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 138:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_apidoc
 139:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
 140:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 141:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 142:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 143:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 144:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 145:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Get DIGITAL_IO APP version
 146:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return DAVE_APP_VERSION_t APP version information (major, minor and patch number)
 147:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 148:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description: </b><br>
 149:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** * The function can be used to check application software compatibility with a
 150:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** * specific version of the APP.
 151:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 152:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 153:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 154:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 155:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include <DAVE.h>
 156:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 157:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 158:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 159:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t init_status;
 160:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_APP_VERSION_t version;
 161:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 162:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *   // Initialize DIGITAL_IO APP:
 163:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *   // DIGITAL_IO_Init() is called from within DAVE_Init().
 164:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *   init_status = DAVE_Init();
 165:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(init_status == DAVE_STATUS_SUCCESS)
 166:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 167:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *     version = DIGITAL_IO_GetAppVersion();
 168:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *     if (version.major != 4U) {
 169:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // Probably, not the right version.
 170:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 171:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 172:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 173:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // More code here
 174:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1) {
 175:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 176:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 177:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *     return (1);
 178:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *  }
 179:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** * @endcode<BR>
 180:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 181:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 182:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** DAVE_APP_VERSION_t DIGITAL_IO_GetAppVersion(void);
 183:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 184:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 185:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 186:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to initialize the port pin as per UI settings.
 187:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 188:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return DIGITAL_IO_STATUS_t DIGITAL_IO APP status. Refer @ref DIGITAL_IO_STATUS_t structure for d
 189:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 190:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 191:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function initializes GPIO port registers IOCR,PDISC,OMR,PDR/PHCR to configure pin direction,
 192:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** * and pad driver strength/hysteresis.
 193:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 194:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 195:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** * None
 196:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 197:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 198:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 199:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 200:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 201:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 202:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 203:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 204:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 205:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 206:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 207:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 208:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 209:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 210:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 211:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1U)
 212:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 213:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 214:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 215:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 216:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 217:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 218:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 219:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return 1U;
 220:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *  }
 221:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 222:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 223:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 224:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** DIGITAL_IO_STATUS_t DIGITAL_IO_Init(const DIGITAL_IO_t *const handler);
 225:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 226:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 227:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 228:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to set port pin high.
 229:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 230:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return None
 231:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 232:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 233:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to make port pin to high level
 234:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 235:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 236:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *  DIGITAL_IO_SetOutputLow()
 237:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 238:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 239:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 240:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 241:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 242:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 243:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 244:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 245:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 246:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 247:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 248:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 249:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 250:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 251:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 252:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1U)
 253:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 254:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 255:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 256:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 257:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DIGITAL_IO_SetOutputHigh(&DIGITAL_IO_0);
 258:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 259:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 260:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // Add application code here
 261:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 262:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 263:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 264:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 265:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 266:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 267:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 268:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_SetOutputHigh(const DIGITAL_IO_t *const handler)
 269:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 122              	 .loc 2 269 0
 123              	 .cfi_startproc
 124              	 
 125              	 
 126 0000 80B5     	 push {r7,lr}
 127              	.LCFI12:
 128              	 .cfi_def_cfa_offset 8
 129              	 .cfi_offset 7,-8
 130              	 .cfi_offset 14,-4
 131 0002 82B0     	 sub sp,sp,#8
 132              	.LCFI13:
 133              	 .cfi_def_cfa_offset 16
 134 0004 00AF     	 add r7,sp,#0
 135              	.LCFI14:
 136              	 .cfi_def_cfa_register 7
 137 0006 7860     	 str r0,[r7,#4]
 270:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_SetOutputHigh: handler null pointer", handler != NULL);
 271:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_SetOutputHigh(handler->gpio_port, handler->gpio_pin);
 138              	 .loc 2 271 0
 139 0008 7B68     	 ldr r3,[r7,#4]
 140 000a 1A68     	 ldr r2,[r3]
 141 000c 7B68     	 ldr r3,[r7,#4]
 142 000e 1B7C     	 ldrb r3,[r3,#16]
 143 0010 1046     	 mov r0,r2
 144 0012 1946     	 mov r1,r3
 145 0014 FFF7FEFF 	 bl XMC_GPIO_SetOutputHigh
 272:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 146              	 .loc 2 272 0
 147 0018 0837     	 adds r7,r7,#8
 148              	.LCFI15:
 149              	 .cfi_def_cfa_offset 8
 150 001a BD46     	 mov sp,r7
 151              	.LCFI16:
 152              	 .cfi_def_cfa_register 13
 153              	 
 154 001c 80BD     	 pop {r7,pc}
 155              	 .cfi_endproc
 156              	.LFE145:
 158 001e 00BF     	 .section .text.DIGITAL_IO_SetOutputLow,"ax",%progbits
 159              	 .align 2
 160              	 .thumb
 161              	 .thumb_func
 163              	DIGITAL_IO_SetOutputLow:
 164              	.LFB146:
 273:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 274:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 275:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to reset port pin.
 276:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 277:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return None
 278:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 279:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 280:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to make port pin to low level.
 281:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 282:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 283:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** * DIGITAL_IO_SetOutputHigh()
 284:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 285:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 286:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 287:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *  #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 288:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *  int main(void)
 289:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *  {
 290:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *    DAVE_STATUS_t status;
 291:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *    status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_I
 292:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *    if(status == DAVE_STATUS_SUCCESS)
 293:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 294:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG("DAVE Apps initialization success\n");
 295:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 296:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *    else
 297:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 298:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 299:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *      while(1U)
 300:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *      {
 301:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *      }
 302:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 303:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *    //Placeholder for user application code. The while loop below can be replaced with user applic
 304:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *    DIGITAL_IO_SetOutputLow(&DIGITAL_IO_0);
 305:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *    while(1U)
 306:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 307:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *      // Add application code here
 308:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 309:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 310:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 311:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 312:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 313:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 314:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 315:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_SetOutputLow(const DIGITAL_IO_t *const handler)
 316:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 165              	 .loc 2 316 0
 166              	 .cfi_startproc
 167              	 
 168              	 
 169 0000 80B5     	 push {r7,lr}
 170              	.LCFI17:
 171              	 .cfi_def_cfa_offset 8
 172              	 .cfi_offset 7,-8
 173              	 .cfi_offset 14,-4
 174 0002 82B0     	 sub sp,sp,#8
 175              	.LCFI18:
 176              	 .cfi_def_cfa_offset 16
 177 0004 00AF     	 add r7,sp,#0
 178              	.LCFI19:
 179              	 .cfi_def_cfa_register 7
 180 0006 7860     	 str r0,[r7,#4]
 317:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_SetOutputLow: handler null pointer", handler != NULL);
 318:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_SetOutputLow(handler->gpio_port,handler->gpio_pin);
 181              	 .loc 2 318 0
 182 0008 7B68     	 ldr r3,[r7,#4]
 183 000a 1A68     	 ldr r2,[r3]
 184 000c 7B68     	 ldr r3,[r7,#4]
 185 000e 1B7C     	 ldrb r3,[r3,#16]
 186 0010 1046     	 mov r0,r2
 187 0012 1946     	 mov r1,r3
 188 0014 FFF7FEFF 	 bl XMC_GPIO_SetOutputLow
 319:C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 189              	 .loc 2 319 0
 190 0018 0837     	 adds r7,r7,#8
 191              	.LCFI20:
 192              	 .cfi_def_cfa_offset 8
 193 001a BD46     	 mov sp,r7
 194              	.LCFI21:
 195              	 .cfi_def_cfa_register 13
 196              	 
 197 001c 80BD     	 pop {r7,pc}
 198              	 .cfi_endproc
 199              	.LFE146:
 201              	 .global Torque_control
 202 001e 00BF     	 .section .data.Torque_control,"aw",%progbits
 205              	Torque_control:
 206 0000 01       	 .byte 1
 207              	 .global Speed_control
 208              	 .section .data.Speed_control,"aw",%progbits
 211              	Speed_control:
 212 0000 01       	 .byte 1
 213              	 .global CAN_control
 214              	 .section .data.CAN_control,"aw",%progbits
 217              	CAN_control:
 218 0000 01       	 .byte 1
 219              	 .comm Current_U,4,4
 220              	 .comm Current_V,4,4
 221              	 .comm Current_W,4,4
 222              	 .comm ialpha,4,4
 223              	 .comm ibeta,4,4
 224              	 .comm iq,4,4
 225              	 .comm id,4,4
 226              	 .comm Valpha,4,4
 227              	 .comm Vbeta,4,4
 228              	 .global speed_ref
 229              	 .section .bss.speed_ref,"aw",%nobits
 230              	 .align 2
 233              	speed_ref:
 234 0000 00000000 	 .space 4
 235              	 .global omega_ele_rads_ref
 236              	 .section .bss.omega_ele_rads_ref,"aw",%nobits
 237              	 .align 2
 240              	omega_ele_rads_ref:
 241 0000 00000000 	 .space 4
 242              	 .global iq_ref
 243              	 .section .bss.iq_ref,"aw",%nobits
 244              	 .align 2
 247              	iq_ref:
 248 0000 00000000 	 .space 4
 249              	 .global T_ref
 250              	 .section .bss.T_ref,"aw",%nobits
 251              	 .align 2
 254              	T_ref:
 255 0000 00000000 	 .space 4
 256              	 .comm T_ref_controlled,4,4
 257              	 .global omega_mech_rps_ref
 258              	 .section .bss.omega_mech_rps_ref,"aw",%nobits
 259              	 .align 2
 262              	omega_mech_rps_ref:
 263 0000 00000000 	 .space 4
 264              	 .global Vd
 265              	 .section .bss.Vd,"aw",%nobits
 266              	 .align 2
 269              	Vd:
 270 0000 00000000 	 .space 4
 271              	 .global Vq
 272              	 .section .bss.Vq,"aw",%nobits
 273              	 .align 2
 276              	Vq:
 277 0000 00000000 	 .space 4
 278              	 .comm modulation_index,4,4
 279              	 .comm modulation_index_scaled,4,4
 280              	 .comm angle_ab,4,4
 281              	 .comm angle_ab_rad,4,4
 282              	 .comm amplitude_ab,4,4
 283              	 .global Ts
 284              	 .section .data.Ts,"aw",%progbits
 285              	 .align 2
 288              	Ts:
 289 0000 17B75138 	 .word 944879383
 290              	 .global Tcyc
 291              	 .section .data.Tcyc,"aw",%progbits
 292              	 .align 2
 295              	Tcyc:
 296 0000 17B75139 	 .word 961656599
 297              	 .global scaling_factor
 298              	 .section .data.scaling_factor,"aw",%progbits
 299              	 .align 2
 302              	scaling_factor:
 303 0000 00000743 	 .word 1124532224
 304              	 .comm amplitude_corrected,4,4
 305              	 .global count
 306              	 .section .bss.count,"aw",%nobits
 309              	count:
 310 0000 00       	 .space 1
 311              	 .global Speed_detection_OK
 312              	 .section .bss.Speed_detection_OK,"aw",%nobits
 315              	Speed_detection_OK:
 316 0000 00       	 .space 1
 317              	 .global setting_cyc
 318              	 .section .data.setting_cyc,"aw",%progbits
 319              	 .align 2
 322              	setting_cyc:
 323 0000 983A0000 	 .word 15000
 324              	 .global step_start
 325              	 .section .data.step_start,"aw",%progbits
 326              	 .align 2
 329              	step_start:
 330 0000 8FC2753D 	 .word 1031127695
 331              	 .global step_to
 332              	 .section .data.step_to,"aw",%progbits
 333              	 .align 2
 336              	step_to:
 337 0000 0AD7A33D 	 .word 1034147594
 338              	 .global start_help_count
 339              	 .section .bss.start_help_count,"aw",%nobits
 342              	start_help_count:
 343 0000 00       	 .space 1
 344              	 .global start_help
 345              	 .section .bss.start_help,"aw",%nobits
 348              	start_help:
 349 0000 00       	 .space 1
 350              	 .global start_help_flag
 351              	 .section .bss.start_help_flag,"aw",%nobits
 354              	start_help_flag:
 355 0000 00       	 .space 1
 356              	 .global CAN_send_counter
 357              	 .section .bss.CAN_send_counter,"aw",%nobits
 358              	 .align 1
 361              	CAN_send_counter:
 362 0000 0000     	 .space 2
 363              	 .section .text.main,"ax",%progbits
 364              	 .align 2
 365              	 .global main
 366              	 .thumb
 367              	 .thumb_func
 369              	main:
 370              	.LFB473:
 371              	 .file 3 "../main.c"
   1:../main.c     **** /*
   2:../main.c     ****  * main.c
   3:../main.c     ****  *
   4:../main.c     ****  *  Created on: 2020 Jan 02 10:21:43
   5:../main.c     ****  *  Author: Baldo
   6:../main.c     ****  */
   7:../main.c     **** 
   8:../main.c     **** // status: 11.05.2022
   9:../main.c     **** 
  10:../main.c     **** #include <DAVE.h>                 //Declarations from DAVE Code Generation (includes SFR declaratio
  11:../main.c     **** #include <math.h>
  12:../main.c     **** #include <stdio.h> //for printf
  13:../main.c     **** 
  14:../main.c     **** #include "Globals.h"
  15:../main.c     **** #include "DEFINE_CONST.h"
  16:../main.c     **** #include "Hall_Sensors.h"
  17:../main.c     **** #include "rec_data_function.h"
  18:../main.c     **** #include "Read_Current_Sensor.h"
  19:../main.c     **** #include "CAN.h"
  20:../main.c     **** #include "PI_Controller.h"
  21:../main.c     **** 
  22:../main.c     **** //#######################
  23:../main.c     **** //FUNCTION DECLARATION
  24:../main.c     **** //########################
  25:../main.c     **** void Control_calc(void);
  26:../main.c     **** 
  27:../main.c     **** //########################
  28:../main.c     **** //VARIABLE DECLARATION
  29:../main.c     **** //########################
  30:../main.c     **** 
  31:../main.c     **** //control type
  32:../main.c     **** uint8_t Torque_control = 1;
  33:../main.c     **** uint8_t Speed_control = 1; //if 0 is torque control if 1 is speed control
  34:../main.c     **** uint8_t CAN_control = 1; // id 1 CAN speed controll aktive
  35:../main.c     **** 
  36:../main.c     **** float Current_U, Current_V, Current_W;
  37:../main.c     **** 
  38:../main.c     **** float ialpha,ibeta,iq,id,Valpha,Vbeta;
  39:../main.c     **** 
  40:../main.c     **** 
  41:../main.c     **** // REF vaules given to PI controller
  42:../main.c     **** float speed_ref = 0.0; //meters per second
  43:../main.c     **** float omega_ele_rads_ref = 0.0; // electrical rad per second
  44:../main.c     **** float iq_ref = 0.0;
  45:../main.c     **** float T_ref = 0.0;
  46:../main.c     **** float T_ref_controlled;
  47:../main.c     **** float omega_mech_rps_ref = 0;
  48:../main.c     **** 
  49:../main.c     **** float Vd = 0;
  50:../main.c     **** float Vq = 0;
  51:../main.c     **** 
  52:../main.c     **** volatile float modulation_index; //SK		// modulation index --> calculated via m = V / K_inv
  53:../main.c     **** volatile float modulation_index_scaled; //SK	//scaled from -1 to +1 towards -10000 to +10000 which 
  54:../main.c     **** 
  55:../main.c     **** float angle_ab;
  56:../main.c     **** float angle_ab_rad;
  57:../main.c     **** float amplitude_ab;
  58:../main.c     **** 
  59:../main.c     **** float Ts = 1.0 /20000.0; //T sample correspond to SPVM update rate
  60:../main.c     **** float Tcyc = 1.0 /5000.0; //Tcyc sample correspond to control update rate to PI controler for I
  61:../main.c     **** 
  62:../main.c     **** // scaling factor for SVM Update -> amplitude scaling (max_amplitude = 16384U)
  63:../main.c     **** float scaling_factor = 135;
  64:../main.c     **** float amplitude_corrected;
  65:../main.c     **** 
  66:../main.c     **** // Counter for calculation function -> only use a multiple of the SVM Interrupt
  67:../main.c     **** volatile uint8_t count = 0;
  68:../main.c     **** 
  69:../main.c     **** 
  70:../main.c     **** uint8_t Speed_detection_OK = 0;
  71:../main.c     **** 
  72:../main.c     **** //step rec
  73:../main.c     **** uint32_t setting_cyc = 15000;
  74:../main.c     **** float step_start = 0.06; //0.13 ; M1 //  0.06; M2
  75:../main.c     **** float step_to = 0.08;  //0.17;  // 0l09 ; M2
  76:../main.c     **** 
  77:../main.c     **** //start help
  78:../main.c     **** uint8_t start_help_count = 0, start_help = 0, start_help_flag = 0;
  79:../main.c     **** #define START_HELP_T 0.1
  80:../main.c     **** 
  81:../main.c     **** //CAN counter send
  82:../main.c     **** uint16_t CAN_send_counter = 0;
  83:../main.c     **** 
  84:../main.c     **** //########################
  85:../main.c     **** // MAIN
  86:../main.c     **** //########################
  87:../main.c     **** 
  88:../main.c     **** int main(void)
  89:../main.c     **** {
 372              	 .loc 3 89 0
 373              	 .cfi_startproc
 374              	 
 375              	 
 376 0000 80B5     	 push {r7,lr}
 377              	.LCFI22:
 378              	 .cfi_def_cfa_offset 8
 379              	 .cfi_offset 7,-8
 380              	 .cfi_offset 14,-4
 381 0002 82B0     	 sub sp,sp,#8
 382              	.LCFI23:
 383              	 .cfi_def_cfa_offset 16
 384 0004 00AF     	 add r7,sp,#0
 385              	.LCFI24:
 386              	 .cfi_def_cfa_register 7
  90:../main.c     ****   DAVE_STATUS_t status;
  91:../main.c     ****   status = DAVE_Init();           /* Initialization of DAVE APPs  */
 387              	 .loc 3 91 0
 388 0006 FFF7FEFF 	 bl DAVE_Init
 389 000a 0346     	 mov r3,r0
 390 000c FB71     	 strb r3,[r7,#7]
  92:../main.c     **** 
  93:../main.c     ****   Hall_init();
 391              	 .loc 3 93 0
 392 000e FFF7FEFF 	 bl Hall_init
  94:../main.c     **** 
  95:../main.c     ****   if(status != DAVE_STATUS_SUCCESS)
 393              	 .loc 3 95 0
 394 0012 FB79     	 ldrb r3,[r7,#7]
 395 0014 002B     	 cmp r3,#0
 396 0016 00D0     	 beq .L6
 397              	.L7:
  96:../main.c     ****   {
  97:../main.c     ****     /* Placeholder for error handler code. The while loop below can be replaced with an user error 
  98:../main.c     ****     XMC_DEBUG("DAVE APPs initialization failed\n");
  99:../main.c     **** 
 100:../main.c     ****     while(1U)
 101:../main.c     ****     {
 102:../main.c     **** 
 103:../main.c     ****     }
 398              	 .loc 3 103 0 discriminator 1
 399 0018 FEE7     	 b .L7
 400              	.L6:
 104:../main.c     ****   }
 105:../main.c     **** 
 106:../main.c     ****   //Initialization of CAN
 107:../main.c     ****   	CAN_NODE_STATUS_t init_status;
 108:../main.c     ****   	init_status = CAN_NODE_Init(&CAN_NODE_0);
 401              	 .loc 3 108 0
 402 001a 1848     	 ldr r0,.L11
 403 001c FFF7FEFF 	 bl CAN_NODE_Init
 404 0020 0346     	 mov r3,r0
 405 0022 BB71     	 strb r3,[r7,#6]
 109:../main.c     **** 
 110:../main.c     ****   	if (init_status != CAN_NODE_STATUS_SUCCESS) {
 111:../main.c     ****   		XMC_DEBUG("CAN initialization failed\n");
 112:../main.c     ****   	}
 113:../main.c     **** 
 114:../main.c     ****   if((MOTOR_ON_ROVER > 3) || MOTOR_ON_ROVER < 0){ // if possibel number eneterd
 115:../main.c     **** 	  while(1U)
 116:../main.c     **** 	      {
 117:../main.c     **** 		//  printf("MOTOR_ON_ROVER number false");
 118:../main.c     **** 	      }
 119:../main.c     ****   }
 120:../main.c     **** 
 121:../main.c     **** 
 122:../main.c     ****   /* Placeholder for user application code. The while loop below can be replaced with user applicat
 123:../main.c     ****   while(1U)
 124:../main.c     ****   {
 125:../main.c     **** 	  omega_param_selctor(MOTOR_NUM); //set motor spefici speeed parameters
 406              	 .loc 3 125 0
 407 0024 0120     	 movs r0,#1
 408 0026 FFF7FEFF 	 bl omega_param_selctor
 126:../main.c     **** 
 127:../main.c     **** 	  PWM_SVM_Start(&PWM_SVM_0); // synchronous start for the CC8 slices.
 409              	 .loc 3 127 0
 410 002a 1548     	 ldr r0,.L11+4
 411 002c FFF7FEFF 	 bl PWM_SVM_Start
 412              	.L10:
 128:../main.c     **** 		  while(1U)
 129:../main.c     **** 		    {
 130:../main.c     **** 			  if(count >=4)		//only calculate a multiple of 20kHz -> 4*50us=200us
 413              	 .loc 3 130 0
 414 0030 144B     	 ldr r3,.L11+8
 415 0032 1B78     	 ldrb r3,[r3]
 416 0034 DBB2     	 uxtb r3,r3
 417 0036 032B     	 cmp r3,#3
 418 0038 1ED9     	 bls .L8
 131:../main.c     **** 			  {
 132:../main.c     **** 				  DIGITAL_IO_SetOutputHigh(&status_LED_red_cal_time);
 419              	 .loc 3 132 0
 420 003a 1348     	 ldr r0,.L11+12
 421 003c FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 133:../main.c     **** 				  count=0;
 422              	 .loc 3 133 0
 423 0040 104B     	 ldr r3,.L11+8
 424 0042 0022     	 movs r2,#0
 425 0044 1A70     	 strb r2,[r3]
 134:../main.c     **** 				  Hall_postion_speed_estimation();
 426              	 .loc 3 134 0
 427 0046 FFF7FEFF 	 bl Hall_postion_speed_estimation
 135:../main.c     **** 				  Control_calc();
 428              	 .loc 3 135 0
 429 004a FFF7FEFF 	 bl Control_calc
 136:../main.c     **** 
 137:../main.c     **** 				  CAN_send_counter ++;
 430              	 .loc 3 137 0
 431 004e 0F4B     	 ldr r3,.L11+16
 432 0050 1B88     	 ldrh r3,[r3]
 433 0052 0133     	 adds r3,r3,#1
 434 0054 9AB2     	 uxth r2,r3
 435 0056 0D4B     	 ldr r3,.L11+16
 436 0058 1A80     	 strh r2,[r3]
 138:../main.c     **** 				  if(CAN_send_counter > 50){
 437              	 .loc 3 138 0
 438 005a 0C4B     	 ldr r3,.L11+16
 439 005c 1B88     	 ldrh r3,[r3]
 440 005e 322B     	 cmp r3,#50
 441 0060 04D9     	 bls .L9
 139:../main.c     **** 					  CAN_send();
 442              	 .loc 3 139 0
 443 0062 FFF7FEFF 	 bl CAN_send
 140:../main.c     **** 					  CAN_send_counter = 0;
 444              	 .loc 3 140 0
 445 0066 094B     	 ldr r3,.L11+16
 446 0068 0022     	 movs r2,#0
 447 006a 1A80     	 strh r2,[r3]
 448              	.L9:
 141:../main.c     **** 				  }
 142:../main.c     **** 
 143:../main.c     **** 				 // f_rec_data(iq	,Vq,&Vq,1,2,1,10000);  //  iq char
 144:../main.c     **** 
 145:../main.c     **** 				  //f_rec_data(iq	,Vq,&iq_ref,1,2,1,10000); // iq step test
 146:../main.c     **** 
 147:../main.c     **** 				   //f_rec_data(omega_mech_rps,T_ref,&T_ref,step_start,step_to,10,setting_cyc); //10000 settlin
 148:../main.c     **** 
 149:../main.c     **** 				   //f_rec_data(omega_mech_rps,T_ref,&omega_mech_rps_ref,2,4,50,2000); // speed step test
 150:../main.c     **** 
 151:../main.c     **** 				   //rec_step_from_0(omega_mech_rps, iq_ref,iq, &omega_mech_rps_ref, 4, 20); // start help test
 152:../main.c     **** 				   start_help_flag = 0;
 449              	 .loc 3 152 0
 450 006c 084B     	 ldr r3,.L11+20
 451 006e 0022     	 movs r2,#0
 452 0070 1A70     	 strb r2,[r3]
 153:../main.c     **** 
 154:../main.c     **** 				   DIGITAL_IO_SetOutputLow(&status_LED_red_cal_time);
 453              	 .loc 3 154 0
 454 0072 0548     	 ldr r0,.L11+12
 455 0074 FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 456              	.L8:
 155:../main.c     **** 			  }
 156:../main.c     **** 		    }
 457              	 .loc 3 156 0
 458 0078 DAE7     	 b .L10
 459              	.L12:
 460 007a 00BF     	 .align 2
 461              	.L11:
 462 007c 00000000 	 .word CAN_NODE_0
 463 0080 00000000 	 .word PWM_SVM_0
 464 0084 00000000 	 .word count
 465 0088 00000000 	 .word status_LED_red_cal_time
 466 008c 00000000 	 .word CAN_send_counter
 467 0090 00000000 	 .word start_help_flag
 468              	 .cfi_endproc
 469              	.LFE473:
 471              	 .section .text.CCU43_1_IRQHandler,"ax",%progbits
 472              	 .align 2
 473              	 .global CCU43_1_IRQHandler
 474              	 .thumb
 475              	 .thumb_func
 477              	CCU43_1_IRQHandler:
 478              	.LFB474:
 157:../main.c     ****   }
 158:../main.c     **** }
 159:../main.c     **** 
 160:../main.c     **** 
 161:../main.c     **** //########################
 162:../main.c     **** // INTERRUPTS
 163:../main.c     **** //########################
 164:../main.c     **** 
 165:../main.c     **** /*
 166:../main.c     **** // Turn off driver at Overcurrent
 167:../main.c     **** void OverCurrent_U_ISR(void)
 168:../main.c     **** {
 169:../main.c     **** 	//DIGITAL_IO_SetOutputLow(&Driver_U);	// switch off U driver
 170:../main.c     **** }
 171:../main.c     **** void OverCurrent_V_ISR(void)
 172:../main.c     **** {
 173:../main.c     **** 	//DIGITAL_IO_SetOutputLow(&Driver_U);	// switch off U driver
 174:../main.c     **** }
 175:../main.c     **** void OverCurrent_W_ISR(void)
 176:../main.c     **** {
 177:../main.c     **** 	//DIGITAL_IO_SetOutputLow(&Driver_U);	// switch off U driver
 178:../main.c     **** }
 179:../main.c     **** */
 180:../main.c     **** 
 181:../main.c     **** //ISR based on Timer_1 --> 100us time base
 182:../main.c     **** void ISR_INT1(void)
 183:../main.c     **** {
 479              	 .loc 3 183 0
 480              	 .cfi_startproc
 481              	 
 482              	 
 483              	 
 484 0000 80B4     	 push {r7}
 485              	.LCFI25:
 486              	 .cfi_def_cfa_offset 4
 487              	 .cfi_offset 7,-4
 488 0002 00AF     	 add r7,sp,#0
 489              	.LCFI26:
 490              	 .cfi_def_cfa_register 7
 184:../main.c     **** }
 491              	 .loc 3 184 0
 492 0004 BD46     	 mov sp,r7
 493              	.LCFI27:
 494              	 .cfi_def_cfa_register 13
 495              	 
 496 0006 5DF8047B 	 ldr r7,[sp],#4
 497              	.LCFI28:
 498              	 .cfi_restore 7
 499              	 .cfi_def_cfa_offset 0
 500 000a 7047     	 bx lr
 501              	 .cfi_endproc
 502              	.LFE474:
 504              	 .section .text.CCU80_3_IRQHandler,"ax",%progbits
 505              	 .align 2
 506              	 .global CCU80_3_IRQHandler
 507              	 .thumb
 508              	 .thumb_func
 510              	CCU80_3_IRQHandler:
 511              	.LFB475:
 185:../main.c     **** 
 186:../main.c     **** // ISR for Updating the SVM PWM -> 50us = 20kHz
 187:../main.c     **** void PeriodMatchInterruptHandler(void)
 188:../main.c     **** {
 512              	 .loc 3 188 0
 513              	 .cfi_startproc
 514              	 
 515              	 
 516 0000 80B5     	 push {r7,lr}
 517              	.LCFI29:
 518              	 .cfi_def_cfa_offset 8
 519              	 .cfi_offset 7,-8
 520              	 .cfi_offset 14,-4
 521 0002 82B0     	 sub sp,sp,#8
 522              	.LCFI30:
 523              	 .cfi_def_cfa_offset 16
 524 0004 00AF     	 add r7,sp,#0
 525              	.LCFI31:
 526              	 .cfi_def_cfa_register 7
 189:../main.c     **** 	count++;	// only use a multiple of the period match frequency 20*20kHz = 1ms
 527              	 .loc 3 189 0
 528 0006 144B     	 ldr r3,.L16
 529 0008 1B78     	 ldrb r3,[r3]
 530 000a DBB2     	 uxtb r3,r3
 531 000c 0133     	 adds r3,r3,#1
 532 000e DAB2     	 uxtb r2,r3
 533 0010 114B     	 ldr r3,.L16
 534 0012 1A70     	 strb r2,[r3]
 190:../main.c     **** 	if(count == 1){ // only updating evry time there is new data safes 5-8 % duty on the Control_calc
 535              	 .loc 3 190 0
 536 0014 104B     	 ldr r3,.L16
 537 0016 1B78     	 ldrb r3,[r3]
 538 0018 DBB2     	 uxtb r3,r3
 539 001a 012B     	 cmp r3,#1
 540 001c 18D1     	 bne .L14
 191:../main.c     **** 		PWM_SVM_SVMUpdate(&PWM_SVM_0, (uint16_t)modulation_index_scaled, (uint32_t)angle_ab * ANGLE_ONE_D
 541              	 .loc 3 191 0
 542 001e 0F4B     	 ldr r3,.L16+4
 543 0020 D3ED007A 	 flds s15,[r3]
 544 0024 FCEEE77A 	 ftouizs s15,s15
 545 0028 C7ED017A 	 fsts s15,[r7,#4]
 546 002c BB88     	 ldrh r3,[r7,#4]
 547 002e 9AB2     	 uxth r2,r3
 548 0030 0B4B     	 ldr r3,.L16+8
 549 0032 D3ED007A 	 flds s15,[r3]
 550 0036 FCEEE77A 	 ftouizs s15,s15
 551 003a 17EE901A 	 fmrs r1,s15
 552 003e 4BF20B63 	 movw r3,#46603
 553 0042 03FB01F3 	 mul r3,r3,r1
 554 0046 0748     	 ldr r0,.L16+12
 555 0048 1146     	 mov r1,r2
 556 004a 1A46     	 mov r2,r3
 557 004c FFF7FEFF 	 bl PWM_SVM_SVMUpdate
 558              	.L14:
 192:../main.c     **** 	}
 193:../main.c     **** }
 559              	 .loc 3 193 0
 560 0050 0837     	 adds r7,r7,#8
 561              	.LCFI32:
 562              	 .cfi_def_cfa_offset 8
 563 0052 BD46     	 mov sp,r7
 564              	.LCFI33:
 565              	 .cfi_def_cfa_register 13
 566              	 
 567 0054 80BD     	 pop {r7,pc}
 568              	.L17:
 569 0056 00BF     	 .align 2
 570              	.L16:
 571 0058 00000000 	 .word count
 572 005c 00000000 	 .word modulation_index_scaled
 573 0060 00000000 	 .word angle_ab
 574 0064 00000000 	 .word PWM_SVM_0
 575              	 .cfi_endproc
 576              	.LFE475:
 578              	 .global __aeabi_f2d
 579              	 .global __aeabi_dmul
 580              	 .global __aeabi_d2f
 581              	 .global __aeabi_dsub
 582              	 .global __aeabi_ddiv
 583              	 .global __aeabi_dcmpeq
 584              	 .global __aeabi_dadd
 585              	 .section .text.Control_calc,"ax",%progbits
 586              	 .align 2
 587              	 .global Control_calc
 588              	 .thumb
 589              	 .thumb_func
 591              	Control_calc:
 592              	.LFB476:
 194:../main.c     **** 
 195:../main.c     **** //########################
 196:../main.c     **** // FUNCTIONS
 197:../main.c     **** //########################
 198:../main.c     **** 
 199:../main.c     **** 
 200:../main.c     **** // Routine for Control_calc
 201:../main.c     **** //5kHz loop since every 4th step of 50us --> 200us --> 5kHz
 202:../main.c     **** void Control_calc(void){
 593              	 .loc 3 202 0
 594              	 .cfi_startproc
 595              	 
 596              	 
 597 0000 B0B5     	 push {r4,r5,r7,lr}
 598              	.LCFI34:
 599              	 .cfi_def_cfa_offset 16
 600              	 .cfi_offset 4,-16
 601              	 .cfi_offset 5,-12
 602              	 .cfi_offset 7,-8
 603              	 .cfi_offset 14,-4
 604 0002 2DED028B 	 fstmfdd sp!,{d8}
 605              	.LCFI35:
 606              	 .cfi_def_cfa_offset 24
 607              	 .cfi_offset 80,-24
 608              	 .cfi_offset 81,-20
 609 0006 84B0     	 sub sp,sp,#16
 610              	.LCFI36:
 611              	 .cfi_def_cfa_offset 40
 612 0008 00AF     	 add r7,sp,#0
 613              	.LCFI37:
 614              	 .cfi_def_cfa_register 7
 203:../main.c     **** 
 204:../main.c     **** 		// Current read out over SPI
 205:../main.c     **** 		Current_U = readCurrent(ChipSelect_U);
 615              	 .loc 3 205 0
 616 000a 0620     	 movs r0,#6
 617 000c FFF7FEFF 	 bl readCurrent
 618 0010 0246     	 mov r2,r0
 619 0012 AF4B     	 ldr r3,.L53+48
 620 0014 1A60     	 str r2,[r3]
 206:../main.c     **** 		Current_V = readCurrent(ChipSelect_V);
 621              	 .loc 3 206 0
 622 0016 0520     	 movs r0,#5
 623 0018 FFF7FEFF 	 bl readCurrent
 624 001c 0246     	 mov r2,r0
 625 001e AD4B     	 ldr r3,.L53+52
 626 0020 1A60     	 str r2,[r3]
 207:../main.c     **** 		Current_W = readCurrent(ChipSelect_W);
 627              	 .loc 3 207 0
 628 0022 0320     	 movs r0,#3
 629 0024 FFF7FEFF 	 bl readCurrent
 630 0028 0246     	 mov r2,r0
 631 002a AB4B     	 ldr r3,.L53+56
 632 002c 1A60     	 str r2,[r3]
 208:../main.c     **** 
 209:../main.c     **** 		// conversion from rad/s to degree
 210:../main.c     **** 		float angle_phi_rad = angle_phi*Pi180;
 633              	 .loc 3 210 0
 634 002e AB4B     	 ldr r3,.L53+60
 635 0030 1B68     	 ldr r3,[r3]
 636 0032 1846     	 mov r0,r3
 637 0034 FFF7FEFF 	 bl __aeabi_f2d
 638 0038 0246     	 mov r2,r0
 639 003a 0B46     	 mov r3,r1
 640 003c 1046     	 mov r0,r2
 641 003e 1946     	 mov r1,r3
 642 0040 97A3     	 adr r3,.L53
 643 0042 D3E90023 	 ldrd r2,[r3]
 644 0046 FFF7FEFF 	 bl __aeabi_dmul
 645 004a 0246     	 mov r2,r0
 646 004c 0B46     	 mov r3,r1
 647 004e 1046     	 mov r0,r2
 648 0050 1946     	 mov r1,r3
 649 0052 FFF7FEFF 	 bl __aeabi_d2f
 650 0056 0346     	 mov r3,r0
 651 0058 FB60     	 str r3,[r7,#12]
 211:../main.c     **** 
 212:../main.c     **** 		// to decrease multiple calculations and computational effort
 213:../main.c     **** 		float cos_phi = cosf(angle_phi_rad);
 652              	 .loc 3 213 0
 653 005a F868     	 ldr r0,[r7,#12]
 654 005c FFF7FEFF 	 bl cosf
 655 0060 B860     	 str r0,[r7,#8]
 214:../main.c     **** 		float sin_phi = sinf(angle_phi_rad);
 656              	 .loc 3 214 0
 657 0062 F868     	 ldr r0,[r7,#12]
 658 0064 FFF7FEFF 	 bl sinf
 659 0068 7860     	 str r0,[r7,#4]
 215:../main.c     **** 
 216:../main.c     **** 		// Clark-Park transformation (from U,V,W to dq)
 217:../main.c     **** 		id = TwoThird*(cos_phi*Current_U	+ cosf(angle_phi_rad-TwoPiThird)*Current_V + cosf(angle_phi_rad-
 660              	 .loc 3 217 0
 661 006a 994B     	 ldr r3,.L53+48
 662 006c 93ED007A 	 flds s14,[r3]
 663 0070 D7ED027A 	 flds s15,[r7,#8]
 664 0074 27EE278A 	 fmuls s16,s14,s15
 665 0078 F868     	 ldr r0,[r7,#12]
 666 007a FFF7FEFF 	 bl __aeabi_f2d
 667 007e 0246     	 mov r2,r0
 668 0080 0B46     	 mov r3,r1
 669 0082 1046     	 mov r0,r2
 670 0084 1946     	 mov r1,r3
 671 0086 88A3     	 adr r3,.L53+8
 672 0088 D3E90023 	 ldrd r2,[r3]
 673 008c FFF7FEFF 	 bl __aeabi_dsub
 674 0090 0246     	 mov r2,r0
 675 0092 0B46     	 mov r3,r1
 676 0094 1046     	 mov r0,r2
 677 0096 1946     	 mov r1,r3
 678 0098 FFF7FEFF 	 bl __aeabi_d2f
 679 009c 0346     	 mov r3,r0
 680 009e 1846     	 mov r0,r3
 681 00a0 FFF7FEFF 	 bl cosf
 682 00a4 07EE100A 	 fmsr s14,r0
 683 00a8 8A4B     	 ldr r3,.L53+52
 684 00aa D3ED007A 	 flds s15,[r3]
 685 00ae 67EE277A 	 fmuls s15,s14,s15
 686 00b2 38EE278A 	 fadds s16,s16,s15
 687 00b6 F868     	 ldr r0,[r7,#12]
 688 00b8 FFF7FEFF 	 bl __aeabi_f2d
 689 00bc 0246     	 mov r2,r0
 690 00be 0B46     	 mov r3,r1
 691 00c0 1046     	 mov r0,r2
 692 00c2 1946     	 mov r1,r3
 693 00c4 7AA3     	 adr r3,.L53+16
 694 00c6 D3E90023 	 ldrd r2,[r3]
 695 00ca FFF7FEFF 	 bl __aeabi_dsub
 696 00ce 0246     	 mov r2,r0
 697 00d0 0B46     	 mov r3,r1
 698 00d2 1046     	 mov r0,r2
 699 00d4 1946     	 mov r1,r3
 700 00d6 FFF7FEFF 	 bl __aeabi_d2f
 701 00da 0346     	 mov r3,r0
 702 00dc 1846     	 mov r0,r3
 703 00de FFF7FEFF 	 bl cosf
 704 00e2 07EE100A 	 fmsr s14,r0
 705 00e6 7C4B     	 ldr r3,.L53+56
 706 00e8 D3ED007A 	 flds s15,[r3]
 707 00ec 67EE277A 	 fmuls s15,s14,s15
 708 00f0 78EE277A 	 fadds s15,s16,s15
 709 00f4 17EE900A 	 fmrs r0,s15
 710 00f8 FFF7FEFF 	 bl __aeabi_f2d
 711 00fc 0246     	 mov r2,r0
 712 00fe 0B46     	 mov r3,r1
 713 0100 1046     	 mov r0,r2
 714 0102 1946     	 mov r1,r3
 715 0104 6CA3     	 adr r3,.L53+24
 716 0106 D3E90023 	 ldrd r2,[r3]
 717 010a FFF7FEFF 	 bl __aeabi_dmul
 718 010e 0246     	 mov r2,r0
 719 0110 0B46     	 mov r3,r1
 720 0112 1046     	 mov r0,r2
 721 0114 1946     	 mov r1,r3
 722 0116 FFF7FEFF 	 bl __aeabi_d2f
 723 011a 0246     	 mov r2,r0
 724 011c 704B     	 ldr r3,.L53+64
 725 011e 1A60     	 str r2,[r3]
 218:../main.c     **** 		iq = TwoThird*(-sin_phi*Current_U	 -sinf(angle_phi_rad-TwoPiThird)*Current_V - sinf(angle_phi_rad
 726              	 .loc 3 218 0
 727 0120 D7ED017A 	 flds s15,[r7,#4]
 728 0124 B1EE677A 	 fnegs s14,s15
 729 0128 694B     	 ldr r3,.L53+48
 730 012a D3ED007A 	 flds s15,[r3]
 731 012e 27EE278A 	 fmuls s16,s14,s15
 732 0132 F868     	 ldr r0,[r7,#12]
 733 0134 FFF7FEFF 	 bl __aeabi_f2d
 734 0138 0246     	 mov r2,r0
 735 013a 0B46     	 mov r3,r1
 736 013c 1046     	 mov r0,r2
 737 013e 1946     	 mov r1,r3
 738 0140 59A3     	 adr r3,.L53+8
 739 0142 D3E90023 	 ldrd r2,[r3]
 740 0146 FFF7FEFF 	 bl __aeabi_dsub
 741 014a 0246     	 mov r2,r0
 742 014c 0B46     	 mov r3,r1
 743 014e 1046     	 mov r0,r2
 744 0150 1946     	 mov r1,r3
 745 0152 FFF7FEFF 	 bl __aeabi_d2f
 746 0156 0346     	 mov r3,r0
 747 0158 1846     	 mov r0,r3
 748 015a FFF7FEFF 	 bl sinf
 749 015e 07EE100A 	 fmsr s14,r0
 750 0162 5C4B     	 ldr r3,.L53+52
 751 0164 D3ED007A 	 flds s15,[r3]
 752 0168 67EE277A 	 fmuls s15,s14,s15
 753 016c 38EE678A 	 fsubs s16,s16,s15
 754 0170 F868     	 ldr r0,[r7,#12]
 755 0172 FFF7FEFF 	 bl __aeabi_f2d
 756 0176 0246     	 mov r2,r0
 757 0178 0B46     	 mov r3,r1
 758 017a 1046     	 mov r0,r2
 759 017c 1946     	 mov r1,r3
 760 017e 4CA3     	 adr r3,.L53+16
 761 0180 D3E90023 	 ldrd r2,[r3]
 762 0184 FFF7FEFF 	 bl __aeabi_dsub
 763 0188 0246     	 mov r2,r0
 764 018a 0B46     	 mov r3,r1
 765 018c 1046     	 mov r0,r2
 766 018e 1946     	 mov r1,r3
 767 0190 FFF7FEFF 	 bl __aeabi_d2f
 768 0194 0346     	 mov r3,r0
 769 0196 1846     	 mov r0,r3
 770 0198 FFF7FEFF 	 bl sinf
 771 019c 07EE100A 	 fmsr s14,r0
 772 01a0 4D4B     	 ldr r3,.L53+56
 773 01a2 D3ED007A 	 flds s15,[r3]
 774 01a6 67EE277A 	 fmuls s15,s14,s15
 775 01aa 78EE677A 	 fsubs s15,s16,s15
 776 01ae 17EE900A 	 fmrs r0,s15
 777 01b2 FFF7FEFF 	 bl __aeabi_f2d
 778 01b6 0246     	 mov r2,r0
 779 01b8 0B46     	 mov r3,r1
 780 01ba 1046     	 mov r0,r2
 781 01bc 1946     	 mov r1,r3
 782 01be 3EA3     	 adr r3,.L53+24
 783 01c0 D3E90023 	 ldrd r2,[r3]
 784 01c4 FFF7FEFF 	 bl __aeabi_dmul
 785 01c8 0246     	 mov r2,r0
 786 01ca 0B46     	 mov r3,r1
 787 01cc 1046     	 mov r0,r2
 788 01ce 1946     	 mov r1,r3
 789 01d0 FFF7FEFF 	 bl __aeabi_d2f
 790 01d4 0246     	 mov r2,r0
 791 01d6 434B     	 ldr r3,.L53+68
 792 01d8 1A60     	 str r2,[r3]
 219:../main.c     **** 
 220:../main.c     **** 		if(CAN_control == 1){// can control
 793              	 .loc 3 220 0
 794 01da 434B     	 ldr r3,.L53+72
 795 01dc 1B78     	 ldrb r3,[r3]
 796 01de 012B     	 cmp r3,#1
 797 01e0 3CD1     	 bne .L19
 221:../main.c     **** 
 222:../main.c     **** 			if(CAN_new_meassage == 1){
 798              	 .loc 3 222 0
 799 01e2 424B     	 ldr r3,.L53+76
 800 01e4 1B78     	 ldrb r3,[r3]
 801 01e6 012B     	 cmp r3,#1
 802 01e8 07D1     	 bne .L20
 223:../main.c     **** 				speed_ref = CAN_speed_ref;
 803              	 .loc 3 223 0
 804 01ea 414B     	 ldr r3,.L53+80
 805 01ec 1B68     	 ldr r3,[r3]
 806 01ee 414A     	 ldr r2,.L53+84
 807 01f0 1360     	 str r3,[r2]
 224:../main.c     **** 				CAN_new_meassage = 0;
 808              	 .loc 3 224 0
 809 01f2 3E4B     	 ldr r3,.L53+76
 810 01f4 0022     	 movs r2,#0
 811 01f6 1A70     	 strb r2,[r3]
 812 01f8 05E0     	 b .L21
 813              	.L20:
 225:../main.c     **** 			}
 226:../main.c     **** 			else{
 227:../main.c     **** 				CAN_no_com_counter ++;
 814              	 .loc 3 227 0
 815 01fa 3F4B     	 ldr r3,.L53+88
 816 01fc 1B78     	 ldrb r3,[r3]
 817 01fe 0133     	 adds r3,r3,#1
 818 0200 DAB2     	 uxtb r2,r3
 819 0202 3D4B     	 ldr r3,.L53+88
 820 0204 1A70     	 strb r2,[r3]
 821              	.L21:
 228:../main.c     **** 			}
 229:../main.c     **** 
 230:../main.c     **** 			if(CAN_no_com_counter > CAN_NO_COM_TH){
 822              	 .loc 3 230 0
 823 0206 3C4B     	 ldr r3,.L53+88
 824 0208 1B78     	 ldrb r3,[r3]
 825 020a FA2B     	 cmp r3,#250
 826 020c 06D9     	 bls .L22
 231:../main.c     **** 				//CAN_new_meassage = 0;
 232:../main.c     **** 				CAN_no_com_counter = CAN_NO_COM_TH;
 827              	 .loc 3 232 0
 828 020e 3A4B     	 ldr r3,.L53+88
 829 0210 FA22     	 movs r2,#250
 830 0212 1A70     	 strb r2,[r3]
 233:../main.c     **** 				speed_ref = 0;
 831              	 .loc 3 233 0
 832 0214 374B     	 ldr r3,.L53+84
 833 0216 4FF00002 	 mov r2,#0
 834 021a 1A60     	 str r2,[r3]
 835              	.L22:
 234:../main.c     **** 			}
 235:../main.c     **** 			omega_mech_rps_ref = (speed_ref / WHEEL_R) / (2 * PI);
 836              	 .loc 3 235 0
 837 021c 354B     	 ldr r3,.L53+84
 838 021e 1B68     	 ldr r3,[r3]
 839 0220 1846     	 mov r0,r3
 840 0222 FFF7FEFF 	 bl __aeabi_f2d
 841 0226 0246     	 mov r2,r0
 842 0228 0B46     	 mov r3,r1
 843 022a 1046     	 mov r0,r2
 844 022c 1946     	 mov r1,r3
 845 022e 24A3     	 adr r3,.L53+32
 846 0230 D3E90023 	 ldrd r2,[r3]
 847 0234 FFF7FEFF 	 bl __aeabi_ddiv
 848 0238 0246     	 mov r2,r0
 849 023a 0B46     	 mov r3,r1
 850 023c 1046     	 mov r0,r2
 851 023e 1946     	 mov r1,r3
 852 0240 21A3     	 adr r3,.L53+40
 853 0242 D3E90023 	 ldrd r2,[r3]
 854 0246 FFF7FEFF 	 bl __aeabi_ddiv
 855 024a 0246     	 mov r2,r0
 856 024c 0B46     	 mov r3,r1
 857 024e 1046     	 mov r0,r2
 858 0250 1946     	 mov r1,r3
 859 0252 FFF7FEFF 	 bl __aeabi_d2f
 860 0256 0246     	 mov r2,r0
 861 0258 284B     	 ldr r3,.L53+92
 862 025a 1A60     	 str r2,[r3]
 863              	.L19:
 236:../main.c     **** 		}
 237:../main.c     **** 
 238:../main.c     **** 		// Always run speed controll calc
 239:../main.c     **** 		if(omega_mech_rps_ref == 0  && (( -2 < omega_mech_rps) && (omega_mech_rps < 2))){ // no contorl i
 864              	 .loc 3 239 0
 865 025c 274B     	 ldr r3,.L53+92
 866 025e D3ED007A 	 flds s15,[r3]
 867 0262 F5EE407A 	 fcmpzs s15
 868 0266 F1EE10FA 	 fmstat
 869 026a 4DD1     	 bne .L23
 870              	 .loc 3 239 0 is_stmt 0 discriminator 1
 871 026c 244B     	 ldr r3,.L53+96
 872 026e D3ED007A 	 flds s15,[r3]
 873 0272 B8EE007A 	 fconsts s14,#128
 874 0276 F4EEC77A 	 fcmpes s15,s14
 875 027a F1EE10FA 	 fmstat
 876 027e 43DD     	 ble .L23
 877              	 .loc 3 239 0 discriminator 2
 878 0280 1F4B     	 ldr r3,.L53+96
 879 0282 D3ED007A 	 flds s15,[r3]
 880 0286 B0EE007A 	 fconsts s14,#0
 881 028a F4EEC77A 	 fcmpes s15,s14
 882 028e F1EE10FA 	 fmstat
 883 0292 39D5     	 bpl .L23
 240:../main.c     **** 			T_ref_controlled = 0;
 884              	 .loc 3 240 0 is_stmt 1
 885 0294 1B4B     	 ldr r3,.L53+100
 886 0296 4FF00002 	 mov r2,#0
 887 029a 1A60     	 str r2,[r3]
 888 029c CBE0     	 b .L26
 889              	.L54:
 890 029e 00BF     	 .align 3
 891              	.L53:
 892 02a0 4DC90777 	 .word 1996998989
 893 02a4 46DF913F 	 .word 1066524486
 894 02a8 A038DB37 	 .word 937113760
 895 02ac 52C10040 	 .word 1073791314
 896 02b0 A038DB37 	 .word 937113760
 897 02b4 52C11040 	 .word 1074839890
 898 02b8 93761F57 	 .word 1461679763
 899 02bc 5555E53F 	 .word 1071994197
 900 02c0 48E17A14 	 .word 343597384
 901 02c4 AE47B13F 	 .word 1068582830
 902 02c8 F1D4C853 	 .word 1405670641
 903 02cc FB211940 	 .word 1075388923
 904 02d0 00000000 	 .word Current_U
 905 02d4 00000000 	 .word Current_V
 906 02d8 00000000 	 .word Current_W
 907 02dc 00000000 	 .word angle_phi
 908 02e0 00000000 	 .word id
 909 02e4 00000000 	 .word iq
 910 02e8 00000000 	 .word CAN_control
 911 02ec 00000000 	 .word CAN_new_meassage
 912 02f0 00000000 	 .word CAN_speed_ref
 913 02f4 00000000 	 .word speed_ref
 914 02f8 00000000 	 .word CAN_no_com_counter
 915 02fc 00000000 	 .word omega_mech_rps_ref
 916 0300 00000000 	 .word omega_mech_rps
 917 0304 00000000 	 .word T_ref_controlled
 918              	.L23:
 241:../main.c     **** 		}
 242:../main.c     **** 		else{
 243:../main.c     **** 			T_ref_controlled = PI_Controller(omega_mech_rps_ref,omega_mech_rps,&omega_param); // outer contr
 919              	 .loc 3 243 0
 920 0308 B14B     	 ldr r3,.L55+24
 921 030a 1A68     	 ldr r2,[r3]
 922 030c B14B     	 ldr r3,.L55+28
 923 030e 1B68     	 ldr r3,[r3]
 924 0310 1046     	 mov r0,r2
 925 0312 1946     	 mov r1,r3
 926 0314 B04A     	 ldr r2,.L55+32
 927 0316 FFF7FEFF 	 bl PI_Controller
 928 031a 0246     	 mov r2,r0
 929 031c AF4B     	 ldr r3,.L55+36
 930 031e 1A60     	 str r2,[r3]
 244:../main.c     **** 
 245:../main.c     **** 			if(start_help == 1 ){// troque added at start
 931              	 .loc 3 245 0
 932 0320 AF4B     	 ldr r3,.L55+40
 933 0322 1B78     	 ldrb r3,[r3]
 934 0324 012B     	 cmp r3,#1
 935 0326 40F08680 	 bne .L26
 246:../main.c     **** 				if(omega_mech_rps_ref != 0 && (copysign(1,omega_mech_rps_ref) != copysign(1,omega_mech_rps) || 
 936              	 .loc 3 246 0
 937 032a A94B     	 ldr r3,.L55+24
 938 032c D3ED007A 	 flds s15,[r3]
 939 0330 F5EE407A 	 fcmpzs s15
 940 0334 F1EE10FA 	 fmstat
 941 0338 2DD0     	 beq .L27
 942              	 .loc 3 246 0 is_stmt 0 discriminator 1
 943 033a A54B     	 ldr r3,.L55+24
 944 033c 1B68     	 ldr r3,[r3]
 945 033e 1846     	 mov r0,r3
 946 0340 FFF7FEFF 	 bl __aeabi_f2d
 947 0344 0246     	 mov r2,r0
 948 0346 0B46     	 mov r3,r1
 949 0348 4FF00000 	 mov r0,#0
 950 034c A549     	 ldr r1,.L55+44
 951 034e FFF7FEFF 	 bl copysign
 952 0352 0446     	 mov r4,r0
 953 0354 0D46     	 mov r5,r1
 954 0356 9F4B     	 ldr r3,.L55+28
 955 0358 1B68     	 ldr r3,[r3]
 956 035a 1846     	 mov r0,r3
 957 035c FFF7FEFF 	 bl __aeabi_f2d
 958 0360 0246     	 mov r2,r0
 959 0362 0B46     	 mov r3,r1
 960 0364 4FF00000 	 mov r0,#0
 961 0368 9E49     	 ldr r1,.L55+44
 962 036a FFF7FEFF 	 bl copysign
 963 036e 0246     	 mov r2,r0
 964 0370 0B46     	 mov r3,r1
 965 0372 2046     	 mov r0,r4
 966 0374 2946     	 mov r1,r5
 967 0376 FFF7FEFF 	 bl __aeabi_dcmpeq
 968 037a 0346     	 mov r3,r0
 969 037c 002B     	 cmp r3,#0
 970 037e 07D0     	 beq .L28
 971              	 .loc 3 246 0 discriminator 2
 972 0380 944B     	 ldr r3,.L55+28
 973 0382 D3ED007A 	 flds s15,[r3]
 974 0386 F5EE407A 	 fcmpzs s15
 975 038a F1EE10FA 	 fmstat
 976 038e 02D1     	 bne .L27
 977              	.L28:
 247:../main.c     **** 					start_help_count = 10;
 978              	 .loc 3 247 0 is_stmt 1
 979 0390 954B     	 ldr r3,.L55+48
 980 0392 0A22     	 movs r2,#10
 981 0394 1A70     	 strb r2,[r3]
 982              	.L27:
 248:../main.c     **** 				}
 249:../main.c     **** 
 250:../main.c     **** 				if(start_help_count > 0){
 983              	 .loc 3 250 0
 984 0396 944B     	 ldr r3,.L55+48
 985 0398 1B78     	 ldrb r3,[r3]
 986 039a 002B     	 cmp r3,#0
 987 039c 4BD0     	 beq .L26
 251:../main.c     **** 					start_help_flag = 1;
 988              	 .loc 3 251 0
 989 039e 934B     	 ldr r3,.L55+52
 990 03a0 0122     	 movs r2,#1
 991 03a2 1A70     	 strb r2,[r3]
 252:../main.c     **** 					start_help_count --;
 992              	 .loc 3 252 0
 993 03a4 904B     	 ldr r3,.L55+48
 994 03a6 1B78     	 ldrb r3,[r3]
 995 03a8 013B     	 subs r3,r3,#1
 996 03aa DAB2     	 uxtb r2,r3
 997 03ac 8E4B     	 ldr r3,.L55+48
 998 03ae 1A70     	 strb r2,[r3]
 253:../main.c     **** 					if(omega_mech_rps_ref > 0)T_ref_controlled += START_HELP_T;
 999              	 .loc 3 253 0
 1000 03b0 874B     	 ldr r3,.L55+24
 1001 03b2 D3ED007A 	 flds s15,[r3]
 1002 03b6 F5EEC07A 	 fcmpezs s15
 1003 03ba F1EE10FA 	 fmstat
 1004 03be 17DD     	 ble .L51
 1005              	 .loc 3 253 0 is_stmt 0 discriminator 1
 1006 03c0 864B     	 ldr r3,.L55+36
 1007 03c2 1B68     	 ldr r3,[r3]
 1008 03c4 1846     	 mov r0,r3
 1009 03c6 FFF7FEFF 	 bl __aeabi_f2d
 1010 03ca 0246     	 mov r2,r0
 1011 03cc 0B46     	 mov r3,r1
 1012 03ce 1046     	 mov r0,r2
 1013 03d0 1946     	 mov r1,r3
 1014 03d2 79A3     	 adr r3,.L55
 1015 03d4 D3E90023 	 ldrd r2,[r3]
 1016 03d8 FFF7FEFF 	 bl __aeabi_dadd
 1017 03dc 0246     	 mov r2,r0
 1018 03de 0B46     	 mov r3,r1
 1019 03e0 1046     	 mov r0,r2
 1020 03e2 1946     	 mov r1,r3
 1021 03e4 FFF7FEFF 	 bl __aeabi_d2f
 1022 03e8 0246     	 mov r2,r0
 1023 03ea 7C4B     	 ldr r3,.L55+36
 1024 03ec 1A60     	 str r2,[r3]
 1025 03ee 22E0     	 b .L26
 1026              	.L51:
 254:../main.c     **** 					else if(omega_mech_rps_ref < 0)T_ref = T_ref_controlled -= START_HELP_T;
 1027              	 .loc 3 254 0 is_stmt 1
 1028 03f0 774B     	 ldr r3,.L55+24
 1029 03f2 D3ED007A 	 flds s15,[r3]
 1030 03f6 F5EEC07A 	 fcmpezs s15
 1031 03fa F1EE10FA 	 fmstat
 1032 03fe 1AD5     	 bpl .L26
 1033              	 .loc 3 254 0 is_stmt 0 discriminator 1
 1034 0400 764B     	 ldr r3,.L55+36
 1035 0402 1B68     	 ldr r3,[r3]
 1036 0404 1846     	 mov r0,r3
 1037 0406 FFF7FEFF 	 bl __aeabi_f2d
 1038 040a 0246     	 mov r2,r0
 1039 040c 0B46     	 mov r3,r1
 1040 040e 1046     	 mov r0,r2
 1041 0410 1946     	 mov r1,r3
 1042 0412 69A3     	 adr r3,.L55
 1043 0414 D3E90023 	 ldrd r2,[r3]
 1044 0418 FFF7FEFF 	 bl __aeabi_dsub
 1045 041c 0246     	 mov r2,r0
 1046 041e 0B46     	 mov r3,r1
 1047 0420 1046     	 mov r0,r2
 1048 0422 1946     	 mov r1,r3
 1049 0424 FFF7FEFF 	 bl __aeabi_d2f
 1050 0428 0246     	 mov r2,r0
 1051 042a 6C4B     	 ldr r3,.L55+36
 1052 042c 1A60     	 str r2,[r3]
 1053 042e 6B4B     	 ldr r3,.L55+36
 1054 0430 1B68     	 ldr r3,[r3]
 1055 0432 6F4A     	 ldr r2,.L55+56
 1056 0434 1360     	 str r3,[r2]
 1057              	.L26:
 255:../main.c     **** 				}
 256:../main.c     **** 			}
 257:../main.c     **** 		}
 258:../main.c     **** 
 259:../main.c     **** 		if (Speed_control == 1){// activation of speed control
 1058              	 .loc 3 259 0 is_stmt 1
 1059 0436 6F4B     	 ldr r3,.L55+60
 1060 0438 1B78     	 ldrb r3,[r3]
 1061 043a 012B     	 cmp r3,#1
 1062 043c 03D1     	 bne .L32
 260:../main.c     **** 			T_ref = T_ref_controlled;
 1063              	 .loc 3 260 0
 1064 043e 674B     	 ldr r3,.L55+36
 1065 0440 1B68     	 ldr r3,[r3]
 1066 0442 6B4A     	 ldr r2,.L55+56
 1067 0444 1360     	 str r3,[r2]
 1068              	.L32:
 261:../main.c     **** 		}
 262:../main.c     **** 
 263:../main.c     **** 		if(Torque_control == 1){
 1069              	 .loc 3 263 0
 1070 0446 6C4B     	 ldr r3,.L55+64
 1071 0448 1B78     	 ldrb r3,[r3]
 1072 044a 012B     	 cmp r3,#1
 1073 044c 47D1     	 bne .L33
 264:../main.c     **** 
 265:../main.c     **** 			if(MOTOR_NUM == 1 || MOTOR_NUM == 10) {
 266:../main.c     **** 				iq_ref =  T_ref / K_T; // dirction for motor 1 and 10
 1074              	 .loc 3 266 0
 1075 044e 684B     	 ldr r3,.L55+56
 1076 0450 1B68     	 ldr r3,[r3]
 1077 0452 1846     	 mov r0,r3
 1078 0454 FFF7FEFF 	 bl __aeabi_f2d
 1079 0458 0246     	 mov r2,r0
 1080 045a 0B46     	 mov r3,r1
 1081 045c 1046     	 mov r0,r2
 1082 045e 1946     	 mov r1,r3
 1083 0460 57A3     	 adr r3,.L55+8
 1084 0462 D3E90023 	 ldrd r2,[r3]
 1085 0466 FFF7FEFF 	 bl __aeabi_ddiv
 1086 046a 0246     	 mov r2,r0
 1087 046c 0B46     	 mov r3,r1
 1088 046e 1046     	 mov r0,r2
 1089 0470 1946     	 mov r1,r3
 1090 0472 FFF7FEFF 	 bl __aeabi_d2f
 1091 0476 0246     	 mov r2,r0
 1092 0478 604B     	 ldr r3,.L55+68
 1093 047a 1A60     	 str r2,[r3]
 267:../main.c     **** 			}
 268:../main.c     **** 			else{
 269:../main.c     **** 				iq_ref = - T_ref / K_T;// dirction for others
 270:../main.c     **** 			}
 271:../main.c     **** 
 272:../main.c     **** 			//limit to IQ_REF_MAx limit
 273:../main.c     **** 			if(iq_ref < -IQ_REF_MAX) iq_ref = -IQ_REF_MAX;
 1094              	 .loc 3 273 0
 1095 047c 5F4B     	 ldr r3,.L55+68
 1096 047e D3ED007A 	 flds s15,[r3]
 1097 0482 B9EE047A 	 fconsts s14,#148
 1098 0486 F4EEC77A 	 fcmpes s15,s14
 1099 048a F1EE10FA 	 fmstat
 1100 048e 02D5     	 bpl .L34
 1101              	 .loc 3 273 0 is_stmt 0 discriminator 1
 1102 0490 5A4B     	 ldr r3,.L55+68
 1103 0492 5B4A     	 ldr r2,.L55+72
 1104 0494 1A60     	 str r2,[r3]
 1105              	.L34:
 274:../main.c     **** 			if(iq_ref > IQ_REF_MAX) iq_ref = IQ_REF_MAX;
 1106              	 .loc 3 274 0 is_stmt 1
 1107 0496 594B     	 ldr r3,.L55+68
 1108 0498 D3ED007A 	 flds s15,[r3]
 1109 049c B1EE047A 	 fconsts s14,#20
 1110 04a0 F4EEC77A 	 fcmpes s15,s14
 1111 04a4 F1EE10FA 	 fmstat
 1112 04a8 02DD     	 ble .L36
 1113              	 .loc 3 274 0 is_stmt 0 discriminator 1
 1114 04aa 544B     	 ldr r3,.L55+68
 1115 04ac 554A     	 ldr r2,.L55+76
 1116 04ae 1A60     	 str r2,[r3]
 1117              	.L36:
 275:../main.c     **** 
 276:../main.c     **** 
 277:../main.c     **** 			Vd = PI_Controller(0.0,id,&Id_param);
 1118              	 .loc 3 277 0 is_stmt 1
 1119 04b0 554B     	 ldr r3,.L55+80
 1120 04b2 1B68     	 ldr r3,[r3]
 1121 04b4 4FF00000 	 mov r0,#0
 1122 04b8 1946     	 mov r1,r3
 1123 04ba 544A     	 ldr r2,.L55+84
 1124 04bc FFF7FEFF 	 bl PI_Controller
 1125 04c0 0246     	 mov r2,r0
 1126 04c2 534B     	 ldr r3,.L55+88
 1127 04c4 1A60     	 str r2,[r3]
 278:../main.c     **** 			Vq = PI_Controller(iq_ref,iq,&Iq_param); // toque controll
 1128              	 .loc 3 278 0
 1129 04c6 4D4B     	 ldr r3,.L55+68
 1130 04c8 1A68     	 ldr r2,[r3]
 1131 04ca 524B     	 ldr r3,.L55+92
 1132 04cc 1B68     	 ldr r3,[r3]
 1133 04ce 1046     	 mov r0,r2
 1134 04d0 1946     	 mov r1,r3
 1135 04d2 514A     	 ldr r2,.L55+96
 1136 04d4 FFF7FEFF 	 bl PI_Controller
 1137 04d8 0246     	 mov r2,r0
 1138 04da 504B     	 ldr r3,.L55+100
 1139 04dc 1A60     	 str r2,[r3]
 1140              	.L33:
 279:../main.c     **** 		}
 280:../main.c     **** 
 281:../main.c     **** 		// dq to alpha beta for voltage
 282:../main.c     **** 		Valpha = Vd*cos_phi - Vq*sin_phi;
 1141              	 .loc 3 282 0
 1142 04de 4C4B     	 ldr r3,.L55+88
 1143 04e0 93ED007A 	 flds s14,[r3]
 1144 04e4 D7ED027A 	 flds s15,[r7,#8]
 1145 04e8 27EE277A 	 fmuls s14,s14,s15
 1146 04ec 4B4B     	 ldr r3,.L55+100
 1147 04ee D3ED006A 	 flds s13,[r3]
 1148 04f2 D7ED017A 	 flds s15,[r7,#4]
 1149 04f6 66EEA77A 	 fmuls s15,s13,s15
 1150 04fa 77EE677A 	 fsubs s15,s14,s15
 1151 04fe 484B     	 ldr r3,.L55+104
 1152 0500 C3ED007A 	 fsts s15,[r3]
 283:../main.c     **** 		Vbeta = Vd*sin_phi + Vq*cos_phi;
 1153              	 .loc 3 283 0
 1154 0504 424B     	 ldr r3,.L55+88
 1155 0506 93ED007A 	 flds s14,[r3]
 1156 050a D7ED017A 	 flds s15,[r7,#4]
 1157 050e 27EE277A 	 fmuls s14,s14,s15
 1158 0512 424B     	 ldr r3,.L55+100
 1159 0514 D3ED006A 	 flds s13,[r3]
 1160 0518 D7ED027A 	 flds s15,[r7,#8]
 1161 051c 66EEA77A 	 fmuls s15,s13,s15
 1162 0520 77EE277A 	 fadds s15,s14,s15
 1163 0524 3F4B     	 ldr r3,.L55+108
 1164 0526 C3ED007A 	 fsts s15,[r3]
 284:../main.c     **** 
 285:../main.c     **** 		// calc angle for SVM app
 286:../main.c     **** 		if(Valpha == 0) Valpha =  0.00001; // prevent exeption div by 0
 1165              	 .loc 3 286 0
 1166 052a 3D4B     	 ldr r3,.L55+104
 1167 052c D3ED007A 	 flds s15,[r3]
 1168 0530 F5EE407A 	 fcmpzs s15
 1169 0534 F1EE10FA 	 fmstat
 1170 0538 02D1     	 bne .L38
 1171              	 .loc 3 286 0 is_stmt 0 discriminator 1
 1172 053a 394B     	 ldr r3,.L55+104
 1173 053c 3A4A     	 ldr r2,.L55+112
 1174 053e 1A60     	 str r2,[r3]
 1175              	.L38:
 287:../main.c     **** 		angle_ab_rad = atanf(Vbeta / Valpha);
 1176              	 .loc 3 287 0 is_stmt 1
 1177 0540 384B     	 ldr r3,.L55+108
 1178 0542 93ED007A 	 flds s14,[r3]
 1179 0546 364B     	 ldr r3,.L55+104
 1180 0548 D3ED007A 	 flds s15,[r3]
 1181 054c C7EE277A 	 fdivs s15,s14,s15
 1182 0550 17EE900A 	 fmrs r0,s15
 1183 0554 FFF7FEFF 	 bl atanf
 1184 0558 0246     	 mov r2,r0
 1185 055a 344B     	 ldr r3,.L55+116
 1186 055c 1A60     	 str r2,[r3]
 288:../main.c     **** 		angle_ab = angle_ab_rad / Pi180;
 1187              	 .loc 3 288 0
 1188 055e 334B     	 ldr r3,.L55+116
 1189 0560 1B68     	 ldr r3,[r3]
 1190 0562 1846     	 mov r0,r3
 1191 0564 FFF7FEFF 	 bl __aeabi_f2d
 1192 0568 0246     	 mov r2,r0
 1193 056a 0B46     	 mov r3,r1
 1194 056c 1046     	 mov r0,r2
 1195 056e 1946     	 mov r1,r3
 1196 0570 15A3     	 adr r3,.L55+16
 1197 0572 D3E90023 	 ldrd r2,[r3]
 1198 0576 FFF7FEFF 	 bl __aeabi_ddiv
 1199 057a 0246     	 mov r2,r0
 1200 057c 0B46     	 mov r3,r1
 1201 057e 1046     	 mov r0,r2
 1202 0580 1946     	 mov r1,r3
 1203 0582 FFF7FEFF 	 bl __aeabi_d2f
 1204 0586 0246     	 mov r2,r0
 1205 0588 294B     	 ldr r3,.L55+120
 1206 058a 1A60     	 str r2,[r3]
 289:../main.c     **** 
 290:../main.c     **** 		if(Valpha < 0.0){angle_ab = angle_ab + 180.0;}			// failure correction of angle (tangens)
 1207              	 .loc 3 290 0
 1208 058c 244B     	 ldr r3,.L55+104
 1209 058e D3ED007A 	 flds s15,[r3]
 1210 0592 F5EEC07A 	 fcmpezs s15
 1211 0596 F1EE10FA 	 fmstat
 1212 059a 4DD5     	 bpl .L52
 1213              	 .loc 3 290 0 is_stmt 0 discriminator 1
 1214 059c 244B     	 ldr r3,.L55+120
 1215 059e D3ED007A 	 flds s15,[r3]
 1216 05a2 9FED247A 	 flds s14,.L55+124
 1217 05a6 77EE877A 	 fadds s15,s15,s14
 1218 05aa 214B     	 ldr r3,.L55+120
 1219 05ac C3ED007A 	 fsts s15,[r3]
 1220 05b0 54E0     	 b .L41
 1221              	.L56:
 1222 05b2 00BFAFF3 	 .align 3
 1222      0080
 1223              	.L55:
 1224 05b8 9A999999 	 .word -1717986918
 1225 05bc 9999B93F 	 .word 1069128089
 1226 05c0 E17A14AE 	 .word -1374389535
 1227 05c4 47E1CA3F 	 .word 1070260551
 1228 05c8 4DC90777 	 .word 1996998989
 1229 05cc 46DF913F 	 .word 1066524486
 1230 05d0 00000000 	 .word omega_mech_rps_ref
 1231 05d4 00000000 	 .word omega_mech_rps
 1232 05d8 00000000 	 .word omega_param
 1233 05dc 00000000 	 .word T_ref_controlled
 1234 05e0 00000000 	 .word start_help
 1235 05e4 0000F03F 	 .word 1072693248
 1236 05e8 00000000 	 .word start_help_count
 1237 05ec 00000000 	 .word start_help_flag
 1238 05f0 00000000 	 .word T_ref
 1239 05f4 00000000 	 .word Speed_control
 1240 05f8 00000000 	 .word Torque_control
 1241 05fc 00000000 	 .word iq_ref
 1242 0600 0000A0C0 	 .word -1063256064
 1243 0604 0000A040 	 .word 1084227584
 1244 0608 00000000 	 .word id
 1245 060c 00000000 	 .word Id_param
 1246 0610 00000000 	 .word Vd
 1247 0614 00000000 	 .word iq
 1248 0618 00000000 	 .word Iq_param
 1249 061c 00000000 	 .word Vq
 1250 0620 00000000 	 .word Valpha
 1251 0624 00000000 	 .word Vbeta
 1252 0628 ACC52737 	 .word 925353388
 1253 062c 00000000 	 .word angle_ab_rad
 1254 0630 00000000 	 .word angle_ab
 1255 0634 00003443 	 .word 1127481344
 1256              	.L52:
 291:../main.c     **** 		else if(Vbeta < 0.0){angle_ab = angle_ab + 360.0;}
 1257              	 .loc 3 291 0 is_stmt 1
 1258 0638 334B     	 ldr r3,.L57+8
 1259 063a D3ED007A 	 flds s15,[r3]
 1260 063e F5EEC07A 	 fcmpezs s15
 1261 0642 F1EE10FA 	 fmstat
 1262 0646 09D5     	 bpl .L41
 1263              	 .loc 3 291 0 is_stmt 0 discriminator 1
 1264 0648 304B     	 ldr r3,.L57+12
 1265 064a D3ED007A 	 flds s15,[r3]
 1266 064e 9FED307A 	 flds s14,.L57+16
 1267 0652 77EE877A 	 fadds s15,s15,s14
 1268 0656 2D4B     	 ldr r3,.L57+12
 1269 0658 C3ED007A 	 fsts s15,[r3]
 1270              	.L41:
 292:../main.c     **** 
 293:../main.c     **** 		// amplitude calculation
 294:../main.c     **** 		amplitude_ab = sqrtf(Valpha*Valpha + Vbeta*Vbeta);
 1271              	 .loc 3 294 0 is_stmt 1
 1272 065c 2D4B     	 ldr r3,.L57+20
 1273 065e 93ED007A 	 flds s14,[r3]
 1274 0662 2C4B     	 ldr r3,.L57+20
 1275 0664 D3ED007A 	 flds s15,[r3]
 1276 0668 27EE277A 	 fmuls s14,s14,s15
 1277 066c 264B     	 ldr r3,.L57+8
 1278 066e D3ED006A 	 flds s13,[r3]
 1279 0672 254B     	 ldr r3,.L57+8
 1280 0674 D3ED007A 	 flds s15,[r3]
 1281 0678 66EEA77A 	 fmuls s15,s13,s15
 1282 067c 77EE277A 	 fadds s15,s14,s15
 1283 0680 17EE900A 	 fmrs r0,s15
 1284 0684 FFF7FEFF 	 bl sqrtf
 1285 0688 0246     	 mov r2,r0
 1286 068a 234B     	 ldr r3,.L57+24
 1287 068c 1A60     	 str r2,[r3]
 295:../main.c     **** 
 296:../main.c     **** 		//K_inv = V/m --> m = V / K_inv
 297:../main.c     **** 		modulation_index = amplitude_ab / (V_DC_link / 1.732);
 1288              	 .loc 3 297 0
 1289 068e 224B     	 ldr r3,.L57+24
 1290 0690 1B68     	 ldr r3,[r3]
 1291 0692 1846     	 mov r0,r3
 1292 0694 FFF7FEFF 	 bl __aeabi_f2d
 1293 0698 0446     	 mov r4,r0
 1294 069a 0D46     	 mov r5,r1
 1295 069c 1F4B     	 ldr r3,.L57+28
 1296 069e 1B68     	 ldr r3,[r3]
 1297 06a0 1846     	 mov r0,r3
 1298 06a2 FFF7FEFF 	 bl __aeabi_f2d
 1299 06a6 0246     	 mov r2,r0
 1300 06a8 0B46     	 mov r3,r1
 1301 06aa 1046     	 mov r0,r2
 1302 06ac 1946     	 mov r1,r3
 1303 06ae 14A3     	 adr r3,.L57
 1304 06b0 D3E90023 	 ldrd r2,[r3]
 1305 06b4 FFF7FEFF 	 bl __aeabi_ddiv
 1306 06b8 0246     	 mov r2,r0
 1307 06ba 0B46     	 mov r3,r1
 1308 06bc 2046     	 mov r0,r4
 1309 06be 2946     	 mov r1,r5
 1310 06c0 FFF7FEFF 	 bl __aeabi_ddiv
 1311 06c4 0246     	 mov r2,r0
 1312 06c6 0B46     	 mov r3,r1
 1313 06c8 1046     	 mov r0,r2
 1314 06ca 1946     	 mov r1,r3
 1315 06cc FFF7FEFF 	 bl __aeabi_d2f
 1316 06d0 0246     	 mov r2,r0
 1317 06d2 134B     	 ldr r3,.L57+32
 1318 06d4 1A60     	 str r2,[r3]
 298:../main.c     **** 
 299:../main.c     **** 		//scale maximum 1 to 10000 -->
 300:../main.c     **** 		modulation_index_scaled = 10000*modulation_index;
 1319              	 .loc 3 300 0
 1320 06d6 124B     	 ldr r3,.L57+32
 1321 06d8 D3ED007A 	 flds s15,[r3]
 1322 06dc 9FED117A 	 flds s14,.L57+36
 1323 06e0 67EE877A 	 fmuls s15,s15,s14
 1324 06e4 104B     	 ldr r3,.L57+40
 1325 06e6 C3ED007A 	 fsts s15,[r3]
 301:../main.c     **** 
 302:../main.c     **** 		DIGITAL_IO_SetOutputLow(&status_LED_red_cal_time); // 83% duty amplitued calc takes 16% of the ti
 1326              	 .loc 3 302 0
 1327 06ea 1048     	 ldr r0,.L57+44
 1328 06ec FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 303:../main.c     **** 
 304:../main.c     **** }
 1329              	 .loc 3 304 0
 1330 06f0 1037     	 adds r7,r7,#16
 1331              	.LCFI38:
 1332              	 .cfi_def_cfa_offset 24
 1333 06f2 BD46     	 mov sp,r7
 1334              	.LCFI39:
 1335              	 .cfi_def_cfa_register 13
 1336              	 
 1337 06f4 BDEC028B 	 fldmfdd sp!,{d8}
 1338              	.LCFI40:
 1339              	 .cfi_restore 80
 1340              	 .cfi_restore 81
 1341              	 .cfi_def_cfa_offset 16
 1342 06f8 B0BD     	 pop {r4,r5,r7,pc}
 1343              	.L58:
 1344 06fa 00BFAFF3 	 .align 3
 1344      0080
 1345              	.L57:
 1346 0700 83C0CAA1 	 .word -1580547965
 1347 0704 45B6FB3F 	 .word 1073460805
 1348 0708 00000000 	 .word Vbeta
 1349 070c 00000000 	 .word angle_ab
 1350 0710 0000B443 	 .word 1135869952
 1351 0714 00000000 	 .word Valpha
 1352 0718 00000000 	 .word amplitude_ab
 1353 071c 00000000 	 .word V_DC_link
 1354 0720 00000000 	 .word modulation_index
 1355 0724 00401C46 	 .word 1176256512
 1356 0728 00000000 	 .word modulation_index_scaled
 1357 072c 00000000 	 .word status_LED_red_cal_time
 1358              	 .cfi_endproc
 1359              	.LFE476:
 1361              	 .text
 1362              	.Letext0:
 1363              	 .file 4 "c:\\dave\\dave-ide-4.4.2-64bit\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1364              	 .file 5 "c:\\dave\\dave-ide-4.4.2-64bit\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1365              	 .file 6 "C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 1366              	 .file 7 "C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc/xmc4_gpio.h"
 1367              	 .file 8 "C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc/xmc4_scu.h"
 1368              	 .file 9 "C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc/xmc_usic.h"
 1369              	 .file 10 "C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc/xmc_ccu8.h"
 1370              	 .file 11 "C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/GLOBAL_CCU8/global_ccu8.h"
 1371              	 .file 12 "C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/PWM_SVM/pwm_svm.h"
 1372              	 .file 13 "C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/XMCLib/inc/xmc_can.h"
 1373              	 .file 14 "C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/GLOBAL_CAN/global_can.h"
 1374              	 .file 15 "C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/CAN_NODE/can_node.h"
 1375              	 .file 16 "C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DAVE.h"
 1376              	 .file 17 "../PI_Controller.h"
 1377              	 .file 18 "C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/CMSIS/Include/core_cm4.h"
 1378              	 .file 19 "C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Libraries/CMSIS/Infineon/XMC4500_series/Include/system_XMC4500.h"
 1379              	 .file 20 "C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/DIGITAL_IO/digital_io_extern.h"
 1380              	 .file 21 "C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/PWM_SVM/pwm_svm_extern.h"
 1381              	 .file 22 "C:/GitHub/MobRob_Rover_NEW/Inverter_abgabe_2/Mobrob_Inverter/Dave/Generated/CAN_NODE/can_node_extern.h"
 1382              	 .file 23 "../Globals.h"
 1383              	 .file 24 "../CAN.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
    {standard input}:20     .text.XMC_GPIO_SetOutputHigh:00000000 $t
    {standard input}:24     .text.XMC_GPIO_SetOutputHigh:00000000 XMC_GPIO_SetOutputHigh
    {standard input}:68     .text.XMC_GPIO_SetOutputLow:00000000 $t
    {standard input}:72     .text.XMC_GPIO_SetOutputLow:00000000 XMC_GPIO_SetOutputLow
    {standard input}:115    .text.DIGITAL_IO_SetOutputHigh:00000000 $t
    {standard input}:119    .text.DIGITAL_IO_SetOutputHigh:00000000 DIGITAL_IO_SetOutputHigh
    {standard input}:159    .text.DIGITAL_IO_SetOutputLow:00000000 $t
    {standard input}:163    .text.DIGITAL_IO_SetOutputLow:00000000 DIGITAL_IO_SetOutputLow
    {standard input}:205    .data.Torque_control:00000000 Torque_control
    {standard input}:211    .data.Speed_control:00000000 Speed_control
    {standard input}:217    .data.CAN_control:00000000 CAN_control
                            *COM*:00000004 Current_U
                            *COM*:00000004 Current_V
                            *COM*:00000004 Current_W
                            *COM*:00000004 ialpha
                            *COM*:00000004 ibeta
                            *COM*:00000004 iq
                            *COM*:00000004 id
                            *COM*:00000004 Valpha
                            *COM*:00000004 Vbeta
    {standard input}:233    .bss.speed_ref:00000000 speed_ref
    {standard input}:230    .bss.speed_ref:00000000 $d
    {standard input}:240    .bss.omega_ele_rads_ref:00000000 omega_ele_rads_ref
    {standard input}:237    .bss.omega_ele_rads_ref:00000000 $d
    {standard input}:247    .bss.iq_ref:00000000 iq_ref
    {standard input}:244    .bss.iq_ref:00000000 $d
    {standard input}:254    .bss.T_ref:00000000 T_ref
    {standard input}:251    .bss.T_ref:00000000 $d
                            *COM*:00000004 T_ref_controlled
    {standard input}:262    .bss.omega_mech_rps_ref:00000000 omega_mech_rps_ref
    {standard input}:259    .bss.omega_mech_rps_ref:00000000 $d
    {standard input}:269    .bss.Vd:00000000 Vd
    {standard input}:266    .bss.Vd:00000000 $d
    {standard input}:276    .bss.Vq:00000000 Vq
    {standard input}:273    .bss.Vq:00000000 $d
                            *COM*:00000004 modulation_index
                            *COM*:00000004 modulation_index_scaled
                            *COM*:00000004 angle_ab
                            *COM*:00000004 angle_ab_rad
                            *COM*:00000004 amplitude_ab
    {standard input}:288    .data.Ts:00000000 Ts
    {standard input}:285    .data.Ts:00000000 $d
    {standard input}:295    .data.Tcyc:00000000 Tcyc
    {standard input}:292    .data.Tcyc:00000000 $d
    {standard input}:302    .data.scaling_factor:00000000 scaling_factor
    {standard input}:299    .data.scaling_factor:00000000 $d
                            *COM*:00000004 amplitude_corrected
    {standard input}:309    .bss.count:00000000 count
    {standard input}:310    .bss.count:00000000 $d
    {standard input}:315    .bss.Speed_detection_OK:00000000 Speed_detection_OK
    {standard input}:316    .bss.Speed_detection_OK:00000000 $d
    {standard input}:322    .data.setting_cyc:00000000 setting_cyc
    {standard input}:319    .data.setting_cyc:00000000 $d
    {standard input}:329    .data.step_start:00000000 step_start
    {standard input}:326    .data.step_start:00000000 $d
    {standard input}:336    .data.step_to:00000000 step_to
    {standard input}:333    .data.step_to:00000000 $d
    {standard input}:342    .bss.start_help_count:00000000 start_help_count
    {standard input}:343    .bss.start_help_count:00000000 $d
    {standard input}:348    .bss.start_help:00000000 start_help
    {standard input}:349    .bss.start_help:00000000 $d
    {standard input}:354    .bss.start_help_flag:00000000 start_help_flag
    {standard input}:355    .bss.start_help_flag:00000000 $d
    {standard input}:361    .bss.CAN_send_counter:00000000 CAN_send_counter
    {standard input}:358    .bss.CAN_send_counter:00000000 $d
    {standard input}:364    .text.main:00000000 $t
    {standard input}:369    .text.main:00000000 main
    {standard input}:591    .text.Control_calc:00000000 Control_calc
    {standard input}:462    .text.main:0000007c $d
    {standard input}:472    .text.CCU43_1_IRQHandler:00000000 $t
    {standard input}:477    .text.CCU43_1_IRQHandler:00000000 CCU43_1_IRQHandler
    {standard input}:505    .text.CCU80_3_IRQHandler:00000000 $t
    {standard input}:510    .text.CCU80_3_IRQHandler:00000000 CCU80_3_IRQHandler
    {standard input}:571    .text.CCU80_3_IRQHandler:00000058 $d
    {standard input}:586    .text.Control_calc:00000000 $t
    {standard input}:892    .text.Control_calc:000002a0 $d
    {standard input}:920    .text.Control_calc:00000308 $t
    {standard input}:1224   .text.Control_calc:000005b8 $d
    {standard input}:1258   .text.Control_calc:00000638 $t
    {standard input}:1346   .text.Control_calc:00000700 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
DAVE_Init
Hall_init
CAN_NODE_Init
omega_param_selctor
PWM_SVM_Start
Hall_postion_speed_estimation
CAN_send
CAN_NODE_0
PWM_SVM_0
status_LED_red_cal_time
PWM_SVM_SVMUpdate
__aeabi_f2d
__aeabi_dmul
__aeabi_d2f
__aeabi_dsub
__aeabi_ddiv
__aeabi_dcmpeq
__aeabi_dadd
readCurrent
cosf
sinf
angle_phi
CAN_new_meassage
CAN_speed_ref
CAN_no_com_counter
omega_mech_rps
PI_Controller
copysign
atanf
omega_param
Id_param
Iq_param
sqrtf
V_DC_link
